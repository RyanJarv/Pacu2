[tool.poetry]
name = "pacu"
version = "2.0"
description = "The AWS exploitation framework, designed for testing the security of Amazon Web Services environments."
license = "MIT"
authors = ["Ryan Gerstenkorn <ryan.gerstenkorn@rhinosecuritylabs.com>"]
readme = "README.md"
homepage = "https://pypi.org/project/pacu"
documentation = "https://pacu.readthedocs.io"
repository = "https://github.com/RyanJarv/pacu"
keywords = []
classifiers = [
    # TODO: update this list to match your application: https://pypi.org/pypi?%3Aaction=list_classifiers
    "Development Status :: 1 - Planning",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"

#minilog = "^2.0"
typer = "^0.3.2"
#steampipe-alchemy = {git = "https://github.com/RyanJarv/steampipe_alchemy.git", rev = "main"}
ptpython = "^3.0.19"
prompt-toolkit = "^3.0.19"
boto3 = "^1.17.109"
sqlite-utils = "^3.12"
boto3-stubs = {extras = ["sts"], version = "^1.20.26"}

[tool.poetry.dev-dependencies]
# Types
types-setuptools = "^57.0.0"
boto3-stubs = {extras = ["iam"], version = "^1.17.109"}

# Formatters
black = ">=20.8b1"
isort = ">=5.5.1"

# Linters
mypy = "*"
pydocstyle = "*"
pylint = ">=2.6.0"

# Testing
pytest = ">=5.3.2"
pytest-cov = "*"
pytest-describe = { git = "https://github.com/pytest-dev/pytest-describe", rev = "453aa9045b265e313f356f1492d8991c02a6aea6" } # use 2.0 when released
pytest-expecter = "^2.1"
pytest-random = "*"
freezegun = "*"

# Reports
coveragespace = "^4.0"

# Documentation
mkdocs = "~1.0"
pygments = "^2.5.2"

# Tooling
pyinstaller = "*"  # TODO: 0Failing install on alpine atm
sniffer = "*"

# Tooling -- MacOS
#MacFSEvents = { version = "*", platform = "darwin" }
#pync = { version = "*", platform = "darwin" }
#ipython = "^7.12.0"

# Tooling -- Linux
pyinotify = { version = "*", platform = "linux" }

[tool.poetry.scripts]
pacu = "pacu.cli:app"

[tool.black]
target-version = ["py37", "py38", "py39"]
skip-string-normalization = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

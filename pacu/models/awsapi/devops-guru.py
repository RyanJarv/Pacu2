# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:47:28+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class AccessDeniedException(BaseModel):
    __root__: Any


class ConflictException(AccessDeniedException):
    pass


class InternalServerException(AccessDeniedException):
    pass


class ResourceNotFoundException(AccessDeniedException):
    pass


class ServiceQuotaExceededException(AccessDeniedException):
    pass


class ThrottlingException(AccessDeniedException):
    pass


class ValidationException(AccessDeniedException):
    pass


class Timestamp(BaseModel):
    __root__: datetime


class InsightId(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1, regex='^[\\w-]*$')]


class EventTimeRange(BaseModel):
    """
    The time range during which an AWS event occurred. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions.
    """

    FromTime: Timestamp
    ToTime: Timestamp


class EventClass(Enum):
    INFRASTRUCTURE = 'INFRASTRUCTURE'
    DEPLOYMENT = 'DEPLOYMENT'
    SECURITY_CHANGE = 'SECURITY_CHANGE'
    CONFIG_CHANGE = 'CONFIG_CHANGE'
    SCHEMA_CHANGE = 'SCHEMA_CHANGE'


class EventSource(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=50,
            min_length=10,
            regex='^[a-z]+[a-z0-9]*\\.amazonaws\\.com|aws\\.events$',
        ),
    ]


class EventDataSource(Enum):
    AWS_CLOUD_TRAIL = 'AWS_CLOUD_TRAIL'
    AWS_CODE_DEPLOY = 'AWS_CODE_DEPLOY'


class PutFeedbackResponse(BaseModel):
    pass


class InsightFeedbackOption(Enum):
    VALID_COLLECTION = 'VALID_COLLECTION'
    RECOMMENDATION_USEFUL = 'RECOMMENDATION_USEFUL'
    ALERT_TOO_SENSITIVE = 'ALERT_TOO_SENSITIVE'
    DATA_NOISY_ANOMALY = 'DATA_NOISY_ANOMALY'
    DATA_INCORRECT = 'DATA_INCORRECT'


class RemoveNotificationChannelResponse(PutFeedbackResponse):
    pass


class StartCostEstimationResponse(PutFeedbackResponse):
    pass


class UpdateResourceCollectionResponse(PutFeedbackResponse):
    pass


class UpdateServiceIntegrationResponse(PutFeedbackResponse):
    pass


class NotificationChannelId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$',
        ),
    ]


class AnomalyId(InsightId):
    pass


class AnomalyLimit(BaseModel):
    __root__: float


class AnomalyReportedTimeRange(BaseModel):
    """
    A time range that specifies when DevOps Guru opens and then closes an anomaly. This is different from <code>AnomalyTimeRange</code>, which specifies the time range when DevOps Guru actually observes the anomalous behavior.
    """

    OpenTime: Timestamp
    CloseTime: Optional[Timestamp] = None


class AnomalySeverity(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class AnomalyStatus(Enum):
    ONGOING = 'ONGOING'
    CLOSED = 'CLOSED'


class AnomalyTimeRange(BaseModel):
    """
    A time range that specifies when the observed unusual behavior in an anomaly started and ended. This is different from <code>AnomalyReportedTimeRange</code>, which specifies the time range when DevOps Guru opens and then closes an anomaly.
    """

    StartTime: Timestamp
    EndTime: Optional[Timestamp] = None


class ClientToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[a-zA-Z0-9]+[a-zA-Z0-9-]*$')
    ]


class StackName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z*]+[a-zA-Z0-9-]*$')
    ]


class CloudWatchMetricsMetricName(BaseModel):
    __root__: str


class CloudWatchMetricsNamespace(CloudWatchMetricsMetricName):
    pass


class CloudWatchMetricsStat(Enum):
    Sum = 'Sum'
    Average = 'Average'
    SampleCount = 'SampleCount'
    Minimum = 'Minimum'
    Maximum = 'Maximum'
    p99 = 'p99'
    p90 = 'p90'
    p50 = 'p50'


class CloudWatchMetricsUnit(CloudWatchMetricsMetricName):
    pass


class CloudWatchMetricsPeriod(BaseModel):
    __root__: int


class CloudWatchMetricsDimensionName(CloudWatchMetricsMetricName):
    pass


class CloudWatchMetricsDimensionValue(CloudWatchMetricsMetricName):
    pass


class CloudWatchMetricsDimension(BaseModel):
    """
    The dimension of a Amazon CloudWatch metric that is used when DevOps Guru analyzes the resources in your account for operational problems and anomalous behavior. A dimension is a name/value pair that is part of the identity of a metric. A metric can have up to 10 dimensions. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension">Dimensions</a> in the <i>Amazon CloudWatch User Guide</i>.
    """

    Name: Optional[CloudWatchMetricsDimensionName] = None
    Value: Optional[CloudWatchMetricsDimensionValue] = None


class Cost(AnomalyLimit):
    pass


class CostEstimationServiceResourceCount(CloudWatchMetricsPeriod):
    pass


class CostEstimationServiceResourceState(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class CostEstimationStatus(Enum):
    ONGOING = 'ONGOING'
    COMPLETED = 'COMPLETED'


class CostEstimationTimeRange(BaseModel):
    """
    The time range of a cost estimation.
    """

    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None


class DescribeAccountHealthRequest(BaseModel):
    pass


class NumOpenReactiveInsights(CloudWatchMetricsPeriod):
    pass


class NumOpenProactiveInsights(CloudWatchMetricsPeriod):
    pass


class NumMetricsAnalyzed(CloudWatchMetricsPeriod):
    pass


class ResourceHours(CloudWatchMetricsPeriod):
    pass


class DescribeAccountOverviewRequest(BaseModel):
    FromTime: Timestamp
    ToTime: Optional[Timestamp] = None


class NumReactiveInsights(CloudWatchMetricsPeriod):
    pass


class NumProactiveInsights(CloudWatchMetricsPeriod):
    pass


class MeanTimeToRecoverInMilliseconds(CloudWatchMetricsPeriod):
    pass


class DescribeAnomalyRequest(BaseModel):
    pass


class DescribeFeedbackRequest(BaseModel):
    InsightId: Optional[InsightId] = None


class InsightFeedback(BaseModel):
    """
    Information about insight feedback received from a customer.
    """

    Id: Optional[InsightId] = None
    Feedback: Optional[InsightFeedbackOption] = None


class DescribeInsightRequest(BaseModel):
    pass


class ResourceCollectionType(Enum):
    AWS_CLOUD_FORMATION = 'AWS_CLOUD_FORMATION'
    AWS_SERVICE = 'AWS_SERVICE'


class UuidNextToken(NotificationChannelId):
    pass


class DescribeResourceCollectionHealthRequest(BaseModel):
    pass


class DescribeServiceIntegrationRequest(BaseModel):
    pass


class EndTimeRange(BaseModel):
    """
    A range of time that specifies when anomalous behavior in an anomaly or insight ended.
    """

    FromTime: Optional[Timestamp] = None
    ToTime: Optional[Timestamp] = None


class EventId(CloudWatchMetricsMetricName):
    pass


class EventName(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=0)]


class EventResourceType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0, regex='^.*$')]


class EventResourceName(EventResourceType):
    pass


class EventResourceArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=36,
            regex='^arn:aws[-a-z]*:[a-z0-9-]*:[a-z0-9-]*:\\d{12}:.*$',
        ),
    ]


class EventResource(BaseModel):
    """
    The AWS resource that emitted an event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions.
    """

    Type: Optional[EventResourceType] = None
    Name: Optional[EventResourceName] = None
    Arn: Optional[EventResourceArn] = None


class GetCostEstimationRequest(BaseModel):
    pass


class GetResourceCollectionRequest(BaseModel):
    pass


class InsightName(BaseModel):
    __root__: Annotated[str, Field(max_length=530, min_length=1, regex='^[\\s\\S]*$')]


class InsightTimeRange(AnomalyTimeRange):
    """
    A time ranged that specifies when the observed behavior in an insight started and ended.
    """

    pass


class InsightType(Enum):
    REACTIVE = 'REACTIVE'
    PROACTIVE = 'PROACTIVE'


class ListAnomaliesForInsightMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=500.0)]


class StartTimeRange(EndTimeRange):
    """
    A time range used to specify when the behavior of an insight or anomaly started.
    """

    pass


class ListAnomaliesForInsightRequest(BaseModel):
    StartTimeRange: Optional[StartTimeRange] = None
    MaxResults: Optional[ListAnomaliesForInsightMaxResults] = None
    NextToken: Optional[UuidNextToken] = None


class ListEventsMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=200.0)]


class ListInsightsMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ListNotificationChannelsRequest(BaseModel):
    NextToken: Optional[UuidNextToken] = None


class Locale(Enum):
    DE_DE = 'DE_DE'
    EN_US = 'EN_US'
    EN_GB = 'EN_GB'
    ES_ES = 'ES_ES'
    FR_FR = 'FR_FR'
    IT_IT = 'IT_IT'
    JA_JP = 'JA_JP'
    KO_KR = 'KO_KR'
    PT_BR = 'PT_BR'
    ZH_CN = 'ZH_CN'
    ZH_TW = 'ZH_TW'


class ListRecommendationsRequest(BaseModel):
    InsightId: InsightId
    NextToken: Optional[UuidNextToken] = None
    Locale: Optional[Locale] = None


class OptInStatus(Enum):
    """
    Specifies if DevOps Guru is enabled to create an AWS Systems Manager OpsItem for each created insight.
    """

    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class OpsCenterIntegration(BaseModel):
    """
    Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight.
    """

    OptInStatus: Optional[OptInStatus] = None


class PredictionTimeRange(AnomalyTimeRange):
    """
    The time range during which anomalous behavior in a proactive anomaly or an insight is expected to occur.
    """

    pass


class SsmOpsItemId(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1, regex='^.*$')]


class PutFeedbackRequest(BaseModel):
    InsightFeedback: Optional[InsightFeedback] = None


class RecommendationDescription(CloudWatchMetricsMetricName):
    pass


class RecommendationLink(CloudWatchMetricsMetricName):
    pass


class RecommendationName(CloudWatchMetricsMetricName):
    pass


class RecommendationReason(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedAnomalyResourceName(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedAnomalyResourceType(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedAnomalyResource(BaseModel):
    """
    Information about a resource in which DevOps Guru detected anomalous behavior.
    """

    Name: Optional[RecommendationRelatedAnomalyResourceName] = None
    Type: Optional[RecommendationRelatedAnomalyResourceType] = None


class RecommendationRelatedCloudWatchMetricsSourceMetricName(
    CloudWatchMetricsMetricName
):
    pass


class RecommendationRelatedCloudWatchMetricsSourceNamespace(
    CloudWatchMetricsMetricName
):
    pass


class RecommendationRelatedCloudWatchMetricsSourceDetail(BaseModel):
    """
    Information about an Amazon CloudWatch metric that is analyzed by DevOps Guru. It is one of many analyzed metrics that are used to generate insights.
    """

    MetricName: Optional[RecommendationRelatedCloudWatchMetricsSourceMetricName] = None
    Namespace: Optional[RecommendationRelatedCloudWatchMetricsSourceNamespace] = None


class RecommendationRelatedEventName(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedEventResourceName(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedEventResourceType(CloudWatchMetricsMetricName):
    pass


class RecommendationRelatedEventResource(BaseModel):
    """
    Information about an AWS resource that emitted and event that is related to a recommendation in an insight.
    """

    Name: Optional[RecommendationRelatedEventResourceName] = None
    Type: Optional[RecommendationRelatedEventResourceType] = None


class RemoveNotificationChannelRequest(BaseModel):
    pass


class ResourceType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^[a-zA-Z]+[a-zA-Z0-9-_:]*$')
    ]


class SearchInsightsMaxResults(ListInsightsMaxResults):
    pass


class ServiceName(Enum):
    API_GATEWAY = 'API_GATEWAY'
    APPLICATION_ELB = 'APPLICATION_ELB'
    AUTO_SCALING_GROUP = 'AUTO_SCALING_GROUP'
    CLOUD_FRONT = 'CLOUD_FRONT'
    DYNAMO_DB = 'DYNAMO_DB'
    EC2 = 'EC2'
    ECS = 'ECS'
    EKS = 'EKS'
    ELASTIC_BEANSTALK = 'ELASTIC_BEANSTALK'
    ELASTI_CACHE = 'ELASTI_CACHE'
    ELB = 'ELB'
    ES = 'ES'
    KINESIS = 'KINESIS'
    LAMBDA = 'LAMBDA'
    NAT_GATEWAY = 'NAT_GATEWAY'
    NETWORK_ELB = 'NETWORK_ELB'
    RDS = 'RDS'
    REDSHIFT = 'REDSHIFT'
    ROUTE_53 = 'ROUTE_53'
    S3 = 'S3'
    SAGE_MAKER = 'SAGE_MAKER'
    SNS = 'SNS'
    SQS = 'SQS'
    STEP_FUNCTIONS = 'STEP_FUNCTIONS'
    SWF = 'SWF'


class ServiceInsightHealth(BaseModel):
    """
    Contains the number of open proactive and reactive insights in an analyzed AWS service.
    """

    OpenProactiveInsights: Optional[NumOpenProactiveInsights] = None
    OpenReactiveInsights: Optional[NumOpenReactiveInsights] = None


class ServiceHealth(BaseModel):
    """
    Represents the health of an AWS service.
    """

    ServiceName: Optional[ServiceName] = None
    Insight: Optional[ServiceInsightHealth] = None


class ServiceResourceCost(BaseModel):
    """
    An object that contains information about the estimated monthly cost to analyze an AWS resource. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.
    """

    Type: Optional[ResourceType] = None
    State: Optional[CostEstimationServiceResourceState] = None
    Count: Optional[CostEstimationServiceResourceCount] = None
    UnitCost: Optional[Cost] = None
    Cost: Optional[Cost] = None


class TopicArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1024,
            min_length=36,
            regex='^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\\d{12}:[^:]+$',
        ),
    ]


class UpdateStackNames(BaseModel):
    __root__: Annotated[List[StackName], Field(max_items=100, min_items=0)]


class UpdateResourceCollectionAction(Enum):
    ADD = 'ADD'
    REMOVE = 'REMOVE'


class AddNotificationChannelResponse(BaseModel):
    Id: NotificationChannelId


class SnsChannelConfig(BaseModel):
    """
    <p> Contains the Amazon Resource Name (ARN) of an Amazon Simple Notification Service topic. </p> <p>If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html">Permissions for cross account Amazon SNS topics</a>.</p> <p>If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html">Permissions for AWS KMS–encrypted Amazon SNS topics</a>.</p>
    """

    TopicArn: Optional[TopicArn] = None


class DescribeAccountHealthResponse(BaseModel):
    OpenReactiveInsights: NumOpenReactiveInsights
    OpenProactiveInsights: NumOpenProactiveInsights
    MetricsAnalyzed: NumMetricsAnalyzed
    ResourceHours: ResourceHours


class DescribeAccountOverviewResponse(BaseModel):
    ReactiveInsights: NumReactiveInsights
    ProactiveInsights: NumProactiveInsights
    MeanTimeToRecoverInMilliseconds: MeanTimeToRecoverInMilliseconds


class DescribeFeedbackResponse(BaseModel):
    InsightFeedback: Optional[InsightFeedback] = None


class ListInsightsOngoingStatusFilter(BaseModel):
    """
    Used to filter for insights that have the status <code>ONGOING</code>.
    """

    Type: InsightType


class ListInsightsClosedStatusFilter(BaseModel):
    """
    Used to filter for insights that have the status <code>CLOSED</code>.
    """

    Type: InsightType
    EndTimeRange: EndTimeRange


class ListInsightsAnyStatusFilter(BaseModel):
    """
    Used to filter for insights that have any status.
    """

    Type: InsightType
    StartTimeRange: StartTimeRange


class InsightSeverities(BaseModel):
    __root__: Annotated[List[AnomalySeverity], Field(max_items=3, min_items=0)]


class InsightStatuses(BaseModel):
    __root__: Annotated[List[AnomalyStatus], Field(max_items=2, min_items=0)]


class UpdateCloudFormationCollectionFilter(BaseModel):
    """
    Contains the names of AWS CloudFormation stacks used to update a collection of stacks. You can specify up to 500 AWS CloudFormation stacks.
    """

    StackNames: Optional[UpdateStackNames] = None


class OpsCenterIntegrationConfig(OpsCenterIntegration):
    """
    Information about whether DevOps Guru is configured to create an OpsItem in AWS Systems Manager OpsCenter for each created insight.
    """

    pass


class NotificationChannelConfig(BaseModel):
    """
    Information about notification channels you have configured with DevOps Guru. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
    """

    Sns: SnsChannelConfig


class AddNotificationChannelRequest(BaseModel):
    Config_: Annotated[NotificationChannelConfig, Field(alias='Config')]


class NotificationChannel(BaseModel):
    """
    <p> Information about a notification channel. A notification channel is used to notify you when DevOps Guru creates an insight. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS). </p> <p>If you use an Amazon SNS topic in another account, you must attach a policy to it that grants DevOps Guru permission to it notifications. DevOps Guru adds the required policy on your behalf to send notifications using Amazon SNS in your account. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-required-permissions.html">Permissions for cross account Amazon SNS topics</a>.</p> <p>If you use an Amazon SNS topic that is encrypted by an AWS Key Management Service customer-managed key (CMK), then you must add permissions to the CMK. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/sns-kms-permissions.html">Permissions for AWS KMS–encrypted Amazon SNS topics</a>.</p>
    """

    Id: Optional[NotificationChannelId] = None
    Config_: Annotated[
        Optional[NotificationChannelConfig], Field(alias='Config')
    ] = None


class Channels(BaseModel):
    __root__: List[NotificationChannel]


class StackNames2(BaseModel):
    __root__: List[StackName]


class CloudFormationCollection(BaseModel):
    """
    Information about AWS CloudFormation stacks. You can use up to 500 stacks to specify which AWS resources in your account to analyze. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>AWS CloudFormation User Guide</i>.
    """

    StackNames: Optional[StackNames2] = None


class CloudFormationCollectionFilter(CloudFormationCollection):
    """
    Information about AWS CloudFormation stacks. You can use up to 500 stacks to specify which AWS resources in your account to analyze. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>AWS CloudFormation User Guide</i>.
    """

    pass


class CostEstimationStackNames(BaseModel):
    __root__: Annotated[List[StackName], Field(max_items=1, min_items=1)]


class InsightHealth(BaseModel):
    """
    Information about the number of open reactive and proactive insights that can be used to gauge the health of your system.
    """

    OpenProactiveInsights: Optional[NumOpenProactiveInsights] = None
    OpenReactiveInsights: Optional[NumOpenReactiveInsights] = None
    MeanTimeToRecoverInMilliseconds: Optional[MeanTimeToRecoverInMilliseconds] = None


class CloudFormationHealth(BaseModel):
    """
    Information about the health of AWS resources in your account that are specified by an AWS CloudFormation stack.
    """

    StackName: Optional[StackName] = None
    Insight: Optional[InsightHealth] = None


class CloudFormationHealths(BaseModel):
    __root__: List[CloudFormationHealth]


class CloudWatchMetricsDimensions(BaseModel):
    __root__: List[CloudWatchMetricsDimension]


class CloudWatchMetricsDetail(BaseModel):
    """
    Information about an Amazon CloudWatch metric.
    """

    MetricName: Optional[CloudWatchMetricsMetricName] = None
    Namespace: Optional[CloudWatchMetricsNamespace] = None
    Dimensions: Optional[CloudWatchMetricsDimensions] = None
    Stat: Optional[CloudWatchMetricsStat] = None
    Unit: Optional[CloudWatchMetricsUnit] = None
    Period: Optional[CloudWatchMetricsPeriod] = None


class ServiceHealths(BaseModel):
    __root__: List[ServiceHealth]


class ServiceIntegrationConfig(BaseModel):
    """
    Information about the integration of DevOps Guru with another AWS service, such as AWS Systems Manager.
    """

    OpsCenter: Optional[OpsCenterIntegration] = None


class EventResources(BaseModel):
    __root__: List[EventResource]


class ServiceResourceCosts(BaseModel):
    __root__: List[ServiceResourceCost]


class ResourceCollectionFilter(BaseModel):
    """
    Information about a filter used to specify which AWS resources are analyzed for anomalous behavior by DevOps Guru.
    """

    CloudFormation: Optional[CloudFormationCollectionFilter] = None


class ListInsightsStatusFilter(BaseModel):
    """
    A filter used by <code>ListInsights</code> to specify which insights to return.
    """

    Ongoing: Optional[ListInsightsOngoingStatusFilter] = None
    Closed: Optional[ListInsightsClosedStatusFilter] = None
    Any: Optional[ListInsightsAnyStatusFilter] = None


class ListInsightsRequest(BaseModel):
    StatusFilter: ListInsightsStatusFilter
    MaxResults: Optional[ListInsightsMaxResults] = None
    NextToken: Optional[UuidNextToken] = None


class RecommendationRelatedAnomalyResources(BaseModel):
    __root__: List[RecommendationRelatedAnomalyResource]


class RecommendationRelatedCloudWatchMetricsSourceDetails(BaseModel):
    __root__: List[RecommendationRelatedCloudWatchMetricsSourceDetail]


class RecommendationRelatedAnomalySourceDetail(BaseModel):
    """
    Contains an array of <code>RecommendationRelatedCloudWatchMetricsSourceDetail</code> objects that contain the name and namespace of an Amazon CloudWatch metric.
    """

    CloudWatchMetrics: Optional[
        RecommendationRelatedCloudWatchMetricsSourceDetails
    ] = None


class RecommendationRelatedEventResources(BaseModel):
    __root__: List[RecommendationRelatedEventResource]


class RecommendationRelatedEvent(BaseModel):
    """
    Information about an event that is related to a recommendation.
    """

    Name: Optional[RecommendationRelatedEventName] = None
    Resources: Optional[RecommendationRelatedEventResources] = None


class ServiceNames(BaseModel):
    __root__: List[ServiceName]


class UpdateResourceCollectionFilter(BaseModel):
    """
    Contains information used to update a collection of AWS resources.
    """

    CloudFormation: Optional[UpdateCloudFormationCollectionFilter] = None


class UpdateResourceCollectionRequest(BaseModel):
    Action: UpdateResourceCollectionAction
    ResourceCollection: UpdateResourceCollectionFilter


class UpdateServiceIntegrationConfig(BaseModel):
    """
    Information about updating the integration status of an AWS service, such as AWS Systems Manager, with DevOps Guru.
    """

    OpsCenter: Optional[OpsCenterIntegrationConfig] = None


class UpdateServiceIntegrationRequest(BaseModel):
    ServiceIntegration: UpdateServiceIntegrationConfig


class DescribeResourceCollectionHealthResponse(BaseModel):
    CloudFormation: CloudFormationHealths
    Service: Optional[ServiceHealths] = None
    NextToken: Optional[UuidNextToken] = None


class DescribeServiceIntegrationResponse(BaseModel):
    ServiceIntegration: Optional[ServiceIntegrationConfig] = None


class GetResourceCollectionResponse(BaseModel):
    ResourceCollection: Optional[ResourceCollectionFilter] = None
    NextToken: Optional[UuidNextToken] = None


class ResourceCollection2(BaseModel):
    """
    A collection of AWS resources supported by DevOps Guru. The one type of AWS resource collection supported is AWS CloudFormation stacks. DevOps Guru can be configured to analyze only the AWS resources that are defined in the stacks. You can specify up to 500 AWS CloudFormation stacks.
    """

    CloudFormation: Optional[CloudFormationCollection] = None


class ListNotificationChannelsResponse(BaseModel):
    Channels: Optional[Channels] = None
    NextToken: Optional[UuidNextToken] = None


class ServiceCollection(BaseModel):
    """
    A collection of the names of AWS services.
    """

    ServiceNames: Optional[ServiceNames] = None


class CloudFormationCostEstimationResourceCollectionFilter(BaseModel):
    """
    Information about an AWS CloudFormation stack used to create a monthly cost estimate for DevOps Guru to analyze AWS resources. The maximum number of stacks you can specify for a cost estimate is one. The estimate created is for the cost to analyze the AWS resources defined by the stack. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacks.html">Stacks</a> in the <i>AWS CloudFormation User Guide</i>.
    """

    StackNames: Optional[CostEstimationStackNames] = None


class CloudWatchMetricsDetails(BaseModel):
    __root__: List[CloudWatchMetricsDetail]


class AnomalySourceDetails(BaseModel):
    """
    Details about the source of the anomalous operational data that triggered the anomaly. The one supported source is Amazon CloudWatch metrics.
    """

    CloudWatchMetrics: Optional[CloudWatchMetricsDetails] = None


class CostEstimationResourceCollectionFilter(BaseModel):
    """
    Information about a filter used to specify which AWS resources are analyzed to create a monthly DevOps Guru cost estimate. For more information, see <a href="https://docs.aws.amazon.com/devops-guru/latest/userguide/cost-estimate.html">Estimate your Amazon DevOps Guru costs</a> and <a href="http://aws.amazon.com/devops-guru/pricing/">Amazon DevOps Guru pricing</a>.
    """

    CloudFormation: Optional[
        CloudFormationCostEstimationResourceCollectionFilter
    ] = None


class ProactiveAnomaly(BaseModel):
    """
    Information about an anomaly. This object is returned by <code>ListAnomalies</code>.
    """

    Id: Optional[AnomalyId] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    UpdateTime: Optional[Timestamp] = None
    AnomalyTimeRange: Optional[AnomalyTimeRange] = None
    AnomalyReportedTimeRange: Optional[AnomalyReportedTimeRange] = None
    PredictionTimeRange: Optional[PredictionTimeRange] = None
    SourceDetails: Optional[AnomalySourceDetails] = None
    AssociatedInsightId: Optional[InsightId] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    Limit: Optional[AnomalyLimit] = None


class ReactiveAnomaly(BaseModel):
    """
    Details about a reactive anomaly. This object is returned by <code>ListAnomalies</code>.
    """

    Id: Optional[AnomalyId] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    AnomalyTimeRange: Optional[AnomalyTimeRange] = None
    AnomalyReportedTimeRange: Optional[AnomalyReportedTimeRange] = None
    SourceDetails: Optional[AnomalySourceDetails] = None
    AssociatedInsightId: Optional[InsightId] = None
    ResourceCollection: Optional[ResourceCollection2] = None


class ProactiveInsight(BaseModel):
    """
    Details about a proactive insight. This object is returned by <code>ListInsights</code>.
    """

    Id: Optional[InsightId] = None
    Name: Optional[InsightName] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    InsightTimeRange: Optional[InsightTimeRange] = None
    PredictionTimeRange: Optional[PredictionTimeRange] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    SsmOpsItemId: Optional[SsmOpsItemId] = None


class ReactiveInsight(BaseModel):
    """
    Information about a reactive insight. This object is returned by <code>ListInsights</code>.
    """

    Id: Optional[InsightId] = None
    Name: Optional[InsightName] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    InsightTimeRange: Optional[InsightTimeRange] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    SsmOpsItemId: Optional[SsmOpsItemId] = None


class Event(BaseModel):
    """
    An AWS resource event. AWS resource events and metrics are analyzed by DevOps Guru to find anomalous behavior and provide recommendations to improve your operational solutions.
    """

    ResourceCollection: Optional[ResourceCollection2] = None
    Id: Optional[EventId] = None
    Time: Optional[Timestamp] = None
    EventSource: Optional[EventSource] = None
    Name: Optional[EventName] = None
    DataSource: Optional[EventDataSource] = None
    EventClass: Optional[EventClass] = None
    Resources: Optional[EventResources] = None


class Events(BaseModel):
    __root__: List[Event]


class ListEventsFilters(BaseModel):
    """
    Filters you can use to specify which events are returned when <code>ListEvents</code> is called.
    """

    InsightId: Optional[InsightId] = None
    EventTimeRange: Optional[EventTimeRange] = None
    EventClass: Optional[EventClass] = None
    EventSource: Optional[EventSource] = None
    DataSource: Optional[EventDataSource] = None
    ResourceCollection: Optional[ResourceCollection2] = None


class ListEventsRequest(BaseModel):
    Filters: ListEventsFilters
    MaxResults: Optional[ListEventsMaxResults] = None
    NextToken: Optional[UuidNextToken] = None


class ProactiveAnomalySummary(ProactiveAnomaly):
    """
    Details about a proactive anomaly. This object is returned by <code>DescribeAnomaly.</code>
    """

    pass


class ProactiveInsightSummary(BaseModel):
    """
    Details about a proactive insight. This object is returned by <code>DescribeInsight.</code>
    """

    Id: Optional[InsightId] = None
    Name: Optional[InsightName] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    InsightTimeRange: Optional[InsightTimeRange] = None
    PredictionTimeRange: Optional[PredictionTimeRange] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    ServiceCollection: Optional[ServiceCollection] = None


class ReactiveAnomalySummary(ReactiveAnomaly):
    """
    Details about a reactive anomaly. This object is returned by <code>DescribeAnomaly.</code>
    """

    pass


class ReactiveInsightSummary(BaseModel):
    """
    Information about a reactive insight. This object is returned by <code>DescribeInsight.</code>
    """

    Id: Optional[InsightId] = None
    Name: Optional[InsightName] = None
    Severity: Optional[AnomalySeverity] = None
    Status: Optional[AnomalyStatus] = None
    InsightTimeRange: Optional[InsightTimeRange] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    ServiceCollection: Optional[ServiceCollection] = None


class RecommendationRelatedEvents(BaseModel):
    __root__: List[RecommendationRelatedEvent]


class RelatedAnomalySourceDetails(BaseModel):
    __root__: List[RecommendationRelatedAnomalySourceDetail]


class SearchInsightsFilters(BaseModel):
    """
    Specifies one or more severity values and one or more status values that are used to search for insights.
    """

    Severities: Optional[InsightSeverities] = None
    Statuses: Optional[InsightStatuses] = None
    ResourceCollection: Optional[ResourceCollection2] = None
    ServiceCollection: Optional[ServiceCollection] = None


class SearchInsightsRequest(BaseModel):
    StartTimeRange: StartTimeRange
    Filters: Optional[SearchInsightsFilters] = None
    MaxResults: Optional[SearchInsightsMaxResults] = None
    NextToken: Optional[UuidNextToken] = None
    Type: InsightType


class StartCostEstimationRequest(BaseModel):
    ResourceCollection: CostEstimationResourceCollectionFilter
    ClientToken: Optional[ClientToken] = None


class DescribeAnomalyResponse(BaseModel):
    ProactiveAnomaly: Optional[ProactiveAnomaly] = None
    ReactiveAnomaly: Optional[ReactiveAnomaly] = None


class DescribeInsightResponse(BaseModel):
    ProactiveInsight: Optional[ProactiveInsight] = None
    ReactiveInsight: Optional[ReactiveInsight] = None


class GetCostEstimationResponse(BaseModel):
    ResourceCollection: Optional[CostEstimationResourceCollectionFilter] = None
    Status: Optional[CostEstimationStatus] = None
    Costs: Optional[ServiceResourceCosts] = None
    TimeRange: Optional[CostEstimationTimeRange] = None
    TotalCost: Optional[Cost] = None
    NextToken: Optional[UuidNextToken] = None


class ListEventsResponse(BaseModel):
    Events: Events
    NextToken: Optional[UuidNextToken] = None


class ProactiveAnomalies(BaseModel):
    __root__: List[ProactiveAnomalySummary]


class ReactiveAnomalies(BaseModel):
    __root__: List[ReactiveAnomalySummary]


class ProactiveInsights(BaseModel):
    __root__: List[ProactiveInsightSummary]


class ReactiveInsights(BaseModel):
    __root__: List[ReactiveInsightSummary]


class RecommendationRelatedAnomaly(BaseModel):
    """
    Information about an anomaly that is related to a recommendation.
    """

    Resources: Optional[RecommendationRelatedAnomalyResources] = None
    SourceDetails: Optional[RelatedAnomalySourceDetails] = None


class ListAnomaliesForInsightResponse(BaseModel):
    ProactiveAnomalies: Optional[ProactiveAnomalies] = None
    ReactiveAnomalies: Optional[ReactiveAnomalies] = None
    NextToken: Optional[UuidNextToken] = None


class ListInsightsResponse(BaseModel):
    ProactiveInsights: Optional[ProactiveInsights] = None
    ReactiveInsights: Optional[ReactiveInsights] = None
    NextToken: Optional[UuidNextToken] = None


class SearchInsightsResponse(ListInsightsResponse):
    pass


class RecommendationRelatedAnomalies(BaseModel):
    __root__: List[RecommendationRelatedAnomaly]


class Recommendation(BaseModel):
    """
    Recommendation information to help you remediate detected anomalous behavior that generated an insight.
    """

    Description: Optional[RecommendationDescription] = None
    Link: Optional[RecommendationLink] = None
    Name: Optional[RecommendationName] = None
    Reason: Optional[RecommendationReason] = None
    RelatedEvents: Optional[RecommendationRelatedEvents] = None
    RelatedAnomalies: Optional[RecommendationRelatedAnomalies] = None


class Recommendations(BaseModel):
    __root__: Annotated[List[Recommendation], Field(max_items=10, min_items=0)]


class ListRecommendationsResponse(BaseModel):
    Recommendations: Optional[Recommendations] = None
    NextToken: Optional[UuidNextToken] = None

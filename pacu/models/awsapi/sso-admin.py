# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:53+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field, SecretStr


class AttachManagedPolicyToPermissionSetResponse(BaseModel):
    pass


class ResourceNotFoundException(BaseModel):
    __root__: Any


class InternalServerException(ResourceNotFoundException):
    pass


class ServiceQuotaExceededException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class ValidationException(ResourceNotFoundException):
    pass


class AccessDeniedException(ResourceNotFoundException):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class CreateInstanceAccessControlAttributeConfigurationResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class DeleteInlinePolicyFromPermissionSetResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class DeleteInstanceAccessControlAttributeConfigurationResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class DeletePermissionSetResponse(AttachManagedPolicyToPermissionSetResponse):
    pass


class DetachManagedPolicyFromPermissionSetResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class PutInlinePolicyToPermissionSetResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class TagResourceResponse(AttachManagedPolicyToPermissionSetResponse):
    pass


class UntagResourceResponse(AttachManagedPolicyToPermissionSetResponse):
    pass


class UpdateInstanceAccessControlAttributeConfigurationResponse(
    AttachManagedPolicyToPermissionSetResponse
):
    pass


class UpdatePermissionSetResponse(AttachManagedPolicyToPermissionSetResponse):
    pass


class AccessControlAttributeKey(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=128, min_length=1, regex='[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]+'),
    ]


class AccessControlAttributeValueSource(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=0,
            regex='[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@\\[\\]\\{\\}\\$\\\\"]*',
        ),
    ]


class AccountId(BaseModel):
    __root__: Annotated[str, Field(regex='\\d{12}')]


class PermissionSetArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1224,
            min_length=10,
            regex='arn:aws:sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}',
        ),
    ]


class PrincipalType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'


class PrincipalId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=47,
            min_length=1,
            regex='^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$',
        ),
    ]


class AccountAssignment(BaseModel):
    """
    <p>The assignment that indicates a principal's limited access to a specified Amazon Web Services account with a specified permission set.</p> <note> <p>The term <i>principal</i> here refers to a user or group that is defined in Amazon Web Services SSO.</p> </note>
    """

    AccountId: Optional[AccountId] = None
    PermissionSetArn: Optional[PermissionSetArn] = None
    PrincipalType: Optional[PrincipalType] = None
    PrincipalId: Optional[PrincipalId] = None


class AccountAssignmentList(BaseModel):
    __root__: List[AccountAssignment]


class StatusValues(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    FAILED = 'FAILED'
    SUCCEEDED = 'SUCCEEDED'


class UUId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b'
        ),
    ]


class Reason(BaseModel):
    __root__: Annotated[str, Field(regex='[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*')]


class TargetId(AccountId):
    pass


class TargetType(Enum):
    AWS_ACCOUNT = 'AWS_ACCOUNT'


class Date(BaseModel):
    __root__: datetime


class AccountAssignmentOperationStatus(BaseModel):
    """
    The status of the creation or deletion operation of an assignment that a principal needs to access an account.
    """

    Status: Optional[StatusValues] = None
    RequestId: Optional[UUId] = None
    FailureReason: Optional[Reason] = None
    TargetId: Optional[TargetId] = None
    TargetType: Optional[TargetType] = None
    PermissionSetArn: Optional[PermissionSetArn] = None
    PrincipalType: Optional[PrincipalType] = None
    PrincipalId: Optional[PrincipalId] = None
    CreatedDate: Optional[Date] = None


class AccountAssignmentOperationStatusMetadata(BaseModel):
    """
    Provides information about the <a>AccountAssignment</a> creation request.
    """

    Status: Optional[StatusValues] = None
    RequestId: Optional[UUId] = None
    CreatedDate: Optional[Date] = None


class AccountAssignmentOperationStatusList(BaseModel):
    __root__: List[AccountAssignmentOperationStatusMetadata]


class AccountList(BaseModel):
    __root__: List[AccountId]


class InstanceArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1224,
            min_length=10,
            regex='arn:aws:sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}',
        ),
    ]


class ManagedPolicyArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class Name1(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class AttachedManagedPolicy(BaseModel):
    """
    A structure that stores the details of the IAM managed policy.
    """

    Name: Optional[Name1] = None
    Arn: Optional[ManagedPolicyArn] = None


class AttachedManagedPolicyList(BaseModel):
    __root__: List[AttachedManagedPolicy]


class PermissionSetName(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1, regex='[\\w+=,.@-]+')]


class PermissionSetDescription(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=700,
            min_length=1,
            regex='[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*',
        ),
    ]


class Duration(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='^(-?)P(?=\\d|T\\d)(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)([DW]))?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$',
        ),
    ]


class RelayState(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=240,
            min_length=1,
            regex='[a-zA-Z0-9&$@#\\\\\\/%?=~\\-_\'"|!:,.;*+\\[\\]\\ \\(\\)\\{\\}]+',
        ),
    ]


class PermissionSet(BaseModel):
    """
    An entity that contains IAM policies.
    """

    Name: Optional[PermissionSetName] = None
    PermissionSetArn: Optional[PermissionSetArn] = None
    Description: Optional[PermissionSetDescription] = None
    CreatedDate: Optional[Date] = None
    SessionDuration: Optional[Duration] = None
    RelayState: Optional[RelayState] = None


class InstanceAccessControlAttributeConfigurationStatus(Enum):
    ENABLED = 'ENABLED'
    CREATION_IN_PROGRESS = 'CREATION_IN_PROGRESS'
    CREATION_FAILED = 'CREATION_FAILED'


class InstanceAccessControlAttributeConfigurationStatusReason(BaseModel):
    __root__: str


class PermissionSetProvisioningStatus(BaseModel):
    """
    A structure that is used to provide the status of the provisioning operation for a specified permission set.
    """

    Status: Optional[StatusValues] = None
    RequestId: Optional[UUId] = None
    AccountId: Optional[AccountId] = None
    PermissionSetArn: Optional[PermissionSetArn] = None
    FailureReason: Optional[Reason] = None
    CreatedDate: Optional[Date] = None


class GeneralArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=10,
            regex='arn:aws:sso:([a-zA-Z0-9-]+)?:(\\d{12})?:[a-zA-Z0-9-]+/[a-zA-Z0-9-/.]+',
        ),
    ]


class PermissionSetPolicyDocument(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=10240,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class Id(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9-]*')]


class InstanceMetadata(BaseModel):
    """
    Provides information about the SSO instance.
    """

    InstanceArn: Optional[InstanceArn] = None
    IdentityStoreId: Optional[Id] = None


class InstanceList(BaseModel):
    __root__: List[InstanceMetadata]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class Token(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, regex='^[-a-zA-Z0-9+=/_]*')]


class OperationStatusFilter(BaseModel):
    """
    Filters he operation status list based on the passed attribute value.
    """

    Status: Optional[StatusValues] = None


class ProvisioningStatus(Enum):
    LATEST_PERMISSION_SET_PROVISIONED = 'LATEST_PERMISSION_SET_PROVISIONED'
    LATEST_PERMISSION_SET_NOT_PROVISIONED = 'LATEST_PERMISSION_SET_NOT_PROVISIONED'


class PermissionSetList(BaseModel):
    __root__: List[PermissionSetArn]


class PermissionSetProvisioningStatusMetadata(AccountAssignmentOperationStatusMetadata):
    """
    Provides information about the permission set provisioning status.
    """

    pass


class ProvisionTargetType(Enum):
    AWS_ACCOUNT = 'AWS_ACCOUNT'
    ALL_PROVISIONED_ACCOUNTS = 'ALL_PROVISIONED_ACCOUNTS'


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class TagValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=0, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class Tag(BaseModel):
    """
    A set of key-value pairs that are used to manage the resource. Tags can only be applied to permission sets and cannot be applied to corresponding roles that Amazon Web Services SSO creates in Amazon Web Services accounts.
    """

    Key: Optional[TagKey] = None
    Value: Optional[TagValue] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class AttachManagedPolicyToPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    ManagedPolicyArn: ManagedPolicyArn


class CreateAccountAssignmentResponse(BaseModel):
    AccountAssignmentCreationStatus: Optional[AccountAssignmentOperationStatus] = None


class CreateAccountAssignmentRequest(BaseModel):
    InstanceArn: InstanceArn
    TargetId: TargetId
    TargetType: TargetType
    PermissionSetArn: PermissionSetArn
    PrincipalType: PrincipalType
    PrincipalId: PrincipalId


class CreatePermissionSetResponse(BaseModel):
    PermissionSet: Optional[PermissionSet] = None


class DeleteAccountAssignmentResponse(BaseModel):
    AccountAssignmentDeletionStatus: Optional[AccountAssignmentOperationStatus] = None


class DeleteAccountAssignmentRequest(BaseModel):
    InstanceArn: InstanceArn
    TargetId: TargetId
    TargetType: TargetType
    PermissionSetArn: PermissionSetArn
    PrincipalType: PrincipalType
    PrincipalId: PrincipalId


class DeleteInlinePolicyFromPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn


class DeleteInstanceAccessControlAttributeConfigurationRequest(BaseModel):
    InstanceArn: InstanceArn


class DeletePermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn


class DescribeAccountAssignmentCreationStatusResponse(CreateAccountAssignmentResponse):
    pass


class DescribeAccountAssignmentCreationStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    AccountAssignmentCreationRequestId: UUId


class DescribeAccountAssignmentDeletionStatusResponse(DeleteAccountAssignmentResponse):
    pass


class DescribeAccountAssignmentDeletionStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    AccountAssignmentDeletionRequestId: UUId


class DescribeInstanceAccessControlAttributeConfigurationRequest(BaseModel):
    InstanceArn: InstanceArn


class DescribePermissionSetResponse(CreatePermissionSetResponse):
    pass


class DescribePermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn


class DescribePermissionSetProvisioningStatusResponse(BaseModel):
    PermissionSetProvisioningStatus: Optional[PermissionSetProvisioningStatus] = None


class DescribePermissionSetProvisioningStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    ProvisionPermissionSetRequestId: UUId


class DetachManagedPolicyFromPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    ManagedPolicyArn: ManagedPolicyArn


class GetInlinePolicyForPermissionSetResponse(BaseModel):
    InlinePolicy: Optional[PermissionSetPolicyDocument] = None


class GetInlinePolicyForPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn


class ListAccountAssignmentCreationStatusResponse(BaseModel):
    AccountAssignmentsCreationStatus: Optional[
        AccountAssignmentOperationStatusList
    ] = None
    NextToken: Optional[Token] = None


class ListAccountAssignmentCreationStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None
    Filter: Optional[OperationStatusFilter] = None


class ListAccountAssignmentDeletionStatusResponse(BaseModel):
    AccountAssignmentsDeletionStatus: Optional[
        AccountAssignmentOperationStatusList
    ] = None
    NextToken: Optional[Token] = None


class ListAccountAssignmentDeletionStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None
    Filter: Optional[OperationStatusFilter] = None


class ListAccountAssignmentsResponse(BaseModel):
    AccountAssignments: Optional[AccountAssignmentList] = None
    NextToken: Optional[Token] = None


class ListAccountAssignmentsRequest(BaseModel):
    InstanceArn: InstanceArn
    AccountId: TargetId
    PermissionSetArn: PermissionSetArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None


class ListAccountsForProvisionedPermissionSetResponse(BaseModel):
    AccountIds: Optional[AccountList] = None
    NextToken: Optional[Token] = None


class ListAccountsForProvisionedPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    ProvisioningStatus: Optional[ProvisioningStatus] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None


class ListInstancesResponse(BaseModel):
    Instances: Optional[InstanceList] = None
    NextToken: Optional[Token] = None


class ListInstancesRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None


class ListManagedPoliciesInPermissionSetResponse(BaseModel):
    AttachedManagedPolicies: Optional[AttachedManagedPolicyList] = None
    NextToken: Optional[Token] = None


class ListManagedPoliciesInPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None


class ListPermissionSetProvisioningStatusRequest(BaseModel):
    InstanceArn: InstanceArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None
    Filter: Optional[OperationStatusFilter] = None


class ListPermissionSetsResponse(BaseModel):
    PermissionSets: Optional[PermissionSetList] = None
    NextToken: Optional[Token] = None


class ListPermissionSetsRequest(BaseModel):
    InstanceArn: InstanceArn
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class ListPermissionSetsProvisionedToAccountResponse(BaseModel):
    NextToken: Optional[Token] = None
    PermissionSets: Optional[PermissionSetList] = None


class ListPermissionSetsProvisionedToAccountRequest(BaseModel):
    InstanceArn: InstanceArn
    AccountId: AccountId
    ProvisioningStatus: Optional[ProvisioningStatus] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[Token] = None


class ListTagsForResourceRequest(BaseModel):
    InstanceArn: InstanceArn
    ResourceArn: GeneralArn
    NextToken: Optional[Token] = None


class ProvisionPermissionSetResponse(DescribePermissionSetProvisioningStatusResponse):
    pass


class ProvisionPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    TargetId: Optional[TargetId] = None
    TargetType: ProvisionTargetType


class PutInlinePolicyToPermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    InlinePolicy: PermissionSetPolicyDocument


class UntagResourceRequest(BaseModel):
    InstanceArn: InstanceArn
    ResourceArn: GeneralArn
    TagKeys: TagKeyList


class UpdatePermissionSetRequest(BaseModel):
    InstanceArn: InstanceArn
    PermissionSetArn: PermissionSetArn
    Description: Optional[PermissionSetDescription] = None
    SessionDuration: Optional[Duration] = None
    RelayState: Optional[RelayState] = None


class AccessControlAttributeValueSourceList(BaseModel):
    __root__: Annotated[
        List[AccessControlAttributeValueSource], Field(max_items=1, min_items=1)
    ]


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50, min_items=0)]


class PermissionSetProvisioningStatusList(BaseModel):
    __root__: List[PermissionSetProvisioningStatusMetadata]


class CreatePermissionSetRequest(BaseModel):
    Name: PermissionSetName
    Description: Optional[PermissionSetDescription] = None
    InstanceArn: InstanceArn
    SessionDuration: Optional[Duration] = None
    RelayState: Optional[RelayState] = None
    Tags: Optional[TagList] = None


class ListPermissionSetProvisioningStatusResponse(BaseModel):
    PermissionSetsProvisioningStatus: Optional[
        PermissionSetProvisioningStatusList
    ] = None
    NextToken: Optional[Token] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None
    NextToken: Optional[Token] = None


class TagResourceRequest(BaseModel):
    InstanceArn: InstanceArn
    ResourceArn: GeneralArn
    Tags: TagList


class AccessControlAttributeValue(BaseModel):
    """
    The value used for mapping a specified attribute to an identity source.
    """

    Source: AccessControlAttributeValueSourceList


class AccessControlAttribute(BaseModel):
    """
    These are Amazon Web Services SSO identity store attributes that you can configure for use in attributes-based access control (ABAC). You can create permissions policies that determine who can access your Amazon Web Services resources based upon the configured attribute values. When you enable ABAC and specify <code>AccessControlAttributes</code>, Amazon Web Services SSO passes the attribute values of the authenticated user into IAM for use in policy evaluation.
    """

    Key: AccessControlAttributeKey
    Value: AccessControlAttributeValue


class AccessControlAttributeList(BaseModel):
    __root__: Annotated[List[AccessControlAttribute], Field(max_items=50, min_items=0)]


class InstanceAccessControlAttributeConfiguration(BaseModel):
    """
    Specifies the attributes to add to your attribute-based access control (ABAC) configuration.
    """

    AccessControlAttributes: AccessControlAttributeList


class CreateInstanceAccessControlAttributeConfigurationRequest(BaseModel):
    InstanceArn: InstanceArn
    InstanceAccessControlAttributeConfiguration: InstanceAccessControlAttributeConfiguration


class DescribeInstanceAccessControlAttributeConfigurationResponse(BaseModel):
    Status: Optional[InstanceAccessControlAttributeConfigurationStatus] = None
    StatusReason: Optional[
        InstanceAccessControlAttributeConfigurationStatusReason
    ] = None
    InstanceAccessControlAttributeConfiguration: Optional[
        InstanceAccessControlAttributeConfiguration
    ] = None


class UpdateInstanceAccessControlAttributeConfigurationRequest(BaseModel):
    InstanceArn: InstanceArn
    InstanceAccessControlAttributeConfiguration: InstanceAccessControlAttributeConfiguration

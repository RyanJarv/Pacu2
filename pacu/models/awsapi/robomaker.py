# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:54:53+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=1224, min_length=1, regex='arn:.*')]


class InvalidParameterException(BaseModel):
    __root__: Any


class ThrottlingException(InvalidParameterException):
    pass


class InternalServerException(InvalidParameterException):
    pass


class ResourceNotFoundException(InvalidParameterException):
    pass


class CancelDeploymentJobResponse(BaseModel):
    pass


class CancelSimulationJobResponse(CancelDeploymentJobResponse):
    pass


class CancelSimulationJobBatchResponse(CancelDeploymentJobResponse):
    pass


class CancelWorldExportJobResponse(CancelDeploymentJobResponse):
    pass


class CancelWorldGenerationJobResponse(CancelDeploymentJobResponse):
    pass


class Percentage(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class DeploymentTimeout(BaseModel):
    __root__: int


class TagValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=0, regex='[a-zA-Z0-9 _.\\-\\/+=:]*')
    ]


class LimitExceededException(InvalidParameterException):
    pass


class ConcurrentDeploymentException(InvalidParameterException):
    pass


class IdempotentParameterMismatchException(InvalidParameterException):
    pass


class ResourceAlreadyExistsException(InvalidParameterException):
    pass


class RobotSoftwareSuiteType(Enum):
    ROS = 'ROS'
    ROS2 = 'ROS2'


class RobotSoftwareSuiteVersionType(Enum):
    Kinetic = 'Kinetic'
    Melodic = 'Melodic'
    Dashing = 'Dashing'
    Foxy = 'Foxy'


class RepositoryUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='.+')]


class S3Etag(BaseModel):
    __root__: str


class SimulationSoftwareSuiteType(Enum):
    Gazebo = 'Gazebo'
    RosbagPlay = 'RosbagPlay'


class SimulationSoftwareSuiteVersionType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1024, min_length=0, regex='7|9|11|Kinetic|Melodic|Dashing|Foxy'
        ),
    ]


class RenderingEngineType(Enum):
    OGRE = 'OGRE'


class RenderingEngineVersionType(BaseModel):
    __root__: Annotated[str, Field(max_length=4, min_length=1, regex='1.x')]


class S3Bucket(BaseModel):
    __root__: Annotated[
        str, Field(max_length=63, min_length=3, regex='[a-z0-9][a-z0-9.\\-]*[a-z0-9]')
    ]


class S3Key(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='.*')]


class BoxedBoolean(BaseModel):
    __root__: bool


class Boolean(BoxedBoolean):
    pass


class SimulationUnit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=15.0)]


class ServiceUnavailableException(InvalidParameterException):
    pass


class FloorplanCount(DeploymentTimeout):
    pass


class InteriorCountPerFloorplan(DeploymentTimeout):
    pass


class DeleteFleetResponse(CancelDeploymentJobResponse):
    pass


class DeleteRobotResponse(CancelDeploymentJobResponse):
    pass


class DeleteRobotApplicationResponse(CancelDeploymentJobResponse):
    pass


class DeleteSimulationApplicationResponse(CancelDeploymentJobResponse):
    pass


class DeleteWorldTemplateResponse(CancelDeploymentJobResponse):
    pass


class DeregisterRobotResponse(BaseModel):
    fleet: Optional[Arn] = None
    robot: Optional[Arn] = None


class RegisterRobotResponse(DeregisterRobotResponse):
    pass


class RestartSimulationJobResponse(CancelDeploymentJobResponse):
    pass


class BatchTimeoutInSeconds(DeploymentTimeout):
    pass


class MaxConcurrency(DeploymentTimeout):
    pass


class TagResourceResponse(CancelDeploymentJobResponse):
    pass


class UntagResourceResponse(CancelDeploymentJobResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9 _.\\-\\/+=:]*')
    ]


class Architecture(Enum):
    X86_64 = 'X86_64'
    ARM64 = 'ARM64'
    ARMHF = 'ARMHF'


class Arns(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=100, min_items=1)]


class BatchDeleteWorldsRequest(BaseModel):
    worlds: Arns


class BatchDescribeSimulationJobRequest(BaseModel):
    jobs: Arns


class BatchPolicy(BaseModel):
    """
    Information about the batch policy.
    """

    timeoutInSeconds: Optional[BatchTimeoutInSeconds] = None
    maxConcurrency: Optional[MaxConcurrency] = None


class CancelDeploymentJobRequest(BaseModel):
    job: Arn


class CancelSimulationJobBatchRequest(BaseModel):
    batch: Arn


class CancelSimulationJobRequest(BaseModel):
    job: Arn


class CancelWorldExportJobRequest(BaseModel):
    job: Arn


class CancelWorldGenerationJobRequest(BaseModel):
    job: Arn


class ClientRequestToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9_\\-=]*')
    ]


class Command(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='[a-zA-Z0-9_.\\-]*')
    ]


class Compute(BaseModel):
    """
    Compute information for the simulation job.
    """

    simulationUnitLimit: Optional[SimulationUnit] = None


class ComputeResponse(Compute):
    """
    Compute information for the simulation job
    """

    pass


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DeploymentStatus(Enum):
    Pending = 'Pending'
    Preparing = 'Preparing'
    InProgress = 'InProgress'
    Failed = 'Failed'
    Succeeded = 'Succeeded'
    Canceled = 'Canceled'


class GenericString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0, regex='.*')]


class DeploymentJobErrorCode(Enum):
    ResourceNotFound = 'ResourceNotFound'
    EnvironmentSetupError = 'EnvironmentSetupError'
    EtagMismatch = 'EtagMismatch'
    FailureThresholdBreached = 'FailureThresholdBreached'
    RobotDeploymentAborted = 'RobotDeploymentAborted'
    RobotDeploymentNoResponse = 'RobotDeploymentNoResponse'
    RobotAgentConnectionTimeout = 'RobotAgentConnectionTimeout'
    GreengrassDeploymentFailed = 'GreengrassDeploymentFailed'
    InvalidGreengrassGroup = 'InvalidGreengrassGroup'
    MissingRobotArchitecture = 'MissingRobotArchitecture'
    MissingRobotApplicationArchitecture = 'MissingRobotApplicationArchitecture'
    MissingRobotDeploymentResource = 'MissingRobotDeploymentResource'
    GreengrassGroupVersionDoesNotExist = 'GreengrassGroupVersionDoesNotExist'
    LambdaDeleted = 'LambdaDeleted'
    ExtractingBundleFailure = 'ExtractingBundleFailure'
    PreLaunchFileFailure = 'PreLaunchFileFailure'
    PostLaunchFileFailure = 'PostLaunchFileFailure'
    BadPermissionError = 'BadPermissionError'
    DownloadConditionFailed = 'DownloadConditionFailed'
    BadLambdaAssociated = 'BadLambdaAssociated'
    InternalServerError = 'InternalServerError'
    RobotApplicationDoesNotExist = 'RobotApplicationDoesNotExist'
    DeploymentFleetDoesNotExist = 'DeploymentFleetDoesNotExist'
    FleetDeploymentTimeout = 'FleetDeploymentTimeout'


class CreatedAt(BaseModel):
    __root__: datetime


class Name(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='[a-zA-Z0-9_\\-]*')
    ]


class CreateFleetRequest(BaseModel):
    name: Name
    tags: Optional[TagMap] = None


class RobotSoftwareSuite(BaseModel):
    """
    Information about a robot software suite (ROS distribution).
    """

    name: Optional[RobotSoftwareSuiteType] = None
    version: Optional[RobotSoftwareSuiteVersionType] = None


class Environment(BaseModel):
    """
    The object that contains the Docker image URI for either your robot or simulation applications.
    """

    uri: Optional[RepositoryUrl] = None


class Version(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='(\\$LATEST)|[0-9]*')
    ]


class LastUpdatedAt(CreatedAt):
    pass


class RevisionId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=40, min_length=1, regex='[a-zA-Z0-9_.\\-]*')
    ]


class S3Etags(BaseModel):
    __root__: List[S3Etag]


class ImageDigest(BaseModel):
    __root__: Annotated[
        str, Field(max_length=72, min_length=0, regex='[Ss][Hh][Aa]256:[0-9a-fA-F]{64}')
    ]


class CreateRobotApplicationVersionRequest(BaseModel):
    application: Arn
    currentRevisionId: Optional[RevisionId] = None
    s3Etags: Optional[S3Etags] = None
    imageDigest: Optional[ImageDigest] = None


class Id(BaseModel):
    __root__: Annotated[str, Field(max_length=1224, min_length=1, regex='.*')]


class CreateRobotRequest(BaseModel):
    name: Name
    architecture: Architecture
    greengrassGroupId: Id
    tags: Optional[TagMap] = None


class SimulationSoftwareSuite(BaseModel):
    """
    Information about a simulation software suite.
    """

    name: Optional[SimulationSoftwareSuiteType] = None
    version: Optional[SimulationSoftwareSuiteVersionType] = None


class RenderingEngine(BaseModel):
    """
    Information about a rendering engine.
    """

    name: Optional[RenderingEngineType] = None
    version: Optional[RenderingEngineVersionType] = None


class CreateSimulationApplicationVersionRequest(BaseModel):
    application: Arn
    currentRevisionId: Optional[RevisionId] = None
    s3Etags: Optional[S3Etags] = None
    imageDigest: Optional[ImageDigest] = None


class OutputLocation(BaseModel):
    """
    The output location.
    """

    s3Bucket: Optional[S3Bucket] = None
    s3Prefix: Optional[S3Key] = None


class LoggingConfig(BaseModel):
    """
    The logging configuration.
    """

    recordAllRosTopics: BoxedBoolean


class JobDuration(DeploymentTimeout):
    pass


class IamRole(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='arn:aws:iam::\\w+:role/.*')
    ]


class FailureBehavior(Enum):
    Fail = 'Fail'
    Continue = 'Continue'


class SimulationJobStatus(Enum):
    Pending = 'Pending'
    Preparing = 'Preparing'
    Running = 'Running'
    Restarting = 'Restarting'
    Completed = 'Completed'
    Failed = 'Failed'
    RunningFailed = 'RunningFailed'
    Terminating = 'Terminating'
    Terminated = 'Terminated'
    Canceled = 'Canceled'


class LastStartedAt(CreatedAt):
    pass


class SimulationJobErrorCode(Enum):
    InternalServiceError = 'InternalServiceError'
    RobotApplicationCrash = 'RobotApplicationCrash'
    SimulationApplicationCrash = 'SimulationApplicationCrash'
    RobotApplicationHealthCheckFailure = 'RobotApplicationHealthCheckFailure'
    SimulationApplicationHealthCheckFailure = 'SimulationApplicationHealthCheckFailure'
    BadPermissionsRobotApplication = 'BadPermissionsRobotApplication'
    BadPermissionsSimulationApplication = 'BadPermissionsSimulationApplication'
    BadPermissionsS3Object = 'BadPermissionsS3Object'
    BadPermissionsS3Output = 'BadPermissionsS3Output'
    BadPermissionsCloudwatchLogs = 'BadPermissionsCloudwatchLogs'
    SubnetIpLimitExceeded = 'SubnetIpLimitExceeded'
    ENILimitExceeded = 'ENILimitExceeded'
    BadPermissionsUserCredentials = 'BadPermissionsUserCredentials'
    InvalidBundleRobotApplication = 'InvalidBundleRobotApplication'
    InvalidBundleSimulationApplication = 'InvalidBundleSimulationApplication'
    InvalidS3Resource = 'InvalidS3Resource'
    ThrottlingError = 'ThrottlingError'
    LimitExceeded = 'LimitExceeded'
    MismatchedEtag = 'MismatchedEtag'
    RobotApplicationVersionMismatchedEtag = 'RobotApplicationVersionMismatchedEtag'
    SimulationApplicationVersionMismatchedEtag = (
        'SimulationApplicationVersionMismatchedEtag'
    )
    ResourceNotFound = 'ResourceNotFound'
    RequestThrottled = 'RequestThrottled'
    BatchTimedOut = 'BatchTimedOut'
    BatchCanceled = 'BatchCanceled'
    InvalidInput = 'InvalidInput'
    WrongRegionS3Bucket = 'WrongRegionS3Bucket'
    WrongRegionS3Output = 'WrongRegionS3Output'
    WrongRegionRobotApplication = 'WrongRegionRobotApplication'
    WrongRegionSimulationApplication = 'WrongRegionSimulationApplication'
    UploadContentMismatchError = 'UploadContentMismatchError'


class SimulationTimeMillis(DeploymentTimeout):
    pass


class CreateWorldExportJobRequest(BaseModel):
    clientRequestToken: Optional[ClientRequestToken] = None
    worlds: Arns
    outputLocation: OutputLocation
    iamRole: IamRole
    tags: Optional[TagMap] = None


class WorldExportJobStatus(Enum):
    Pending = 'Pending'
    Running = 'Running'
    Completed = 'Completed'
    Failed = 'Failed'
    Canceling = 'Canceling'
    Canceled = 'Canceled'


class WorldExportJobErrorCode(Enum):
    InternalServiceError = 'InternalServiceError'
    LimitExceeded = 'LimitExceeded'
    ResourceNotFound = 'ResourceNotFound'
    RequestThrottled = 'RequestThrottled'
    InvalidInput = 'InvalidInput'
    AccessDenied = 'AccessDenied'


class WorldCount(BaseModel):
    """
    <p>The number of worlds that will be created. You can configure the number of unique floorplans and the number of unique interiors for each floor plan. For example, if you want 1 world with 20 unique interiors, you set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan = 20</code>. This will result in 20 worlds (<code>floorplanCount</code> * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be 20 worlds with 5 unique floor plans. </p>
    """

    floorplanCount: Optional[FloorplanCount] = None
    interiorCountPerFloorplan: Optional[InteriorCountPerFloorplan] = None


class CreateWorldGenerationJobRequest(BaseModel):
    clientRequestToken: Optional[ClientRequestToken] = None
    template: Arn
    worldCount: WorldCount
    tags: Optional[TagMap] = None
    worldTags: Optional[TagMap] = None


class WorldGenerationJobStatus(Enum):
    Pending = 'Pending'
    Running = 'Running'
    Completed = 'Completed'
    Failed = 'Failed'
    PartialFailed = 'PartialFailed'
    Canceling = 'Canceling'
    Canceled = 'Canceled'


class WorldGenerationJobErrorCode(Enum):
    InternalServiceError = 'InternalServiceError'
    LimitExceeded = 'LimitExceeded'
    ResourceNotFound = 'ResourceNotFound'
    RequestThrottled = 'RequestThrottled'
    InvalidInput = 'InvalidInput'
    AllWorldGenerationFailed = 'AllWorldGenerationFailed'


class TemplateName(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=0, regex='.*')]


class Json(BaseModel):
    __root__: Annotated[str, Field(max_length=262144, min_length=1, regex='[\\S\\s]+')]


class TemplateLocation(BaseModel):
    """
    Information about a template location.
    """

    s3Bucket: S3Bucket
    s3Key: S3Key


class CreateWorldTemplateRequest(BaseModel):
    clientRequestToken: Optional[ClientRequestToken] = None
    name: Optional[TemplateName] = None
    templateBody: Optional[Json] = None
    templateLocation: Optional[TemplateLocation] = None
    tags: Optional[TagMap] = None


class S3Keys(BaseModel):
    __root__: Annotated[List[S3Key], Field(max_items=100, min_items=1)]


class DataSourceNames(BaseModel):
    __root__: List[Name]


class DeleteFleetRequest(BaseModel):
    fleet: Arn


class DeleteRobotApplicationRequest(BaseModel):
    application: Arn
    applicationVersion: Optional[Version] = None


class DeleteRobotRequest(BaseModel):
    robot: Arn


class DeleteSimulationApplicationRequest(BaseModel):
    application: Arn
    applicationVersion: Optional[Version] = None


class DeleteWorldTemplateRequest(BaseModel):
    template: Arn


class DeploymentVersion(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='[0-9]*')]


class Path(S3Key):
    pass


class EnvironmentVariableMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DeregisterRobotRequest(BaseModel):
    fleet: Arn
    robot: Arn


class DescribeDeploymentJobRequest(BaseModel):
    job: Arn


class DescribeFleetRequest(BaseModel):
    fleet: Arn


class DescribeRobotApplicationRequest(BaseModel):
    application: Arn
    applicationVersion: Optional[Version] = None


class DescribeRobotRequest(BaseModel):
    robot: Arn


class RobotStatus(Enum):
    Available = 'Available'
    Registered = 'Registered'
    PendingNewDeployment = 'PendingNewDeployment'
    Deploying = 'Deploying'
    Failed = 'Failed'
    InSync = 'InSync'
    NoResponse = 'NoResponse'


class DescribeSimulationApplicationRequest(BaseModel):
    application: Arn
    applicationVersion: Optional[Version] = None


class DescribeSimulationJobBatchRequest(BaseModel):
    batch: Arn


class SimulationJobBatchStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Failed = 'Failed'
    Completed = 'Completed'
    Canceled = 'Canceled'
    Canceling = 'Canceling'
    Completing = 'Completing'
    TimingOut = 'TimingOut'
    TimedOut = 'TimedOut'


class SimulationJobBatchErrorCode(Enum):
    InternalServiceError = 'InternalServiceError'


class DescribeSimulationJobRequest(BaseModel):
    job: Arn


class NetworkInterface(BaseModel):
    """
    Describes a network interface.
    """

    networkInterfaceId: Optional[GenericString] = None
    privateIpAddress: Optional[GenericString] = None
    publicIpAddress: Optional[GenericString] = None


class DescribeWorldExportJobRequest(BaseModel):
    job: Arn


class DescribeWorldGenerationJobRequest(BaseModel):
    job: Arn


class DescribeWorldRequest(BaseModel):
    world: Arn


class DescribeWorldTemplateRequest(BaseModel):
    template: Arn


class EnvironmentVariableKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='[A-Z_][A-Z0-9_]*')
    ]


class EnvironmentVariableValue(S3Key):
    pass


class ExitBehavior(Enum):
    FAIL = 'FAIL'
    RESTART = 'RESTART'


class FailedAt(CreatedAt):
    pass


class Integer(DeploymentTimeout):
    pass


class FilterValues(BaseModel):
    __root__: Annotated[List[Name], Field(max_items=1, min_items=1)]


class Fleet10(BaseModel):
    """
    Information about a fleet.
    """

    name: Optional[Name] = None
    arn: Optional[Arn] = None
    createdAt: Optional[CreatedAt] = None
    lastDeploymentStatus: Optional[DeploymentStatus] = None
    lastDeploymentJob: Optional[Arn] = None
    lastDeploymentTime: Optional[CreatedAt] = None


class Fleets(BaseModel):
    __root__: Annotated[List[Fleet10], Field(max_items=200, min_items=0)]


class GenericInteger(DeploymentTimeout):
    pass


class GetWorldTemplateBodyRequest(BaseModel):
    template: Optional[Arn] = None
    generationJob: Optional[Arn] = None


class PaginationToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='[a-zA-Z0-9_.\\-\\/+=]*')
    ]


class MaxResults(DeploymentTimeout):
    pass


class VersionQualifier(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='ALL')]


class ListTagsForResourceRequest(BaseModel):
    pass


class ListWorldTemplatesRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='.+')]


class NonSystemPort(BaseModel):
    __root__: Annotated[int, Field(ge=1024.0, le=65535.0)]


class PercentDone(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=100.0)]


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=65535.0)]


class PortMapping(BaseModel):
    """
    An object representing a port mapping.
    """

    jobPort: Port
    applicationPort: NonSystemPort
    enableOnPublicIp: Optional[Boolean] = None


class RobotDeploymentStep(Enum):
    Validating = 'Validating'
    DownloadingExtracting = 'DownloadingExtracting'
    ExecutingDownloadCondition = 'ExecutingDownloadCondition'
    ExecutingPreLaunch = 'ExecutingPreLaunch'
    Launching = 'Launching'
    ExecutingPostLaunch = 'ExecutingPostLaunch'
    Finished = 'Finished'


class ProgressDetail(BaseModel):
    """
    Information about the progress of a deployment job.
    """

    currentProgress: Optional[RobotDeploymentStep] = None
    percentDone: Optional[PercentDone] = None
    estimatedTimeRemainingSeconds: Optional[GenericInteger] = None
    targetResource: Optional[GenericString] = None


class RegisterRobotRequest(BaseModel):
    fleet: Arn
    robot: Arn


class RestartSimulationJobRequest(BaseModel):
    job: Arn


class Robot(BaseModel):
    """
    Information about a robot.
    """

    arn: Optional[Arn] = None
    name: Optional[Name] = None
    fleetArn: Optional[Arn] = None
    status: Optional[RobotStatus] = None
    greenGrassGroupId: Optional[Id] = None
    createdAt: Optional[CreatedAt] = None
    architecture: Optional[Architecture] = None
    lastDeploymentJob: Optional[Arn] = None
    lastDeploymentTime: Optional[CreatedAt] = None


class RobotApplicationNames(DataSourceNames):
    pass


class RobotApplicationSummary(BaseModel):
    """
    Summary information for a robot application.
    """

    name: Optional[Name] = None
    arn: Optional[Arn] = None
    version: Optional[Version] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None


class RobotDeployment(BaseModel):
    """
    Information about a robot deployment.
    """

    arn: Optional[Arn] = None
    deploymentStartTime: Optional[CreatedAt] = None
    deploymentFinishTime: Optional[CreatedAt] = None
    status: Optional[RobotStatus] = None
    progressDetail: Optional[ProgressDetail] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[DeploymentJobErrorCode] = None


class S3KeyOutput(BaseModel):
    """
    Information about S3 keys.
    """

    s3Key: Optional[S3Key] = None
    etag: Optional[S3Etag] = None


class SimulationApplicationNames(DataSourceNames):
    pass


class SimulationApplicationSummary(BaseModel):
    """
    Summary information for a simulation application.
    """

    name: Optional[Name] = None
    arn: Optional[Arn] = None
    version: Optional[Version] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    simulationSoftwareSuite: Optional[SimulationSoftwareSuite] = None


class SimulationJobBatchSummary(BaseModel):
    """
    Information about a simulation job batch.
    """

    arn: Optional[Arn] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    createdAt: Optional[CreatedAt] = None
    status: Optional[SimulationJobBatchStatus] = None
    failedRequestCount: Optional[Integer] = None
    pendingRequestCount: Optional[Integer] = None
    createdRequestCount: Optional[Integer] = None


class SimulationJobSummary(BaseModel):
    """
    Summary information for a simulation job.
    """

    arn: Optional[Arn] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    name: Optional[Name] = None
    status: Optional[SimulationJobStatus] = None
    simulationApplicationNames: Optional[SimulationApplicationNames] = None
    robotApplicationNames: Optional[RobotApplicationNames] = None
    dataSourceNames: Optional[DataSourceNames] = None


class Source(BaseModel):
    """
    Information about a source.
    """

    s3Bucket: Optional[S3Bucket] = None
    s3Key: Optional[S3Key] = None
    etag: Optional[S3Etag] = None
    architecture: Optional[Architecture] = None


class SyncDeploymentJobRequest(BaseModel):
    clientRequestToken: ClientRequestToken
    fleet: Arn


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class TagResourceRequest(BaseModel):
    tags: TagMap


class TemplateSummary(BaseModel):
    """
    Summary information for a template.
    """

    arn: Optional[Arn] = None
    createdAt: Optional[CreatedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    name: Optional[TemplateName] = None
    version: Optional[GenericString] = None


class UnrestrictedCommand(S3Key):
    pass


class Tool(BaseModel):
    """
    Information about a tool. Tools are used in a simulation job.
    """

    streamUI: Optional[BoxedBoolean] = None
    name: Name
    command: UnrestrictedCommand
    streamOutputToCloudWatch: Optional[BoxedBoolean] = None
    exitBehavior: Optional[ExitBehavior] = None


class UntagResourceRequest(BaseModel):
    pass


class UpdateWorldTemplateRequest(BaseModel):
    template: Arn
    name: Optional[TemplateName] = None
    templateBody: Optional[Json] = None
    templateLocation: Optional[TemplateLocation] = None


class UploadBehavior(Enum):
    UPLOAD_ON_TERMINATE = 'UPLOAD_ON_TERMINATE'
    UPLOAD_ROLLING_AUTO_REMOVE = 'UPLOAD_ROLLING_AUTO_REMOVE'


class UploadConfiguration(BaseModel):
    """
    Provides upload configuration information. Files are uploaded from the simulation job to a location you specify.
    """

    name: Name
    path: Path
    uploadBehavior: UploadBehavior


class WorldConfig(BaseModel):
    """
    Configuration information for a world.
    """

    world: Optional[Arn] = None


class WorldExportJobSummary(BaseModel):
    """
    Information about a world export job.
    """

    arn: Optional[Arn] = None
    status: Optional[WorldExportJobStatus] = None
    createdAt: Optional[CreatedAt] = None
    worlds: Optional[Arns] = None


class WorldFailure(BaseModel):
    """
    Information about a failed world.
    """

    failureCode: Optional[WorldGenerationJobErrorCode] = None
    sampleFailureReason: Optional[GenericString] = None
    failureCount: Optional[Integer] = None


class WorldGenerationJobSummary(BaseModel):
    """
    Information about a world generator job.
    """

    arn: Optional[Arn] = None
    template: Optional[Arn] = None
    createdAt: Optional[CreatedAt] = None
    status: Optional[WorldGenerationJobStatus] = None
    worldCount: Optional[WorldCount] = None
    succeededWorldCount: Optional[Integer] = None
    failedWorldCount: Optional[Integer] = None


class WorldSummary(BaseModel):
    """
    Information about a world.
    """

    arn: Optional[Arn] = None
    createdAt: Optional[CreatedAt] = None
    generationJob: Optional[Arn] = None
    template: Optional[Arn] = None


class BatchDeleteWorldsResponse(BaseModel):
    unprocessedWorlds: Optional[Arns] = None


class S3Object(BaseModel):
    """
    Information about an S3 object.
    """

    bucket: S3Bucket
    key: S3Key
    etag: Optional[S3Etag] = None


class CreateFleetResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    createdAt: Optional[CreatedAt] = None
    tags: Optional[TagMap] = None


class CreateRobotResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    createdAt: Optional[CreatedAt] = None
    greengrassGroupId: Optional[Id] = None
    architecture: Optional[Architecture] = None
    tags: Optional[TagMap] = None


class SourceConfig(BaseModel):
    """
    Information about a source configuration.
    """

    s3Bucket: Optional[S3Bucket] = None
    s3Key: Optional[S3Key] = None
    architecture: Optional[Architecture] = None


class DataSourceConfig(BaseModel):
    """
    Information about a data source.
    """

    name: Name
    s3Bucket: S3Bucket
    s3Keys: S3Keys


class Subnets(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=16, min_items=1)]


class SecurityGroups(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=5, min_items=1)]


class CreateWorldExportJobResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[WorldExportJobStatus] = None
    createdAt: Optional[CreatedAt] = None
    failureCode: Optional[WorldExportJobErrorCode] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    outputLocation: Optional[OutputLocation] = None
    iamRole: Optional[IamRole] = None
    tags: Optional[TagMap] = None


class CreateWorldGenerationJobResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[WorldGenerationJobStatus] = None
    createdAt: Optional[CreatedAt] = None
    failureCode: Optional[WorldGenerationJobErrorCode] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    template: Optional[Arn] = None
    worldCount: Optional[WorldCount] = None
    tags: Optional[TagMap] = None
    worldTags: Optional[TagMap] = None


class CreateWorldTemplateResponse(BaseModel):
    arn: Optional[Arn] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    createdAt: Optional[CreatedAt] = None
    name: Optional[TemplateName] = None
    tags: Optional[TagMap] = None


class DescribeRobotResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    fleetArn: Optional[Arn] = None
    status: Optional[RobotStatus] = None
    greengrassGroupId: Optional[Id] = None
    createdAt: Optional[CreatedAt] = None
    architecture: Optional[Architecture] = None
    lastDeploymentJob: Optional[Arn] = None
    lastDeploymentTime: Optional[CreatedAt] = None
    tags: Optional[TagMap] = None


class DescribeWorldResponse(BaseModel):
    arn: Optional[Arn] = None
    generationJob: Optional[Arn] = None
    template: Optional[Arn] = None
    createdAt: Optional[CreatedAt] = None
    tags: Optional[TagMap] = None
    worldDescriptionBody: Optional[Json] = None


class DescribeWorldExportJobResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[WorldExportJobStatus] = None
    createdAt: Optional[CreatedAt] = None
    failureCode: Optional[WorldExportJobErrorCode] = None
    failureReason: Optional[GenericString] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    worlds: Optional[Arns] = None
    outputLocation: Optional[OutputLocation] = None
    iamRole: Optional[IamRole] = None
    tags: Optional[TagMap] = None


class DescribeWorldTemplateResponse(BaseModel):
    arn: Optional[Arn] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    name: Optional[TemplateName] = None
    createdAt: Optional[CreatedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    tags: Optional[TagMap] = None
    version: Optional[GenericString] = None


class GetWorldTemplateBodyResponse(BaseModel):
    templateBody: Optional[Json] = None


class Filter(BaseModel):
    """
    Information about a filter.
    """

    name: Optional[Name] = None
    values: Optional[FilterValues] = None


class ListFleetsResponse(BaseModel):
    fleetDetails: Optional[Fleets] = None
    nextToken: Optional[PaginationToken] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class UpdateWorldTemplateResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[TemplateName] = None
    createdAt: Optional[CreatedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None


class DeploymentConfig(BaseModel):
    """
    Information about a deployment configuration.
    """

    concurrentDeploymentPercentage: Optional[Percentage] = None
    failureThresholdPercentage: Optional[Percentage] = None
    robotDeploymentTimeoutInSeconds: Optional[DeploymentTimeout] = None
    downloadConditionFile: Optional[S3Object] = None


class SourceConfigs(BaseModel):
    __root__: List[SourceConfig]


class CreateRobotApplicationRequest(BaseModel):
    name: Name
    sources: Optional[SourceConfigs] = None
    robotSoftwareSuite: RobotSoftwareSuite
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None


class Sources(BaseModel):
    __root__: List[Source]


class CreateSimulationApplicationRequest(BaseModel):
    name: Name
    sources: Optional[SourceConfigs] = None
    simulationSoftwareSuite: SimulationSoftwareSuite
    robotSoftwareSuite: RobotSoftwareSuite
    renderingEngine: Optional[RenderingEngine] = None
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None


class DataSourceConfigs(BaseModel):
    __root__: Annotated[List[DataSourceConfig], Field(max_items=5, min_items=1)]


class VPCConfig(BaseModel):
    """
    If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.
    """

    subnets: Subnets
    securityGroups: Optional[SecurityGroups] = None
    assignPublicIp: Optional[Boolean] = None


class VPCConfigResponse(BaseModel):
    """
    VPC configuration associated with your simulation job.
    """

    subnets: Optional[Subnets] = None
    securityGroups: Optional[SecurityGroups] = None
    vpcId: Optional[GenericString] = None
    assignPublicIp: Optional[Boolean] = None


class S3KeyOutputs(BaseModel):
    __root__: List[S3KeyOutput]


class DataSource(BaseModel):
    """
    Information about a data source.
    """

    name: Optional[Name] = None
    s3Bucket: Optional[S3Bucket] = None
    s3Keys: Optional[S3KeyOutputs] = None


class DeploymentLaunchConfig(BaseModel):
    """
    Configuration information for a deployment launch.
    """

    packageName: Command
    preLaunchFile: Optional[Path] = None
    launchFile: Command
    postLaunchFile: Optional[Path] = None
    environmentVariables: Optional[EnvironmentVariableMap] = None


class RobotDeploymentSummary(BaseModel):
    __root__: List[RobotDeployment]


class Robots(BaseModel):
    __root__: Annotated[List[Robot], Field(max_items=1000, min_items=0)]


class SimulationJobSummaries(BaseModel):
    __root__: Annotated[List[SimulationJobSummary], Field(max_items=100, min_items=0)]


class WorldFailures(BaseModel):
    __root__: Annotated[List[WorldFailure], Field(max_items=100, min_items=0)]


class FailureSummary(BaseModel):
    """
    Information about worlds that failed.
    """

    totalFailureCount: Optional[Integer] = None
    failures: Optional[WorldFailures] = None


class Filters(BaseModel):
    __root__: Annotated[List[Filter], Field(max_items=1, min_items=1)]


class ListDeploymentJobsRequest(BaseModel):
    filters: Optional[Filters] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None


class ListFleetsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class ListRobotApplicationsRequest(BaseModel):
    versionQualifier: Optional[VersionQualifier] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class RobotApplicationSummaries(BaseModel):
    __root__: Annotated[
        List[RobotApplicationSummary], Field(max_items=100, min_items=0)
    ]


class ListRobotsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class ListSimulationApplicationsRequest(BaseModel):
    versionQualifier: Optional[VersionQualifier] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class SimulationApplicationSummaries(BaseModel):
    __root__: Annotated[
        List[SimulationApplicationSummary], Field(max_items=100, min_items=0)
    ]


class ListSimulationJobBatchesRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class SimulationJobBatchSummaries(BaseModel):
    __root__: List[SimulationJobBatchSummary]


class ListSimulationJobsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class ListWorldExportJobsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class WorldExportJobSummaries(BaseModel):
    __root__: Annotated[List[WorldExportJobSummary], Field(max_items=100, min_items=0)]


class ListWorldGenerationJobsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class WorldGenerationJobSummaries(BaseModel):
    __root__: Annotated[
        List[WorldGenerationJobSummary], Field(max_items=100, min_items=0)
    ]


class TemplateSummaries(BaseModel):
    __root__: List[TemplateSummary]


class ListWorldsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None


class WorldSummaries(BaseModel):
    __root__: List[WorldSummary]


class PortMappingList(BaseModel):
    __root__: Annotated[List[PortMapping], Field(max_items=10, min_items=0)]


class UploadConfigurations(BaseModel):
    __root__: Annotated[List[UploadConfiguration], Field(max_items=10, min_items=0)]


class Tools(BaseModel):
    __root__: Annotated[List[Tool], Field(max_items=10, min_items=0)]


class WorldConfigs(BaseModel):
    __root__: Annotated[List[WorldConfig], Field(max_items=1, min_items=0)]


class UpdateRobotApplicationRequest(BaseModel):
    application: Arn
    sources: Optional[SourceConfigs] = None
    robotSoftwareSuite: RobotSoftwareSuite
    currentRevisionId: Optional[RevisionId] = None
    environment: Optional[Environment] = None


class UpdateSimulationApplicationRequest(BaseModel):
    application: Arn
    sources: Optional[SourceConfigs] = None
    simulationSoftwareSuite: SimulationSoftwareSuite
    robotSoftwareSuite: RobotSoftwareSuite
    renderingEngine: Optional[RenderingEngine] = None
    currentRevisionId: Optional[RevisionId] = None
    environment: Optional[Environment] = None


class DeploymentApplicationConfig(BaseModel):
    """
    Information about a deployment application configuration.
    """

    application: Arn
    applicationVersion: DeploymentVersion
    launchConfig: DeploymentLaunchConfig


class CreateRobotApplicationResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    revisionId: Optional[RevisionId] = None
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None


class CreateRobotApplicationVersionResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    revisionId: Optional[RevisionId] = None
    environment: Optional[Environment] = None


class CreateSimulationApplicationResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    simulationSoftwareSuite: Optional[SimulationSoftwareSuite] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    renderingEngine: Optional[RenderingEngine] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    revisionId: Optional[RevisionId] = None
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None


class CreateSimulationApplicationVersionResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    simulationSoftwareSuite: Optional[SimulationSoftwareSuite] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    renderingEngine: Optional[RenderingEngine] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    revisionId: Optional[RevisionId] = None
    environment: Optional[Environment] = None


class DescribeFleetResponse(BaseModel):
    name: Optional[Name] = None
    arn: Optional[Arn] = None
    robots: Optional[Robots] = None
    createdAt: Optional[CreatedAt] = None
    lastDeploymentStatus: Optional[DeploymentStatus] = None
    lastDeploymentJob: Optional[Arn] = None
    lastDeploymentTime: Optional[CreatedAt] = None
    tags: Optional[TagMap] = None


class DescribeRobotApplicationResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    revisionId: Optional[RevisionId] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None
    imageDigest: Optional[ImageDigest] = None


class DescribeSimulationApplicationResponse(BaseModel):
    arn: Optional[Arn] = None
    name: Optional[Name] = None
    version: Optional[Version] = None
    sources: Optional[Sources] = None
    simulationSoftwareSuite: Optional[SimulationSoftwareSuite] = None
    robotSoftwareSuite: Optional[RobotSoftwareSuite] = None
    renderingEngine: Optional[RenderingEngine] = None
    revisionId: Optional[RevisionId] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    tags: Optional[TagMap] = None
    environment: Optional[Environment] = None
    imageDigest: Optional[ImageDigest] = None


class ListRobotApplicationsResponse(BaseModel):
    robotApplicationSummaries: Optional[RobotApplicationSummaries] = None
    nextToken: Optional[PaginationToken] = None


class ListRobotsResponse(BaseModel):
    robots: Optional[Robots] = None
    nextToken: Optional[PaginationToken] = None


class ListSimulationApplicationsResponse(BaseModel):
    simulationApplicationSummaries: Optional[SimulationApplicationSummaries] = None
    nextToken: Optional[PaginationToken] = None


class ListSimulationJobBatchesResponse(BaseModel):
    simulationJobBatchSummaries: Optional[SimulationJobBatchSummaries] = None
    nextToken: Optional[PaginationToken] = None


class ListSimulationJobsResponse(BaseModel):
    simulationJobSummaries: SimulationJobSummaries
    nextToken: Optional[PaginationToken] = None


class ListWorldExportJobsResponse(BaseModel):
    worldExportJobSummaries: WorldExportJobSummaries
    nextToken: Optional[PaginationToken] = None


class ListWorldGenerationJobsResponse(BaseModel):
    worldGenerationJobSummaries: WorldGenerationJobSummaries
    nextToken: Optional[PaginationToken] = None


class ListWorldTemplatesResponse(BaseModel):
    templateSummaries: Optional[TemplateSummaries] = None
    nextToken: Optional[PaginationToken] = None


class ListWorldsResponse(BaseModel):
    worldSummaries: Optional[WorldSummaries] = None
    nextToken: Optional[PaginationToken] = None


class UpdateRobotApplicationResponse(CreateRobotApplicationVersionResponse):
    pass


class UpdateSimulationApplicationResponse(CreateSimulationApplicationVersionResponse):
    pass


class DeploymentApplicationConfigs(BaseModel):
    __root__: Annotated[
        List[DeploymentApplicationConfig], Field(max_items=1, min_items=1)
    ]


class CreateDeploymentJobRequest(BaseModel):
    deploymentConfig: Optional[DeploymentConfig] = None
    clientRequestToken: ClientRequestToken
    fleet: Arn
    deploymentApplicationConfigs: DeploymentApplicationConfigs
    tags: Optional[TagMap] = None


class DataSources(BaseModel):
    __root__: List[DataSource]


class DeploymentJob(BaseModel):
    """
    Information about a deployment job.
    """

    arn: Optional[Arn] = None
    fleet: Optional[Arn] = None
    status: Optional[DeploymentStatus] = None
    deploymentApplicationConfigs: Optional[DeploymentApplicationConfigs] = None
    deploymentConfig: Optional[DeploymentConfig] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[DeploymentJobErrorCode] = None
    createdAt: Optional[CreatedAt] = None


class DeploymentJobs(BaseModel):
    __root__: Annotated[List[DeploymentJob], Field(max_items=200, min_items=0)]


class FinishedWorldsSummary(BaseModel):
    """
    Information about worlds that finished.
    """

    finishedCount: Optional[Integer] = None
    succeededWorlds: Optional[Arns] = None
    failureSummary: Optional[FailureSummary] = None


class PortForwardingConfig(BaseModel):
    """
    Configuration information for port forwarding.
    """

    portMappings: Optional[PortMappingList] = None


class LaunchConfig(BaseModel):
    """
    Information about a launch configuration.
    """

    packageName: Command
    launchFile: Command
    environmentVariables: Optional[EnvironmentVariableMap] = None
    portForwardingConfig: Optional[PortForwardingConfig] = None
    streamUI: Optional[Boolean] = None


class CreateDeploymentJobResponse(BaseModel):
    arn: Optional[Arn] = None
    fleet: Optional[Arn] = None
    status: Optional[DeploymentStatus] = None
    deploymentApplicationConfigs: Optional[DeploymentApplicationConfigs] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[DeploymentJobErrorCode] = None
    createdAt: Optional[CreatedAt] = None
    deploymentConfig: Optional[DeploymentConfig] = None
    tags: Optional[TagMap] = None


class RobotApplicationConfig(BaseModel):
    """
    Application configuration information for a robot.
    """

    application: Arn
    applicationVersion: Optional[Version] = None
    launchConfig: LaunchConfig
    uploadConfigurations: Optional[UploadConfigurations] = None
    useDefaultUploadConfigurations: Optional[BoxedBoolean] = None
    tools: Optional[Tools] = None
    useDefaultTools: Optional[BoxedBoolean] = None


class SimulationApplicationConfig(BaseModel):
    """
    Information about a simulation application configuration.
    """

    application: Arn
    applicationVersion: Optional[Version] = None
    launchConfig: LaunchConfig
    uploadConfigurations: Optional[UploadConfigurations] = None
    worldConfigs: Optional[WorldConfigs] = None
    useDefaultUploadConfigurations: Optional[BoxedBoolean] = None
    tools: Optional[Tools] = None
    useDefaultTools: Optional[BoxedBoolean] = None


class DescribeDeploymentJobResponse(BaseModel):
    arn: Optional[Arn] = None
    fleet: Optional[Arn] = None
    status: Optional[DeploymentStatus] = None
    deploymentConfig: Optional[DeploymentConfig] = None
    deploymentApplicationConfigs: Optional[DeploymentApplicationConfigs] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[DeploymentJobErrorCode] = None
    createdAt: Optional[CreatedAt] = None
    robotDeploymentSummary: Optional[RobotDeploymentSummary] = None
    tags: Optional[TagMap] = None


class DescribeWorldGenerationJobResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[WorldGenerationJobStatus] = None
    createdAt: Optional[CreatedAt] = None
    failureCode: Optional[WorldGenerationJobErrorCode] = None
    failureReason: Optional[GenericString] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    template: Optional[Arn] = None
    worldCount: Optional[WorldCount] = None
    finishedWorldsSummary: Optional[FinishedWorldsSummary] = None
    tags: Optional[TagMap] = None
    worldTags: Optional[TagMap] = None


class ListDeploymentJobsResponse(BaseModel):
    deploymentJobs: Optional[DeploymentJobs] = None
    nextToken: Optional[PaginationToken] = None


class SyncDeploymentJobResponse(BaseModel):
    arn: Optional[Arn] = None
    fleet: Optional[Arn] = None
    status: Optional[DeploymentStatus] = None
    deploymentConfig: Optional[DeploymentConfig] = None
    deploymentApplicationConfigs: Optional[DeploymentApplicationConfigs] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[DeploymentJobErrorCode] = None
    createdAt: Optional[CreatedAt] = None


class RobotApplicationConfigs(BaseModel):
    __root__: Annotated[List[RobotApplicationConfig], Field(max_items=1, min_items=1)]


class SimulationApplicationConfigs(BaseModel):
    __root__: Annotated[
        List[SimulationApplicationConfig], Field(max_items=1, min_items=1)
    ]


class CreateSimulationJobRequest(BaseModel):
    clientRequestToken: Optional[ClientRequestToken] = None
    outputLocation: Optional[OutputLocation] = None
    loggingConfig: Optional[LoggingConfig] = None
    maxJobDurationInSeconds: JobDuration
    iamRole: IamRole
    failureBehavior: Optional[FailureBehavior] = None
    robotApplications: Optional[RobotApplicationConfigs] = None
    simulationApplications: Optional[SimulationApplicationConfigs] = None
    dataSources: Optional[DataSourceConfigs] = None
    tags: Optional[TagMap] = None
    vpcConfig: Optional[VPCConfig] = None
    compute: Optional[Compute] = None


class SimulationJob(BaseModel):
    """
    Information about a simulation job.
    """

    arn: Optional[Arn] = None
    name: Optional[Name] = None
    status: Optional[SimulationJobStatus] = None
    lastStartedAt: Optional[LastStartedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    failureBehavior: Optional[FailureBehavior] = None
    failureCode: Optional[SimulationJobErrorCode] = None
    failureReason: Optional[GenericString] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    outputLocation: Optional[OutputLocation] = None
    loggingConfig: Optional[LoggingConfig] = None
    maxJobDurationInSeconds: Optional[JobDuration] = None
    simulationTimeMillis: Optional[SimulationTimeMillis] = None
    iamRole: Optional[IamRole] = None
    robotApplications: Optional[RobotApplicationConfigs] = None
    simulationApplications: Optional[SimulationApplicationConfigs] = None
    dataSources: Optional[DataSources] = None
    tags: Optional[TagMap] = None
    vpcConfig: Optional[VPCConfigResponse] = None
    networkInterface: Optional[NetworkInterface] = None
    compute: Optional[ComputeResponse] = None


class CreateSimulationJobResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[SimulationJobStatus] = None
    lastStartedAt: Optional[LastStartedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    failureBehavior: Optional[FailureBehavior] = None
    failureCode: Optional[SimulationJobErrorCode] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    outputLocation: Optional[OutputLocation] = None
    loggingConfig: Optional[LoggingConfig] = None
    maxJobDurationInSeconds: Optional[JobDuration] = None
    simulationTimeMillis: Optional[SimulationTimeMillis] = None
    iamRole: Optional[IamRole] = None
    robotApplications: Optional[RobotApplicationConfigs] = None
    simulationApplications: Optional[SimulationApplicationConfigs] = None
    dataSources: Optional[DataSources] = None
    tags: Optional[TagMap] = None
    vpcConfig: Optional[VPCConfigResponse] = None
    compute: Optional[ComputeResponse] = None


class DescribeSimulationJobResponse(SimulationJob):
    pass


class SimulationJobRequest(BaseModel):
    """
    Information about a simulation job request.
    """

    outputLocation: Optional[OutputLocation] = None
    loggingConfig: Optional[LoggingConfig] = None
    maxJobDurationInSeconds: JobDuration
    iamRole: Optional[IamRole] = None
    failureBehavior: Optional[FailureBehavior] = None
    useDefaultApplications: Optional[BoxedBoolean] = None
    robotApplications: Optional[RobotApplicationConfigs] = None
    simulationApplications: Optional[SimulationApplicationConfigs] = None
    dataSources: Optional[DataSourceConfigs] = None
    vpcConfig: Optional[VPCConfig] = None
    compute: Optional[Compute] = None
    tags: Optional[TagMap] = None


class SimulationJobs(BaseModel):
    __root__: List[SimulationJob]


class CreateSimulationJobRequests(BaseModel):
    __root__: Annotated[List[SimulationJobRequest], Field(max_items=1000, min_items=1)]


class FailedCreateSimulationJobRequest(BaseModel):
    """
    Information about a failed create simulation job request.
    """

    request: Optional[SimulationJobRequest] = None
    failureReason: Optional[GenericString] = None
    failureCode: Optional[SimulationJobErrorCode] = None
    failedAt: Optional[FailedAt] = None


class StartSimulationJobBatchRequest(BaseModel):
    clientRequestToken: Optional[ClientRequestToken] = None
    batchPolicy: Optional[BatchPolicy] = None
    createSimulationJobRequests: CreateSimulationJobRequests
    tags: Optional[TagMap] = None


class BatchDescribeSimulationJobResponse(BaseModel):
    jobs: Optional[SimulationJobs] = None
    unprocessedJobs: Optional[Arns] = None


class FailedCreateSimulationJobRequests(BaseModel):
    __root__: List[FailedCreateSimulationJobRequest]


class DescribeSimulationJobBatchResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[SimulationJobBatchStatus] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    createdAt: Optional[CreatedAt] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    batchPolicy: Optional[BatchPolicy] = None
    failureCode: Optional[SimulationJobBatchErrorCode] = None
    failureReason: Optional[GenericString] = None
    failedRequests: Optional[FailedCreateSimulationJobRequests] = None
    pendingRequests: Optional[CreateSimulationJobRequests] = None
    createdRequests: Optional[SimulationJobSummaries] = None
    tags: Optional[TagMap] = None


class StartSimulationJobBatchResponse(BaseModel):
    arn: Optional[Arn] = None
    status: Optional[SimulationJobBatchStatus] = None
    createdAt: Optional[CreatedAt] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    batchPolicy: Optional[BatchPolicy] = None
    failureCode: Optional[SimulationJobBatchErrorCode] = None
    failureReason: Optional[GenericString] = None
    failedRequests: Optional[FailedCreateSimulationJobRequests] = None
    pendingRequests: Optional[CreateSimulationJobRequests] = None
    createdRequests: Optional[SimulationJobSummaries] = None
    tags: Optional[TagMap] = None

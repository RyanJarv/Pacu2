# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:35+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class AssociateCertificateResponse(BaseModel):
    pass


class BadRequestException(BaseModel):
    __root__: Any


class InternalServerErrorException(BadRequestException):
    pass


class ForbiddenException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class TooManyRequestsException(BadRequestException):
    pass


class ConflictException(BadRequestException):
    pass


class CancelJobResponse(AssociateCertificateResponse):
    pass


class AccelerationMode(Enum):
    """
    Specify whether the service runs your job with accelerated transcoding. Choose DISABLED if you don't want accelerated transcoding. Choose ENABLED if you want your job to run with accelerated transcoding and to fail if your input files or your job settings aren't compatible with accelerated transcoding. Choose PREFERRED if you want your job to run with accelerated transcoding if the job is compatible with the feature and to run at standard speed if it's not.
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    PREFERRED = 'PREFERRED'


class _IntegerMinNegative1000Max1000(BaseModel):
    __root__: Annotated[int, Field(ge=-1000.0, le=1000.0)]


class _String(BaseModel):
    __root__: str


class Commitment(Enum):
    """
    The length of the term of your reserved queue pricing plan commitment.
    """

    ONE_YEAR = 'ONE_YEAR'


class RenewalType(Enum):
    """
    Specifies whether the term of your reserved queue pricing plan is automatically extended (AUTO_RENEW) or expires (EXPIRE) at the end of the term.
    """

    AUTO_RENEW = 'AUTO_RENEW'
    EXPIRE = 'EXPIRE'


class _Integer(BaseModel):
    __root__: int


class DeleteJobTemplateResponse(AssociateCertificateResponse):
    pass


class DeletePresetResponse(AssociateCertificateResponse):
    pass


class DeleteQueueResponse(AssociateCertificateResponse):
    pass


class DisassociateCertificateResponse(AssociateCertificateResponse):
    pass


class TagResourceResponse(AssociateCertificateResponse):
    pass


class UntagResourceResponse(AssociateCertificateResponse):
    pass


class AacAudioDescriptionBroadcasterMix(Enum):
    """
    Choose BROADCASTER_MIXED_AD when the input contains pre-mixed main audio + audio description (AD) as a stereo pair. The value for AudioType will be set to 3, which signals to downstream systems that this stream contains "broadcaster mixed AD". Note that the input received by the encoder must contain pre-mixed audio; the encoder does not perform the mixing. When you choose BROADCASTER_MIXED_AD, the encoder ignores any values you provide in AudioType and  FollowInputAudioType. Choose NORMAL when the input does not contain pre-mixed audio + audio description (AD). In this case, the encoder will use any values you provide for AudioType and FollowInputAudioType.
    """

    BROADCASTER_MIXED_AD = 'BROADCASTER_MIXED_AD'
    NORMAL = 'NORMAL'


class AacCodecProfile(Enum):
    """
    AAC Profile.
    """

    LC = 'LC'
    HEV1 = 'HEV1'
    HEV2 = 'HEV2'


class AacCodingMode(Enum):
    """
    Mono (Audio Description), Mono, Stereo, or 5.1 channel layout. Valid values depend on rate control mode and profile. "1.0 - Audio Description (Receiver Mix)" setting receives a stereo description plus control track and emits a mono AAC encode of the description track, with control data emitted in the PES header as per ETSI TS 101 154 Annex E.
    """

    AD_RECEIVER_MIX = 'AD_RECEIVER_MIX'
    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_5_1 = 'CODING_MODE_5_1'


class AacRateControlMode(Enum):
    """
    Rate Control Mode.
    """

    CBR = 'CBR'
    VBR = 'VBR'


class AacRawFormat(Enum):
    """
    Enables LATM/LOAS AAC output. Note that if you use LATM/LOAS AAC in an output, you must choose "No container" for the output container.
    """

    LATM_LOAS = 'LATM_LOAS'
    NONE = 'NONE'


class _IntegerMin6000Max1024000(BaseModel):
    __root__: Annotated[int, Field(ge=6000.0, le=1024000.0)]


class _IntegerMin8000Max96000(BaseModel):
    __root__: Annotated[int, Field(ge=8000.0, le=96000.0)]


class AacSpecification(Enum):
    """
    Use MPEG-2 AAC instead of MPEG-4 AAC audio for raw or MPEG-2 Transport Stream containers.
    """

    MPEG2 = 'MPEG2'
    MPEG4 = 'MPEG4'


class AacVbrQuality(Enum):
    """
    VBR Quality Level - Only used if rate_control_mode is VBR.
    """

    LOW = 'LOW'
    MEDIUM_LOW = 'MEDIUM_LOW'
    MEDIUM_HIGH = 'MEDIUM_HIGH'
    HIGH = 'HIGH'


class AacSettings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value AAC. The service accepts one of two mutually exclusive groups of AAC settings--VBR and CBR. To select one of these modes, set the value of Bitrate control mode (rateControlMode) to "VBR" or "CBR".  In VBR mode, you control the audio quality with the setting VBR quality (vbrQuality). In CBR mode, you use the setting Bitrate (bitrate). Defaults and valid values depend on the rate control mode.
    """

    AudioDescriptionBroadcasterMix: Optional[AacAudioDescriptionBroadcasterMix] = None
    Bitrate: Optional[_IntegerMin6000Max1024000] = None
    CodecProfile: Optional[AacCodecProfile] = None
    CodingMode: Optional[AacCodingMode] = None
    RateControlMode: Optional[AacRateControlMode] = None
    RawFormat: Optional[AacRawFormat] = None
    SampleRate: Optional[_IntegerMin8000Max96000] = None
    Specification: Optional[AacSpecification] = None
    VbrQuality: Optional[AacVbrQuality] = None


class Ac3BitstreamMode(Enum):
    """
    Specify the bitstream mode for the AC-3 stream that the encoder emits. For more information about the AC3 bitstream mode, see ATSC A/52-2012 (Annex E).
    """

    COMPLETE_MAIN = 'COMPLETE_MAIN'
    COMMENTARY = 'COMMENTARY'
    DIALOGUE = 'DIALOGUE'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    MUSIC_AND_EFFECTS = 'MUSIC_AND_EFFECTS'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'
    VOICE_OVER = 'VOICE_OVER'


class Ac3CodingMode(Enum):
    """
    Dolby Digital coding mode. Determines number of channels.
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2_LFE = 'CODING_MODE_3_2_LFE'


class Ac3DynamicRangeCompressionLine(Enum):
    """
    Choose the Dolby Digital dynamic range control (DRC) profile that MediaConvert uses when encoding the metadata in the Dolby Digital stream for the line operating mode. Related setting: When you use this setting, MediaConvert ignores any value you provide for Dynamic range compression profile (DynamicRangeCompressionProfile). For information about the Dolby Digital DRC operating modes and profiles, see the Dynamic Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.
    """

    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'
    NONE = 'NONE'


class Ac3DynamicRangeCompressionProfile(Enum):
    """
    When you want to add Dolby dynamic range compression (DRC) signaling to your output stream, we recommend that you use the mode-specific settings instead of Dynamic range compression profile (DynamicRangeCompressionProfile). The mode-specific settings are Dynamic range compression profile, line mode (dynamicRangeCompressionLine) and Dynamic range compression profile, RF mode (dynamicRangeCompressionRf). Note that when you specify values for all three settings, MediaConvert ignores the value of this setting in favor of the mode-specific settings. If you do use this setting instead of the mode-specific settings, choose None (NONE) to leave out DRC signaling. Keep the default Film standard (FILM_STANDARD) to set the profile to Dolby's film standard profile for all operating modes.
    """

    FILM_STANDARD = 'FILM_STANDARD'
    NONE = 'NONE'


class Ac3LfeFilter(Enum):
    """
    Applies a 120Hz lowpass filter to the LFE channel prior to encoding. Only valid with 3_2_LFE coding mode.
    """

    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Ac3MetadataControl(Enum):
    """
    When set to FOLLOW_INPUT, encoder metadata will be sourced from the DD, DD+, or DolbyE decoder that supplied this audio data. If audio was not supplied from one of these streams, then the static metadata settings will be used.
    """

    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class _IntegerMin64000Max640000(BaseModel):
    __root__: Annotated[int, Field(ge=64000.0, le=640000.0)]


class _IntegerMin1Max31(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=31.0)]


class _IntegerMin48000Max48000(BaseModel):
    __root__: Annotated[int, Field(ge=48000.0, le=48000.0)]


class Ac3Settings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value AC3.
    """

    Bitrate: Optional[_IntegerMin64000Max640000] = None
    BitstreamMode: Optional[Ac3BitstreamMode] = None
    CodingMode: Optional[Ac3CodingMode] = None
    Dialnorm: Optional[_IntegerMin1Max31] = None
    DynamicRangeCompressionLine: Optional[Ac3DynamicRangeCompressionLine] = None
    DynamicRangeCompressionProfile: Optional[Ac3DynamicRangeCompressionProfile] = None
    DynamicRangeCompressionRf: Optional[Ac3DynamicRangeCompressionLine] = None
    LfeFilter: Optional[Ac3LfeFilter] = None
    MetadataControl: Optional[Ac3MetadataControl] = None
    SampleRate: Optional[_IntegerMin48000Max48000] = None


class AccelerationSettings(BaseModel):
    """
    Accelerated transcoding can significantly speed up jobs with long, visually complex content.
    """

    Mode: AccelerationMode


class AccelerationStatus(Enum):
    """
    Describes whether the current job is running with accelerated transcoding. For jobs that have Acceleration (AccelerationMode) set to DISABLED, AccelerationStatus is always NOT_APPLICABLE. For jobs that have Acceleration (AccelerationMode) set to ENABLED or PREFERRED, AccelerationStatus is one of the other states. AccelerationStatus is IN_PROGRESS initially, while the service determines whether the input files and job settings are compatible with accelerated transcoding. If they are, AcclerationStatus is ACCELERATED. If your input files and job settings aren't compatible with accelerated transcoding, the service either fails your job or runs it without accelerated transcoding, depending on how you set Acceleration (AccelerationMode). When the service runs your job without accelerated transcoding, AccelerationStatus is NOT_ACCELERATED.
    """

    NOT_APPLICABLE = 'NOT_APPLICABLE'
    IN_PROGRESS = 'IN_PROGRESS'
    ACCELERATED = 'ACCELERATED'
    NOT_ACCELERATED = 'NOT_ACCELERATED'


class AfdSignaling(Enum):
    """
    This setting only applies to H.264, H.265, and MPEG2 outputs. Use Insert AFD signaling (AfdSignaling) to specify whether the service includes AFD values in the output video data and what those values are. * Choose None to remove all AFD values from this output. * Choose Fixed to ignore input AFD values and instead encode the value specified in the job. * Choose Auto to calculate output AFD values based on the input AFD scaler data.
    """

    NONE = 'NONE'
    AUTO = 'AUTO'
    FIXED = 'FIXED'


class _IntegerMin16Max24(BaseModel):
    __root__: Annotated[int, Field(ge=16.0, le=24.0)]


class _IntegerMin1Max64(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=64.0)]


class _IntegerMin8000Max192000(BaseModel):
    __root__: Annotated[int, Field(ge=8000.0, le=192000.0)]


class AiffSettings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value AIFF.
    """

    BitDepth: Optional[_IntegerMin16Max24] = None
    Channels: Optional[_IntegerMin1Max64] = None
    SampleRate: Optional[_IntegerMin8000Max192000] = None


class AlphaBehavior(Enum):
    """
    Ignore this setting unless this input is a QuickTime animation with an alpha channel. Use this setting to create separate Key and Fill outputs. In each output, specify which part of the input MediaConvert uses. Leave this setting at the default value DISCARD to delete the alpha channel and preserve the video. Set it to REMAP_TO_LUMA to delete the video and map the alpha channel to the luma channel of your outputs.
    """

    DISCARD = 'DISCARD'
    REMAP_TO_LUMA = 'REMAP_TO_LUMA'


class AncillaryConvert608To708(Enum):
    """
    Specify whether this set of input captions appears in your outputs in both 608 and 708 format. If you choose Upconvert (UPCONVERT), MediaConvert includes the captions data in two ways: it passes the 608 data through using the 608 compatibility bytes fields of the 708 wrapper, and it also translates the 608 data into 708.
    """

    UPCONVERT = 'UPCONVERT'
    DISABLED = 'DISABLED'


class _IntegerMin1Max4(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=4.0)]


class AncillaryTerminateCaptions(Enum):
    """
    By default, the service terminates any unterminated captions at the end of each input. If you want the caption to continue onto your next input, disable this setting.
    """

    END_OF_INPUT = 'END_OF_INPUT'
    DISABLED = 'DISABLED'


class AncillarySourceSettings(BaseModel):
    """
    Settings for ancillary captions source.
    """

    Convert608To708: Optional[AncillaryConvert608To708] = None
    SourceAncillaryChannelNumber: Optional[_IntegerMin1Max4] = None
    TerminateCaptions: Optional[AncillaryTerminateCaptions] = None


class AntiAlias(Enum):
    """
    The anti-alias filter is automatically applied to all outputs. The service no longer accepts the value DISABLED for AntiAlias. If you specify that in your job, the service will ignore the setting.
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class AssociateCertificateRequest(BaseModel):
    Arn: _String


class AudioChannelTag(Enum):
    """
    You can add a tag for this mono-channel audio track to mimic its placement in a multi-channel layout.  For example, if this track is the left surround channel, choose Left surround (LS).
    """

    L = 'L'
    R = 'R'
    C = 'C'
    LFE = 'LFE'
    LS = 'LS'
    RS = 'RS'
    LC = 'LC'
    RC = 'RC'
    CS = 'CS'
    LSD = 'LSD'
    RSD = 'RSD'
    TCS = 'TCS'
    VHL = 'VHL'
    VHC = 'VHC'
    VHR = 'VHR'


class AudioChannelTaggingSettings(BaseModel):
    """
    When you mimic a multi-channel audio layout with multiple mono-channel tracks, you can tag each channel layout manually. For example, you would tag the tracks that contain your left, right, and center audio with Left (L), Right (R), and Center (C), respectively. When you don't specify a value, MediaConvert labels your track as Center (C) by default. To use audio layout tagging, your output must be in a QuickTime (.mov) container; your audio codec must be AAC, WAV, or AIFF; and you must set up your audio track to have only one channel.
    """

    ChannelTag: Optional[AudioChannelTag] = None


class AudioCodec(Enum):
    """
    Choose the audio codec for this output. Note that the option Dolby Digital passthrough (PASSTHROUGH) applies only to Dolby Digital and Dolby Digital Plus audio inputs. Make sure that you choose a codec that's supported with your output container: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#reference-codecs-containers-output-audio For audio-only outputs, make sure that both your input audio codec and your output audio codec are supported for audio-only workflows. For more information, see: https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers-input.html#reference-codecs-containers-input-audio-only and https://docs.aws.amazon.com/mediaconvert/latest/ug/reference-codecs-containers.html#audio-only-output
    """

    AAC = 'AAC'
    MP2 = 'MP2'
    MP3 = 'MP3'
    WAV = 'WAV'
    AIFF = 'AIFF'
    AC3 = 'AC3'
    EAC3 = 'EAC3'
    EAC3_ATMOS = 'EAC3_ATMOS'
    VORBIS = 'VORBIS'
    OPUS = 'OPUS'
    PASSTHROUGH = 'PASSTHROUGH'


class AudioDefaultSelection(Enum):
    """
    Enable this setting on one audio selector to set it as the default for the job. The service uses this default for outputs where it can't find the specified input audio. If you don't set a default, those outputs have no audio.
    """

    DEFAULT = 'DEFAULT'
    NOT_DEFAULT = 'NOT_DEFAULT'


class _IntegerMin0Max255(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=255.0)]


class _StringPatternAZaZ23AZaZ(BaseModel):
    __root__: Annotated[str, Field(regex='^[A-Za-z]{2,3}(-[A-Za-z-]+)?$')]


class LanguageCode(Enum):
    """
    Specify the language, using the ISO 639-2 three-letter code listed at https://www.loc.gov/standards/iso639-2/php/code_list.php.
    """

    ENG = 'ENG'
    SPA = 'SPA'
    FRA = 'FRA'
    DEU = 'DEU'
    GER = 'GER'
    ZHO = 'ZHO'
    ARA = 'ARA'
    HIN = 'HIN'
    JPN = 'JPN'
    RUS = 'RUS'
    POR = 'POR'
    ITA = 'ITA'
    URD = 'URD'
    VIE = 'VIE'
    KOR = 'KOR'
    PAN = 'PAN'
    ABK = 'ABK'
    AAR = 'AAR'
    AFR = 'AFR'
    AKA = 'AKA'
    SQI = 'SQI'
    AMH = 'AMH'
    ARG = 'ARG'
    HYE = 'HYE'
    ASM = 'ASM'
    AVA = 'AVA'
    AVE = 'AVE'
    AYM = 'AYM'
    AZE = 'AZE'
    BAM = 'BAM'
    BAK = 'BAK'
    EUS = 'EUS'
    BEL = 'BEL'
    BEN = 'BEN'
    BIH = 'BIH'
    BIS = 'BIS'
    BOS = 'BOS'
    BRE = 'BRE'
    BUL = 'BUL'
    MYA = 'MYA'
    CAT = 'CAT'
    KHM = 'KHM'
    CHA = 'CHA'
    CHE = 'CHE'
    NYA = 'NYA'
    CHU = 'CHU'
    CHV = 'CHV'
    COR = 'COR'
    COS = 'COS'
    CRE = 'CRE'
    HRV = 'HRV'
    CES = 'CES'
    DAN = 'DAN'
    DIV = 'DIV'
    NLD = 'NLD'
    DZO = 'DZO'
    ENM = 'ENM'
    EPO = 'EPO'
    EST = 'EST'
    EWE = 'EWE'
    FAO = 'FAO'
    FIJ = 'FIJ'
    FIN = 'FIN'
    FRM = 'FRM'
    FUL = 'FUL'
    GLA = 'GLA'
    GLG = 'GLG'
    LUG = 'LUG'
    KAT = 'KAT'
    ELL = 'ELL'
    GRN = 'GRN'
    GUJ = 'GUJ'
    HAT = 'HAT'
    HAU = 'HAU'
    HEB = 'HEB'
    HER = 'HER'
    HMO = 'HMO'
    HUN = 'HUN'
    ISL = 'ISL'
    IDO = 'IDO'
    IBO = 'IBO'
    IND = 'IND'
    INA = 'INA'
    ILE = 'ILE'
    IKU = 'IKU'
    IPK = 'IPK'
    GLE = 'GLE'
    JAV = 'JAV'
    KAL = 'KAL'
    KAN = 'KAN'
    KAU = 'KAU'
    KAS = 'KAS'
    KAZ = 'KAZ'
    KIK = 'KIK'
    KIN = 'KIN'
    KIR = 'KIR'
    KOM = 'KOM'
    KON = 'KON'
    KUA = 'KUA'
    KUR = 'KUR'
    LAO = 'LAO'
    LAT = 'LAT'
    LAV = 'LAV'
    LIM = 'LIM'
    LIN = 'LIN'
    LIT = 'LIT'
    LUB = 'LUB'
    LTZ = 'LTZ'
    MKD = 'MKD'
    MLG = 'MLG'
    MSA = 'MSA'
    MAL = 'MAL'
    MLT = 'MLT'
    GLV = 'GLV'
    MRI = 'MRI'
    MAR = 'MAR'
    MAH = 'MAH'
    MON = 'MON'
    NAU = 'NAU'
    NAV = 'NAV'
    NDE = 'NDE'
    NBL = 'NBL'
    NDO = 'NDO'
    NEP = 'NEP'
    SME = 'SME'
    NOR = 'NOR'
    NOB = 'NOB'
    NNO = 'NNO'
    OCI = 'OCI'
    OJI = 'OJI'
    ORI = 'ORI'
    ORM = 'ORM'
    OSS = 'OSS'
    PLI = 'PLI'
    FAS = 'FAS'
    POL = 'POL'
    PUS = 'PUS'
    QUE = 'QUE'
    QAA = 'QAA'
    RON = 'RON'
    ROH = 'ROH'
    RUN = 'RUN'
    SMO = 'SMO'
    SAG = 'SAG'
    SAN = 'SAN'
    SRD = 'SRD'
    SRB = 'SRB'
    SNA = 'SNA'
    III = 'III'
    SND = 'SND'
    SIN = 'SIN'
    SLK = 'SLK'
    SLV = 'SLV'
    SOM = 'SOM'
    SOT = 'SOT'
    SUN = 'SUN'
    SWA = 'SWA'
    SSW = 'SSW'
    SWE = 'SWE'
    TGL = 'TGL'
    TAH = 'TAH'
    TGK = 'TGK'
    TAM = 'TAM'
    TAT = 'TAT'
    TEL = 'TEL'
    THA = 'THA'
    BOD = 'BOD'
    TIR = 'TIR'
    TON = 'TON'
    TSO = 'TSO'
    TSN = 'TSN'
    TUR = 'TUR'
    TUK = 'TUK'
    TWI = 'TWI'
    UIG = 'UIG'
    UKR = 'UKR'
    UZB = 'UZB'
    VEN = 'VEN'
    VOL = 'VOL'
    WLN = 'WLN'
    CYM = 'CYM'
    FRY = 'FRY'
    WOL = 'WOL'
    XHO = 'XHO'
    YID = 'YID'
    YOR = 'YOR'
    ZHA = 'ZHA'
    ZUL = 'ZUL'
    ORJ = 'ORJ'
    QPC = 'QPC'
    TNG = 'TNG'


class _StringPatternWS(BaseModel):
    __root__: Annotated[str, Field(regex='^[\\w\\s]*$')]


class AudioNormalizationAlgorithm(Enum):
    """
    Choose one of the following audio normalization algorithms: ITU-R BS.1770-1: Ungated loudness. A measurement of ungated average loudness for an entire piece of content, suitable for measurement of short-form content under ATSC recommendation A/85. Supports up to 5.1 audio channels. ITU-R BS.1770-2: Gated loudness. A measurement of gated average loudness compliant with the requirements of EBU-R128. Supports up to 5.1 audio channels. ITU-R BS.1770-3: Modified peak. The same loudness measurement algorithm as 1770-2, with an updated true peak measurement. ITU-R BS.1770-4: Higher channel count. Allows for more audio channels than the other algorithms, including configurations such as 7.1.
    """

    ITU_BS_1770_1 = 'ITU_BS_1770_1'
    ITU_BS_1770_2 = 'ITU_BS_1770_2'
    ITU_BS_1770_3 = 'ITU_BS_1770_3'
    ITU_BS_1770_4 = 'ITU_BS_1770_4'


class AudioNormalizationAlgorithmControl(Enum):
    """
    When enabled the output audio is corrected using the chosen algorithm. If disabled, the audio will be measured but not adjusted.
    """

    CORRECT_AUDIO = 'CORRECT_AUDIO'
    MEASURE_ONLY = 'MEASURE_ONLY'


class AudioNormalizationLoudnessLogging(Enum):
    """
    If set to LOG, log each output's audio track loudness to a CSV file.
    """

    LOG = 'LOG'
    DONT_LOG = 'DONT_LOG'


class AudioNormalizationPeakCalculation(Enum):
    """
    If set to TRUE_PEAK, calculate and log the TruePeak for each output's audio track loudness.
    """

    TRUE_PEAK = 'TRUE_PEAK'
    NONE = 'NONE'


class _IntegerMinNegative70Max0(BaseModel):
    __root__: Annotated[int, Field(ge=-70.0, le=0.0)]


class _DoubleMinNegative59Max0(BaseModel):
    __root__: float


class _StringMin3Max3PatternAZaZ3(BaseModel):
    __root__: Annotated[str, Field(max_length=3, min_length=3, regex='^[A-Za-z]{3}$')]


class _StringPatternS3MM2PPWWEEBBMMMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8LLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMAAAACCAAIIFFFFMMPP2AACC3EECC3DDTTSSEEAATTMMOOSSHttpsMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8LLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMAAAACCAAIIFFFFMMPP2AACC3EECC3DDTTSSEEAATTMMOOSS(
    BaseModel
):
    __root__: Annotated[
        str,
        Field(
            regex='^((s3://([^\\/]+\\/+)+([^\\/\\.]+|(([^\\/]*)\\.([mM]2[pP]|[wW][eE][bB][mM]|[mM]2[vV]|[mM][pP][eE][gG]|[mM][pP]3|[aA][vV][iI]|[mM][pP]4|[fF][lL][vV]|[mM][pP][tT]|[mM][pP][gG]|[mM]4[vV]|[tT][rR][pP]|[fF]4[vV]|[mM]2[tT][sS]|[tT][sS]|264|[hH]264|[mM][kK][vV]|[mM][kK][aA]|[mM][oO][vV]|[mM][tT][sS]|[mM]2[tT]|[wW][mM][vVaA]|[aA][sS][fF]|[vV][oO][bB]|3[gG][pP]|3[gG][pP][pP]|[mM][xX][fF]|[dD][iI][vV][xX]|[xX][vV][iI][dD]|[rR][aA][wW]|[dD][vV]|[gG][xX][fF]|[mM]1[vV]|3[gG]2|[vV][mM][fF]|[mM]3[uU]8|[lL][cC][hH]|[gG][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF][hH][dD]|[wW][aA][vV]|[yY]4[mM]|[aA][aA][cC]|[aA][iI][fF][fF]|[mM][pP]2|[aA][cC]3|[eE][cC]3|[dD][tT][sS][eE]|[aA][tT][mM][oO][sS]))))|(https?://([^\\/]+\\/+)+([^\\/\\.]+|(([^\\/]*)\\.([mM]2[vV]|[mM][pP][eE][gG]|[mM][pP]3|[aA][vV][iI]|[mM][pP]4|[fF][lL][vV]|[mM][pP][tT]|[mM][pP][gG]|[mM]4[vV]|[tT][rR][pP]|[fF]4[vV]|[mM]2[tT][sS]|[tT][sS]|264|[hH]264|[mM][kK][vV]|[mM][kK][aA]|[mM][oO][vV]|[mM][tT][sS]|[mM]2[tT]|[wW][mM][vVaA]|[aA][sS][fF]|[vV][oO][bB]|3[gG][pP]|3[gG][pP][pP]|[mM][xX][fF]|[dD][iI][vV][xX]|[xX][vV][iI][dD]|[rR][aA][wW]|[dD][vV]|[gG][xX][fF]|[mM]1[vV]|3[gG]2|[vV][mM][fF]|[mM]3[uU]8|[lL][cC][hH]|[gG][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF][hH][dD]|[wW][aA][vV]|[yY]4[mM]|[aA][aA][cC]|[aA][iI][fF][fF]|[mM][pP]2|[aA][cC]3|[eE][cC]3|[dD][tT][sS][eE]|[aA][tT][mM][oO][sS])))(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$'
        ),
    ]


class HlsRenditionGroupSettings(BaseModel):
    """
    Settings specific to audio sources in an HLS alternate rendition group. Specify the properties (renditionGroupId, renditionName or renditionLanguageCode) to identify the unique audio track among the alternative rendition groups present in the HLS manifest. If no unique track is found, or multiple tracks match the properties provided, the job fails. If no properties in hlsRenditionGroupSettings are specified, the default audio track within the video segment is chosen. If there is no audio within video segment, the alternative audio with DEFAULT=YES is chosen instead.
    """

    RenditionGroupId: Optional[_String] = None
    RenditionLanguageCode: Optional[LanguageCode] = None
    RenditionName: Optional[_String] = None


class _IntegerMinNegative2147483648Max2147483647(BaseModel):
    __root__: Annotated[int, Field(ge=-2147483648.0, le=2147483647.0)]


class _IntegerMin0Max8(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=8.0)]


class AudioSelectorType(Enum):
    """
    Specifies the type of the audio selector.
    """

    PID = 'PID'
    TRACK = 'TRACK'
    LANGUAGE_CODE = 'LANGUAGE_CODE'
    HLS_RENDITION_GROUP = 'HLS_RENDITION_GROUP'


class _IntegerMin100000Max100000000(BaseModel):
    __root__: Annotated[int, Field(ge=100000.0, le=100000000.0)]


class _IntegerMin3Max15(BaseModel):
    __root__: Annotated[int, Field(ge=3.0, le=15.0)]


class AutomatedAbrSettings(BaseModel):
    """
    Use automated ABR to have MediaConvert set up the renditions in your ABR package for you automatically, based on characteristics of your input video. This feature optimizes video quality while minimizing the overall size of your ABR package.
    """

    MaxAbrBitrate: Optional[_IntegerMin100000Max100000000] = None
    MaxRenditions: Optional[_IntegerMin3Max15] = None
    MinAbrBitrate: Optional[_IntegerMin100000Max100000000] = None


class AutomatedEncodingSettings(BaseModel):
    """
    Use automated encoding to have MediaConvert choose your encoding settings for you, based on characteristics of your input video.
    """

    AbrSettings: Optional[AutomatedAbrSettings] = None


class Av1AdaptiveQuantization(Enum):
    """
    Specify the strength of any adaptive quantization filters that you enable. The value that you choose here applies to Spatial adaptive quantization (spatialAdaptiveQuantization).
    """

    OFF = 'OFF'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'


class Av1FramerateControl(Enum):
    """
    If you are using the console, use the Framerate setting to specify the frame rate for this output. If you want to keep the same frame rate as the input video, choose Follow source. If you want to do frame rate conversion, choose a frame rate from the dropdown list or choose Custom. The framerates shown in the dropdown list are decimal approximations of fractions. If you choose Custom, specify your frame rate as a fraction. If you are creating your transcoding job specification as a JSON file without the console, use FramerateControl to specify which value the service uses for the frame rate for this output. Choose INITIALIZE_FROM_SOURCE if you want the service to use the frame rate from the input. Choose SPECIFIED if you want the service to use the frame rate you specify in the settings FramerateNumerator and FramerateDenominator.
    """

    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class Av1FramerateConversionAlgorithm(Enum):
    """
    Choose the method that you want MediaConvert to use when increasing or decreasing the frame rate. We recommend using drop duplicate (DUPLICATE_DROP) for numerically simple conversions, such as 60 fps to 30 fps. For numerically complex conversions, you can use interpolate (INTERPOLATE) to avoid stutter. This results in a smooth picture, but might introduce undesirable video artifacts. For complex frame rate conversions, especially if your source video has already been converted from its original cadence, use FrameFormer (FRAMEFORMER) to do motion-compensated interpolation. FrameFormer chooses the best conversion method frame by frame. Note that using FrameFormer increases the transcoding time and incurs a significant add-on cost.
    """

    DUPLICATE_DROP = 'DUPLICATE_DROP'
    INTERPOLATE = 'INTERPOLATE'
    FRAMEFORMER = 'FRAMEFORMER'


class _IntegerMin1Max10(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class _DoubleMin0Max1(_DoubleMinNegative59Max0):
    pass


class Av1QvbrSettings(BaseModel):
    """
    Settings for quality-defined variable bitrate encoding with the H.265 codec. Use these settings only when you set QVBR for Rate control mode (RateControlMode).
    """

    QvbrQualityLevel: Optional[_IntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[_DoubleMin0Max1] = None


class Av1RateControlMode(Enum):
    """
    'With AV1 outputs, for rate control mode, MediaConvert supports only quality-defined variable bitrate (QVBR). You can''t use CBR or VBR.'
    """

    QVBR = 'QVBR'


class _IntegerMin1Max2147483647(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2147483647.0)]


class _DoubleMin0(_DoubleMinNegative59Max0):
    pass


class _IntegerMin1000Max1152000000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=1152000000.0)]


class _IntegerMin0Max15(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=15.0)]


class _IntegerMin1Max32(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=32.0)]


class Av1Settings(BaseModel):
    """
    Required when you set Codec, under VideoDescription>CodecSettings to the value AV1.
    """

    AdaptiveQuantization: Optional[Av1AdaptiveQuantization] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    MaxBitrate: Optional[_IntegerMin1000Max1152000000] = None
    NumberBFramesBetweenReferenceFrames: Optional[_IntegerMin0Max15] = None
    QvbrSettings: Optional[Av1QvbrSettings] = None
    RateControlMode: Optional[Av1RateControlMode] = None
    Slices: Optional[_IntegerMin1Max32] = None
    SpatialAdaptiveQuantization: Optional[AntiAlias] = None


class _StringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG(BaseModel):
    __root__: Annotated[
        str,
        Field(
            min_length=14,
            regex='^((s3://(.*?)\\.(bmp|BMP|png|PNG))|(https?://(.*?)\\.(bmp|BMP|png|PNG)(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        ),
    ]


class AvcIntraClass(Enum):
    """
    Specify the AVC-Intra class of your output. The AVC-Intra class selection determines the output video bit rate depending on the frame rate of the output. Outputs with higher class values have higher bitrates and improved image quality. Note that for Class 4K/2K, MediaConvert supports only 4:2:2 chroma subsampling.
    """

    CLASS_50 = 'CLASS_50'
    CLASS_100 = 'CLASS_100'
    CLASS_200 = 'CLASS_200'
    CLASS_4K_2K = 'CLASS_4K_2K'


class AvcIntraInterlaceMode(Enum):
    """
    Choose the scan line type for the output. Keep the default value, Progressive (PROGRESSIVE) to create a progressive output, regardless of the scan type of your input. Use Top field first (TOP_FIELD) or Bottom field first (BOTTOM_FIELD) to create an output that's interlaced with the same field polarity throughout. Use Follow, default top (FOLLOW_TOP_FIELD) or Follow, default bottom (FOLLOW_BOTTOM_FIELD) to produce outputs with the same field polarity as the source. For jobs that have multiple inputs, the output field polarity might change over the course of the output. Follow behavior depends on the input scan type. If the source is interlaced, the output will be interlaced with the same polarity as the source. If the source is progressive, the output will be interlaced with top field bottom field first, depending on which of the Follow options you choose.
    """

    PROGRESSIVE = 'PROGRESSIVE'
    TOP_FIELD = 'TOP_FIELD'
    BOTTOM_FIELD = 'BOTTOM_FIELD'
    FOLLOW_TOP_FIELD = 'FOLLOW_TOP_FIELD'
    FOLLOW_BOTTOM_FIELD = 'FOLLOW_BOTTOM_FIELD'


class AvcIntraScanTypeConversionMode(Enum):
    """
    Use this setting for interlaced outputs, when your output frame rate is half of your input frame rate. In this situation, choose Optimized interlacing (INTERLACED_OPTIMIZE) to create a better quality interlaced output. In this case, each progressive frame from the input corresponds to an interlaced field in the output. Keep the default value, Basic interlacing (INTERLACED), for all other output frame rates. With basic interlacing, MediaConvert performs any frame rate conversion first and then interlaces the frames. When you choose Optimized interlacing and you set your output frame rate to a value that isn't suitable for optimized interlacing, MediaConvert automatically falls back to basic interlacing. Required settings: To use optimized interlacing, you must set Telecine (telecine) to None (NONE) or Soft (SOFT). You can't use optimized interlacing for hard telecine outputs. You must also set Interlace mode (interlaceMode) to a value other than Progressive (PROGRESSIVE).
    """

    INTERLACED = 'INTERLACED'
    INTERLACED_OPTIMIZE = 'INTERLACED_OPTIMIZE'


class _IntegerMin1Max1001(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1001.0)]


class _IntegerMin24Max60000(BaseModel):
    __root__: Annotated[int, Field(ge=24.0, le=60000.0)]


class AvcIntraTelecine(Enum):
    """
    When you do frame rate conversion from 23.976 frames per second (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally enable hard telecine (HARD) to create a smoother picture. When you keep the default value, None (NONE), MediaConvert does a standard frame rate conversion to 29.97 without doing anything with the field polarity to create a smoother picture.
    """

    NONE = 'NONE'
    HARD = 'HARD'


class AvcIntraUhdQualityTuningLevel(Enum):
    """
    Optional. Use Quality tuning level (qualityTuningLevel) to choose how many transcoding passes MediaConvert does with your video. When you choose Multi-pass (MULTI_PASS), your video quality is better and your output bitrate is more accurate. That is, the actual bitrate of your output is closer to the target bitrate defined in the specification. When you choose Single-pass (SINGLE_PASS), your encoding time is faster. The default behavior is Single-pass (SINGLE_PASS).
    """

    SINGLE_PASS = 'SINGLE_PASS'
    MULTI_PASS = 'MULTI_PASS'


class BillingTagsSource(Enum):
    """
    The tag type that AWS Billing and Cost Management will use to sort your AWS Elemental MediaConvert costs on any billing report that you set up.
    """

    QUEUE = 'QUEUE'
    PRESET = 'PRESET'
    JOB_TEMPLATE = 'JOB_TEMPLATE'
    JOB = 'JOB'


class BurninSubtitleAlignment(Enum):
    """
    If no explicit x_position or y_position is provided, setting alignment to centered will place the captions at the bottom center of the output. Similarly, setting a left alignment will align captions to the bottom left of the output. If x and y positions are given in conjunction with the alignment parameter, the font will be justified (either left or centered) relative to those coordinates. This option is not valid for source captions that are STL, 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
    """

    CENTERED = 'CENTERED'
    LEFT = 'LEFT'


class BurninSubtitleBackgroundColor(Enum):
    """
        Specifies the color of the rectangle behind the captions.
    All burn-in and DVB-Sub font settings must match.
    """

    NONE = 'NONE'
    BLACK = 'BLACK'
    WHITE = 'WHITE'


class BurninSubtitleFontColor(Enum):
    """
    Specifies the color of the burned-in captions. This option is not valid for source captions that are STL, 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
    """

    WHITE = 'WHITE'
    BLACK = 'BLACK'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'


class _IntegerMin96Max600(BaseModel):
    __root__: Annotated[int, Field(ge=96.0, le=600.0)]


class FontScript(Enum):
    """
    Provide the font script, using an ISO 15924 script code, if the LanguageCode is not sufficient for determining the script type. Where LanguageCode or CustomLanguageCode is sufficient, use "AUTOMATIC" or leave unset.
    """

    AUTOMATIC = 'AUTOMATIC'
    HANS = 'HANS'
    HANT = 'HANT'


class _IntegerMin0Max96(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=96.0)]


class BurninSubtitleOutlineColor(Enum):
    """
    Specifies font outline color. This option is not valid for source captions that are either 608/embedded or teletext. These source settings are already pre-defined by the caption stream. All burn-in and DVB-Sub font settings must match.
    """

    BLACK = 'BLACK'
    WHITE = 'WHITE'
    YELLOW = 'YELLOW'
    RED = 'RED'
    GREEN = 'GREEN'
    BLUE = 'BLUE'


class _IntegerMin0Max10(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10.0)]


class BurninSubtitleTeletextSpacing(Enum):
    """
    Only applies to jobs with input captions in Teletext or STL formats. Specify whether the spacing between letters in your captions is set by the captions grid or varies depending on letter width. Choose fixed grid to conform to the spacing specified in the captions file more accurately. Choose proportional to make the text easier to read if the captions are closed caption.
    """

    FIXED_GRID = 'FIXED_GRID'
    PROPORTIONAL = 'PROPORTIONAL'


class _IntegerMin0Max2147483647(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=2147483647.0)]


class BurninDestinationSettings(BaseModel):
    """
    Settings related to burn-in captions. Set up burn-in captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/burn-in-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to BURN_IN.
    """

    Alignment: Optional[BurninSubtitleAlignment] = None
    BackgroundColor: Optional[BurninSubtitleBackgroundColor] = None
    BackgroundOpacity: Optional[_IntegerMin0Max255] = None
    FontColor: Optional[BurninSubtitleFontColor] = None
    FontOpacity: Optional[_IntegerMin0Max255] = None
    FontResolution: Optional[_IntegerMin96Max600] = None
    FontScript: Optional[FontScript] = None
    FontSize: Optional[_IntegerMin0Max96] = None
    OutlineColor: Optional[BurninSubtitleOutlineColor] = None
    OutlineSize: Optional[_IntegerMin0Max10] = None
    ShadowColor: Optional[BurninSubtitleBackgroundColor] = None
    ShadowOpacity: Optional[_IntegerMin0Max255] = None
    ShadowXOffset: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    ShadowYOffset: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    TeletextSpacing: Optional[BurninSubtitleTeletextSpacing] = None
    XPosition: Optional[_IntegerMin0Max2147483647] = None
    YPosition: Optional[_IntegerMin0Max2147483647] = None


class CancelJobRequest(BaseModel):
    pass


class _StringMin1(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class CaptionDestinationType(Enum):
    """
    Specify the format for this set of captions on this output. The default format is embedded without SCTE-20. Note that your choice of video output container constrains your choice of output captions format. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/captions-support-tables.html. If you are using SCTE-20 and you want to create an output that complies with the SCTE-43 spec, choose SCTE-20 plus embedded (SCTE20_PLUS_EMBEDDED). To create a non-compliant output where the embedded captions come first, choose Embedded plus SCTE-20 (EMBEDDED_PLUS_SCTE20).
    """

    BURN_IN = 'BURN_IN'
    DVB_SUB = 'DVB_SUB'
    EMBEDDED = 'EMBEDDED'
    EMBEDDED_PLUS_SCTE20 = 'EMBEDDED_PLUS_SCTE20'
    IMSC = 'IMSC'
    SCTE20_PLUS_EMBEDDED = 'SCTE20_PLUS_EMBEDDED'
    SCC = 'SCC'
    SRT = 'SRT'
    SMI = 'SMI'
    TELETEXT = 'TELETEXT'
    TTML = 'TTML'
    WEBVTT = 'WEBVTT'


class _IntegerMin1Max60000(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=60000.0)]


class CaptionSourceFramerate(BaseModel):
    """
    Ignore this setting unless your input captions format is SCC. To have the service compensate for differing frame rates between your input captions and input video, specify the frame rate of the captions file. Specify this value as a fraction, using the settings Framerate numerator (framerateNumerator) and Framerate denominator (framerateDenominator). For example, you might specify 24 / 1 for 24 fps, 25 / 1 for 25 fps, 24000 / 1001 for 23.976 fps, or 30000 / 1001 for 29.97 fps.
    """

    FramerateDenominator: Optional[_IntegerMin1Max1001] = None
    FramerateNumerator: Optional[_IntegerMin1Max60000] = None


class DvbSubSourceSettings(BaseModel):
    """
    DVB Sub Source Settings
    """

    Pid: Optional[_IntegerMin1Max2147483647] = None


class CaptionSourceType(Enum):
    """
    Use Source (SourceType) to identify the format of your input captions.  The service cannot auto-detect caption format.
    """

    ANCILLARY = 'ANCILLARY'
    DVB_SUB = 'DVB_SUB'
    EMBEDDED = 'EMBEDDED'
    SCTE20 = 'SCTE20'
    SCC = 'SCC'
    TTML = 'TTML'
    STL = 'STL'
    SRT = 'SRT'
    SMI = 'SMI'
    SMPTE_TT = 'SMPTE_TT'
    TELETEXT = 'TELETEXT'
    NULL_SOURCE = 'NULL_SOURCE'
    IMSC = 'IMSC'
    WEBVTT = 'WEBVTT'


class TrackSourceSettings(BaseModel):
    """
    Settings specific to caption sources that are specified by track number. Currently, this is only IMSC captions in an IMF package. If your caption source is IMSC 1.1 in a separate xml file, use FileSourceSettings instead of TrackSourceSettings.
    """

    TrackNumber: Optional[_IntegerMin1Max2147483647] = None


class WebvttHlsSourceSettings(HlsRenditionGroupSettings):
    """
    Settings specific to WebVTT sources in HLS alternative rendition group. Specify the properties (renditionGroupId, renditionName or renditionLanguageCode) to identify the unique subtitle track among the alternative rendition groups present in the HLS manifest. If no unique track is found, or multiple tracks match the specified properties, the job fails. If there is only one subtitle track in the rendition group, the settings can be left empty and the default subtitle track will be chosen. If your caption source is a sidecar file, use FileSourceSettings instead of WebvttHlsSourceSettings.
    """

    pass


class CmafCodecSpecification(Enum):
    """
    Specification to use (RFC-6381 or the default RFC-4281) during m3u8 playlist generation.
    """

    RFC_6381 = 'RFC_6381'
    RFC_4281 = 'RFC_4281'


class _StringMin32Max32Pattern09aFAF32(BaseModel):
    __root__: Annotated[
        str, Field(max_length=32, min_length=32, regex='^[0-9a-fA-F]{32}$')
    ]


class CmafEncryptionType(Enum):
    """
    Specify the encryption scheme that you want the service to use when encrypting your CMAF segments. Choose AES-CBC subsample (SAMPLE-AES) or AES_CTR (AES-CTR).
    """

    SAMPLE_AES = 'SAMPLE_AES'
    AES_CTR = 'AES_CTR'


class CmafInitializationVectorInManifest(Enum):
    """
    When you use DRM with CMAF outputs, choose whether the service writes the 128-bit encryption initialization vector in the HLS and DASH manifests.
    """

    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


class CmafKeyProviderType(Enum):
    """
    Specify whether your DRM encryption key is static or from a key provider that follows the SPEKE standard. For more information about SPEKE, see https://docs.aws.amazon.com/speke/latest/documentation/what-is-speke.html.
    """

    SPEKE = 'SPEKE'
    STATIC_KEY = 'STATIC_KEY'


class _StringPatternS3(BaseModel):
    __root__: Annotated[str, Field(regex='^s3:\\/\\/')]


class CmafImageBasedTrickPlay(Enum):
    """
    Specify whether MediaConvert generates images for trick play. Keep the default value, None (NONE), to not generate any images. Choose Thumbnail (THUMBNAIL) to generate tiled thumbnails. Choose Thumbnail and full frame (THUMBNAIL_AND_FULLFRAME) to generate tiled thumbnails and full-resolution images of single frames. When you enable Write HLS manifest (WriteHlsManifest), MediaConvert creates a child manifest for each set of images that you generate and adds corresponding entries to the parent manifest. When you enable Write DASH manifest (WriteDashManifest), MediaConvert adds an entry in the .mpd manifest for each set of images that you generate. A common application for these images is Roku trick mode. The thumbnails and full-frame images that MediaConvert creates with this feature are compatible with this Roku specification: https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md
    """

    NONE = 'NONE'
    THUMBNAIL = 'THUMBNAIL'
    THUMBNAIL_AND_FULLFRAME = 'THUMBNAIL_AND_FULLFRAME'


class CmafManifestCompression(Enum):
    """
    When set to GZIP, compresses HLS playlist.
    """

    GZIP = 'GZIP'
    NONE = 'NONE'


class CmafManifestDurationFormat(Enum):
    """
    Indicates whether the output manifest should use floating point values for segment duration.
    """

    FLOATING_POINT = 'FLOATING_POINT'
    INTEGER = 'INTEGER'


class _DoubleMin0Max2147483647(_DoubleMinNegative59Max0):
    pass


class CmafMpdProfile(Enum):
    """
    Specify whether your DASH profile is on-demand or main. When you choose Main profile (MAIN_PROFILE), the service signals  urn:mpeg:dash:profile:isoff-main:2011 in your .mpd DASH manifest. When you choose On-demand (ON_DEMAND_PROFILE), the service signals urn:mpeg:dash:profile:isoff-on-demand:2011 in your .mpd. When you choose On-demand, you must also set the output group setting Segment control (SegmentControl) to Single file (SINGLE_FILE).
    """

    MAIN_PROFILE = 'MAIN_PROFILE'
    ON_DEMAND_PROFILE = 'ON_DEMAND_PROFILE'


class CmafPtsOffsetHandlingForBFrames(Enum):
    """
    Use this setting only when your output video stream has B-frames, which causes the initial presentation time stamp (PTS) to be offset from the initial decode time stamp (DTS). Specify how MediaConvert handles PTS when writing time stamps in output DASH manifests. Choose Match initial PTS (MATCH_INITIAL_PTS) when you want MediaConvert to use the initial PTS as the first time stamp in the manifest. Choose Zero-based (ZERO_BASED) to have MediaConvert ignore the initial PTS in the video stream and instead write the initial time stamp as zero in the manifest. For outputs that don't have B-frames, the time stamps in your DASH manifests start at zero regardless of your choice here.
    """

    ZERO_BASED = 'ZERO_BASED'
    MATCH_INITIAL_PTS = 'MATCH_INITIAL_PTS'


class CmafSegmentControl(Enum):
    """
    When set to SINGLE_FILE, a single output file is generated, which is internally segmented using the Fragment Length and Segment Length. When set to SEGMENTED_FILES, separate segment files will be created.
    """

    SINGLE_FILE = 'SINGLE_FILE'
    SEGMENTED_FILES = 'SEGMENTED_FILES'


class CmafSegmentLengthControl(Enum):
    """
    Specify how you want MediaConvert to determine the segment length. Choose Exact (EXACT) to have the encoder use the exact length that you specify with the setting Segment length (SegmentLength). This might result in extra I-frames. Choose Multiple of GOP (GOP_MULTIPLE) to have the encoder round up the segment lengths to match the next GOP boundary.
    """

    EXACT = 'EXACT'
    GOP_MULTIPLE = 'GOP_MULTIPLE'


class CmafTargetDurationCompatibilityMode(Enum):
    """
    When set to LEGACY, the segment target duration is always rounded up to the nearest integer value above its current value in seconds. When set to SPEC\\_COMPLIANT, the segment target duration is rounded up to the nearest integer value if fraction seconds are greater than or equal to 0.5 (>= 0.5) and rounded down if less than 0.5 (< 0.5). You may need to use LEGACY if your client needs to ensure that the target duration is always longer than the actual duration of the segment. Some older players may experience interrupted playback when the actual duration of a track in a segment is longer than the target duration.
    """

    LEGACY = 'LEGACY'
    SPEC_COMPLIANT = 'SPEC_COMPLIANT'


class CmfcAudioDuration(Enum):
    """
    Specify this setting only when your output will be consumed by a downstream repackaging workflow that is sensitive to very small duration differences between video and audio. For this situation, choose Match video duration (MATCH_VIDEO_DURATION). In all other cases, keep the default value, Default codec duration (DEFAULT_CODEC_DURATION). When you choose Match video duration, MediaConvert pads the output audio streams with silence or trims them to ensure that the total duration of each audio stream is at least as long as the total duration of the video stream. After padding or trimming, the audio stream duration is no more than one frame longer than the video stream. MediaConvert applies audio padding or trimming only to the end of the last segment of the output. For unsegmented outputs, MediaConvert adds padding only to the end of the file. When you keep the default value, any minor discrepancies between audio and video duration will depend on your output audio codec.
    """

    DEFAULT_CODEC_DURATION = 'DEFAULT_CODEC_DURATION'
    MATCH_VIDEO_DURATION = 'MATCH_VIDEO_DURATION'


class CmfcAudioTrackType(Enum):
    """
    Use this setting to control the values that MediaConvert puts in your HLS parent playlist to control how the client player selects which audio track to play. The other options for this setting determine the values that MediaConvert writes for the DEFAULT and AUTOSELECT attributes of the EXT-X-MEDIA entry for the audio variant. For more information about these attributes, see the Apple documentation article https://developer.apple.com/documentation/http_live_streaming/example_playlists_for_http_live_streaming/adding_alternate_media_to_a_playlist. Choose Alternate audio, auto select, default (ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT) to set DEFAULT=YES and AUTOSELECT=YES. Choose this value for only one variant in your output group. Choose Alternate audio, auto select, not default (ALTERNATE_AUDIO_AUTO_SELECT) to set DEFAULT=NO and AUTOSELECT=YES. Choose Alternate Audio, Not Auto Select to set DEFAULT=NO and AUTOSELECT=NO. When you don't specify a value for this setting, MediaConvert defaults to Alternate audio, auto select, default. When there is more than one variant in your output group, you must explicitly choose a value for this setting.
    """

    ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT = 'ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT'
    ALTERNATE_AUDIO_AUTO_SELECT = 'ALTERNATE_AUDIO_AUTO_SELECT'
    ALTERNATE_AUDIO_NOT_AUTO_SELECT = 'ALTERNATE_AUDIO_NOT_AUTO_SELECT'


class CmfcDescriptiveVideoServiceFlag(Enum):
    """
    Specify whether to flag this audio track as descriptive video service (DVS) in your HLS parent manifest. When you choose Flag (FLAG), MediaConvert includes the parameter CHARACTERISTICS="public.accessibility.describes-video" in the EXT-X-MEDIA entry for this track. When you keep the default choice, Don't flag (DONT_FLAG), MediaConvert leaves this parameter out. The DVS flag can help with accessibility on Apple devices. For more information, see the Apple documentation.
    """

    DONT_FLAG = 'DONT_FLAG'
    FLAG = 'FLAG'


class CmfcScte35Esam(Enum):
    """
    Use this setting only when you specify SCTE-35 markers from ESAM. Choose INSERT to put SCTE-35 markers in this output at the insertion points that you specify in an ESAM XML document. Provide the document in the setting SCC XML (sccXml).
    """

    INSERT = 'INSERT'
    NONE = 'NONE'


class CmfcScte35Source(Enum):
    """
    Ignore this setting unless you have SCTE-35 markers in your input video file. Choose Passthrough (PASSTHROUGH) if you want SCTE-35 markers that appear in your input to also appear in this output. Choose None (NONE) if you don't want those SCTE-35 markers in this output.
    """

    PASSTHROUGH = 'PASSTHROUGH'
    NONE = 'NONE'


class CmfcSettings(BaseModel):
    """
    These settings relate to the fragmented MP4 container for the segments in your CMAF outputs.
    """

    AudioDuration: Optional[CmfcAudioDuration] = None
    AudioGroupId: Optional[_String] = None
    AudioRenditionSets: Optional[_String] = None
    AudioTrackType: Optional[CmfcAudioTrackType] = None
    DescriptiveVideoServiceFlag: Optional[CmfcDescriptiveVideoServiceFlag] = None
    IFrameOnlyManifest: Optional[CmafInitializationVectorInManifest] = None
    Scte35Esam: Optional[CmfcScte35Esam] = None
    Scte35Source: Optional[CmfcScte35Source] = None


class _IntegerMin1Max100(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ColorSpaceConversion(Enum):
    """
    Specify the color space you want for this output. The service supports conversion between HDR formats, between SDR formats, from SDR to HDR, and from HDR to SDR. SDR to HDR conversion doesn't upgrade the dynamic range. The converted video has an HDR format, but visually appears the same as an unconverted output. HDR to SDR conversion uses Elemental tone mapping technology to approximate the outcome of manually regrading from HDR to SDR.
    """

    NONE = 'NONE'
    FORCE_601 = 'FORCE_601'
    FORCE_709 = 'FORCE_709'
    FORCE_HDR10 = 'FORCE_HDR10'
    FORCE_HLG_2020 = 'FORCE_HLG_2020'


class _IntegerMinNegative180Max180(BaseModel):
    __root__: Annotated[int, Field(ge=-180.0, le=180.0)]


class SampleRangeConversion(Enum):
    """
    Specify the video color sample range for this output. To create a full range output, you must start with a full range YUV input and keep the default value, None (NONE). To create a limited range output from a full range input, choose Limited range (LIMITED_RANGE_SQUEEZE). With RGB inputs, your output is always limited range, regardless of your choice here. When you create a limited range output from a full range input, MediaConvert limits the active pixel values in a way that depends on the output's bit depth: 8-bit outputs contain only values from 16 through 235 and 10-bit outputs contain only values from 64 through 940. With this conversion, MediaConvert also changes the output metadata to note the limited range.
    """

    LIMITED_RANGE_SQUEEZE = 'LIMITED_RANGE_SQUEEZE'
    NONE = 'NONE'


class ColorMetadata(Enum):
    """
    Choose Insert (INSERT) for this setting to include color metadata in this output. Choose Ignore (IGNORE) to exclude color metadata from this output. If you don't specify a value, the service sets this to Insert by default.
    """

    IGNORE = 'IGNORE'
    INSERT = 'INSERT'


class ColorSpace(Enum):
    """
    If your input video has accurate color space metadata, or if you don't know about color space, leave this set to the default value Follow (FOLLOW). The service will automatically detect your input color space. If your input video has metadata indicating the wrong color space, specify the accurate color space here. If your input video is HDR 10 and the SMPTE ST 2086 Mastering Display Color Volume static metadata isn't present in your video stream, or if that metadata is present but not accurate, choose Force HDR 10 (FORCE_HDR10) here and specify correct values in the input HDR 10 metadata (Hdr10Metadata) settings. For more information about MediaConvert HDR jobs, see https://docs.aws.amazon.com/console/mediaconvert/hdr.
    """

    FOLLOW = 'FOLLOW'
    REC_601 = 'REC_601'
    REC_709 = 'REC_709'
    HDR10 = 'HDR10'
    HLG_2020 = 'HLG_2020'


class ColorSpaceUsage(Enum):
    """
    There are two sources for color metadata, the input file and the job input settings Color space (ColorSpace) and HDR master display information settings(Hdr10Metadata). The Color space usage setting determines which takes precedence. Choose Force (FORCE) to use color metadata from the input job settings. If you don't specify values for those settings, the service defaults to using metadata from your input. FALLBACK - Choose Fallback (FALLBACK) to use color metadata from the source when it is present. If there's no color metadata in your input file, the service defaults to using values you specify in the input settings.
    """

    FORCE = 'FORCE'
    FALLBACK = 'FALLBACK'


class ContainerType(Enum):
    """
    Container for this output. Some containers require a container settings object. If not specified, the default object will be created.
    """

    F4V = 'F4V'
    ISMV = 'ISMV'
    M2TS = 'M2TS'
    M3U8 = 'M3U8'
    CMFC = 'CMFC'
    MOV = 'MOV'
    MP4 = 'MP4'
    MPD = 'MPD'
    MXF = 'MXF'
    WEBM = 'WEBM'
    RAW = 'RAW'


class CopyProtectionAction(Enum):
    """
    The action to take on copy and redistribution control XDS packets.  If you select PASSTHROUGH, packets will not be changed. If you select STRIP, any packets will be removed in output captions.
    """

    PASSTHROUGH = 'PASSTHROUGH'
    STRIP = 'STRIP'


class _IntegerMinNegative50Max50(BaseModel):
    __root__: Annotated[int, Field(ge=-50.0, le=50.0)]


class StatusUpdateInterval(Enum):
    """
    Specify how often MediaConvert sends STATUS_UPDATE events to Amazon CloudWatch Events. Set the interval, in seconds, between status updates. MediaConvert sends an update at this interval from the time the service begins processing your job to the time it completes the transcode or encounters an error.
    """

    SECONDS_10 = 'SECONDS_10'
    SECONDS_12 = 'SECONDS_12'
    SECONDS_15 = 'SECONDS_15'
    SECONDS_20 = 'SECONDS_20'
    SECONDS_30 = 'SECONDS_30'
    SECONDS_60 = 'SECONDS_60'
    SECONDS_120 = 'SECONDS_120'
    SECONDS_180 = 'SECONDS_180'
    SECONDS_240 = 'SECONDS_240'
    SECONDS_300 = 'SECONDS_300'
    SECONDS_360 = 'SECONDS_360'
    SECONDS_420 = 'SECONDS_420'
    SECONDS_480 = 'SECONDS_480'
    SECONDS_540 = 'SECONDS_540'
    SECONDS_600 = 'SECONDS_600'


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class PricingPlan(Enum):
    """
    Specifies whether the pricing plan for the queue is on-demand or reserved. For on-demand, you pay per minute, billed in increments of .01 minute. For reserved, you pay for the transcoding capacity of the entire queue, regardless of how much or how little you use it. Reserved pricing requires a 12-month commitment.
    """

    ON_DEMAND = 'ON_DEMAND'
    RESERVED = 'RESERVED'


class ReservationPlanSettings(BaseModel):
    """
    Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.
    """

    Commitment: Commitment
    RenewalType: RenewalType
    ReservedSlots: _Integer


class QueueStatus(Enum):
    """
    Queues can be ACTIVE or PAUSED. If you pause a queue, jobs in that queue won't begin. Jobs that are running when you pause a queue continue to run until they finish or result in an error.
    """

    ACTIVE = 'ACTIVE'
    PAUSED = 'PAUSED'


class CreateQueueRequest(BaseModel):
    Description: Optional[_String] = None
    Name: _String
    PricingPlan: Optional[PricingPlan] = None
    ReservationPlanSettings: Optional[ReservationPlanSettings] = None
    Status: Optional[QueueStatus] = None
    Tags: Optional[_MapOfString] = None


class DashIsoPlaybackDeviceCompatibility(Enum):
    """
    This setting can improve the compatibility of your output with video players on obsolete devices. It applies only to DASH H.264 outputs with DRM encryption. Choose Unencrypted SEI (UNENCRYPTED_SEI) only to correct problems with playback on older devices. Otherwise, keep the default setting CENC v1 (CENC_V1). If you choose Unencrypted SEI, for that output, the service will exclude the access unit delimiter and will leave the SEI NAL units unencrypted.
    """

    CENC_V1 = 'CENC_V1'
    UNENCRYPTED_SEI = 'UNENCRYPTED_SEI'


class DashIsoGroupAudioChannelConfigSchemeIdUri(Enum):
    """
    Use this setting only when your audio codec is a Dolby one (AC3, EAC3, or Atmos) and your downstream workflow requires that your DASH manifest use the Dolby channel configuration tag, rather than the MPEG one. For example, you might need to use this to make dynamic ad insertion work. Specify which audio channel configuration scheme ID URI MediaConvert writes in your DASH manifest. Keep the default value, MPEG channel configuration (MPEG_CHANNEL_CONFIGURATION), to have MediaConvert write this: urn:mpeg:mpegB:cicp:ChannelConfiguration. Choose Dolby channel configuration (DOLBY_CHANNEL_CONFIGURATION) to have MediaConvert write this instead: tag:dolby.com,2014:dash:audio_channel_configuration:2011.
    """

    MPEG_CHANNEL_CONFIGURATION = 'MPEG_CHANNEL_CONFIGURATION'
    DOLBY_CHANNEL_CONFIGURATION = 'DOLBY_CHANNEL_CONFIGURATION'


class DashIsoHbbtvCompliance(Enum):
    """
    Supports HbbTV specification as indicated
    """

    HBBTV_1_5 = 'HBBTV_1_5'
    NONE = 'NONE'


class DecryptionMode(Enum):
    """
    Specify the encryption mode that you used to encrypt your input files.
    """

    AES_CTR = 'AES_CTR'
    AES_CBC = 'AES_CBC'
    AES_GCM = 'AES_GCM'


class DeinterlaceAlgorithm(Enum):
    """
    Only applies when you set Deinterlacer (DeinterlaceMode) to Deinterlace (DEINTERLACE) or Adaptive (ADAPTIVE). Motion adaptive interpolate (INTERPOLATE) produces sharper pictures, while blend (BLEND) produces smoother motion. Use (INTERPOLATE_TICKER) OR (BLEND_TICKER) if your source file includes a ticker, such as a scrolling headline at the bottom of the frame.
    """

    INTERPOLATE = 'INTERPOLATE'
    INTERPOLATE_TICKER = 'INTERPOLATE_TICKER'
    BLEND = 'BLEND'
    BLEND_TICKER = 'BLEND_TICKER'


class DeinterlacerControl(Enum):
    """
    - When set to NORMAL (default), the deinterlacer does not convert frames that are tagged  in metadata as progressive. It will only convert those that are tagged as some other type. - When set to FORCE_ALL_FRAMES, the deinterlacer converts every frame to progressive - even those that are already tagged as progressive. Turn Force mode on only if there is  a good chance that the metadata has tagged frames as progressive when they are not  progressive. Do not turn on otherwise; processing frames that are already progressive  into progressive will probably result in lower quality video.
    """

    FORCE_ALL_FRAMES = 'FORCE_ALL_FRAMES'
    NORMAL = 'NORMAL'


class DeinterlacerMode(Enum):
    """
    Use Deinterlacer (DeinterlaceMode) to choose how the service will do deinterlacing. Default is Deinterlace. - Deinterlace converts interlaced to progressive. - Inverse telecine converts Hard Telecine 29.97i to progressive 23.976p. - Adaptive auto-detects and converts to progressive.
    """

    DEINTERLACE = 'DEINTERLACE'
    INVERSE_TELECINE = 'INVERSE_TELECINE'
    ADAPTIVE = 'ADAPTIVE'


class Deinterlacer(BaseModel):
    """
    Settings for deinterlacer
    """

    Algorithm: Optional[DeinterlaceAlgorithm] = None
    Control: Optional[DeinterlacerControl] = None
    Mode: Optional[DeinterlacerMode] = None


class DeleteJobTemplateRequest(BaseModel):
    pass


class DeletePresetRequest(BaseModel):
    pass


class DeleteQueueRequest(BaseModel):
    pass


class DescribeEndpointsMode(Enum):
    """
    Optional field, defaults to DEFAULT. Specify DEFAULT for this operation to return your endpoints if any exist, or to create an endpoint for you and return it if one doesn't already exist. Specify GET_ONLY to return your endpoints if any exist, or an empty list if none exist.
    """

    DEFAULT = 'DEFAULT'
    GET_ONLY = 'GET_ONLY'


class DescribeEndpointsRequest(BaseModel):
    """
    DescribeEndpointsRequest
    """

    MaxResults: Optional[_Integer] = None
    Mode: Optional[DescribeEndpointsMode] = None
    NextToken: Optional[_String] = None


class DisassociateCertificateRequest(BaseModel):
    pass


class DolbyVisionLevel6Mode(Enum):
    """
    Use Dolby Vision Mode to choose how the service will handle Dolby Vision MaxCLL and MaxFALL properies.
    """

    PASSTHROUGH = 'PASSTHROUGH'
    RECALCULATE = 'RECALCULATE'
    SPECIFY = 'SPECIFY'


class DolbyVisionProfile(Enum):
    """
    In the current MediaConvert implementation, the Dolby Vision profile is always 5 (PROFILE_5). Therefore, all of your inputs must contain Dolby Vision frame interleaved data.
    """

    PROFILE_5 = 'PROFILE_5'


class _IntegerMin0Max65535(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=65535.0)]


class _StringMin1Max256(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class _IntegerMin25Max10000(BaseModel):
    __root__: Annotated[int, Field(ge=25.0, le=10000.0)]


class DvbNitSettings(BaseModel):
    """
    Use these settings to insert a DVB Network Information Table (NIT) in the transport stream of this output. When you work directly in your JSON job specification, include this object only when your job has a transport stream output and the container settings contain the object M2tsSettings.
    """

    NetworkId: Optional[_IntegerMin0Max65535] = None
    NetworkName: Optional[_StringMin1Max256] = None
    NitInterval: Optional[_IntegerMin25Max10000] = None


class OutputSdt(Enum):
    """
    Selects method of inserting SDT information into output stream.  "Follow input SDT" copies SDT information from input stream to  output stream. "Follow input SDT if present" copies SDT information from  input stream to output stream if SDT information is present in the input, otherwise it will fall back on the user-defined values. Enter "SDT  Manually" means user will enter the SDT information. "No SDT" means output  stream will not contain SDT information.
    """

    SDT_FOLLOW = 'SDT_FOLLOW'
    SDT_FOLLOW_IF_PRESENT = 'SDT_FOLLOW_IF_PRESENT'
    SDT_MANUAL = 'SDT_MANUAL'
    SDT_NONE = 'SDT_NONE'


class _IntegerMin25Max2000(BaseModel):
    __root__: Annotated[int, Field(ge=25.0, le=2000.0)]


class DvbSdtSettings(BaseModel):
    """
    Use these settings to insert a DVB Service Description Table (SDT) in the transport stream of this output. When you work directly in your JSON job specification, include this object only when your job has a transport stream output and the container settings contain the object M2tsSettings.
    """

    OutputSdt: Optional[OutputSdt] = None
    SdtInterval: Optional[_IntegerMin25Max2000] = None
    ServiceName: Optional[_StringMin1Max256] = None
    ServiceProviderName: Optional[_StringMin1Max256] = None


class DvbddsHandling(Enum):
    """
    Specify how MediaConvert handles the display definition segment (DDS). Keep the default, None (NONE), to exclude the DDS from this set of captions. Choose No display window (NO_DISPLAY_WINDOW) to have MediaConvert include the DDS but not include display window data. In this case, MediaConvert writes that information to the page composition segment (PCS) instead. Choose Specify (SPECIFIED) to have MediaConvert set up the display window based on the values that you specify in related job settings. For video resolutions that are 576 pixels or smaller in height, MediaConvert doesn't include the DDS, regardless of the value you choose for DDS handling (ddsHandling). In this case, it doesn't write the display window data to the PCS either. Related settings: Use the settings DDS x-coordinate (ddsXCoordinate) and DDS y-coordinate (ddsYCoordinate) to specify the offset between the top left corner of the display window and the top left corner of the video frame. All burn-in and DVB-Sub font settings must match.
    """

    NONE = 'NONE'
    SPECIFIED = 'SPECIFIED'
    NO_DISPLAY_WINDOW = 'NO_DISPLAY_WINDOW'


class DvbSubtitlingType(Enum):
    """
    Specify whether your DVB subtitles are standard or for hearing impaired. Choose hearing impaired if your subtitles include audio descriptions and dialogue. Choose standard if your subtitles include only dialogue.
    """

    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    STANDARD = 'STANDARD'


class _IntegerMin1000Max30000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=30000.0)]


class DvbTdtSettings(BaseModel):
    """
    Use these settings to insert a DVB Time and Date Table (TDT) in the transport stream of this output. When you work directly in your JSON job specification, include this object only when your job has a transport stream output and the container settings contain the object M2tsSettings.
    """

    TdtInterval: Optional[_IntegerMin1000Max30000] = None


class Eac3AtmosBitstreamMode(Enum):
    """
    Specify the bitstream mode for the E-AC-3 stream that the encoder emits. For more information about the EAC3 bitstream mode, see ATSC A/52-2012 (Annex E).
    """

    COMPLETE_MAIN = 'COMPLETE_MAIN'


class Eac3AtmosCodingMode(Enum):
    """
    The coding mode for Dolby Digital Plus JOC (Atmos).
    """

    CODING_MODE_AUTO = 'CODING_MODE_AUTO'
    CODING_MODE_5_1_4 = 'CODING_MODE_5_1_4'
    CODING_MODE_7_1_4 = 'CODING_MODE_7_1_4'
    CODING_MODE_9_1_6 = 'CODING_MODE_9_1_6'


class Eac3AtmosDownmixControl(Enum):
    """
    Specify whether MediaConvert should use any downmix metadata from your input file. Keep the default value, Custom (SPECIFIED) to provide downmix values in your job settings. Choose Follow source (INITIALIZE_FROM_SOURCE) to use the metadata from your input. Related settings--Use these settings to specify your downmix values: Left only/Right only surround (LoRoSurroundMixLevel), Left total/Right total surround (LtRtSurroundMixLevel), Left total/Right total center (LtRtCenterMixLevel), Left only/Right only center (LoRoCenterMixLevel),  and Stereo downmix (StereoDownmix). When you keep Custom (SPECIFIED) for Downmix control (DownmixControl) and you don't specify values for the related settings, MediaConvert uses default values for those settings.
    """

    SPECIFIED = 'SPECIFIED'
    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'


class Eac3AtmosDynamicRangeCompressionLine(Enum):
    """
    Choose the Dolby dynamic range control (DRC) profile that MediaConvert uses when encoding the metadata in the Dolby stream for the line operating mode. Default value: Film light (ATMOS_STORAGE_DDP_COMPR_FILM_LIGHT) Related setting: To have MediaConvert use the value you specify here, keep the default value, Custom (SPECIFIED) for the setting Dynamic range control (DynamicRangeControl). Otherwise, MediaConvert ignores Dynamic range compression line (DynamicRangeCompressionLine). For information about the Dolby DRC operating modes and profiles, see the Dynamic Range Control chapter of the Dolby Metadata Guide at https://developer.dolby.com/globalassets/professional/documents/dolby-metadata-guide.pdf.
    """

    NONE = 'NONE'
    FILM_STANDARD = 'FILM_STANDARD'
    FILM_LIGHT = 'FILM_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    SPEECH = 'SPEECH'


class Eac3AtmosMeteringMode(Enum):
    """
    Choose how the service meters the loudness of your audio.
    """

    LEQ_A = 'LEQ_A'
    ITU_BS_1770_1 = 'ITU_BS_1770_1'
    ITU_BS_1770_2 = 'ITU_BS_1770_2'
    ITU_BS_1770_3 = 'ITU_BS_1770_3'
    ITU_BS_1770_4 = 'ITU_BS_1770_4'


class _IntegerMin384000Max1024000(BaseModel):
    __root__: Annotated[int, Field(ge=384000.0, le=1024000.0)]


class _DoubleMinNegative6Max3(_DoubleMinNegative59Max0):
    pass


class _DoubleMinNegative60MaxNegative1(_DoubleMinNegative59Max0):
    pass


class _IntegerMin0Max100(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class Eac3AtmosStereoDownmix(Enum):
    """
    Choose how the service does stereo downmixing. Default value: Not indicated (ATMOS_STORAGE_DDP_DMIXMOD_NOT_INDICATED) Related setting: To have MediaConvert use this value, keep the default value, Custom (SPECIFIED) for the setting Downmix control (DownmixControl). Otherwise, MediaConvert ignores Stereo downmix (StereoDownmix).
    """

    NOT_INDICATED = 'NOT_INDICATED'
    STEREO = 'STEREO'
    SURROUND = 'SURROUND'
    DPL2 = 'DPL2'


class Eac3AtmosSurroundExMode(Enum):
    """
    Specify whether your input audio has an additional center rear surround channel matrix encoded into your left and right surround channels.
    """

    NOT_INDICATED = 'NOT_INDICATED'
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Eac3AttenuationControl(Enum):
    """
    If set to ATTENUATE_3_DB, applies a 3 dB attenuation to the surround channels. Only used for 3/2 coding mode.
    """

    ATTENUATE_3_DB = 'ATTENUATE_3_DB'
    NONE = 'NONE'


class Eac3BitstreamMode(Enum):
    """
    Specify the bitstream mode for the E-AC-3 stream that the encoder emits. For more information about the EAC3 bitstream mode, see ATSC A/52-2012 (Annex E).
    """

    COMPLETE_MAIN = 'COMPLETE_MAIN'
    COMMENTARY = 'COMMENTARY'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'


class Eac3CodingMode(Enum):
    """
    Dolby Digital Plus coding mode. Determines number of channels.
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2 = 'CODING_MODE_3_2'


class Eac3LfeControl(Enum):
    """
    When encoding 3/2 audio, controls whether the LFE channel is enabled
    """

    LFE = 'LFE'
    NO_LFE = 'NO_LFE'


class Eac3PassthroughControl(Enum):
    """
    When set to WHEN_POSSIBLE, input DD+ audio will be passed through if it is present on the input. this detection is dynamic over the life of the transcode. Inputs that alternate between DD+ and non-DD+ content will have a consistent DD+ output as the system alternates between passthrough and encoding.
    """

    WHEN_POSSIBLE = 'WHEN_POSSIBLE'
    NO_PASSTHROUGH = 'NO_PASSTHROUGH'


class Eac3PhaseControl(Enum):
    """
    Controls the amount of phase-shift applied to the surround channels. Only used for 3/2 coding mode.
    """

    SHIFT_90_DEGREES = 'SHIFT_90_DEGREES'
    NO_SHIFT = 'NO_SHIFT'


class _DoubleMinNegative60Max3(_DoubleMinNegative59Max0):
    pass


class Eac3StereoDownmix(Enum):
    """
    Choose how the service does stereo downmixing. This setting only applies if you keep the default value of 3/2 - L, R, C, Ls, Rs (CODING_MODE_3_2) for the setting Coding mode (Eac3CodingMode). If you choose a different value for Coding mode, the service ignores Stereo downmix (Eac3StereoDownmix).
    """

    NOT_INDICATED = 'NOT_INDICATED'
    LO_RO = 'LO_RO'
    LT_RT = 'LT_RT'
    DPL2 = 'DPL2'


class _IntegerMin1Max6(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=6.0)]


class _IntegerMin1Max1(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1.0)]


class Endpoint(BaseModel):
    """
    Describes an account-specific API endpoint.
    """

    Url: Optional[_String] = None


class _StringPatternSNManifestConfirmConditionNotificationNS(BaseModel):
    __root__: Annotated[
        str,
        Field(regex='^\\s*<(.|\\n)*ManifestConfirmConditionNotification(.|\\n)*>\\s*$'),
    ]


class EsamManifestConfirmConditionNotification(BaseModel):
    """
    ESAM ManifestConfirmConditionNotification defined by OC-SP-ESAM-API-I03-131025.
    """

    MccXml: Optional[_StringPatternSNManifestConfirmConditionNotificationNS] = None


class _IntegerMin0Max30000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=30000.0)]


class _StringPatternSNSignalProcessingNotificationNS(BaseModel):
    __root__: Annotated[
        str, Field(regex='^\\s*<(.|\\n)*SignalProcessingNotification(.|\\n)*>\\s*$')
    ]


class F4vMoovPlacement(Enum):
    """
    If set to PROGRESSIVE_DOWNLOAD, the MOOV atom is relocated to the beginning of the archive as required for progressive downloading. Otherwise it is placed normally at the end.
    """

    PROGRESSIVE_DOWNLOAD = 'PROGRESSIVE_DOWNLOAD'
    NORMAL = 'NORMAL'


class _StringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT(
    BaseModel
):
    __root__: Annotated[
        str,
        Field(
            min_length=14,
            regex='^((s3://(.*?)\\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT))|(https?://(.*?)\\.(scc|SCC|ttml|TTML|dfxp|DFXP|stl|STL|srt|SRT|xml|XML|smi|SMI|vtt|VTT|webvtt|WEBVTT)(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        ),
    ]


class _IntegerMin1Max10000000(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10000000.0)]


class FrameCaptureSettings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value FRAME_CAPTURE.
    """

    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    MaxCaptures: Optional[_IntegerMin1Max10000000] = None
    Quality: Optional[_IntegerMin1Max100] = None


class GetJobRequest(BaseModel):
    pass


class GetJobTemplateRequest(BaseModel):
    pass


class GetPresetRequest(BaseModel):
    pass


class GetQueueRequest(BaseModel):
    pass


class H264AdaptiveQuantization(Enum):
    """
    Keep the default value, Auto (AUTO), for this setting to have MediaConvert automatically apply the best types of quantization for your video content. When you want to apply your quantization settings manually, you must set H264AdaptiveQuantization to a value other than Auto (AUTO). Use this setting to specify the strength of any adaptive quantization filters that you enable. If you don't want MediaConvert to do any adaptive quantization in this transcode, set Adaptive quantization (H264AdaptiveQuantization) to Off (OFF). Related settings: The value that you choose here applies to the following settings: H264FlickerAdaptiveQuantization, H264SpatialAdaptiveQuantization, and H264TemporalAdaptiveQuantization.
    """

    OFF = 'OFF'
    AUTO = 'AUTO'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    MAX = 'MAX'


class H264CodecLevel(Enum):
    """
    Specify an H.264 level that is consistent with your output video settings. If you aren't sure what level to specify, choose Auto (AUTO).
    """

    AUTO = 'AUTO'
    LEVEL_1 = 'LEVEL_1'
    LEVEL_1_1 = 'LEVEL_1_1'
    LEVEL_1_2 = 'LEVEL_1_2'
    LEVEL_1_3 = 'LEVEL_1_3'
    LEVEL_2 = 'LEVEL_2'
    LEVEL_2_1 = 'LEVEL_2_1'
    LEVEL_2_2 = 'LEVEL_2_2'
    LEVEL_3 = 'LEVEL_3'
    LEVEL_3_1 = 'LEVEL_3_1'
    LEVEL_3_2 = 'LEVEL_3_2'
    LEVEL_4 = 'LEVEL_4'
    LEVEL_4_1 = 'LEVEL_4_1'
    LEVEL_4_2 = 'LEVEL_4_2'
    LEVEL_5 = 'LEVEL_5'
    LEVEL_5_1 = 'LEVEL_5_1'
    LEVEL_5_2 = 'LEVEL_5_2'


class H264CodecProfile(Enum):
    """
    H.264 Profile. High 4:2:2 and 10-bit profiles are only available with the AVC-I License.
    """

    BASELINE = 'BASELINE'
    HIGH = 'HIGH'
    HIGH_10BIT = 'HIGH_10BIT'
    HIGH_422 = 'HIGH_422'
    HIGH_422_10BIT = 'HIGH_422_10BIT'
    MAIN = 'MAIN'


class H264DynamicSubGop(Enum):
    """
    Choose Adaptive to improve subjective video quality for high-motion content. This will cause the service to use fewer B-frames (which infer information based on other frames) for high-motion portions of the video and more B-frames for low-motion portions. The maximum number of B-frames is limited by the value you provide for the setting B frames between reference frames (numberBFramesBetweenReferenceFrames).
    """

    ADAPTIVE = 'ADAPTIVE'
    STATIC = 'STATIC'


class H264EntropyEncoding(Enum):
    """
    Entropy encoding mode. Use CABAC (must be in Main or High profile) or CAVLC.
    """

    CABAC = 'CABAC'
    CAVLC = 'CAVLC'


class H264FieldEncoding(Enum):
    """
    The video encoding method for your MPEG-4 AVC output. Keep the default value, PAFF, to have MediaConvert use PAFF encoding for interlaced outputs. Choose Force field (FORCE_FIELD) to disable PAFF encoding and create separate interlaced fields. Choose MBAFF to disable PAFF and have MediaConvert use MBAFF encoding for interlaced outputs.
    """

    PAFF = 'PAFF'
    FORCE_FIELD = 'FORCE_FIELD'
    MBAFF = 'MBAFF'


class H264GopSizeUnits(Enum):
    """
    Indicates if the GOP Size in H264 is specified in frames or seconds. If seconds the system will convert the GOP Size into a frame count at run time.
    """

    FRAMES = 'FRAMES'
    SECONDS = 'SECONDS'


class H264QualityTuningLevel(Enum):
    """
    Optional. Use Quality tuning level (qualityTuningLevel) to choose how you want to trade off encoding speed for output video quality. The default behavior is faster, lower quality, single-pass encoding.
    """

    SINGLE_PASS = 'SINGLE_PASS'
    SINGLE_PASS_HQ = 'SINGLE_PASS_HQ'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class H264QvbrSettings(BaseModel):
    """
    Settings for quality-defined variable bitrate encoding with the H.265 codec. Use these settings only when you set QVBR for Rate control mode (RateControlMode).
    """

    MaxAverageBitrate: Optional[_IntegerMin1000Max1152000000] = None
    QvbrQualityLevel: Optional[_IntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[_DoubleMin0Max1] = None


class H264RateControlMode(Enum):
    """
    Use this setting to specify whether this output has a variable bitrate (VBR), constant bitrate (CBR) or quality-defined variable bitrate (QVBR).
    """

    VBR = 'VBR'
    CBR = 'CBR'
    QVBR = 'QVBR'


class H264SceneChangeDetect(Enum):
    """
    Enable this setting to insert I-frames at scene changes that the service automatically detects. This improves video quality and is enabled by default. If this output uses QVBR, choose Transition detection (TRANSITION_DETECTION) for further video quality improvement. For more information about QVBR, see https://docs.aws.amazon.com/console/mediaconvert/cbr-vbr-qvbr.
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    TRANSITION_DETECTION = 'TRANSITION_DETECTION'


class _IntegerMin0Max1152000000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1152000000.0)]


class _IntegerMin0Max30(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=30.0)]


class _IntegerMin0Max7(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=7.0)]


class _IntegerMin0Max128(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=128.0)]


class H264Syntax(Enum):
    """
    Produces a bitstream compliant with SMPTE RP-2027.
    """

    DEFAULT = 'DEFAULT'
    RP2027 = 'RP2027'


class H264Telecine(Enum):
    """
    When you do frame rate conversion from 23.976 frames per second (fps) to 29.97 fps, and your output scan type is interlaced, you can optionally enable hard or soft telecine to create a smoother picture. Hard telecine (HARD) produces a 29.97i output. Soft telecine (SOFT) produces an output with a 23.976 output that signals to the video player device to do the conversion during play back. When you keep the default value, None (NONE), MediaConvert does a standard frame rate conversion to 29.97 without doing anything with the field polarity to create a smoother picture.
    """

    NONE = 'NONE'
    SOFT = 'SOFT'
    HARD = 'HARD'


class H264Settings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value H_264.
    """

    AdaptiveQuantization: Optional[H264AdaptiveQuantization] = None
    Bitrate: Optional[_IntegerMin1000Max1152000000] = None
    CodecLevel: Optional[H264CodecLevel] = None
    CodecProfile: Optional[H264CodecProfile] = None
    DynamicSubGop: Optional[H264DynamicSubGop] = None
    EntropyEncoding: Optional[H264EntropyEncoding] = None
    FieldEncoding: Optional[H264FieldEncoding] = None
    FlickerAdaptiveQuantization: Optional[AntiAlias] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    GopBReference: Optional[AntiAlias] = None
    GopClosedCadence: Optional[_IntegerMin0Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    HrdBufferInitialFillPercentage: Optional[_IntegerMin0Max100] = None
    HrdBufferSize: Optional[_IntegerMin0Max1152000000] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    MaxBitrate: Optional[_IntegerMin1000Max1152000000] = None
    MinIInterval: Optional[_IntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[_IntegerMin0Max7] = None
    NumberReferenceFrames: Optional[_IntegerMin1Max6] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[H264QualityTuningLevel] = None
    QvbrSettings: Optional[H264QvbrSettings] = None
    RateControlMode: Optional[H264RateControlMode] = None
    RepeatPps: Optional[AntiAlias] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SceneChangeDetect: Optional[H264SceneChangeDetect] = None
    Slices: Optional[_IntegerMin1Max32] = None
    SlowPal: Optional[AntiAlias] = None
    Softness: Optional[_IntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[AntiAlias] = None
    Syntax: Optional[H264Syntax] = None
    Telecine: Optional[H264Telecine] = None
    TemporalAdaptiveQuantization: Optional[AntiAlias] = None
    UnregisteredSeiTimecode: Optional[AntiAlias] = None


class H265CodecLevel(Enum):
    """
    H.265 Level.
    """

    AUTO = 'AUTO'
    LEVEL_1 = 'LEVEL_1'
    LEVEL_2 = 'LEVEL_2'
    LEVEL_2_1 = 'LEVEL_2_1'
    LEVEL_3 = 'LEVEL_3'
    LEVEL_3_1 = 'LEVEL_3_1'
    LEVEL_4 = 'LEVEL_4'
    LEVEL_4_1 = 'LEVEL_4_1'
    LEVEL_5 = 'LEVEL_5'
    LEVEL_5_1 = 'LEVEL_5_1'
    LEVEL_5_2 = 'LEVEL_5_2'
    LEVEL_6 = 'LEVEL_6'
    LEVEL_6_1 = 'LEVEL_6_1'
    LEVEL_6_2 = 'LEVEL_6_2'


class H265CodecProfile(Enum):
    """
    Represents the Profile and Tier, per the HEVC (H.265) specification. Selections are grouped as [Profile] / [Tier], so "Main/High" represents Main Profile with High Tier. 4:2:2 profiles are only available with the HEVC 4:2:2 License.
    """

    MAIN_MAIN = 'MAIN_MAIN'
    MAIN_HIGH = 'MAIN_HIGH'
    MAIN10_MAIN = 'MAIN10_MAIN'
    MAIN10_HIGH = 'MAIN10_HIGH'
    MAIN_422_8BIT_MAIN = 'MAIN_422_8BIT_MAIN'
    MAIN_422_8BIT_HIGH = 'MAIN_422_8BIT_HIGH'
    MAIN_422_10BIT_MAIN = 'MAIN_422_10BIT_MAIN'
    MAIN_422_10BIT_HIGH = 'MAIN_422_10BIT_HIGH'


class _IntegerMin1000Max1466400000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=1466400000.0)]


class H265QvbrSettings(BaseModel):
    """
    Settings for quality-defined variable bitrate encoding with the H.265 codec. Use these settings only when you set QVBR for Rate control mode (RateControlMode).
    """

    MaxAverageBitrate: Optional[_IntegerMin1000Max1466400000] = None
    QvbrQualityLevel: Optional[_IntegerMin1Max10] = None
    QvbrQualityLevelFineTune: Optional[_DoubleMin0Max1] = None


class H265SampleAdaptiveOffsetFilterMode(Enum):
    """
    Specify Sample Adaptive Offset (SAO) filter strength.  Adaptive mode dynamically selects best strength based on content
    """

    DEFAULT = 'DEFAULT'
    ADAPTIVE = 'ADAPTIVE'
    OFF = 'OFF'


class _IntegerMin0Max1466400000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1466400000.0)]


class H265WriteMp4PackagingType(Enum):
    """
    If the location of parameter set NAL units doesn't matter in your workflow, ignore this setting. Use this setting only with CMAF or DASH outputs, or with standalone file outputs in an MPEG-4 container (MP4 outputs). Choose HVC1 to mark your output as HVC1. This makes your output compliant with the following specification: ISO IECJTC1 SC29 N13798 Text ISO/IEC FDIS 14496-15 3rd Edition. For these outputs, the service stores parameter set NAL units in the sample headers but not in the samples directly. For MP4 outputs, when you choose HVC1, your output video might not work properly with some downstream systems and video players. The service defaults to marking your output as HEV1. For these outputs, the service writes parameter set NAL units directly into the samples.
    """

    HVC1 = 'HVC1'
    HEV1 = 'HEV1'


class H265Settings(BaseModel):
    """
    Settings for H265 codec
    """

    AdaptiveQuantization: Optional[Av1AdaptiveQuantization] = None
    AlternateTransferFunctionSei: Optional[AntiAlias] = None
    Bitrate: Optional[_IntegerMin1000Max1466400000] = None
    CodecLevel: Optional[H265CodecLevel] = None
    CodecProfile: Optional[H265CodecProfile] = None
    DynamicSubGop: Optional[H264DynamicSubGop] = None
    FlickerAdaptiveQuantization: Optional[AntiAlias] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    GopBReference: Optional[AntiAlias] = None
    GopClosedCadence: Optional[_IntegerMin0Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    HrdBufferInitialFillPercentage: Optional[_IntegerMin0Max100] = None
    HrdBufferSize: Optional[_IntegerMin0Max1466400000] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    MaxBitrate: Optional[_IntegerMin1000Max1466400000] = None
    MinIInterval: Optional[_IntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[_IntegerMin0Max7] = None
    NumberReferenceFrames: Optional[_IntegerMin1Max6] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[H264QualityTuningLevel] = None
    QvbrSettings: Optional[H265QvbrSettings] = None
    RateControlMode: Optional[H264RateControlMode] = None
    SampleAdaptiveOffsetFilterMode: Optional[H265SampleAdaptiveOffsetFilterMode] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SceneChangeDetect: Optional[H264SceneChangeDetect] = None
    Slices: Optional[_IntegerMin1Max32] = None
    SlowPal: Optional[AntiAlias] = None
    SpatialAdaptiveQuantization: Optional[AntiAlias] = None
    Telecine: Optional[H264Telecine] = None
    TemporalAdaptiveQuantization: Optional[AntiAlias] = None
    TemporalIds: Optional[AntiAlias] = None
    Tiles: Optional[AntiAlias] = None
    UnregisteredSeiTimecode: Optional[AntiAlias] = None
    WriteMp4PackagingType: Optional[H265WriteMp4PackagingType] = None


class _IntegerMin0Max50000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=50000.0)]


class _IntegerMin0Max4000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4000.0)]


class Hdr10Plus(BaseModel):
    """
    Setting for HDR10+ metadata insertion
    """

    MasteringMonitorNits: Optional[_IntegerMin0Max4000] = None
    TargetMonitorNits: Optional[_IntegerMin0Max4000] = None


class HlsAdMarkers(Enum):
    ELEMENTAL = 'ELEMENTAL'
    ELEMENTAL_SCTE35 = 'ELEMENTAL_SCTE35'


class HlsAudioOnlyContainer(Enum):
    """
    Use this setting only in audio-only outputs. Choose MPEG-2 Transport Stream (M2TS) to create a file in an MPEG2-TS container. Keep the default value Automatic (AUTOMATIC) to create a raw audio-only file with no container. Regardless of the value that you specify here, if this output has video, the service will place outputs into an MPEG2-TS container.
    """

    AUTOMATIC = 'AUTOMATIC'
    M2TS = 'M2TS'


class HlsAudioTrackType(Enum):
    """
    Four types of audio-only tracks are supported: Audio-Only Variant Stream The client can play back this audio-only stream instead of video in low-bandwidth scenarios. Represented as an EXT-X-STREAM-INF in the HLS manifest. Alternate Audio, Auto Select, Default Alternate rendition that the client should try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=YES, AUTOSELECT=YES Alternate Audio, Auto Select, Not Default Alternate rendition that the client may try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=YES Alternate Audio, not Auto Select Alternate rendition that the client will not try to play back by default. Represented as an EXT-X-MEDIA in the HLS manifest with DEFAULT=NO, AUTOSELECT=NO
    """

    ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT = 'ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT'
    ALTERNATE_AUDIO_AUTO_SELECT = 'ALTERNATE_AUDIO_AUTO_SELECT'
    ALTERNATE_AUDIO_NOT_AUTO_SELECT = 'ALTERNATE_AUDIO_NOT_AUTO_SELECT'
    AUDIO_ONLY_VARIANT_STREAM = 'AUDIO_ONLY_VARIANT_STREAM'


class HlsCaptionLanguageMapping(BaseModel):
    """
    Caption Language Mapping
    """

    CaptionChannel: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    CustomLanguageCode: Optional[_StringMin3Max3PatternAZaZ3] = None
    LanguageCode: Optional[LanguageCode] = None
    LanguageDescription: Optional[_String] = None


class HlsCaptionLanguageSetting(Enum):
    """
    Applies only to 608 Embedded output captions. Insert: Include CLOSED-CAPTIONS lines in the manifest. Specify at least one language in the CC1 Language Code field. One CLOSED-CAPTION line is added for each Language Code you specify. Make sure to specify the languages in the order in which they appear in the original source (if the source is embedded format) or the order of the caption selectors (if the source is other than embedded). Otherwise, languages in the manifest will not match up properly with the output captions. None: Include CLOSED-CAPTIONS=NONE line in the manifest. Omit: Omit any CLOSED-CAPTIONS line from the manifest.
    """

    INSERT = 'INSERT'
    OMIT = 'OMIT'
    NONE = 'NONE'


class HlsDirectoryStructure(Enum):
    """
    Indicates whether segments should be placed in subdirectories.
    """

    SINGLE_DIRECTORY = 'SINGLE_DIRECTORY'
    SUBDIRECTORY_PER_STREAM = 'SUBDIRECTORY_PER_STREAM'


class HlsEncryptionType(Enum):
    """
    Encrypts the segments with the given encryption scheme. Leave blank to disable. Selecting 'Disabled' in the web interface also disables encryption.
    """

    AES128 = 'AES128'
    SAMPLE_AES = 'SAMPLE_AES'


class _ListOfHlsAdMarkers(BaseModel):
    __root__: List[HlsAdMarkers]


class _ListOfHlsCaptionLanguageMapping(BaseModel):
    __root__: List[HlsCaptionLanguageMapping]


class HlsOutputSelection(Enum):
    """
    Indicates whether the .m3u8 manifest file should be generated for this HLS output group.
    """

    MANIFESTS_AND_SEGMENTS = 'MANIFESTS_AND_SEGMENTS'
    SEGMENTS_ONLY = 'SEGMENTS_ONLY'


class _IntegerMin0Max3600(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=3600.0)]


class HlsTimedMetadataId3Frame(Enum):
    """
    Indicates ID3 frame that has the timecode.
    """

    NONE = 'NONE'
    PRIV = 'PRIV'
    TDRL = 'TDRL'


class HlsSettings(BaseModel):
    """
    Settings for HLS output groups
    """

    AudioGroupId: Optional[_String] = None
    AudioOnlyContainer: Optional[HlsAudioOnlyContainer] = None
    AudioRenditionSets: Optional[_String] = None
    AudioTrackType: Optional[HlsAudioTrackType] = None
    DescriptiveVideoServiceFlag: Optional[CmfcDescriptiveVideoServiceFlag] = None
    IFrameOnlyManifest: Optional[CmafInitializationVectorInManifest] = None
    SegmentModifier: Optional[_String] = None


class _StringPatternAZaZ0902(BaseModel):
    __root__: Annotated[str, Field(regex='^[A-Za-z0-9+\\/]+={0,2}$')]


class _StringPattern010920405090509092(BaseModel):
    __root__: Annotated[
        str, Field(regex='^([01][0-9]|2[0-4]):[0-5][0-9]:[0-5][0-9][:;][0-9]{2}$')
    ]


class Id3Insertion(BaseModel):
    """
    To insert ID3 tags in your output, specify two values. Use ID3 tag (Id3) to specify the base 64 encoded string and use Timecode (TimeCode) to specify the time when the tag should be inserted. To insert multiple ID3 tags in your output, create multiple instances of ID3 insertion (Id3Insertion).
    """

    Id3: Optional[_StringPatternAZaZ0902] = None
    Timecode: Optional[_StringPattern010920405090509092] = None


class _MapOfAudioSelectorGroup(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class _MapOfAudioSelector(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class _MapOfCaptionSelector(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class _StringPatternS3MM2PPMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8WWEEBBMMLLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMXXMMLLOOGGGGaAAATTMMOOSSHttpsMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8WWEEBBMMLLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMXXMMLLOOGGGGaAAATTMMOOSS(
    BaseModel
):
    __root__: Annotated[
        str,
        Field(
            regex='^((s3://([^\\/]+\\/+)+([^\\/\\.]+|(([^\\/]*)\\.([mM]2[pP]|[mM]2[vV]|[mM][pP][eE][gG]|[mM][pP]3|[aA][vV][iI]|[mM][pP]4|[fF][lL][vV]|[mM][pP][tT]|[mM][pP][gG]|[mM]4[vV]|[tT][rR][pP]|[fF]4[vV]|[mM]2[tT][sS]|[tT][sS]|264|[hH]264|[mM][kK][vV]|[mM][kK][aA]|[mM][oO][vV]|[mM][tT][sS]|[mM]2[tT]|[wW][mM][vVaA]|[aA][sS][fF]|[vV][oO][bB]|3[gG][pP]|3[gG][pP][pP]|[mM][xX][fF]|[dD][iI][vV][xX]|[xX][vV][iI][dD]|[rR][aA][wW]|[dD][vV]|[gG][xX][fF]|[mM]1[vV]|3[gG]2|[vV][mM][fF]|[mM]3[uU]8|[wW][eE][bB][mM]|[lL][cC][hH]|[gG][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF][hH][dD]|[wW][aA][vV]|[yY]4[mM]|[xX][mM][lL]|[oO][gG][gGaA]|[aA][tT][mM][oO][sS]))))|(https?://([^\\/]+\\/+)+([^\\/\\.]+|(([^\\/]*)\\.([mM]2[vV]|[mM][pP][eE][gG]|[mM][pP]3|[aA][vV][iI]|[mM][pP]4|[fF][lL][vV]|[mM][pP][tT]|[mM][pP][gG]|[mM]4[vV]|[tT][rR][pP]|[fF]4[vV]|[mM]2[tT][sS]|[tT][sS]|264|[hH]264|[mM][kK][vV]|[mM][kK][aA]|[mM][oO][vV]|[mM][tT][sS]|[mM]2[tT]|[wW][mM][vVaA]|[aA][sS][fF]|[vV][oO][bB]|3[gG][pP]|3[gG][pP][pP]|[mM][xX][fF]|[dD][iI][vV][xX]|[xX][vV][iI][dD]|[rR][aA][wW]|[dD][vV]|[gG][xX][fF]|[mM]1[vV]|3[gG]2|[vV][mM][fF]|[mM]3[uU]8|[wW][eE][bB][mM]|[lL][cC][hH]|[gG][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF]_[mM][pP][eE][gG]2|[mM][xX][fF][hH][dD]|[wW][aA][vV]|[yY]4[mM]|[xX][mM][lL]|[oO][gG][gGaA]|[aA][tT][mM][oO][sS])))(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$'
        ),
    ]


class InputFilterEnable(Enum):
    """
    Specify how the transcoding service applies the denoise and deblock filters. You must also enable the filters separately, with Denoise (InputDenoiseFilter) and Deblock (InputDeblockFilter). * Auto - The transcoding service determines whether to apply filtering, depending on input type and quality. * Disable - The input is not filtered. This is true even if you use the API to enable them in (InputDeblockFilter) and (InputDeblockFilter). * Force - The input is filtered regardless of input type.
    """

    AUTO = 'AUTO'
    DISABLE = 'DISABLE'
    FORCE = 'FORCE'


class _IntegerMinNegative5Max5(BaseModel):
    __root__: Annotated[int, Field(ge=-5.0, le=5.0)]


class InputScanType(Enum):
    """
    When you have a progressive segmented frame (PsF) input, use this setting to flag the input as PsF. MediaConvert doesn't automatically detect PsF. Therefore, flagging your input as PsF results in better preservation of video quality when you do deinterlacing and frame rate conversion. If you don't specify, the default value is Auto (AUTO). Auto is the correct setting for all inputs that are not PsF. Don't set this value to PsF when your input is interlaced. Doing so creates horizontal interlacing artifacts.
    """

    AUTO = 'AUTO'
    PSF = 'PSF'


class InputPsiControl(Enum):
    """
    Set PSI control (InputPsiControl) for transport stream inputs to specify which data the demux process to scans. * Ignore PSI - Scan all PIDs for audio and video. * Use PSI - Scan only PSI data.
    """

    IGNORE_PSI = 'IGNORE_PSI'
    USE_PSI = 'USE_PSI'


class InputTimecodeSource(Enum):
    """
    Use this Timecode source setting, located under the input settings (InputTimecodeSource), to specify how the service counts input video frames. This input frame count affects only the behavior of features that apply to a single input at a time, such as input clipping and synchronizing some captions formats. Choose Embedded (EMBEDDED) to use the timecodes in your input video. Choose Start at zero (ZEROBASED) to start the first frame at zero. Choose Specified start (SPECIFIEDSTART) to start the first frame at the timecode that you specify in the setting Start timecode (timecodeStart). If you don't specify a value for Timecode source, the service will use Embedded by default. For more information about timecodes, see https://docs.aws.amazon.com/console/mediaconvert/timecode.
    """

    EMBEDDED = 'EMBEDDED'
    ZEROBASED = 'ZEROBASED'
    SPECIFIEDSTART = 'SPECIFIEDSTART'


class _StringMin11Max11Pattern01D20305D205D(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=11,
            min_length=11,
            regex='^((([0-1]\\d)|(2[0-3]))(:[0-5]\\d){2}([:;][0-5]\\d))$',
        ),
    ]


class InputClipping(BaseModel):
    """
    To transcode only portions of your input, include one input clip for each part of your input that you want in your output. All input clips that you specify will be included in every output of the job. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/assembling-multiple-inputs-and-input-clips.html.
    """

    EndTimecode: Optional[_StringPattern010920405090509092] = None
    StartTimecode: Optional[_StringPattern010920405090509092] = None


class _StringMin24Max512PatternAZaZ0902(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=24, regex='^[A-Za-z0-9+\\/]+={0,2}$')
    ]


class _StringMin16Max24PatternAZaZ0922AZaZ0916(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=24,
            min_length=16,
            regex='^[A-Za-z0-9+\\/]{22}==$|^[A-Za-z0-9+\\/]{16}$',
        ),
    ]


class _StringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=19,
            min_length=9,
            regex='^[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}$',
        ),
    ]


class InputRotate(Enum):
    """
    Use Rotate (InputRotate) to specify how the service rotates your video. You can choose automatic rotation or specify a rotation. You can specify a clockwise rotation of 0, 90, 180, or 270 degrees. If your input video container is .mov or .mp4 and your input has rotation metadata, you can choose Automatic to have the service rotate your video according to the rotation specified in the metadata. The rotation must be within one degree of 90, 180, or 270 degrees. If the rotation metadata specifies any other rotation, the service will default to no rotation. By default, the service does no rotation, even if your input video has rotation metadata. The service doesn't pass through rotation metadata.
    """

    DEGREE_0 = 'DEGREE_0'
    DEGREES_90 = 'DEGREES_90'
    DEGREES_180 = 'DEGREES_180'
    DEGREES_270 = 'DEGREES_270'
    AUTO = 'AUTO'


class InputSampleRange(Enum):
    """
    Use this setting when your input video codec is AVC-Intra. Ignore this setting for all other inputs. If the sample range metadata in your input video is accurate, or if you don't know about sample range, keep the default value, Follow (FOLLOW), for this setting. When you do, the service automatically detects your input sample range. If your input video has metadata indicating the wrong sample range, specify the accurate sample range here. When you do, MediaConvert ignores any sample range information in the input metadata. Regardless of whether MediaConvert uses the input sample range or the sample range that you specify, MediaConvert uses the sample range for transcoding and also writes it to the output metadata.
    """

    FOLLOW = 'FOLLOW'
    FULL_RANGE = 'FULL_RANGE'
    LIMITED_RANGE = 'LIMITED_RANGE'


class _StringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA(BaseModel):
    __root__: Annotated[
        str,
        Field(
            min_length=14,
            regex='^((s3://(.*?)\\.(bmp|BMP|png|PNG|tga|TGA))|(https?://(.*?)\\.(bmp|BMP|png|PNG|tga|TGA)(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        ),
    ]


class _IntegerMin0Max99(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=99.0)]


class _StringPattern01D20305D205D(BaseModel):
    __root__: Annotated[
        str, Field(regex='^((([0-1]\\d)|(2[0-3]))(:[0-5]\\d){2}([:;][0-5]\\d))$')
    ]


class InsertableImage(BaseModel):
    """
    These settings apply to a specific graphic overlay. You can include multiple overlays in your job.
    """

    Duration: Optional[_IntegerMin0Max2147483647] = None
    FadeIn: Optional[_IntegerMin0Max2147483647] = None
    FadeOut: Optional[_IntegerMin0Max2147483647] = None
    Height: Optional[_IntegerMin0Max2147483647] = None
    ImageInserterInput: Optional[
        _StringMin14PatternS3BmpBMPPngPNGTgaTGAHttpsBmpBMPPngPNGTgaTGA
    ] = None
    ImageX: Optional[_IntegerMin0Max2147483647] = None
    ImageY: Optional[_IntegerMin0Max2147483647] = None
    Layer: Optional[_IntegerMin0Max99] = None
    Opacity: Optional[_IntegerMin0Max100] = None
    StartTime: Optional[_StringPattern01D20305D205D] = None
    Width: Optional[_IntegerMin0Max2147483647] = None


class _TimestampUnix(BaseModel):
    __root__: datetime


class JobPhase(Enum):
    """
    A job's phase can be PROBING, TRANSCODING OR UPLOADING
    """

    PROBING = 'PROBING'
    TRANSCODING = 'TRANSCODING'
    UPLOADING = 'UPLOADING'


class JobStatus(Enum):
    """
    A job's status can be SUBMITTED, PROGRESSING, COMPLETE, CANCELED, or ERROR.
    """

    SUBMITTED = 'SUBMITTED'
    PROGRESSING = 'PROGRESSING'
    COMPLETE = 'COMPLETE'
    CANCELED = 'CANCELED'
    ERROR = 'ERROR'


class Timing(BaseModel):
    """
    Information about when jobs are submitted, started, and finished is specified in Unix epoch format in seconds.
    """

    FinishTime: Optional[_TimestampUnix] = None
    StartTime: Optional[_TimestampUnix] = None
    SubmitTime: Optional[_TimestampUnix] = None


class _ListOfString(BaseModel):
    __root__: List[_String]


class Type(Enum):
    SYSTEM = 'SYSTEM'
    CUSTOM = 'CUSTOM'


class JobTemplateListBy(Enum):
    """
    Optional. When you request a list of job templates, you can choose to list them alphabetically by NAME or chronologically by CREATION_DATE. If you don't specify, the service will list them by name.
    """

    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'
    SYSTEM = 'SYSTEM'


class _StringMin1Max20(BaseModel):
    __root__: Annotated[str, Field(max_length=20, min_length=1)]


class _StringMin1Max50PatternAZAZ09(BaseModel):
    __root__: Annotated[
        str, Field(max_length=50, min_length=1, regex='^[a-zA-Z0-9_\\/_+=.@-]*$')
    ]


class _StringMin1Max512PatternAZAZ09(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='^[a-zA-Z0-9_\\/_+=.@-]*$')
    ]


class _StringPatternHttpsKantarmediaCom(BaseModel):
    __root__: Annotated[str, Field(regex='^https:\\/\\/.*.kantarmedia.com$')]


class _StringMin1Max50(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1)]


class _IntegerMin1Max20(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=20.0)]


class Order(Enum):
    """
    Optional. When you request lists of resources, you can specify whether they are sorted in ASCENDING or DESCENDING order. Default varies by resource.
    """

    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class ListJobTemplatesRequest(BaseModel):
    pass


class ListJobsRequest(BaseModel):
    pass


class ListPresetsRequest(BaseModel):
    pass


class QueueListBy(Enum):
    """
    Optional. When you request a list of queues, you can choose to list them alphabetically by NAME or chronologically by CREATION_DATE. If you don't specify, the service will list them by creation date.
    """

    NAME = 'NAME'
    CREATION_DATE = 'CREATION_DATE'


class ListQueuesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ResourceTags(BaseModel):
    """
    The Amazon Resource Name (ARN) and tags for an AWS Elemental MediaConvert resource.
    """

    Arn: Optional[_String] = None
    Tags: Optional[_MapOfString] = None


class M2tsAudioBufferModel(Enum):
    """
    Selects between the DVB and ATSC buffer models for Dolby Digital audio.
    """

    DVB = 'DVB'
    ATSC = 'ATSC'


class M2tsBufferModel(Enum):
    """
    Controls what buffer model to use for accurate interleaving. If set to MULTIPLEX, use multiplex  buffer model. If set to NONE, this can lead to lower latency, but low-memory devices may not be able to play back the stream without interruptions.
    """

    MULTIPLEX = 'MULTIPLEX'
    NONE = 'NONE'


class M2tsDataPtsControl(Enum):
    """
    If you select ALIGN_TO_VIDEO, MediaConvert writes captions and data packets with Presentation Timestamp (PTS) values greater than or equal to the first video packet PTS (MediaConvert drops captions and data packets with lesser PTS values). Keep the default value (AUTO) to allow all PTS values.
    """

    AUTO = 'AUTO'
    ALIGN_TO_VIDEO = 'ALIGN_TO_VIDEO'


class M2tsEbpAudioInterval(Enum):
    """
    When set to VIDEO_AND_FIXED_INTERVALS, audio EBP markers will be added to partitions 3 and 4. The interval between these additional markers will be fixed, and will be slightly shorter than the video EBP marker interval. When set to VIDEO_INTERVAL, these additional markers will not be inserted. Only applicable when EBP segmentation markers are is selected (segmentationMarkers is EBP or EBP_LEGACY).
    """

    VIDEO_AND_FIXED_INTERVALS = 'VIDEO_AND_FIXED_INTERVALS'
    VIDEO_INTERVAL = 'VIDEO_INTERVAL'


class M2tsEbpPlacement(Enum):
    """
    Selects which PIDs to place EBP markers on. They can either be placed only on the video PID, or on both the video PID and all audio PIDs. Only applicable when EBP segmentation markers are is selected (segmentationMarkers is EBP or EBP_LEGACY).
    """

    VIDEO_AND_AUDIO_PIDS = 'VIDEO_AND_AUDIO_PIDS'
    VIDEO_PID = 'VIDEO_PID'


class M2tsForceTsVideoEbpOrder(Enum):
    """
    Keep the default value (DEFAULT) unless you know that your audio EBP markers are incorrectly appearing before your video EBP markers. To correct this problem, set this value to Force (FORCE).
    """

    FORCE = 'FORCE'
    DEFAULT = 'DEFAULT'


class M2tsPcrControl(Enum):
    """
    When set to PCR_EVERY_PES_PACKET, a Program Clock Reference value is inserted for every Packetized Elementary Stream (PES) header. This is effective only when the PCR PID is the same as the video or audio elementary stream.
    """

    PCR_EVERY_PES_PACKET = 'PCR_EVERY_PES_PACKET'
    CONFIGURED_PCR_PERIOD = 'CONFIGURED_PCR_PERIOD'


class M2tsRateMode(Enum):
    """
    When set to CBR, inserts null packets into transport stream to fill specified bitrate. When set to VBR, the bitrate setting acts as the maximum bitrate, but the output will not be padded up to that bitrate.
    """

    VBR = 'VBR'
    CBR = 'CBR'


class _IntegerMin32Max8182(BaseModel):
    __root__: Annotated[int, Field(ge=32.0, le=8182.0)]


class M2tsScte35Esam(BaseModel):
    """
    Settings for SCTE-35 signals from ESAM. Include this in your job settings to put SCTE-35 markers in your HLS and transport stream outputs at the insertion points that you specify in an ESAM XML document. Provide the document in the setting SCC XML (sccXml).
    """

    Scte35EsamPid: Optional[_IntegerMin32Max8182] = None


class M2tsSegmentationMarkers(Enum):
    """
    Inserts segmentation markers at each segmentation_time period. rai_segstart sets the Random Access Indicator bit in the adaptation field. rai_adapt sets the RAI bit and adds the current timecode in the private data bytes. psi_segstart inserts PAT and PMT tables at the start of segments. ebp adds Encoder Boundary Point information to the adaptation field as per OpenCable specification OC-SP-EBP-I01-130118. ebp_legacy adds Encoder Boundary Point information to the adaptation field using a legacy proprietary format.
    """

    NONE = 'NONE'
    RAI_SEGSTART = 'RAI_SEGSTART'
    RAI_ADAPT = 'RAI_ADAPT'
    PSI_SEGSTART = 'PSI_SEGSTART'
    EBP = 'EBP'
    EBP_LEGACY = 'EBP_LEGACY'


class M2tsSegmentationStyle(Enum):
    """
    The segmentation style parameter controls how segmentation markers are inserted into the transport stream. With avails, it is possible that segments may be truncated, which can influence where future segmentation markers are inserted. When a segmentation style of "reset_cadence" is selected and a segment is truncated due to an avail, we will reset the segmentation cadence. This means the subsequent segment will have a duration of of $segmentation_time seconds. When a segmentation style of "maintain_cadence" is selected and a segment is truncated due to an avail, we will not reset the segmentation cadence. This means the subsequent segment will likely be truncated as well. However, all segments after that will have a duration of $segmentation_time seconds. Note that EBP lookahead is a slight exception to this rule.
    """

    MAINTAIN_CADENCE = 'MAINTAIN_CADENCE'
    RESET_CADENCE = 'RESET_CADENCE'


class _ListOfIntegerMin32Max8182(BaseModel):
    __root__: List[_IntegerMin32Max8182]


class _IntegerMin0Max500(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=500.0)]


class _IntegerMin0Max10000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10000.0)]


class _IntegerMin0Max1000(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000.0)]


class _StringMin14PatternS3Mov09PngHttpsMov09Png(BaseModel):
    __root__: Annotated[
        str,
        Field(
            min_length=14,
            regex='^((s3://(.*)(\\.mov|[0-9]+\\.png))|(https?://(.*)(\\.mov|[0-9]+\\.png)(\\?([^&=]+=[^&]+&)*[^&=]+=[^&]+)?))$',
        ),
    ]


class MotionImageInsertionMode(Enum):
    """
    Choose the type of motion graphic asset that you are providing for your overlay. You can choose either a .mov file or a series of .png files.
    """

    MOV = 'MOV'
    PNG = 'PNG'


class MotionImageInsertionOffset(BaseModel):
    """
    Specify the offset between the upper-left corner of the video frame and the top left corner of the overlay.
    """

    ImageX: Optional[_IntegerMin0Max2147483647] = None
    ImageY: Optional[_IntegerMin0Max2147483647] = None


class MotionImagePlayback(Enum):
    """
    Specify whether your motion graphic overlay repeats on a loop or plays only once.
    """

    ONCE = 'ONCE'
    REPEAT = 'REPEAT'


class _IntegerMin1Max17895697(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=17895697.0)]


class _IntegerMin1Max2147483640(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2147483640.0)]


class MovMpeg2FourCCControl(Enum):
    """
    When set to XDCAM, writes MPEG2 video streams into the QuickTime file using XDCAM fourcc codes. This increases compatibility with Apple editors and players, but may decrease compatibility with other players. Only applicable when the video codec is MPEG2.
    """

    XDCAM = 'XDCAM'
    MPEG = 'MPEG'


class MovPaddingControl(Enum):
    """
    To make this output compatible with Omenon, keep the default value, OMNEON. Unless you need Omneon compatibility, set this value to NONE. When you keep the default value, OMNEON, MediaConvert increases the length of the edit list atom. This might cause file rejections when a recipient of the output file doesn't expct this extra padding.
    """

    OMNEON = 'OMNEON'
    NONE = 'NONE'


class MovReference(Enum):
    """
    Always keep the default value (SELF_CONTAINED) for this setting.
    """

    SELF_CONTAINED = 'SELF_CONTAINED'
    EXTERNAL = 'EXTERNAL'


class _IntegerMin32000Max384000(BaseModel):
    __root__: Annotated[int, Field(ge=32000.0, le=384000.0)]


class _IntegerMin1Max2(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2.0)]


class _IntegerMin32000Max48000(BaseModel):
    __root__: Annotated[int, Field(ge=32000.0, le=48000.0)]


class _IntegerMin16000Max320000(BaseModel):
    __root__: Annotated[int, Field(ge=16000.0, le=320000.0)]


class _IntegerMin22050Max48000(BaseModel):
    __root__: Annotated[int, Field(ge=22050.0, le=48000.0)]


class _IntegerMin0Max9(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=9.0)]


class _IntegerMin0Max1(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1.0)]


class MpdCaptionContainerType(Enum):
    """
    Use this setting only in DASH output groups that include sidecar TTML or IMSC captions.  You specify sidecar captions in a separate output from your audio and video. Choose Raw (RAW) for captions in a single XML file in a raw container. Choose Fragmented MPEG-4 (FRAGMENTED_MP4) for captions in XML format contained within fragmented MP4 files. This set of fragmented MP4 files is separate from your video and audio fragmented MP4 files.
    """

    RAW = 'RAW'
    FRAGMENTED_MP4 = 'FRAGMENTED_MP4'


class Mpeg2AdaptiveQuantization(Enum):
    """
    Specify the strength of any adaptive quantization filters that you enable. The value that you choose here applies to the following settings: Spatial adaptive quantization (spatialAdaptiveQuantization), and Temporal adaptive quantization (temporalAdaptiveQuantization).
    """

    OFF = 'OFF'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class Mpeg2CodecLevel(Enum):
    """
    Use Level (Mpeg2CodecLevel) to set the MPEG-2 level for the video output.
    """

    AUTO = 'AUTO'
    LOW = 'LOW'
    MAIN = 'MAIN'
    HIGH1440 = 'HIGH1440'
    HIGH = 'HIGH'


class Mpeg2CodecProfile(Enum):
    """
    Use Profile (Mpeg2CodecProfile) to set the MPEG-2 profile for the video output.
    """

    MAIN = 'MAIN'
    PROFILE_422 = 'PROFILE_422'


class Mpeg2IntraDcPrecision(Enum):
    """
    Use Intra DC precision (Mpeg2IntraDcPrecision) to set quantization precision for intra-block DC coefficients. If you choose the value auto, the service will automatically select the precision based on the per-frame compression ratio.
    """

    AUTO = 'AUTO'
    INTRA_DC_PRECISION_8 = 'INTRA_DC_PRECISION_8'
    INTRA_DC_PRECISION_9 = 'INTRA_DC_PRECISION_9'
    INTRA_DC_PRECISION_10 = 'INTRA_DC_PRECISION_10'
    INTRA_DC_PRECISION_11 = 'INTRA_DC_PRECISION_11'


class _IntegerMin1000Max288000000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=288000000.0)]


class _IntegerMin0Max47185920(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=47185920.0)]


class _IntegerMin1000Max300000000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=300000000.0)]


class Mpeg2Syntax(Enum):
    """
    Specify whether this output's video uses the D10 syntax. Keep the default value to  not use the syntax. Related settings: When you choose D10 (D_10) for your MXF  profile (profile), you must also set this value to to D10 (D_10).
    """

    DEFAULT = 'DEFAULT'
    D_10 = 'D_10'


class Mpeg2Settings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value MPEG2.
    """

    AdaptiveQuantization: Optional[Mpeg2AdaptiveQuantization] = None
    Bitrate: Optional[_IntegerMin1000Max288000000] = None
    CodecLevel: Optional[Mpeg2CodecLevel] = None
    CodecProfile: Optional[Mpeg2CodecProfile] = None
    DynamicSubGop: Optional[H264DynamicSubGop] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max1001] = None
    FramerateNumerator: Optional[_IntegerMin24Max60000] = None
    GopClosedCadence: Optional[_IntegerMin0Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    HrdBufferInitialFillPercentage: Optional[_IntegerMin0Max100] = None
    HrdBufferSize: Optional[_IntegerMin0Max47185920] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    IntraDcPrecision: Optional[Mpeg2IntraDcPrecision] = None
    MaxBitrate: Optional[_IntegerMin1000Max300000000] = None
    MinIInterval: Optional[_IntegerMin0Max30] = None
    NumberBFramesBetweenReferenceFrames: Optional[_IntegerMin0Max7] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[AvcIntraUhdQualityTuningLevel] = None
    RateControlMode: Optional[M2tsRateMode] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SceneChangeDetect: Optional[AntiAlias] = None
    SlowPal: Optional[AntiAlias] = None
    Softness: Optional[_IntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[AntiAlias] = None
    Syntax: Optional[Mpeg2Syntax] = None
    Telecine: Optional[H264Telecine] = None
    TemporalAdaptiveQuantization: Optional[AntiAlias] = None


class MsSmoothAudioDeduplication(Enum):
    """
    COMBINE_DUPLICATE_STREAMS combines identical audio encoding settings across a Microsoft Smooth output group into a single audio stream.
    """

    COMBINE_DUPLICATE_STREAMS = 'COMBINE_DUPLICATE_STREAMS'
    NONE = 'NONE'


class MsSmoothManifestEncoding(Enum):
    """
    Use Manifest encoding (MsSmoothManifestEncoding) to specify the encoding format for the server and client manifest. Valid options are utf8 and utf16.
    """

    UTF8 = 'UTF8'
    UTF16 = 'UTF16'


class MxfAfdSignaling(Enum):
    """
    Optional. When you have AFD signaling set up in your output video stream, use this setting to choose whether to also include it in the MXF wrapper. Choose Don't copy (NO_COPY) to exclude AFD signaling from the MXF wrapper. Choose Copy from video stream (COPY_FROM_VIDEO) to copy the AFD values from the video stream for this output to the MXF wrapper. Regardless of which option you choose, the AFD values remain in the video stream. Related settings: To set up your output to include or exclude AFD values, see AfdSignaling, under VideoDescription. On the console, find AFD signaling under the output's video encoding settings.
    """

    NO_COPY = 'NO_COPY'
    COPY_FROM_VIDEO = 'COPY_FROM_VIDEO'


class MxfProfile(Enum):
    """
    Specify the MXF profile, also called shim, for this output. When you choose Auto, MediaConvert chooses a profile based on the video codec and resolution. For a list of codecs supported with each MXF profile, see https://docs.aws.amazon.com/mediaconvert/latest/ug/codecs-supported-with-each-mxf-profile.html. For more information about the automatic selection behavior, see https://docs.aws.amazon.com/mediaconvert/latest/ug/default-automatic-selection-of-mxf-profiles.html.
    """

    D_10 = 'D_10'
    XDCAM = 'XDCAM'
    OP1A = 'OP1A'
    XAVC = 'XAVC'


class MxfXavcDurationMode(Enum):
    """
    To create an output that complies with the XAVC file format guidelines for interoperability, keep the default value, Drop frames for compliance (DROP_FRAMES_FOR_COMPLIANCE). To include all frames from your input in this output, keep the default setting, Allow any duration (ALLOW_ANY_DURATION). The number of frames that MediaConvert excludes when you set this to Drop frames for compliance depends on the output frame rate and duration.
    """

    ALLOW_ANY_DURATION = 'ALLOW_ANY_DURATION'
    DROP_FRAMES_FOR_COMPLIANCE = 'DROP_FRAMES_FOR_COMPLIANCE'


class _StringMin1Max100000(BaseModel):
    __root__: Annotated[str, Field(max_length=100000, min_length=1)]


class _IntegerMin0Max4194303(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4194303.0)]


class WatermarkingStrength(Enum):
    """
    Optional. Ignore this setting unless Nagra support directs you to specify a value. When you don't specify a value here, the Nagra NexGuard library uses its default value.
    """

    LIGHTEST = 'LIGHTEST'
    LIGHTER = 'LIGHTER'
    DEFAULT = 'DEFAULT'
    STRONGER = 'STRONGER'
    STRONGEST = 'STRONGEST'


class NexGuardFileMarkerSettings(BaseModel):
    """
    For forensic video watermarking, MediaConvert supports Nagra NexGuard File Marker watermarking. MediaConvert supports both PreRelease Content (NGPR/G2) and OTT Streaming workflows.
    """

    License: Optional[_StringMin1Max100000] = None
    Payload: Optional[_IntegerMin0Max4194303] = None
    Preset: Optional[_StringMin1Max256] = None
    Strength: Optional[WatermarkingStrength] = None


class NielsenActiveWatermarkProcessType(Enum):
    """
    Choose the type of Nielsen watermarks that you want in your outputs. When you choose NAES 2 and NW (NAES2_AND_NW), you must provide a value for the setting SID (sourceId). When you choose CBET (CBET), you must provide a value for the setting CSID (cbetSourceId). When you choose NAES 2, NW, and CBET (NAES2_AND_NW_AND_CBET), you must provide values for both of these settings.
    """

    NAES2_AND_NW = 'NAES2_AND_NW'
    CBET = 'CBET'
    NAES2_AND_NW_AND_CBET = 'NAES2_AND_NW_AND_CBET'


class _IntegerMin0Max0(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=0.0)]


class _StringPattern0xAFaF0908190908(BaseModel):
    __root__: Annotated[str, Field(regex='(^0x[A-Fa-f0-9]{0,8}$|^[1-9][0-9]{0,8}$)')]


class _IntegerMin0Max65534(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=65534.0)]


class NielsenSourceWatermarkStatusType(Enum):
    """
    Required. Specify whether your source content already contains Nielsen non-linear watermarks. When you set this value to Watermarked (WATERMARKED), the service fails the job. Nielsen requires that you add non-linear watermarking to only clean content that doesn't already  have non-linear Nielsen watermarks.
    """

    CLEAN = 'CLEAN'
    WATERMARKED = 'WATERMARKED'


class _StringPatternHttps(BaseModel):
    __root__: Annotated[str, Field(regex='^https:\\/\\/')]


class NielsenUniqueTicPerAudioTrackType(Enum):
    """
    To create assets that have the same TIC values in each audio track, keep the default value Share TICs (SAME_TICS_PER_TRACK). To create assets that have unique TIC values for each audio track, choose Use unique TICs (RESERVE_UNIQUE_TICS_PER_TRACK).
    """

    RESERVE_UNIQUE_TICS_PER_TRACK = 'RESERVE_UNIQUE_TICS_PER_TRACK'
    SAME_TICS_PER_TRACK = 'SAME_TICS_PER_TRACK'


class NoiseFilterPostTemporalSharpening(Enum):
    """
    Optional. When you set Noise reducer (noiseReducer) to Temporal (TEMPORAL), you can use this setting to apply sharpening. The default behavior, Auto (AUTO), allows the transcoder to determine whether to apply filtering, depending on input type and quality. When you set Noise reducer to Temporal, your output bandwidth is reduced. When Post temporal sharpening is also enabled, that bandwidth reduction is smaller.
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    AUTO = 'AUTO'


class NoiseReducerFilter(Enum):
    """
    Use Noise reducer filter (NoiseReducerFilter) to select one of the following spatial image filtering functions. To use this setting, you must also enable Noise reducer (NoiseReducer). * Bilateral preserves edges while reducing noise. * Mean (softest), Gaussian, Lanczos, and Sharpen (sharpest) do convolution filtering. * Conserve does min/max noise reduction. * Spatial does frequency-domain filtering based on JND principles. * Temporal optimizes video quality for complex motion.
    """

    BILATERAL = 'BILATERAL'
    MEAN = 'MEAN'
    GAUSSIAN = 'GAUSSIAN'
    LANCZOS = 'LANCZOS'
    SHARPEN = 'SHARPEN'
    CONSERVE = 'CONSERVE'
    SPATIAL = 'SPATIAL'
    TEMPORAL = 'TEMPORAL'


class _IntegerMin0Max3(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=3.0)]


class _IntegerMinNegative2Max3(BaseModel):
    __root__: Annotated[int, Field(ge=-2.0, le=3.0)]


class _IntegerMin0Max16(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=16.0)]


class _IntegerMin0Max4(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4.0)]


class _IntegerMinNegative1Max3(BaseModel):
    __root__: Annotated[int, Field(ge=-1.0, le=3.0)]


class _IntegerMin32000Max192000(BaseModel):
    __root__: Annotated[int, Field(ge=32000.0, le=192000.0)]


class _IntegerMin16000Max48000(BaseModel):
    __root__: Annotated[int, Field(ge=16000.0, le=48000.0)]


class OutputSettings(BaseModel):
    """
    Specific settings for this type of output.
    """

    HlsSettings: Optional[HlsSettings] = None


class _StringMin0(BaseModel):
    __root__: Annotated[str, Field(min_length=0)]


class VideoDetail(BaseModel):
    """
    Contains details about the output's video stream
    """

    HeightInPx: Optional[_Integer] = None
    WidthInPx: Optional[_Integer] = None


class OutputDetail(BaseModel):
    """
    Details regarding output
    """

    DurationInMs: Optional[_Integer] = None
    VideoDetails: Optional[VideoDetail] = None


class _ListOfOutputDetail(BaseModel):
    __root__: List[OutputDetail]


class OutputGroupDetail(BaseModel):
    """
    Contains details about the output groups specified in the job settings.
    """

    OutputDetails: Optional[_ListOfOutputDetail] = None


class OutputGroupType(Enum):
    """
    Type of output group (File group, Apple HLS, DASH ISO, Microsoft Smooth Streaming, CMAF)
    """

    HLS_GROUP_SETTINGS = 'HLS_GROUP_SETTINGS'
    DASH_ISO_GROUP_SETTINGS = 'DASH_ISO_GROUP_SETTINGS'
    FILE_GROUP_SETTINGS = 'FILE_GROUP_SETTINGS'
    MS_SMOOTH_GROUP_SETTINGS = 'MS_SMOOTH_GROUP_SETTINGS'
    CMAF_GROUP_SETTINGS = 'CMAF_GROUP_SETTINGS'


class PartnerWatermarking(BaseModel):
    """
    If you work with a third party video watermarking partner, use the group of settings that correspond with your watermarking partner to include watermarks in your output.
    """

    NexguardFileMarkerSettings: Optional[NexGuardFileMarkerSettings] = None


class ProresChromaSampling(Enum):
    """
    This setting applies only to ProRes 4444 and ProRes 4444 XQ outputs that you create from inputs that use 4:4:4 chroma sampling. Set Preserve 4:4:4 sampling (PRESERVE_444_SAMPLING) to allow outputs to also use 4:4:4 chroma sampling. You must specify a value for this setting when your output codec profile supports 4:4:4 chroma sampling. Related Settings: When you set Chroma sampling to Preserve 4:4:4 sampling (PRESERVE_444_SAMPLING), you must choose an output codec profile that supports 4:4:4 chroma sampling. These values for Profile (CodecProfile) support 4:4:4 chroma sampling: Apple ProRes 4444 (APPLE_PRORES_4444) or Apple ProRes 4444 XQ (APPLE_PRORES_4444_XQ). When you set Chroma sampling to Preserve 4:4:4 sampling, you must disable all video preprocessors except for Nexguard file marker (PartnerWatermarking). When you set Chroma sampling to Preserve 4:4:4 sampling and use framerate conversion, you must set Frame rate conversion algorithm (FramerateConversionAlgorithm) to Drop duplicate (DUPLICATE_DROP).
    """

    PRESERVE_444_SAMPLING = 'PRESERVE_444_SAMPLING'
    SUBSAMPLE_TO_422 = 'SUBSAMPLE_TO_422'


class ProresCodecProfile(Enum):
    """
    Use Profile (ProResCodecProfile) to specify the type of Apple ProRes codec to use for this output.
    """

    APPLE_PRORES_422 = 'APPLE_PRORES_422'
    APPLE_PRORES_422_HQ = 'APPLE_PRORES_422_HQ'
    APPLE_PRORES_422_LT = 'APPLE_PRORES_422_LT'
    APPLE_PRORES_422_PROXY = 'APPLE_PRORES_422_PROXY'
    APPLE_PRORES_4444 = 'APPLE_PRORES_4444'
    APPLE_PRORES_4444_XQ = 'APPLE_PRORES_4444_XQ'


class ProresSettings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value PRORES.
    """

    ChromaSampling: Optional[ProresChromaSampling] = None
    CodecProfile: Optional[ProresCodecProfile] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SlowPal: Optional[AntiAlias] = None
    Telecine: Optional[AvcIntraTelecine] = None


class QueueTransition(BaseModel):
    """
    Description of the source and destination queues between which the job has moved, along with the timestamp of the move
    """

    DestinationQueue: Optional[_String] = None
    SourceQueue: Optional[_String] = None
    Timestamp: Optional[_TimestampUnix] = None


class _IntegerMin2Max2147483647(BaseModel):
    __root__: Annotated[int, Field(ge=2.0, le=2147483647.0)]


class ReservationPlanStatus(Enum):
    """
    Specifies whether the pricing plan for your reserved queue is ACTIVE or EXPIRED.
    """

    ACTIVE = 'ACTIVE'
    EXPIRED = 'EXPIRED'


class RespondToAfd(Enum):
    """
    Use Respond to AFD (RespondToAfd) to specify how the service changes the video itself in response to AFD values in the input. * Choose Respond to clip the input video frame according to the AFD value, input display aspect ratio, and output display aspect ratio. * Choose Passthrough to include the input AFD values. Do not choose this when AfdSignaling is set to (NONE). A preferred implementation of this workflow is to set RespondToAfd to (NONE) and set AfdSignaling to (AUTO). * Choose None to remove all input AFD values from this output.
    """

    NONE = 'NONE'
    RESPOND = 'RESPOND'
    PASSTHROUGH = 'PASSTHROUGH'


class S3ObjectCannedAcl(Enum):
    """
    Choose an Amazon S3 canned ACL for MediaConvert to apply to this output.
    """

    PUBLIC_READ = 'PUBLIC_READ'
    AUTHENTICATED_READ = 'AUTHENTICATED_READ'
    BUCKET_OWNER_READ = 'BUCKET_OWNER_READ'
    BUCKET_OWNER_FULL_CONTROL = 'BUCKET_OWNER_FULL_CONTROL'


class S3DestinationAccessControl(BaseModel):
    """
    Optional. Have MediaConvert automatically apply Amazon S3 access control for the outputs in this output group. When you don't use this setting, S3 automatically applies the default access control list PRIVATE.
    """

    CannedAcl: Optional[S3ObjectCannedAcl] = None


class S3ServerSideEncryptionType(Enum):
    """
    Specify how you want your data keys managed. AWS uses data keys to encrypt your content. AWS also encrypts the data keys themselves, using a customer master key (CMK), and then stores the encrypted data keys alongside your encrypted content. Use this setting to specify which AWS service manages the CMK. For simplest set up, choose Amazon S3 (SERVER_SIDE_ENCRYPTION_S3). If you want your master key to be managed by AWS Key Management Service (KMS), choose AWS KMS (SERVER_SIDE_ENCRYPTION_KMS). By default, when you choose AWS KMS, KMS uses the AWS managed customer master key (CMK) associated with Amazon S3 to encrypt your data keys. You can optionally choose to specify a different, customer managed CMK. Do so by specifying the Amazon Resource Name (ARN) of the key for the setting  KMS ARN (kmsKeyArn).
    """

    SERVER_SIDE_ENCRYPTION_S3 = 'SERVER_SIDE_ENCRYPTION_S3'
    SERVER_SIDE_ENCRYPTION_KMS = 'SERVER_SIDE_ENCRYPTION_KMS'


class _StringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912(
    BaseModel
):
    __root__: Annotated[
        str,
        Field(
            regex='^arn:aws(-us-gov|-cn)?:kms:[a-z-]{2,6}-(east|west|central|((north|south)(east|west)?))-[1-9]{1,2}:\\d{12}:key/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
        ),
    ]


class ScalingBehavior(Enum):
    """
    Specify how the service handles outputs that have a different aspect ratio from the input aspect ratio. Choose Stretch to output (STRETCH_TO_OUTPUT) to have the service stretch your video image to fit. Keep the setting Default (DEFAULT) to have the service letterbox your video instead. This setting overrides any value that you specify for the setting Selection placement (position) in this output.
    """

    DEFAULT = 'DEFAULT'
    STRETCH_TO_OUTPUT = 'STRETCH_TO_OUTPUT'


class SccDestinationFramerate(Enum):
    """
    Set Framerate (SccDestinationFramerate) to make sure that the captions and the video are synchronized in the output. Specify a frame rate that matches the frame rate of the associated video. If the video frame rate is 29.97, choose 29.97 dropframe (FRAMERATE_29_97_DROPFRAME) only if the video has video_insertion=true and drop_frame_timecode=true; otherwise, choose 29.97 non-dropframe (FRAMERATE_29_97_NON_DROPFRAME).
    """

    FRAMERATE_23_97 = 'FRAMERATE_23_97'
    FRAMERATE_24 = 'FRAMERATE_24'
    FRAMERATE_25 = 'FRAMERATE_25'
    FRAMERATE_29_97_DROPFRAME = 'FRAMERATE_29_97_DROPFRAME'
    FRAMERATE_29_97_NON_DROPFRAME = 'FRAMERATE_29_97_NON_DROPFRAME'


class _StringPatternArnAwsUsGovAcm(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:aws(-us-gov)?:acm:')]


class _StringPatternW(BaseModel):
    __root__: Annotated[str, Field(regex='^[\\w-]+$')]


class _StringPatternIdentityAZaZ26AZaZ09163(BaseModel):
    __root__: Annotated[
        str, Field(regex='^(identity|[A-Za-z]{2,6}(\\.[A-Za-z0-9-]{1,63})+)$')
    ]


class _StringPatternDD(BaseModel):
    __root__: Annotated[str, Field(regex='^(\\d+(\\/\\d+)*)$')]


class _StringPatternAZaZ0932(BaseModel):
    __root__: Annotated[str, Field(regex='^[A-Za-z0-9]{32}$')]


class TagResourceRequest(BaseModel):
    Arn: _String
    Tags: _MapOfString


class _StringMin3Max3Pattern1809aFAF09aEAE(BaseModel):
    __root__: Annotated[
        str, Field(max_length=3, min_length=3, regex='^[1-8][0-9a-fA-F][0-9a-eA-E]$')
    ]


class TeletextPageType(Enum):
    """
    A page type as defined in the standard ETSI EN 300 468, Table 94
    """

    PAGE_TYPE_INITIAL = 'PAGE_TYPE_INITIAL'
    PAGE_TYPE_SUBTITLE = 'PAGE_TYPE_SUBTITLE'
    PAGE_TYPE_ADDL_INFO = 'PAGE_TYPE_ADDL_INFO'
    PAGE_TYPE_PROGRAM_SCHEDULE = 'PAGE_TYPE_PROGRAM_SCHEDULE'
    PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE = 'PAGE_TYPE_HEARING_IMPAIRED_SUBTITLE'


class _IntegerMin10Max48(BaseModel):
    __root__: Annotated[int, Field(ge=10.0, le=48.0)]


class TimecodeBurninPosition(Enum):
    """
    Use Position (Position) under under Timecode burn-in (TimecodeBurnIn) to specify the location the burned-in timecode on output video.
    """

    TOP_CENTER = 'TOP_CENTER'
    TOP_LEFT = 'TOP_LEFT'
    TOP_RIGHT = 'TOP_RIGHT'
    MIDDLE_LEFT = 'MIDDLE_LEFT'
    MIDDLE_CENTER = 'MIDDLE_CENTER'
    MIDDLE_RIGHT = 'MIDDLE_RIGHT'
    BOTTOM_LEFT = 'BOTTOM_LEFT'
    BOTTOM_CENTER = 'BOTTOM_CENTER'
    BOTTOM_RIGHT = 'BOTTOM_RIGHT'


class _StringPattern(BaseModel):
    __root__: Annotated[str, Field(regex='^[ -~]+$')]


class TimecodeBurnin(BaseModel):
    """
    Settings for burning the output timecode and specified prefix into the output.
    """

    FontSize: Optional[_IntegerMin10Max48] = None
    Position: Optional[TimecodeBurninPosition] = None
    Prefix: Optional[_StringPattern] = None


class _StringPattern0940191020191209301(BaseModel):
    __root__: Annotated[
        str, Field(regex='^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$')
    ]


class _ListOfId3Insertion(BaseModel):
    __root__: List[Id3Insertion]


class UntagResourceRequest(BaseModel):
    TagKeys: Optional[_ListOfString] = None


class UpdateQueueRequest(BaseModel):
    Description: Optional[_String] = None
    ReservationPlanSettings: Optional[ReservationPlanSettings] = None
    Status: Optional[QueueStatus] = None


class Vc3Class(Enum):
    """
    Specify the VC3 class to choose the quality characteristics for this output. VC3 class, together with the settings Framerate (framerateNumerator and framerateDenominator) and Resolution (height and width), determine your output bitrate. For example, say that your video resolution is 1920x1080 and your framerate is 29.97. Then Class 145 (CLASS_145) gives you an output with a bitrate of approximately 145 Mbps and Class 220 (CLASS_220) gives you and output with a bitrate of approximately 220 Mbps. VC3 class also specifies the color bit depth of your output.
    """

    CLASS_145_8BIT = 'CLASS_145_8BIT'
    CLASS_220_8BIT = 'CLASS_220_8BIT'
    CLASS_220_10BIT = 'CLASS_220_10BIT'


class Vc3InterlaceMode(Enum):
    """
    Optional. Choose the scan line type for this output. If you don't specify a value, MediaConvert will create a progressive output.
    """

    INTERLACED = 'INTERLACED'
    PROGRESSIVE = 'PROGRESSIVE'


class Vc3Settings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VC3
    """

    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max1001] = None
    FramerateNumerator: Optional[_IntegerMin24Max60000] = None
    InterlaceMode: Optional[Vc3InterlaceMode] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SlowPal: Optional[AntiAlias] = None
    Telecine: Optional[AvcIntraTelecine] = None
    Vc3Class: Optional[Vc3Class] = None


class VideoCodec(Enum):
    """
    Type of video codec
    """

    AV1 = 'AV1'
    AVC_INTRA = 'AVC_INTRA'
    FRAME_CAPTURE = 'FRAME_CAPTURE'
    H_264 = 'H_264'
    H_265 = 'H_265'
    MPEG2 = 'MPEG2'
    PRORES = 'PRORES'
    VC3 = 'VC3'
    VP8 = 'VP8'
    VP9 = 'VP9'
    XAVC = 'XAVC'


class _IntegerMin32Max8192(BaseModel):
    __root__: Annotated[int, Field(ge=32.0, le=8192.0)]


class VideoTimecodeInsertion(Enum):
    """
    Applies only to H.264, H.265, MPEG2, and ProRes outputs. Only enable Timecode insertion when the input frame rate is identical to the output frame rate. To include timecodes in this output, set Timecode insertion (VideoTimecodeInsertion) to PIC_TIMING_SEI. To leave them out, set it to DISABLED. Default is DISABLED. When the service inserts timecodes in an output, by default, it uses any embedded timecodes from the input. If none are present, the service will set the timecode for the first output frame to zero. To change this default behavior, adjust the settings under Timecode configuration (TimecodeConfig). In the console, these settings are located under Job > Job settings > Timecode configuration. Note - Timecode source under input settings (InputTimecodeSource) does not affect the timecodes that are inserted in the output. Source under Job settings > Timecode configuration (TimecodeSource) does.
    """

    DISABLED = 'DISABLED'
    PIC_TIMING_SEI = 'PIC_TIMING_SEI'


class _IntegerMinNegative1Max10(BaseModel):
    __root__: Annotated[int, Field(ge=-1.0, le=10.0)]


class Vp8QualityTuningLevel(Enum):
    """
    Optional. Use Quality tuning level (qualityTuningLevel) to choose how you want to trade off encoding speed for output video quality. The default behavior is faster, lower quality, multi-pass encoding.
    """

    MULTI_PASS = 'MULTI_PASS'
    MULTI_PASS_HQ = 'MULTI_PASS_HQ'


class Vp8RateControlMode(Enum):
    """
    With the VP8 codec, you can use only the variable bitrate (VBR) rate control mode.
    """

    VBR = 'VBR'


class _IntegerMin1000Max480000000(BaseModel):
    __root__: Annotated[int, Field(ge=1000.0, le=480000000.0)]


class WavFormat(Enum):
    """
    The service defaults to using RIFF for WAV outputs. If your output audio is likely to exceed 4 GB in file size, or if you otherwise need the extended support of the RF64 format, set your output WAV file format to RF64.
    """

    RIFF = 'RIFF'
    RF64 = 'RF64'


class Xavc4kIntraCbgProfileClass(Enum):
    """
    Specify the XAVC Intra 4k (CBG) Class to set the bitrate of your output. Outputs of the same class have similar image quality over the operating points that are valid for that class.
    """

    CLASS_100 = 'CLASS_100'
    CLASS_300 = 'CLASS_300'
    CLASS_480 = 'CLASS_480'


class Xavc4kIntraCbgProfileSettings(BaseModel):
    """
    Required when you set (Profile) under (VideoDescription)>(CodecSettings)>(XavcSettings) to the value XAVC_4K_INTRA_CBG.
    """

    XavcClass: Optional[Xavc4kIntraCbgProfileClass] = None


class Xavc4kIntraVbrProfileSettings(Xavc4kIntraCbgProfileSettings):
    """
    Required when you set (Profile) under (VideoDescription)>(CodecSettings)>(XavcSettings) to the value XAVC_4K_INTRA_VBR.
    """

    pass


class Xavc4kProfileBitrateClass(Enum):
    """
    Specify the XAVC 4k (Long GOP) Bitrate Class to set the bitrate of your output. Outputs of the same class have similar image quality over the operating points that are valid for that class.
    """

    BITRATE_CLASS_100 = 'BITRATE_CLASS_100'
    BITRATE_CLASS_140 = 'BITRATE_CLASS_140'
    BITRATE_CLASS_200 = 'BITRATE_CLASS_200'


class Xavc4kProfileCodecProfile(Enum):
    """
    Specify the codec profile for this output. Choose High, 8-bit, 4:2:0 (HIGH) or High, 10-bit, 4:2:2 (HIGH_422). These profiles are specified in ITU-T H.264.
    """

    HIGH = 'HIGH'
    HIGH_422 = 'HIGH_422'


class _IntegerMin8Max12(BaseModel):
    __root__: Annotated[int, Field(ge=8.0, le=12.0)]


class Xavc4kProfileSettings(BaseModel):
    """
    Required when you set (Profile) under (VideoDescription)>(CodecSettings)>(XavcSettings) to the value XAVC_4K.
    """

    BitrateClass: Optional[Xavc4kProfileBitrateClass] = None
    CodecProfile: Optional[Xavc4kProfileCodecProfile] = None
    FlickerAdaptiveQuantization: Optional[AntiAlias] = None
    GopBReference: Optional[AntiAlias] = None
    GopClosedCadence: Optional[_IntegerMin0Max2147483647] = None
    HrdBufferSize: Optional[_IntegerMin0Max1152000000] = None
    QualityTuningLevel: Optional[H264QualityTuningLevel] = None
    Slices: Optional[_IntegerMin8Max12] = None


class XavcEntropyEncoding(Enum):
    """
    Optional. Choose a specific entropy encoding mode only when you want to override XAVC recommendations. If you choose the value auto, MediaConvert uses the mode that the XAVC file format specifies given this output's operating point.
    """

    AUTO = 'AUTO'
    CABAC = 'CABAC'
    CAVLC = 'CAVLC'


class XavcHdIntraCbgProfileClass(Enum):
    """
    Specify the XAVC Intra HD (CBG) Class to set the bitrate of your output. Outputs of the same class have similar image quality over the operating points that are valid for that class.
    """

    CLASS_50 = 'CLASS_50'
    CLASS_100 = 'CLASS_100'
    CLASS_200 = 'CLASS_200'


class XavcHdIntraCbgProfileSettings(BaseModel):
    """
    Required when you set (Profile) under (VideoDescription)>(CodecSettings)>(XavcSettings) to the value XAVC_HD_INTRA_CBG.
    """

    XavcClass: Optional[XavcHdIntraCbgProfileClass] = None


class XavcHdProfileBitrateClass(Enum):
    """
    Specify the XAVC HD (Long GOP) Bitrate Class to set the bitrate of your output. Outputs of the same class have similar image quality over the operating points that are valid for that class.
    """

    BITRATE_CLASS_25 = 'BITRATE_CLASS_25'
    BITRATE_CLASS_35 = 'BITRATE_CLASS_35'
    BITRATE_CLASS_50 = 'BITRATE_CLASS_50'


class _IntegerMin4Max12(BaseModel):
    __root__: Annotated[int, Field(ge=4.0, le=12.0)]


class XavcHdProfileSettings(BaseModel):
    """
    Required when you set (Profile) under (VideoDescription)>(CodecSettings)>(XavcSettings) to the value XAVC_HD.
    """

    BitrateClass: Optional[XavcHdProfileBitrateClass] = None
    FlickerAdaptiveQuantization: Optional[AntiAlias] = None
    GopBReference: Optional[AntiAlias] = None
    GopClosedCadence: Optional[_IntegerMin0Max2147483647] = None
    HrdBufferSize: Optional[_IntegerMin0Max1152000000] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    QualityTuningLevel: Optional[H264QualityTuningLevel] = None
    Slices: Optional[_IntegerMin4Max12] = None
    Telecine: Optional[AvcIntraTelecine] = None


class XavcProfile(Enum):
    """
    Specify the XAVC profile for this output. For more information, see the Sony documentation at https://www.xavc-info.org/. Note that MediaConvert doesn't support the interlaced video XAVC operating points for XAVC_HD_INTRA_CBG. To create an interlaced XAVC output, choose the profile XAVC_HD.
    """

    XAVC_HD_INTRA_CBG = 'XAVC_HD_INTRA_CBG'
    XAVC_4K_INTRA_CBG = 'XAVC_4K_INTRA_CBG'
    XAVC_4K_INTRA_VBR = 'XAVC_4K_INTRA_VBR'
    XAVC_HD = 'XAVC_HD'
    XAVC_4K = 'XAVC_4K'


class _DoubleMinNegative60Max6(_DoubleMinNegative59Max0):
    pass


class _IntegerMinNegative60Max6(BaseModel):
    __root__: Annotated[int, Field(ge=-60.0, le=6.0)]


class _StringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        ),
    ]


class _StringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
        ),
    ]


class _StringPatternS3ASSETMAPXml(BaseModel):
    __root__: Annotated[str, Field(regex='^s3:\\/\\/.*\\/(ASSETMAP.xml)?$')]


class HopDestination(BaseModel):
    """
    Optional. Configuration for a destination queue to which the job can hop once a customer-defined minimum wait time has passed.
    """

    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    WaitMinutes: Optional[_Integer] = None


class AvailBlanking(BaseModel):
    """
    Use ad avail blanking settings to specify your output content during SCTE-35 triggered ad avails. You can blank your video or overlay it with an image. MediaConvert also removes any audio and embedded captions during the ad avail. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ad-avail-blanking.html.
    """

    AvailBlankingImage: Optional[
        _StringMin14PatternS3BmpBMPPngPNGHttpsBmpBMPPngPNG
    ] = None


class ExtendedDataServices(BaseModel):
    """
    Hexadecimal value as per EIA-608 Line 21 Data Services, section 9.5.1.5 05h Content Advisory.
    """

    CopyProtectionAction: Optional[CopyProtectionAction] = None
    VchipAction: Optional[CopyProtectionAction] = None


class KantarWatermarkSettings(BaseModel):
    """
    Use these settings only when you use Kantar watermarking. Specify the values that MediaConvert uses to generate and place Kantar watermarks in your output audio. These settings apply to every output in your job. In addition to specifying these values, you also need to store your Kantar credentials in AWS Secrets Manager. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/kantar-watermarking.html.
    """

    ChannelName: Optional[_StringMin1Max20] = None
    ContentReference: Optional[_StringMin1Max50PatternAZAZ09] = None
    CredentialsSecretName: Optional[_StringMin1Max512PatternAZAZ09] = None
    FileOffset: Optional[_DoubleMin0] = None
    KantarLicenseId: Optional[_IntegerMin0Max2147483647] = None
    KantarServerUrl: Optional[_StringPatternHttpsKantarmediaCom] = None
    LogDestination: Optional[_StringPatternS3] = None
    Metadata3: Optional[_StringMin1Max50] = None
    Metadata4: Optional[_StringMin1Max50] = None
    Metadata5: Optional[_StringMin1Max50] = None
    Metadata6: Optional[_StringMin1Max50] = None
    Metadata7: Optional[_StringMin1Max50] = None
    Metadata8: Optional[_StringMin1Max50] = None


class NielsenConfiguration(BaseModel):
    """
    Settings for your Nielsen configuration. If you don't do Nielsen measurement and analytics, ignore these settings. When you enable Nielsen configuration (nielsenConfiguration), MediaConvert enables PCM to ID3 tagging for all outputs in the job. To enable Nielsen configuration programmatically, include an instance of nielsenConfiguration in your JSON job specification. Even if you don't include any children of nielsenConfiguration, you still enable the setting.
    """

    BreakoutCode: Optional[_IntegerMin0Max0] = None
    DistributorId: Optional[_String] = None


class NielsenNonLinearWatermarkSettings(BaseModel):
    """
    Ignore these settings unless you are using Nielsen non-linear watermarking. Specify the values that  MediaConvert uses to generate and place Nielsen watermarks in your output audio. In addition to  specifying these values, you also need to set up your cloud TIC server. These settings apply to  every output in your job. The MediaConvert implementation is currently with the following Nielsen versions: Nielsen Watermark SDK Version 5.2.1 Nielsen NLM Watermark Engine Version 1.2.7 Nielsen Watermark Authenticator [SID_TIC] Version [5.0.0]
    """

    ActiveWatermarkProcess: Optional[NielsenActiveWatermarkProcessType] = None
    AdiFilename: Optional[_StringPatternS3] = None
    AssetId: Optional[_StringMin1Max20] = None
    AssetName: Optional[_StringMin1Max50] = None
    CbetSourceId: Optional[_StringPattern0xAFaF0908190908] = None
    EpisodeId: Optional[_StringMin1Max20] = None
    MetadataDestination: Optional[_StringPatternS3] = None
    SourceId: Optional[_IntegerMin0Max65534] = None
    SourceWatermarkStatus: Optional[NielsenSourceWatermarkStatusType] = None
    TicServerUrl: Optional[_StringPatternHttps] = None
    UniqueTicPerAudioTrack: Optional[NielsenUniqueTicPerAudioTrackType] = None


class TimecodeConfig(BaseModel):
    """
    These settings control how the service handles timecodes throughout the job. These settings don't affect input clipping.
    """

    Anchor: Optional[_StringPattern010920405090509092] = None
    Source: Optional[InputTimecodeSource] = None
    Start: Optional[_StringPattern010920405090509092] = None
    TimestampOffset: Optional[_StringPattern0940191020191209301] = None


class TimedMetadataInsertion(BaseModel):
    """
    Enable Timed metadata insertion (TimedMetadataInsertion) to include ID3 tags in any HLS outputs. To include timed metadata, you must enable it here, enable it in each output container, and specify tags and timecodes in ID3 insertion (Id3Insertion) objects.
    """

    Id3Insertions: Optional[_ListOfId3Insertion] = None


class ListTagsForResourceResponse(BaseModel):
    ResourceTags: Optional[ResourceTags] = None


class Eac3AtmosSettings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value EAC3_ATMOS.
    """

    Bitrate: Optional[_IntegerMin384000Max1024000] = None
    BitstreamMode: Optional[Eac3AtmosBitstreamMode] = None
    CodingMode: Optional[Eac3AtmosCodingMode] = None
    DialogueIntelligence: Optional[Ac3LfeFilter] = None
    DownmixControl: Optional[Eac3AtmosDownmixControl] = None
    DynamicRangeCompressionLine: Optional[Eac3AtmosDynamicRangeCompressionLine] = None
    DynamicRangeCompressionRf: Optional[Eac3AtmosDynamicRangeCompressionLine] = None
    DynamicRangeControl: Optional[Eac3AtmosDownmixControl] = None
    LoRoCenterMixLevel: Optional[_DoubleMinNegative6Max3] = None
    LoRoSurroundMixLevel: Optional[_DoubleMinNegative60MaxNegative1] = None
    LtRtCenterMixLevel: Optional[_DoubleMinNegative6Max3] = None
    LtRtSurroundMixLevel: Optional[_DoubleMinNegative60MaxNegative1] = None
    MeteringMode: Optional[Eac3AtmosMeteringMode] = None
    SampleRate: Optional[_IntegerMin48000Max48000] = None
    SpeechThreshold: Optional[_IntegerMin0Max100] = None
    StereoDownmix: Optional[Eac3AtmosStereoDownmix] = None
    SurroundExMode: Optional[Eac3AtmosSurroundExMode] = None


class Eac3Settings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value EAC3.
    """

    AttenuationControl: Optional[Eac3AttenuationControl] = None
    Bitrate: Optional[_IntegerMin64000Max640000] = None
    BitstreamMode: Optional[Eac3BitstreamMode] = None
    CodingMode: Optional[Eac3CodingMode] = None
    DcFilter: Optional[Ac3LfeFilter] = None
    Dialnorm: Optional[_IntegerMin1Max31] = None
    DynamicRangeCompressionLine: Optional[Eac3AtmosDynamicRangeCompressionLine] = None
    DynamicRangeCompressionRf: Optional[Eac3AtmosDynamicRangeCompressionLine] = None
    LfeControl: Optional[Eac3LfeControl] = None
    LfeFilter: Optional[Ac3LfeFilter] = None
    LoRoCenterMixLevel: Optional[_DoubleMinNegative60Max3] = None
    LoRoSurroundMixLevel: Optional[_DoubleMinNegative60MaxNegative1] = None
    LtRtCenterMixLevel: Optional[_DoubleMinNegative60Max3] = None
    LtRtSurroundMixLevel: Optional[_DoubleMinNegative60MaxNegative1] = None
    MetadataControl: Optional[Ac3MetadataControl] = None
    PassthroughControl: Optional[Eac3PassthroughControl] = None
    PhaseControl: Optional[Eac3PhaseControl] = None
    SampleRate: Optional[_IntegerMin48000Max48000] = None
    StereoDownmix: Optional[Eac3StereoDownmix] = None
    SurroundExMode: Optional[Eac3AtmosSurroundExMode] = None
    SurroundMode: Optional[Eac3AtmosSurroundExMode] = None


class Mp2Settings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value MP2.
    """

    Bitrate: Optional[_IntegerMin32000Max384000] = None
    Channels: Optional[_IntegerMin1Max2] = None
    SampleRate: Optional[_IntegerMin32000Max48000] = None


class Mp3Settings(BaseModel):
    """
    Required when you set Codec, under AudioDescriptions>CodecSettings, to the value MP3.
    """

    Bitrate: Optional[_IntegerMin16000Max320000] = None
    Channels: Optional[_IntegerMin1Max2] = None
    RateControlMode: Optional[AacRateControlMode] = None
    SampleRate: Optional[_IntegerMin22050Max48000] = None
    VbrQuality: Optional[_IntegerMin0Max9] = None


class OpusSettings(BaseModel):
    """
    Required when you set Codec, under AudioDescriptions>CodecSettings, to the value OPUS.
    """

    Bitrate: Optional[_IntegerMin32000Max192000] = None
    Channels: Optional[_IntegerMin1Max2] = None
    SampleRate: Optional[_IntegerMin16000Max48000] = None


class VorbisSettings(BaseModel):
    """
    Required when you set Codec, under AudioDescriptions>CodecSettings, to the value Vorbis.
    """

    Channels: Optional[_IntegerMin1Max2] = None
    SampleRate: Optional[_IntegerMin22050Max48000] = None
    VbrQuality: Optional[_IntegerMinNegative1Max10] = None


class WavSettings(BaseModel):
    """
    Required when you set (Codec) under (AudioDescriptions)>(CodecSettings) to the value WAV.
    """

    BitDepth: Optional[_IntegerMin16Max24] = None
    Channels: Optional[_IntegerMin1Max64] = None
    Format: Optional[WavFormat] = None
    SampleRate: Optional[_IntegerMin8000Max192000] = None


class AudioCodecSettings(BaseModel):
    """
    Settings related to audio encoding. The settings in this group vary depending on the value that you choose for your audio codec.
    """

    AacSettings: Optional[AacSettings] = None
    Ac3Settings: Optional[Ac3Settings] = None
    AiffSettings: Optional[AiffSettings] = None
    Codec: Optional[AudioCodec] = None
    Eac3AtmosSettings: Optional[Eac3AtmosSettings] = None
    Eac3Settings: Optional[Eac3Settings] = None
    Mp2Settings: Optional[Mp2Settings] = None
    Mp3Settings: Optional[Mp3Settings] = None
    OpusSettings: Optional[OpusSettings] = None
    VorbisSettings: Optional[VorbisSettings] = None
    WavSettings: Optional[WavSettings] = None


class AudioNormalizationSettings(BaseModel):
    """
    Advanced audio normalization settings. Ignore these settings unless you need to comply with a loudness standard.
    """

    Algorithm: Optional[AudioNormalizationAlgorithm] = None
    AlgorithmControl: Optional[AudioNormalizationAlgorithmControl] = None
    CorrectionGateLevel: Optional[_IntegerMinNegative70Max0] = None
    LoudnessLogging: Optional[AudioNormalizationLoudnessLogging] = None
    PeakCalculation: Optional[AudioNormalizationPeakCalculation] = None
    TargetLkfs: Optional[_DoubleMinNegative59Max0] = None


class _ListOfIntegerMin1Max2147483647(BaseModel):
    __root__: List[_IntegerMin1Max2147483647]


class _ListOfStringMin1(BaseModel):
    __root__: List[_StringMin1]


class AudioSelectorGroup(BaseModel):
    """
    Use audio selector groups to combine multiple sidecar audio inputs so that you can assign them to a single output audio tab (AudioDescription). Note that, if you're working with embedded audio, it's simpler to assign multiple input tracks into a single audio selector rather than use an audio selector group.
    """

    AudioSelectorNames: Optional[_ListOfStringMin1] = None


class AvcIntraUhdSettings(BaseModel):
    """
    Optional when you set AVC-Intra class (avcIntraClass) to Class 4K/2K (CLASS_4K_2K). When you set AVC-Intra class to a different value, this object isn't allowed.
    """

    QualityTuningLevel: Optional[AvcIntraUhdQualityTuningLevel] = None


class AvcIntraSettings(BaseModel):
    """
    Required when you choose AVC-Intra for your output video codec. For more information about the AVC-Intra settings, see the relevant specification. For detailed information about SD and HD in AVC-Intra, see https://ieeexplore.ieee.org/document/7290936. For information about 4K/2K in AVC-Intra, see https://pro-av.panasonic.net/en/avc-ultra/AVC-ULTRAoverview.pdf.
    """

    AvcIntraClass: Optional[AvcIntraClass] = None
    AvcIntraUhdSettings: Optional[AvcIntraUhdSettings] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max1001] = None
    FramerateNumerator: Optional[_IntegerMin24Max60000] = None
    InterlaceMode: Optional[AvcIntraInterlaceMode] = None
    ScanTypeConversionMode: Optional[AvcIntraScanTypeConversionMode] = None
    SlowPal: Optional[AntiAlias] = None
    Telecine: Optional[AvcIntraTelecine] = None


class DvbSubDestinationSettings(BaseModel):
    """
    Settings related to DVB-Sub captions. Set up DVB-Sub captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/dvb-sub-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to DVB_SUB.
    """

    Alignment: Optional[BurninSubtitleAlignment] = None
    BackgroundColor: Optional[BurninSubtitleBackgroundColor] = None
    BackgroundOpacity: Optional[_IntegerMin0Max255] = None
    DdsHandling: Optional[DvbddsHandling] = None
    DdsXCoordinate: Optional[_IntegerMin0Max2147483647] = None
    DdsYCoordinate: Optional[_IntegerMin0Max2147483647] = None
    FontColor: Optional[BurninSubtitleFontColor] = None
    FontOpacity: Optional[_IntegerMin0Max255] = None
    FontResolution: Optional[_IntegerMin96Max600] = None
    FontScript: Optional[FontScript] = None
    FontSize: Optional[_IntegerMin0Max96] = None
    Height: Optional[_IntegerMin1Max2147483647] = None
    OutlineColor: Optional[BurninSubtitleOutlineColor] = None
    OutlineSize: Optional[_IntegerMin0Max10] = None
    ShadowColor: Optional[BurninSubtitleBackgroundColor] = None
    ShadowOpacity: Optional[_IntegerMin0Max255] = None
    ShadowXOffset: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    ShadowYOffset: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    SubtitlingType: Optional[DvbSubtitlingType] = None
    TeletextSpacing: Optional[BurninSubtitleTeletextSpacing] = None
    Width: Optional[_IntegerMin1Max2147483647] = None
    XPosition: Optional[_IntegerMin0Max2147483647] = None
    YPosition: Optional[_IntegerMin0Max2147483647] = None


class EmbeddedDestinationSettings(BaseModel):
    """
    Settings related to CEA/EIA-608 and CEA/EIA-708 (also called embedded or ancillary) captions. Set up embedded captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/embedded-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to EMBEDDED, EMBEDDED_PLUS_SCTE20, or SCTE20_PLUS_EMBEDDED.
    """

    Destination608ChannelNumber: Optional[_IntegerMin1Max4] = None
    Destination708ServiceNumber: Optional[_IntegerMin1Max6] = None


class ImscDestinationSettings(BaseModel):
    """
    Settings related to IMSC captions. IMSC is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ttml-and-webvtt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to IMSC.
    """

    StylePassthrough: Optional[Ac3LfeFilter] = None


class SccDestinationSettings(BaseModel):
    """
    Settings related to SCC captions. SCC is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/scc-srt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to SCC.
    """

    Framerate: Optional[SccDestinationFramerate] = None


class SrtDestinationSettings(ImscDestinationSettings):
    """
    SRT Destination Settings
    """

    pass


class TtmlDestinationSettings(ImscDestinationSettings):
    """
    Settings related to TTML captions. TTML is a sidecar format that holds captions in a file that is separate from the video container. Set up sidecar captions in the same output group, but different output from your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/ttml-and-webvtt-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to TTML.
    """

    pass


class WebvttDestinationSettings(ImscDestinationSettings):
    """
    WEBVTT Destination Settings
    """

    pass


class EmbeddedSourceSettings(BaseModel):
    """
    Settings for embedded captions Source
    """

    Convert608To708: Optional[AncillaryConvert608To708] = None
    Source608ChannelNumber: Optional[_IntegerMin1Max4] = None
    Source608TrackNumber: Optional[_IntegerMin1Max1] = None
    TerminateCaptions: Optional[AncillaryTerminateCaptions] = None


class FileSourceSettings(BaseModel):
    """
    If your input captions are SCC, SMI, SRT, STL, TTML, WebVTT, or IMSC 1.1 in an xml file, specify the URI of the input caption source file. If your caption source is IMSC in an IMF package, use TrackSourceSettings instead of FileSoureSettings.
    """

    Convert608To708: Optional[AncillaryConvert608To708] = None
    Framerate: Optional[CaptionSourceFramerate] = None
    SourceFile: Optional[
        _StringMin14PatternS3SccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTTHttpsSccSCCTtmlTTMLDfxpDFXPStlSTLSrtSRTXmlXMLSmiSMIVttVTTWebvttWEBVTT
    ] = None
    TimeDelta: Optional[_IntegerMinNegative2147483648Max2147483647] = None


class TeletextSourceSettings(BaseModel):
    """
    Settings specific to Teletext caption sources, including Page number.
    """

    PageNumber: Optional[_StringMin3Max3Pattern1809aFAF09aEAE] = None


class CmafAdditionalManifest(BaseModel):
    """
    Specify the details for each pair of HLS and DASH additional manifests that you want the service to generate for this CMAF output group. Each pair of manifests can reference a different subset of outputs in the group.
    """

    ManifestNameModifier: Optional[_StringMin1] = None
    SelectedOutputs: Optional[_ListOfStringMin1] = None


class StaticKeyProvider(BaseModel):
    """
    Use these settings to set up encryption with a static key provider.
    """

    KeyFormat: Optional[_StringPatternIdentityAZaZ26AZaZ09163] = None
    KeyFormatVersions: Optional[_StringPatternDD] = None
    StaticKeyValue: Optional[_StringPatternAZaZ0932] = None
    Url: Optional[_String] = None


class _ListOfCmafAdditionalManifest(BaseModel):
    __root__: List[CmafAdditionalManifest]


class Hdr10Metadata(BaseModel):
    """
    Use these settings to specify static color calibration metadata, as defined by SMPTE ST 2086. These values don't affect the pixel values that are encoded in the video stream. They are intended to help the downstream video player display content in a way that reflects the intentions of the the content creator.
    """

    BluePrimaryX: Optional[_IntegerMin0Max50000] = None
    BluePrimaryY: Optional[_IntegerMin0Max50000] = None
    GreenPrimaryX: Optional[_IntegerMin0Max50000] = None
    GreenPrimaryY: Optional[_IntegerMin0Max50000] = None
    MaxContentLightLevel: Optional[_IntegerMin0Max65535] = None
    MaxFrameAverageLightLevel: Optional[_IntegerMin0Max65535] = None
    MaxLuminance: Optional[_IntegerMin0Max2147483647] = None
    MinLuminance: Optional[_IntegerMin0Max2147483647] = None
    RedPrimaryX: Optional[_IntegerMin0Max50000] = None
    RedPrimaryY: Optional[_IntegerMin0Max50000] = None
    WhitePointX: Optional[_IntegerMin0Max50000] = None
    WhitePointY: Optional[_IntegerMin0Max50000] = None


class ColorCorrector(BaseModel):
    """
    Settings for color correction.
    """

    Brightness: Optional[_IntegerMin1Max100] = None
    ColorSpaceConversion: Optional[ColorSpaceConversion] = None
    Contrast: Optional[_IntegerMin1Max100] = None
    Hdr10Metadata: Optional[Hdr10Metadata] = None
    Hue: Optional[_IntegerMinNegative180Max180] = None
    SampleRangeConversion: Optional[SampleRangeConversion] = None
    Saturation: Optional[_IntegerMin1Max100] = None


class F4vSettings(BaseModel):
    """
    Settings for F4v container
    """

    MoovPlacement: Optional[F4vMoovPlacement] = None


class M2tsSettings(BaseModel):
    """
    MPEG-2 TS container settings. These apply to outputs in a File output group when the output's container (ContainerType) is MPEG-2 Transport Stream (M2TS). In these assets, data is organized by the program map table (PMT). Each transport stream program contains subsets of data, including audio, video, and metadata. Each of these subsets of data has a numerical label called a packet identifier (PID). Each transport stream program corresponds to one MediaConvert output. The PMT lists the types of data in a program along with their PID. Downstream systems and players use the program map table to look up the PID for each type of data it accesses and then uses the PIDs to locate specific data within the asset.
    """

    AudioBufferModel: Optional[M2tsAudioBufferModel] = None
    AudioDuration: Optional[CmfcAudioDuration] = None
    AudioFramesPerPes: Optional[_IntegerMin0Max2147483647] = None
    AudioPids: Optional[_ListOfIntegerMin32Max8182] = None
    Bitrate: Optional[_IntegerMin0Max2147483647] = None
    BufferModel: Optional[M2tsBufferModel] = None
    DataPTSControl: Optional[M2tsDataPtsControl] = None
    DvbNitSettings: Optional[DvbNitSettings] = None
    DvbSdtSettings: Optional[DvbSdtSettings] = None
    DvbSubPids: Optional[_ListOfIntegerMin32Max8182] = None
    DvbTdtSettings: Optional[DvbTdtSettings] = None
    DvbTeletextPid: Optional[_IntegerMin32Max8182] = None
    EbpAudioInterval: Optional[M2tsEbpAudioInterval] = None
    EbpPlacement: Optional[M2tsEbpPlacement] = None
    EsRateInPes: Optional[CmafInitializationVectorInManifest] = None
    ForceTsVideoEbpOrder: Optional[M2tsForceTsVideoEbpOrder] = None
    FragmentTime: Optional[_DoubleMin0] = None
    MaxPcrInterval: Optional[_IntegerMin0Max500] = None
    MinEbpInterval: Optional[_IntegerMin0Max10000] = None
    NielsenId3: Optional[CmfcScte35Esam] = None
    NullPacketBitrate: Optional[_DoubleMin0] = None
    PatInterval: Optional[_IntegerMin0Max1000] = None
    PcrControl: Optional[M2tsPcrControl] = None
    PcrPid: Optional[_IntegerMin32Max8182] = None
    PmtInterval: Optional[_IntegerMin0Max1000] = None
    PmtPid: Optional[_IntegerMin32Max8182] = None
    PrivateMetadataPid: Optional[_IntegerMin32Max8182] = None
    ProgramNumber: Optional[_IntegerMin0Max65535] = None
    RateMode: Optional[M2tsRateMode] = None
    Scte35Esam: Optional[M2tsScte35Esam] = None
    Scte35Pid: Optional[_IntegerMin32Max8182] = None
    Scte35Source: Optional[CmfcScte35Source] = None
    SegmentationMarkers: Optional[M2tsSegmentationMarkers] = None
    SegmentationStyle: Optional[M2tsSegmentationStyle] = None
    SegmentationTime: Optional[_DoubleMin0] = None
    TimedMetadataPid: Optional[_IntegerMin32Max8182] = None
    TransportStreamId: Optional[_IntegerMin0Max65535] = None
    VideoPid: Optional[_IntegerMin32Max8182] = None


class M3u8Settings(BaseModel):
    """
    These settings relate to the MPEG-2 transport stream (MPEG2-TS) container for the MPEG2-TS segments in your HLS outputs.
    """

    AudioDuration: Optional[CmfcAudioDuration] = None
    AudioFramesPerPes: Optional[_IntegerMin0Max2147483647] = None
    AudioPids: Optional[_ListOfIntegerMin32Max8182] = None
    DataPTSControl: Optional[M2tsDataPtsControl] = None
    MaxPcrInterval: Optional[_IntegerMin0Max500] = None
    NielsenId3: Optional[CmfcScte35Esam] = None
    PatInterval: Optional[_IntegerMin0Max1000] = None
    PcrControl: Optional[M2tsPcrControl] = None
    PcrPid: Optional[_IntegerMin32Max8182] = None
    PmtInterval: Optional[_IntegerMin0Max1000] = None
    PmtPid: Optional[_IntegerMin32Max8182] = None
    PrivateMetadataPid: Optional[_IntegerMin32Max8182] = None
    ProgramNumber: Optional[_IntegerMin0Max65535] = None
    Scte35Pid: Optional[_IntegerMin32Max8182] = None
    Scte35Source: Optional[CmfcScte35Source] = None
    TimedMetadata: Optional[CmfcScte35Source] = None
    TimedMetadataPid: Optional[_IntegerMin32Max8182] = None
    TransportStreamId: Optional[_IntegerMin0Max65535] = None
    VideoPid: Optional[_IntegerMin32Max8182] = None


class MovSettings(BaseModel):
    """
    These settings relate to your QuickTime MOV output container.
    """

    ClapAtom: Optional[CmafInitializationVectorInManifest] = None
    CslgAtom: Optional[CmafInitializationVectorInManifest] = None
    Mpeg2FourCCControl: Optional[MovMpeg2FourCCControl] = None
    PaddingControl: Optional[MovPaddingControl] = None
    Reference: Optional[MovReference] = None


class Mp4Settings(BaseModel):
    """
    These settings relate to your MP4 output container. You can create audio only outputs with this container. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/supported-codecs-containers-audio-only.html#output-codecs-and-containers-supported-for-audio-only.
    """

    AudioDuration: Optional[CmfcAudioDuration] = None
    CslgAtom: Optional[CmafInitializationVectorInManifest] = None
    CttsVersion: Optional[_IntegerMin0Max1] = None
    FreeSpaceBox: Optional[CmafInitializationVectorInManifest] = None
    MoovPlacement: Optional[F4vMoovPlacement] = None
    Mp4MajorBrand: Optional[_String] = None


class MpdSettings(BaseModel):
    """
    These settings relate to the fragmented MP4 container for the segments in your DASH outputs.
    """

    AccessibilityCaptionHints: Optional[CmafInitializationVectorInManifest] = None
    AudioDuration: Optional[CmfcAudioDuration] = None
    CaptionContainerType: Optional[MpdCaptionContainerType] = None
    Scte35Esam: Optional[CmfcScte35Esam] = None
    Scte35Source: Optional[CmfcScte35Source] = None


class _ListOfHopDestination(BaseModel):
    __root__: List[HopDestination]


class DashAdditionalManifest(CmafAdditionalManifest):
    """
    Specify the details for each additional DASH manifest that you want the service to generate for this output group. Each manifest can reference a different subset of outputs in the group.
    """

    pass


class _ListOfDashAdditionalManifest(BaseModel):
    __root__: List[DashAdditionalManifest]


class _ListOfEndpoint(BaseModel):
    __root__: List[Endpoint]


class DolbyVisionLevel6Metadata(BaseModel):
    """
    Use these settings when you set DolbyVisionLevel6Mode to SPECIFY to override the MaxCLL and MaxFALL values in your input with new values.
    """

    MaxCll: Optional[_IntegerMin0Max65535] = None
    MaxFall: Optional[_IntegerMin0Max65535] = None


class DolbyVision(BaseModel):
    """
    With AWS Elemental MediaConvert, you can create profile 5 Dolby Vision outputs from MXF and IMF sources that contain mastering information as frame-interleaved Dolby Vision metadata.
    """

    L6Metadata: Optional[DolbyVisionLevel6Metadata] = None
    L6Mode: Optional[DolbyVisionLevel6Mode] = None
    Profile: Optional[DolbyVisionProfile] = None


class EsamSignalProcessingNotification(BaseModel):
    """
    ESAM SignalProcessingNotification data defined by OC-SP-ESAM-API-I03-131025.
    """

    SccXml: Optional[_StringPatternSNSignalProcessingNotificationNS] = None


class HlsAdditionalManifest(CmafAdditionalManifest):
    """
    Specify the details for each additional HLS manifest that you want the service to generate for this output group. Each manifest can reference a different subset of outputs in the group.
    """

    pass


class _ListOfHlsAdditionalManifest(BaseModel):
    __root__: List[HlsAdditionalManifest]


class _ListOfInsertableImage(BaseModel):
    __root__: List[InsertableImage]


class ImageInserter(BaseModel):
    """
    Use the image inserter feature to include a graphic overlay on your video. Enable or disable this feature for each input or output individually. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/graphic-overlay.html. This setting is disabled by default.
    """

    InsertableImages: Optional[_ListOfInsertableImage] = None


class Rectangle(BaseModel):
    """
    Use Rectangle to identify a specific area of the video frame.
    """

    Height: Optional[_IntegerMin2Max2147483647] = None
    Width: Optional[_IntegerMin2Max2147483647] = None
    X: Optional[_IntegerMin0Max2147483647] = None
    Y: Optional[_IntegerMin0Max2147483647] = None


class InputDecryptionSettings(BaseModel):
    """
    Settings for decrypting any input files that you encrypt before you upload them to Amazon S3. MediaConvert can decrypt files only when you use AWS Key Management Service (KMS) to encrypt the data key that you use to encrypt your content.
    """

    DecryptionMode: Optional[DecryptionMode] = None
    EncryptedDecryptionKey: Optional[_StringMin24Max512PatternAZaZ0902] = None
    InitializationVector: Optional[_StringMin16Max24PatternAZaZ0922AZaZ0916] = None
    KmsKeyRegion: Optional[
        _StringMin9Max19PatternAZ26EastWestCentralNorthSouthEastWest1912
    ] = None


class _ListOfInputClipping(BaseModel):
    __root__: List[InputClipping]


class _ListOfStringPatternS3ASSETMAPXml(BaseModel):
    __root__: List[_StringPatternS3ASSETMAPXml]


class VideoSelector(BaseModel):
    """
    Input video selectors contain the video settings for the input. Each of your inputs can have up to one video selector.
    """

    AlphaBehavior: Optional[AlphaBehavior] = None
    ColorSpace: Optional[ColorSpace] = None
    ColorSpaceUsage: Optional[ColorSpaceUsage] = None
    Hdr10Metadata: Optional[Hdr10Metadata] = None
    Pid: Optional[_IntegerMin1Max2147483647] = None
    ProgramNumber: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    Rotate: Optional[InputRotate] = None
    SampleRange: Optional[InputSampleRange] = None


class Input(BaseModel):
    """
    Use inputs to define the source files used in your transcoding job. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/specify-input-settings.html. You can use multiple video inputs to do input stitching. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/assembling-multiple-inputs-and-input-clips.html
    """

    AudioSelectorGroups: Optional[_MapOfAudioSelectorGroup] = None
    AudioSelectors: Optional[_MapOfAudioSelector] = None
    CaptionSelectors: Optional[_MapOfCaptionSelector] = None
    Crop: Optional[Rectangle] = None
    DeblockFilter: Optional[Ac3LfeFilter] = None
    DecryptionSettings: Optional[InputDecryptionSettings] = None
    DenoiseFilter: Optional[Ac3LfeFilter] = None
    FileInput: Optional[
        _StringPatternS3MM2PPMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8WWEEBBMMLLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMXXMMLLOOGGGGaAAATTMMOOSSHttpsMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8WWEEBBMMLLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMXXMMLLOOGGGGaAAATTMMOOSS
    ] = None
    FilterEnable: Optional[InputFilterEnable] = None
    FilterStrength: Optional[_IntegerMinNegative5Max5] = None
    ImageInserter: Optional[ImageInserter] = None
    InputClippings: Optional[_ListOfInputClipping] = None
    InputScanType: Optional[InputScanType] = None
    Position: Optional[Rectangle] = None
    ProgramNumber: Optional[_IntegerMin1Max2147483647] = None
    PsiControl: Optional[InputPsiControl] = None
    SupplementalImps: Optional[_ListOfStringPatternS3ASSETMAPXml] = None
    TimecodeSource: Optional[InputTimecodeSource] = None
    TimecodeStart: Optional[_StringMin11Max11Pattern01D20305D205D] = None
    VideoSelector: Optional[VideoSelector] = None


class InputTemplate(BaseModel):
    """
    Specified video input in a template.
    """

    AudioSelectorGroups: Optional[_MapOfAudioSelectorGroup] = None
    AudioSelectors: Optional[_MapOfAudioSelector] = None
    CaptionSelectors: Optional[_MapOfCaptionSelector] = None
    Crop: Optional[Rectangle] = None
    DeblockFilter: Optional[Ac3LfeFilter] = None
    DenoiseFilter: Optional[Ac3LfeFilter] = None
    FilterEnable: Optional[InputFilterEnable] = None
    FilterStrength: Optional[_IntegerMinNegative5Max5] = None
    ImageInserter: Optional[ImageInserter] = None
    InputClippings: Optional[_ListOfInputClipping] = None
    InputScanType: Optional[InputScanType] = None
    Position: Optional[Rectangle] = None
    ProgramNumber: Optional[_IntegerMin1Max2147483647] = None
    PsiControl: Optional[InputPsiControl] = None
    TimecodeSource: Optional[InputTimecodeSource] = None
    TimecodeStart: Optional[_StringMin11Max11Pattern01D20305D205D] = None
    VideoSelector: Optional[VideoSelector] = None


class JobMessages(BaseModel):
    """
    Provides messages from the service about jobs that you have already successfully submitted.
    """

    Info: Optional[_ListOfString] = None
    Warning: Optional[_ListOfString] = None


class _ListOfOutputGroupDetail(BaseModel):
    __root__: List[OutputGroupDetail]


class _ListOfQueueTransition(BaseModel):
    __root__: List[QueueTransition]


class MotionImageInsertionFramerate(BaseModel):
    """
    For motion overlays that don't have a built-in frame rate, specify the frame rate of the overlay in frames per second, as a fraction. For example, specify 24 fps as 24/1. The overlay frame rate doesn't need to match the frame rate of the underlying video.
    """

    FramerateDenominator: Optional[_IntegerMin1Max17895697] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483640] = None


class MsSmoothAdditionalManifest(CmafAdditionalManifest):
    """
    Specify the details for each additional Microsoft Smooth Streaming manifest that you want the service to generate for this output group. Each manifest can reference a different subset of outputs in the group.
    """

    pass


class _ListOfMsSmoothAdditionalManifest(BaseModel):
    __root__: List[MsSmoothAdditionalManifest]


class MxfXavcProfileSettings(BaseModel):
    """
    Specify the XAVC profile settings for MXF outputs when you set your MXF profile to XAVC.
    """

    DurationMode: Optional[MxfXavcDurationMode] = None
    MaxAncDataSize: Optional[_IntegerMin0Max2147483647] = None


class NoiseReducerFilterSettings(BaseModel):
    """
    Settings for a noise reducer filter
    """

    Strength: Optional[_IntegerMin0Max3] = None


class NoiseReducerSpatialFilterSettings(BaseModel):
    """
    Noise reducer filter settings for spatial filter.
    """

    PostFilterSharpenStrength: Optional[_IntegerMin0Max3] = None
    Speed: Optional[_IntegerMinNegative2Max3] = None
    Strength: Optional[_IntegerMin0Max16] = None


class NoiseReducerTemporalFilterSettings(BaseModel):
    """
    Noise reducer filter settings for temporal filter.
    """

    AggressiveMode: Optional[_IntegerMin0Max4] = None
    PostTemporalSharpening: Optional[NoiseFilterPostTemporalSharpening] = None
    Speed: Optional[_IntegerMinNegative1Max3] = None
    Strength: Optional[_IntegerMin0Max16] = None


class NoiseReducer(BaseModel):
    """
    Enable the Noise reducer (NoiseReducer) feature to remove noise from your video output if necessary. Enable or disable this feature for each output individually. This setting is disabled by default. When you enable Noise reducer (NoiseReducer), you must also select a value for Noise reducer filter (NoiseReducerFilter).
    """

    Filter: Optional[NoiseReducerFilter] = None
    FilterSettings: Optional[NoiseReducerFilterSettings] = None
    SpatialFilterSettings: Optional[NoiseReducerSpatialFilterSettings] = None
    TemporalFilterSettings: Optional[NoiseReducerTemporalFilterSettings] = None


class _ListOfIntegerMinNegative60Max6(BaseModel):
    __root__: List[_IntegerMinNegative60Max6]


class _ListOfDoubleMinNegative60Max6(BaseModel):
    __root__: List[_DoubleMinNegative60Max6]


class OutputChannelMapping(BaseModel):
    """
    OutputChannel mapping settings.
    """

    InputChannels: Optional[_ListOfIntegerMinNegative60Max6] = None
    InputChannelsFineTune: Optional[_ListOfDoubleMinNegative60Max6] = None


class ReservationPlan(BaseModel):
    """
    Details about the pricing plan for your reserved queue. Required for reserved queues and not applicable to on-demand queues.
    """

    Commitment: Optional[Commitment] = None
    ExpiresAt: Optional[_TimestampUnix] = None
    PurchasedAt: Optional[_TimestampUnix] = None
    RenewalType: Optional[RenewalType] = None
    ReservedSlots: Optional[_Integer] = None
    Status: Optional[ReservationPlanStatus] = None


class S3EncryptionSettings(BaseModel):
    """
    Settings for how your job outputs are encrypted as they are uploaded to Amazon S3.
    """

    EncryptionType: Optional[S3ServerSideEncryptionType] = None
    KmsEncryptionContext: Optional[_StringPatternAZaZ0902] = None
    KmsKeyArn: Optional[
        _StringPatternArnAwsUsGovCnKmsAZ26EastWestCentralNorthSouthEastWest1912D12KeyAFAF098AFAF094AFAF094AFAF094AFAF0912
    ] = None


class _ListOfStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12(BaseModel):
    __root__: List[_StringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12]


class _ListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12(BaseModel):
    __root__: List[_StringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12]


class _ListOfTeletextPageType(BaseModel):
    __root__: List[TeletextPageType]


class Vp8Settings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VP8.
    """

    Bitrate: Optional[_IntegerMin1000Max1152000000] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    HrdBufferSize: Optional[_IntegerMin0Max47185920] = None
    MaxBitrate: Optional[_IntegerMin1000Max1152000000] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[Vp8QualityTuningLevel] = None
    RateControlMode: Optional[Vp8RateControlMode] = None


class Vp9Settings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value VP9.
    """

    Bitrate: Optional[_IntegerMin1000Max480000000] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max2147483647] = None
    FramerateNumerator: Optional[_IntegerMin1Max2147483647] = None
    GopSize: Optional[_DoubleMin0] = None
    HrdBufferSize: Optional[_IntegerMin0Max47185920] = None
    MaxBitrate: Optional[_IntegerMin1000Max480000000] = None
    ParControl: Optional[Av1FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1Max2147483647] = None
    ParNumerator: Optional[_IntegerMin1Max2147483647] = None
    QualityTuningLevel: Optional[Vp8QualityTuningLevel] = None
    RateControlMode: Optional[Vp8RateControlMode] = None


class XavcSettings(BaseModel):
    """
    Required when you set (Codec) under (VideoDescription)>(CodecSettings) to the value XAVC.
    """

    AdaptiveQuantization: Optional[H264AdaptiveQuantization] = None
    EntropyEncoding: Optional[XavcEntropyEncoding] = None
    FramerateControl: Optional[Av1FramerateControl] = None
    FramerateConversionAlgorithm: Optional[Av1FramerateConversionAlgorithm] = None
    FramerateDenominator: Optional[_IntegerMin1Max1001] = None
    FramerateNumerator: Optional[_IntegerMin24Max60000] = None
    Profile: Optional[XavcProfile] = None
    SlowPal: Optional[AntiAlias] = None
    Softness: Optional[_IntegerMin0Max128] = None
    SpatialAdaptiveQuantization: Optional[AntiAlias] = None
    TemporalAdaptiveQuantization: Optional[AntiAlias] = None
    Xavc4kIntraCbgProfileSettings: Optional[Xavc4kIntraCbgProfileSettings] = None
    Xavc4kIntraVbrProfileSettings: Optional[Xavc4kIntraVbrProfileSettings] = None
    Xavc4kProfileSettings: Optional[Xavc4kProfileSettings] = None
    XavcHdIntraCbgProfileSettings: Optional[XavcHdIntraCbgProfileSettings] = None
    XavcHdProfileSettings: Optional[XavcHdProfileSettings] = None


class VideoCodecSettings(BaseModel):
    """
    Video codec settings, (CodecSettings) under (VideoDescription), contains the group of settings related to video encoding. The settings in this group vary depending on the value that you choose for Video codec (Codec). For each codec enum that you choose, define the corresponding settings object. The following lists the codec enum, settings object pairs. * AV1, Av1Settings * AVC_INTRA, AvcIntraSettings * FRAME_CAPTURE, FrameCaptureSettings * H_264, H264Settings * H_265, H265Settings * MPEG2, Mpeg2Settings * PRORES, ProresSettings * VC3, Vc3Settings * VP8, Vp8Settings * VP9, Vp9Settings * XAVC, XavcSettings
    """

    Av1Settings: Optional[Av1Settings] = None
    AvcIntraSettings: Optional[AvcIntraSettings] = None
    Codec: Optional[VideoCodec] = None
    FrameCaptureSettings: Optional[FrameCaptureSettings] = None
    H264Settings: Optional[H264Settings] = None
    H265Settings: Optional[H265Settings] = None
    Mpeg2Settings: Optional[Mpeg2Settings] = None
    ProresSettings: Optional[ProresSettings] = None
    Vc3Settings: Optional[Vc3Settings] = None
    Vp8Settings: Optional[Vp8Settings] = None
    Vp9Settings: Optional[Vp9Settings] = None
    XavcSettings: Optional[XavcSettings] = None


class VideoPreprocessor(BaseModel):
    """
    Find additional transcoding features under Preprocessors (VideoPreprocessors). Enable the features at each output individually. These features are disabled by default.
    """

    ColorCorrector: Optional[ColorCorrector] = None
    Deinterlacer: Optional[Deinterlacer] = None
    DolbyVision: Optional[DolbyVision] = None
    Hdr10Plus: Optional[Hdr10Plus] = None
    ImageInserter: Optional[ImageInserter] = None
    NoiseReducer: Optional[NoiseReducer] = None
    PartnerWatermarking: Optional[PartnerWatermarking] = None
    TimecodeBurnin: Optional[TimecodeBurnin] = None


class EsamSettings(BaseModel):
    """
    Settings for Event Signaling And Messaging (ESAM). If you don't do ad insertion, you can ignore these settings.
    """

    ManifestConfirmConditionNotification: Optional[
        EsamManifestConfirmConditionNotification
    ] = None
    ResponseSignalPreroll: Optional[_IntegerMin0Max30000] = None
    SignalProcessingNotification: Optional[EsamSignalProcessingNotification] = None


class _ListOfInput(BaseModel):
    __root__: List[Input]


class MotionImageInserter(BaseModel):
    """
    Overlay motion graphics on top of your video. The motion graphics that you specify here appear on all outputs in all output groups. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/motion-graphic-overlay.html.
    """

    Framerate: Optional[MotionImageInsertionFramerate] = None
    Input: Optional[_StringMin14PatternS3Mov09PngHttpsMov09Png] = None
    InsertionMode: Optional[MotionImageInsertionMode] = None
    Offset: Optional[MotionImageInsertionOffset] = None
    Playback: Optional[MotionImagePlayback] = None
    StartTime: Optional[_StringMin11Max11Pattern01D20305D205D] = None


class _ListOfInputTemplate(BaseModel):
    __root__: List[InputTemplate]


class VideoDescription(BaseModel):
    """
    Settings related to video encoding of your output. The specific video settings depend on the video codec that you choose. When you work directly in your JSON job specification, include one instance of Video description (VideoDescription) per output.
    """

    AfdSignaling: Optional[AfdSignaling] = None
    AntiAlias: Optional[AntiAlias] = None
    CodecSettings: Optional[VideoCodecSettings] = None
    ColorMetadata: Optional[ColorMetadata] = None
    Crop: Optional[Rectangle] = None
    DropFrameTimecode: Optional[AntiAlias] = None
    FixedAfd: Optional[_IntegerMin0Max15] = None
    Height: Optional[_IntegerMin32Max8192] = None
    Position: Optional[Rectangle] = None
    RespondToAfd: Optional[RespondToAfd] = None
    ScalingBehavior: Optional[ScalingBehavior] = None
    Sharpness: Optional[_IntegerMin0Max100] = None
    TimecodeInsertion: Optional[VideoTimecodeInsertion] = None
    VideoPreprocessors: Optional[VideoPreprocessor] = None
    Width: Optional[_IntegerMin32Max8192] = None


class DescribeEndpointsResponse(BaseModel):
    Endpoints: Optional[_ListOfEndpoint] = None
    NextToken: Optional[_String] = None


class TeletextDestinationSettings(BaseModel):
    """
    Settings related to teletext captions. Set up teletext captions in the same output as your video. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/teletext-output-captions.html. When you work directly in your JSON job specification, include this object and any required children when you set destinationType to TELETEXT.
    """

    PageNumber: Optional[_StringMin3Max3Pattern1809aFAF09aEAE] = None
    PageTypes: Optional[_ListOfTeletextPageType] = None


class CaptionSourceSettings(BaseModel):
    """
    If your input captions are SCC, TTML, STL, SMI, SRT, or IMSC in an xml file, specify the URI of the input captions source file. If your input captions are IMSC in an IMF package, use TrackSourceSettings instead of FileSoureSettings.
    """

    AncillarySourceSettings: Optional[AncillarySourceSettings] = None
    DvbSubSourceSettings: Optional[DvbSubSourceSettings] = None
    EmbeddedSourceSettings: Optional[EmbeddedSourceSettings] = None
    FileSourceSettings: Optional[FileSourceSettings] = None
    SourceType: Optional[CaptionSourceType] = None
    TeletextSourceSettings: Optional[TeletextSourceSettings] = None
    TrackSourceSettings: Optional[TrackSourceSettings] = None
    WebvttHlsSourceSettings: Optional[WebvttHlsSourceSettings] = None


class CaptionSelector(BaseModel):
    """
    Use captions selectors to specify the captions data from your input that you use in your outputs. You can use up to 20 captions selectors per input.
    """

    CustomLanguageCode: Optional[_StringMin3Max3PatternAZaZ3] = None
    LanguageCode: Optional[LanguageCode] = None
    SourceSettings: Optional[CaptionSourceSettings] = None


class _ListOfOutputChannelMapping(BaseModel):
    __root__: List[OutputChannelMapping]


class ChannelMapping(BaseModel):
    """
    Channel mapping (ChannelMapping) contains the group of fields that hold the remixing value for each channel, in dB. Specify remix values to indicate how much of the content from your input audio channel you want in your output audio channels. Each instance of the InputChannels or InputChannelsFineTune array specifies these values for one output channel. Use one instance of this array for each output channel. In the console, each array corresponds to a column in the graphical depiction of the mapping matrix. The rows of the graphical matrix correspond to input channels. Valid values are within the range from -60 (mute) through 6. A setting of 0 passes the input channel unchanged to the output channel (no attenuation or amplification). Use InputChannels or InputChannelsFineTune to specify your remix values. Don't use both.
    """

    OutputChannels: Optional[_ListOfOutputChannelMapping] = None


class SpekeKeyProviderCmaf(BaseModel):
    """
    If your output group type is CMAF, use these settings when doing DRM encryption with a SPEKE-compliant key provider. If your output group type is HLS, DASH, or Microsoft Smooth, use the SpekeKeyProvider settings instead.
    """

    CertificateArn: Optional[_StringPatternArnAwsUsGovAcm] = None
    DashSignaledSystemIds: Optional[
        _ListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12
    ] = None
    HlsSignaledSystemIds: Optional[
        _ListOfStringMin36Max36Pattern09aFAF809aFAF409aFAF409aFAF409aFAF12
    ] = None
    ResourceId: Optional[_StringPatternW] = None
    Url: Optional[_StringPatternHttps] = None


class CmafEncryptionSettings(BaseModel):
    """
    Settings for CMAF encryption
    """

    ConstantInitializationVector: Optional[_StringMin32Max32Pattern09aFAF32] = None
    EncryptionMethod: Optional[CmafEncryptionType] = None
    InitializationVectorInManifest: Optional[CmafInitializationVectorInManifest] = None
    SpekeKeyProvider: Optional[SpekeKeyProviderCmaf] = None
    StaticKeyProvider: Optional[StaticKeyProvider] = None
    Type: Optional[CmafKeyProviderType] = None


class MxfSettings(BaseModel):
    """
    These settings relate to your MXF output container.
    """

    AfdSignaling: Optional[MxfAfdSignaling] = None
    Profile: Optional[MxfProfile] = None
    XavcProfileSettings: Optional[MxfXavcProfileSettings] = None


class Queue(BaseModel):
    """
    You can use queues to manage the resources that are available to your AWS account for running multiple transcoding jobs at the same time. If you don't specify a queue, the service sends all jobs through the default queue. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/working-with-queues.html.
    """

    Arn: Optional[_String] = None
    CreatedAt: Optional[_TimestampUnix] = None
    Description: Optional[_String] = None
    LastUpdated: Optional[_TimestampUnix] = None
    Name: _String
    PricingPlan: Optional[PricingPlan] = None
    ProgressingJobsCount: Optional[_Integer] = None
    ReservationPlan: Optional[ReservationPlan] = None
    Status: Optional[QueueStatus] = None
    SubmittedJobsCount: Optional[_Integer] = None
    Type: Optional[Type] = None


class SpekeKeyProvider1(BaseModel):
    """
    If your output group type is HLS, DASH, or Microsoft Smooth, use these settings when doing DRM encryption with a SPEKE-compliant key provider.  If your output group type is CMAF, use the SpekeKeyProviderCmaf settings instead.
    """

    CertificateArn: Optional[_StringPatternArnAwsUsGovAcm] = None
    ResourceId: Optional[_String] = None
    SystemIds: Optional[_ListOfStringPattern09aFAF809aFAF409aFAF409aFAF409aFAF12] = None
    Url: Optional[_StringPatternHttps] = None


class DashIsoEncryptionSettings(BaseModel):
    """
    Specifies DRM settings for DASH outputs.
    """

    PlaybackDeviceCompatibility: Optional[DashIsoPlaybackDeviceCompatibility] = None
    SpekeKeyProvider: Optional[SpekeKeyProvider1] = None


class S3DestinationSettings(BaseModel):
    """
    Settings associated with S3 destination
    """

    AccessControl: Optional[S3DestinationAccessControl] = None
    Encryption: Optional[S3EncryptionSettings] = None


class HlsEncryptionSettings(BaseModel):
    """
    Settings for HLS encryption
    """

    ConstantInitializationVector: Optional[_StringMin32Max32Pattern09aFAF32] = None
    EncryptionMethod: Optional[HlsEncryptionType] = None
    InitializationVectorInManifest: Optional[CmafInitializationVectorInManifest] = None
    OfflineEncrypted: Optional[Ac3LfeFilter] = None
    SpekeKeyProvider: Optional[SpekeKeyProvider1] = None
    StaticKeyProvider: Optional[StaticKeyProvider] = None
    Type: Optional[CmafKeyProviderType] = None


class _ListOfQueue(BaseModel):
    __root__: List[Queue]


class MsSmoothEncryptionSettings(BaseModel):
    """
    If you are using DRM, set DRM System (MsSmoothEncryptionSettings) to specify the value SpekeKeyProvider.
    """

    SpekeKeyProvider: Optional[SpekeKeyProvider1] = None


class ContainerSettings(BaseModel):
    """
    Container specific settings.
    """

    CmfcSettings: Optional[CmfcSettings] = None
    Container: Optional[ContainerType] = None
    F4vSettings: Optional[F4vSettings] = None
    M2tsSettings: Optional[M2tsSettings] = None
    M3u8Settings: Optional[M3u8Settings] = None
    MovSettings: Optional[MovSettings] = None
    Mp4Settings: Optional[Mp4Settings] = None
    MpdSettings: Optional[MpdSettings] = None
    MxfSettings: Optional[MxfSettings] = None


class CreateQueueResponse(BaseModel):
    Queue: Optional[Queue] = None


class GetQueueResponse(CreateQueueResponse):
    pass


class ListQueuesResponse(BaseModel):
    NextToken: Optional[_String] = None
    Queues: Optional[_ListOfQueue] = None


class UpdateQueueResponse(CreateQueueResponse):
    pass


class RemixSettings(BaseModel):
    """
    Use Manual audio remixing (RemixSettings) to adjust audio levels for each audio channel in each output of your job. With audio remixing, you can output more or fewer audio channels than your input audio source provides.
    """

    ChannelMapping: Optional[ChannelMapping] = None
    ChannelsIn: Optional[_IntegerMin1Max64] = None
    ChannelsOut: Optional[_IntegerMin1Max64] = None


class AudioDescription(BaseModel):
    """
    Settings related to one audio tab on the MediaConvert console. In your job JSON, an instance of AudioDescription is equivalent to one audio tab in the console. Usually, one audio tab corresponds to one output audio track. Depending on how you set up your input audio selectors and whether you use audio selector groups, one audio tab can correspond to a group of output audio tracks.
    """

    AudioChannelTaggingSettings: Optional[AudioChannelTaggingSettings] = None
    AudioNormalizationSettings: Optional[AudioNormalizationSettings] = None
    AudioSourceName: Optional[_String] = None
    AudioType: Optional[_IntegerMin0Max255] = None
    AudioTypeControl: Optional[Ac3MetadataControl] = None
    CodecSettings: Optional[AudioCodecSettings] = None
    CustomLanguageCode: Optional[_StringPatternAZaZ23AZaZ] = None
    LanguageCode: Optional[LanguageCode] = None
    LanguageCodeControl: Optional[Ac3MetadataControl] = None
    RemixSettings: Optional[RemixSettings] = None
    StreamName: Optional[_StringPatternWS] = None


class AudioSelector(BaseModel):
    """
    Use Audio selectors (AudioSelectors) to specify a track or set of tracks from the input that you will use in your outputs. You can use multiple Audio selectors per input.
    """

    CustomLanguageCode: Optional[_StringMin3Max3PatternAZaZ3] = None
    DefaultSelection: Optional[AudioDefaultSelection] = None
    ExternalAudioFileInput: Optional[
        _StringPatternS3MM2PPWWEEBBMMMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8LLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMAAAACCAAIIFFFFMMPP2AACC3EECC3DDTTSSEEAATTMMOOSSHttpsMM2VVMMPPEEGGMMPP3AAVVIIMMPP4FFLLVVMMPPTTMMPPGGMM4VVTTRRPPFF4VVMM2TTSSTTSS264HH264MMKKVVMMKKAAMMOOVVMMTTSSMM2TTWWMMVVaAAASSFFVVOOBB3GGPP3GGPPPPMMXXFFDDIIVVXXXXVVIIDDRRAAWWDDVVGGXXFFMM1VV3GG2VVMMFFMM3UU8LLCCHHGGXXFFMMPPEEGG2MMXXFFMMPPEEGG2MMXXFFHHDDWWAAVVYY4MMAAAACCAAIIFFFFMMPP2AACC3EECC3DDTTSSEEAATTMMOOSS
    ] = None
    HlsRenditionGroupSettings: Optional[HlsRenditionGroupSettings] = None
    LanguageCode: Optional[LanguageCode] = None
    Offset: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    Pids: Optional[_ListOfIntegerMin1Max2147483647] = None
    ProgramSelection: Optional[_IntegerMin0Max8] = None
    RemixSettings: Optional[RemixSettings] = None
    SelectorType: Optional[AudioSelectorType] = None
    Tracks: Optional[_ListOfIntegerMin1Max2147483647] = None


class CaptionDestinationSettings(BaseModel):
    """
    Settings related to one captions tab on the MediaConvert console. In your job JSON, an instance of captions DestinationSettings is equivalent to one captions tab in the console. Usually, one captions tab corresponds to one output captions track. Depending on your output captions format, one tab might correspond to a set of output captions tracks. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/including-captions.html.
    """

    BurninDestinationSettings: Optional[BurninDestinationSettings] = None
    DestinationType: Optional[CaptionDestinationType] = None
    DvbSubDestinationSettings: Optional[DvbSubDestinationSettings] = None
    EmbeddedDestinationSettings: Optional[EmbeddedDestinationSettings] = None
    ImscDestinationSettings: Optional[ImscDestinationSettings] = None
    SccDestinationSettings: Optional[SccDestinationSettings] = None
    SrtDestinationSettings: Optional[SrtDestinationSettings] = None
    TeletextDestinationSettings: Optional[TeletextDestinationSettings] = None
    TtmlDestinationSettings: Optional[TtmlDestinationSettings] = None
    WebvttDestinationSettings: Optional[WebvttDestinationSettings] = None


class CaptionDescription(BaseModel):
    """
    This object holds groups of settings related to captions for one output. For each output that has captions, include one instance of CaptionDescriptions.
    """

    CaptionSelectorName: Optional[_StringMin1] = None
    CustomLanguageCode: Optional[_StringPatternAZaZ23AZaZ] = None
    DestinationSettings: Optional[CaptionDestinationSettings] = None
    LanguageCode: Optional[LanguageCode] = None
    LanguageDescription: Optional[_String] = None


class CaptionDescriptionPreset(BaseModel):
    """
    Caption Description for preset
    """

    CustomLanguageCode: Optional[_StringPatternAZaZ23AZaZ] = None
    DestinationSettings: Optional[CaptionDestinationSettings] = None
    LanguageCode: Optional[LanguageCode] = None
    LanguageDescription: Optional[_String] = None


class DestinationSettings2(BaseModel):
    """
    Settings associated with the destination. Will vary based on the type of destination
    """

    S3Settings: Optional[S3DestinationSettings] = None


class CmafGroupSettings(BaseModel):
    """
    Settings related to your CMAF output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to CMAF_GROUP_SETTINGS.
    """

    AdditionalManifests: Optional[_ListOfCmafAdditionalManifest] = None
    BaseUrl: Optional[_String] = None
    ClientCache: Optional[AntiAlias] = None
    CodecSpecification: Optional[CmafCodecSpecification] = None
    Destination: Optional[_StringPatternS3] = None
    DestinationSettings: Optional[DestinationSettings2] = None
    Encryption: Optional[CmafEncryptionSettings] = None
    FragmentLength: Optional[_IntegerMin1Max2147483647] = None
    ImageBasedTrickPlay: Optional[CmafImageBasedTrickPlay] = None
    ManifestCompression: Optional[CmafManifestCompression] = None
    ManifestDurationFormat: Optional[CmafManifestDurationFormat] = None
    MinBufferTime: Optional[_IntegerMin0Max2147483647] = None
    MinFinalSegmentLength: Optional[_DoubleMin0Max2147483647] = None
    MpdProfile: Optional[CmafMpdProfile] = None
    PtsOffsetHandlingForBFrames: Optional[CmafPtsOffsetHandlingForBFrames] = None
    SegmentControl: Optional[CmafSegmentControl] = None
    SegmentLength: Optional[_IntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[CmafSegmentLengthControl] = None
    StreamInfResolution: Optional[CmafInitializationVectorInManifest] = None
    TargetDurationCompatibilityMode: Optional[
        CmafTargetDurationCompatibilityMode
    ] = None
    WriteDashManifest: Optional[AntiAlias] = None
    WriteHlsManifest: Optional[AntiAlias] = None
    WriteSegmentTimelineInRepresentation: Optional[Ac3LfeFilter] = None


class DashIsoGroupSettings(BaseModel):
    """
    Settings related to your DASH output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to DASH_ISO_GROUP_SETTINGS.
    """

    AdditionalManifests: Optional[_ListOfDashAdditionalManifest] = None
    AudioChannelConfigSchemeIdUri: Optional[
        DashIsoGroupAudioChannelConfigSchemeIdUri
    ] = None
    BaseUrl: Optional[_String] = None
    Destination: Optional[_StringPatternS3] = None
    DestinationSettings: Optional[DestinationSettings2] = None
    Encryption: Optional[DashIsoEncryptionSettings] = None
    FragmentLength: Optional[_IntegerMin1Max2147483647] = None
    HbbtvCompliance: Optional[DashIsoHbbtvCompliance] = None
    ImageBasedTrickPlay: Optional[CmafImageBasedTrickPlay] = None
    MinBufferTime: Optional[_IntegerMin0Max2147483647] = None
    MinFinalSegmentLength: Optional[_DoubleMin0Max2147483647] = None
    MpdProfile: Optional[CmafMpdProfile] = None
    PtsOffsetHandlingForBFrames: Optional[CmafPtsOffsetHandlingForBFrames] = None
    SegmentControl: Optional[CmafSegmentControl] = None
    SegmentLength: Optional[_IntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[CmafSegmentLengthControl] = None
    WriteSegmentTimelineInRepresentation: Optional[Ac3LfeFilter] = None


class FileGroupSettings(BaseModel):
    """
    Settings related to your File output group. MediaConvert uses this group of settings to generate a single standalone file, rather than a streaming package. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to FILE_GROUP_SETTINGS.
    """

    Destination: Optional[_StringPatternS3] = None
    DestinationSettings: Optional[DestinationSettings2] = None


class HlsGroupSettings(BaseModel):
    """
    Settings related to your HLS output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to HLS_GROUP_SETTINGS.
    """

    AdMarkers: Optional[_ListOfHlsAdMarkers] = None
    AdditionalManifests: Optional[_ListOfHlsAdditionalManifest] = None
    AudioOnlyHeader: Optional[CmafInitializationVectorInManifest] = None
    BaseUrl: Optional[_String] = None
    CaptionLanguageMappings: Optional[_ListOfHlsCaptionLanguageMapping] = None
    CaptionLanguageSetting: Optional[HlsCaptionLanguageSetting] = None
    ClientCache: Optional[AntiAlias] = None
    CodecSpecification: Optional[CmafCodecSpecification] = None
    Destination: Optional[_StringPatternS3] = None
    DestinationSettings: Optional[DestinationSettings2] = None
    DirectoryStructure: Optional[HlsDirectoryStructure] = None
    Encryption: Optional[HlsEncryptionSettings] = None
    ImageBasedTrickPlay: Optional[CmafImageBasedTrickPlay] = None
    ManifestCompression: Optional[CmafManifestCompression] = None
    ManifestDurationFormat: Optional[CmafManifestDurationFormat] = None
    MinFinalSegmentLength: Optional[_DoubleMin0Max2147483647] = None
    MinSegmentLength: Optional[_IntegerMin0Max2147483647] = None
    OutputSelection: Optional[HlsOutputSelection] = None
    ProgramDateTime: Optional[CmafInitializationVectorInManifest] = None
    ProgramDateTimePeriod: Optional[_IntegerMin0Max3600] = None
    SegmentControl: Optional[CmafSegmentControl] = None
    SegmentLength: Optional[_IntegerMin1Max2147483647] = None
    SegmentLengthControl: Optional[CmafSegmentLengthControl] = None
    SegmentsPerSubdirectory: Optional[_IntegerMin1Max2147483647] = None
    StreamInfResolution: Optional[CmafInitializationVectorInManifest] = None
    TargetDurationCompatibilityMode: Optional[
        CmafTargetDurationCompatibilityMode
    ] = None
    TimedMetadataId3Frame: Optional[HlsTimedMetadataId3Frame] = None
    TimedMetadataId3Period: Optional[_IntegerMinNegative2147483648Max2147483647] = None
    TimestampDeltaMilliseconds: Optional[
        _IntegerMinNegative2147483648Max2147483647
    ] = None


class MsSmoothGroupSettings(BaseModel):
    """
    Settings related to your Microsoft Smooth Streaming output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to MS_SMOOTH_GROUP_SETTINGS.
    """

    AdditionalManifests: Optional[_ListOfMsSmoothAdditionalManifest] = None
    AudioDeduplication: Optional[MsSmoothAudioDeduplication] = None
    Destination: Optional[_StringPatternS3] = None
    DestinationSettings: Optional[DestinationSettings2] = None
    Encryption: Optional[MsSmoothEncryptionSettings] = None
    FragmentLength: Optional[_IntegerMin1Max2147483647] = None
    FragmentLengthControl: Optional[CmafSegmentLengthControl] = None
    ManifestEncoding: Optional[MsSmoothManifestEncoding] = None


class _ListOfCaptionDescription(BaseModel):
    __root__: List[CaptionDescription]


class OutputGroupSettings(BaseModel):
    """
    Output Group settings, including type
    """

    CmafGroupSettings: Optional[CmafGroupSettings] = None
    DashIsoGroupSettings: Optional[DashIsoGroupSettings] = None
    FileGroupSettings: Optional[FileGroupSettings] = None
    HlsGroupSettings: Optional[HlsGroupSettings] = None
    MsSmoothGroupSettings: Optional[MsSmoothGroupSettings] = None
    Type: Optional[OutputGroupType] = None


class _ListOfAudioDescription(BaseModel):
    __root__: List[AudioDescription]


class _ListOfCaptionDescriptionPreset(BaseModel):
    __root__: List[CaptionDescriptionPreset]


class PresetSettings(BaseModel):
    """
    Settings for preset
    """

    AudioDescriptions: Optional[_ListOfAudioDescription] = None
    CaptionDescriptions: Optional[_ListOfCaptionDescriptionPreset] = None
    ContainerSettings: Optional[ContainerSettings] = None
    VideoDescription: Optional[VideoDescription] = None


class CreatePresetRequest(BaseModel):
    Category: Optional[_String] = None
    Description: Optional[_String] = None
    Name: _String
    Settings: PresetSettings
    Tags: Optional[_MapOfString] = None


class Preset(BaseModel):
    """
    A preset is a collection of preconfigured media conversion settings that you want MediaConvert to apply to the output during the conversion process.
    """

    Arn: Optional[_String] = None
    Category: Optional[_String] = None
    CreatedAt: Optional[_TimestampUnix] = None
    Description: Optional[_String] = None
    LastUpdated: Optional[_TimestampUnix] = None
    Name: _String
    Settings: PresetSettings
    Type: Optional[Type] = None


class _ListOfPreset(BaseModel):
    __root__: List[Preset]


class Output(BaseModel):
    """
    Each output in your job is a collection of settings that describes how you want MediaConvert to encode a single output file or stream. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/create-outputs.html.
    """

    AudioDescriptions: Optional[_ListOfAudioDescription] = None
    CaptionDescriptions: Optional[_ListOfCaptionDescription] = None
    ContainerSettings: Optional[ContainerSettings] = None
    Extension: Optional[_String] = None
    NameModifier: Optional[_StringMin1] = None
    OutputSettings: Optional[OutputSettings] = None
    Preset: Optional[_StringMin0] = None
    VideoDescription: Optional[VideoDescription] = None


class _ListOfOutput(BaseModel):
    __root__: List[Output]


class OutputGroup(BaseModel):
    """
    Group of outputs
    """

    AutomatedEncodingSettings: Optional[AutomatedEncodingSettings] = None
    CustomName: Optional[_String] = None
    Name: Optional[_String] = None
    OutputGroupSettings: Optional[OutputGroupSettings] = None
    Outputs: Optional[_ListOfOutput] = None


class UpdatePresetRequest(BaseModel):
    Category: Optional[_String] = None
    Description: Optional[_String] = None
    Settings: Optional[PresetSettings] = None


class _ListOfOutputGroup(BaseModel):
    __root__: List[OutputGroup]


class CreatePresetResponse(BaseModel):
    Preset: Optional[Preset] = None


class GetPresetResponse(CreatePresetResponse):
    pass


class ListPresetsResponse(BaseModel):
    NextToken: Optional[_String] = None
    Presets: Optional[_ListOfPreset] = None


class UpdatePresetResponse(CreatePresetResponse):
    pass


class JobSettings(BaseModel):
    """
    JobSettings contains all the transcode settings for a job.
    """

    AdAvailOffset: Optional[_IntegerMinNegative1000Max1000] = None
    AvailBlanking: Optional[AvailBlanking] = None
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices: Optional[ExtendedDataServices] = None
    Inputs: Optional[_ListOfInput] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter: Optional[MotionImageInserter] = None
    NielsenConfiguration: Optional[NielsenConfiguration] = None
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[_ListOfOutputGroup] = None
    TimecodeConfig: Optional[TimecodeConfig] = None
    TimedMetadataInsertion: Optional[TimedMetadataInsertion] = None


class CreateJobRequest(BaseModel):
    AccelerationSettings: Optional[AccelerationSettings] = None
    BillingTagsSource: Optional[BillingTagsSource] = None
    ClientRequestToken: Optional[_String] = None
    HopDestinations: Optional[_ListOfHopDestination] = None
    JobTemplate: Optional[_String] = None
    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    Role: _String
    Settings: JobSettings
    SimulateReservedQueue: Optional[AntiAlias] = None
    StatusUpdateInterval: Optional[StatusUpdateInterval] = None
    Tags: Optional[_MapOfString] = None
    UserMetadata: Optional[_MapOfString] = None


class Job(BaseModel):
    """
    Each job converts an input file into an output file or files. For more information, see the User Guide at https://docs.aws.amazon.com/mediaconvert/latest/ug/what-is.html
    """

    AccelerationSettings: Optional[AccelerationSettings] = None
    AccelerationStatus: Optional[AccelerationStatus] = None
    Arn: Optional[_String] = None
    BillingTagsSource: Optional[BillingTagsSource] = None
    CreatedAt: Optional[_TimestampUnix] = None
    CurrentPhase: Optional[JobPhase] = None
    ErrorCode: Optional[_Integer] = None
    ErrorMessage: Optional[_String] = None
    HopDestinations: Optional[_ListOfHopDestination] = None
    Id: Optional[_String] = None
    JobPercentComplete: Optional[_Integer] = None
    JobTemplate: Optional[_String] = None
    Messages: Optional[JobMessages] = None
    OutputGroupDetails: Optional[_ListOfOutputGroupDetail] = None
    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    QueueTransitions: Optional[_ListOfQueueTransition] = None
    RetryCount: Optional[_Integer] = None
    Role: _String
    Settings: JobSettings
    SimulateReservedQueue: Optional[AntiAlias] = None
    Status: Optional[JobStatus] = None
    StatusUpdateInterval: Optional[StatusUpdateInterval] = None
    Timing: Optional[Timing] = None
    UserMetadata: Optional[_MapOfString] = None


class JobTemplateSettings(BaseModel):
    """
    JobTemplateSettings contains all the transcode settings saved in the template that will be applied to jobs created from it.
    """

    AdAvailOffset: Optional[_IntegerMinNegative1000Max1000] = None
    AvailBlanking: Optional[AvailBlanking] = None
    Esam: Optional[EsamSettings] = None
    ExtendedDataServices: Optional[ExtendedDataServices] = None
    Inputs: Optional[_ListOfInputTemplate] = None
    KantarWatermark: Optional[KantarWatermarkSettings] = None
    MotionImageInserter: Optional[MotionImageInserter] = None
    NielsenConfiguration: Optional[NielsenConfiguration] = None
    NielsenNonLinearWatermark: Optional[NielsenNonLinearWatermarkSettings] = None
    OutputGroups: Optional[_ListOfOutputGroup] = None
    TimecodeConfig: Optional[TimecodeConfig] = None
    TimedMetadataInsertion: Optional[TimedMetadataInsertion] = None


class CreateJobTemplateRequest(BaseModel):
    AccelerationSettings: Optional[AccelerationSettings] = None
    Category: Optional[_String] = None
    Description: Optional[_String] = None
    HopDestinations: Optional[_ListOfHopDestination] = None
    Name: _String
    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    Settings: JobTemplateSettings
    StatusUpdateInterval: Optional[StatusUpdateInterval] = None
    Tags: Optional[_MapOfString] = None


class JobTemplate(BaseModel):
    """
    A job template is a pre-made set of encoding instructions that you can use to quickly create a job.
    """

    AccelerationSettings: Optional[AccelerationSettings] = None
    Arn: Optional[_String] = None
    Category: Optional[_String] = None
    CreatedAt: Optional[_TimestampUnix] = None
    Description: Optional[_String] = None
    HopDestinations: Optional[_ListOfHopDestination] = None
    LastUpdated: Optional[_TimestampUnix] = None
    Name: _String
    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    Settings: JobTemplateSettings
    StatusUpdateInterval: Optional[StatusUpdateInterval] = None
    Type: Optional[Type] = None


class _ListOfJobTemplate(BaseModel):
    __root__: List[JobTemplate]


class _ListOfJob(BaseModel):
    __root__: List[Job]


class UpdateJobTemplateRequest(BaseModel):
    AccelerationSettings: Optional[AccelerationSettings] = None
    Category: Optional[_String] = None
    Description: Optional[_String] = None
    HopDestinations: Optional[_ListOfHopDestination] = None
    Priority: Optional[_IntegerMinNegative50Max50] = None
    Queue: Optional[_String] = None
    Settings: Optional[JobTemplateSettings] = None
    StatusUpdateInterval: Optional[StatusUpdateInterval] = None


class CreateJobResponse(BaseModel):
    Job: Optional[Job] = None


class CreateJobTemplateResponse(BaseModel):
    JobTemplate: Optional[JobTemplate] = None


class GetJobResponse(CreateJobResponse):
    pass


class GetJobTemplateResponse(CreateJobTemplateResponse):
    pass


class ListJobTemplatesResponse(BaseModel):
    JobTemplates: Optional[_ListOfJobTemplate] = None
    NextToken: Optional[_String] = None


class ListJobsResponse(BaseModel):
    Jobs: Optional[_ListOfJob] = None
    NextToken: Optional[_String] = None


class UpdateJobTemplateResponse(CreateJobTemplateResponse):
    pass

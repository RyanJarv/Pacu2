# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:57:50+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class TagValue(BaseModel):
    __root__: str


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ValidationException(ResourceNotFoundException):
    pass


class InternalServerException(ResourceNotFoundException):
    pass


class ServiceQuotaExceededException(ResourceNotFoundException):
    pass


class DeleteQueuedSavingsPlanResponse(BaseModel):
    pass


class SavingsPlanArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='arn:aws:[a-z]+:([a-z]{2}-[a-z]+-\\d{1}|):(\\d{12}):savingsplan\\/([0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})$'
        ),
    ]


class SavingsPlanId(TagValue):
    pass


class SavingsPlanState(Enum):
    payment_pending = 'payment-pending'
    payment_failed = 'payment-failed'
    active = 'active'
    retired = 'retired'
    queued = 'queued'
    queued_deleted = 'queued-deleted'


class UUID(BaseModel):
    __root__: Annotated[str, Field(regex='[a-f0-9]+(-[a-f0-9]+)*')]


class SavingsPlanPaymentOption(Enum):
    All_Upfront = 'All Upfront'
    Partial_Upfront = 'Partial Upfront'
    No_Upfront = 'No Upfront'


class SavingsPlanType(Enum):
    Compute = 'Compute'
    EC2Instance = 'EC2Instance'
    SageMaker = 'SageMaker'


class SavingsPlanProductType(Enum):
    EC2 = 'EC2'
    Fargate = 'Fargate'
    Lambda = 'Lambda'
    SageMaker = 'SageMaker'


class SavingsPlanRateServiceCode(Enum):
    AmazonEC2 = 'AmazonEC2'
    AmazonECS = 'AmazonECS'
    AmazonEKS = 'AmazonEKS'
    AWSLambda = 'AWSLambda'
    AmazonSageMaker = 'AmazonSageMaker'


class SavingsPlanRateUsageType(BaseModel):
    __root__: Annotated[str, Field(max_length=255, regex='^[a-zA-Z0-9_ \\/.:-]+$')]


class SavingsPlanRateOperation(BaseModel):
    __root__: Annotated[str, Field(max_length=255, regex='^[a-zA-Z0-9_ \\/.:-]*$')]


class SavingsPlansDuration(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class CurrencyCode(Enum):
    CNY = 'CNY'
    USD = 'USD'


class SavingsPlanDescription(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_\\- ]+$')]


class SavingsPlanServiceCode(BaseModel):
    __root__: Annotated[str, Field(max_length=255, regex='^[a-zA-Z]+$')]


class SavingsPlanUsageType(SavingsPlanRateUsageType):
    pass


class SavingsPlanOperation(SavingsPlanRateOperation):
    pass


class TagResourceResponse(DeleteQueuedSavingsPlanResponse):
    pass


class UntagResourceResponse(DeleteQueuedSavingsPlanResponse):
    pass


class TagKey(TagValue):
    pass


class Amount(TagValue):
    pass


class ClientToken(TagValue):
    pass


class SavingsPlanOfferingId(TagValue):
    pass


class DateTime(BaseModel):
    __root__: datetime


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateSavingsPlanRequest(BaseModel):
    savingsPlanOfferingId: SavingsPlanOfferingId
    commitment: Amount
    upfrontPaymentAmount: Optional[Amount] = None
    purchaseTime: Optional[DateTime] = None
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class CurrencyList(BaseModel):
    __root__: List[CurrencyCode]


class DeleteQueuedSavingsPlanRequest(BaseModel):
    savingsPlanId: SavingsPlanId


class PaginationToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='^[A-Za-z0-9/=\\+]+$')]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class UUIDs(BaseModel):
    __root__: List[UUID]


class SavingsPlanPaymentOptionList(BaseModel):
    __root__: List[SavingsPlanPaymentOption]


class SavingsPlanTypeList(BaseModel):
    __root__: List[SavingsPlanType]


class SavingsPlanProductTypeList(BaseModel):
    __root__: List[SavingsPlanProductType]


class SavingsPlanRateServiceCodeList(BaseModel):
    __root__: List[SavingsPlanRateServiceCode]


class SavingsPlanRateUsageTypeList(BaseModel):
    __root__: List[SavingsPlanRateUsageType]


class SavingsPlanRateOperationList(BaseModel):
    __root__: List[SavingsPlanRateOperation]


class PageSize(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000.0)]


class DurationsList(BaseModel):
    __root__: List[SavingsPlansDuration]


class SavingsPlanDescriptionsList(BaseModel):
    __root__: List[SavingsPlanDescription]


class SavingsPlanServiceCodeList(BaseModel):
    __root__: List[SavingsPlanServiceCode]


class SavingsPlanUsageTypeList(BaseModel):
    __root__: List[SavingsPlanUsageType]


class SavingsPlanOperationList(BaseModel):
    __root__: List[SavingsPlanOperation]


class SavingsPlanArnList(BaseModel):
    __root__: Annotated[List[SavingsPlanArn], Field(max_items=100)]


class SavingsPlanIdList(BaseModel):
    __root__: List[SavingsPlanId]


class SavingsPlanStateList(BaseModel):
    __root__: List[SavingsPlanState]


class EC2InstanceFamily(TagValue):
    pass


class JsonSafeFilterValueString(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_ \\/.\\:\\-\\(\\)]+$')]


class FilterValuesList(BaseModel):
    __root__: List[JsonSafeFilterValueString]


class String(TagValue):
    pass


class ListOfStrings(BaseModel):
    __root__: List[String]


class ListTagsForResourceRequest(BaseModel):
    resourceArn: SavingsPlanArn


class ParentSavingsPlanOffering(BaseModel):
    """
    Information about a Savings Plan offering.
    """

    offeringId: Optional[UUID] = None
    paymentOption: Optional[SavingsPlanPaymentOption] = None
    planType: Optional[SavingsPlanType] = None
    durationSeconds: Optional[SavingsPlansDuration] = None
    currency: Optional[CurrencyCode] = None
    planDescription: Optional[SavingsPlanDescription] = None


class Region(TagValue):
    pass


class TermDurationInSeconds(BaseModel):
    __root__: int


class SavingsPlan(BaseModel):
    """
    Information about a Savings Plan.
    """

    offeringId: Optional[SavingsPlanOfferingId] = None
    savingsPlanId: Optional[SavingsPlanId] = None
    savingsPlanArn: Optional[SavingsPlanArn] = None
    description: Optional[String] = None
    start: Optional[String] = None
    end: Optional[String] = None
    state: Optional[SavingsPlanState] = None
    region: Optional[Region] = None
    ec2InstanceFamily: Optional[EC2InstanceFamily] = None
    savingsPlanType: Optional[SavingsPlanType] = None
    paymentOption: Optional[SavingsPlanPaymentOption] = None
    productTypes: Optional[SavingsPlanProductTypeList] = None
    currency: Optional[CurrencyCode] = None
    commitment: Optional[Amount] = None
    upfrontPaymentAmount: Optional[Amount] = None
    recurringPaymentAmount: Optional[Amount] = None
    termDurationInSeconds: Optional[TermDurationInSeconds] = None
    tags: Optional[TagMap] = None


class SavingsPlansFilterName(Enum):
    region = 'region'
    ec2_instance_family = 'ec2-instance-family'
    commitment = 'commitment'
    upfront = 'upfront'
    term = 'term'
    savings_plan_type = 'savings-plan-type'
    payment_option = 'payment-option'
    start = 'start'
    end = 'end'


class SavingsPlanOffering(BaseModel):
    """
    Information about a Savings Plan offering.
    """

    offeringId: Optional[UUID] = None
    productTypes: Optional[SavingsPlanProductTypeList] = None
    planType: Optional[SavingsPlanType] = None
    description: Optional[SavingsPlanDescription] = None
    paymentOption: Optional[SavingsPlanPaymentOption] = None
    durationSeconds: Optional[SavingsPlansDuration] = None
    currency: Optional[CurrencyCode] = None
    serviceCode: Optional[SavingsPlanServiceCode] = None
    usageType: Optional[SavingsPlanUsageType] = None
    operation: Optional[SavingsPlanOperation] = None
    properties: Annotated[Optional[Any], Field(description='The properties.')] = None


class SavingsPlanOfferingFilterAttribute(Enum):
    region = 'region'
    instanceFamily = 'instanceFamily'


class SavingsPlanOfferingProperty(BaseModel):
    """
    Information about a property.
    """

    name: Optional[SavingsPlanOfferingFilterAttribute] = None
    value: Optional[JsonSafeFilterValueString] = None


class SavingsPlanOfferingPropertyList(BaseModel):
    __root__: List[SavingsPlanOfferingProperty]


class SavingsPlanRatePricePerUnit(TagValue):
    pass


class SavingsPlanRateUnit(Enum):
    Hrs = 'Hrs'
    Lambda_GB_Second = 'Lambda-GB-Second'
    Request = 'Request'


class SavingsPlanOfferingRate(BaseModel):
    """
    Information about a Savings Plan offering rate.
    """

    savingsPlanOffering: Optional[ParentSavingsPlanOffering] = None
    rate: Optional[SavingsPlanRatePricePerUnit] = None
    unit: Optional[SavingsPlanRateUnit] = None
    productType: Optional[SavingsPlanProductType] = None
    serviceCode: Optional[SavingsPlanRateServiceCode] = None
    usageType: Optional[SavingsPlanRateUsageType] = None
    operation: Optional[SavingsPlanRateOperation] = None
    properties: Annotated[Optional[Any], Field(description='The properties.')] = None


class SavingsPlanRateFilterAttribute(Enum):
    region = 'region'
    instanceFamily = 'instanceFamily'
    instanceType = 'instanceType'
    productDescription = 'productDescription'
    tenancy = 'tenancy'
    productId = 'productId'


class SavingsPlanOfferingRateProperty(BaseModel):
    """
    Information about a property.
    """

    name: Optional[JsonSafeFilterValueString] = None
    value: Optional[JsonSafeFilterValueString] = None


class SavingsPlanOfferingRatePropertyList(BaseModel):
    __root__: List[SavingsPlanOfferingRateProperty]


class SavingsPlanRate(BaseModel):
    """
    Information about a Savings Plan rate.
    """

    rate: Optional[Amount] = None
    currency: Optional[CurrencyCode] = None
    unit: Optional[SavingsPlanRateUnit] = None
    productType: Optional[SavingsPlanProductType] = None
    serviceCode: Optional[SavingsPlanRateServiceCode] = None
    usageType: Optional[SavingsPlanRateUsageType] = None
    operation: Optional[SavingsPlanRateOperation] = None
    properties: Annotated[Optional[Any], Field(description='The properties.')] = None


class SavingsPlanRateFilterName(Enum):
    region = 'region'
    instanceType = 'instanceType'
    productDescription = 'productDescription'
    tenancy = 'tenancy'
    productType = 'productType'
    serviceCode = 'serviceCode'
    usageType = 'usageType'
    operation = 'operation'


class SavingsPlanRatePropertyKey(Enum):
    region = 'region'
    instanceType = 'instanceType'
    instanceFamily = 'instanceFamily'
    productDescription = 'productDescription'
    tenancy = 'tenancy'


class SavingsPlanRateProperty(BaseModel):
    """
    Information about a property.
    """

    name: Optional[SavingsPlanRatePropertyKey] = None
    value: Optional[JsonSafeFilterValueString] = None


class SavingsPlanRatePropertyList(BaseModel):
    __root__: List[SavingsPlanRateProperty]


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class TagResourceRequest(BaseModel):
    resourceArn: SavingsPlanArn
    tags: TagMap


class UntagResourceRequest(BaseModel):
    resourceArn: SavingsPlanArn
    tagKeys: TagKeyList


class CreateSavingsPlanResponse(BaseModel):
    savingsPlanId: Optional[SavingsPlanId] = None


class SavingsPlanRateFilter(BaseModel):
    """
    Information about a filter.
    """

    name: Optional[SavingsPlanRateFilterName] = None
    values: Optional[ListOfStrings] = None


class SavingsPlanFilter(BaseModel):
    """
    Information about a filter.
    """

    name: Optional[SavingsPlansFilterName] = None
    values: Optional[ListOfStrings] = None


class SavingsPlanOfferingRateFilterElement(BaseModel):
    """
    Information about a filter.
    """

    name: Optional[SavingsPlanRateFilterAttribute] = None
    values: Optional[FilterValuesList] = None


class SavingsPlanOfferingFilterElement(BaseModel):
    """
    Information about a filter.
    """

    name: Optional[SavingsPlanOfferingFilterAttribute] = None
    values: Optional[FilterValuesList] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class SavingsPlanRateFilterList(BaseModel):
    __root__: List[SavingsPlanRateFilter]


class DescribeSavingsPlanRatesRequest(BaseModel):
    savingsPlanId: SavingsPlanId
    filters: Optional[SavingsPlanRateFilterList] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None


class SavingsPlanRateList(BaseModel):
    __root__: List[SavingsPlanRate]


class SavingsPlanOfferingRateFiltersList(BaseModel):
    __root__: List[SavingsPlanOfferingRateFilterElement]


class DescribeSavingsPlansOfferingRatesRequest(BaseModel):
    savingsPlanOfferingIds: Optional[UUIDs] = None
    savingsPlanPaymentOptions: Optional[SavingsPlanPaymentOptionList] = None
    savingsPlanTypes: Optional[SavingsPlanTypeList] = None
    products: Optional[SavingsPlanProductTypeList] = None
    serviceCodes: Optional[SavingsPlanRateServiceCodeList] = None
    usageTypes: Optional[SavingsPlanRateUsageTypeList] = None
    operations: Optional[SavingsPlanRateOperationList] = None
    filters: Optional[SavingsPlanOfferingRateFiltersList] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[PageSize] = None


class SavingsPlanOfferingRatesList(BaseModel):
    __root__: List[SavingsPlanOfferingRate]


class SavingsPlanOfferingFiltersList(BaseModel):
    __root__: List[SavingsPlanOfferingFilterElement]


class DescribeSavingsPlansOfferingsRequest(BaseModel):
    offeringIds: Optional[UUIDs] = None
    paymentOptions: Optional[SavingsPlanPaymentOptionList] = None
    productType: Optional[SavingsPlanProductType] = None
    planTypes: Optional[SavingsPlanTypeList] = None
    durations: Optional[DurationsList] = None
    currencies: Optional[CurrencyList] = None
    descriptions: Optional[SavingsPlanDescriptionsList] = None
    serviceCodes: Optional[SavingsPlanServiceCodeList] = None
    usageTypes: Optional[SavingsPlanUsageTypeList] = None
    operations: Optional[SavingsPlanOperationList] = None
    filters: Optional[SavingsPlanOfferingFiltersList] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[PageSize] = None


class SavingsPlanOfferingsList(BaseModel):
    __root__: List[SavingsPlanOffering]


class SavingsPlanFilterList(BaseModel):
    __root__: List[SavingsPlanFilter]


class DescribeSavingsPlansRequest(BaseModel):
    savingsPlanArns: Optional[SavingsPlanArnList] = None
    savingsPlanIds: Optional[SavingsPlanIdList] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[MaxResults] = None
    states: Optional[SavingsPlanStateList] = None
    filters: Optional[SavingsPlanFilterList] = None


class SavingsPlanList(BaseModel):
    __root__: List[SavingsPlan]


class DescribeSavingsPlanRatesResponse(BaseModel):
    savingsPlanId: Optional[SavingsPlanId] = None
    searchResults: Optional[SavingsPlanRateList] = None
    nextToken: Optional[PaginationToken] = None


class DescribeSavingsPlansResponse(BaseModel):
    savingsPlans: Optional[SavingsPlanList] = None
    nextToken: Optional[PaginationToken] = None


class DescribeSavingsPlansOfferingRatesResponse(BaseModel):
    searchResults: Optional[SavingsPlanOfferingRatesList] = None
    nextToken: Optional[PaginationToken] = None


class DescribeSavingsPlansOfferingsResponse(BaseModel):
    searchResults: Optional[SavingsPlanOfferingsList] = None
    nextToken: Optional[PaginationToken] = None

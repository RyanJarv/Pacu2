# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, List, Optional

from pydantic import BaseModel, Extra, Field


class Boolean(BaseModel):
    __root__: bool


class Double(BaseModel):
    __root__: float


class ProductCode(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(regex='\\S+')]


class Timestamp(BaseModel):
    __root__: datetime


class Integer(BaseModel):
    __root__: int


class String(BaseModel):
    __root__: str


class ErrorMessage(String):
    pass


class FilterValue(String):
    pass


class FilterValueList(BaseModel):
    __root__: Annotated[List[FilterValue], Field(min_items=1)]


class GetEntitlementFilterName(Enum):
    CUSTOMER_IDENTIFIER = 'CUSTOMER_IDENTIFIER'
    DIMENSION = 'DIMENSION'


class GetEntitlementFilters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class GetEntitlementsRequest(BaseModel):
    """
    The GetEntitlementsRequest contains parameters for the GetEntitlements operation.
    """

    ProductCode: ProductCode
    Filter: Optional[GetEntitlementFilters] = None
    NextToken: Optional[NonEmptyString] = None
    MaxResults: Optional[Integer] = None


class InvalidParameterException(BaseModel):
    """
    One or more parameters in your request was invalid.
    """

    message: Optional[ErrorMessage] = None


class ThrottlingException(InvalidParameterException):
    """
    The calls to the GetEntitlements API are throttled.
    """

    pass


class InternalServiceErrorException(InvalidParameterException):
    """
    An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums.
    """

    pass


class EntitlementValue(BaseModel):
    """
    The EntitlementValue represents the amount of capacity that the customer is entitled to for the product.
    """

    IntegerValue: Optional[Integer] = None
    DoubleValue: Optional[Double] = None
    BooleanValue: Optional[Boolean] = None
    StringValue: Optional[String] = None


class Entitlement(BaseModel):
    """
    An entitlement represents capacity in a product owned by the customer. For example, a customer might own some number of users or seats in an SaaS application or some amount of data capacity in a multi-tenant database.
    """

    ProductCode: Optional[ProductCode] = None
    Dimension: Optional[NonEmptyString] = None
    CustomerIdentifier: Optional[NonEmptyString] = None
    Value: Optional[EntitlementValue] = None
    ExpirationDate: Optional[Timestamp] = None


class EntitlementList(BaseModel):
    __root__: Annotated[List[Entitlement], Field(min_items=0)]


class GetEntitlementsResult(BaseModel):
    """
    The GetEntitlementsRequest contains results from the GetEntitlements operation.
    """

    Entitlements: Optional[EntitlementList] = None
    NextToken: Optional[NonEmptyString] = None

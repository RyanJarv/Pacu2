# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:57+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class AccessType(Enum):
    S3_SIGV4 = 'S3_SIGV4'
    SECRETS_MANAGER_ACCESS_TOKEN = 'SECRETS_MANAGER_ACCESS_TOKEN'


class SecretsManagerAccessTokenConfiguration(BaseModel):
    """
    AWS Secrets Manager access token configuration parameters. For information about Secrets Manager access token authentication, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html">Working with AWS Secrets Manager access token authentication</a>.
    """

    HeaderName: Optional[_String] = None
    SecretArn: Optional[_String] = None
    SecretStringKey: Optional[_String] = None


class DeleteChannelResponse(BaseModel):
    pass


class DeleteChannelPolicyResponse(DeleteChannelResponse):
    pass


class DeletePlaybackConfigurationResponse(DeleteChannelResponse):
    pass


class DeleteProgramResponse(DeleteChannelResponse):
    pass


class DeleteSourceLocationResponse(DeleteChannelResponse):
    pass


class DeleteVodSourceResponse(DeleteChannelResponse):
    pass


class GetChannelPolicyResponse(BaseModel):
    Policy: Optional[_String] = None


class BadRequestException(BaseModel):
    __root__: Any


class PutChannelPolicyResponse(DeleteChannelResponse):
    pass


class Mode(Enum):
    OFF = 'OFF'
    BEHIND_LIVE_EDGE = 'BEHIND_LIVE_EDGE'


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class OriginManifestType(Enum):
    SINGLE_PERIOD = 'SINGLE_PERIOD'
    MULTI_PERIOD = 'MULTI_PERIOD'


class _Integer(BaseModel):
    __root__: int


class StartChannelResponse(DeleteChannelResponse):
    pass


class StopChannelResponse(DeleteChannelResponse):
    pass


class AccessConfiguration(BaseModel):
    """
    Access configuration parameters.
    """

    AccessType: Optional[AccessType] = None
    SecretsManagerAccessTokenConfiguration: Optional[
        SecretsManagerAccessTokenConfiguration
    ] = None


class MessageType(Enum):
    SPLICE_INSERT = 'SPLICE_INSERT'


class _Long(_Integer):
    pass


class SlateSource(BaseModel):
    """
    Slate VOD source configuration.
    """

    SourceLocationName: Optional[_String] = None
    VodSourceName: Optional[_String] = None


class SpliceInsertMessage(BaseModel):
    """
    Splice insert message configuration.
    """

    AvailNum: Optional[_Integer] = None
    AvailsExpected: Optional[_Integer] = None
    SpliceEventId: Optional[_Integer] = None
    UniqueProgramId: Optional[_Integer] = None


class _Boolean(BaseModel):
    __root__: bool


class _TimestampUnix(BaseModel):
    __root__: datetime


class _ListOfString(BaseModel):
    __root__: List[_String]


class Alert(BaseModel):
    """
    Alert configuration parameters.
    """

    AlertCode: _String
    AlertMessage: _String
    LastModifiedTime: _TimestampUnix
    RelatedResourceArns: _ListOfString
    ResourceArn: _String


class AvailSuppression(BaseModel):
    """
    The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
    """

    Mode: Optional[Mode] = None
    Value: Optional[_String] = None


class Bumper(BaseModel):
    """
    The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
    """

    EndUrl: Optional[_String] = None
    StartUrl: Optional[_String] = None


class CdnConfiguration(BaseModel):
    """
    The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
    """

    AdSegmentUrlPrefix: Optional[_String] = None
    ContentSegmentUrlPrefix: Optional[_String] = None


class ChannelState(Enum):
    RUNNING = 'RUNNING'
    STOPPED = 'STOPPED'


class ConfigurationAliasesRequest(BaseModel):
    """
    The predefined aliases for dynamic variables.
    """

    pass

    class Config:
        extra = Extra.allow


class ConfigurationAliasesResponse(ConfigurationAliasesRequest):
    """
    The predefined aliases for dynamic variables.
    """

    pass


class PlaybackMode4(Enum):
    LOOP = 'LOOP'
    LINEAR = 'LINEAR'


class DefaultSegmentDeliveryConfiguration(BaseModel):
    """
    The optional configuration for a server that serves segments. Use this if you want the segment delivery server to be different from the source location server. For example, you can configure your source location server to be an origination server, such as MediaPackage, and the segment delivery server to be a content delivery network (CDN), such as CloudFront. If you don't specify a segment delivery server, then the source location server is used.
    """

    BaseUrl: Optional[_String] = None


class HttpConfiguration(BaseModel):
    """
    The HTTP configuration for the source location.
    """

    BaseUrl: _String


class CreateSourceLocationRequest(BaseModel):
    AccessConfiguration: Optional[AccessConfiguration] = None
    DefaultSegmentDeliveryConfiguration: Optional[
        DefaultSegmentDeliveryConfiguration
    ] = None
    HttpConfiguration: HttpConfiguration
    Tags: Optional[_MapOfString] = None


class DashConfiguration(BaseModel):
    """
    The configuration for DASH content.
    """

    ManifestEndpointPrefix: Optional[_String] = None
    MpdLocation: Optional[_String] = None
    OriginManifestType: Optional[OriginManifestType] = None


class DashConfigurationForPut(BaseModel):
    """
    The configuration for DASH PUT operations.
    """

    MpdLocation: Optional[_String] = None
    OriginManifestType: Optional[OriginManifestType] = None


class DashPlaylistSettings(BaseModel):
    """
    Dash manifest configuration parameters.
    """

    ManifestWindowSeconds: Optional[_Integer] = None
    MinBufferTimeSeconds: Optional[_Integer] = None
    MinUpdatePeriodSeconds: Optional[_Integer] = None
    SuggestedPresentationDelaySeconds: Optional[_Integer] = None


class DeleteChannelPolicyRequest(BaseModel):
    pass


class DeleteChannelRequest(BaseModel):
    pass


class DeletePlaybackConfigurationRequest(BaseModel):
    pass


class DeleteProgramRequest(BaseModel):
    pass


class DeleteSourceLocationRequest(BaseModel):
    pass


class DeleteVodSourceRequest(BaseModel):
    pass


class DescribeChannelRequest(BaseModel):
    pass


class DescribeProgramRequest(BaseModel):
    pass


class DescribeSourceLocationRequest(BaseModel):
    pass


class DescribeVodSourceRequest(BaseModel):
    pass


class GetChannelPolicyRequest(BaseModel):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class GetChannelScheduleRequest(BaseModel):
    pass


class GetPlaybackConfigurationRequest(BaseModel):
    pass


class HlsConfiguration(BaseModel):
    """
    The configuration for HLS content.
    """

    ManifestEndpointPrefix: Optional[_String] = None


class LivePreRollConfiguration(BaseModel):
    """
    The configuration for pre-roll ad insertion.
    """

    AdDecisionServerUrl: Optional[_String] = None
    MaxDurationSeconds: Optional[_Integer] = None


class _IntegerMin1(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class HlsPlaylistSettings(BaseModel):
    """
    HLS playlist configuration parameters.
    """

    ManifestWindowSeconds: Optional[_Integer] = None


class Type(Enum):
    DASH = 'DASH'
    HLS = 'HLS'


class ListAlertsRequest(BaseModel):
    pass


class _ListOfAlert(BaseModel):
    __root__: List[Alert]


class ListChannelsRequest(BaseModel):
    pass


class ListPlaybackConfigurationsRequest(BaseModel):
    pass


class ListSourceLocationsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ListVodSourcesRequest(BaseModel):
    pass


class PutChannelPolicyRequest(BaseModel):
    Policy: _String


class RelativePosition(Enum):
    BEFORE_PROGRAM = 'BEFORE_PROGRAM'
    AFTER_PROGRAM = 'AFTER_PROGRAM'


class ResponseOutputItem(BaseModel):
    """
    This response includes only the "property" : "type" property.
    """

    DashPlaylistSettings: Optional[DashPlaylistSettings] = None
    HlsPlaylistSettings: Optional[HlsPlaylistSettings] = None
    ManifestName: _String
    PlaybackUrl: _String
    SourceGroup: _String


class ScheduleAdBreak(BaseModel):
    """
    The schedule's ad break properties.
    """

    ApproximateDurationSeconds: Optional[_Long] = None
    ApproximateStartTime: Optional[_TimestampUnix] = None
    SourceLocationName: Optional[_String] = None
    VodSourceName: Optional[_String] = None


class _ListOfScheduleAdBreak(BaseModel):
    __root__: List[ScheduleAdBreak]


class ScheduleEntryType(Enum):
    PROGRAM = 'PROGRAM'
    FILLER_SLATE = 'FILLER_SLATE'


class ScheduleEntry(BaseModel):
    """
    The properties for a schedule.
    """

    ApproximateDurationSeconds: Optional[_Long] = None
    ApproximateStartTime: Optional[_TimestampUnix] = None
    Arn: _String
    ChannelName: _String
    ProgramName: _String
    ScheduleAdBreaks: Optional[_ListOfScheduleAdBreak] = None
    ScheduleEntryType: Optional[ScheduleEntryType] = None
    SourceLocationName: _String
    VodSourceName: _String


class SourceLocation(BaseModel):
    """
    This response includes only the "type" : "object" property.
    """

    AccessConfiguration: Optional[AccessConfiguration] = None
    Arn: _String
    CreationTime: Optional[_TimestampUnix] = None
    DefaultSegmentDeliveryConfiguration: Optional[
        DefaultSegmentDeliveryConfiguration
    ] = None
    HttpConfiguration: HttpConfiguration
    LastModifiedTime: Optional[_TimestampUnix] = None
    SourceLocationName: _String
    Tags: Optional[_MapOfString] = None


class StartChannelRequest(BaseModel):
    pass


class StopChannelRequest(BaseModel):
    pass


class TagResourceRequest(BaseModel):
    Tags: _MapOfString


class UntagResourceRequest(BaseModel):
    pass


class UpdateSourceLocationRequest(BaseModel):
    AccessConfiguration: Optional[AccessConfiguration] = None
    DefaultSegmentDeliveryConfiguration: Optional[
        DefaultSegmentDeliveryConfiguration
    ] = None
    HttpConfiguration: HttpConfiguration


class RequestOutputItem(BaseModel):
    """
    The output configuration for this channel.
    """

    DashPlaylistSettings: Optional[DashPlaylistSettings] = None
    HlsPlaylistSettings: Optional[HlsPlaylistSettings] = None
    ManifestName: _String
    SourceGroup: _String


class AdBreak(BaseModel):
    """
    Ad break configuration parameters.
    """

    MessageType: Optional[MessageType] = None
    OffsetMillis: Optional[_Long] = None
    Slate: Optional[SlateSource] = None
    SpliceInsertMessage: Optional[SpliceInsertMessage] = None


class Transition(BaseModel):
    """
    Program transition configuration.
    """

    RelativePosition: RelativePosition
    RelativeProgram: Optional[_String] = None
    ScheduledStartTimeMillis: Optional[_Long] = None
    Type: _String


class CreateSourceLocationResponse(BaseModel):
    AccessConfiguration: Optional[AccessConfiguration] = None
    Arn: Optional[_String] = None
    CreationTime: Optional[_TimestampUnix] = None
    DefaultSegmentDeliveryConfiguration: Optional[
        DefaultSegmentDeliveryConfiguration
    ] = None
    HttpConfiguration: Optional[HttpConfiguration] = None
    LastModifiedTime: Optional[_TimestampUnix] = None
    SourceLocationName: Optional[_String] = None
    Tags: Optional[_MapOfString] = None


class HttpPackageConfiguration(BaseModel):
    """
    The HTTP package configuration properties for the requested VOD source.
    """

    Path: _String
    SourceGroup: _String
    Type: Type


class DescribeSourceLocationResponse(CreateSourceLocationResponse):
    pass


class ListAlertsResponse(BaseModel):
    Items: Optional[_ListOfAlert] = None
    NextToken: Optional[_String] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[_MapOfString] = None


class AdMarkerPassthrough(BaseModel):
    """
    <p>For HLS, when set to true, MediaTailor passes through EXT-X-CUE-IN, EXT-X-CUE-OUT, and EXT-X-SPLICEPOINT-SCTE35 ad markers from the origin manifest to the MediaTailor personalized manifest.</p> <p>No logic is applied to these ad markers. For example, if EXT-X-CUE-OUT has a value of 60, but no ads are filled for that ad break, MediaTailor will not set the value to 0.</p>
    """

    Enabled: Optional[_Boolean] = None


class UpdateSourceLocationResponse(CreateSourceLocationResponse):
    pass


class ResponseOutputs(BaseModel):
    __root__: List[ResponseOutputItem]


class Channel(BaseModel):
    """
    The configuration parameters for a channel.
    """

    Arn: _String
    ChannelName: _String
    ChannelState: _String
    CreationTime: Optional[_TimestampUnix] = None
    FillerSlate: Optional[SlateSource] = None
    LastModifiedTime: Optional[_TimestampUnix] = None
    Outputs: ResponseOutputs
    PlaybackMode: _String
    Tags: Optional[_MapOfString] = None


class RequestOutputs(BaseModel):
    """
    An object that represents an object in the CreateChannel request.
    """

    __root__: Annotated[
        List[RequestOutputItem],
        Field(
            description='An object that represents an object in the CreateChannel request.'
        ),
    ]


class CreateChannelRequest(BaseModel):
    FillerSlate: Optional[SlateSource] = None
    Outputs: RequestOutputs
    PlaybackMode: PlaybackMode4
    Tags: Optional[_MapOfString] = None


class _ListOfAdBreak(BaseModel):
    __root__: List[AdBreak]


class ScheduleConfiguration(BaseModel):
    """
    Schedule configuration parameters. A channel must be stopped before changes can be made to the schedule.
    """

    Transition: Transition


class CreateProgramRequest(BaseModel):
    AdBreaks: Optional[_ListOfAdBreak] = None
    ScheduleConfiguration: ScheduleConfiguration
    SourceLocationName: _String
    VodSourceName: _String


class HttpPackageConfigurations(BaseModel):
    """
    The VOD source's HTTP package configuration settings.
    """

    __root__: Annotated[
        List[HttpPackageConfiguration],
        Field(description="The VOD source's HTTP package configuration settings."),
    ]


class CreateVodSourceRequest(BaseModel):
    HttpPackageConfigurations: HttpPackageConfigurations
    Tags: Optional[_MapOfString] = None


class _ListOfScheduleEntry(BaseModel):
    __root__: List[ScheduleEntry]


class ManifestProcessingRules(BaseModel):
    """
    The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
    """

    AdMarkerPassthrough: Optional[AdMarkerPassthrough] = None


class _ListOfChannel(BaseModel):
    __root__: List[Channel]


class _ListOfSourceLocation(BaseModel):
    __root__: List[SourceLocation]


class PlaybackConfiguration(BaseModel):
    """
    Creates a playback configuration. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
    """

    AdDecisionServerUrl: Optional[_String] = None
    AvailSuppression: Optional[AvailSuppression] = None
    Bumper: Optional[Bumper] = None
    CdnConfiguration: Optional[CdnConfiguration] = None
    ConfigurationAliases: Optional[ConfigurationAliasesResponse] = None
    DashConfiguration: Optional[DashConfiguration] = None
    HlsConfiguration: Optional[HlsConfiguration] = None
    LivePreRollConfiguration: Optional[LivePreRollConfiguration] = None
    ManifestProcessingRules: Optional[ManifestProcessingRules] = None
    Name: Optional[_String] = None
    PersonalizationThresholdSeconds: Optional[_IntegerMin1] = None
    PlaybackConfigurationArn: Optional[_String] = None
    PlaybackEndpointPrefix: Optional[_String] = None
    SessionInitializationEndpointPrefix: Optional[_String] = None
    SlateAdUrl: Optional[_String] = None
    Tags: Optional[_MapOfString] = None
    TranscodeProfileName: Optional[_String] = None
    VideoContentSourceUrl: Optional[_String] = None


class PutPlaybackConfigurationRequest(BaseModel):
    AdDecisionServerUrl: Optional[_String] = None
    AvailSuppression: Optional[AvailSuppression] = None
    Bumper: Optional[Bumper] = None
    CdnConfiguration: Optional[CdnConfiguration] = None
    ConfigurationAliases: Optional[ConfigurationAliasesRequest] = None
    DashConfiguration: Optional[DashConfigurationForPut] = None
    LivePreRollConfiguration: Optional[LivePreRollConfiguration] = None
    ManifestProcessingRules: Optional[ManifestProcessingRules] = None
    Name: Optional[_String] = None
    PersonalizationThresholdSeconds: Optional[_IntegerMin1] = None
    SlateAdUrl: Optional[_String] = None
    Tags: Optional[_MapOfString] = None
    TranscodeProfileName: Optional[_String] = None
    VideoContentSourceUrl: Optional[_String] = None


class UpdateChannelRequest(BaseModel):
    Outputs: RequestOutputs


class UpdateVodSourceRequest(BaseModel):
    HttpPackageConfigurations: HttpPackageConfigurations


class VodSource(BaseModel):
    """
    VOD source configuration parameters.
    """

    Arn: _String
    CreationTime: Optional[_TimestampUnix] = None
    HttpPackageConfigurations: HttpPackageConfigurations
    LastModifiedTime: Optional[_TimestampUnix] = None
    SourceLocationName: _String
    Tags: Optional[_MapOfString] = None
    VodSourceName: _String


class CreateChannelResponse(BaseModel):
    Arn: Optional[_String] = None
    ChannelName: Optional[_String] = None
    ChannelState: Optional[ChannelState] = None
    CreationTime: Optional[_TimestampUnix] = None
    FillerSlate: Optional[SlateSource] = None
    LastModifiedTime: Optional[_TimestampUnix] = None
    Outputs: Optional[ResponseOutputs] = None
    PlaybackMode: Optional[_String] = None
    Tags: Optional[_MapOfString] = None


class CreateProgramResponse(BaseModel):
    AdBreaks: Optional[_ListOfAdBreak] = None
    Arn: Optional[_String] = None
    ChannelName: Optional[_String] = None
    CreationTime: Optional[_TimestampUnix] = None
    ProgramName: Optional[_String] = None
    ScheduledStartTime: Optional[_TimestampUnix] = None
    SourceLocationName: Optional[_String] = None
    VodSourceName: Optional[_String] = None


class CreateVodSourceResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTime: Optional[_TimestampUnix] = None
    HttpPackageConfigurations: Optional[HttpPackageConfigurations] = None
    LastModifiedTime: Optional[_TimestampUnix] = None
    SourceLocationName: Optional[_String] = None
    Tags: Optional[_MapOfString] = None
    VodSourceName: Optional[_String] = None


class DescribeChannelResponse(CreateChannelResponse):
    pass


class DescribeProgramResponse(CreateProgramResponse):
    pass


class DescribeVodSourceResponse(CreateVodSourceResponse):
    pass


class GetChannelScheduleResponse(BaseModel):
    Items: Optional[_ListOfScheduleEntry] = None
    NextToken: Optional[_String] = None


class GetPlaybackConfigurationResponse(PlaybackConfiguration):
    pass


class ListChannelsResponse(BaseModel):
    Items: Optional[_ListOfChannel] = None
    NextToken: Optional[_String] = None


class ListSourceLocationsResponse(BaseModel):
    Items: Optional[_ListOfSourceLocation] = None
    NextToken: Optional[_String] = None


class PutPlaybackConfigurationResponse(PlaybackConfiguration):
    pass


class UpdateChannelResponse(CreateChannelResponse):
    pass


class UpdateVodSourceResponse(CreateVodSourceResponse):
    pass


class _ListOfPlaybackConfiguration(BaseModel):
    __root__: List[PlaybackConfiguration]


class _ListOfVodSource(BaseModel):
    __root__: List[VodSource]


class ListPlaybackConfigurationsResponse(BaseModel):
    Items: Optional[_ListOfPlaybackConfiguration] = None
    NextToken: Optional[_String] = None


class ListVodSourcesResponse(BaseModel):
    Items: Optional[_ListOfVodSource] = None
    NextToken: Optional[_String] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:53+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field, SecretStr


class BadRequestException(BaseModel):
    __root__: Any


class ConflictException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class ForbiddenException(BadRequestException):
    pass


class TooManyRequestsException(BadRequestException):
    pass


class LimitExceededException(BadRequestException):
    pass


class InternalServerErrorException(BadRequestException):
    pass


class DeleteEnvironmentResult(BaseModel):
    pass


class DeleteEnvironmentMembershipResult(DeleteEnvironmentResult):
    pass


class TagResourceResponse(DeleteEnvironmentResult):
    pass


class ConcurrentAccessException(BadRequestException):
    pass


class UntagResourceResponse(DeleteEnvironmentResult):
    pass


class UpdateEnvironmentResult(DeleteEnvironmentResult):
    pass


class AutomaticStopTimeMinutes(BaseModel):
    __root__: Annotated[int, Field(le=20160.0)]


class EnvironmentId(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9]{8,32}$')]


class BoundedEnvironmentIdList(BaseModel):
    __root__: Annotated[List[EnvironmentId], Field(max_items=25, min_items=1)]


class ClientRequestToken(BaseModel):
    __root__: Annotated[str, Field(regex='[\\x20-\\x7E]{10,128}')]


class ConnectionType(Enum):
    CONNECT_SSH = 'CONNECT_SSH'
    CONNECT_SSM = 'CONNECT_SSM'


class EnvironmentName(BaseModel):
    __root__: Annotated[str, Field(max_length=60, min_length=1)]


class EnvironmentDescription(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=200)]


class InstanceType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=20, min_length=5, regex='^[a-z][1-9][.][a-z0-9]+$')
    ]


class SubnetId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=24,
            min_length=15,
            regex='^(subnet-[0-9a-f]{8}|subnet-[0-9a-f]{17})$',
        ),
    ]


class ImageId(BaseModel):
    __root__: Annotated[str, Field(max_length=512)]


class UserArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):(iam|sts)::\\d+:(root|(user\\/[\\w+=/:,.@-]{1,64}|federated-user\\/[\\w+=/:,.@-]{2,32}|assumed-role\\/[\\w+=:,.@-]{1,64}\\/[\\w+=,.@-]{1,64}))$'
        ),
    ]


class NullableBoolean(BaseModel):
    __root__: bool


class MemberPermissions(Enum):
    read_write = 'read-write'
    read_only = 'read-only'


class String(BaseModel):
    __root__: str


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=25.0)]


class EnvironmentStatus(Enum):
    error = 'error'
    creating = 'creating'
    connecting = 'connecting'
    ready = 'ready'
    stopping = 'stopping'
    stopped = 'stopped'
    deleting = 'deleting'


class EnvironmentType(Enum):
    ssh = 'ssh'
    ec2 = 'ec2'


class ManagedCredentialsStatus(Enum):
    ENABLED_ON_CREATE = 'ENABLED_ON_CREATE'
    ENABLED_BY_OWNER = 'ENABLED_BY_OWNER'
    DISABLED_BY_DEFAULT = 'DISABLED_BY_DEFAULT'
    DISABLED_BY_OWNER = 'DISABLED_BY_OWNER'
    DISABLED_BY_COLLABORATOR = 'DISABLED_BY_COLLABORATOR'
    PENDING_REMOVAL_BY_COLLABORATOR = 'PENDING_REMOVAL_BY_COLLABORATOR'
    PENDING_START_REMOVAL_BY_COLLABORATOR = 'PENDING_START_REMOVAL_BY_COLLABORATOR'
    PENDING_REMOVAL_BY_OWNER = 'PENDING_REMOVAL_BY_OWNER'
    PENDING_START_REMOVAL_BY_OWNER = 'PENDING_START_REMOVAL_BY_OWNER'
    FAILED_REMOVAL_BY_COLLABORATOR = 'FAILED_REMOVAL_BY_COLLABORATOR'
    FAILED_REMOVAL_BY_OWNER = 'FAILED_REMOVAL_BY_OWNER'


class EnvironmentArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='arn:(aws|aws-cn|aws-us-gov|aws-iso|aws-iso-b):cloud9:([a-z]{2}-[a-z]+-\\d{1}):[0-9]{12}:environment:[a-zA-Z0-9]{8,32}'
        ),
    ]


class EnvironmentIdList(BaseModel):
    __root__: List[EnvironmentId]


class EnvironmentLifecycleStatus(Enum):
    CREATING = 'CREATING'
    CREATED = 'CREATED'
    CREATE_FAILED = 'CREATE_FAILED'
    DELETING = 'DELETING'
    DELETE_FAILED = 'DELETE_FAILED'


class Permissions(Enum):
    owner = 'owner'
    read_write = 'read-write'
    read_only = 'read-only'


class Timestamp(BaseModel):
    __root__: datetime


class ManagedCredentialsAction(Enum):
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'


class TagKey(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    Metadata that is associated with Amazon Web Services resources. In particular, a name-value pair that can be associated with an Cloud9 development environment. There are two types of tags: <i>user tags</i> and <i>system tags</i>. A user tag is created by the user. A system tag is automatically created by Amazon Web Services services. A system tag is prefixed with <code>"aws:"</code> and cannot be modified by the user.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class CreateEnvironmentEC2Result(BaseModel):
    environmentId: Optional[EnvironmentId] = None


class CreateEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    userArn: UserArn
    permissions: MemberPermissions


class DeleteEnvironmentRequest(BaseModel):
    environmentId: EnvironmentId


class DeleteEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    userArn: UserArn


class DescribeEnvironmentStatusResult(BaseModel):
    status: EnvironmentStatus
    message: String


class DescribeEnvironmentStatusRequest(BaseModel):
    environmentId: EnvironmentId


class DescribeEnvironmentsRequest(BaseModel):
    environmentIds: BoundedEnvironmentIdList


class ListEnvironmentsResult(BaseModel):
    nextToken: Optional[String] = None
    environmentIds: Optional[EnvironmentIdList] = None


class ListEnvironmentsRequest(BaseModel):
    nextToken: Optional[String] = None
    maxResults: Optional[MaxResults] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn


class UntagResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn
    TagKeys: TagKeyList


class UpdateEnvironmentRequest(BaseModel):
    environmentId: EnvironmentId
    name: Optional[EnvironmentName] = None
    description: Optional[EnvironmentDescription] = None
    managedCredentialsAction: Optional[ManagedCredentialsAction] = None


class UpdateEnvironmentMembershipRequest(BaseModel):
    environmentId: EnvironmentId
    userArn: UserArn
    permissions: MemberPermissions


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=0)]


class EnvironmentMember(BaseModel):
    """
    Information about an environment member for an Cloud9 development environment.
    """

    permissions: Permissions
    userId: String
    userArn: UserArn
    environmentId: EnvironmentId
    lastAccess: Optional[Timestamp] = None


class PermissionsList(BaseModel):
    __root__: List[Permissions]


class EnvironmentMembersList(BaseModel):
    __root__: List[EnvironmentMember]


class EnvironmentLifecycle(BaseModel):
    """
    Information about the current creation or deletion lifecycle state of an Cloud9 development environment.
    """

    status: Optional[EnvironmentLifecycleStatus] = None
    reason: Optional[String] = None
    failureResource: Optional[String] = None


class Environment(BaseModel):
    """
    Information about an Cloud9 development environment.
    """

    id: Optional[EnvironmentId] = None
    name: Optional[EnvironmentName] = None
    description: Optional[EnvironmentDescription] = None
    type: EnvironmentType
    connectionType: Optional[ConnectionType] = None
    arn: String
    ownerArn: String
    lifecycle: Optional[EnvironmentLifecycle] = None
    managedCredentialsStatus: Optional[ManagedCredentialsStatus] = None


class CreateEnvironmentEC2Request(BaseModel):
    name: EnvironmentName
    description: Optional[EnvironmentDescription] = None
    clientRequestToken: Optional[ClientRequestToken] = None
    instanceType: InstanceType
    subnetId: Optional[SubnetId] = None
    imageId: Optional[ImageId] = None
    automaticStopTimeMinutes: Optional[AutomaticStopTimeMinutes] = None
    ownerArn: Optional[UserArn] = None
    tags: Optional[TagList] = None
    connectionType: Optional[ConnectionType] = None
    dryRun: Optional[NullableBoolean] = None


class CreateEnvironmentMembershipResult(BaseModel):
    membership: EnvironmentMember


class DescribeEnvironmentMembershipsResult(BaseModel):
    memberships: Optional[EnvironmentMembersList] = None
    nextToken: Optional[String] = None


class DescribeEnvironmentMembershipsRequest(BaseModel):
    userArn: Optional[UserArn] = None
    environmentId: Optional[EnvironmentId] = None
    permissions: Optional[PermissionsList] = None
    nextToken: Optional[String] = None
    maxResults: Optional[MaxResults] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class TagResourceRequest(BaseModel):
    ResourceARN: EnvironmentArn
    Tags: TagList


class UpdateEnvironmentMembershipResult(BaseModel):
    membership: Optional[EnvironmentMember] = None


class EnvironmentList(BaseModel):
    __root__: List[Environment]


class DescribeEnvironmentsResult(BaseModel):
    environments: Optional[EnvironmentList] = None

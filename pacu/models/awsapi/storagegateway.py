# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:59+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field, SecretStr


class InvalidGatewayRequestException(BaseModel):
    __root__: Any


class InternalServerError(InvalidGatewayRequestException):
    pass


class ServiceUnavailableError(InvalidGatewayRequestException):
    pass


class ActivationKey(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1)]


class GatewayName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The name you configured for your gateway.',
            max_length=255,
            min_length=2,
            regex='^[ -\\.0-\\[\\]-~]*[!-\\.0-\\[\\]-~][ -\\.0-\\[\\]-~]*$',
        ),
    ]


class GatewayTimezone(BaseModel):
    __root__: Annotated[str, Field(max_length=10, min_length=3)]


class RegionId(BaseModel):
    __root__: Annotated[str, Field(max_length=25, min_length=1)]


class GatewayType(BaseModel):
    __root__: Annotated[str, Field(max_length=20, min_length=2)]


class TapeDriveType(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=2)]


class MediumChangerType(TapeDriveType):
    pass


class GatewayARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The Amazon Resource Name (ARN) of the gateway. Use the <a>ListGateways</a> operation to return a list of gateways for your account and Region.',
            max_length=500,
            min_length=50,
        ),
    ]


class ActiveDirectoryStatus(Enum):
    ACCESS_DENIED = 'ACCESS_DENIED'
    DETACHED = 'DETACHED'
    JOINED = 'JOINED'
    JOINING = 'JOINING'
    NETWORK_ERROR = 'NETWORK_ERROR'
    TIMEOUT = 'TIMEOUT'
    UNKNOWN_ERROR = 'UNKNOWN_ERROR'


class ResourceARN(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=50)]


class TapeARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=500,
            min_length=50,
            regex='^arn:(aws|aws-cn|aws-us-gov):storagegateway:[a-z\\-0-9]+:[0-9]+:tape\\/[0-9A-Z]{7,16}$',
        ),
    ]


class PoolId(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class Boolean(BaseModel):
    __root__: bool


class DomainUserName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='^\\w[\\w\\.\\- ]*$')
    ]


class DomainUserPassword(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=1024, min_length=1, regex='^[ -~]+$')
    ]


class ClientToken(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=5)]


class FileSystemLocationARN(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=8)]


class AuditDestinationARN(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class FileSystemAssociationARN(ResourceARN):
    pass


class TargetName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=200, min_length=1, regex='^[-\\.;a-z0-9]+$')
    ]


class VolumeARN(ResourceARN):
    pass


class NetworkInterfaceId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='\\A(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)(\\.(25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}\\z'
        ),
    ]


class DiskId(BaseModel):
    __root__: Annotated[str, Field(max_length=300, min_length=1)]


class TargetARN(BaseModel):
    __root__: Annotated[str, Field(max_length=800, min_length=50)]


class Authentication(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='<p>The authentication method of the file share. The default is <code>ActiveDirectory</code>.</p> <p>Valid Values: <code>ActiveDirectory</code> | <code>GuestAccess</code> </p>',
            max_length=15,
            min_length=5,
        ),
    ]


class TapeBarcodePrefix(BaseModel):
    __root__: Annotated[str, Field(max_length=4, min_length=1, regex='^[A-Z]*$')]


class TapeSize(BaseModel):
    __root__: int


class MinimumNumTapes(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class AutomaticTapeCreationRule(BaseModel):
    """
    An automatic tape creation policy consists of automatic tape creation rules where each rule defines when and how to create new tapes. For more information about automatic tape creation, see <a href="https://docs.aws.amazon.com/storagegateway/latest/userguide/GettingStartedCreateTapes.html#CreateTapesAutomatically">Creating Tapes Automatically</a>.
    """

    TapeBarcodePrefix: TapeBarcodePrefix
    PoolId: PoolId
    TapeSizeInBytes: TapeSize
    MinimumNumTapes: MinimumNumTapes
    Worm: Optional[Boolean] = None


class AvailabilityMonitorTestStatus(Enum):
    COMPLETE = 'COMPLETE'
    FAILED = 'FAILED'
    PENDING = 'PENDING'


class BandwidthDownloadRateLimit(BaseModel):
    __root__: Annotated[int, Field(ge=102400.0)]


class HourOfDay(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=23.0)]


class MinuteOfHour(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=59.0)]


class BandwidthUploadRateLimit(BaseModel):
    __root__: Annotated[int, Field(ge=51200.0)]


class BandwidthType(BaseModel):
    __root__: Annotated[str, Field(max_length=25, min_length=3)]


class BooleanModel(Boolean):
    pass


class CacheStaleTimeoutInSeconds(TapeSize):
    pass


class VolumeId(BaseModel):
    __root__: Annotated[str, Field(max_length=30, min_length=12)]


class VolumeType(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=3)]


class VolumeStatus(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=3)]


class VolumeAttachmentStatus(VolumeStatus):
    pass


class Long(TapeSize):
    pass


class DoubleObject(BaseModel):
    __root__: float


class SnapshotId(BaseModel):
    __root__: Annotated[str, Field(regex='\\Asnap-([0-9A-Fa-f]{8}|[0-9A-Fa-f]{17})\\z')]


class CreatedDate(BaseModel):
    __root__: datetime


class VolumeUsedInBytes(TapeSize):
    pass


class KMSKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The Amazon Resource Name (ARN) of a symmetric customer master key (CMK) used for Amazon S3 server-side encryption. Storage Gateway does not support asymmetric CMKs. This value can only be set when <code>KMSEncrypted</code> is <code>true</code>. Optional.',
            max_length=2048,
            min_length=7,
            regex='(^arn:(aws|aws-cn|aws-us-gov):kms:([a-zA-Z0-9-]+):([0-9]+):(key|alias)/(\\S+)$)|(^alias/(\\S+)$)',
        ),
    ]


class CaseSensitivity(Enum):
    ClientSpecified = 'ClientSpecified'
    CaseSensitive = 'CaseSensitive'


class ChapSecret(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=100, min_length=1)]


class IqnName(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='[0-9a-z:.-]+')]


class CloudWatchLogGroupARN(BaseModel):
    __root__: Annotated[str, Field(max_length=562)]


class Role(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The ARN of the IAM role that an S3 File Gateway assumes when it accesses the underlying storage.',
            max_length=2048,
            min_length=20,
            regex='^arn:(aws|aws-cn|aws-us-gov):iam::([0-9]+):role/(\\S+)$',
        ),
    ]


class LocationARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The ARN of the backend storage used for storing file data. A prefix name can be added to the S3 bucket name. It must end with a "/".',
            max_length=1400,
            min_length=16,
        ),
    ]


class StorageClass(BaseModel):
    __root__: Annotated[str, Field(description='<p/>', max_length=50, min_length=5)]


class ObjectACL(Enum):
    """
    A value that sets the access control list (ACL) permission for objects in the S3 bucket that an S3 File Gateway puts objects into. The default value is <code>private</code>.
    """

    private = 'private'
    public_read = 'public-read'
    public_read_write = 'public-read-write'
    authenticated_read = 'authenticated-read'
    bucket_owner_read = 'bucket-owner-read'
    bucket_owner_full_control = 'bucket-owner-full-control'
    aws_exec_read = 'aws-exec-read'


class Squash(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='<p>The user mapped to anonymous user. Valid options are the following:</p> <ul> <li> <p> <code>RootSquash</code>: Only root is mapped to anonymous user.</p> </li> <li> <p> <code>NoSquash</code>: No one is mapped to anonymous user.</p> </li> <li> <p> <code>AllSquash</code>: Everyone is mapped to anonymous user.</p> </li> </ul>',
            max_length=15,
            min_length=5,
        ),
    ]


class FileShareName(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class NotificationPolicy(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=2, regex='^\\{[\\w\\s:\\{\\}\\[\\]"]*}$')
    ]


class DNSHostName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=255,
            min_length=1,
            regex='^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])$',
        ),
    ]


class FileShareARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The Amazon Resource Name (ARN) of the file share.',
            max_length=500,
            min_length=50,
        ),
    ]


class SnapshotDescription(FileShareName):
    pass


class String(BaseModel):
    __root__: str


class PoolName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='^[ -\\.0-\\[\\]-~]*[!-\\.0-\\[\\]-~][ -\\.0-\\[\\]-~]*$',
        ),
    ]


class TapeStorageClass(Enum):
    DEEP_ARCHIVE = 'DEEP_ARCHIVE'
    GLACIER = 'GLACIER'


class RetentionLockType(Enum):
    COMPLIANCE = 'COMPLIANCE'
    GOVERNANCE = 'GOVERNANCE'
    NONE = 'NONE'


class RetentionLockTimeInDays(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=36500.0)]


class PoolARN(ResourceARN):
    pass


class TapeBarcode(BaseModel):
    __root__: Annotated[str, Field(max_length=16, min_length=7, regex='^[A-Z0-9]*$')]


class NumTapesToCreate(MinimumNumTapes):
    pass


class TapeARNs(BaseModel):
    """
    The Amazon Resource Name (ARN) of each of the tapes you want to list. If you don't specify a tape ARN, the response lists all tapes in both your VTL and VTS.
    """

    __root__: Annotated[
        List[TapeARN],
        Field(
            description="The Amazon Resource Name (ARN) of each of the tapes you want to list. If you don't specify a tape ARN, the response lists all tapes in both your VTL and VTS."
        ),
    ]


class DayOfMonth(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=28.0)]


class DayOfWeek(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=6.0)]


class DeprecationDate(RegionId):
    pass


class Time(CreatedDate):
    pass


class Double(DoubleObject):
    pass


class VolumeARNs(BaseModel):
    __root__: List[VolumeARN]


class FileSystemAssociationARNList(BaseModel):
    __root__: Annotated[
        List[FileSystemAssociationARN], Field(max_items=10, min_items=1)
    ]


class GatewayId(VolumeId):
    pass


class GatewayState(BaseModel):
    __root__: Annotated[str, Field(max_length=25, min_length=2)]


class NextUpdateAvailabilityDate(RegionId):
    pass


class LastSoftwareUpdate(RegionId):
    pass


class Ec2InstanceId(String):
    pass


class Ec2InstanceRegion(String):
    pass


class HostEnvironment(Enum):
    VMWARE = 'VMWARE'
    HYPER_V = 'HYPER-V'
    EC2 = 'EC2'
    KVM = 'KVM'
    OTHER = 'OTHER'


class EndpointType(BaseModel):
    __root__: Annotated[str, Field(max_length=8, min_length=4)]


class SoftwareUpdatesEndDate(RegionId):
    pass


class GatewayCapacity(Enum):
    Small = 'Small'
    Medium = 'Medium'
    Large = 'Large'


class SupportedGatewayCapacities(BaseModel):
    __root__: List[GatewayCapacity]


class FileShareARNList(BaseModel):
    __root__: Annotated[List[FileShareARN], Field(max_items=10, min_items=1)]


class DomainName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1024,
            min_length=1,
            regex='^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$',
        ),
    ]


class SMBSecurityStrategy(Enum):
    ClientSpecified = 'ClientSpecified'
    MandatorySigning = 'MandatorySigning'
    MandatoryEncryption = 'MandatoryEncryption'


class RecurrenceInHours(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=24.0)]


class Description(FileShareName):
    pass


class Marker(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class PositiveIntObject(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class DeviceType(TapeDriveType):
    pass


class Integer(TapeSize):
    pass


class DeviceiSCSIAttributes(BaseModel):
    """
    Lists iSCSI information about a VTL device.
    """

    TargetARN: Optional[TargetARN] = None
    NetworkInterfaceId: Optional[NetworkInterfaceId] = None
    NetworkInterfacePort: Optional[Integer] = None
    ChapEnabled: Optional[Boolean] = None


class DiskAllocationType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='<p>One of the <code>DiskAllocationType</code> enumeration values that identifies how a local disk is used.</p> <p>Valid Values: <code>UPLOAD_BUFFER</code> | <code>CACHE_STORAGE</code> </p>',
            max_length=100,
            min_length=3,
        ),
    ]


class DiskAttribute(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class IPV4AddressCIDR(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))?$'
        ),
    ]


class FileShareId(BaseModel):
    __root__: Annotated[
        str,
        Field(description='The ID of the file share.', max_length=30, min_length=12),
    ]


class FileShareType(Enum):
    """
    The type of the file share.
    """

    NFS = 'NFS'
    SMB = 'SMB'


class FileShareStatus(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='<p>The status of the file share.</p> <p>Valid Values: <code>CREATING</code> | <code>UPDATING</code> | <code>AVAILABLE</code> | <code>DELETING</code> </p>',
            max_length=50,
            min_length=3,
        ),
    ]


class FileShareInfo(BaseModel):
    """
    Describes a file share. Only supported S3 File Gateway.
    """

    FileShareType: Optional[FileShareType] = None
    FileShareARN: Optional[FileShareARN] = None
    FileShareId: Optional[FileShareId] = None
    FileShareStatus: Optional[FileShareStatus] = None
    GatewayARN: Optional[GatewayARN] = None


class FileShareInfoList(BaseModel):
    __root__: List[FileShareInfo]


class FileSystemAssociationId(BaseModel):
    __root__: Annotated[str, Field(max_length=30, min_length=10)]


class FileSystemAssociationStatus(VolumeStatus):
    pass


class FileSystemAssociationSummary(BaseModel):
    """
    Gets the summary returned by <code>ListFileSystemAssociation</code>, which is a summary of a created file system association.
    """

    FileSystemAssociationId: Optional[FileSystemAssociationId] = None
    FileSystemAssociationARN: Optional[FileSystemAssociationARN] = None
    FileSystemAssociationStatus: Optional[FileSystemAssociationStatus] = None
    GatewayARN: Optional[GatewayARN] = None


class FileSystemAssociationSummaryList(BaseModel):
    __root__: List[FileSystemAssociationSummary]


class Folder(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class FolderList(BaseModel):
    __root__: Annotated[List[Folder], Field(max_items=50, min_items=1)]


class GatewayOperationalState(GatewayState):
    pass


class GatewayInfo(BaseModel):
    """
    Describes a gateway object.
    """

    GatewayId: Optional[GatewayId] = None
    GatewayARN: Optional[GatewayARN] = None
    GatewayType: Optional[GatewayType] = None
    GatewayOperationalState: Optional[GatewayOperationalState] = None
    GatewayName: Optional[String] = None
    Ec2InstanceId: Optional[Ec2InstanceId] = None
    Ec2InstanceRegion: Optional[Ec2InstanceRegion] = None


class NetworkInterface(BaseModel):
    """
    Describes a gateway's network interface.
    """

    Ipv4Address: Optional[String] = None
    MacAddress: Optional[String] = None
    Ipv6Address: Optional[String] = None


class Gateways(BaseModel):
    __root__: List[GatewayInfo]


class Host(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1024,
            min_length=6,
            regex='^(([a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9\\-]*[A-Za-z0-9])(:(\\d+))?$',
        ),
    ]


class Hosts(BaseModel):
    __root__: List[Host]


class IPV4Address(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=15,
            min_length=7,
            regex='^((25[0-5]|(2[0-4]|1[0-9]|[1-9]|)[0-9])(\\.(?!$)|$)){4}',
        ),
    ]


class Initiator(ActivationKey):
    pass


class Initiators(BaseModel):
    __root__: List[Initiator]


class OrganizationalUnit(Folder):
    pass


class TimeoutInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=3600.0)]


class PoolARNs(BaseModel):
    __root__: List[PoolARN]


class LocalConsolePassword(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=512, min_length=6, regex='^[ -~]+$')
    ]


class PermissionMode(BaseModel):
    __root__: Annotated[str, Field(max_length=4, min_length=1, regex='^[0-7]{4}$')]


class PermissionId(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4294967294.0)]


class Path(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The file share path used by the NFS client to identify the mount point.'
        ),
    ]


class NotificationId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The randomly generated ID of the notification that was sent. This ID is in UUID format.',
            max_length=2048,
            min_length=1,
        ),
    ]


class PoolStatus(Enum):
    ACTIVE = 'ACTIVE'
    DELETED = 'DELETED'


class PoolInfo(BaseModel):
    """
    Describes a custom tape pool.
    """

    PoolARN: Optional[PoolARN] = None
    PoolName: Optional[PoolName] = None
    StorageClass: Optional[TapeStorageClass] = None
    RetentionLockType: Optional[RetentionLockType] = None
    RetentionLockTimeInDays: Optional[RetentionLockTimeInDays] = None
    PoolStatus: Optional[PoolStatus] = None


class SMBGuestPassword(LocalConsolePassword):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class Tag(BaseModel):
    """
    A key-value pair that helps you manage, filter, and search for your resource. Allowed characters: letters, white space, and numbers, representable in UTF-8, and the following characters: + - = . _ : /.
    """

    Key: TagKey
    Value: TagValue


class TapeStatus(String):
    pass


class VTLDeviceARN(ResourceARN):
    pass


class TapeUsage(TapeSize):
    pass


class Tape(BaseModel):
    """
    Describes a virtual tape object.
    """

    TapeARN: Optional[TapeARN] = None
    TapeBarcode: Optional[TapeBarcode] = None
    TapeCreatedDate: Optional[Time] = None
    TapeSizeInBytes: Optional[TapeSize] = None
    TapeStatus: Optional[TapeStatus] = None
    VTLDevice: Optional[VTLDeviceARN] = None
    Progress: Optional[DoubleObject] = None
    TapeUsedInBytes: Optional[TapeUsage] = None
    KMSKey: Optional[KMSKey] = None
    PoolId: Optional[PoolId] = None
    Worm: Optional[Boolean] = None
    RetentionStartDate: Optional[Time] = None
    PoolEntryDate: Optional[Time] = None


class TapeArchiveStatus(String):
    pass


class TapeArchive(BaseModel):
    """
    Represents a virtual tape that is archived in the virtual tape shelf (VTS).
    """

    TapeARN: Optional[TapeARN] = None
    TapeBarcode: Optional[TapeBarcode] = None
    TapeCreatedDate: Optional[Time] = None
    TapeSizeInBytes: Optional[TapeSize] = None
    CompletionTime: Optional[Time] = None
    RetrievedTo: Optional[GatewayARN] = None
    TapeStatus: Optional[TapeArchiveStatus] = None
    TapeUsedInBytes: Optional[TapeUsage] = None
    KMSKey: Optional[KMSKey] = None
    PoolId: Optional[PoolId] = None
    Worm: Optional[Boolean] = None
    RetentionStartDate: Optional[Time] = None
    PoolEntryDate: Optional[Time] = None


class TapeInfo(BaseModel):
    """
    Describes a virtual tape.
    """

    TapeARN: Optional[TapeARN] = None
    TapeBarcode: Optional[TapeBarcode] = None
    TapeSizeInBytes: Optional[TapeSize] = None
    TapeStatus: Optional[TapeStatus] = None
    GatewayARN: Optional[GatewayARN] = None
    PoolId: Optional[PoolId] = None
    RetentionStartDate: Optional[Time] = None
    PoolEntryDate: Optional[Time] = None


class TapeRecoveryPointStatus(String):
    pass


class TapeRecoveryPointInfo(BaseModel):
    """
    Describes a recovery point.
    """

    TapeARN: Optional[TapeARN] = None
    TapeRecoveryPointTime: Optional[Time] = None
    TapeSizeInBytes: Optional[TapeSize] = None
    TapeStatus: Optional[TapeRecoveryPointStatus] = None


class UserListUser(DiskAttribute):
    pass


class VTLDeviceType(String):
    pass


class VTLDeviceVendor(String):
    pass


class VTLDeviceProductIdentifier(String):
    pass


class VTLDevice(BaseModel):
    """
    Represents a device object associated with a tape gateway.
    """

    VTLDeviceARN: Optional[VTLDeviceARN] = None
    VTLDeviceType: Optional[VTLDeviceType] = None
    VTLDeviceVendor: Optional[VTLDeviceVendor] = None
    VTLDeviceProductIdentifier: Optional[VTLDeviceProductIdentifier] = None
    DeviceiSCSIAttributes: Optional[DeviceiSCSIAttributes] = None


class VolumeInfo(BaseModel):
    """
    Describes a storage volume object.
    """

    VolumeARN: Optional[VolumeARN] = None
    VolumeId: Optional[VolumeId] = None
    GatewayARN: Optional[GatewayARN] = None
    GatewayId: Optional[GatewayId] = None
    VolumeType: Optional[VolumeType] = None
    VolumeSizeInBytes: Optional[Long] = None
    VolumeAttachmentStatus: Optional[VolumeAttachmentStatus] = None


class VolumeRecoveryPointInfo(BaseModel):
    """
    Describes a storage volume recovery point object.
    """

    VolumeARN: Optional[VolumeARN] = None
    VolumeSizeInBytes: Optional[Long] = None
    VolumeUsageInBytes: Optional[Long] = None
    VolumeRecoveryPointTime: Optional[String] = None


class ActivateGatewayOutput(BaseModel):
    """
    <p>Storage Gateway returns the Amazon Resource Name (ARN) of the activated gateway. It is a string made of information such as your account, gateway name, and Region. This ARN is used to reference the gateway in other API operations as well as resource-based authorization.</p> <note> <p>For gateways activated prior to September 02, 2015, the gateway ARN contains the gateway name rather than the gateway ID. Changing the name of the gateway has no effect on the gateway ARN.</p> </note>
    """

    GatewayARN: Optional[GatewayARN] = None


class AddCacheOutput(ActivateGatewayOutput):
    pass


class AddTagsToResourceOutput(BaseModel):
    """
    AddTagsToResourceOutput
    """

    ResourceARN: Optional[ResourceARN] = None


class AddUploadBufferOutput(ActivateGatewayOutput):
    pass


class AddWorkingStorageOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway for which working storage was configured.
    """

    pass


class AssignTapePoolOutput(BaseModel):
    TapeARN: Optional[TapeARN] = None


class AssignTapePoolInput(BaseModel):
    TapeARN: TapeARN
    PoolId: PoolId
    BypassGovernanceRetention: Optional[Boolean] = None


class AssociateFileSystemOutput(BaseModel):
    FileSystemAssociationARN: Optional[FileSystemAssociationARN] = None


class AttachVolumeOutput(BaseModel):
    """
    AttachVolumeOutput
    """

    VolumeARN: Optional[VolumeARN] = None
    TargetARN: Optional[TargetARN] = None


class AttachVolumeInput(BaseModel):
    """
    AttachVolumeInput
    """

    GatewayARN: GatewayARN
    TargetName: Optional[TargetName] = None
    VolumeARN: VolumeARN
    NetworkInterfaceId: NetworkInterfaceId
    DiskId: Optional[DiskId] = None


class CancelArchivalOutput(AssignTapePoolOutput):
    """
    CancelArchivalOutput
    """

    pass


class CancelArchivalInput(BaseModel):
    """
    CancelArchivalInput
    """

    GatewayARN: GatewayARN
    TapeARN: TapeARN


class CancelRetrievalOutput(AssignTapePoolOutput):
    """
    CancelRetrievalOutput
    """

    pass


class CancelRetrievalInput(BaseModel):
    """
    CancelRetrievalInput
    """

    GatewayARN: GatewayARN
    TapeARN: TapeARN


class CreateCachediSCSIVolumeOutput(AttachVolumeOutput):
    pass


class CreateNFSFileShareOutput(BaseModel):
    """
    CreateNFSFileShareOutput
    """

    FileShareARN: Optional[FileShareARN] = None


class CreateSMBFileShareOutput(CreateNFSFileShareOutput):
    """
    CreateSMBFileShareOutput
    """

    pass


class CreateSnapshotOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    VolumeARN: Optional[VolumeARN] = None
    SnapshotId: Optional[SnapshotId] = None


class CreateSnapshotFromVolumeRecoveryPointOutput(BaseModel):
    SnapshotId: Optional[SnapshotId] = None
    VolumeARN: Optional[VolumeARN] = None
    VolumeRecoveryPointTime: Optional[String] = None


class CreateStorediSCSIVolumeOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    VolumeARN: Optional[VolumeARN] = None
    VolumeSizeInBytes: Optional[Long] = None
    TargetARN: Optional[TargetARN] = None


class CreateTapePoolOutput(BaseModel):
    PoolARN: Optional[PoolARN] = None


class CreateTapeWithBarcodeOutput(AssignTapePoolOutput):
    """
    CreateTapeOutput
    """

    pass


class CreateTapesOutput(BaseModel):
    """
    CreateTapeOutput
    """

    TapeARNs: Optional[TapeARNs] = None


class DeleteAutomaticTapeCreationPolicyOutput(ActivateGatewayOutput):
    pass


class DeleteAutomaticTapeCreationPolicyInput(BaseModel):
    GatewayARN: GatewayARN


class DeleteBandwidthRateLimitOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway whose bandwidth rate information was deleted.
    """

    pass


class DeleteBandwidthRateLimitInput(BaseModel):
    """
    <p>A JSON object containing the following fields:</p> <ul> <li> <p> <a>DeleteBandwidthRateLimitInput$BandwidthType</a> </p> </li> </ul>
    """

    GatewayARN: GatewayARN
    BandwidthType: BandwidthType


class DeleteChapCredentialsOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    TargetARN: Optional[TargetARN] = None
    InitiatorName: Optional[IqnName] = None


class DeleteChapCredentialsInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>DeleteChapCredentialsInput$InitiatorName</a> </p> </li> <li> <p> <a>DeleteChapCredentialsInput$TargetARN</a> </p> </li> </ul>
    """

    TargetARN: TargetARN
    InitiatorName: IqnName


class DeleteFileShareOutput(CreateNFSFileShareOutput):
    """
    DeleteFileShareOutput
    """

    pass


class DeleteFileShareInput(BaseModel):
    """
    DeleteFileShareInput
    """

    FileShareARN: FileShareARN
    ForceDelete: Optional[Boolean] = None


class DeleteGatewayOutput(ActivateGatewayOutput):
    """
    A JSON object containing the ID of the deleted gateway.
    """

    pass


class DeleteGatewayInput(BaseModel):
    """
    A JSON object containing the ID of the gateway to delete.
    """

    GatewayARN: GatewayARN


class DeleteSnapshotScheduleOutput(BaseModel):
    VolumeARN: Optional[VolumeARN] = None


class DeleteSnapshotScheduleInput(BaseModel):
    VolumeARN: VolumeARN


class DeleteTapeOutput(AssignTapePoolOutput):
    """
    DeleteTapeOutput
    """

    pass


class DeleteTapeInput(BaseModel):
    """
    DeleteTapeInput
    """

    GatewayARN: GatewayARN
    TapeARN: TapeARN
    BypassGovernanceRetention: Optional[Boolean] = None


class DeleteTapeArchiveOutput(AssignTapePoolOutput):
    """
    DeleteTapeArchiveOutput
    """

    pass


class DeleteTapeArchiveInput(BaseModel):
    """
    DeleteTapeArchiveInput
    """

    TapeARN: TapeARN
    BypassGovernanceRetention: Optional[Boolean] = None


class DeleteTapePoolOutput(CreateTapePoolOutput):
    pass


class DeleteTapePoolInput(BaseModel):
    PoolARN: PoolARN


class DeleteVolumeOutput(DeleteSnapshotScheduleOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the storage volume that was deleted.
    """

    pass


class DeleteVolumeInput(BaseModel):
    """
    A JSON object containing the <a>DeleteVolumeInput$VolumeARN</a> to delete.
    """

    VolumeARN: VolumeARN


class DescribeAvailabilityMonitorTestOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    Status: Optional[AvailabilityMonitorTestStatus] = None
    StartTime: Optional[Time] = None


class DescribeAvailabilityMonitorTestInput(BaseModel):
    GatewayARN: GatewayARN


class DescribeBandwidthRateLimitOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    GatewayARN: Optional[GatewayARN] = None
    AverageUploadRateLimitInBitsPerSec: Optional[BandwidthUploadRateLimit] = None
    AverageDownloadRateLimitInBitsPerSec: Optional[BandwidthDownloadRateLimit] = None


class DescribeBandwidthRateLimitInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway.
    """

    GatewayARN: GatewayARN


class DescribeBandwidthRateLimitScheduleInput(BaseModel):
    GatewayARN: GatewayARN


class DescribeCacheInput(BaseModel):
    GatewayARN: GatewayARN


class DescribeCachediSCSIVolumesInput(BaseModel):
    VolumeARNs: VolumeARNs


class DescribeChapCredentialsInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the iSCSI volume target.
    """

    TargetARN: TargetARN


class DescribeFileSystemAssociationsInput(BaseModel):
    FileSystemAssociationARNList: FileSystemAssociationARNList


class DescribeGatewayInformationInput(BaseModel):
    """
    A JSON object containing the ID of the gateway.
    """

    GatewayARN: GatewayARN


class DescribeMaintenanceStartTimeOutput(BaseModel):
    """
    <p>A JSON object containing the following fields:</p> <ul> <li> <p> <a>DescribeMaintenanceStartTimeOutput$DayOfMonth</a> </p> </li> <li> <p> <a>DescribeMaintenanceStartTimeOutput$DayOfWeek</a> </p> </li> <li> <p> <a>DescribeMaintenanceStartTimeOutput$HourOfDay</a> </p> </li> <li> <p> <a>DescribeMaintenanceStartTimeOutput$MinuteOfHour</a> </p> </li> <li> <p> <a>DescribeMaintenanceStartTimeOutput$Timezone</a> </p> </li> </ul>
    """

    GatewayARN: Optional[GatewayARN] = None
    HourOfDay: Optional[HourOfDay] = None
    MinuteOfHour: Optional[MinuteOfHour] = None
    DayOfWeek: Optional[DayOfWeek] = None
    DayOfMonth: Optional[DayOfMonth] = None
    Timezone: Optional[GatewayTimezone] = None


class DescribeMaintenanceStartTimeInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway.
    """

    GatewayARN: GatewayARN


class DescribeNFSFileSharesInput(BaseModel):
    """
    DescribeNFSFileSharesInput
    """

    FileShareARNList: FileShareARNList


class DescribeSMBFileSharesInput(BaseModel):
    """
    DescribeSMBFileSharesInput
    """

    FileShareARNList: FileShareARNList


class DescribeSMBSettingsOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    DomainName: Optional[DomainName] = None
    ActiveDirectoryStatus: Optional[ActiveDirectoryStatus] = None
    SMBGuestPasswordSet: Optional[BooleanModel] = None
    SMBSecurityStrategy: Optional[SMBSecurityStrategy] = None
    FileSharesVisible: Optional[BooleanModel] = None


class DescribeSMBSettingsInput(BaseModel):
    GatewayARN: GatewayARN


class DescribeSnapshotScheduleInput(BaseModel):
    """
    A JSON object containing the <a>DescribeSnapshotScheduleInput$VolumeARN</a> of the volume.
    """

    VolumeARN: VolumeARN


class DescribeStorediSCSIVolumesInput(BaseModel):
    """
    A JSON object containing a list of <a>DescribeStorediSCSIVolumesInput$VolumeARNs</a>.
    """

    VolumeARNs: VolumeARNs


class DescribeTapeArchivesInput(BaseModel):
    """
    DescribeTapeArchivesInput
    """

    TapeARNs: Optional[TapeARNs] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class DescribeTapeRecoveryPointsInput(BaseModel):
    """
    DescribeTapeRecoveryPointsInput
    """

    GatewayARN: GatewayARN
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class DescribeTapesInput(BaseModel):
    """
    DescribeTapesInput
    """

    GatewayARN: GatewayARN
    TapeARNs: Optional[TapeARNs] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class DescribeUploadBufferInput(BaseModel):
    GatewayARN: GatewayARN


class DescribeWorkingStorageInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway.
    """

    GatewayARN: GatewayARN


class DetachVolumeOutput(DeleteSnapshotScheduleOutput):
    """
    AttachVolumeOutput
    """

    pass


class DetachVolumeInput(BaseModel):
    """
    AttachVolumeInput
    """

    VolumeARN: VolumeARN
    ForceDetach: Optional[BooleanModel] = None


class DisableGatewayOutput(ActivateGatewayOutput):
    """
    DisableGatewayOutput
    """

    pass


class DisableGatewayInput(BaseModel):
    """
    DisableGatewayInput
    """

    GatewayARN: GatewayARN


class DisassociateFileSystemOutput(AssociateFileSystemOutput):
    pass


class DisassociateFileSystemInput(BaseModel):
    FileSystemAssociationARN: FileSystemAssociationARN
    ForceDelete: Optional[Boolean] = None


class JoinDomainOutput(BaseModel):
    """
    JoinDomainOutput
    """

    GatewayARN: Optional[GatewayARN] = None
    ActiveDirectoryStatus: Optional[ActiveDirectoryStatus] = None


class JoinDomainInput(BaseModel):
    """
    JoinDomainInput
    """

    GatewayARN: GatewayARN
    DomainName: DomainName
    OrganizationalUnit: Optional[OrganizationalUnit] = None
    DomainControllers: Optional[Hosts] = None
    TimeoutInSeconds: Optional[TimeoutInSeconds] = None
    UserName: DomainUserName
    Password: DomainUserPassword


class ListAutomaticTapeCreationPoliciesInput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None


class ListFileSharesOutput(BaseModel):
    """
    ListFileShareOutput
    """

    Marker: Optional[Marker] = None
    NextMarker: Optional[Marker] = None
    FileShareInfoList: Optional[FileShareInfoList] = None


class ListFileSharesInput(BaseModel):
    """
    ListFileShareInput
    """

    GatewayARN: Optional[GatewayARN] = None
    Limit: Optional[PositiveIntObject] = None
    Marker: Optional[Marker] = None


class ListFileSystemAssociationsOutput(BaseModel):
    Marker: Optional[Marker] = None
    NextMarker: Optional[Marker] = None
    FileSystemAssociationSummaryList: Optional[FileSystemAssociationSummaryList] = None


class ListFileSystemAssociationsInput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    Limit: Optional[PositiveIntObject] = None
    Marker: Optional[Marker] = None


class ListGatewaysOutput(BaseModel):
    Gateways: Optional[Gateways] = None
    Marker: Optional[Marker] = None


class ListGatewaysInput(BaseModel):
    """
    <p>A JSON object containing zero or more of the following fields:</p> <ul> <li> <p> <a>ListGatewaysInput$Limit</a> </p> </li> <li> <p> <a>ListGatewaysInput$Marker</a> </p> </li> </ul>
    """

    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class ListLocalDisksInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway.
    """

    GatewayARN: GatewayARN


class ListTagsForResourceInput(BaseModel):
    """
    ListTagsForResourceInput
    """

    ResourceARN: ResourceARN
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class ListTapePoolsInput(BaseModel):
    PoolARNs: Optional[PoolARNs] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class ListTapesInput(BaseModel):
    """
    <p>A JSON object that contains one or more of the following fields:</p> <ul> <li> <p> <a>ListTapesInput$Limit</a> </p> </li> <li> <p> <a>ListTapesInput$Marker</a> </p> </li> <li> <p> <a>ListTapesInput$TapeARNs</a> </p> </li> </ul>
    """

    TapeARNs: Optional[TapeARNs] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class ListVolumeInitiatorsOutput(BaseModel):
    """
    ListVolumeInitiatorsOutput
    """

    Initiators: Optional[Initiators] = None


class ListVolumeInitiatorsInput(BaseModel):
    """
    ListVolumeInitiatorsInput
    """

    VolumeARN: VolumeARN


class ListVolumeRecoveryPointsInput(BaseModel):
    GatewayARN: GatewayARN


class ListVolumesInput(BaseModel):
    """
    <p>A JSON object that contains one or more of the following fields:</p> <ul> <li> <p> <a>ListVolumesInput$Limit</a> </p> </li> <li> <p> <a>ListVolumesInput$Marker</a> </p> </li> </ul>
    """

    GatewayARN: Optional[GatewayARN] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class NotifyWhenUploadedOutput(BaseModel):
    FileShareARN: Optional[FileShareARN] = None
    NotificationId: Optional[NotificationId] = None


class NotifyWhenUploadedInput(BaseModel):
    FileShareARN: FileShareARN


class RefreshCacheOutput(NotifyWhenUploadedOutput):
    """
    RefreshCacheOutput
    """

    pass


class RefreshCacheInput(BaseModel):
    """
    RefreshCacheInput
    """

    FileShareARN: FileShareARN
    FolderList: Optional[FolderList] = None
    Recursive: Optional[BooleanModel] = None


class RemoveTagsFromResourceOutput(AddTagsToResourceOutput):
    """
    RemoveTagsFromResourceOutput
    """

    pass


class ResetCacheOutput(ActivateGatewayOutput):
    pass


class ResetCacheInput(BaseModel):
    GatewayARN: GatewayARN


class RetrieveTapeArchiveOutput(AssignTapePoolOutput):
    """
    RetrieveTapeArchiveOutput
    """

    pass


class RetrieveTapeArchiveInput(BaseModel):
    """
    RetrieveTapeArchiveInput
    """

    TapeARN: TapeARN
    GatewayARN: GatewayARN


class RetrieveTapeRecoveryPointOutput(AssignTapePoolOutput):
    """
    RetrieveTapeRecoveryPointOutput
    """

    pass


class RetrieveTapeRecoveryPointInput(BaseModel):
    """
    RetrieveTapeRecoveryPointInput
    """

    TapeARN: TapeARN
    GatewayARN: GatewayARN


class SetLocalConsolePasswordOutput(ActivateGatewayOutput):
    pass


class SetLocalConsolePasswordInput(BaseModel):
    """
    SetLocalConsolePasswordInput
    """

    GatewayARN: GatewayARN
    LocalConsolePassword: LocalConsolePassword


class SetSMBGuestPasswordOutput(ActivateGatewayOutput):
    pass


class SetSMBGuestPasswordInput(BaseModel):
    """
    SetSMBGuestPasswordInput
    """

    GatewayARN: GatewayARN
    Password: SMBGuestPassword


class ShutdownGatewayOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway that was shut down.
    """

    pass


class ShutdownGatewayInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway to shut down.
    """

    GatewayARN: GatewayARN


class StartAvailabilityMonitorTestOutput(ActivateGatewayOutput):
    pass


class StartAvailabilityMonitorTestInput(BaseModel):
    GatewayARN: GatewayARN


class StartGatewayOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway that was restarted.
    """

    pass


class StartGatewayInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway to start.
    """

    GatewayARN: GatewayARN


class UpdateAutomaticTapeCreationPolicyOutput(ActivateGatewayOutput):
    pass


class UpdateBandwidthRateLimitOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway whose throttle information was updated.
    """

    pass


class UpdateBandwidthRateLimitInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>UpdateBandwidthRateLimitInput$AverageDownloadRateLimitInBitsPerSec</a> </p> </li> <li> <p> <a>UpdateBandwidthRateLimitInput$AverageUploadRateLimitInBitsPerSec</a> </p> </li> </ul>
    """

    GatewayARN: GatewayARN
    AverageUploadRateLimitInBitsPerSec: Optional[BandwidthUploadRateLimit] = None
    AverageDownloadRateLimitInBitsPerSec: Optional[BandwidthDownloadRateLimit] = None


class UpdateBandwidthRateLimitScheduleOutput(ActivateGatewayOutput):
    pass


class UpdateChapCredentialsOutput(DeleteChapCredentialsOutput):
    """
    A JSON object containing the following fields:
    """

    pass


class UpdateChapCredentialsInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>UpdateChapCredentialsInput$InitiatorName</a> </p> </li> <li> <p> <a>UpdateChapCredentialsInput$SecretToAuthenticateInitiator</a> </p> </li> <li> <p> <a>UpdateChapCredentialsInput$SecretToAuthenticateTarget</a> </p> </li> <li> <p> <a>UpdateChapCredentialsInput$TargetARN</a> </p> </li> </ul>
    """

    TargetARN: TargetARN
    SecretToAuthenticateInitiator: ChapSecret
    InitiatorName: IqnName
    SecretToAuthenticateTarget: Optional[ChapSecret] = None


class UpdateFileSystemAssociationOutput(AssociateFileSystemOutput):
    pass


class UpdateGatewayInformationOutput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway that was updated.
    """

    GatewayARN: Optional[GatewayARN] = None
    GatewayName: Optional[String] = None


class UpdateGatewayInformationInput(BaseModel):
    GatewayARN: GatewayARN
    GatewayName: Optional[GatewayName] = None
    GatewayTimezone: Optional[GatewayTimezone] = None
    CloudWatchLogGroupARN: Optional[CloudWatchLogGroupARN] = None
    GatewayCapacity: Optional[GatewayCapacity] = None


class UpdateGatewaySoftwareNowOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway that was updated.
    """

    pass


class UpdateGatewaySoftwareNowInput(BaseModel):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway to update.
    """

    GatewayARN: GatewayARN


class UpdateMaintenanceStartTimeOutput(ActivateGatewayOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the gateway whose maintenance start time is updated.
    """

    pass


class UpdateMaintenanceStartTimeInput(BaseModel):
    """
    <p>A JSON object containing the following fields:</p> <ul> <li> <p> <a>UpdateMaintenanceStartTimeInput$DayOfMonth</a> </p> </li> <li> <p> <a>UpdateMaintenanceStartTimeInput$DayOfWeek</a> </p> </li> <li> <p> <a>UpdateMaintenanceStartTimeInput$HourOfDay</a> </p> </li> <li> <p> <a>UpdateMaintenanceStartTimeInput$MinuteOfHour</a> </p> </li> </ul>
    """

    GatewayARN: GatewayARN
    HourOfDay: HourOfDay
    MinuteOfHour: MinuteOfHour
    DayOfWeek: Optional[DayOfWeek] = None
    DayOfMonth: Optional[DayOfMonth] = None


class UpdateNFSFileShareOutput(CreateNFSFileShareOutput):
    """
    UpdateNFSFileShareOutput
    """

    pass


class UpdateSMBFileShareOutput(CreateNFSFileShareOutput):
    """
    UpdateSMBFileShareOutput
    """

    pass


class UpdateSMBFileShareVisibilityOutput(ActivateGatewayOutput):
    pass


class UpdateSMBFileShareVisibilityInput(BaseModel):
    GatewayARN: GatewayARN
    FileSharesVisible: BooleanModel


class UpdateSMBSecurityStrategyOutput(ActivateGatewayOutput):
    pass


class UpdateSMBSecurityStrategyInput(BaseModel):
    GatewayARN: GatewayARN
    SMBSecurityStrategy: SMBSecurityStrategy


class UpdateSnapshotScheduleOutput(DeleteSnapshotScheduleOutput):
    """
    A JSON object containing the Amazon Resource Name (ARN) of the updated storage volume.
    """

    pass


class UpdateVTLDeviceTypeOutput(BaseModel):
    """
    UpdateVTLDeviceTypeOutput
    """

    VTLDeviceARN: Optional[VTLDeviceARN] = None


class UpdateVTLDeviceTypeInput(BaseModel):
    VTLDeviceARN: VTLDeviceARN
    DeviceType: DeviceType


class Tags(BaseModel):
    __root__: List[Tag]


class DiskIds(BaseModel):
    __root__: List[DiskId]


class CacheAttributes(BaseModel):
    """
    The refresh cache information for the file share or FSx file systems.
    """

    CacheStaleTimeoutInSeconds: Optional[CacheStaleTimeoutInSeconds] = None


class AutomaticTapeCreationRules(BaseModel):
    __root__: Annotated[
        List[AutomaticTapeCreationRule], Field(max_items=10, min_items=1)
    ]


class AutomaticTapeCreationPolicyInfo(BaseModel):
    """
    Information about the gateway's automatic tape creation policies, including the automatic tape creation rules and the gateway that is using the policies.
    """

    AutomaticTapeCreationRules: Optional[AutomaticTapeCreationRules] = None
    GatewayARN: Optional[GatewayARN] = None


class AutomaticTapeCreationPolicyInfos(BaseModel):
    __root__: List[AutomaticTapeCreationPolicyInfo]


class DaysOfWeek(BaseModel):
    __root__: Annotated[List[DayOfWeek], Field(max_items=7, min_items=1)]


class BandwidthRateLimitInterval(BaseModel):
    """
    Describes a bandwidth rate limit interval for a gateway. A bandwidth rate limit schedule consists of one or more bandwidth rate limit intervals. A bandwidth rate limit interval defines a period of time on one or more days of the week, during which bandwidth rate limits are specified for uploading, downloading, or both.
    """

    StartHourOfDay: HourOfDay
    StartMinuteOfHour: MinuteOfHour
    EndHourOfDay: HourOfDay
    EndMinuteOfHour: MinuteOfHour
    DaysOfWeek: DaysOfWeek
    AverageUploadRateLimitInBitsPerSec: Optional[BandwidthUploadRateLimit] = None
    AverageDownloadRateLimitInBitsPerSec: Optional[BandwidthDownloadRateLimit] = None


class BandwidthRateLimitIntervals(BaseModel):
    __root__: Annotated[
        List[BandwidthRateLimitInterval], Field(max_items=20, min_items=0)
    ]


class VolumeiSCSIAttributes(BaseModel):
    """
    Lists iSCSI information about a volume.
    """

    TargetARN: Optional[TargetARN] = None
    NetworkInterfaceId: Optional[NetworkInterfaceId] = None
    NetworkInterfacePort: Optional[Integer] = None
    LunNumber: Optional[PositiveIntObject] = None
    ChapEnabled: Optional[Boolean] = None


class CachediSCSIVolume(BaseModel):
    """
    Describes an iSCSI cached volume.
    """

    VolumeARN: Optional[VolumeARN] = None
    VolumeId: Optional[VolumeId] = None
    VolumeType: Optional[VolumeType] = None
    VolumeStatus: Optional[VolumeStatus] = None
    VolumeAttachmentStatus: Optional[VolumeAttachmentStatus] = None
    VolumeSizeInBytes: Optional[Long] = None
    VolumeProgress: Optional[DoubleObject] = None
    SourceSnapshotId: Optional[SnapshotId] = None
    VolumeiSCSIAttributes: Optional[VolumeiSCSIAttributes] = None
    CreatedDate: Optional[CreatedDate] = None
    VolumeUsedInBytes: Optional[VolumeUsedInBytes] = None
    KMSKey: Optional[KMSKey] = None
    TargetName: Optional[TargetName] = None


class CachediSCSIVolumes(BaseModel):
    __root__: List[CachediSCSIVolume]


class ChapInfo(BaseModel):
    """
    Describes Challenge-Handshake Authentication Protocol (CHAP) information that supports authentication between your gateway and iSCSI initiators.
    """

    TargetARN: Optional[TargetARN] = None
    SecretToAuthenticateInitiator: Optional[ChapSecret] = None
    InitiatorName: Optional[IqnName] = None
    SecretToAuthenticateTarget: Optional[ChapSecret] = None


class ChapCredentials(BaseModel):
    __root__: List[ChapInfo]


class NFSFileShareDefaults(BaseModel):
    """
    Describes Network File System (NFS) file share default values. Files and folders stored as Amazon S3 objects in S3 buckets don't, by default, have Unix file permissions assigned to them. Upon discovery in an S3 bucket by Storage Gateway, the S3 objects that represent files and folders are assigned these default Unix permissions. This operation is only supported for S3 File Gateways.
    """

    FileMode: Optional[PermissionMode] = None
    DirectoryMode: Optional[PermissionMode] = None
    GroupId: Optional[PermissionId] = None
    OwnerId: Optional[PermissionId] = None


class FileShareClientList(BaseModel):
    """
    The list of clients that are allowed to access the S3 File Gateway. The list must contain either valid IP addresses or valid CIDR blocks.
    """

    __root__: Annotated[
        List[IPV4AddressCIDR],
        Field(
            description='The list of clients that are allowed to access the S3 File Gateway. The list must contain either valid IP addresses or valid CIDR blocks.',
            max_items=100,
            min_items=1,
        ),
    ]


class UserList(BaseModel):
    __root__: Annotated[List[UserListUser], Field(max_items=100, min_items=0)]


class GatewayNetworkInterfaces(BaseModel):
    __root__: List[NetworkInterface]


class TapeArchives(BaseModel):
    __root__: List[TapeArchive]


class TapeRecoveryPointInfos(BaseModel):
    __root__: List[TapeRecoveryPointInfo]


class Tapes(BaseModel):
    __root__: List[Tape]


class VTLDeviceARNs(BaseModel):
    __root__: List[VTLDeviceARN]


class VTLDevices(BaseModel):
    __root__: List[VTLDevice]


class DiskAttributeList(BaseModel):
    """
    A list of values that represents attributes of a local disk.
    """

    __root__: Annotated[
        List[DiskAttribute],
        Field(
            description='A list of values that represents attributes of a local disk.',
            max_items=10,
            min_items=0,
        ),
    ]


class Disk(BaseModel):
    """
    Represents a gateway's local disk.
    """

    DiskId: Optional[DiskId] = None
    DiskPath: Optional[String] = None
    DiskNode: Optional[String] = None
    DiskStatus: Optional[String] = None
    DiskSizeInBytes: Optional[Long] = None
    DiskAllocationType: Optional[DiskAllocationType] = None
    DiskAllocationResource: Optional[String] = None
    DiskAttributeList: Optional[DiskAttributeList] = None


class Disks(BaseModel):
    __root__: List[Disk]


class IpAddressList(BaseModel):
    __root__: Annotated[List[IPV4Address], Field(max_items=1, min_items=0)]


class PoolInfos(BaseModel):
    __root__: List[PoolInfo]


class TapeInfos(BaseModel):
    """
    An array of <a>TapeInfo</a> objects, where each object describes a single tape. If there are no tapes in the tape library or VTS, then the <code>TapeInfos</code> is an empty array.
    """

    __root__: Annotated[
        List[TapeInfo],
        Field(
            description='An array of <a>TapeInfo</a> objects, where each object describes a single tape. If there are no tapes in the tape library or VTS, then the <code>TapeInfos</code> is an empty array.'
        ),
    ]


class VolumeRecoveryPointInfos(BaseModel):
    __root__: List[VolumeRecoveryPointInfo]


class VolumeInfos(BaseModel):
    __root__: List[VolumeInfo]


class NFSFileShareInfo(BaseModel):
    """
    The Unix file permissions and ownership information assigned, by default, to native S3 objects when an S3 File Gateway discovers them in S3 buckets. This operation is only supported in S3 File Gateways.
    """

    NFSFileShareDefaults: Optional[NFSFileShareDefaults] = None
    FileShareARN: Optional[FileShareARN] = None
    FileShareId: Optional[FileShareId] = None
    FileShareStatus: Optional[FileShareStatus] = None
    GatewayARN: Optional[GatewayARN] = None
    KMSEncrypted: Optional[Boolean] = None
    KMSKey: Optional[KMSKey] = None
    Path: Optional[Path] = None
    Role: Optional[Role] = None
    LocationARN: Optional[LocationARN] = None
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ClientList: Optional[FileShareClientList] = None
    Squash: Optional[Squash] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    Tags: Optional[Tags] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None
    VPCEndpointDNSName: Optional[DNSHostName] = None
    BucketRegion: Optional[RegionId] = None


class TagKeys(BaseModel):
    __root__: List[TagKey]


class SMBFileShareInfo(BaseModel):
    """
    The Windows file permissions and ownership information assigned, by default, to native S3 objects when S3 File Gateway discovers them in S3 buckets. This operation is only supported for S3 File Gateways.
    """

    FileShareARN: Optional[FileShareARN] = None
    FileShareId: Optional[FileShareId] = None
    FileShareStatus: Optional[FileShareStatus] = None
    GatewayARN: Optional[GatewayARN] = None
    KMSEncrypted: Optional[Boolean] = None
    KMSKey: Optional[KMSKey] = None
    Path: Optional[Path] = None
    Role: Optional[Role] = None
    LocationARN: Optional[LocationARN] = None
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    SMBACLEnabled: Optional[BooleanModel] = None
    AccessBasedEnumeration: Optional[BooleanModel] = None
    AdminUserList: Optional[UserList] = None
    ValidUserList: Optional[UserList] = None
    InvalidUserList: Optional[UserList] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    Authentication: Optional[Authentication] = None
    CaseSensitivity: Optional[CaseSensitivity] = None
    Tags: Optional[Tags] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None
    VPCEndpointDNSName: Optional[DNSHostName] = None
    BucketRegion: Optional[RegionId] = None
    OplocksEnabled: Optional[BooleanModel] = None


class StorediSCSIVolume(BaseModel):
    """
    Describes an iSCSI stored volume.
    """

    VolumeARN: Optional[VolumeARN] = None
    VolumeId: Optional[VolumeId] = None
    VolumeType: Optional[VolumeType] = None
    VolumeStatus: Optional[VolumeStatus] = None
    VolumeAttachmentStatus: Optional[VolumeAttachmentStatus] = None
    VolumeSizeInBytes: Optional[Long] = None
    VolumeProgress: Optional[DoubleObject] = None
    VolumeDiskId: Optional[DiskId] = None
    SourceSnapshotId: Optional[SnapshotId] = None
    PreservedExistingData: Optional[Boolean] = None
    VolumeiSCSIAttributes: Optional[VolumeiSCSIAttributes] = None
    CreatedDate: Optional[CreatedDate] = None
    VolumeUsedInBytes: Optional[VolumeUsedInBytes] = None
    KMSKey: Optional[KMSKey] = None
    TargetName: Optional[TargetName] = None


class ActivateGatewayInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>ActivateGatewayInput$ActivationKey</a> </p> </li> <li> <p> <a>ActivateGatewayInput$GatewayName</a> </p> </li> <li> <p> <a>ActivateGatewayInput$GatewayRegion</a> </p> </li> <li> <p> <a>ActivateGatewayInput$GatewayTimezone</a> </p> </li> <li> <p> <a>ActivateGatewayInput$GatewayType</a> </p> </li> <li> <p> <a>ActivateGatewayInput$MediumChangerType</a> </p> </li> <li> <p> <a>ActivateGatewayInput$TapeDriveType</a> </p> </li> </ul>
    """

    ActivationKey: ActivationKey
    GatewayName: GatewayName
    GatewayTimezone: GatewayTimezone
    GatewayRegion: RegionId
    GatewayType: Optional[GatewayType] = None
    TapeDriveType: Optional[TapeDriveType] = None
    MediumChangerType: Optional[MediumChangerType] = None
    Tags: Optional[Tags] = None


class AddCacheInput(BaseModel):
    GatewayARN: GatewayARN
    DiskIds: DiskIds


class AddTagsToResourceInput(BaseModel):
    """
    AddTagsToResourceInput
    """

    ResourceARN: ResourceARN
    Tags: Tags


class AddUploadBufferInput(BaseModel):
    GatewayARN: GatewayARN
    DiskIds: DiskIds


class AddWorkingStorageInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>AddWorkingStorageInput$DiskIds</a> </p> </li> </ul>
    """

    GatewayARN: GatewayARN
    DiskIds: DiskIds


class CreateCachediSCSIVolumeInput(BaseModel):
    GatewayARN: GatewayARN
    VolumeSizeInBytes: Long
    SnapshotId: Optional[SnapshotId] = None
    TargetName: TargetName
    SourceVolumeARN: Optional[VolumeARN] = None
    NetworkInterfaceId: NetworkInterfaceId
    ClientToken: ClientToken
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    Tags: Optional[Tags] = None


class CreateNFSFileShareInput(BaseModel):
    """
    CreateNFSFileShareInput
    """

    ClientToken: ClientToken
    NFSFileShareDefaults: Optional[NFSFileShareDefaults] = None
    GatewayARN: GatewayARN
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    Role: Role
    LocationARN: LocationARN
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ClientList: Optional[FileShareClientList] = None
    Squash: Optional[Squash] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    Tags: Optional[Tags] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None
    VPCEndpointDNSName: Optional[DNSHostName] = None
    BucketRegion: Optional[RegionId] = None


class CreateSMBFileShareInput(BaseModel):
    """
    CreateSMBFileShareInput
    """

    ClientToken: ClientToken
    GatewayARN: GatewayARN
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    Role: Role
    LocationARN: LocationARN
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    SMBACLEnabled: Optional[BooleanModel] = None
    AccessBasedEnumeration: Optional[BooleanModel] = None
    AdminUserList: Optional[UserList] = None
    ValidUserList: Optional[UserList] = None
    InvalidUserList: Optional[UserList] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    Authentication: Optional[Authentication] = None
    CaseSensitivity: Optional[CaseSensitivity] = None
    Tags: Optional[Tags] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None
    VPCEndpointDNSName: Optional[DNSHostName] = None
    BucketRegion: Optional[RegionId] = None
    OplocksEnabled: Optional[BooleanModel] = None


class CreateSnapshotInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>CreateSnapshotInput$SnapshotDescription</a> </p> </li> <li> <p> <a>CreateSnapshotInput$VolumeARN</a> </p> </li> </ul>
    """

    VolumeARN: VolumeARN
    SnapshotDescription: SnapshotDescription
    Tags: Optional[Tags] = None


class CreateSnapshotFromVolumeRecoveryPointInput(BaseModel):
    VolumeARN: VolumeARN
    SnapshotDescription: SnapshotDescription
    Tags: Optional[Tags] = None


class CreateStorediSCSIVolumeInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>CreateStorediSCSIVolumeInput$DiskId</a> </p> </li> <li> <p> <a>CreateStorediSCSIVolumeInput$NetworkInterfaceId</a> </p> </li> <li> <p> <a>CreateStorediSCSIVolumeInput$PreserveExistingData</a> </p> </li> <li> <p> <a>CreateStorediSCSIVolumeInput$SnapshotId</a> </p> </li> <li> <p> <a>CreateStorediSCSIVolumeInput$TargetName</a> </p> </li> </ul>
    """

    GatewayARN: GatewayARN
    DiskId: DiskId
    SnapshotId: Optional[SnapshotId] = None
    PreserveExistingData: Boolean
    TargetName: TargetName
    NetworkInterfaceId: NetworkInterfaceId
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    Tags: Optional[Tags] = None


class CreateTapePoolInput(BaseModel):
    PoolName: PoolName
    StorageClass: TapeStorageClass
    RetentionLockType: Optional[RetentionLockType] = None
    RetentionLockTimeInDays: Optional[RetentionLockTimeInDays] = None
    Tags: Optional[Tags] = None


class CreateTapeWithBarcodeInput(BaseModel):
    """
    CreateTapeWithBarcodeInput
    """

    GatewayARN: GatewayARN
    TapeSizeInBytes: TapeSize
    TapeBarcode: TapeBarcode
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    PoolId: Optional[PoolId] = None
    Worm: Optional[Boolean] = None
    Tags: Optional[Tags] = None


class CreateTapesInput(BaseModel):
    """
    CreateTapesInput
    """

    GatewayARN: GatewayARN
    TapeSizeInBytes: TapeSize
    ClientToken: ClientToken
    NumTapesToCreate: NumTapesToCreate
    TapeBarcodePrefix: TapeBarcodePrefix
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    PoolId: Optional[PoolId] = None
    Worm: Optional[Boolean] = None
    Tags: Optional[Tags] = None


class DescribeBandwidthRateLimitScheduleOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    BandwidthRateLimitIntervals: Optional[BandwidthRateLimitIntervals] = None


class DescribeCacheOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    DiskIds: Optional[DiskIds] = None
    CacheAllocatedInBytes: Optional[Long] = None
    CacheUsedPercentage: Optional[Double] = None
    CacheDirtyPercentage: Optional[Double] = None
    CacheHitPercentage: Optional[Double] = None
    CacheMissPercentage: Optional[Double] = None


class DescribeCachediSCSIVolumesOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    CachediSCSIVolumes: Optional[CachediSCSIVolumes] = None


class DescribeChapCredentialsOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    ChapCredentials: Optional[ChapCredentials] = None


class DescribeGatewayInformationOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    GatewayARN: Optional[GatewayARN] = None
    GatewayId: Optional[GatewayId] = None
    GatewayName: Optional[String] = None
    GatewayTimezone: Optional[GatewayTimezone] = None
    GatewayState: Optional[GatewayState] = None
    GatewayNetworkInterfaces: Optional[GatewayNetworkInterfaces] = None
    GatewayType: Optional[GatewayType] = None
    NextUpdateAvailabilityDate: Optional[NextUpdateAvailabilityDate] = None
    LastSoftwareUpdate: Optional[LastSoftwareUpdate] = None
    Ec2InstanceId: Optional[Ec2InstanceId] = None
    Ec2InstanceRegion: Optional[Ec2InstanceRegion] = None
    Tags: Optional[Tags] = None
    VPCEndpoint: Optional[String] = None
    CloudWatchLogGroupARN: Optional[CloudWatchLogGroupARN] = None
    HostEnvironment: Optional[HostEnvironment] = None
    EndpointType: Optional[EndpointType] = None
    SoftwareUpdatesEndDate: Optional[SoftwareUpdatesEndDate] = None
    DeprecationDate: Optional[DeprecationDate] = None
    GatewayCapacity: Optional[GatewayCapacity] = None
    SupportedGatewayCapacities: Optional[SupportedGatewayCapacities] = None


class DescribeSnapshotScheduleOutput(BaseModel):
    VolumeARN: Optional[VolumeARN] = None
    StartAt: Optional[HourOfDay] = None
    RecurrenceInHours: Optional[RecurrenceInHours] = None
    Description: Optional[Description] = None
    Timezone: Optional[GatewayTimezone] = None
    Tags: Optional[Tags] = None


class DescribeTapeArchivesOutput(BaseModel):
    """
    DescribeTapeArchivesOutput
    """

    TapeArchives: Optional[TapeArchives] = None
    Marker: Optional[Marker] = None


class DescribeTapeRecoveryPointsOutput(BaseModel):
    """
    DescribeTapeRecoveryPointsOutput
    """

    GatewayARN: Optional[GatewayARN] = None
    TapeRecoveryPointInfos: Optional[TapeRecoveryPointInfos] = None
    Marker: Optional[Marker] = None


class DescribeTapesOutput(BaseModel):
    """
    DescribeTapesOutput
    """

    Tapes: Optional[Tapes] = None
    Marker: Optional[Marker] = None


class DescribeUploadBufferOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    DiskIds: Optional[DiskIds] = None
    UploadBufferUsedInBytes: Optional[Long] = None
    UploadBufferAllocatedInBytes: Optional[Long] = None


class DescribeVTLDevicesOutput(BaseModel):
    """
    DescribeVTLDevicesOutput
    """

    GatewayARN: Optional[GatewayARN] = None
    VTLDevices: Optional[VTLDevices] = None
    Marker: Optional[Marker] = None


class DescribeVTLDevicesInput(BaseModel):
    """
    DescribeVTLDevicesInput
    """

    GatewayARN: GatewayARN
    VTLDeviceARNs: Optional[VTLDeviceARNs] = None
    Marker: Optional[Marker] = None
    Limit: Optional[PositiveIntObject] = None


class DescribeWorkingStorageOutput(BaseModel):
    """
    A JSON object containing the following fields:
    """

    GatewayARN: Optional[GatewayARN] = None
    DiskIds: Optional[DiskIds] = None
    WorkingStorageUsedInBytes: Optional[Long] = None
    WorkingStorageAllocatedInBytes: Optional[Long] = None


class ListAutomaticTapeCreationPoliciesOutput(BaseModel):
    AutomaticTapeCreationPolicyInfos: Optional[AutomaticTapeCreationPolicyInfos] = None


class ListLocalDisksOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    Disks: Optional[Disks] = None


class ListTagsForResourceOutput(BaseModel):
    """
    ListTagsForResourceOutput
    """

    ResourceARN: Optional[ResourceARN] = None
    Marker: Optional[Marker] = None
    Tags: Optional[Tags] = None


class ListTapePoolsOutput(BaseModel):
    PoolInfos: Optional[PoolInfos] = None
    Marker: Optional[Marker] = None


class ListTapesOutput(BaseModel):
    """
    <p>A JSON object containing the following fields:</p> <ul> <li> <p> <a>ListTapesOutput$Marker</a> </p> </li> <li> <p> <a>ListTapesOutput$VolumeInfos</a> </p> </li> </ul>
    """

    TapeInfos: Optional[TapeInfos] = None
    Marker: Optional[Marker] = None


class ListVolumeRecoveryPointsOutput(BaseModel):
    GatewayARN: Optional[GatewayARN] = None
    VolumeRecoveryPointInfos: Optional[VolumeRecoveryPointInfos] = None


class ListVolumesOutput(BaseModel):
    """
    <p>A JSON object containing the following fields:</p> <ul> <li> <p> <a>ListVolumesOutput$Marker</a> </p> </li> <li> <p> <a>ListVolumesOutput$VolumeInfos</a> </p> </li> </ul>
    """

    GatewayARN: Optional[GatewayARN] = None
    Marker: Optional[Marker] = None
    VolumeInfos: Optional[VolumeInfos] = None


class RemoveTagsFromResourceInput(BaseModel):
    """
    RemoveTagsFromResourceInput
    """

    ResourceARN: ResourceARN
    TagKeys: TagKeys


class UpdateAutomaticTapeCreationPolicyInput(BaseModel):
    AutomaticTapeCreationRules: AutomaticTapeCreationRules
    GatewayARN: GatewayARN


class UpdateBandwidthRateLimitScheduleInput(BaseModel):
    GatewayARN: GatewayARN
    BandwidthRateLimitIntervals: BandwidthRateLimitIntervals


class UpdateFileSystemAssociationInput(BaseModel):
    FileSystemAssociationARN: FileSystemAssociationARN
    UserName: Optional[DomainUserName] = None
    Password: Optional[DomainUserPassword] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    CacheAttributes: Optional[CacheAttributes] = None


class UpdateNFSFileShareInput(BaseModel):
    """
    UpdateNFSFileShareInput
    """

    FileShareARN: FileShareARN
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    NFSFileShareDefaults: Optional[NFSFileShareDefaults] = None
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ClientList: Optional[FileShareClientList] = None
    Squash: Optional[Squash] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None


class UpdateSMBFileShareInput(BaseModel):
    """
    UpdateSMBFileShareInput
    """

    FileShareARN: FileShareARN
    KMSEncrypted: Optional[BooleanModel] = None
    KMSKey: Optional[KMSKey] = None
    DefaultStorageClass: Optional[StorageClass] = None
    ObjectACL: Optional[ObjectACL] = None
    ReadOnly: Optional[BooleanModel] = None
    GuessMIMETypeEnabled: Optional[BooleanModel] = None
    RequesterPays: Optional[BooleanModel] = None
    SMBACLEnabled: Optional[BooleanModel] = None
    AccessBasedEnumeration: Optional[BooleanModel] = None
    AdminUserList: Optional[UserList] = None
    ValidUserList: Optional[UserList] = None
    InvalidUserList: Optional[UserList] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    CaseSensitivity: Optional[CaseSensitivity] = None
    FileShareName: Optional[FileShareName] = None
    CacheAttributes: Optional[CacheAttributes] = None
    NotificationPolicy: Optional[NotificationPolicy] = None
    OplocksEnabled: Optional[BooleanModel] = None


class UpdateSnapshotScheduleInput(BaseModel):
    """
    <p>A JSON object containing one or more of the following fields:</p> <ul> <li> <p> <a>UpdateSnapshotScheduleInput$Description</a> </p> </li> <li> <p> <a>UpdateSnapshotScheduleInput$RecurrenceInHours</a> </p> </li> <li> <p> <a>UpdateSnapshotScheduleInput$StartAt</a> </p> </li> <li> <p> <a>UpdateSnapshotScheduleInput$VolumeARN</a> </p> </li> </ul>
    """

    VolumeARN: VolumeARN
    StartAt: HourOfDay
    RecurrenceInHours: RecurrenceInHours
    Description: Optional[Description] = None
    Tags: Optional[Tags] = None


class EndpointNetworkConfiguration(BaseModel):
    """
    Specifies network configuration information for the gateway associated with the Amazon FSx file system.
    """

    IpAddresses: Optional[IpAddressList] = None


class NFSFileShareInfoList(BaseModel):
    __root__: List[NFSFileShareInfo]


class SMBFileShareInfoList(BaseModel):
    __root__: List[SMBFileShareInfo]


class StorediSCSIVolumes(BaseModel):
    __root__: List[StorediSCSIVolume]


class FileSystemAssociationInfo(BaseModel):
    """
    Describes the object returned by <code>DescribeFileSystemAssociations</code> that describes a created file system association.
    """

    FileSystemAssociationARN: Optional[FileSystemAssociationARN] = None
    LocationARN: Optional[FileSystemLocationARN] = None
    FileSystemAssociationStatus: Optional[FileSystemAssociationStatus] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    GatewayARN: Optional[GatewayARN] = None
    Tags: Optional[Tags] = None
    CacheAttributes: Optional[CacheAttributes] = None
    EndpointNetworkConfiguration: Optional[EndpointNetworkConfiguration] = None


class AssociateFileSystemInput(BaseModel):
    UserName: DomainUserName
    Password: DomainUserPassword
    ClientToken: ClientToken
    GatewayARN: GatewayARN
    LocationARN: FileSystemLocationARN
    Tags: Optional[Tags] = None
    AuditDestinationARN: Optional[AuditDestinationARN] = None
    CacheAttributes: Optional[CacheAttributes] = None
    EndpointNetworkConfiguration: Optional[EndpointNetworkConfiguration] = None


class DescribeNFSFileSharesOutput(BaseModel):
    """
    DescribeNFSFileSharesOutput
    """

    NFSFileShareInfoList: Optional[NFSFileShareInfoList] = None


class DescribeSMBFileSharesOutput(BaseModel):
    """
    DescribeSMBFileSharesOutput
    """

    SMBFileShareInfoList: Optional[SMBFileShareInfoList] = None


class DescribeStorediSCSIVolumesOutput(BaseModel):
    StorediSCSIVolumes: Optional[StorediSCSIVolumes] = None


class FileSystemAssociationInfoList(BaseModel):
    __root__: List[FileSystemAssociationInfo]


class DescribeFileSystemAssociationsOutput(BaseModel):
    FileSystemAssociationInfoList: Optional[FileSystemAssociationInfoList] = None

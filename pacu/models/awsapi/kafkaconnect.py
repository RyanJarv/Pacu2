# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:13+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class KafkaClusterClientAuthenticationType(Enum):
    NONE = 'NONE'
    IAM = 'IAM'


class KafkaClusterEncryptionInTransitType(Enum):
    PLAINTEXT = 'PLAINTEXT'
    TLS = 'TLS'


class _LongMin1(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=9.223372036854776e18)]


class NotFoundException(BaseModel):
    __root__: Any


class ConflictException(NotFoundException):
    pass


class BadRequestException(NotFoundException):
    pass


class ForbiddenException(NotFoundException):
    pass


class ServiceUnavailableException(NotFoundException):
    pass


class TooManyRequestsException(NotFoundException):
    pass


class UnauthorizedException(NotFoundException):
    pass


class InternalServerErrorException(NotFoundException):
    pass


class S3Location(BaseModel):
    """
    The location of an object in Amazon S3.
    """

    bucketArn: _String
    fileKey: _String
    objectVersion: Optional[_String] = None


class _IntegerMin1Max10(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class _IntegerMin1Max8(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=8.0)]


class _Integer(BaseModel):
    __root__: int


class ScaleInPolicyDescription(BaseModel):
    """
    The description of the scale-in policy for the connector.
    """

    cpuUtilizationPercentage: Optional[_Integer] = None


class ScaleOutPolicyDescription(ScaleInPolicyDescription):
    """
    The description of the scale-out policy for the connector.
    """

    pass


class AutoScalingDescription(BaseModel):
    """
    Information about the auto scaling parameters for the connector.
    """

    maxWorkerCount: Optional[_Integer] = None
    mcuCount: Optional[_Integer] = None
    minWorkerCount: Optional[_Integer] = None
    scaleInPolicy: Optional[ScaleInPolicyDescription] = None
    scaleOutPolicy: Optional[ScaleOutPolicyDescription] = None


class ProvisionedCapacityDescription(BaseModel):
    """
    The description of a connector's provisioned capacity.
    """

    mcuCount: Optional[_Integer] = None
    workerCount: Optional[_Integer] = None


class CapacityDescription(BaseModel):
    """
    A description of the connector's capacity.
    """

    autoScaling: Optional[AutoScalingDescription] = None
    provisionedCapacity: Optional[ProvisionedCapacityDescription] = None


class _Boolean(BaseModel):
    __root__: bool


class CloudWatchLogsLogDelivery(BaseModel):
    """
    The settings for delivering connector logs to Amazon CloudWatch Logs.
    """

    enabled: _Boolean
    logGroup: Optional[_String] = None


class CloudWatchLogsLogDeliveryDescription(BaseModel):
    """
    A description of the log delivery settings.
    """

    enabled: Optional[_Boolean] = None
    logGroup: Optional[_String] = None


class ConnectorState(Enum):
    RUNNING = 'RUNNING'
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class _TimestampIso8601(BaseModel):
    __root__: datetime


class KafkaClusterClientAuthenticationDescription(BaseModel):
    """
    The client authentication information used in order to authenticate with the Apache Kafka cluster.
    """

    authenticationType: Optional[KafkaClusterClientAuthenticationType] = None


class KafkaClusterEncryptionInTransitDescription(BaseModel):
    """
    The description of the encryption in transit to the Apache Kafka cluster.
    """

    encryptionType: Optional[KafkaClusterEncryptionInTransitType] = None


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class _StringMax1024(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0)]


class _StringMin1Max128(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class KafkaClusterClientAuthentication2(BaseModel):
    """
    The client authentication information used in order to authenticate with the Apache Kafka cluster.
    """

    authenticationType: KafkaClusterClientAuthenticationType


class KafkaClusterEncryptionInTransit2(BaseModel):
    """
    Details of encryption in transit to the Apache Kafka cluster.
    """

    encryptionType: KafkaClusterEncryptionInTransitType


class WorkerConfiguration2(BaseModel):
    """
    The configuration of the workers, which are the processes that run the connector logic.
    """

    revision: _LongMin1
    workerConfigurationArn: _String


class CustomPluginContentType(Enum):
    JAR = 'JAR'
    ZIP = 'ZIP'


class CustomPluginLocation(BaseModel):
    """
    Information about the location of a custom plugin.
    """

    s3Location: S3Location


class CreateCustomPluginRequest(BaseModel):
    contentType: CustomPluginContentType
    description: Optional[_StringMax1024] = None
    location: CustomPluginLocation
    name: _StringMin1Max128


class CustomPluginState(Enum):
    CREATING = 'CREATING'
    CREATE_FAILED = 'CREATE_FAILED'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    UPDATE_FAILED = 'UPDATE_FAILED'
    DELETING = 'DELETING'


class _Long(_Integer):
    pass


class CreateWorkerConfigurationRequest(BaseModel):
    description: Optional[_StringMax1024] = None
    name: _StringMin1Max128
    propertiesFileContent: _String


class WorkerConfigurationRevisionSummary(BaseModel):
    """
    The summary of a worker configuration revision.
    """

    creationTime: Optional[_TimestampIso8601] = None
    description: Optional[_String] = None
    revision: Optional[_Long] = None


class CustomPlugin(BaseModel):
    """
    A plugin is an AWS resource that contains the code that defines a connector's logic.
    """

    customPluginArn: _String
    revision: _LongMin1


class CustomPluginDescription(BaseModel):
    """
    Details about a custom plugin.
    """

    customPluginArn: Optional[_String] = None
    revision: Optional[_Long] = None


class CustomPluginFileDescription(BaseModel):
    """
    Details about a custom plugin file.
    """

    fileMd5: Optional[_String] = None
    fileSize: Optional[_Long] = None


class S3LocationDescription(BaseModel):
    """
    The description of the location of an object in Amazon S3.
    """

    bucketArn: Optional[_String] = None
    fileKey: Optional[_String] = None
    objectVersion: Optional[_String] = None


class CustomPluginLocationDescription(BaseModel):
    """
    Information about the location of a custom plugin.
    """

    s3Location: Optional[S3LocationDescription] = None


class CustomPluginRevisionSummary(BaseModel):
    """
    Details about the revision of a custom plugin.
    """

    contentType: Optional[CustomPluginContentType] = None
    creationTime: Optional[_TimestampIso8601] = None
    description: Optional[_String] = None
    fileDescription: Optional[CustomPluginFileDescription] = None
    location: Optional[CustomPluginLocationDescription] = None
    revision: Optional[_Long] = None


class CustomPluginSummary(BaseModel):
    """
    A summary of the custom plugin.
    """

    creationTime: Optional[_TimestampIso8601] = None
    customPluginArn: Optional[_String] = None
    customPluginState: Optional[CustomPluginState] = None
    description: Optional[_String] = None
    latestRevision: Optional[CustomPluginRevisionSummary] = None
    name: Optional[_String] = None


class DeleteConnectorRequest(BaseModel):
    pass


class DescribeConnectorRequest(BaseModel):
    pass


class DescribeCustomPluginRequest(BaseModel):
    pass


class DescribeWorkerConfigurationRequest(BaseModel):
    pass


class WorkerConfigurationRevisionDescription(BaseModel):
    """
    The description of the worker configuration revision.
    """

    creationTime: Optional[_TimestampIso8601] = None
    description: Optional[_String] = None
    propertiesFileContent: Optional[_String] = None
    revision: Optional[_Long] = None


class FirehoseLogDelivery(BaseModel):
    """
    The settings for delivering logs to Amazon Kinesis Data Firehose.
    """

    deliveryStream: Optional[_String] = None
    enabled: _Boolean


class FirehoseLogDeliveryDescription(BaseModel):
    """
    A description of the settings for delivering logs to Amazon Kinesis Data Firehose.
    """

    deliveryStream: Optional[_String] = None
    enabled: Optional[_Boolean] = None


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ListConnectorsRequest(BaseModel):
    pass


class ListCustomPluginsRequest(BaseModel):
    pass


class _ListOfCustomPluginSummary(BaseModel):
    __root__: List[CustomPluginSummary]


class ListWorkerConfigurationsRequest(BaseModel):
    pass


class PluginDescription(BaseModel):
    """
    The description of the plugin.
    """

    customPlugin: Optional[CustomPluginDescription] = None


class S3LogDelivery(BaseModel):
    """
    Details about delivering logs to Amazon S3.
    """

    bucket: Optional[_String] = None
    enabled: _Boolean
    prefix: Optional[_String] = None


class S3LogDeliveryDescription(BaseModel):
    """
    The description of the details about delivering logs to Amazon S3.
    """

    bucket: Optional[_String] = None
    enabled: Optional[_Boolean] = None
    prefix: Optional[_String] = None


class _IntegerMin1Max100(MaxResults):
    pass


class _ListOfString(BaseModel):
    __root__: List[_String]


class WorkerConfigurationSummary(BaseModel):
    """
    The summary of a worker configuration.
    """

    creationTime: Optional[_TimestampIso8601] = None
    description: Optional[_String] = None
    latestRevision: Optional[WorkerConfigurationRevisionSummary] = None
    name: Optional[_String] = None
    workerConfigurationArn: Optional[_String] = None


class CreateConnectorResponse(BaseModel):
    connectorArn: Optional[_String] = None
    connectorName: Optional[_String] = None
    connectorState: Optional[ConnectorState] = None


class ProvisionedCapacity(BaseModel):
    """
    Details about a connector's provisioned capacity.
    """

    mcuCount: _IntegerMin1Max8
    workerCount: _IntegerMin1Max10


class WorkerLogDelivery(BaseModel):
    """
    Workers can send worker logs to different destination types. This configuration specifies the details of these destinations.
    """

    cloudWatchLogs: Optional[CloudWatchLogsLogDelivery] = None
    firehose: Optional[FirehoseLogDelivery] = None
    s3: Optional[S3LogDelivery] = None


class Plugin(BaseModel):
    """
    A plugin is an AWS resource that contains the code that defines your connector logic.
    """

    customPlugin: CustomPlugin


class CreateCustomPluginResponse(BaseModel):
    customPluginArn: Optional[_String] = None
    customPluginState: Optional[CustomPluginState] = None
    name: Optional[_String] = None
    revision: Optional[_Long] = None


class CreateWorkerConfigurationResponse(BaseModel):
    creationTime: Optional[_TimestampIso8601] = None
    latestRevision: Optional[WorkerConfigurationRevisionSummary] = None
    name: Optional[_String] = None
    workerConfigurationArn: Optional[_String] = None


class DeleteConnectorResponse(BaseModel):
    connectorArn: Optional[_String] = None
    connectorState: Optional[ConnectorState] = None


class DescribeCustomPluginResponse(CustomPluginSummary):
    pass


class DescribeWorkerConfigurationResponse(BaseModel):
    creationTime: Optional[_TimestampIso8601] = None
    description: Optional[_String] = None
    latestRevision: Optional[WorkerConfigurationRevisionDescription] = None
    name: Optional[_String] = None
    workerConfigurationArn: Optional[_String] = None


class ListCustomPluginsResponse(BaseModel):
    customPlugins: Optional[_ListOfCustomPluginSummary] = None
    nextToken: Optional[_String] = None


class UpdateConnectorResponse(DeleteConnectorResponse):
    pass


class ProvisionedCapacityUpdate(ProvisionedCapacity):
    """
    An update to a connector's fixed capacity.
    """

    pass


class Vpc(BaseModel):
    """
    Information about the VPC in which the connector resides.
    """

    securityGroups: Optional[_ListOfString] = None
    subnets: _ListOfString


class VpcDescription(BaseModel):
    """
    The description of the VPC in which the connector resides.
    """

    securityGroups: Optional[_ListOfString] = None
    subnets: Optional[_ListOfString] = None


class ApacheKafkaClusterDescription(BaseModel):
    """
    The description of the Apache Kafka cluster to which the connector is connected.
    """

    bootstrapServers: Optional[_String] = None
    vpc: Optional[VpcDescription] = None


class ScaleInPolicy(BaseModel):
    """
    The scale-in policy for the connector.
    """

    cpuUtilizationPercentage: _IntegerMin1Max100


class ScaleOutPolicy(ScaleInPolicy):
    """
    The scale-out policy for the connector.
    """

    pass


class ScaleInPolicyUpdate(ScaleInPolicy):
    """
    An update to the connector's scale-in policy.
    """

    pass


class ScaleOutPolicyUpdate(ScaleInPolicy):
    """
    An update to the connector's scale-out policy.
    """

    pass


class KafkaClusterDescription(BaseModel):
    """
    Details of how to connect to the Apache Kafka cluster.
    """

    apacheKafkaCluster: Optional[ApacheKafkaClusterDescription] = None


class _ListOfPluginDescription(BaseModel):
    __root__: List[PluginDescription]


class WorkerConfigurationDescription(BaseModel):
    """
    The description of the worker configuration.
    """

    revision: Optional[_Long] = None
    workerConfigurationArn: Optional[_String] = None


class LogDelivery2(BaseModel):
    """
    Details about log delivery.
    """

    workerLogDelivery: WorkerLogDelivery


class _ListOfPlugin(BaseModel):
    __root__: List[Plugin]


class _ListOfWorkerConfigurationSummary(BaseModel):
    __root__: List[WorkerConfigurationSummary]


class WorkerLogDeliveryDescription(BaseModel):
    """
    Workers can send worker logs to different destination types. This configuration specifies the details of these destinations.
    """

    cloudWatchLogs: Optional[CloudWatchLogsLogDeliveryDescription] = None
    firehose: Optional[FirehoseLogDeliveryDescription] = None
    s3: Optional[S3LogDeliveryDescription] = None


class AutoScaling(BaseModel):
    """
    Specifies how the connector scales.
    """

    maxWorkerCount: _IntegerMin1Max10
    mcuCount: _IntegerMin1Max8
    minWorkerCount: _IntegerMin1Max10
    scaleInPolicy: Optional[ScaleInPolicy] = None
    scaleOutPolicy: Optional[ScaleOutPolicy] = None


class ApacheKafkaCluster(BaseModel):
    """
    The details of the Apache Kafka cluster to which the connector is connected.
    """

    bootstrapServers: _String
    vpc: Vpc


class ListWorkerConfigurationsResponse(BaseModel):
    nextToken: Optional[_String] = None
    workerConfigurations: Optional[_ListOfWorkerConfigurationSummary] = None


class AutoScalingUpdate(BaseModel):
    """
    The updates to the auto scaling parameters for the connector.
    """

    maxWorkerCount: _IntegerMin1Max10
    mcuCount: _IntegerMin1Max8
    minWorkerCount: _IntegerMin1Max10
    scaleInPolicy: ScaleInPolicyUpdate
    scaleOutPolicy: ScaleOutPolicyUpdate


class Capacity1(BaseModel):
    """
    Information about the capacity of the connector, whether it is auto scaled or provisioned.
    """

    autoScaling: Optional[AutoScaling] = None
    provisionedCapacity: Optional[ProvisionedCapacity] = None


class CapacityUpdate(BaseModel):
    """
    The target capacity for the connector. The capacity can be auto scaled or provisioned.
    """

    autoScaling: Optional[AutoScalingUpdate] = None
    provisionedCapacity: Optional[ProvisionedCapacityUpdate] = None


class LogDeliveryDescription(BaseModel):
    """
    The description of the log delivery settings.
    """

    workerLogDelivery: Optional[WorkerLogDeliveryDescription] = None


class ConnectorSummary(BaseModel):
    """
    Summary of a connector.
    """

    capacity: Optional[CapacityDescription] = None
    connectorArn: Optional[_String] = None
    connectorDescription: Optional[_String] = None
    connectorName: Optional[_String] = None
    connectorState: Optional[ConnectorState] = None
    creationTime: Optional[_TimestampIso8601] = None
    currentVersion: Optional[_String] = None
    kafkaCluster: Optional[KafkaClusterDescription] = None
    kafkaClusterClientAuthentication: Optional[
        KafkaClusterClientAuthenticationDescription
    ] = None
    kafkaClusterEncryptionInTransit: Optional[
        KafkaClusterEncryptionInTransitDescription
    ] = None
    kafkaConnectVersion: Optional[_String] = None
    logDelivery: Optional[LogDeliveryDescription] = None
    plugins: Optional[_ListOfPluginDescription] = None
    serviceExecutionRoleArn: Optional[_String] = None
    workerConfiguration: Optional[WorkerConfigurationDescription] = None


class KafkaCluster2(BaseModel):
    """
    The details of the Apache Kafka cluster to which the connector is connected.
    """

    apacheKafkaCluster: ApacheKafkaCluster


class CreateConnectorRequest(BaseModel):
    capacity: Capacity1
    connectorConfiguration: _MapOfString
    connectorDescription: Optional[_StringMax1024] = None
    connectorName: _StringMin1Max128
    kafkaCluster: KafkaCluster2
    kafkaClusterClientAuthentication: KafkaClusterClientAuthentication2
    kafkaClusterEncryptionInTransit: KafkaClusterEncryptionInTransit2
    kafkaConnectVersion: _String
    logDelivery: Optional[LogDelivery2] = None
    plugins: _ListOfPlugin
    serviceExecutionRoleArn: _String
    workerConfiguration: Optional[WorkerConfiguration2] = None


class _ListOfConnectorSummary(BaseModel):
    __root__: List[ConnectorSummary]


class UpdateConnectorRequest(BaseModel):
    capacity: CapacityUpdate


class DescribeConnectorResponse(BaseModel):
    capacity: Optional[CapacityDescription] = None
    connectorArn: Optional[_String] = None
    connectorConfiguration: Optional[_MapOfString] = None
    connectorDescription: Optional[_String] = None
    connectorName: Optional[_String] = None
    connectorState: Optional[ConnectorState] = None
    creationTime: Optional[_TimestampIso8601] = None
    currentVersion: Optional[_String] = None
    kafkaCluster: Optional[KafkaClusterDescription] = None
    kafkaClusterClientAuthentication: Optional[
        KafkaClusterClientAuthenticationDescription
    ] = None
    kafkaClusterEncryptionInTransit: Optional[
        KafkaClusterEncryptionInTransitDescription
    ] = None
    kafkaConnectVersion: Optional[_String] = None
    logDelivery: Optional[LogDeliveryDescription] = None
    plugins: Optional[_ListOfPluginDescription] = None
    serviceExecutionRoleArn: Optional[_String] = None
    workerConfiguration: Optional[WorkerConfigurationDescription] = None


class ListConnectorsResponse(BaseModel):
    connectors: Optional[_ListOfConnectorSummary] = None
    nextToken: Optional[_String] = None

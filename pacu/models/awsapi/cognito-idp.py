# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:46:47+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class AddCustomAttributesResponse(BaseModel):
    """
    Represents the response from the server for the request to add custom attributes.
    """

    pass


class ResourceNotFoundException(BaseModel):
    __root__: Any


class InvalidParameterException(ResourceNotFoundException):
    pass


class TooManyRequestsException(ResourceNotFoundException):
    pass


class NotAuthorizedException(ResourceNotFoundException):
    pass


class UserImportInProgressException(ResourceNotFoundException):
    pass


class InternalErrorException(ResourceNotFoundException):
    pass


class UserNotFoundException(ResourceNotFoundException):
    pass


class AdminConfirmSignUpResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server for the request to confirm registration.
    """

    pass


class UnexpectedLambdaException(ResourceNotFoundException):
    pass


class UserLambdaValidationException(ResourceNotFoundException):
    pass


class TooManyFailedAttemptsException(ResourceNotFoundException):
    pass


class InvalidLambdaResponseException(ResourceNotFoundException):
    pass


class LimitExceededException(ResourceNotFoundException):
    pass


class UsernameExistsException(ResourceNotFoundException):
    pass


class InvalidPasswordException(ResourceNotFoundException):
    pass


class CodeDeliveryFailureException(ResourceNotFoundException):
    pass


class PreconditionNotMetException(ResourceNotFoundException):
    pass


class InvalidSmsRoleAccessPolicyException(ResourceNotFoundException):
    pass


class InvalidSmsRoleTrustRelationshipException(ResourceNotFoundException):
    pass


class UnsupportedUserStateException(ResourceNotFoundException):
    pass


class AdminDeleteUserAttributesResponse(AddCustomAttributesResponse):
    """
    Represents the response received from the server for a request to delete user attributes.
    """

    pass


class AdminDisableProviderForUserResponse(AddCustomAttributesResponse):
    pass


class AliasExistsException(ResourceNotFoundException):
    pass


class AdminDisableUserResponse(AddCustomAttributesResponse):
    """
    Represents the response received from the server to disable the user as an administrator.
    """

    pass


class AdminEnableUserResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server for the request to enable a user as an administrator.
    """

    pass


class InvalidUserPoolConfigurationException(ResourceNotFoundException):
    pass


class MFAMethodNotFoundException(ResourceNotFoundException):
    pass


class PasswordResetRequiredException(ResourceNotFoundException):
    pass


class UserNotConfirmedException(ResourceNotFoundException):
    pass


class AdminLinkProviderForUserResponse(AddCustomAttributesResponse):
    pass


class UserPoolAddOnNotEnabledException(ResourceNotFoundException):
    pass


class AdminResetUserPasswordResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server to reset a user password as an administrator.
    """

    pass


class InvalidEmailRoleAccessPolicyException(ResourceNotFoundException):
    pass


class CodeMismatchException(ResourceNotFoundException):
    pass


class ExpiredCodeException(ResourceNotFoundException):
    pass


class SoftwareTokenMFANotFoundException(ResourceNotFoundException):
    pass


class AdminSetUserMFAPreferenceResponse(AddCustomAttributesResponse):
    pass


class AdminSetUserPasswordResponse(AddCustomAttributesResponse):
    pass


class AdminSetUserSettingsResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server to set user settings as an administrator.
    """

    pass


class AdminUpdateAuthEventFeedbackResponse(AddCustomAttributesResponse):
    pass


class AdminUpdateDeviceStatusResponse(AddCustomAttributesResponse):
    """
    The status response from the request to update the device, as an administrator.
    """

    pass


class AdminUpdateUserAttributesResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server for the request to update user attributes as an administrator.
    """

    pass


class AdminUserGlobalSignOutResponse(AddCustomAttributesResponse):
    """
    The global sign-out response, as an administrator.
    """

    pass


class ConcurrentModificationException(ResourceNotFoundException):
    pass


class ChangePasswordResponse(AddCustomAttributesResponse):
    """
    The response from the server to the change password request.
    """

    pass


class ConfirmForgotPasswordResponse(AddCustomAttributesResponse):
    """
    The response from the server that results from a user's request to retrieve a forgotten password.
    """

    pass


class ConfirmSignUpResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server for the registration confirmation.
    """

    pass


class GroupExistsException(ResourceNotFoundException):
    pass


class DuplicateProviderException(ResourceNotFoundException):
    pass


class UserPoolTaggingException(ResourceNotFoundException):
    pass


class ScopeDoesNotExistException(ResourceNotFoundException):
    pass


class InvalidOAuthFlowException(ResourceNotFoundException):
    pass


class UnsupportedIdentityProviderException(ResourceNotFoundException):
    pass


class DeleteUserAttributesResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server to delete user attributes.
    """

    pass


class DeleteUserPoolDomainResponse(AddCustomAttributesResponse):
    pass


class GlobalSignOutResponse(AddCustomAttributesResponse):
    """
    The response to the request to sign out all devices.
    """

    pass


class RevokeTokenResponse(AddCustomAttributesResponse):
    pass


class UnauthorizedException(ResourceNotFoundException):
    pass


class UnsupportedOperationException(ResourceNotFoundException):
    pass


class UnsupportedTokenTypeException(ResourceNotFoundException):
    pass


class SetUserMFAPreferenceResponse(AddCustomAttributesResponse):
    pass


class SetUserSettingsResponse(AddCustomAttributesResponse):
    """
    The response from the server for a set user settings request.
    """

    pass


class TagResourceResponse(AddCustomAttributesResponse):
    pass


class UntagResourceResponse(AddCustomAttributesResponse):
    pass


class UpdateAuthEventFeedbackResponse(AddCustomAttributesResponse):
    pass


class UpdateDeviceStatusResponse(AddCustomAttributesResponse):
    """
    The response to the request to update the device status.
    """

    pass


class UpdateUserPoolResponse(AddCustomAttributesResponse):
    """
    Represents the response from the server when you make a request to update the user pool.
    """

    pass


class EnableSoftwareTokenMFAException(ResourceNotFoundException):
    pass


class VerifyUserAttributeResponse(AddCustomAttributesResponse):
    """
    A container representing the response from the server from the request to verify user attributes.
    """

    pass


class AWSAccountIdType(BaseModel):
    __root__: str


class AccessTokenValidityType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=86400.0)]


class AccountTakeoverActionNotifyType(BaseModel):
    __root__: bool


class AccountTakeoverEventActionType(Enum):
    BLOCK = 'BLOCK'
    MFA_IF_CONFIGURED = 'MFA_IF_CONFIGURED'
    MFA_REQUIRED = 'MFA_REQUIRED'
    NO_ACTION = 'NO_ACTION'


class AccountTakeoverActionType(BaseModel):
    """
    Account takeover action type.
    """

    Notify: AccountTakeoverActionNotifyType
    EventAction: AccountTakeoverEventActionType


class AccountTakeoverActionsType(BaseModel):
    """
    Account takeover actions type.
    """

    LowAction: Optional[AccountTakeoverActionType] = None
    MediumAction: Optional[AccountTakeoverActionType] = None
    HighAction: Optional[AccountTakeoverActionType] = None


class UserPoolIdType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=55, min_length=1, regex='[\\w-]+_[0-9a-zA-Z]+')
    ]


class UsernameType(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(max_length=128, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'),
    ]


class GroupNameType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=128, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'),
    ]


class ClientMetadataType(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class BooleanType(AccountTakeoverActionNotifyType):
    pass


class AdminCreateUserUnusedAccountValidityDaysType(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=365.0)]


class PasswordType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=256, min_length=6, regex='[\\S]+')]


class ForceAliasCreation(AccountTakeoverActionNotifyType):
    pass


class MessageActionType(Enum):
    RESEND = 'RESEND'
    SUPPRESS = 'SUPPRESS'


class StringType(AWSAccountIdType):
    pass


class DeviceKeyType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=55, min_length=1, regex='[\\w-]+_[0-9a-f-]+')
    ]


class DateType(BaseModel):
    __root__: datetime


class UserStatusType(Enum):
    UNCONFIRMED = 'UNCONFIRMED'
    CONFIRMED = 'CONFIRMED'
    ARCHIVED = 'ARCHIVED'
    COMPROMISED = 'COMPROMISED'
    UNKNOWN = 'UNKNOWN'
    RESET_REQUIRED = 'RESET_REQUIRED'
    FORCE_CHANGE_PASSWORD = 'FORCE_CHANGE_PASSWORD'


class UserMFASettingListType(BaseModel):
    __root__: List[StringType]


class ClientIdType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=128, min_length=1, regex='[\\w+]+')]


class AuthFlowType(Enum):
    USER_SRP_AUTH = 'USER_SRP_AUTH'
    REFRESH_TOKEN_AUTH = 'REFRESH_TOKEN_AUTH'
    REFRESH_TOKEN = 'REFRESH_TOKEN'
    CUSTOM_AUTH = 'CUSTOM_AUTH'
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    USER_PASSWORD_AUTH = 'USER_PASSWORD_AUTH'
    ADMIN_USER_PASSWORD_AUTH = 'ADMIN_USER_PASSWORD_AUTH'


class AuthParametersType(ClientMetadataType):
    pass


class AnalyticsMetadataType(BaseModel):
    """
    <p>An Amazon Pinpoint analytics endpoint.</p> <p>An endpoint uniquely identifies a mobile device, email address, or phone number that can receive messages from Amazon Pinpoint analytics.</p> <note> <p>Cognito User Pools only supports sending events to Amazon Pinpoint projects in the US East (N. Virginia) us-east-1 Region, regardless of the region in which the user pool resides.</p> </note>
    """

    AnalyticsEndpointId: Optional[StringType] = None


class ChallengeNameType(Enum):
    SMS_MFA = 'SMS_MFA'
    SOFTWARE_TOKEN_MFA = 'SOFTWARE_TOKEN_MFA'
    SELECT_MFA_TYPE = 'SELECT_MFA_TYPE'
    MFA_SETUP = 'MFA_SETUP'
    PASSWORD_VERIFIER = 'PASSWORD_VERIFIER'
    CUSTOM_CHALLENGE = 'CUSTOM_CHALLENGE'
    DEVICE_SRP_AUTH = 'DEVICE_SRP_AUTH'
    DEVICE_PASSWORD_VERIFIER = 'DEVICE_PASSWORD_VERIFIER'
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    NEW_PASSWORD_REQUIRED = 'NEW_PASSWORD_REQUIRED'


class SessionType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class ChallengeParametersType(ClientMetadataType):
    pass


class QueryLimitType(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=60.0)]


class SearchPaginationTokenType(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[\\S]+')]


class PaginationKey(SearchPaginationTokenType):
    pass


class ChallengeResponsesType(ClientMetadataType):
    pass


class SMSMfaSettingsType(BaseModel):
    """
    The type used for enabling SMS MFA at the user level. Phone numbers don't need to be verified to be used for SMS MFA. If an MFA type is enabled for a user, the user will be prompted for MFA during all sign in attempts, unless device tracking is turned on and the device has been trusted. If you would like MFA to be applied selectively based on the assessed risk level of sign in attempts, disable MFA for users and turn on Adaptive Authentication for the user pool.
    """

    Enabled: Optional[BooleanType] = None
    PreferredMfa: Optional[BooleanType] = None


class SoftwareTokenMfaSettingsType(SMSMfaSettingsType):
    """
    The type used for enabling software token MFA at the user level. If an MFA type is enabled for a user, the user will be prompted for MFA during all sign in attempts, unless device tracking is turned on and the device has been trusted. If you would like MFA to be applied selectively based on the assessed risk level of sign in attempts, disable MFA for users and turn on Adaptive Authentication for the user pool.
    """

    pass


class EventIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1, regex='[\\w+-]+')]


class FeedbackValueType(Enum):
    Valid = 'Valid'
    Invalid = 'Invalid'


class DeviceRememberedStatusType(Enum):
    remembered = 'remembered'
    not_remembered = 'not_remembered'


class AdvancedSecurityModeType(Enum):
    OFF = 'OFF'
    AUDIT = 'AUDIT'
    ENFORCED = 'ENFORCED'


class AliasAttributeType(Enum):
    phone_number = 'phone_number'
    email = 'email'
    preferred_username = 'preferred_username'


class AliasAttributesListType(BaseModel):
    __root__: List[AliasAttributeType]


class HexStringType(BaseModel):
    __root__: Annotated[str, Field(regex='^[0-9a-fA-F]+$')]


class ArnType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=20,
            regex='arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:([\\w+=/,.@-]*)?:[0-9]+:[\\w+=/,.@-]+(:[\\w+=/,.@-]+)?(:[\\w+=/,.@-]+)?',
        ),
    ]


class AnalyticsConfigurationType(BaseModel):
    """
    <p>The Amazon Pinpoint analytics configuration for collecting metrics for a user pool.</p> <note> <p>In regions where Pinpoint is not available, Cognito User Pools only supports sending events to Amazon Pinpoint projects in us-east-1. In regions where Pinpoint is available, Cognito User Pools will support sending events to Amazon Pinpoint projects within that same region. </p> </note>
    """

    ApplicationId: Optional[HexStringType] = None
    ApplicationArn: Optional[ArnType] = None
    RoleArn: Optional[ArnType] = None
    ExternalId: Optional[StringType] = None
    UserDataShared: Optional[BooleanType] = None


class TokenModelType(BaseModel):
    __root__: Annotated[SecretStr, Field(regex='[A-Za-z0-9-_=.]+')]


class SecretCodeType(BaseModel):
    __root__: Annotated[SecretStr, Field(min_length=16, regex='[A-Za-z0-9]+')]


class AttributeDataType(Enum):
    String = 'String'
    Number = 'Number'
    DateTime = 'DateTime'
    Boolean = 'Boolean'


class AttributeMappingKeyType(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class AttributeMappingType(ClientMetadataType):
    pass


class AttributeNameType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=32, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'),
    ]


class AttributeValueType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048)]


class EventType(Enum):
    SignIn = 'SignIn'
    SignUp = 'SignUp'
    ForgotPassword = 'ForgotPassword'


class EventResponseType(Enum):
    Success = 'Success'
    Failure = 'Failure'


class EventContextDataType(BaseModel):
    """
    Specifies the user context data captured at the time of an event request.
    """

    IpAddress: Optional[StringType] = None
    DeviceName: Optional[StringType] = None
    Timezone: Optional[StringType] = None
    City: Optional[StringType] = None
    Country: Optional[StringType] = None


class EventFeedbackType(BaseModel):
    """
    Specifies the event feedback type.
    """

    FeedbackValue: FeedbackValueType
    Provider: StringType
    FeedbackDate: Optional[DateType] = None


class IntegerType(BaseModel):
    __root__: int


class NewDeviceMetadataType(BaseModel):
    """
    The new device metadata type.
    """

    DeviceKey: Optional[DeviceKeyType] = None
    DeviceGroupKey: Optional[StringType] = None


class BlockedIPRangeListType(BaseModel):
    __root__: Annotated[List[StringType], Field(max_items=20)]


class CSSType(AWSAccountIdType):
    pass


class CSSVersionType(AWSAccountIdType):
    pass


class RedirectUrlType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=1024, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'),
    ]


class CallbackURLsListType(BaseModel):
    __root__: Annotated[List[RedirectUrlType], Field(max_items=100, min_items=0)]


class ChallengeName6(Enum):
    Password = 'Password'
    Mfa = 'Mfa'


class ChallengeResponseType(BaseModel):
    """
    The challenge response type.
    """

    ChallengeName: Optional[ChallengeName6] = None
    ChallengeResponse: Optional[EventResponseType] = None


class ClientNameType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[\\w\\s+=,.@-]+')
    ]


class ClientPermissionType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class ClientPermissionListType(BaseModel):
    __root__: List[ClientPermissionType]


class ClientSecretType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=64, min_length=1, regex='[\\w+]+')]


class DeliveryMediumType(Enum):
    SMS = 'SMS'
    EMAIL = 'EMAIL'


class CompletionMessageType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w]+')]


class CompromisedCredentialsEventActionType(Enum):
    BLOCK = 'BLOCK'
    NO_ACTION = 'NO_ACTION'


class CompromisedCredentialsActionsType(BaseModel):
    """
    The compromised credentials actions type
    """

    EventAction: CompromisedCredentialsEventActionType


class DeviceSecretVerifierConfigType(BaseModel):
    """
    The device verifier against which it will be authenticated.
    """

    PasswordVerifier: Optional[StringType] = None
    Salt: Optional[StringType] = None


class DeviceNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class SecretHashType(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=128, min_length=1, regex='[\\w+=/]+')
    ]


class ConfirmationCodeType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='[\\S]+')]


class UserContextDataType(BaseModel):
    """
    Contextual data such as the user's device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
    """

    EncodedData: Optional[StringType] = None


class DescriptionType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048)]


class PrecedenceType(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class GroupType(BaseModel):
    """
    The group type.
    """

    GroupName: Optional[GroupNameType] = None
    UserPoolId: Optional[UserPoolIdType] = None
    Description: Optional[DescriptionType] = None
    RoleArn: Optional[ArnType] = None
    Precedence: Optional[PrecedenceType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None


class ProviderNameTypeV1(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32,
            min_length=1,
            regex='[^_][\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}][^_]+',
        ),
    ]


class IdentityProviderTypeType(Enum):
    SAML = 'SAML'
    Facebook = 'Facebook'
    Google = 'Google'
    LoginWithAmazon = 'LoginWithAmazon'
    SignInWithApple = 'SignInWithApple'
    OIDC = 'OIDC'


class ProviderDetailsType(ClientMetadataType):
    pass


class ResourceServerIdentifierType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[\\x21\\x23-\\x5B\\x5D-\\x7E]+')
    ]


class ResourceServerNameType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[\\w\\s+=,.@-]+')
    ]


class UserImportJobNameType(ClientNameType):
    pass


class GenerateSecret(AccountTakeoverActionNotifyType):
    pass


class RefreshTokenValidityType(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=315360000.0)]


class IdTokenValidityType(AccessTokenValidityType):
    pass


class LogoutURLsListType(CallbackURLsListType):
    pass


class PreventUserExistenceErrorTypes(Enum):
    LEGACY = 'LEGACY'
    ENABLED = 'ENABLED'


class WrappedBooleanType(AccountTakeoverActionNotifyType):
    pass


class DomainType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63,
            min_length=1,
            regex='^[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?$',
        ),
    ]


class CustomDomainConfigType(BaseModel):
    """
    The configuration for a custom domain that hosts the sign-up and sign-in webpages for your application.
    """

    CertificateArn: ArnType


class UserPoolNameType(ClientNameType):
    pass


class SmsVerificationMessageType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=140, min_length=6, regex='.*\\{####\\}.*')
    ]


class EmailVerificationMessageType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=20000,
            min_length=6,
            regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{####\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*',
        ),
    ]


class EmailVerificationSubjectType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=140, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s]+'
        ),
    ]


class UserPoolMfaType(Enum):
    OFF = 'OFF'
    ON = 'ON'
    OPTIONAL = 'OPTIONAL'


class DeviceConfigurationType(BaseModel):
    """
    The configuration for the user pool's device tracking.
    """

    ChallengeRequiredOnNewDevice: Optional[BooleanType] = None
    DeviceOnlyRememberedOnUserPrompt: Optional[BooleanType] = None


class SmsConfigurationType(BaseModel):
    """
    The SMS configuration type that includes the settings the Cognito User Pool needs to call for the Amazon SNS service to send an SMS message from your account. The Cognito User Pool makes the request to the Amazon SNS Service by using an IAM role that you provide for your account.
    """

    SnsCallerArn: ArnType
    ExternalId: Optional[StringType] = None


class UserPoolTagsType(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class UserPoolAddOnsType(BaseModel):
    """
    The user pool add-ons type.
    """

    AdvancedSecurityMode: AdvancedSecurityModeType


class UsernameConfigurationType(BaseModel):
    """
    The username configuration type.
    """

    CaseSensitive: WrappedBooleanType


class CustomAttributeNameType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=20, min_length=1, regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'),
    ]


class CustomEmailSenderLambdaVersionType(Enum):
    V1_0 = 'V1_0'


class CustomEmailLambdaVersionConfigType(BaseModel):
    """
    A custom email sender Lambda configuration type.
    """

    LambdaVersion: CustomEmailSenderLambdaVersionType
    LambdaArn: ArnType


class CustomSMSLambdaVersionConfigType(CustomEmailLambdaVersionConfigType):
    """
    A custom SMS sender Lambda configuration type.
    """

    pass


class DefaultEmailOptionType(Enum):
    CONFIRM_WITH_LINK = 'CONFIRM_WITH_LINK'
    CONFIRM_WITH_CODE = 'CONFIRM_WITH_CODE'


class ProviderNameType(AttributeNameType):
    pass


class UserImportJobIdType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=55, min_length=1, regex='import-[0-9a-zA-Z-]+')
    ]


class S3BucketType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=3, regex='^[0-9A-Za-z\\.\\-_]*(?<!\\.)$')
    ]


class DomainVersionType(BaseModel):
    __root__: Annotated[str, Field(max_length=20, min_length=1)]


class DomainStatusType(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    ACTIVE = 'ACTIVE'
    FAILED = 'FAILED'


class EmailAddressType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+@[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+'
        ),
    ]


class EmailSendingAccountType(Enum):
    COGNITO_DEFAULT = 'COGNITO_DEFAULT'
    DEVELOPER = 'DEVELOPER'


class SESConfigurationSet(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9_-]+$')
    ]


class EmailNotificationBodyType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=20000,
            min_length=6,
            regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]+',
        ),
    ]


class EmailNotificationSubjectType(EmailVerificationSubjectType):
    pass


class EmailVerificationMessageByLinkType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=20000,
            min_length=6,
            regex='[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*\\{##[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*##\\}[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}\\s*]*',
        ),
    ]


class EmailVerificationSubjectByLinkType(EmailVerificationSubjectType):
    pass


class EventFilterType(Enum):
    SIGN_IN = 'SIGN_IN'
    PASSWORD_CHANGE = 'PASSWORD_CHANGE'
    SIGN_UP = 'SIGN_UP'


class RiskDecisionType(Enum):
    NoRisk = 'NoRisk'
    AccountTakeover = 'AccountTakeover'
    Block = 'Block'


class RiskLevelType(Enum):
    Low = 'Low'
    Medium = 'Medium'
    High = 'High'


class ExplicitAuthFlowsType(Enum):
    ADMIN_NO_SRP_AUTH = 'ADMIN_NO_SRP_AUTH'
    CUSTOM_AUTH_FLOW_ONLY = 'CUSTOM_AUTH_FLOW_ONLY'
    USER_PASSWORD_AUTH = 'USER_PASSWORD_AUTH'
    ALLOW_ADMIN_USER_PASSWORD_AUTH = 'ALLOW_ADMIN_USER_PASSWORD_AUTH'
    ALLOW_CUSTOM_AUTH = 'ALLOW_CUSTOM_AUTH'
    ALLOW_USER_PASSWORD_AUTH = 'ALLOW_USER_PASSWORD_AUTH'
    ALLOW_USER_SRP_AUTH = 'ALLOW_USER_SRP_AUTH'
    ALLOW_REFRESH_TOKEN_AUTH = 'ALLOW_REFRESH_TOKEN_AUTH'


class ListOfStringTypes(UserMFASettingListType):
    pass


class IdpIdentifierType(BaseModel):
    __root__: Annotated[str, Field(max_length=40, min_length=1, regex='[\\w\\s+=.@-]+')]


class SmsMfaConfigType(BaseModel):
    """
    The SMS text message multi-factor authentication (MFA) configuration type.
    """

    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None


class SoftwareTokenMfaConfigType(BaseModel):
    """
    The type used for enabling software token MFA at the user pool level.
    """

    Enabled: Optional[BooleanType] = None


class HttpHeader(BaseModel):
    """
    The HTTP header.
    """

    headerName: Optional[StringType] = None
    headerValue: Optional[StringType] = None


class ImageFileType(AWSAccountIdType):
    pass


class ImageUrlType(AWSAccountIdType):
    pass


class ListProvidersLimitType(QueryLimitType):
    pass


class PaginationKeyType(SearchPaginationTokenType):
    pass


class ListResourceServersLimitType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class PoolQueryLimitType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=60.0)]


class QueryLimit(PoolQueryLimitType):
    pass


class SearchedAttributeNamesListType(BaseModel):
    __root__: List[AttributeNameType]


class UserFilterType(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class LongType(IntegerType):
    pass


class MFAOptionType(BaseModel):
    """
    <i>This data type is no longer supported.</i> You can use it only for SMS MFA configurations. You can't use it for TOTP software token MFA configurations.
    """

    DeliveryMedium: Optional[DeliveryMediumType] = None
    AttributeName: Optional[AttributeNameType] = None


class NotifyEmailType(BaseModel):
    """
    The notify email type.
    """

    Subject: EmailNotificationSubjectType
    HtmlBody: Optional[EmailNotificationBodyType] = None
    TextBody: Optional[EmailNotificationBodyType] = None


class NumberAttributeConstraintsType(BaseModel):
    """
    The minimum and maximum value of an attribute that is of the number data type.
    """

    MinValue: Optional[StringType] = None
    MaxValue: Optional[StringType] = None


class OAuthFlowType(Enum):
    code = 'code'
    implicit = 'implicit'
    client_credentials = 'client_credentials'


class PasswordPolicyMinLengthType(BaseModel):
    __root__: Annotated[int, Field(ge=6.0, le=99.0)]


class TemporaryPasswordValidityDaysType(AdminCreateUserUnusedAccountValidityDaysType):
    pass


class PasswordPolicyType(BaseModel):
    """
    The password policy type.
    """

    MinimumLength: Optional[PasswordPolicyMinLengthType] = None
    RequireUppercase: Optional[BooleanType] = None
    RequireLowercase: Optional[BooleanType] = None
    RequireNumbers: Optional[BooleanType] = None
    RequireSymbols: Optional[BooleanType] = None
    TemporaryPasswordValidityDays: Optional[TemporaryPasswordValidityDaysType] = None


class PreSignedUrlType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0)]


class PriorityType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2.0)]


class ProviderDescription(BaseModel):
    """
    A container for identity provider details.
    """

    ProviderName: Optional[ProviderNameType] = None
    ProviderType: Optional[IdentityProviderTypeType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None


class RecoveryOptionNameType(Enum):
    verified_email = 'verified_email'
    verified_phone_number = 'verified_phone_number'
    admin_only = 'admin_only'


class ResourceServerScopeDescriptionType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class ResourceServerScopeNameType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[\\x21\\x23-\\x2E\\x30-\\x5B\\x5D-\\x7E]+',
        ),
    ]


class SkippedIPRangeListType(BlockedIPRangeListType):
    pass


class StringAttributeConstraintsType(BaseModel):
    """
    The constraints associated with a string attribute.
    """

    MinLength: Optional[StringType] = None
    MaxLength: Optional[StringType] = None


class ScopeType(ResourceServerIdentifierType):
    pass


class SoftwareTokenMFAUserCodeType(BaseModel):
    __root__: Annotated[str, Field(max_length=6, min_length=6, regex='[0-9]+')]


class StatusType(Enum):
    Enabled = 'Enabled'
    Disabled = 'Disabled'


class TagKeysType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValueType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class TimeUnitsType(Enum):
    seconds = 'seconds'
    minutes = 'minutes'
    hours = 'hours'
    days = 'days'


class UserPoolTagsListType(BaseModel):
    __root__: List[TagKeysType]


class UserImportJobStatusType(Enum):
    Created = 'Created'
    Pending = 'Pending'
    InProgress = 'InProgress'
    Stopping = 'Stopping'
    Expired = 'Expired'
    Stopped = 'Stopped'
    Failed = 'Failed'
    Succeeded = 'Succeeded'


class UserPoolClientDescription(BaseModel):
    """
    The description of the user pool client.
    """

    ClientId: Optional[ClientIdType] = None
    UserPoolId: Optional[UserPoolIdType] = None
    ClientName: Optional[ClientNameType] = None


class UsernameAttributeType(Enum):
    phone_number = 'phone_number'
    email = 'email'


class VerifySoftwareTokenResponseType(Enum):
    SUCCESS = 'SUCCESS'
    ERROR = 'ERROR'


class AdminAddUserToGroupRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    GroupName: GroupNameType


class AdminConfirmSignUpRequest(BaseModel):
    """
    Represents the request to confirm user registration.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    ClientMetadata: Optional[ClientMetadataType] = None


class AdminDeleteUserRequest(BaseModel):
    """
    Represents the request to delete a user as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminDisableUserRequest(BaseModel):
    """
    Represents the request to disable the user as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminEnableUserRequest(BaseModel):
    """
    Represents the request that enables the user as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminForgetDeviceRequest(BaseModel):
    """
    Sends the forgot device request, as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    DeviceKey: DeviceKeyType


class AdminGetDeviceRequest(BaseModel):
    """
    Represents the request to get the device, as an administrator.
    """

    DeviceKey: DeviceKeyType
    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminGetUserRequest(BaseModel):
    """
    Represents the request to get the specified user as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType


class AdminListDevicesRequest(BaseModel):
    """
    Represents the request to list devices, as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class AdminListGroupsForUserRequest(BaseModel):
    Username: UsernameType
    UserPoolId: UserPoolIdType
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None


class AdminListUserAuthEventsRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    MaxResults: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None


class AdminRemoveUserFromGroupRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    GroupName: GroupNameType


class AdminResetUserPasswordRequest(BaseModel):
    """
    Represents the request to reset a user's password as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    ClientMetadata: Optional[ClientMetadataType] = None


class AdminSetUserMFAPreferenceRequest(BaseModel):
    SMSMfaSettings: Optional[SMSMfaSettingsType] = None
    SoftwareTokenMfaSettings: Optional[SoftwareTokenMfaSettingsType] = None
    Username: UsernameType
    UserPoolId: UserPoolIdType


class AdminSetUserPasswordRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    Password: PasswordType
    Permanent: Optional[BooleanType] = None


class AdminUpdateAuthEventFeedbackRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    EventId: EventIdType
    FeedbackValue: FeedbackValueType


class AdminUpdateDeviceStatusRequest(BaseModel):
    """
    The request to update the device status, as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    DeviceKey: DeviceKeyType
    DeviceRememberedStatus: Optional[DeviceRememberedStatusType] = None


class AdminUserGlobalSignOutRequest(BaseModel):
    """
    The request to sign out of all devices, as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType


class AssociateSoftwareTokenResponse(BaseModel):
    SecretCode: Optional[SecretCodeType] = None
    Session: Optional[SessionType] = None


class AssociateSoftwareTokenRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    Session: Optional[SessionType] = None


class ChangePasswordRequest(BaseModel):
    """
    Represents the request to change a user password.
    """

    PreviousPassword: PasswordType
    ProposedPassword: PasswordType
    AccessToken: TokenModelType


class ConfirmDeviceResponse(BaseModel):
    """
    Confirms the device response.
    """

    UserConfirmationNecessary: Optional[BooleanType] = None


class ConfirmDeviceRequest(BaseModel):
    """
    Confirms the device request.
    """

    AccessToken: TokenModelType
    DeviceKey: DeviceKeyType
    DeviceSecretVerifierConfig: Optional[DeviceSecretVerifierConfigType] = None
    DeviceName: Optional[DeviceNameType] = None


class ConfirmForgotPasswordRequest(BaseModel):
    """
    The request representing the confirmation for a password reset.
    """

    ClientId: ClientIdType
    SecretHash: Optional[SecretHashType] = None
    Username: UsernameType
    ConfirmationCode: ConfirmationCodeType
    Password: PasswordType
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class ConfirmSignUpRequest(BaseModel):
    """
    Represents the request to confirm registration of a user.
    """

    ClientId: ClientIdType
    SecretHash: Optional[SecretHashType] = None
    Username: UsernameType
    ConfirmationCode: ConfirmationCodeType
    ForceAliasCreation: Optional[ForceAliasCreation] = None
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class CreateGroupResponse(BaseModel):
    Group: Optional[GroupType] = None


class CreateGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType
    Description: Optional[DescriptionType] = None
    RoleArn: Optional[ArnType] = None
    Precedence: Optional[PrecedenceType] = None


class CreateUserImportJobRequest(BaseModel):
    """
    Represents the request to create the user import job.
    """

    JobName: UserImportJobNameType
    UserPoolId: UserPoolIdType
    CloudWatchLogsRoleArn: ArnType


class CreateUserPoolDomainResponse(BaseModel):
    CloudFrontDomain: Optional[DomainType] = None


class CreateUserPoolDomainRequest(BaseModel):
    Domain: DomainType
    UserPoolId: UserPoolIdType
    CustomDomainConfig: Optional[CustomDomainConfigType] = None


class DeleteGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType


class DeleteIdentityProviderRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ProviderName: ProviderNameType


class DeleteResourceServerRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Identifier: ResourceServerIdentifierType


class DeleteUserRequest(BaseModel):
    """
    Represents the request to delete a user.
    """

    AccessToken: TokenModelType


class DeleteUserPoolRequest(BaseModel):
    """
    Represents the request to delete a user pool.
    """

    UserPoolId: UserPoolIdType


class DeleteUserPoolClientRequest(BaseModel):
    """
    Represents the request to delete a user pool client.
    """

    UserPoolId: UserPoolIdType
    ClientId: ClientIdType


class DeleteUserPoolDomainRequest(BaseModel):
    Domain: DomainType
    UserPoolId: UserPoolIdType


class DescribeIdentityProviderRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ProviderName: ProviderNameType


class DescribeResourceServerRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Identifier: ResourceServerIdentifierType


class DescribeRiskConfigurationRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ClientId: Optional[ClientIdType] = None


class DescribeUserImportJobRequest(BaseModel):
    """
    Represents the request to describe the user import job.
    """

    UserPoolId: UserPoolIdType
    JobId: UserImportJobIdType


class DescribeUserPoolRequest(BaseModel):
    """
    Represents the request to describe the user pool.
    """

    UserPoolId: UserPoolIdType


class DescribeUserPoolClientRequest(BaseModel):
    """
    Represents the request to describe a user pool client.
    """

    UserPoolId: UserPoolIdType
    ClientId: ClientIdType


class DescribeUserPoolDomainRequest(BaseModel):
    Domain: DomainType


class ForgetDeviceRequest(BaseModel):
    """
    Represents the request to forget the device.
    """

    AccessToken: Optional[TokenModelType] = None
    DeviceKey: DeviceKeyType


class ForgotPasswordRequest(BaseModel):
    """
    Represents the request to reset a user's password.
    """

    ClientId: ClientIdType
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class GetCSVHeaderResponse(BaseModel):
    """
    Represents the response from the server to the request to get the header information for the .csv file for the user import job.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    CSVHeader: Optional[ListOfStringTypes] = None


class GetCSVHeaderRequest(BaseModel):
    """
    Represents the request to get the header information for the .csv file for the user import job.
    """

    UserPoolId: UserPoolIdType


class GetDeviceRequest(BaseModel):
    """
    Represents the request to get the device.
    """

    DeviceKey: DeviceKeyType
    AccessToken: Optional[TokenModelType] = None


class GetGroupResponse(CreateGroupResponse):
    pass


class GetGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType


class GetIdentityProviderByIdentifierRequest(BaseModel):
    UserPoolId: UserPoolIdType
    IdpIdentifier: IdpIdentifierType


class GetSigningCertificateResponse(BaseModel):
    """
    Response from Cognito for a signing certificate request.
    """

    Certificate: Optional[StringType] = None


class GetSigningCertificateRequest(BaseModel):
    """
    Request to get a signing certificate from Cognito.
    """

    UserPoolId: UserPoolIdType


class GetUICustomizationRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ClientId: Optional[ClientIdType] = None


class GetUserRequest(BaseModel):
    """
    Represents the request to get information about the user.
    """

    AccessToken: TokenModelType


class GetUserAttributeVerificationCodeRequest(BaseModel):
    """
    Represents the request to get user attribute verification.
    """

    AccessToken: TokenModelType
    AttributeName: AttributeNameType
    ClientMetadata: Optional[ClientMetadataType] = None


class GetUserPoolMfaConfigResponse(BaseModel):
    SmsMfaConfiguration: Optional[SmsMfaConfigType] = None
    SoftwareTokenMfaConfiguration: Optional[SoftwareTokenMfaConfigType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None


class GetUserPoolMfaConfigRequest(BaseModel):
    UserPoolId: UserPoolIdType


class GlobalSignOutRequest(BaseModel):
    """
    Represents the request to sign out all devices.
    """

    AccessToken: TokenModelType


class InitiateAuthRequest(BaseModel):
    """
    Initiates the authentication request.
    """

    AuthFlow: AuthFlowType
    AuthParameters: Optional[AuthParametersType] = None
    ClientMetadata: Optional[ClientMetadataType] = None
    ClientId: ClientIdType
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None


class ListDevicesRequest(BaseModel):
    """
    Represents the request to list the devices.
    """

    AccessToken: TokenModelType
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class ListGroupsRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None


class ListIdentityProvidersRequest(BaseModel):
    UserPoolId: UserPoolIdType
    MaxResults: Optional[ListProvidersLimitType] = None
    NextToken: Optional[PaginationKeyType] = None


class ListResourceServersRequest(BaseModel):
    UserPoolId: UserPoolIdType
    MaxResults: Optional[ListResourceServersLimitType] = None
    NextToken: Optional[PaginationKeyType] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[UserPoolTagsType] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceArn: ArnType


class ListUserImportJobsRequest(BaseModel):
    """
    Represents the request to list the user import jobs.
    """

    UserPoolId: UserPoolIdType
    MaxResults: PoolQueryLimitType
    PaginationToken: Optional[PaginationKeyType] = None


class ListUserPoolClientsRequest(BaseModel):
    """
    Represents the request to list the user pool clients.
    """

    UserPoolId: UserPoolIdType
    MaxResults: Optional[QueryLimit] = None
    NextToken: Optional[PaginationKey] = None


class ListUserPoolsRequest(BaseModel):
    """
    Represents the request to list user pools.
    """

    NextToken: Optional[PaginationKeyType] = None
    MaxResults: PoolQueryLimitType


class ListUsersRequest(BaseModel):
    """
    Represents the request to list users.
    """

    UserPoolId: UserPoolIdType
    AttributesToGet: Optional[SearchedAttributeNamesListType] = None
    Limit: Optional[QueryLimitType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None
    Filter: Optional[UserFilterType] = None


class ListUsersInGroupRequest(BaseModel):
    UserPoolId: UserPoolIdType
    GroupName: GroupNameType
    Limit: Optional[QueryLimitType] = None
    NextToken: Optional[PaginationKey] = None


class ResendConfirmationCodeRequest(BaseModel):
    """
    Represents the request to resend the confirmation code.
    """

    ClientId: ClientIdType
    SecretHash: Optional[SecretHashType] = None
    UserContextData: Optional[UserContextDataType] = None
    Username: UsernameType
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class RespondToAuthChallengeRequest(BaseModel):
    """
    The request to respond to an authentication challenge.
    """

    ClientId: ClientIdType
    ChallengeName: ChallengeNameType
    Session: Optional[SessionType] = None
    ChallengeResponses: Optional[ChallengeResponsesType] = None
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class RevokeTokenRequest(BaseModel):
    Token: TokenModelType
    ClientId: ClientIdType
    ClientSecret: Optional[ClientSecretType] = None


class SetUICustomizationRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ClientId: Optional[ClientIdType] = None
    CSS: Optional[CSSType] = None
    ImageFile: Optional[ImageFileType] = None


class SetUserMFAPreferenceRequest(BaseModel):
    SMSMfaSettings: Optional[SMSMfaSettingsType] = None
    SoftwareTokenMfaSettings: Optional[SoftwareTokenMfaSettingsType] = None
    AccessToken: TokenModelType


class SetUserPoolMfaConfigResponse(GetUserPoolMfaConfigResponse):
    pass


class SetUserPoolMfaConfigRequest(BaseModel):
    UserPoolId: UserPoolIdType
    SmsMfaConfiguration: Optional[SmsMfaConfigType] = None
    SoftwareTokenMfaConfiguration: Optional[SoftwareTokenMfaConfigType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None


class StartUserImportJobRequest(BaseModel):
    """
    Represents the request to start the user import job.
    """

    UserPoolId: UserPoolIdType
    JobId: UserImportJobIdType


class StopUserImportJobRequest(BaseModel):
    """
    Represents the request to stop the user import job.
    """

    UserPoolId: UserPoolIdType
    JobId: UserImportJobIdType


class TagResourceRequest(BaseModel):
    ResourceArn: ArnType
    Tags: UserPoolTagsType


class UntagResourceRequest(BaseModel):
    ResourceArn: ArnType
    TagKeys: UserPoolTagsListType


class UpdateAuthEventFeedbackRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Username: UsernameType
    EventId: EventIdType
    FeedbackToken: TokenModelType
    FeedbackValue: FeedbackValueType


class UpdateDeviceStatusRequest(BaseModel):
    """
    Represents the request to update the device status.
    """

    AccessToken: TokenModelType
    DeviceKey: DeviceKeyType
    DeviceRememberedStatus: Optional[DeviceRememberedStatusType] = None


class UpdateGroupResponse(CreateGroupResponse):
    pass


class UpdateGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserPoolId: UserPoolIdType
    Description: Optional[DescriptionType] = None
    RoleArn: Optional[ArnType] = None
    Precedence: Optional[PrecedenceType] = None


class UpdateUserPoolDomainResponse(CreateUserPoolDomainResponse):
    """
    The UpdateUserPoolDomain response output.
    """

    pass


class UpdateUserPoolDomainRequest(BaseModel):
    """
    The UpdateUserPoolDomain request input.
    """

    Domain: DomainType
    UserPoolId: UserPoolIdType
    CustomDomainConfig: CustomDomainConfigType


class VerifySoftwareTokenResponse(BaseModel):
    Status: Optional[VerifySoftwareTokenResponseType] = None
    Session: Optional[SessionType] = None


class VerifySoftwareTokenRequest(BaseModel):
    AccessToken: Optional[TokenModelType] = None
    Session: Optional[SessionType] = None
    UserCode: SoftwareTokenMFAUserCodeType
    FriendlyDeviceName: Optional[StringType] = None


class VerifyUserAttributeRequest(BaseModel):
    """
    Represents the request to verify user attributes.
    """

    AccessToken: TokenModelType
    AttributeName: AttributeNameType
    Code: ConfirmationCodeType


class NotifyConfigurationType(BaseModel):
    """
    The notify configuration type.
    """

    From: Optional[StringType] = None
    ReplyTo: Optional[StringType] = None
    SourceArn: ArnType
    BlockEmail: Optional[NotifyEmailType] = None
    NoActionEmail: Optional[NotifyEmailType] = None
    MfaEmail: Optional[NotifyEmailType] = None


class AccountTakeoverRiskConfigurationType(BaseModel):
    """
    Configuration for mitigation actions and notification for different levels of risk detected for a potential account takeover.
    """

    NotifyConfiguration: Optional[NotifyConfigurationType] = None
    Actions: AccountTakeoverActionsType


class MessageTemplateType(BaseModel):
    """
    The message template structure.
    """

    SMSMessage: Optional[SmsVerificationMessageType] = None
    EmailMessage: Optional[EmailVerificationMessageType] = None
    EmailSubject: Optional[EmailVerificationSubjectType] = None


class AdminCreateUserConfigType(BaseModel):
    """
    The configuration for creating a new user profile.
    """

    AllowAdminCreateUserOnly: Optional[BooleanType] = None
    UnusedAccountValidityDays: Optional[
        AdminCreateUserUnusedAccountValidityDaysType
    ] = None
    InviteMessageTemplate: Optional[MessageTemplateType] = None


class DeliveryMediumListType(BaseModel):
    __root__: List[DeliveryMediumType]


class AttributeNameListType(SearchedAttributeNamesListType):
    pass


class ProviderUserIdentifierType(BaseModel):
    """
    A container for information about an identity provider for a user pool.
    """

    ProviderName: Optional[ProviderNameType] = None
    ProviderAttributeName: Optional[StringType] = None
    ProviderAttributeValue: Optional[StringType] = None


class MFAOptionListType(BaseModel):
    __root__: List[MFAOptionType]


class AuthenticationResultType(BaseModel):
    """
    The authentication result.
    """

    AccessToken: Optional[TokenModelType] = None
    ExpiresIn: Optional[IntegerType] = None
    TokenType: Optional[StringType] = None
    RefreshToken: Optional[TokenModelType] = None
    IdToken: Optional[TokenModelType] = None
    NewDeviceMetadata: Optional[NewDeviceMetadataType] = None


class GroupListType(BaseModel):
    __root__: List[GroupType]


class AttributeType(BaseModel):
    """
    Specifies whether the attribute is standard or custom.
    """

    Name: AttributeNameType
    Value: Optional[AttributeValueType] = None


class EventRiskType(BaseModel):
    """
    The event risk type.
    """

    RiskDecision: Optional[RiskDecisionType] = None
    RiskLevel: Optional[RiskLevelType] = None
    CompromisedCredentialsDetected: Optional[WrappedBooleanType] = None


class ChallengeResponseListType(BaseModel):
    __root__: List[ChallengeResponseType]


class AuthEventType(BaseModel):
    """
    The authentication event type.
    """

    EventId: Optional[StringType] = None
    EventType: Optional[EventType] = None
    CreationDate: Optional[DateType] = None
    EventResponse: Optional[EventResponseType] = None
    EventRisk: Optional[EventRiskType] = None
    ChallengeResponses: Optional[ChallengeResponseListType] = None
    EventContextData: Optional[EventContextDataType] = None
    EventFeedback: Optional[EventFeedbackType] = None


class CodeDeliveryDetailsType(BaseModel):
    """
    The code delivery details being returned from the server.
    """

    Destination: Optional[StringType] = None
    DeliveryMedium: Optional[DeliveryMediumType] = None
    AttributeName: Optional[AttributeNameType] = None


class CodeDeliveryDetailsListType(BaseModel):
    __root__: List[CodeDeliveryDetailsType]


class EventFiltersType(BaseModel):
    __root__: List[EventFilterType]


class CompromisedCredentialsRiskConfigurationType(BaseModel):
    """
    The compromised credentials risk configuration type.
    """

    EventFilter: Optional[EventFiltersType] = None
    Actions: CompromisedCredentialsActionsType


class HttpHeaderList(BaseModel):
    __root__: List[HttpHeader]


class IdpIdentifiersListType(BaseModel):
    __root__: Annotated[List[IdpIdentifierType], Field(max_items=50, min_items=0)]


class IdentityProviderType(BaseModel):
    """
    A container for information about an identity provider.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    ProviderName: Optional[ProviderNameType] = None
    ProviderType: Optional[IdentityProviderTypeType] = None
    ProviderDetails: Optional[ProviderDetailsType] = None
    AttributeMapping: Optional[AttributeMappingType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None


class UserImportJobType(BaseModel):
    """
    The user import job type.
    """

    JobName: Optional[UserImportJobNameType] = None
    JobId: Optional[UserImportJobIdType] = None
    UserPoolId: Optional[UserPoolIdType] = None
    PreSignedUrl: Optional[PreSignedUrlType] = None
    CreationDate: Optional[DateType] = None
    StartDate: Optional[DateType] = None
    CompletionDate: Optional[DateType] = None
    Status: Optional[UserImportJobStatusType] = None
    CloudWatchLogsRoleArn: Optional[ArnType] = None
    ImportedUsers: Optional[LongType] = None
    SkippedUsers: Optional[LongType] = None
    FailedUsers: Optional[LongType] = None
    CompletionMessage: Optional[CompletionMessageType] = None


class TokenValidityUnitsType(BaseModel):
    """
    The data type for TokenValidityUnits that specifics the time measurements for token validity.
    """

    AccessToken: Optional[TimeUnitsType] = None
    IdToken: Optional[TimeUnitsType] = None
    RefreshToken: Optional[TimeUnitsType] = None


class ExplicitAuthFlowsListType(BaseModel):
    __root__: List[ExplicitAuthFlowsType]


class SupportedIdentityProvidersListType(BaseModel):
    __root__: List[ProviderNameType]


class OAuthFlowsType(BaseModel):
    __root__: Annotated[List[OAuthFlowType], Field(max_items=3, min_items=0)]


class ScopeListType(BaseModel):
    __root__: Annotated[List[ScopeType], Field(max_items=50)]


class UserPoolClientType(BaseModel):
    """
    Contains information about a user pool client.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    ClientName: Optional[ClientNameType] = None
    ClientId: Optional[ClientIdType] = None
    ClientSecret: Optional[ClientSecretType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    IdTokenValidity: Optional[IdTokenValidityType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    WriteAttributes: Optional[ClientPermissionListType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None


class UserPoolPolicyType(BaseModel):
    """
    The policy associated with a user pool.
    """

    PasswordPolicy: Optional[PasswordPolicyType] = None


class LambdaConfigType(BaseModel):
    """
    Specifies the configuration for Lambda triggers.
    """

    PreSignUp: Optional[ArnType] = None
    CustomMessage: Optional[ArnType] = None
    PostConfirmation: Optional[ArnType] = None
    PreAuthentication: Optional[ArnType] = None
    PostAuthentication: Optional[ArnType] = None
    DefineAuthChallenge: Optional[ArnType] = None
    CreateAuthChallenge: Optional[ArnType] = None
    VerifyAuthChallengeResponse: Optional[ArnType] = None
    PreTokenGeneration: Optional[ArnType] = None
    UserMigration: Optional[ArnType] = None
    CustomSMSSender: Optional[CustomSMSLambdaVersionConfigType] = None
    CustomEmailSender: Optional[CustomEmailLambdaVersionConfigType] = None
    KMSKeyID: Optional[ArnType] = None


class VerifiedAttributesListType(BaseModel):
    __root__: List[UsernameAttributeType]


class UsernameAttributesListType(VerifiedAttributesListType):
    pass


class VerificationMessageTemplateType(BaseModel):
    """
    The template for verification messages.
    """

    SmsMessage: Optional[SmsVerificationMessageType] = None
    EmailMessage: Optional[EmailVerificationMessageType] = None
    EmailSubject: Optional[EmailVerificationSubjectType] = None
    EmailMessageByLink: Optional[EmailVerificationMessageByLinkType] = None
    EmailSubjectByLink: Optional[EmailVerificationSubjectByLinkType] = None
    DefaultEmailOption: Optional[DefaultEmailOptionType] = None


class EmailConfigurationType(BaseModel):
    """
    <p>The email configuration type. </p> <note> <p>Amazon Cognito has specific regions for use with Amazon SES. For more information on the supported regions, see <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-email.html">Email Settings for Amazon Cognito User Pools</a>.</p> </note>
    """

    SourceArn: Optional[ArnType] = None
    ReplyToEmailAddress: Optional[EmailAddressType] = None
    EmailSendingAccount: Optional[EmailSendingAccountType] = None
    From: Optional[StringType] = None
    ConfigurationSet: Optional[SESConfigurationSet] = None


class SchemaAttributeType(BaseModel):
    """
    Contains information about the schema attribute.
    """

    Name: Optional[CustomAttributeNameType] = None
    AttributeDataType: Optional[AttributeDataType] = None
    DeveloperOnlyAttribute: Optional[BooleanType] = None
    Mutable: Optional[BooleanType] = None
    Required: Optional[BooleanType] = None
    NumberAttributeConstraints: Optional[NumberAttributeConstraintsType] = None
    StringAttributeConstraints: Optional[StringAttributeConstraintsType] = None


class DomainDescriptionType(BaseModel):
    """
    A container for information about a domain.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    AWSAccountId: Optional[AWSAccountIdType] = None
    Domain: Optional[DomainType] = None
    S3Bucket: Optional[S3BucketType] = None
    CloudFrontDistribution: Optional[StringType] = None
    Version: Optional[DomainVersionType] = None
    Status: Optional[DomainStatusType] = None
    CustomDomainConfig: Optional[CustomDomainConfigType] = None


class UICustomizationType(BaseModel):
    """
    A container for the UI customization information for a user pool's built-in app UI.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    ClientId: Optional[ClientIdType] = None
    ImageUrl: Optional[ImageUrlType] = None
    CSS: Optional[CSSType] = None
    CSSVersion: Optional[CSSVersionType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None


class ProvidersListType(BaseModel):
    __root__: Annotated[List[ProviderDescription], Field(max_items=50, min_items=0)]


class UserImportJobsListType(BaseModel):
    __root__: Annotated[List[UserImportJobType], Field(max_items=50, min_items=1)]


class UserPoolClientListType(BaseModel):
    __root__: List[UserPoolClientDescription]


class RecoveryOptionType(BaseModel):
    """
    A map containing a priority as a key, and recovery method name as a value.
    """

    Priority: PriorityType
    Name: RecoveryOptionNameType


class ResourceServerScopeType(BaseModel):
    """
    A resource server scope.
    """

    ScopeName: ResourceServerScopeNameType
    ScopeDescription: ResourceServerScopeDescriptionType


class RiskExceptionConfigurationType(BaseModel):
    """
    The type of the configuration to override the risk decision.
    """

    BlockedIPRangeList: Optional[BlockedIPRangeListType] = None
    SkippedIPRangeList: Optional[SkippedIPRangeListType] = None


class UserPoolDescriptionType(BaseModel):
    """
    A user pool description.
    """

    Id: Optional[UserPoolIdType] = None
    Name: Optional[UserPoolNameType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    Status: Optional[StatusType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None


class AdminDeleteUserAttributesRequest(BaseModel):
    """
    Represents the request to delete user attributes as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    UserAttributeNames: AttributeNameListType


class AdminDisableProviderForUserRequest(BaseModel):
    UserPoolId: StringType
    User: ProviderUserIdentifierType


class AdminInitiateAuthResponse(BaseModel):
    """
    Initiates the authentication response, as an administrator.
    """

    ChallengeName: Optional[ChallengeNameType] = None
    Session: Optional[SessionType] = None
    ChallengeParameters: Optional[ChallengeParametersType] = None
    AuthenticationResult: Optional[AuthenticationResultType] = None


class AdminLinkProviderForUserRequest(BaseModel):
    UserPoolId: StringType
    DestinationUser: ProviderUserIdentifierType
    SourceUser: ProviderUserIdentifierType


class AdminListGroupsForUserResponse(BaseModel):
    Groups: Optional[GroupListType] = None
    NextToken: Optional[PaginationKey] = None


class AdminRespondToAuthChallengeResponse(AdminInitiateAuthResponse):
    """
    Responds to the authentication challenge, as an administrator.
    """

    pass


class AdminSetUserSettingsRequest(BaseModel):
    """
    You can use this parameter to set an MFA configuration that uses the SMS delivery medium.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    MFAOptions: MFAOptionListType


class CreateIdentityProviderResponse(BaseModel):
    IdentityProvider: IdentityProviderType


class CreateIdentityProviderRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ProviderName: ProviderNameTypeV1
    ProviderType: IdentityProviderTypeType
    ProviderDetails: ProviderDetailsType
    AttributeMapping: Optional[AttributeMappingType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None


class CreateUserImportJobResponse(BaseModel):
    """
    Represents the response from the server to the request to create the user import job.
    """

    UserImportJob: Optional[UserImportJobType] = None


class CreateUserPoolClientResponse(BaseModel):
    """
    Represents the response from the server to create a user pool client.
    """

    UserPoolClient: Optional[UserPoolClientType] = None


class CreateUserPoolClientRequest(BaseModel):
    """
    Represents the request to create a user pool client.
    """

    UserPoolId: UserPoolIdType
    ClientName: ClientNameType
    GenerateSecret: Optional[GenerateSecret] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    IdTokenValidity: Optional[IdTokenValidityType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    WriteAttributes: Optional[ClientPermissionListType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None


class DeleteUserAttributesRequest(BaseModel):
    """
    Represents the request to delete user attributes.
    """

    UserAttributeNames: AttributeNameListType
    AccessToken: TokenModelType


class DescribeIdentityProviderResponse(CreateIdentityProviderResponse):
    pass


class DescribeUserImportJobResponse(CreateUserImportJobResponse):
    """
    Represents the response from the server to the request to describe the user import job.
    """

    pass


class DescribeUserPoolClientResponse(CreateUserPoolClientResponse):
    """
    Represents the response from the server from a request to describe the user pool client.
    """

    pass


class DescribeUserPoolDomainResponse(BaseModel):
    DomainDescription: Optional[DomainDescriptionType] = None


class ForgotPasswordResponse(BaseModel):
    """
    Respresents the response from the server regarding the request to reset a password.
    """

    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None


class GetIdentityProviderByIdentifierResponse(CreateIdentityProviderResponse):
    pass


class GetUICustomizationResponse(BaseModel):
    UICustomization: UICustomizationType


class GetUserAttributeVerificationCodeResponse(ForgotPasswordResponse):
    """
    The verification code response returned by the server response to get the user attribute verification code.
    """

    pass


class InitiateAuthResponse(AdminInitiateAuthResponse):
    """
    Initiates the authentication response.
    """

    pass


class ListGroupsResponse(AdminListGroupsForUserResponse):
    pass


class ListIdentityProvidersResponse(BaseModel):
    Providers: ProvidersListType
    NextToken: Optional[PaginationKeyType] = None


class ListUserImportJobsResponse(BaseModel):
    """
    Represents the response from the server to the request to list the user import jobs.
    """

    UserImportJobs: Optional[UserImportJobsListType] = None
    PaginationToken: Optional[PaginationKeyType] = None


class ListUserPoolClientsResponse(BaseModel):
    """
    Represents the response from the server that lists user pool clients.
    """

    UserPoolClients: Optional[UserPoolClientListType] = None
    NextToken: Optional[PaginationKey] = None


class ResendConfirmationCodeResponse(ForgotPasswordResponse):
    """
    The response from the server when the Amazon Cognito Your User Pools service makes the request to resend a confirmation code.
    """

    pass


class RespondToAuthChallengeResponse(AdminInitiateAuthResponse):
    """
    The response to respond to the authentication challenge.
    """

    pass


class SetRiskConfigurationRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ClientId: Optional[ClientIdType] = None
    CompromisedCredentialsRiskConfiguration: Optional[
        CompromisedCredentialsRiskConfigurationType
    ] = None
    AccountTakeoverRiskConfiguration: Optional[
        AccountTakeoverRiskConfigurationType
    ] = None
    RiskExceptionConfiguration: Optional[RiskExceptionConfigurationType] = None


class SetUICustomizationResponse(GetUICustomizationResponse):
    pass


class SetUserSettingsRequest(BaseModel):
    """
    Represents the request to set user settings.
    """

    AccessToken: TokenModelType
    MFAOptions: MFAOptionListType


class SignUpResponse(BaseModel):
    """
    The response from the server for a registration request.
    """

    UserConfirmed: BooleanType
    CodeDeliveryDetails: Optional[CodeDeliveryDetailsType] = None
    UserSub: StringType


class StartUserImportJobResponse(CreateUserImportJobResponse):
    """
    Represents the response from the server to the request to start the user import job.
    """

    pass


class StopUserImportJobResponse(CreateUserImportJobResponse):
    """
    Represents the response from the server to the request to stop the user import job.
    """

    pass


class UpdateIdentityProviderResponse(CreateIdentityProviderResponse):
    pass


class UpdateIdentityProviderRequest(BaseModel):
    UserPoolId: UserPoolIdType
    ProviderName: ProviderNameType
    ProviderDetails: Optional[ProviderDetailsType] = None
    AttributeMapping: Optional[AttributeMappingType] = None
    IdpIdentifiers: Optional[IdpIdentifiersListType] = None


class UpdateUserAttributesResponse(BaseModel):
    """
    Represents the response from the server for the request to update user attributes.
    """

    CodeDeliveryDetailsList: Optional[CodeDeliveryDetailsListType] = None


class UpdateUserPoolClientResponse(CreateUserPoolClientResponse):
    """
    Represents the response from the server to the request to update the user pool client.
    """

    pass


class UpdateUserPoolClientRequest(BaseModel):
    """
    Represents the request to update the user pool client.
    """

    UserPoolId: UserPoolIdType
    ClientId: ClientIdType
    ClientName: Optional[ClientNameType] = None
    RefreshTokenValidity: Optional[RefreshTokenValidityType] = None
    AccessTokenValidity: Optional[AccessTokenValidityType] = None
    IdTokenValidity: Optional[IdTokenValidityType] = None
    TokenValidityUnits: Optional[TokenValidityUnitsType] = None
    ReadAttributes: Optional[ClientPermissionListType] = None
    WriteAttributes: Optional[ClientPermissionListType] = None
    ExplicitAuthFlows: Optional[ExplicitAuthFlowsListType] = None
    SupportedIdentityProviders: Optional[SupportedIdentityProvidersListType] = None
    CallbackURLs: Optional[CallbackURLsListType] = None
    LogoutURLs: Optional[LogoutURLsListType] = None
    DefaultRedirectURI: Optional[RedirectUrlType] = None
    AllowedOAuthFlows: Optional[OAuthFlowsType] = None
    AllowedOAuthScopes: Optional[ScopeListType] = None
    AllowedOAuthFlowsUserPoolClient: Optional[BooleanType] = None
    AnalyticsConfiguration: Optional[AnalyticsConfigurationType] = None
    PreventUserExistenceErrors: Optional[PreventUserExistenceErrorTypes] = None
    EnableTokenRevocation: Optional[WrappedBooleanType] = None


class RecoveryMechanismsType(BaseModel):
    __root__: Annotated[List[RecoveryOptionType], Field(max_items=2, min_items=1)]


class AccountRecoverySettingType(BaseModel):
    """
    The data type for <code>AccountRecoverySetting</code>.
    """

    RecoveryMechanisms: Optional[RecoveryMechanismsType] = None


class CustomAttributesListType(BaseModel):
    __root__: Annotated[List[SchemaAttributeType], Field(max_items=25, min_items=1)]


class AttributeListType(BaseModel):
    __root__: List[AttributeType]


class UserType(BaseModel):
    """
    The user type.
    """

    Username: Optional[UsernameType] = None
    Attributes: Optional[AttributeListType] = None
    UserCreateDate: Optional[DateType] = None
    UserLastModifiedDate: Optional[DateType] = None
    Enabled: Optional[BooleanType] = None
    UserStatus: Optional[UserStatusType] = None
    MFAOptions: Optional[MFAOptionListType] = None


class DeviceType(BaseModel):
    """
    The device type.
    """

    DeviceKey: Optional[DeviceKeyType] = None
    DeviceAttributes: Optional[AttributeListType] = None
    DeviceCreateDate: Optional[DateType] = None
    DeviceLastModifiedDate: Optional[DateType] = None
    DeviceLastAuthenticatedDate: Optional[DateType] = None


class ContextDataType(BaseModel):
    """
    Contextual user data type used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
    """

    IpAddress: StringType
    ServerName: StringType
    ServerPath: StringType
    HttpHeaders: HttpHeaderList
    EncodedData: Optional[StringType] = None


class DeviceListType(BaseModel):
    __root__: List[DeviceType]


class AuthEventsType(BaseModel):
    __root__: List[AuthEventType]


class ResourceServerScopeListType(BaseModel):
    __root__: Annotated[List[ResourceServerScopeType], Field(max_items=100)]


class ResourceServerType(BaseModel):
    """
    A container for information about a resource server for a user pool.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    Identifier: Optional[ResourceServerIdentifierType] = None
    Name: Optional[ResourceServerNameType] = None
    Scopes: Optional[ResourceServerScopeListType] = None


class SchemaAttributesListType(BaseModel):
    __root__: Annotated[List[SchemaAttributeType], Field(max_items=50, min_items=1)]


class UserPoolType(BaseModel):
    """
    A container for information about the user pool.
    """

    Id: Optional[UserPoolIdType] = None
    Name: Optional[UserPoolNameType] = None
    Policies: Optional[UserPoolPolicyType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    Status: Optional[StatusType] = None
    LastModifiedDate: Optional[DateType] = None
    CreationDate: Optional[DateType] = None
    SchemaAttributes: Optional[SchemaAttributesListType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    AliasAttributes: Optional[AliasAttributesListType] = None
    UsernameAttributes: Optional[UsernameAttributesListType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    EstimatedNumberOfUsers: Optional[IntegerType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    UserPoolTags: Optional[UserPoolTagsType] = None
    SmsConfigurationFailure: Optional[StringType] = None
    EmailConfigurationFailure: Optional[StringType] = None
    Domain: Optional[DomainType] = None
    CustomDomain: Optional[DomainType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    UsernameConfiguration: Optional[UsernameConfigurationType] = None
    Arn: Optional[ArnType] = None
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None


class RiskConfigurationType(BaseModel):
    """
    The risk configuration type.
    """

    UserPoolId: Optional[UserPoolIdType] = None
    ClientId: Optional[ClientIdType] = None
    CompromisedCredentialsRiskConfiguration: Optional[
        CompromisedCredentialsRiskConfigurationType
    ] = None
    AccountTakeoverRiskConfiguration: Optional[
        AccountTakeoverRiskConfigurationType
    ] = None
    RiskExceptionConfiguration: Optional[RiskExceptionConfigurationType] = None
    LastModifiedDate: Optional[DateType] = None


class ResourceServersListType(BaseModel):
    __root__: List[ResourceServerType]


class UserPoolListType(BaseModel):
    __root__: List[UserPoolDescriptionType]


class UsersListType(BaseModel):
    __root__: List[UserType]


class AddCustomAttributesRequest(BaseModel):
    """
    Represents the request to add custom attributes.
    """

    UserPoolId: UserPoolIdType
    CustomAttributes: CustomAttributesListType


class AdminCreateUserResponse(BaseModel):
    """
    Represents the response from the server to the request to create the user.
    """

    User: Optional[UserType] = None


class AdminCreateUserRequest(BaseModel):
    """
    Represents the request to create a user in the specified user pool.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    UserAttributes: Optional[AttributeListType] = None
    ValidationData: Optional[AttributeListType] = None
    TemporaryPassword: Optional[PasswordType] = None
    ForceAliasCreation: Optional[ForceAliasCreation] = None
    MessageAction: Optional[MessageActionType] = None
    DesiredDeliveryMediums: Optional[DeliveryMediumListType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class AdminGetDeviceResponse(BaseModel):
    """
    Gets the device response, as an administrator.
    """

    Device: DeviceType


class AdminGetUserResponse(BaseModel):
    """
    Represents the response from the server from the request to get the specified user as an administrator.
    """

    Username: UsernameType
    UserAttributes: Optional[AttributeListType] = None
    UserCreateDate: Optional[DateType] = None
    UserLastModifiedDate: Optional[DateType] = None
    Enabled: Optional[BooleanType] = None
    UserStatus: Optional[UserStatusType] = None
    MFAOptions: Optional[MFAOptionListType] = None
    PreferredMfaSetting: Optional[StringType] = None
    UserMFASettingList: Optional[UserMFASettingListType] = None


class AdminInitiateAuthRequest(BaseModel):
    """
    Initiates the authorization request, as an administrator.
    """

    UserPoolId: UserPoolIdType
    ClientId: ClientIdType
    AuthFlow: AuthFlowType
    AuthParameters: Optional[AuthParametersType] = None
    ClientMetadata: Optional[ClientMetadataType] = None
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ContextData: Optional[ContextDataType] = None


class AdminListDevicesResponse(BaseModel):
    """
    Lists the device's response, as an administrator.
    """

    Devices: Optional[DeviceListType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class AdminListUserAuthEventsResponse(BaseModel):
    AuthEvents: Optional[AuthEventsType] = None
    NextToken: Optional[PaginationKey] = None


class AdminRespondToAuthChallengeRequest(BaseModel):
    """
    The request to respond to the authentication challenge, as an administrator.
    """

    UserPoolId: UserPoolIdType
    ClientId: ClientIdType
    ChallengeName: ChallengeNameType
    ChallengeResponses: Optional[ChallengeResponsesType] = None
    Session: Optional[SessionType] = None
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    ContextData: Optional[ContextDataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class AdminUpdateUserAttributesRequest(BaseModel):
    """
    Represents the request to update the user's attributes as an administrator.
    """

    UserPoolId: UserPoolIdType
    Username: UsernameType
    UserAttributes: AttributeListType
    ClientMetadata: Optional[ClientMetadataType] = None


class CreateResourceServerResponse(BaseModel):
    ResourceServer: ResourceServerType


class CreateResourceServerRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Identifier: ResourceServerIdentifierType
    Name: ResourceServerNameType
    Scopes: Optional[ResourceServerScopeListType] = None


class CreateUserPoolResponse(BaseModel):
    """
    Represents the response from the server for the request to create a user pool.
    """

    UserPool: Optional[UserPoolType] = None


class CreateUserPoolRequest(BaseModel):
    """
    Represents the request to create a user pool.
    """

    PoolName: UserPoolNameType
    Policies: Optional[UserPoolPolicyType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    AliasAttributes: Optional[AliasAttributesListType] = None
    UsernameAttributes: Optional[UsernameAttributesListType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    UserPoolTags: Optional[UserPoolTagsType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    Schema: Optional[SchemaAttributesListType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    UsernameConfiguration: Optional[UsernameConfigurationType] = None
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None


class DescribeResourceServerResponse(CreateResourceServerResponse):
    pass


class DescribeRiskConfigurationResponse(BaseModel):
    RiskConfiguration: RiskConfigurationType


class DescribeUserPoolResponse(CreateUserPoolResponse):
    """
    Represents the response to describe the user pool.
    """

    pass


class GetDeviceResponse(AdminGetDeviceResponse):
    """
    Gets the device response.
    """

    pass


class GetUserResponse(BaseModel):
    """
    Represents the response from the server from the request to get information about the user.
    """

    Username: UsernameType
    UserAttributes: AttributeListType
    MFAOptions: Optional[MFAOptionListType] = None
    PreferredMfaSetting: Optional[StringType] = None
    UserMFASettingList: Optional[UserMFASettingListType] = None


class ListDevicesResponse(AdminListDevicesResponse):
    """
    Represents the response to list devices.
    """

    pass


class ListResourceServersResponse(BaseModel):
    ResourceServers: ResourceServersListType
    NextToken: Optional[PaginationKeyType] = None


class ListUserPoolsResponse(BaseModel):
    """
    Represents the response to list user pools.
    """

    UserPools: Optional[UserPoolListType] = None
    NextToken: Optional[PaginationKeyType] = None


class ListUsersResponse(BaseModel):
    """
    The response from the request to list users.
    """

    Users: Optional[UsersListType] = None
    PaginationToken: Optional[SearchPaginationTokenType] = None


class ListUsersInGroupResponse(BaseModel):
    Users: Optional[UsersListType] = None
    NextToken: Optional[PaginationKey] = None


class SetRiskConfigurationResponse(DescribeRiskConfigurationResponse):
    pass


class SignUpRequest(BaseModel):
    """
    Represents the request to register a user.
    """

    ClientId: ClientIdType
    SecretHash: Optional[SecretHashType] = None
    Username: UsernameType
    Password: PasswordType
    UserAttributes: Optional[AttributeListType] = None
    ValidationData: Optional[AttributeListType] = None
    AnalyticsMetadata: Optional[AnalyticsMetadataType] = None
    UserContextData: Optional[UserContextDataType] = None
    ClientMetadata: Optional[ClientMetadataType] = None


class UpdateResourceServerResponse(CreateResourceServerResponse):
    pass


class UpdateResourceServerRequest(BaseModel):
    UserPoolId: UserPoolIdType
    Identifier: ResourceServerIdentifierType
    Name: ResourceServerNameType
    Scopes: Optional[ResourceServerScopeListType] = None


class UpdateUserAttributesRequest(BaseModel):
    """
    Represents the request to update user attributes.
    """

    UserAttributes: AttributeListType
    AccessToken: TokenModelType
    ClientMetadata: Optional[ClientMetadataType] = None


class UpdateUserPoolRequest(BaseModel):
    """
    Represents the request to update the user pool.
    """

    UserPoolId: UserPoolIdType
    Policies: Optional[UserPoolPolicyType] = None
    LambdaConfig: Optional[LambdaConfigType] = None
    AutoVerifiedAttributes: Optional[VerifiedAttributesListType] = None
    SmsVerificationMessage: Optional[SmsVerificationMessageType] = None
    EmailVerificationMessage: Optional[EmailVerificationMessageType] = None
    EmailVerificationSubject: Optional[EmailVerificationSubjectType] = None
    VerificationMessageTemplate: Optional[VerificationMessageTemplateType] = None
    SmsAuthenticationMessage: Optional[SmsVerificationMessageType] = None
    MfaConfiguration: Optional[UserPoolMfaType] = None
    DeviceConfiguration: Optional[DeviceConfigurationType] = None
    EmailConfiguration: Optional[EmailConfigurationType] = None
    SmsConfiguration: Optional[SmsConfigurationType] = None
    UserPoolTags: Optional[UserPoolTagsType] = None
    AdminCreateUserConfig: Optional[AdminCreateUserConfigType] = None
    UserPoolAddOns: Optional[UserPoolAddOnsType] = None
    AccountRecoverySetting: Optional[AccountRecoverySettingType] = None

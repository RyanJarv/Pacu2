# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:04+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidInputException(BaseModel):
    __root__: Any


class AlreadyExistsException(InvalidInputException):
    pass


class ResourceNumberLimitExceededException(InvalidInputException):
    pass


class InternalServiceException(InvalidInputException):
    pass


class EntityNotFoundException(InvalidInputException):
    pass


class OperationTimeoutException(InvalidInputException):
    pass


class GlueEncryptionException(InvalidInputException):
    pass


class AccessDeniedException(InvalidInputException):
    pass


class CreateClassifierResponse(BaseModel):
    pass


class CreateConnectionResponse(CreateClassifierResponse):
    pass


class CreateCrawlerResponse(CreateClassifierResponse):
    pass


class CreateDatabaseResponse(CreateClassifierResponse):
    pass


class ConcurrentModificationException(InvalidInputException):
    pass


class IdempotentParameterMismatchException(InvalidInputException):
    pass


class ValidationException(InvalidInputException):
    pass


class CreatePartitionResponse(CreateClassifierResponse):
    pass


class CreatePartitionIndexResponse(CreateClassifierResponse):
    pass


class CreateTableResponse(CreateClassifierResponse):
    pass


class CreateUserDefinedFunctionResponse(CreateClassifierResponse):
    pass


class DeleteClassifierResponse(CreateClassifierResponse):
    pass


class DeleteColumnStatisticsForPartitionResponse(CreateClassifierResponse):
    pass


class DeleteColumnStatisticsForTableResponse(CreateClassifierResponse):
    pass


class DeleteConnectionResponse(CreateClassifierResponse):
    pass


class DeleteCrawlerResponse(CreateClassifierResponse):
    pass


class CrawlerRunningException(InvalidInputException):
    pass


class SchedulerTransitioningException(InvalidInputException):
    pass


class DeleteDatabaseResponse(CreateClassifierResponse):
    pass


class DeleteDevEndpointResponse(CreateClassifierResponse):
    pass


class DeletePartitionResponse(CreateClassifierResponse):
    pass


class DeletePartitionIndexResponse(CreateClassifierResponse):
    pass


class ConflictException(InvalidInputException):
    pass


class DeleteResourcePolicyResponse(CreateClassifierResponse):
    pass


class ConditionCheckFailureException(InvalidInputException):
    pass


class DeleteSecurityConfigurationResponse(CreateClassifierResponse):
    pass


class DeleteTableResponse(CreateClassifierResponse):
    pass


class DeleteTableVersionResponse(CreateClassifierResponse):
    pass


class DeleteUserDefinedFunctionResponse(CreateClassifierResponse):
    pass


class ImportCatalogToGlueResponse(CreateClassifierResponse):
    pass


class PutDataCatalogEncryptionSettingsResponse(CreateClassifierResponse):
    pass


class PutWorkflowRunPropertiesResponse(CreateClassifierResponse):
    pass


class ConcurrentRunsExceededException(InvalidInputException):
    pass


class IllegalWorkflowStateException(InvalidInputException):
    pass


class IllegalBlueprintStateException(InvalidInputException):
    pass


class StartCrawlerResponse(CreateClassifierResponse):
    pass


class StartCrawlerScheduleResponse(CreateClassifierResponse):
    pass


class SchedulerRunningException(InvalidInputException):
    pass


class NoScheduleException(InvalidInputException):
    pass


class MLTransformNotReadyException(InvalidInputException):
    pass


class StopCrawlerResponse(CreateClassifierResponse):
    pass


class CrawlerNotRunningException(InvalidInputException):
    pass


class CrawlerStoppingException(InvalidInputException):
    pass


class StopCrawlerScheduleResponse(CreateClassifierResponse):
    pass


class SchedulerNotRunningException(InvalidInputException):
    pass


class StopWorkflowRunResponse(CreateClassifierResponse):
    pass


class TagResourceResponse(CreateClassifierResponse):
    pass


class UntagResourceResponse(CreateClassifierResponse):
    pass


class UpdateClassifierResponse(CreateClassifierResponse):
    pass


class VersionMismatchException(InvalidInputException):
    pass


class UpdateConnectionResponse(CreateClassifierResponse):
    pass


class UpdateCrawlerResponse(CreateClassifierResponse):
    pass


class UpdateCrawlerScheduleResponse(CreateClassifierResponse):
    pass


class UpdateDatabaseResponse(CreateClassifierResponse):
    pass


class UpdateDevEndpointResponse(CreateClassifierResponse):
    pass


class UpdatePartitionResponse(CreateClassifierResponse):
    pass


class UpdateTableResponse(CreateClassifierResponse):
    pass


class UpdateUserDefinedFunctionResponse(CreateClassifierResponse):
    pass


class NameString(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class GenericMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Timeout(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class GenericString(BaseModel):
    __root__: str


class AdditionalPlanOptionsMap(GenericMap):
    pass


class AttemptCount(BaseModel):
    __root__: int


class BackfillErrorCode(Enum):
    ENCRYPTED_PARTITION_ERROR = 'ENCRYPTED_PARTITION_ERROR'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    INVALID_PARTITION_TYPE_DATA_ERROR = 'INVALID_PARTITION_TYPE_DATA_ERROR'
    MISSING_PARTITION_VALUE_ERROR = 'MISSING_PARTITION_VALUE_ERROR'
    UNSUPPORTED_PARTITION_CHARACTER_ERROR = 'UNSUPPORTED_PARTITION_CHARACTER_ERROR'


class CatalogIdString(NameString):
    pass


class DeleteConnectionNameList(BaseModel):
    __root__: Annotated[List[NameString], Field(max_items=25, min_items=0)]


class NameStringList(BaseModel):
    __root__: List[NameString]


class ErrorByName(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class BatchDeleteTableNameList(BaseModel):
    __root__: Annotated[List[NameString], Field(max_items=100, min_items=0)]


class VersionString(NameString):
    pass


class BatchDeleteTableVersionList(BaseModel):
    __root__: Annotated[List[VersionString], Field(max_items=100, min_items=0)]


class OrchestrationNameString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[\\.\\-_A-Za-z0-9]+')
    ]


class BatchGetBlueprintNames(BaseModel):
    __root__: Annotated[List[OrchestrationNameString], Field(max_items=25, min_items=1)]


class NullableBoolean(BaseModel):
    __root__: bool


class BlueprintNames(BaseModel):
    __root__: List[OrchestrationNameString]


class CrawlerNameList(BatchDeleteTableNameList):
    pass


class DevEndpointNames(BaseModel):
    __root__: Annotated[List[GenericString], Field(max_items=25, min_items=1)]


class JobNameList(NameStringList):
    pass


class TriggerNameList(NameStringList):
    pass


class WorkflowNames(BaseModel):
    __root__: Annotated[List[NameString], Field(max_items=25, min_items=1)]


class BatchSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class IdString(NameString):
    pass


class BatchStopJobRunJobRunIdList(BaseModel):
    __root__: Annotated[List[IdString], Field(max_items=25, min_items=1)]


class BatchStopJobRunSuccessfulSubmission(BaseModel):
    """
    Records a successful request to stop a specified <code>JobRun</code>.
    """

    JobName: Optional[NameString] = None
    JobRunId: Optional[IdString] = None


class BatchWindow(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=900.0)]


class NonNegativeLong(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class NonNegativeDouble(BaseModel):
    __root__: Annotated[float, Field(ge=0.0)]


class BinaryColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for bit sequence data values.
    """

    MaximumLength: NonNegativeLong
    AverageLength: NonNegativeDouble
    NumberOfNulls: NonNegativeLong


class Blob(GenericString):
    pass


class Generic512CharString(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class TimestampValue(BaseModel):
    __root__: datetime


class BlueprintParameterSpec(BaseModel):
    __root__: Annotated[str, Field(max_length=131072, min_length=1)]


class BlueprintStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    FAILED = 'FAILED'


class ErrorString1(GenericString):
    pass


class LastActiveDefinition(BaseModel):
    """
    When there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.
    """

    Description: Optional[Generic512CharString] = None
    LastModifiedOn: Optional[TimestampValue] = None
    ParameterSpec: Optional[BlueprintParameterSpec] = None
    BlueprintLocation: Optional[GenericString] = None
    BlueprintServiceLocation: Optional[GenericString] = None


class Blueprint(BaseModel):
    """
    The details of a blueprint.
    """

    Name: Optional[OrchestrationNameString] = None
    Description: Optional[Generic512CharString] = None
    CreatedOn: Optional[TimestampValue] = None
    LastModifiedOn: Optional[TimestampValue] = None
    ParameterSpec: Optional[BlueprintParameterSpec] = None
    BlueprintLocation: Optional[GenericString] = None
    BlueprintServiceLocation: Optional[GenericString] = None
    Status: Optional[BlueprintStatus] = None
    ErrorMessage: Optional[ErrorString1] = None
    LastActiveDefinition: Optional[LastActiveDefinition] = None


class BlueprintDetails(BaseModel):
    """
    The details of a blueprint.
    """

    BlueprintName: Optional[OrchestrationNameString] = None
    RunId: Optional[IdString] = None


class BlueprintParameters(BlueprintParameterSpec):
    pass


class BlueprintRunState(Enum):
    RUNNING = 'RUNNING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    ROLLING_BACK = 'ROLLING_BACK'


class MessageString(GenericString):
    pass


class OrchestrationIAMRoleArn(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=1024, min_length=1, regex='arn:aws[^:]*:iam::[0-9]*:role/.+'),
    ]


class BlueprintRun(BaseModel):
    """
    The details of a blueprint run.
    """

    BlueprintName: Optional[OrchestrationNameString] = None
    RunId: Optional[IdString] = None
    WorkflowName: Optional[NameString] = None
    State: Optional[BlueprintRunState] = None
    StartedOn: Optional[TimestampValue] = None
    CompletedOn: Optional[TimestampValue] = None
    ErrorMessage: Optional[MessageString] = None
    RollbackErrorMessage: Optional[MessageString] = None
    Parameters: Optional[BlueprintParameters] = None
    RoleArn: Optional[OrchestrationIAMRoleArn] = None


class BlueprintRuns(BaseModel):
    __root__: List[BlueprintRun]


class Boolean(NullableBoolean):
    pass


class BooleanColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for Boolean data columns.
    """

    NumberOfTrues: NonNegativeLong
    NumberOfFalses: NonNegativeLong
    NumberOfNulls: NonNegativeLong


class BooleanNullable(NullableBoolean):
    pass


class BooleanValue(NullableBoolean):
    pass


class ValueString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class HashString(NameString):
    pass


class TaskStatusType(Enum):
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    STOPPING = 'STOPPING'
    STOPPED = 'STOPPED'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    TIMEOUT = 'TIMEOUT'


class CatalogEncryptionMode(Enum):
    DISABLED = 'DISABLED'
    SSE_KMS = 'SSE-KMS'


class CatalogEntry(BaseModel):
    """
    Specifies a table definition in the Glue Data Catalog.
    """

    DatabaseName: NameString
    TableName: NameString


class CatalogEntries(BaseModel):
    __root__: List[CatalogEntry]


class CatalogGetterPageSize(BatchSize):
    pass


class Timestamp(TimestampValue):
    pass


class CatalogImportStatus(BaseModel):
    """
    A structure containing migration status information.
    """

    ImportCompleted: Optional[Boolean] = None
    ImportTime: Optional[Timestamp] = None
    ImportedBy: Optional[NameString] = None


class CatalogTablesList(BaseModel):
    __root__: Annotated[List[NameString], Field(min_items=1)]


class CatalogTarget(BaseModel):
    """
    Specifies an Glue Data Catalog target.
    """

    DatabaseName: NameString
    Tables: CatalogTablesList


class CatalogTargetList(BaseModel):
    __root__: List[CatalogTarget]


class DataFormat(Enum):
    AVRO = 'AVRO'
    JSON = 'JSON'


class SchemaDefinitionString(BaseModel):
    __root__: Annotated[str, Field(max_length=170000, min_length=1, regex='.*\\S.*')]


class IsVersionValid(NullableBoolean):
    pass


class SchemaValidationError(BaseModel):
    __root__: Annotated[str, Field(max_length=5000, min_length=1)]


class Classification(GenericString):
    pass


class ClassifierNameList(NameStringList):
    pass


class KmsKeyArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:aws:kms:.*')]


class CloudWatchEncryption(BaseModel):
    """
    Specifies how Amazon CloudWatch data should be encrypted.
    """

    CloudWatchEncryptionMode: Optional[CatalogEncryptionMode] = None
    KmsKeyArn: Optional[KmsKeyArn] = None


class CodeGenArgName(GenericString):
    pass


class CodeGenArgValue(GenericString):
    pass


class CodeGenIdentifier(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='[A-Za-z_][A-Za-z0-9_]*')
    ]


class CodeGenEdge(BaseModel):
    """
    Represents a directional edge in a directed acyclic graph (DAG).
    """

    Source: CodeGenIdentifier
    Target: CodeGenIdentifier
    TargetParameter: Optional[CodeGenArgName] = None


class CodeGenNodeType(GenericString):
    pass


class Integer(AttemptCount):
    pass


class CodeGenNodeArg(BaseModel):
    """
    An argument or property of a node.
    """

    Name: CodeGenArgName
    Value: CodeGenArgValue
    Param: Optional[Boolean] = None


class ColumnTypeString(BaseModel):
    __root__: Annotated[str, Field(max_length=131072, min_length=0)]


class CommentString(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=0)]


class ParametersMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Column(BaseModel):
    """
    A column in a <code>Table</code>.
    """

    Name: NameString
    Type: Optional[ColumnTypeString] = None
    Comment: Optional[CommentString] = None
    Parameters: Optional[ParametersMap] = None


class GenericBoundedDouble(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=1.0)]


class ColumnImportance(BaseModel):
    """
    <p>A structure containing the column name and column importance score for a column. </p> <p>Column importance helps you understand how columns contribute to your model, by identifying which columns in your records are more important than others.</p>
    """

    ColumnName: Optional[NameString] = None
    Importance: Optional[GenericBoundedDouble] = None


class ColumnImportanceList(BaseModel):
    __root__: Annotated[List[ColumnImportance], Field(max_items=100, min_items=0)]


class ColumnList(BaseModel):
    __root__: List[Column]


class ColumnNameString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class TypeString(BaseModel):
    __root__: Annotated[str, Field(max_length=20000, min_length=0)]


class ColumnStatisticsType(Enum):
    BOOLEAN = 'BOOLEAN'
    DATE = 'DATE'
    DECIMAL = 'DECIMAL'
    DOUBLE = 'DOUBLE'
    LONG = 'LONG'
    STRING = 'STRING'
    BINARY = 'BINARY'


class DateColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for timestamp data columns.
    """

    MinimumValue: Optional[Timestamp] = None
    MaximumValue: Optional[Timestamp] = None
    NumberOfNulls: NonNegativeLong
    NumberOfDistinctValues: NonNegativeLong


class StringColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for character sequence data values.
    """

    MaximumLength: NonNegativeLong
    AverageLength: NonNegativeDouble
    NumberOfNulls: NonNegativeLong
    NumberOfDistinctValues: NonNegativeLong


class ColumnValuesString(GenericString):
    pass


class ColumnValueStringList(BaseModel):
    __root__: List[ColumnValuesString]


class Comparator(Enum):
    EQUALS = 'EQUALS'
    GREATER_THAN = 'GREATER_THAN'
    LESS_THAN = 'LESS_THAN'
    GREATER_THAN_EQUALS = 'GREATER_THAN_EQUALS'
    LESS_THAN_EQUALS = 'LESS_THAN_EQUALS'


class Compatibility(Enum):
    NONE = 'NONE'
    DISABLED = 'DISABLED'
    BACKWARD = 'BACKWARD'
    BACKWARD_ALL = 'BACKWARD_ALL'
    FORWARD = 'FORWARD'
    FORWARD_ALL = 'FORWARD_ALL'
    FULL = 'FULL'
    FULL_ALL = 'FULL_ALL'


class LogicalOperator(Enum):
    EQUALS = 'EQUALS'


class CrawlState(Enum):
    RUNNING = 'RUNNING'
    CANCELLING = 'CANCELLING'
    CANCELLED = 'CANCELLED'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class Condition(BaseModel):
    """
    Defines a condition under which a trigger fires.
    """

    LogicalOperator: Optional[LogicalOperator] = None
    JobName: Optional[NameString] = None
    State: Optional[TaskStatusType] = None
    CrawlerName: Optional[NameString] = None
    CrawlState: Optional[CrawlState] = None


class ConditionList(BaseModel):
    __root__: List[Condition]


class RecordsCount(AttemptCount):
    pass


class ConfusionMatrix(BaseModel):
    """
    <p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href="https://en.wikipedia.org/wiki/Confusion_matrix">Confusion matrix</a> in Wikipedia.</p>
    """

    NumTruePositives: Optional[RecordsCount] = None
    NumFalsePositives: Optional[RecordsCount] = None
    NumTrueNegatives: Optional[RecordsCount] = None
    NumFalseNegatives: Optional[RecordsCount] = None


class DescriptionString(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0)]


class ConnectionType(Enum):
    JDBC = 'JDBC'
    SFTP = 'SFTP'
    MONGODB = 'MONGODB'
    KAFKA = 'KAFKA'
    NETWORK = 'NETWORK'
    MARKETPLACE = 'MARKETPLACE'
    CUSTOM = 'CUSTOM'


class MatchCriteria(BaseModel):
    __root__: Annotated[List[NameString], Field(max_items=10, min_items=0)]


class ConnectionProperties(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ConnectionName1(GenericString):
    pass


class ConnectionPasswordEncryption(BaseModel):
    """
    <p>The data structure used by the Data Catalog to encrypt the password as part of <code>CreateConnection</code> or <code>UpdateConnection</code> and store it in the <code>ENCRYPTED_PASSWORD</code> field in the connection properties. You can enable catalog encryption or only password encryption.</p> <p>When a <code>CreationConnection</code> request arrives containing a password, the Data Catalog first encrypts the password using your KMS key. It then encrypts the whole connection object again if catalog encryption is also enabled.</p> <p>This encryption requires that you set KMS key permissions to enable or restrict access on the password key according to your security requirements. For example, you might want only administrators to have decrypt permission on the password key.</p>
    """

    ReturnConnectionPasswordEncrypted: Boolean
    AwsKmsKeyId: Optional[NameString] = None


class ConnectionPropertyKey(Enum):
    HOST = 'HOST'
    PORT = 'PORT'
    USERNAME = 'USERNAME'
    PASSWORD = 'PASSWORD'
    ENCRYPTED_PASSWORD = 'ENCRYPTED_PASSWORD'
    JDBC_DRIVER_JAR_URI = 'JDBC_DRIVER_JAR_URI'
    JDBC_DRIVER_CLASS_NAME = 'JDBC_DRIVER_CLASS_NAME'
    JDBC_ENGINE = 'JDBC_ENGINE'
    JDBC_ENGINE_VERSION = 'JDBC_ENGINE_VERSION'
    CONFIG_FILES = 'CONFIG_FILES'
    INSTANCE_ID = 'INSTANCE_ID'
    JDBC_CONNECTION_URL = 'JDBC_CONNECTION_URL'
    JDBC_ENFORCE_SSL = 'JDBC_ENFORCE_SSL'
    CUSTOM_JDBC_CERT = 'CUSTOM_JDBC_CERT'
    SKIP_CUSTOM_JDBC_CERT_VALIDATION = 'SKIP_CUSTOM_JDBC_CERT_VALIDATION'
    CUSTOM_JDBC_CERT_STRING = 'CUSTOM_JDBC_CERT_STRING'
    CONNECTION_URL = 'CONNECTION_URL'
    KAFKA_BOOTSTRAP_SERVERS = 'KAFKA_BOOTSTRAP_SERVERS'
    KAFKA_SSL_ENABLED = 'KAFKA_SSL_ENABLED'
    KAFKA_CUSTOM_CERT = 'KAFKA_CUSTOM_CERT'
    KAFKA_SKIP_CUSTOM_CERT_VALIDATION = 'KAFKA_SKIP_CUSTOM_CERT_VALIDATION'
    KAFKA_CLIENT_KEYSTORE = 'KAFKA_CLIENT_KEYSTORE'
    KAFKA_CLIENT_KEYSTORE_PASSWORD = 'KAFKA_CLIENT_KEYSTORE_PASSWORD'
    KAFKA_CLIENT_KEY_PASSWORD = 'KAFKA_CLIENT_KEY_PASSWORD'
    ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD = (
        'ENCRYPTED_KAFKA_CLIENT_KEYSTORE_PASSWORD'
    )
    ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD = 'ENCRYPTED_KAFKA_CLIENT_KEY_PASSWORD'
    SECRET_ID = 'SECRET_ID'
    CONNECTOR_URL = 'CONNECTOR_URL'
    CONNECTOR_TYPE = 'CONNECTOR_TYPE'
    CONNECTOR_CLASS_NAME = 'CONNECTOR_CLASS_NAME'


class OrchestrationStringList(BaseModel):
    __root__: List[GenericString]


class ConnectionsList(BaseModel):
    """
    Specifies the connections used by a job.
    """

    Connections: Optional[OrchestrationStringList] = None


class LogGroup(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='[\\.\\-_/#A-Za-z0-9]+')
    ]


class LogStream(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1, regex='[^:*]*')]


class Crawl(BaseModel):
    """
    The details of a crawl in the workflow.
    """

    State: Optional[CrawlState] = None
    StartedOn: Optional[TimestampValue] = None
    CompletedOn: Optional[TimestampValue] = None
    ErrorMessage: Optional[DescriptionString] = None
    LogGroup: Optional[LogGroup] = None
    LogStream: Optional[LogStream] = None


class CrawlList(BaseModel):
    __root__: List[Crawl]


class Role(GenericString):
    pass


class DatabaseName(GenericString):
    pass


class CrawlerState(Enum):
    READY = 'READY'
    RUNNING = 'RUNNING'
    STOPPING = 'STOPPING'


class TablePrefix(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0)]


class MillisecondsCount(AttemptCount):
    pass


class VersionId(AttemptCount):
    pass


class CrawlerConfiguration(GenericString):
    pass


class CrawlerSecurityConfiguration(TablePrefix):
    pass


class CrawlerLineageSettings(Enum):
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'


class NonNegativeInteger(NonNegativeLong):
    pass


class CrawlerMetrics(BaseModel):
    """
    Metrics for a specified crawler.
    """

    CrawlerName: Optional[NameString] = None
    TimeLeftSeconds: Optional[NonNegativeDouble] = None
    StillEstimating: Optional[Boolean] = None
    LastRuntimeSeconds: Optional[NonNegativeDouble] = None
    MedianRuntimeSeconds: Optional[NonNegativeDouble] = None
    TablesCreated: Optional[NonNegativeInteger] = None
    TablesUpdated: Optional[NonNegativeInteger] = None
    TablesDeleted: Optional[NonNegativeInteger] = None


class CrawlerMetricsList(BaseModel):
    __root__: List[CrawlerMetrics]


class CrawlerNodeDetails(BaseModel):
    """
    The details of a Crawler node present in the workflow.
    """

    Crawls: Optional[CrawlList] = None


class OrchestrationS3Location(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=8192, min_length=1, regex='^s3://([^/]+)/([^/]+/)*([^/]+)$'),
    ]


class TagsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CronExpression(GenericString):
    pass


class CsvColumnDelimiter(BaseModel):
    __root__: Annotated[str, Field(max_length=1, min_length=1, regex='[^\\r\\n]')]


class CsvQuoteSymbol(CsvColumnDelimiter):
    pass


class CsvHeaderOption(Enum):
    UNKNOWN = 'UNKNOWN'
    PRESENT = 'PRESENT'
    ABSENT = 'ABSENT'


class CsvHeader(NameStringList):
    pass


class RoleArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:aws:iam::\\d{12}:role/.*')]


class StringList(OrchestrationStringList):
    pass


class PublicKeysList(BaseModel):
    __root__: Annotated[List[GenericString], Field(max_items=5)]


class IntegerValue(AttemptCount):
    pass


class WorkerType(Enum):
    Standard = 'Standard'
    G_1X = 'G.1X'
    G_2X = 'G.2X'


class GlueVersionString(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='^\\w+\\.\\w+$')]


class NullableInteger(AttemptCount):
    pass


class MapValue(GenericMap):
    pass


class GrokPattern(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class CustomPatterns(BaseModel):
    __root__: Annotated[str, Field(max_length=16000, min_length=0)]


class UriString(GenericString):
    pass


class RoleString(GenericString):
    pass


class MaxRetries(AttemptCount):
    pass


class NullableDouble(BaseModel):
    __root__: float


class JsonPath(GenericString):
    pass


class SchemaRegistryNameString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='[a-zA-Z0-9-_$#.]+')
    ]


class GlueResourceArn(BaseModel):
    __root__: Annotated[
        str, Field(max_length=10240, min_length=1, regex='arn:aws:glue:.*')
    ]


class RegistryId(BaseModel):
    """
    A wrapper structure that may contain the registry name and Amazon Resource Name (ARN).
    """

    RegistryName: Optional[SchemaRegistryNameString] = None
    RegistryArn: Optional[GlueResourceArn] = None


class SchemaCheckpointNumber(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100000.0)]


class VersionLongNumber(SchemaCheckpointNumber):
    pass


class SchemaStatus(Enum):
    AVAILABLE = 'AVAILABLE'
    PENDING = 'PENDING'
    DELETING = 'DELETING'


class SchemaVersionIdString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}',
        ),
    ]


class SchemaVersionStatus(Enum):
    AVAILABLE = 'AVAILABLE'
    PENDING = 'PENDING'
    FAILURE = 'FAILURE'
    DELETING = 'DELETING'


class DagEdges(BaseModel):
    __root__: List[CodeGenEdge]


class Language(Enum):
    PYTHON = 'PYTHON'
    SCALA = 'SCALA'


class PythonScript(GenericString):
    pass


class ScalaCode(GenericString):
    pass


class TriggerType(Enum):
    SCHEDULED = 'SCHEDULED'
    CONDITIONAL = 'CONDITIONAL'
    ON_DEMAND = 'ON_DEMAND'
    EVENT = 'EVENT'


class EventBatchingCondition(BaseModel):
    """
    Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.
    """

    BatchSize: BatchSize
    BatchWindow: Optional[BatchWindow] = None


class WorkflowRunProperties(GenericMap):
    pass


class RowTag(GenericString):
    pass


class CreatedTimestamp(GenericString):
    pass


class EncryptionAtRest(BaseModel):
    """
    Specifies the encryption-at-rest configuration for the Data Catalog.
    """

    CatalogEncryptionMode: CatalogEncryptionMode
    SseAwsKmsKeyId: Optional[NameString] = None


class DataCatalogEncryptionSettings(BaseModel):
    """
    Contains configuration information for maintaining Data Catalog security.
    """

    EncryptionAtRest: Optional[EncryptionAtRest] = None
    ConnectionPasswordEncryption: Optional[ConnectionPasswordEncryption] = None


class DataLakePrincipalString(NameString):
    pass


class DataLakePrincipal(BaseModel):
    """
    The Lake Formation principal.
    """

    DataLakePrincipalIdentifier: Optional[DataLakePrincipalString] = None


class URI(ColumnNameString):
    pass


class DatabaseIdentifier(BaseModel):
    """
    A structure that describes a target database for resource linking.
    """

    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: Optional[NameString] = None


class DecimalNumber(BaseModel):
    """
    Contains a numeric value in decimal format.
    """

    UnscaledValue: Blob
    Scale: Integer


class DeleteBehavior(Enum):
    LOG = 'LOG'
    DELETE_FROM_DATABASE = 'DELETE_FROM_DATABASE'
    DEPRECATE_IN_DATABASE = 'DEPRECATE_IN_DATABASE'


class ValueStringList(BaseModel):
    __root__: List[ValueString]


class RegistryStatus(Enum):
    AVAILABLE = 'AVAILABLE'
    DELETING = 'DELETING'


class SchemaId(BaseModel):
    """
    The unique ID of the schema in the Glue schema registry.
    """

    SchemaArn: Optional[GlueResourceArn] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    RegistryName: Optional[SchemaRegistryNameString] = None


class VersionsString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100000, min_length=1, regex='[1-9][0-9]*|[1-9][0-9]*-[1-9][0-9]*'
        ),
    ]


class DescriptionStringRemovable(DescriptionString):
    pass


class DevEndpoint(BaseModel):
    """
    A development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.
    """

    EndpointName: Optional[GenericString] = None
    RoleArn: Optional[RoleArn] = None
    SecurityGroupIds: Optional[StringList] = None
    SubnetId: Optional[GenericString] = None
    YarnEndpointAddress: Optional[GenericString] = None
    PrivateAddress: Optional[GenericString] = None
    ZeppelinRemoteSparkInterpreterPort: Optional[IntegerValue] = None
    PublicAddress: Optional[GenericString] = None
    Status: Optional[GenericString] = None
    WorkerType: Optional[WorkerType] = None
    GlueVersion: Optional[GlueVersionString] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    NumberOfNodes: Optional[IntegerValue] = None
    AvailabilityZone: Optional[GenericString] = None
    VpcId: Optional[GenericString] = None
    ExtraPythonLibsS3Path: Optional[GenericString] = None
    ExtraJarsS3Path: Optional[GenericString] = None
    FailureReason: Optional[GenericString] = None
    LastUpdateStatus: Optional[GenericString] = None
    CreatedTimestamp: Optional[TimestampValue] = None
    LastModifiedTimestamp: Optional[TimestampValue] = None
    PublicKey: Optional[GenericString] = None
    PublicKeys: Optional[PublicKeysList] = None
    SecurityConfiguration: Optional[NameString] = None
    Arguments: Optional[MapValue] = None


class DevEndpointCustomLibraries(BaseModel):
    """
    Custom libraries to be loaded into a development endpoint.
    """

    ExtraPythonLibsS3Path: Optional[GenericString] = None
    ExtraJarsS3Path: Optional[GenericString] = None


class DevEndpointNameList(NameStringList):
    pass


class Double(NullableDouble):
    pass


class Path(GenericString):
    pass


class DynamoDBTarget(BaseModel):
    """
    Specifies an Amazon DynamoDB table to crawl.
    """

    Path: Optional[Path] = None
    scanAll: Optional[NullableBoolean] = None
    scanRate: Optional[NullableDouble] = None


class Edge(BaseModel):
    """
    An edge represents a directed connection between two components on a workflow graph.
    """

    SourceId: Optional[NameString] = None
    DestinationId: Optional[NameString] = None


class EdgeList(BaseModel):
    __root__: List[Edge]


class EnableHybridValues(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'


class ErrorCodeString(GenericString):
    pass


class ErrorMessageString(GenericString):
    pass


class ErrorDetails(BaseModel):
    """
    An object containing error details.
    """

    ErrorCode: Optional[ErrorCodeString] = None
    ErrorMessage: Optional[ErrorMessageString] = None


class TransformType(Enum):
    FIND_MATCHES = 'FIND_MATCHES'


class FindMatchesMetrics(BaseModel):
    """
    The evaluation metrics for the find matches algorithm. The quality of your machine learning transform is measured by getting your transform to predict some matches and comparing the results to known matches from the same dataset. The quality metrics are based on a subset of your data, so they are not precise.
    """

    AreaUnderPRCurve: Optional[GenericBoundedDouble] = None
    Precision: Optional[GenericBoundedDouble] = None
    Recall: Optional[GenericBoundedDouble] = None
    F1: Optional[GenericBoundedDouble] = None
    ConfusionMatrix: Optional[ConfusionMatrix] = None
    ColumnImportances: Optional[ColumnImportanceList] = None


class EvaluationMetrics(BaseModel):
    """
    Evaluation metrics provide an estimate of the quality of your machine learning transform.
    """

    TransformType: TransformType
    FindMatchesMetrics: Optional[FindMatchesMetrics] = None


class MaxConcurrentRuns(AttemptCount):
    pass


class ExecutionTime(AttemptCount):
    pass


class ExistCondition(Enum):
    MUST_EXIST = 'MUST_EXIST'
    NOT_EXIST = 'NOT_EXIST'
    NONE = 'NONE'


class ExportLabelsTaskRunProperties(BaseModel):
    """
    Specifies configuration properties for an exporting labels task run.
    """

    OutputS3Path: Optional[UriString] = None


class FieldType(GenericString):
    pass


class FilterString(DescriptionString):
    pass


class FindMatchesParameters(BaseModel):
    """
    The parameters to configure the find matches transform.
    """

    PrimaryKeyColumnName: Optional[ColumnNameString] = None
    PrecisionRecallTradeoff: Optional[GenericBoundedDouble] = None
    AccuracyCostTradeoff: Optional[GenericBoundedDouble] = None
    EnforceProvidedLabels: Optional[NullableBoolean] = None


class FindMatchesTaskRunProperties(BaseModel):
    """
    Specifies configuration properties for a Find Matches task run.
    """

    JobId: Optional[HashString] = None
    JobName: Optional[NameString] = None
    JobRunId: Optional[HashString] = None


class FormatString(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class PageSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class Token(GenericString):
    pass


class GetColumnNamesList(BatchDeleteTableNameList):
    pass


class GetConnectionsFilter(BaseModel):
    """
    Filters the connection definitions that are returned by the <code>GetConnections</code> API operation.
    """

    MatchCriteria: Optional[MatchCriteria] = None
    ConnectionType: Optional[ConnectionType] = None


class ResourceShareType(Enum):
    FOREIGN = 'FOREIGN'
    ALL = 'ALL'


class JobName(GenericString):
    pass


class RunId(GenericString):
    pass


class PaginationToken(GenericString):
    pass


class TransformStatusType(Enum):
    NOT_READY = 'NOT_READY'
    READY = 'READY'
    DELETING = 'DELETING'


class LabelCount(AttemptCount):
    pass


class PredicateString(DescriptionString):
    pass


class UpdatedTimestamp(GenericString):
    pass


class PolicyJsonString(BaseModel):
    __root__: Annotated[str, Field(max_length=10240, min_length=2)]


class SchemaDiffType(Enum):
    SYNTAX_DIFF = 'SYNTAX_DIFF'


class SchemaDefinitionDiff(BaseModel):
    __root__: Annotated[str, Field(max_length=340000, min_length=1, regex='.*\\S.*')]


class GlueTable(BaseModel):
    """
    The database and table in the Glue Data Catalog that is used for input or output data.
    """

    DatabaseName: NameString
    TableName: NameString
    CatalogId: Optional[NameString] = None
    ConnectionName: Optional[NameString] = None


class ReplaceBoolean(NullableBoolean):
    pass


class ImportLabelsTaskRunProperties(BaseModel):
    """
    Specifies configuration properties for an importing labels task run.
    """

    InputS3Path: Optional[UriString] = None
    Replace: Optional[ReplaceBoolean] = None


class IntegerFlag(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1.0)]


class PathList(BaseModel):
    __root__: List[Path]


class JdbcTarget(BaseModel):
    """
    Specifies a JDBC data store to crawl.
    """

    ConnectionName: Optional[ConnectionName1] = None
    Path: Optional[Path] = None
    Exclusions: Optional[PathList] = None


class JsonValue(GenericString):
    pass


class JobBookmarksEncryptionMode(Enum):
    DISABLED = 'DISABLED'
    CSE_KMS = 'CSE-KMS'


class ScriptLocationString(GenericString):
    pass


class PythonVersionString(BaseModel):
    __root__: Annotated[str, Field(regex='^[2-3]$')]


class KeyList(CatalogTablesList):
    pass


class KeySchemaElement(BaseModel):
    """
    A partition key pair consisting of a name and a type.
    """

    Name: NameString
    Type: ColumnTypeString


class KeySchemaElementList(BaseModel):
    __root__: Annotated[List[KeySchemaElement], Field(min_items=1)]


class KeyString(NameString):
    pass


class LabelingSetGenerationTaskRunProperties(ExportLabelsTaskRunProperties):
    """
    Specifies configuration properties for a labeling set generation task run.
    """

    pass


class LastCrawlStatus(Enum):
    SUCCEEDED = 'SUCCEEDED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'


class MessagePrefix(NameString):
    pass


class LatestSchemaVersionBoolean(NullableBoolean):
    pass


class TransformIdList(BaseModel):
    __root__: List[HashString]


class MaxResultsNumber(BatchSize):
    pass


class SchemaRegistryTokenString(GenericString):
    pass


class LocationMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LocationString(BaseModel):
    __root__: Annotated[str, Field(max_length=2056)]


class Logical(Enum):
    AND = 'AND'
    ANY = 'ANY'


class Long(AttemptCount):
    pass


class MLUserDataEncryption(BaseModel):
    """
    The encryption-at-rest settings of the transform that apply to accessing user data.
    """

    MlUserDataEncryptionMode: CatalogEncryptionMode
    KmsKeyId: Optional[NameString] = None


class TableName25(GenericString):
    pass


class SchemaPathString(GenericString):
    pass


class MappingEntry(BaseModel):
    """
    Defines a mapping.
    """

    SourceTable: Optional[TableName25] = None
    SourcePath: Optional[SchemaPathString] = None
    SourceType: Optional[FieldType] = None
    TargetTable: Optional[TableName25] = None
    TargetPath: Optional[SchemaPathString] = None
    TargetType: Optional[FieldType] = None


class MetadataValueString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[a-zA-Z0-9+-=._./@]+')
    ]


class MetadataInfoMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class MetadataKeyString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9+-=._./@]+')
    ]


class MetadataKeyValuePair(BaseModel):
    """
    A structure containing a key value pair for metadata.
    """

    MetadataKey: Optional[MetadataKeyString] = None
    MetadataValue: Optional[MetadataValueString] = None


class MetadataList(BaseModel):
    __root__: List[MetadataKeyValuePair]


class MongoDBTarget(BaseModel):
    """
    Specifies an Amazon DocumentDB or MongoDB data store to crawl.
    """

    ConnectionName: Optional[ConnectionName1] = None
    Path: Optional[Path] = None
    ScanAll: Optional[NullableBoolean] = None


class NodeType1(Enum):
    CRAWLER = 'CRAWLER'
    JOB = 'JOB'
    TRIGGER = 'TRIGGER'


class NodeIdList(NameStringList):
    pass


class NotifyDelayAfter(Timeout):
    pass


class Order(BaseModel):
    """
    Specifies the sort order of a sorted column.
    """

    Column: NameString
    SortOrder: IntegerFlag


class OrderList(BaseModel):
    __root__: List[Order]


class OtherMetadataValueListItem(BaseModel):
    """
    A structure containing other metadata for a schema version belonging to the same metadata key.
    """

    MetadataValue: Optional[MetadataValueString] = None
    CreatedTime: Optional[CreatedTimestamp] = None


class ParametersMapValue(BaseModel):
    __root__: Annotated[str, Field(max_length=512000)]


class PartitionIndexStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class Permission(Enum):
    ALL = 'ALL'
    SELECT = 'SELECT'
    ALTER = 'ALTER'
    DROP = 'DROP'
    DELETE = 'DELETE'
    INSERT = 'INSERT'
    CREATE_DATABASE = 'CREATE_DATABASE'
    CREATE_TABLE = 'CREATE_TABLE'
    DATA_LOCATION_ACCESS = 'DATA_LOCATION_ACCESS'


class PermissionList(BaseModel):
    __root__: List[Permission]


class SecurityGroupIdList(BaseModel):
    __root__: Annotated[List[NameString], Field(max_items=50, min_items=0)]


class Predecessor(BaseModel):
    """
    A job run that was used in the predicate of a conditional trigger that triggered this job run.
    """

    JobName: Optional[NameString] = None
    RunId: Optional[IdString] = None


class PrincipalPermissions(BaseModel):
    """
    Permissions granted to a principal.
    """

    Principal: Optional[DataLakePrincipal] = None
    Permissions: Optional[PermissionList] = None


class PrincipalType(Enum):
    USER = 'USER'
    ROLE = 'ROLE'
    GROUP = 'GROUP'


class PropertyPredicate(BaseModel):
    """
    Defines a property predicate.
    """

    Key: Optional[ValueString] = None
    Value: Optional[ValueString] = None
    Comparator: Optional[Comparator] = None


class QuerySchemaVersionMetadataMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class RecrawlBehavior(Enum):
    CRAWL_EVERYTHING = 'CRAWL_EVERYTHING'
    CRAWL_NEW_FOLDERS_ONLY = 'CRAWL_NEW_FOLDERS_ONLY'


class RegistryListItem(BaseModel):
    """
    A structure containing the details for a registry.
    """

    RegistryName: Optional[SchemaRegistryNameString] = None
    RegistryArn: Optional[GlueResourceArn] = None
    Description: Optional[DescriptionString] = None
    Status: Optional[RegistryStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None
    UpdatedTime: Optional[UpdatedTimestamp] = None


class ResourceType(Enum):
    JAR = 'JAR'
    FILE = 'FILE'
    ARCHIVE = 'ARCHIVE'


class ResourceUri(BaseModel):
    """
    The URIs for function resources.
    """

    ResourceType: Optional[ResourceType] = None
    Uri: Optional[URI] = None


class ResourceUriList(BaseModel):
    __root__: Annotated[List[ResourceUri], Field(max_items=1000, min_items=0)]


class S3EncryptionMode(Enum):
    DISABLED = 'DISABLED'
    SSE_KMS = 'SSE-KMS'
    SSE_S3 = 'SSE-S3'


class S3Encryption(BaseModel):
    """
    Specifies how Amazon Simple Storage Service (Amazon S3) data should be encrypted.
    """

    S3EncryptionMode: Optional[S3EncryptionMode] = None
    KmsKeyArn: Optional[KmsKeyArn] = None


class S3Target(BaseModel):
    """
    Specifies a data store in Amazon Simple Storage Service (Amazon S3).
    """

    Path: Optional[Path] = None
    Exclusions: Optional[PathList] = None
    ConnectionName: Optional[ConnectionName1] = None
    SampleSize: Optional[NullableInteger] = None


class ScheduleState(Enum):
    SCHEDULED = 'SCHEDULED'
    NOT_SCHEDULED = 'NOT_SCHEDULED'
    TRANSITIONING = 'TRANSITIONING'


class UpdateBehavior(Enum):
    LOG = 'LOG'
    UPDATE_IN_DATABASE = 'UPDATE_IN_DATABASE'


class SchemaColumn(BaseModel):
    """
    A key-value pair representing a column and data type that this transform can run against. The <code>Schema</code> parameter of the <code>MLTransform</code> may contain up to 100 of these structures.
    """

    Name: Optional[ColumnNameString] = None
    DataType: Optional[ColumnTypeString] = None


class SchemaListItem(BaseModel):
    """
    An object that contains minimal details for a schema.
    """

    RegistryName: Optional[SchemaRegistryNameString] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    SchemaArn: Optional[GlueResourceArn] = None
    Description: Optional[DescriptionString] = None
    SchemaStatus: Optional[SchemaStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None
    UpdatedTime: Optional[UpdatedTimestamp] = None


class SchemaReference(BaseModel):
    """
    An object that references a schema stored in the Glue Schema Registry.
    """

    SchemaId: Optional[SchemaId] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    SchemaVersionNumber: Optional[VersionLongNumber] = None


class SchemaVersionErrorItem(BaseModel):
    """
    An object that contains the error details for an operation on a schema version.
    """

    VersionNumber: Optional[VersionLongNumber] = None
    ErrorDetails: Optional[ErrorDetails] = None


class SchemaVersionListItem(BaseModel):
    """
    An object containing the details about a schema version.
    """

    SchemaArn: Optional[GlueResourceArn] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    VersionNumber: Optional[VersionLongNumber] = None
    Status: Optional[SchemaVersionStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None


class SearchPropertyPredicates(BaseModel):
    __root__: List[PropertyPredicate]


class TotalSegmentsInteger(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class SerDeInfo(BaseModel):
    """
    Information about a serialization/deserialization program (SerDe) that serves as an extractor and loader.
    """

    Name: Optional[NameString] = None
    SerializationLibrary: Optional[NameString] = None
    Parameters: Optional[ParametersMap] = None


class SkewedInfo(BaseModel):
    """
    Specifies skewed values in a table. Skewed values are those that occur with very high frequency.
    """

    SkewedColumnNames: Optional[NameStringList] = None
    SkewedColumnValues: Optional[ColumnValueStringList] = None
    SkewedColumnValueLocationMaps: Optional[LocationMap] = None


class Sort3(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class SortCriterion(BaseModel):
    """
    Specifies a field to sort by and a sort order.
    """

    FieldName: Optional[ValueString] = None
    Sort: Optional[Sort3] = None


class SortDirectionType(Enum):
    DESCENDING = 'DESCENDING'
    ASCENDING = 'ASCENDING'


class StartingEventBatchCondition(BaseModel):
    """
    The batch condition that started the workflow run. Either the number of events in the batch size arrived, in which case the BatchSize member is non-zero, or the batch window expired, in which case the BatchWindow member is non-zero.
    """

    BatchSize: Optional[NullableInteger] = None
    BatchWindow: Optional[NullableInteger] = None


class ViewTextString(BaseModel):
    __root__: Annotated[str, Field(max_length=409600)]


class TableTypeString(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class TableIdentifier(BaseModel):
    """
    A structure that describes a target table for resource linking.
    """

    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: Optional[NameString] = None
    Name: Optional[NameString] = None


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagKeysList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=0)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class TaskType(Enum):
    EVALUATION = 'EVALUATION'
    LABELING_SET_GENERATION = 'LABELING_SET_GENERATION'
    IMPORT_LABELS = 'IMPORT_LABELS'
    EXPORT_LABELS = 'EXPORT_LABELS'
    FIND_MATCHES = 'FIND_MATCHES'


class TaskRunSortColumnType(Enum):
    TASK_RUN_TYPE = 'TASK_RUN_TYPE'
    STATUS = 'STATUS'
    STARTED = 'STARTED'


class TransformSortColumnType(Enum):
    NAME = 'NAME'
    TRANSFORM_TYPE = 'TRANSFORM_TYPE'
    STATUS = 'STATUS'
    CREATED = 'CREATED'
    LAST_MODIFIED = 'LAST_MODIFIED'


class TriggerState(Enum):
    CREATING = 'CREATING'
    CREATED = 'CREATED'
    ACTIVATING = 'ACTIVATING'
    ACTIVATED = 'ACTIVATED'
    DEACTIVATING = 'DEACTIVATING'
    DEACTIVATED = 'DEACTIVATED'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'


class UpdateGrokClassifierRequest(BaseModel):
    """
    Specifies a grok classifier to update when passed to <code>UpdateClassifier</code>.
    """

    Name: NameString
    Classification: Optional[Classification] = None
    GrokPattern: Optional[GrokPattern] = None
    CustomPatterns: Optional[CustomPatterns] = None


class UpdateXMLClassifierRequest(BaseModel):
    """
    Specifies an XML classifier to be updated.
    """

    Name: NameString
    Classification: Optional[Classification] = None
    RowTag: Optional[RowTag] = None


class UpdateJsonClassifierRequest(BaseModel):
    """
    Specifies a JSON classifier to be updated.
    """

    Name: NameString
    JsonPath: Optional[JsonPath] = None


class UpdateCsvClassifierRequest(BaseModel):
    """
    Specifies a custom CSV classifier to be updated.
    """

    Name: NameString
    Delimiter: Optional[CsvColumnDelimiter] = None
    QuoteSymbol: Optional[CsvQuoteSymbol] = None
    ContainsHeader: Optional[CsvHeaderOption] = None
    Header: Optional[CsvHeader] = None
    DisableValueTrimming: Optional[NullableBoolean] = None
    AllowSingleColumn: Optional[NullableBoolean] = None


class WorkflowRunStatus(Enum):
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'
    STOPPING = 'STOPPING'
    STOPPED = 'STOPPED'
    ERROR = 'ERROR'


class WorkflowRunStatistics(BaseModel):
    """
    Workflow run statistics provides statistics about the workflow run.
    """

    TotalActions: Optional[IntegerValue] = None
    TimeoutActions: Optional[IntegerValue] = None
    FailedActions: Optional[IntegerValue] = None
    StoppedActions: Optional[IntegerValue] = None
    SucceededActions: Optional[IntegerValue] = None
    RunningActions: Optional[IntegerValue] = None


class BatchDeleteConnectionResponse(BaseModel):
    Succeeded: Optional[NameStringList] = None
    Errors: Optional[ErrorByName] = None


class BatchDeleteConnectionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    ConnectionNameList: DeleteConnectionNameList


class BatchDeleteTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TablesToDelete: BatchDeleteTableNameList


class BatchDeleteTableVersionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    VersionIds: BatchDeleteTableVersionList


class BatchGetBlueprintsRequest(BaseModel):
    Names: BatchGetBlueprintNames
    IncludeBlueprint: Optional[NullableBoolean] = None
    IncludeParameterSpec: Optional[NullableBoolean] = None


class BatchGetCrawlersRequest(BaseModel):
    CrawlerNames: CrawlerNameList


class BatchGetDevEndpointsRequest(BaseModel):
    DevEndpointNames: DevEndpointNames


class BatchGetJobsRequest(BaseModel):
    JobNames: JobNameList


class BatchGetTriggersRequest(BaseModel):
    TriggerNames: TriggerNameList


class BatchGetWorkflowsRequest(BaseModel):
    Names: WorkflowNames
    IncludeGraph: Optional[NullableBoolean] = None


class BatchStopJobRunRequest(BaseModel):
    JobName: NameString
    JobRunIds: BatchStopJobRunJobRunIdList


class CancelMLTaskRunResponse(BaseModel):
    TransformId: Optional[HashString] = None
    TaskRunId: Optional[HashString] = None
    Status: Optional[TaskStatusType] = None


class CancelMLTaskRunRequest(BaseModel):
    TransformId: HashString
    TaskRunId: HashString


class CheckSchemaVersionValidityResponse(BaseModel):
    Valid: Optional[IsVersionValid] = None
    Error: Optional[SchemaValidationError] = None


class CheckSchemaVersionValidityInput(BaseModel):
    DataFormat: DataFormat
    SchemaDefinition: SchemaDefinitionString


class CreateBlueprintResponse(BaseModel):
    Name: Optional[NameString] = None


class CreateBlueprintRequest(BaseModel):
    Name: OrchestrationNameString
    Description: Optional[Generic512CharString] = None
    BlueprintLocation: OrchestrationS3Location
    Tags: Optional[TagsMap] = None


class CreateDevEndpointResponse(BaseModel):
    EndpointName: Optional[GenericString] = None
    Status: Optional[GenericString] = None
    SecurityGroupIds: Optional[StringList] = None
    SubnetId: Optional[GenericString] = None
    RoleArn: Optional[RoleArn] = None
    YarnEndpointAddress: Optional[GenericString] = None
    ZeppelinRemoteSparkInterpreterPort: Optional[IntegerValue] = None
    NumberOfNodes: Optional[IntegerValue] = None
    WorkerType: Optional[WorkerType] = None
    GlueVersion: Optional[GlueVersionString] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    AvailabilityZone: Optional[GenericString] = None
    VpcId: Optional[GenericString] = None
    ExtraPythonLibsS3Path: Optional[GenericString] = None
    ExtraJarsS3Path: Optional[GenericString] = None
    FailureReason: Optional[GenericString] = None
    SecurityConfiguration: Optional[NameString] = None
    CreatedTimestamp: Optional[TimestampValue] = None
    Arguments: Optional[MapValue] = None


class CreateDevEndpointRequest(BaseModel):
    EndpointName: GenericString
    RoleArn: RoleArn
    SecurityGroupIds: Optional[StringList] = None
    SubnetId: Optional[GenericString] = None
    PublicKey: Optional[GenericString] = None
    PublicKeys: Optional[PublicKeysList] = None
    NumberOfNodes: Optional[IntegerValue] = None
    WorkerType: Optional[WorkerType] = None
    GlueVersion: Optional[GlueVersionString] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    ExtraPythonLibsS3Path: Optional[GenericString] = None
    ExtraJarsS3Path: Optional[GenericString] = None
    SecurityConfiguration: Optional[NameString] = None
    Tags: Optional[TagsMap] = None
    Arguments: Optional[MapValue] = None


class CreateJobResponse(CreateBlueprintResponse):
    pass


class CreateMLTransformResponse(BaseModel):
    TransformId: Optional[HashString] = None


class CreateRegistryResponse(BaseModel):
    RegistryArn: Optional[GlueResourceArn] = None
    RegistryName: Optional[SchemaRegistryNameString] = None
    Description: Optional[DescriptionString] = None
    Tags: Optional[TagsMap] = None


class CreateRegistryInput(BaseModel):
    RegistryName: SchemaRegistryNameString
    Description: Optional[DescriptionString] = None
    Tags: Optional[TagsMap] = None


class CreateSchemaResponse(BaseModel):
    RegistryName: Optional[SchemaRegistryNameString] = None
    RegistryArn: Optional[GlueResourceArn] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    SchemaArn: Optional[GlueResourceArn] = None
    Description: Optional[DescriptionString] = None
    DataFormat: Optional[DataFormat] = None
    Compatibility: Optional[Compatibility] = None
    SchemaCheckpoint: Optional[SchemaCheckpointNumber] = None
    LatestSchemaVersion: Optional[VersionLongNumber] = None
    NextSchemaVersion: Optional[VersionLongNumber] = None
    SchemaStatus: Optional[SchemaStatus] = None
    Tags: Optional[TagsMap] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    SchemaVersionStatus: Optional[SchemaVersionStatus] = None


class CreateSchemaInput(BaseModel):
    RegistryId: Optional[RegistryId] = None
    SchemaName: SchemaRegistryNameString
    DataFormat: DataFormat
    Compatibility: Optional[Compatibility] = None
    Description: Optional[DescriptionString] = None
    Tags: Optional[TagsMap] = None
    SchemaDefinition: Optional[SchemaDefinitionString] = None


class CreateScriptResponse(BaseModel):
    PythonScript: Optional[PythonScript] = None
    ScalaCode: Optional[ScalaCode] = None


class CreateSecurityConfigurationResponse(BaseModel):
    Name: Optional[NameString] = None
    CreatedTimestamp: Optional[TimestampValue] = None


class CreateTriggerResponse(CreateBlueprintResponse):
    pass


class CreateWorkflowResponse(CreateBlueprintResponse):
    pass


class CreateWorkflowRequest(BaseModel):
    Name: NameString
    Description: Optional[GenericString] = None
    DefaultRunProperties: Optional[WorkflowRunProperties] = None
    Tags: Optional[TagsMap] = None
    MaxConcurrentRuns: Optional[NullableInteger] = None


class DeleteBlueprintResponse(CreateBlueprintResponse):
    pass


class DeleteBlueprintRequest(BaseModel):
    Name: NameString


class DeleteClassifierRequest(BaseModel):
    Name: NameString


class DeleteColumnStatisticsForPartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValues: ValueStringList
    ColumnName: NameString


class DeleteColumnStatisticsForTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    ColumnName: NameString


class DeleteConnectionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    ConnectionName: NameString


class DeleteCrawlerRequest(BaseModel):
    Name: NameString


class DeleteDatabaseRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Name: NameString


class DeleteDevEndpointRequest(BaseModel):
    EndpointName: GenericString


class DeleteJobResponse(BaseModel):
    JobName: Optional[NameString] = None


class DeleteJobRequest(BaseModel):
    JobName: NameString


class DeleteMLTransformResponse(CreateMLTransformResponse):
    pass


class DeleteMLTransformRequest(BaseModel):
    TransformId: HashString


class DeletePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValues: ValueStringList


class DeletePartitionIndexRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    IndexName: NameString


class DeleteRegistryResponse(BaseModel):
    RegistryName: Optional[SchemaRegistryNameString] = None
    RegistryArn: Optional[GlueResourceArn] = None
    Status: Optional[RegistryStatus] = None


class DeleteRegistryInput(BaseModel):
    RegistryId: RegistryId


class DeleteResourcePolicyRequest(BaseModel):
    PolicyHashCondition: Optional[HashString] = None
    ResourceArn: Optional[GlueResourceArn] = None


class DeleteSchemaResponse(BaseModel):
    SchemaArn: Optional[GlueResourceArn] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    Status: Optional[SchemaStatus] = None


class DeleteSchemaInput(BaseModel):
    SchemaId: SchemaId


class DeleteSchemaVersionsInput(BaseModel):
    SchemaId: SchemaId
    Versions: VersionsString


class DeleteSecurityConfigurationRequest(BaseModel):
    Name: NameString


class DeleteTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    Name: NameString


class DeleteTableVersionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    VersionId: VersionString


class DeleteTriggerResponse(CreateBlueprintResponse):
    pass


class DeleteTriggerRequest(BaseModel):
    Name: NameString


class DeleteUserDefinedFunctionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    FunctionName: NameString


class DeleteWorkflowResponse(CreateBlueprintResponse):
    pass


class DeleteWorkflowRequest(BaseModel):
    Name: NameString


class GetBlueprintResponse(BaseModel):
    Blueprint: Optional[Blueprint] = None


class GetBlueprintRequest(BaseModel):
    Name: NameString
    IncludeBlueprint: Optional[NullableBoolean] = None
    IncludeParameterSpec: Optional[NullableBoolean] = None


class GetBlueprintRunResponse(BaseModel):
    BlueprintRun: Optional[BlueprintRun] = None


class GetBlueprintRunRequest(BaseModel):
    BlueprintName: OrchestrationNameString
    RunId: IdString


class GetBlueprintRunsResponse(BaseModel):
    BlueprintRuns: Optional[BlueprintRuns] = None
    NextToken: Optional[GenericString] = None


class GetBlueprintRunsRequest(BaseModel):
    BlueprintName: NameString
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None


class GetCatalogImportStatusResponse(BaseModel):
    ImportStatus: Optional[CatalogImportStatus] = None


class GetCatalogImportStatusRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None


class GetClassifierRequest(BaseModel):
    Name: NameString


class GetClassifiersRequest(BaseModel):
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[Token] = None


class GetColumnStatisticsForPartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValues: ValueStringList
    ColumnNames: GetColumnNamesList


class GetColumnStatisticsForTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    ColumnNames: GetColumnNamesList


class GetConnectionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Name: NameString
    HidePassword: Optional[Boolean] = None


class GetConnectionsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Filter: Optional[GetConnectionsFilter] = None
    HidePassword: Optional[Boolean] = None
    NextToken: Optional[Token] = None
    MaxResults: Optional[PageSize] = None


class GetCrawlerRequest(BaseModel):
    Name: NameString


class GetCrawlerMetricsResponse(BaseModel):
    CrawlerMetricsList: Optional[CrawlerMetricsList] = None
    NextToken: Optional[Token] = None


class GetCrawlerMetricsRequest(BaseModel):
    CrawlerNameList: Optional[CrawlerNameList] = None
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[Token] = None


class GetCrawlersRequest(BaseModel):
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[Token] = None


class GetDataCatalogEncryptionSettingsResponse(BaseModel):
    DataCatalogEncryptionSettings: Optional[DataCatalogEncryptionSettings] = None


class GetDataCatalogEncryptionSettingsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None


class GetDatabaseRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Name: NameString


class GetDatabasesRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    NextToken: Optional[Token] = None
    MaxResults: Optional[CatalogGetterPageSize] = None
    ResourceShareType: Optional[ResourceShareType] = None


class GetDataflowGraphRequest(BaseModel):
    PythonScript: Optional[PythonScript] = None


class GetDevEndpointResponse(BaseModel):
    DevEndpoint: Optional[DevEndpoint] = None


class GetDevEndpointRequest(BaseModel):
    EndpointName: GenericString


class GetDevEndpointsRequest(BaseModel):
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[GenericString] = None


class GetJobRequest(BaseModel):
    JobName: NameString


class GetJobBookmarkRequest(BaseModel):
    JobName: JobName
    RunId: Optional[RunId] = None


class GetJobRunRequest(BaseModel):
    JobName: NameString
    RunId: IdString
    PredecessorsIncluded: Optional[BooleanValue] = None


class GetJobRunsRequest(BaseModel):
    JobName: NameString
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None


class GetJobsRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None


class GetMLTaskRunRequest(BaseModel):
    TransformId: HashString
    TaskRunId: HashString


class GetMLTransformRequest(BaseModel):
    TransformId: HashString


class GetPartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValues: ValueStringList


class GetPartitionIndexesRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    NextToken: Optional[Token] = None


class GetPlanResponse(CreateScriptResponse):
    pass


class GetRegistryResponse(RegistryListItem):
    pass


class GetRegistryInput(BaseModel):
    RegistryId: RegistryId


class GetResourcePoliciesRequest(BaseModel):
    NextToken: Optional[Token] = None
    MaxResults: Optional[PageSize] = None


class GetResourcePolicyResponse(BaseModel):
    PolicyInJson: Optional[PolicyJsonString] = None
    PolicyHash: Optional[HashString] = None
    CreateTime: Optional[Timestamp] = None
    UpdateTime: Optional[Timestamp] = None


class GetResourcePolicyRequest(BaseModel):
    ResourceArn: Optional[GlueResourceArn] = None


class GetSchemaResponse(BaseModel):
    RegistryName: Optional[SchemaRegistryNameString] = None
    RegistryArn: Optional[GlueResourceArn] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    SchemaArn: Optional[GlueResourceArn] = None
    Description: Optional[DescriptionString] = None
    DataFormat: Optional[DataFormat] = None
    Compatibility: Optional[Compatibility] = None
    SchemaCheckpoint: Optional[SchemaCheckpointNumber] = None
    LatestSchemaVersion: Optional[VersionLongNumber] = None
    NextSchemaVersion: Optional[VersionLongNumber] = None
    SchemaStatus: Optional[SchemaStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None
    UpdatedTime: Optional[UpdatedTimestamp] = None


class GetSchemaInput(BaseModel):
    SchemaId: SchemaId


class GetSchemaByDefinitionResponse(BaseModel):
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    SchemaArn: Optional[GlueResourceArn] = None
    DataFormat: Optional[DataFormat] = None
    Status: Optional[SchemaVersionStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None


class GetSchemaByDefinitionInput(BaseModel):
    SchemaId: SchemaId
    SchemaDefinition: SchemaDefinitionString


class GetSchemaVersionResponse(BaseModel):
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    SchemaDefinition: Optional[SchemaDefinitionString] = None
    DataFormat: Optional[DataFormat] = None
    SchemaArn: Optional[GlueResourceArn] = None
    VersionNumber: Optional[VersionLongNumber] = None
    Status: Optional[SchemaVersionStatus] = None
    CreatedTime: Optional[CreatedTimestamp] = None


class GetSchemaVersionsDiffResponse(BaseModel):
    Diff: Optional[SchemaDefinitionDiff] = None


class GetSecurityConfigurationRequest(BaseModel):
    Name: NameString


class GetSecurityConfigurationsRequest(BaseModel):
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[GenericString] = None


class GetTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    Name: NameString


class GetTableVersionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    VersionId: Optional[VersionString] = None


class GetTableVersionsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    NextToken: Optional[Token] = None
    MaxResults: Optional[CatalogGetterPageSize] = None


class GetTablesRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    Expression: Optional[FilterString] = None
    NextToken: Optional[Token] = None
    MaxResults: Optional[CatalogGetterPageSize] = None


class GetTagsResponse(BaseModel):
    Tags: Optional[TagsMap] = None


class GetTagsRequest(BaseModel):
    ResourceArn: GlueResourceArn


class GetTriggerRequest(BaseModel):
    Name: NameString


class GetTriggersRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    DependentJobName: Optional[NameString] = None
    MaxResults: Optional[PageSize] = None


class GetUserDefinedFunctionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    FunctionName: NameString


class GetUserDefinedFunctionsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: Optional[NameString] = None
    Pattern: NameString
    NextToken: Optional[Token] = None
    MaxResults: Optional[CatalogGetterPageSize] = None


class GetWorkflowRequest(BaseModel):
    Name: NameString
    IncludeGraph: Optional[NullableBoolean] = None


class GetWorkflowRunRequest(BaseModel):
    Name: NameString
    RunId: IdString
    IncludeGraph: Optional[NullableBoolean] = None


class GetWorkflowRunPropertiesResponse(BaseModel):
    RunProperties: Optional[WorkflowRunProperties] = None


class GetWorkflowRunPropertiesRequest(BaseModel):
    Name: NameString
    RunId: IdString


class GetWorkflowRunsRequest(BaseModel):
    Name: NameString
    IncludeGraph: Optional[NullableBoolean] = None
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None


class ImportCatalogToGlueRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None


class ListBlueprintsResponse(BaseModel):
    Blueprints: Optional[BlueprintNames] = None
    NextToken: Optional[GenericString] = None


class ListBlueprintsRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None
    Tags: Optional[TagsMap] = None


class ListCrawlersResponse(BaseModel):
    CrawlerNames: Optional[CrawlerNameList] = None
    NextToken: Optional[Token] = None


class ListCrawlersRequest(BaseModel):
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[Token] = None
    Tags: Optional[TagsMap] = None


class ListDevEndpointsResponse(BaseModel):
    DevEndpointNames: Optional[DevEndpointNameList] = None
    NextToken: Optional[GenericString] = None


class ListDevEndpointsRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None
    Tags: Optional[TagsMap] = None


class ListJobsResponse(BaseModel):
    JobNames: Optional[JobNameList] = None
    NextToken: Optional[GenericString] = None


class ListJobsRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None
    Tags: Optional[TagsMap] = None


class ListMLTransformsResponse(BaseModel):
    TransformIds: TransformIdList
    NextToken: Optional[PaginationToken] = None


class ListRegistriesInput(BaseModel):
    MaxResults: Optional[MaxResultsNumber] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class ListSchemaVersionsInput(BaseModel):
    SchemaId: SchemaId
    MaxResults: Optional[MaxResultsNumber] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class ListSchemasInput(BaseModel):
    RegistryId: Optional[RegistryId] = None
    MaxResults: Optional[MaxResultsNumber] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class ListTriggersResponse(BaseModel):
    TriggerNames: Optional[TriggerNameList] = None
    NextToken: Optional[GenericString] = None


class ListTriggersRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    DependentJobName: Optional[NameString] = None
    MaxResults: Optional[PageSize] = None
    Tags: Optional[TagsMap] = None


class ListWorkflowsResponse(BaseModel):
    Workflows: Optional[WorkflowNames] = None
    NextToken: Optional[GenericString] = None


class ListWorkflowsRequest(BaseModel):
    NextToken: Optional[GenericString] = None
    MaxResults: Optional[PageSize] = None


class PutDataCatalogEncryptionSettingsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DataCatalogEncryptionSettings: DataCatalogEncryptionSettings


class PutResourcePolicyResponse(BaseModel):
    PolicyHash: Optional[HashString] = None


class PutResourcePolicyRequest(BaseModel):
    PolicyInJson: PolicyJsonString
    ResourceArn: Optional[GlueResourceArn] = None
    PolicyHashCondition: Optional[HashString] = None
    PolicyExistsCondition: Optional[ExistCondition] = None
    EnableHybrid: Optional[EnableHybridValues] = None


class PutSchemaVersionMetadataResponse(BaseModel):
    SchemaArn: Optional[GlueResourceArn] = None
    SchemaName: Optional[SchemaRegistryNameString] = None
    RegistryName: Optional[SchemaRegistryNameString] = None
    LatestVersion: Optional[LatestSchemaVersionBoolean] = None
    VersionNumber: Optional[VersionLongNumber] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    MetadataKey: Optional[MetadataKeyString] = None
    MetadataValue: Optional[MetadataValueString] = None


class PutWorkflowRunPropertiesRequest(BaseModel):
    Name: NameString
    RunId: IdString
    RunProperties: WorkflowRunProperties


class QuerySchemaVersionMetadataResponse(BaseModel):
    MetadataInfoMap: Optional[MetadataInfoMap] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class RegisterSchemaVersionResponse(BaseModel):
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    VersionNumber: Optional[VersionLongNumber] = None
    Status: Optional[SchemaVersionStatus] = None


class RegisterSchemaVersionInput(BaseModel):
    SchemaId: SchemaId
    SchemaDefinition: SchemaDefinitionString


class RemoveSchemaVersionMetadataResponse(PutSchemaVersionMetadataResponse):
    pass


class ResetJobBookmarkRequest(BaseModel):
    JobName: JobName
    RunId: Optional[RunId] = None


class ResumeWorkflowRunResponse(BaseModel):
    RunId: Optional[IdString] = None
    NodeIds: Optional[NodeIdList] = None


class ResumeWorkflowRunRequest(BaseModel):
    Name: NameString
    RunId: IdString
    NodeIds: NodeIdList


class StartBlueprintRunResponse(BaseModel):
    RunId: Optional[IdString] = None


class StartBlueprintRunRequest(BaseModel):
    BlueprintName: OrchestrationNameString
    Parameters: Optional[BlueprintParameters] = None
    RoleArn: OrchestrationIAMRoleArn


class StartCrawlerRequest(BaseModel):
    Name: NameString


class StartCrawlerScheduleRequest(BaseModel):
    CrawlerName: NameString


class StartExportLabelsTaskRunResponse(BaseModel):
    TaskRunId: Optional[HashString] = None


class StartExportLabelsTaskRunRequest(BaseModel):
    TransformId: HashString
    OutputS3Path: UriString


class StartImportLabelsTaskRunResponse(StartExportLabelsTaskRunResponse):
    pass


class StartImportLabelsTaskRunRequest(BaseModel):
    TransformId: HashString
    InputS3Path: UriString
    ReplaceAllLabels: Optional[ReplaceBoolean] = None


class StartJobRunResponse(BaseModel):
    JobRunId: Optional[IdString] = None


class StartMLEvaluationTaskRunResponse(StartExportLabelsTaskRunResponse):
    pass


class StartMLEvaluationTaskRunRequest(BaseModel):
    TransformId: HashString


class StartMLLabelingSetGenerationTaskRunResponse(StartExportLabelsTaskRunResponse):
    pass


class StartMLLabelingSetGenerationTaskRunRequest(BaseModel):
    TransformId: HashString
    OutputS3Path: UriString


class StartTriggerResponse(CreateBlueprintResponse):
    pass


class StartTriggerRequest(BaseModel):
    Name: NameString


class StartWorkflowRunResponse(StartBlueprintRunResponse):
    pass


class StartWorkflowRunRequest(BaseModel):
    Name: NameString


class StopCrawlerRequest(BaseModel):
    Name: NameString


class StopCrawlerScheduleRequest(BaseModel):
    CrawlerName: NameString


class StopTriggerResponse(CreateBlueprintResponse):
    pass


class StopTriggerRequest(BaseModel):
    Name: NameString


class StopWorkflowRunRequest(BaseModel):
    Name: NameString
    RunId: IdString


class TagResourceRequest(BaseModel):
    ResourceArn: GlueResourceArn
    TagsToAdd: TagsMap


class UntagResourceRequest(BaseModel):
    ResourceArn: GlueResourceArn
    TagsToRemove: TagKeysList


class UpdateBlueprintResponse(CreateBlueprintResponse):
    pass


class UpdateBlueprintRequest(BaseModel):
    Name: OrchestrationNameString
    Description: Optional[Generic512CharString] = None
    BlueprintLocation: OrchestrationS3Location


class UpdateClassifierRequest(BaseModel):
    GrokClassifier: Optional[UpdateGrokClassifierRequest] = None
    XMLClassifier: Optional[UpdateXMLClassifierRequest] = None
    JsonClassifier: Optional[UpdateJsonClassifierRequest] = None
    CsvClassifier: Optional[UpdateCsvClassifierRequest] = None


class UpdateCrawlerScheduleRequest(BaseModel):
    CrawlerName: NameString
    Schedule: Optional[CronExpression] = None


class UpdateDevEndpointRequest(BaseModel):
    EndpointName: GenericString
    PublicKey: Optional[GenericString] = None
    AddPublicKeys: Optional[PublicKeysList] = None
    DeletePublicKeys: Optional[PublicKeysList] = None
    CustomLibraries: Optional[DevEndpointCustomLibraries] = None
    UpdateEtlLibraries: Optional[BooleanValue] = None
    DeleteArguments: Optional[StringList] = None
    AddArguments: Optional[MapValue] = None


class UpdateJobResponse(DeleteJobResponse):
    pass


class UpdateMLTransformResponse(CreateMLTransformResponse):
    pass


class UpdateRegistryResponse(RegistryId):
    pass


class UpdateRegistryInput(BaseModel):
    RegistryId: RegistryId
    Description: DescriptionString


class UpdateSchemaResponse(SchemaId):
    pass


class UpdateWorkflowResponse(CreateBlueprintResponse):
    pass


class UpdateWorkflowRequest(BaseModel):
    Name: NameString
    Description: Optional[GenericString] = None
    DefaultRunProperties: Optional[WorkflowRunProperties] = None
    MaxConcurrentRuns: Optional[NullableInteger] = None


class NotificationProperty(BaseModel):
    """
    Specifies configuration properties of a notification.
    """

    NotifyDelayAfter: Optional[NotifyDelayAfter] = None


class Action(BaseModel):
    """
    Defines an action to be initiated by a trigger.
    """

    JobName: Optional[NameString] = None
    Arguments: Optional[GenericMap] = None
    Timeout: Optional[Timeout] = None
    SecurityConfiguration: Optional[NameString] = None
    NotificationProperty: Optional[NotificationProperty] = None
    CrawlerName: Optional[NameString] = None


class ActionList(BaseModel):
    __root__: List[Action]


class PartitionValueList(BaseModel):
    """
    Contains a list of values defining partitions.
    """

    Values: ValueStringList


class BatchDeletePartitionValueList(BaseModel):
    __root__: Annotated[List[PartitionValueList], Field(max_items=25, min_items=0)]


class Blueprints(BaseModel):
    __root__: List[Blueprint]


class DevEndpointList(BaseModel):
    __root__: List[DevEndpoint]


class BatchGetPartitionValueList(BaseModel):
    __root__: Annotated[List[PartitionValueList], Field(max_items=1000, min_items=0)]


class ErrorDetail(BaseModel):
    """
    Contains details about an error.
    """

    ErrorCode: Optional[NameString] = None
    ErrorMessage: Optional[DescriptionString] = None


class BatchStopJobRunError(BaseModel):
    """
    Records an error that occurred when attempting to stop a specified job run.
    """

    JobName: Optional[NameString] = None
    JobRunId: Optional[IdString] = None
    ErrorDetail: Optional[ErrorDetail] = None


class BatchStopJobRunErrorList(BaseModel):
    __root__: List[BatchStopJobRunError]


class BatchStopJobRunSuccessfulSubmissionList(BaseModel):
    __root__: List[BatchStopJobRunSuccessfulSubmission]


class BoundedPartitionValueList(BaseModel):
    __root__: Annotated[List[ValueString], Field(max_items=100, min_items=0)]


class BatchUpdatePartitionFailureEntry(BaseModel):
    """
    Contains information about a batch update partition error.
    """

    PartitionValueList: Optional[BoundedPartitionValueList] = None
    ErrorDetail: Optional[ErrorDetail] = None


class BatchUpdatePartitionFailureList(BaseModel):
    __root__: List[BatchUpdatePartitionFailureEntry]


class GrokClassifier2(BaseModel):
    """
    A classifier that uses <code>grok</code> patterns.
    """

    Name: NameString
    Classification: Classification
    CreationTime: Optional[Timestamp] = None
    LastUpdated: Optional[Timestamp] = None
    Version: Optional[VersionId] = None
    GrokPattern: GrokPattern
    CustomPatterns: Optional[CustomPatterns] = None


class XMLClassifier2(BaseModel):
    """
    A classifier for <code>XML</code> content.
    """

    Name: NameString
    Classification: Classification
    CreationTime: Optional[Timestamp] = None
    LastUpdated: Optional[Timestamp] = None
    Version: Optional[VersionId] = None
    RowTag: Optional[RowTag] = None


class JsonClassifier2(BaseModel):
    """
    A classifier for <code>JSON</code> content.
    """

    Name: NameString
    CreationTime: Optional[Timestamp] = None
    LastUpdated: Optional[Timestamp] = None
    Version: Optional[VersionId] = None
    JsonPath: JsonPath


class CsvClassifier2(BaseModel):
    """
    A classifier for custom <code>CSV</code> content.
    """

    Name: NameString
    CreationTime: Optional[Timestamp] = None
    LastUpdated: Optional[Timestamp] = None
    Version: Optional[VersionId] = None
    Delimiter: Optional[CsvColumnDelimiter] = None
    QuoteSymbol: Optional[CsvQuoteSymbol] = None
    ContainsHeader: Optional[CsvHeaderOption] = None
    Header: Optional[CsvHeader] = None
    DisableValueTrimming: Optional[NullableBoolean] = None
    AllowSingleColumn: Optional[NullableBoolean] = None


class Classifier(BaseModel):
    """
    <p>Classifiers are triggered during a crawl task. A classifier checks whether a given file is in a format it can handle. If it is, the classifier creates a schema in the form of a <code>StructType</code> object that matches that data format.</p> <p>You can use the standard classifiers that Glue provides, or you can write your own classifiers to best categorize your data sources and specify the appropriate schemas to use for them. A classifier can be a <code>grok</code> classifier, an <code>XML</code> classifier, a <code>JSON</code> classifier, or a custom <code>CSV</code> classifier, as specified in one of the fields in the <code>Classifier</code> object.</p>
    """

    GrokClassifier: Optional[GrokClassifier2] = None
    XMLClassifier: Optional[XMLClassifier2] = None
    JsonClassifier: Optional[JsonClassifier2] = None
    CsvClassifier: Optional[CsvClassifier2] = None


class ClassifierList(BaseModel):
    __root__: List[Classifier]


class CodeGenNodeArgs(BaseModel):
    __root__: Annotated[List[CodeGenNodeArg], Field(max_items=50, min_items=0)]


class CodeGenNode(BaseModel):
    """
    Represents a node in a directed acyclic graph (DAG)
    """

    Id: CodeGenIdentifier
    NodeType: CodeGenNodeType
    Args: CodeGenNodeArgs
    LineNumber: Optional[Integer] = None


class ColumnError(BaseModel):
    """
    Encapsulates a column name that failed and the reason for failure.
    """

    ColumnName: Optional[NameString] = None
    Error: Optional[ErrorDetail] = None


class ColumnErrors(BaseModel):
    __root__: List[ColumnError]


class DecimalColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for fixed-point number data columns.
    """

    MinimumValue: Optional[DecimalNumber] = None
    MaximumValue: Optional[DecimalNumber] = None
    NumberOfNulls: NonNegativeLong
    NumberOfDistinctValues: NonNegativeLong


class DoubleColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for floating-point number data columns.
    """

    MinimumValue: Optional[Double] = None
    MaximumValue: Optional[Double] = None
    NumberOfNulls: NonNegativeLong
    NumberOfDistinctValues: NonNegativeLong


class LongColumnStatisticsData(BaseModel):
    """
    Defines column statistics supported for integer data columns.
    """

    MinimumValue: Optional[Long] = None
    MaximumValue: Optional[Long] = None
    NumberOfNulls: NonNegativeLong
    NumberOfDistinctValues: NonNegativeLong


class PhysicalConnectionRequirements(BaseModel):
    """
    Specifies the physical requirements for a connection.
    """

    SubnetId: Optional[NameString] = None
    SecurityGroupIdList: Optional[SecurityGroupIdList] = None
    AvailabilityZone: Optional[NameString] = None


class Connection(BaseModel):
    """
    Defines a connection to a data source.
    """

    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    ConnectionType: Optional[ConnectionType] = None
    MatchCriteria: Optional[MatchCriteria] = None
    ConnectionProperties: Optional[ConnectionProperties] = None
    PhysicalConnectionRequirements: Optional[PhysicalConnectionRequirements] = None
    CreationTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    LastUpdatedBy: Optional[NameString] = None


class ConnectionInput(BaseModel):
    """
    A structure that is used to specify a connection to create or update.
    """

    Name: NameString
    Description: Optional[DescriptionString] = None
    ConnectionType: ConnectionType
    MatchCriteria: Optional[MatchCriteria] = None
    ConnectionProperties: ConnectionProperties
    PhysicalConnectionRequirements: Optional[PhysicalConnectionRequirements] = None


class ConnectionList(BaseModel):
    __root__: List[Connection]


class RecrawlPolicy(BaseModel):
    """
    When crawling an Amazon S3 data source after the first crawl is complete, specifies whether to crawl the entire dataset again or to crawl only folders that were added since the last crawler run. For more information, see <a href="https://docs.aws.amazon.com/glue/latest/dg/incremental-crawls.html">Incremental Crawls in Glue</a> in the developer guide.
    """

    RecrawlBehavior: Optional[RecrawlBehavior] = None


class SchemaChangePolicy(BaseModel):
    """
    A policy that specifies update and deletion behaviors for the crawler.
    """

    UpdateBehavior: Optional[UpdateBehavior] = None
    DeleteBehavior: Optional[DeleteBehavior] = None


class LineageConfiguration(BaseModel):
    """
    Specifies data lineage configuration settings for the crawler.
    """

    CrawlerLineageSettings: Optional[CrawlerLineageSettings] = None


class Schedule4(BaseModel):
    """
    A scheduling object using a <code>cron</code> statement to schedule an event.
    """

    ScheduleExpression: Optional[CronExpression] = None
    State: Optional[ScheduleState] = None


class LastCrawlInfo(BaseModel):
    """
    Status and error information about the most recent crawl.
    """

    Status: Optional[LastCrawlStatus] = None
    ErrorMessage: Optional[DescriptionString] = None
    LogGroup: Optional[LogGroup] = None
    LogStream: Optional[LogStream] = None
    MessagePrefix: Optional[MessagePrefix] = None
    StartTime: Optional[Timestamp] = None


class S3TargetList(BaseModel):
    __root__: List[S3Target]


class JdbcTargetList(BaseModel):
    __root__: List[JdbcTarget]


class MongoDBTargetList(BaseModel):
    __root__: List[MongoDBTarget]


class DynamoDBTargetList(BaseModel):
    __root__: List[DynamoDBTarget]


class CreateGrokClassifierRequest(BaseModel):
    """
    Specifies a <code>grok</code> classifier for <code>CreateClassifier</code> to create.
    """

    Classification: Classification
    Name: NameString
    GrokPattern: GrokPattern
    CustomPatterns: Optional[CustomPatterns] = None


class CreateXMLClassifierRequest(BaseModel):
    """
    Specifies an XML classifier for <code>CreateClassifier</code> to create.
    """

    Classification: Classification
    Name: NameString
    RowTag: Optional[RowTag] = None


class CreateJsonClassifierRequest(BaseModel):
    """
    Specifies a JSON classifier for <code>CreateClassifier</code> to create.
    """

    Name: NameString
    JsonPath: JsonPath


class CreateCsvClassifierRequest(UpdateCsvClassifierRequest):
    """
    Specifies a custom CSV classifier for <code>CreateClassifier</code> to create.
    """

    pass


class ExecutionProperty(BaseModel):
    """
    An execution property of a job.
    """

    MaxConcurrentRuns: Optional[MaxConcurrentRuns] = None


class JobCommand(BaseModel):
    """
    Specifies code that runs when a job is run.
    """

    Name: Optional[GenericString] = None
    ScriptLocation: Optional[ScriptLocationString] = None
    PythonVersion: Optional[PythonVersionString] = None


class GlueTables(BaseModel):
    __root__: Annotated[List[GlueTable], Field(max_items=10, min_items=0)]


class TransformParameters(BaseModel):
    """
    The algorithm-specific parameters that are associated with the machine learning transform.
    """

    TransformType: TransformType
    FindMatchesParameters: Optional[FindMatchesParameters] = None


class TransformEncryption(BaseModel):
    """
    <p>The encryption-at-rest settings of the transform that apply to accessing user data. Machine learning transforms can access user data encrypted in Amazon S3 using KMS.</p> <p>Additionally, imported labels and trained transforms can now be encrypted using a customer provided KMS key.</p>
    """

    MlUserDataEncryption: Optional[MLUserDataEncryption] = None
    TaskRunSecurityConfigurationName: Optional[NameString] = None


class PartitionIndex(BaseModel):
    """
    A structure for a partition index.
    """

    Keys: KeyList
    IndexName: NameString


class DagNodes(BaseModel):
    __root__: List[CodeGenNode]


class PartitionIndexList(BaseModel):
    __root__: Annotated[List[PartitionIndex], Field(max_items=3)]


class Predicate(BaseModel):
    """
    Defines the predicate of the trigger, which determines when it fires.
    """

    Logical: Optional[Logical] = None
    Conditions: Optional[ConditionList] = None


class UserDefinedFunctionInput(BaseModel):
    """
    A structure used to create or update a user-defined function.
    """

    FunctionName: Optional[NameString] = None
    ClassName: Optional[NameString] = None
    OwnerName: Optional[NameString] = None
    OwnerType: Optional[PrincipalType] = None
    ResourceUris: Optional[ResourceUriList] = None


class PrincipalPermissionsList(BaseModel):
    __root__: List[PrincipalPermissions]


class Database(BaseModel):
    """
    The <code>Database</code> object represents a logical grouping of tables that might reside in a Hive metastore or an RDBMS.
    """

    Name: NameString
    Description: Optional[DescriptionString] = None
    LocationUri: Optional[URI] = None
    Parameters: Optional[ParametersMap] = None
    CreateTime: Optional[Timestamp] = None
    CreateTableDefaultPermissions: Optional[PrincipalPermissionsList] = None
    TargetDatabase: Optional[DatabaseIdentifier] = None
    CatalogId: Optional[CatalogIdString] = None


class DatabaseList(BaseModel):
    __root__: List[Database]


class SchemaVersionErrorList(BaseModel):
    __root__: List[SchemaVersionErrorItem]


class S3EncryptionList(BaseModel):
    __root__: List[S3Encryption]


class JobBookmarksEncryption(BaseModel):
    """
    Specifies how job bookmark data should be encrypted.
    """

    JobBookmarksEncryptionMode: Optional[JobBookmarksEncryptionMode] = None
    KmsKeyArn: Optional[KmsKeyArn] = None


class JobBookmarkEntry(BaseModel):
    """
    Defines a point that a job can resume processing.
    """

    JobName: Optional[JobName] = None
    Version: Optional[IntegerValue] = None
    Run: Optional[IntegerValue] = None
    Attempt: Optional[IntegerValue] = None
    PreviousRunId: Optional[RunId] = None
    RunId: Optional[RunId] = None
    JobBookmark: Optional[JsonValue] = None


class Job(BaseModel):
    """
    Specifies a job definition.
    """

    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    LogUri: Optional[UriString] = None
    Role: Optional[RoleString] = None
    CreatedOn: Optional[TimestampValue] = None
    LastModifiedOn: Optional[TimestampValue] = None
    ExecutionProperty: Optional[ExecutionProperty] = None
    Command: Optional[JobCommand] = None
    DefaultArguments: Optional[GenericMap] = None
    NonOverridableArguments: Optional[GenericMap] = None
    Connections: Optional[ConnectionsList] = None
    MaxRetries: Optional[MaxRetries] = None
    AllocatedCapacity: Optional[IntegerValue] = None
    Timeout: Optional[Timeout] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    SecurityConfiguration: Optional[NameString] = None
    NotificationProperty: Optional[NotificationProperty] = None
    GlueVersion: Optional[GlueVersionString] = None


class TaskRunProperties(BaseModel):
    """
    The configuration properties for the task run.
    """

    TaskType: Optional[TaskType] = None
    ImportLabelsTaskRunProperties: Optional[ImportLabelsTaskRunProperties] = None
    ExportLabelsTaskRunProperties: Optional[ExportLabelsTaskRunProperties] = None
    LabelingSetGenerationTaskRunProperties: Optional[
        LabelingSetGenerationTaskRunProperties
    ] = None
    FindMatchesTaskRunProperties: Optional[FindMatchesTaskRunProperties] = None


class TaskRunFilterCriteria(BaseModel):
    """
    The criteria that are used to filter the task runs for the machine learning transform.
    """

    TaskRunType: Optional[TaskType] = None
    Status: Optional[TaskStatusType] = None
    StartedBefore: Optional[Timestamp] = None
    StartedAfter: Optional[Timestamp] = None


class TaskRunSortCriteria(BaseModel):
    """
    The sorting criteria that are used to sort the list of task runs for the machine learning transform.
    """

    Column: TaskRunSortColumnType
    SortDirection: SortDirectionType


class TransformSchema(BaseModel):
    __root__: Annotated[List[SchemaColumn], Field(max_items=100)]


class TransformFilterCriteria(BaseModel):
    """
    The criteria used to filter the machine learning transforms.
    """

    Name: Optional[NameString] = None
    TransformType: Optional[TransformType] = None
    Status: Optional[TransformStatusType] = None
    GlueVersion: Optional[GlueVersionString] = None
    CreatedBefore: Optional[Timestamp] = None
    CreatedAfter: Optional[Timestamp] = None
    LastModifiedBefore: Optional[Timestamp] = None
    LastModifiedAfter: Optional[Timestamp] = None
    Schema: Optional[TransformSchema] = None


class TransformSortCriteria(BaseModel):
    """
    The sorting criteria that are associated with the machine learning transform.
    """

    Column: TransformSortColumnType
    SortDirection: SortDirectionType


class Location(BaseModel):
    """
    The location of resources.
    """

    Jdbc: Optional[CodeGenNodeArgs] = None
    S3: Optional[CodeGenNodeArgs] = None
    DynamoDB: Optional[CodeGenNodeArgs] = None


class MappingList(BaseModel):
    __root__: List[MappingEntry]


class Segment(BaseModel):
    """
    Defines a non-overlapping region of a table's partitions, allowing multiple requests to be run in parallel.
    """

    SegmentNumber: NonNegativeInteger
    TotalSegments: TotalSegmentsInteger


class GluePolicy(GetResourcePolicyResponse):
    """
    A structure for returning a resource policy.
    """

    pass


class SchemaVersionNumber(BaseModel):
    """
    A structure containing the schema version information.
    """

    LatestVersion: Optional[LatestSchemaVersionBoolean] = None
    VersionNumber: Optional[VersionLongNumber] = None


class Trigger(BaseModel):
    """
    Information about a specific trigger.
    """

    Name: Optional[NameString] = None
    WorkflowName: Optional[NameString] = None
    Id: Optional[IdString] = None
    Type: Optional[TriggerType] = None
    State: Optional[TriggerState] = None
    Description: Optional[DescriptionString] = None
    Schedule: Optional[GenericString] = None
    Actions: Optional[ActionList] = None
    Predicate: Optional[Predicate] = None
    EventBatchingCondition: Optional[EventBatchingCondition] = None


class UserDefinedFunction(BaseModel):
    """
    Represents the equivalent of a Hive user-defined function (<code>UDF</code>) definition.
    """

    FunctionName: Optional[NameString] = None
    DatabaseName: Optional[NameString] = None
    ClassName: Optional[NameString] = None
    OwnerName: Optional[NameString] = None
    OwnerType: Optional[PrincipalType] = None
    CreateTime: Optional[Timestamp] = None
    ResourceUris: Optional[ResourceUriList] = None
    CatalogId: Optional[CatalogIdString] = None


class UserDefinedFunctionList(BaseModel):
    __root__: List[UserDefinedFunction]


class PredecessorList(BaseModel):
    __root__: List[Predecessor]


class JobUpdate(BaseModel):
    """
    Specifies information used to update an existing job definition. The previous job definition is completely overwritten by this information.
    """

    Description: Optional[DescriptionString] = None
    LogUri: Optional[UriString] = None
    Role: Optional[RoleString] = None
    ExecutionProperty: Optional[ExecutionProperty] = None
    Command: Optional[JobCommand] = None
    DefaultArguments: Optional[GenericMap] = None
    NonOverridableArguments: Optional[GenericMap] = None
    Connections: Optional[ConnectionsList] = None
    MaxRetries: Optional[MaxRetries] = None
    AllocatedCapacity: Optional[IntegerValue] = None
    Timeout: Optional[Timeout] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    SecurityConfiguration: Optional[NameString] = None
    NotificationProperty: Optional[NotificationProperty] = None
    GlueVersion: Optional[GlueVersionString] = None


class RegistryListDefinition(BaseModel):
    __root__: List[RegistryListItem]


class SchemaVersionList(BaseModel):
    __root__: List[SchemaVersionListItem]


class SchemaListDefinition(BaseModel):
    __root__: List[SchemaListItem]


class MLTransform(BaseModel):
    """
    A structure for a machine learning transform.
    """

    TransformId: Optional[HashString] = None
    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Status: Optional[TransformStatusType] = None
    CreatedOn: Optional[Timestamp] = None
    LastModifiedOn: Optional[Timestamp] = None
    InputRecordTables: Optional[GlueTables] = None
    Parameters: Optional[TransformParameters] = None
    EvaluationMetrics: Optional[EvaluationMetrics] = None
    LabelCount: Optional[LabelCount] = None
    Schema: Optional[TransformSchema] = None
    Role: Optional[RoleString] = None
    GlueVersion: Optional[GlueVersionString] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    Timeout: Optional[Timeout] = None
    MaxRetries: Optional[NullableInteger] = None
    TransformEncryption: Optional[TransformEncryption] = None


class OtherMetadataValueList(BaseModel):
    __root__: List[OtherMetadataValueListItem]


class MetadataInfo(BaseModel):
    """
    A structure containing metadata information for a schema version.
    """

    MetadataValue: Optional[MetadataValueString] = None
    CreatedTime: Optional[CreatedTimestamp] = None
    OtherMetadataValueList: Optional[OtherMetadataValueList] = None


class TriggerNodeDetails(BaseModel):
    """
    The details of a Trigger node present in the workflow.
    """

    Trigger: Optional[Trigger] = None


class StorageDescriptor(BaseModel):
    """
    Describes the physical storage of table data.
    """

    Columns: Optional[ColumnList] = None
    Location: Optional[LocationString] = None
    InputFormat: Optional[FormatString] = None
    OutputFormat: Optional[FormatString] = None
    Compressed: Optional[Boolean] = None
    NumberOfBuckets: Optional[Integer] = None
    SerdeInfo: Optional[SerDeInfo] = None
    BucketColumns: Optional[NameStringList] = None
    SortColumns: Optional[OrderList] = None
    Parameters: Optional[ParametersMap] = None
    SkewedInfo: Optional[SkewedInfo] = None
    StoredAsSubDirectories: Optional[Boolean] = None
    SchemaReference: Optional[SchemaReference] = None


class PartitionError(BaseModel):
    """
    Contains information about a partition error.
    """

    PartitionValues: Optional[ValueStringList] = None
    ErrorDetail: Optional[ErrorDetail] = None


class SortCriteria(BaseModel):
    __root__: Annotated[List[SortCriterion], Field(max_items=1, min_items=0)]


class TableError(BaseModel):
    """
    An error record for table operations.
    """

    TableName: Optional[NameString] = None
    ErrorDetail: Optional[ErrorDetail] = None


class TableVersionError(BaseModel):
    """
    An error record for table-version operations.
    """

    TableName: Optional[NameString] = None
    VersionId: Optional[VersionString] = None
    ErrorDetail: Optional[ErrorDetail] = None


class TaskRun(BaseModel):
    """
    The sampling parameters that are associated with the machine learning transform.
    """

    TransformId: Optional[HashString] = None
    TaskRunId: Optional[HashString] = None
    Status: Optional[TaskStatusType] = None
    LogGroupName: Optional[GenericString] = None
    Properties: Optional[TaskRunProperties] = None
    ErrorString: Optional[GenericString] = None
    StartedOn: Optional[Timestamp] = None
    LastModifiedOn: Optional[Timestamp] = None
    CompletedOn: Optional[Timestamp] = None
    ExecutionTime: Optional[ExecutionTime] = None


class TriggerUpdate(BaseModel):
    """
    A structure used to provide information used to update a trigger. This object updates the previous trigger definition by overwriting it completely.
    """

    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Schedule: Optional[GenericString] = None
    Actions: Optional[ActionList] = None
    Predicate: Optional[Predicate] = None
    EventBatchingCondition: Optional[EventBatchingCondition] = None


class BatchDeletePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionsToDelete: BatchDeletePartitionValueList


class BatchGetBlueprintsResponse(BaseModel):
    Blueprints: Optional[Blueprints] = None
    MissingBlueprints: Optional[BlueprintNames] = None


class BatchGetDevEndpointsResponse(BaseModel):
    DevEndpoints: Optional[DevEndpointList] = None
    DevEndpointsNotFound: Optional[DevEndpointNames] = None


class BatchGetPartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionsToGet: BatchGetPartitionValueList


class BatchStopJobRunResponse(BaseModel):
    SuccessfulSubmissions: Optional[BatchStopJobRunSuccessfulSubmissionList] = None
    Errors: Optional[BatchStopJobRunErrorList] = None


class BatchUpdatePartitionResponse(BaseModel):
    Errors: Optional[BatchUpdatePartitionFailureList] = None


class CreateClassifierRequest(BaseModel):
    GrokClassifier: Optional[CreateGrokClassifierRequest] = None
    XMLClassifier: Optional[CreateXMLClassifierRequest] = None
    JsonClassifier: Optional[CreateJsonClassifierRequest] = None
    CsvClassifier: Optional[CreateCsvClassifierRequest] = None


class CreateConnectionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    ConnectionInput: ConnectionInput


class CreateJobRequest(BaseModel):
    Name: NameString
    Description: Optional[DescriptionString] = None
    LogUri: Optional[UriString] = None
    Role: RoleString
    ExecutionProperty: Optional[ExecutionProperty] = None
    Command: JobCommand
    DefaultArguments: Optional[GenericMap] = None
    NonOverridableArguments: Optional[GenericMap] = None
    Connections: Optional[ConnectionsList] = None
    MaxRetries: Optional[MaxRetries] = None
    AllocatedCapacity: Optional[IntegerValue] = None
    Timeout: Optional[Timeout] = None
    MaxCapacity: Optional[NullableDouble] = None
    SecurityConfiguration: Optional[NameString] = None
    Tags: Optional[TagsMap] = None
    NotificationProperty: Optional[NotificationProperty] = None
    GlueVersion: Optional[GlueVersionString] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    WorkerType: Optional[WorkerType] = None


class CreateMLTransformRequest(BaseModel):
    Name: NameString
    Description: Optional[DescriptionString] = None
    InputRecordTables: GlueTables
    Parameters: TransformParameters
    Role: RoleString
    GlueVersion: Optional[GlueVersionString] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    Timeout: Optional[Timeout] = None
    MaxRetries: Optional[NullableInteger] = None
    Tags: Optional[TagsMap] = None
    TransformEncryption: Optional[TransformEncryption] = None


class CreatePartitionIndexRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionIndex: PartitionIndex


class CreateScriptRequest(BaseModel):
    DagNodes: Optional[DagNodes] = None
    DagEdges: Optional[DagEdges] = None
    Language: Optional[Language] = None


class CreateTriggerRequest(BaseModel):
    Name: NameString
    WorkflowName: Optional[NameString] = None
    Type: TriggerType
    Schedule: Optional[GenericString] = None
    Predicate: Optional[Predicate] = None
    Actions: ActionList
    Description: Optional[DescriptionString] = None
    StartOnCreation: Optional[BooleanValue] = None
    Tags: Optional[TagsMap] = None
    EventBatchingCondition: Optional[EventBatchingCondition] = None


class CreateUserDefinedFunctionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    FunctionInput: UserDefinedFunctionInput


class DeleteSchemaVersionsResponse(BaseModel):
    SchemaVersionErrors: Optional[SchemaVersionErrorList] = None


class GetClassifierResponse(BaseModel):
    Classifier: Optional[Classifier] = None


class GetClassifiersResponse(BaseModel):
    Classifiers: Optional[ClassifierList] = None
    NextToken: Optional[Token] = None


class GetConnectionResponse(BaseModel):
    Connection: Optional[Connection] = None


class GetConnectionsResponse(BaseModel):
    ConnectionList: Optional[ConnectionList] = None
    NextToken: Optional[Token] = None


class GetDatabaseResponse(BaseModel):
    Database: Optional[Database] = None


class GetDatabasesResponse(BaseModel):
    DatabaseList: DatabaseList
    NextToken: Optional[Token] = None


class GetDataflowGraphResponse(BaseModel):
    DagNodes: Optional[DagNodes] = None
    DagEdges: Optional[DagEdges] = None


class GetDevEndpointsResponse(BaseModel):
    DevEndpoints: Optional[DevEndpointList] = None
    NextToken: Optional[GenericString] = None


class GetJobResponse(BaseModel):
    Job: Optional[Job] = None


class GetJobBookmarkResponse(BaseModel):
    JobBookmarkEntry: Optional[JobBookmarkEntry] = None


class GetMLTaskRunResponse(TaskRun):
    pass


class GetMLTaskRunsRequest(BaseModel):
    TransformId: HashString
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[PageSize] = None
    Filter: Optional[TaskRunFilterCriteria] = None
    Sort: Optional[TaskRunSortCriteria] = None


class GetMLTransformResponse(MLTransform):
    pass


class GetMLTransformsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[PageSize] = None
    Filter: Optional[TransformFilterCriteria] = None
    Sort: Optional[TransformSortCriteria] = None


class GetMappingResponse(BaseModel):
    Mapping: MappingList


class GetMappingRequest(BaseModel):
    Source: CatalogEntry
    Sinks: Optional[CatalogEntries] = None
    Location: Optional[Location] = None


class GetPartitionsRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    Expression: Optional[PredicateString] = None
    NextToken: Optional[Token] = None
    Segment: Optional[Segment] = None
    MaxResults: Optional[PageSize] = None
    ExcludeColumnSchema: Optional[BooleanNullable] = None


class GetPlanRequest(BaseModel):
    Mapping: MappingList
    Source: CatalogEntry
    Sinks: Optional[CatalogEntries] = None
    Location: Optional[Location] = None
    Language: Optional[Language] = None
    AdditionalPlanOptionsMap: Optional[AdditionalPlanOptionsMap] = None


class GetSchemaVersionInput(BaseModel):
    SchemaId: Optional[SchemaId] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    SchemaVersionNumber: Optional[SchemaVersionNumber] = None


class GetSchemaVersionsDiffInput(BaseModel):
    SchemaId: SchemaId
    FirstSchemaVersionNumber: SchemaVersionNumber
    SecondSchemaVersionNumber: SchemaVersionNumber
    SchemaDiffType: SchemaDiffType


class GetTriggerResponse(TriggerNodeDetails):
    pass


class GetUserDefinedFunctionResponse(BaseModel):
    UserDefinedFunction: Optional[UserDefinedFunction] = None


class GetUserDefinedFunctionsResponse(BaseModel):
    UserDefinedFunctions: Optional[UserDefinedFunctionList] = None
    NextToken: Optional[Token] = None


class ListMLTransformsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[PageSize] = None
    Filter: Optional[TransformFilterCriteria] = None
    Sort: Optional[TransformSortCriteria] = None
    Tags: Optional[TagsMap] = None


class ListRegistriesResponse(BaseModel):
    Registries: Optional[RegistryListDefinition] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class ListSchemaVersionsResponse(BaseModel):
    Schemas: Optional[SchemaVersionList] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class ListSchemasResponse(BaseModel):
    Schemas: Optional[SchemaListDefinition] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class PutSchemaVersionMetadataInput(BaseModel):
    SchemaId: Optional[SchemaId] = None
    SchemaVersionNumber: Optional[SchemaVersionNumber] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    MetadataKeyValue: MetadataKeyValuePair


class QuerySchemaVersionMetadataInput(BaseModel):
    SchemaId: Optional[SchemaId] = None
    SchemaVersionNumber: Optional[SchemaVersionNumber] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    MetadataList: Optional[MetadataList] = None
    MaxResults: Optional[QuerySchemaVersionMetadataMaxResults] = None
    NextToken: Optional[SchemaRegistryTokenString] = None


class RemoveSchemaVersionMetadataInput(BaseModel):
    SchemaId: Optional[SchemaId] = None
    SchemaVersionNumber: Optional[SchemaVersionNumber] = None
    SchemaVersionId: Optional[SchemaVersionIdString] = None
    MetadataKeyValue: MetadataKeyValuePair


class ResetJobBookmarkResponse(GetJobBookmarkResponse):
    pass


class SearchTablesRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    NextToken: Optional[Token] = None
    Filters: Optional[SearchPropertyPredicates] = None
    SearchText: Optional[ValueString] = None
    SortCriteria: Optional[SortCriteria] = None
    MaxResults: Optional[PageSize] = None
    ResourceShareType: Optional[ResourceShareType] = None


class StartJobRunRequest(BaseModel):
    JobName: NameString
    JobRunId: Optional[IdString] = None
    Arguments: Optional[GenericMap] = None
    AllocatedCapacity: Optional[IntegerValue] = None
    Timeout: Optional[Timeout] = None
    MaxCapacity: Optional[NullableDouble] = None
    SecurityConfiguration: Optional[NameString] = None
    NotificationProperty: Optional[NotificationProperty] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None


class UpdateConnectionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Name: NameString
    ConnectionInput: ConnectionInput


class UpdateJobRequest(BaseModel):
    JobName: NameString
    JobUpdate: JobUpdate


class UpdateMLTransformRequest(BaseModel):
    TransformId: HashString
    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Parameters: Optional[TransformParameters] = None
    Role: Optional[RoleString] = None
    GlueVersion: Optional[GlueVersionString] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    Timeout: Optional[Timeout] = None
    MaxRetries: Optional[NullableInteger] = None


class UpdateSchemaInput(BaseModel):
    SchemaId: SchemaId
    SchemaVersionNumber: Optional[SchemaVersionNumber] = None
    Compatibility: Optional[Compatibility] = None
    Description: Optional[DescriptionString] = None


class UpdateTriggerResponse(TriggerNodeDetails):
    pass


class UpdateTriggerRequest(BaseModel):
    Name: NameString
    TriggerUpdate: TriggerUpdate


class UpdateUserDefinedFunctionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    FunctionName: NameString
    FunctionInput: UserDefinedFunctionInput


class BackfillErroredPartitionsList(BaseModel):
    __root__: List[PartitionValueList]


class BackfillError(BaseModel):
    """
    <p>A list of errors that can occur when registering partition indexes for an existing table.</p> <p>These errors give the details about why an index registration failed and provide a limited number of partitions in the response, so that you can fix the partitions at fault and try registering the index again. The most common set of errors that can occur are categorized as follows:</p> <ul> <li> <p>EncryptedPartitionError: The partitions are encrypted.</p> </li> <li> <p>InvalidPartitionTypeDataError: The partition value doesn't match the data type for that partition column.</p> </li> <li> <p>MissingPartitionValueError: The partitions are encrypted.</p> </li> <li> <p>UnsupportedPartitionCharacterError: Characters inside the partition value are not supported. For example: U+0000 , U+0001, U+0002.</p> </li> <li> <p>InternalError: Any error which does not belong to other error codes.</p> </li> </ul>
    """

    Code: Optional[BackfillErrorCode] = None
    Partitions: Optional[BackfillErroredPartitionsList] = None


class BackfillErrors(BaseModel):
    __root__: List[BackfillError]


class PartitionErrors(BaseModel):
    __root__: List[PartitionError]


class TableErrors(BaseModel):
    __root__: List[TableError]


class TableVersionErrors(BaseModel):
    __root__: List[TableVersionError]


class JobList(BaseModel):
    __root__: List[Job]


class TriggerList(BaseModel):
    __root__: List[Trigger]


class PartitionInput(BaseModel):
    """
    The structure used to create and update a partition.
    """

    Values: Optional[ValueStringList] = None
    LastAccessTime: Optional[Timestamp] = None
    StorageDescriptor: Optional[StorageDescriptor] = None
    Parameters: Optional[ParametersMap] = None
    LastAnalyzedTime: Optional[Timestamp] = None


class BatchUpdatePartitionRequestEntry(BaseModel):
    """
    A structure that contains the values and structure used to update a partition.
    """

    PartitionValueList: BoundedPartitionValueList
    PartitionInput: PartitionInput


class ColumnStatisticsData(BaseModel):
    """
    Contains the individual types of column statistics data. Only one data object should be set and indicated by the <code>Type</code> attribute.
    """

    Type: ColumnStatisticsType
    BooleanColumnStatisticsData: Optional[BooleanColumnStatisticsData] = None
    DateColumnStatisticsData: Optional[DateColumnStatisticsData] = None
    DecimalColumnStatisticsData: Optional[DecimalColumnStatisticsData] = None
    DoubleColumnStatisticsData: Optional[DoubleColumnStatisticsData] = None
    LongColumnStatisticsData: Optional[LongColumnStatisticsData] = None
    StringColumnStatisticsData: Optional[StringColumnStatisticsData] = None
    BinaryColumnStatisticsData: Optional[BinaryColumnStatisticsData] = None


class ColumnStatistics(BaseModel):
    """
    Represents the generated column-level statistics for a table or partition.
    """

    ColumnName: NameString
    ColumnType: TypeString
    AnalyzedTime: Timestamp
    StatisticsData: ColumnStatisticsData


class ColumnStatisticsError(BaseModel):
    """
    Encapsulates a <code>ColumnStatistics</code> object that failed and the reason for failure.
    """

    ColumnStatistics: Optional[ColumnStatistics] = None
    Error: Optional[ErrorDetail] = None


class ColumnStatisticsErrors(BaseModel):
    __root__: List[ColumnStatisticsError]


class ColumnStatisticsList(BaseModel):
    __root__: List[ColumnStatistics]


class CrawlerTargets(BaseModel):
    """
    Specifies data stores to crawl.
    """

    S3Targets: Optional[S3TargetList] = None
    JdbcTargets: Optional[JdbcTargetList] = None
    MongoDBTargets: Optional[MongoDBTargetList] = None
    DynamoDBTargets: Optional[DynamoDBTargetList] = None
    CatalogTargets: Optional[CatalogTargetList] = None


class Crawler(BaseModel):
    """
    Specifies a crawler program that examines a data source and uses classifiers to try to determine its schema. If successful, the crawler records metadata concerning the data source in the Glue Data Catalog.
    """

    Name: Optional[NameString] = None
    Role: Optional[Role] = None
    Targets: Optional[CrawlerTargets] = None
    DatabaseName: Optional[DatabaseName] = None
    Description: Optional[DescriptionString] = None
    Classifiers: Optional[ClassifierNameList] = None
    RecrawlPolicy: Optional[RecrawlPolicy] = None
    SchemaChangePolicy: Optional[SchemaChangePolicy] = None
    LineageConfiguration: Optional[LineageConfiguration] = None
    State: Optional[CrawlerState] = None
    TablePrefix: Optional[TablePrefix] = None
    Schedule: Optional[Schedule4] = None
    CrawlElapsedTime: Optional[MillisecondsCount] = None
    CreationTime: Optional[Timestamp] = None
    LastUpdated: Optional[Timestamp] = None
    LastCrawl: Optional[LastCrawlInfo] = None
    Version: Optional[VersionId] = None
    Configuration: Optional[CrawlerConfiguration] = None
    CrawlerSecurityConfiguration: Optional[CrawlerSecurityConfiguration] = None


class DatabaseInput(BaseModel):
    """
    The structure used to create or update a database.
    """

    Name: NameString
    Description: Optional[DescriptionString] = None
    LocationUri: Optional[URI] = None
    Parameters: Optional[ParametersMap] = None
    CreateTableDefaultPermissions: Optional[PrincipalPermissionsList] = None
    TargetDatabase: Optional[DatabaseIdentifier] = None


class EncryptionConfiguration(BaseModel):
    """
    Specifies an encryption configuration.
    """

    S3Encryption: Optional[S3EncryptionList] = None
    CloudWatchEncryption: Optional[CloudWatchEncryption] = None
    JobBookmarksEncryption: Optional[JobBookmarksEncryption] = None


class TableInput(BaseModel):
    """
    A structure used to define a table.
    """

    Name: NameString
    Description: Optional[DescriptionString] = None
    Owner: Optional[NameString] = None
    LastAccessTime: Optional[Timestamp] = None
    LastAnalyzedTime: Optional[Timestamp] = None
    Retention: Optional[NonNegativeInteger] = None
    StorageDescriptor: Optional[StorageDescriptor] = None
    PartitionKeys: Optional[ColumnList] = None
    ViewOriginalText: Optional[ViewTextString] = None
    ViewExpandedText: Optional[ViewTextString] = None
    TableType: Optional[TableTypeString] = None
    Parameters: Optional[ParametersMap] = None
    TargetTable: Optional[TableIdentifier] = None


class JobRun(BaseModel):
    """
    Contains information about a job run.
    """

    Id: Optional[IdString] = None
    Attempt: Optional[AttemptCount] = None
    PreviousRunId: Optional[IdString] = None
    TriggerName: Optional[NameString] = None
    JobName: Optional[NameString] = None
    StartedOn: Optional[TimestampValue] = None
    LastModifiedOn: Optional[TimestampValue] = None
    CompletedOn: Optional[TimestampValue] = None
    JobRunState: Optional[TaskStatusType] = None
    Arguments: Optional[GenericMap] = None
    ErrorMessage: Optional[ErrorString1] = None
    PredecessorRuns: Optional[PredecessorList] = None
    AllocatedCapacity: Optional[IntegerValue] = None
    ExecutionTime: Optional[ExecutionTime] = None
    Timeout: Optional[Timeout] = None
    MaxCapacity: Optional[NullableDouble] = None
    WorkerType: Optional[WorkerType] = None
    NumberOfWorkers: Optional[NullableInteger] = None
    SecurityConfiguration: Optional[NameString] = None
    LogGroupName: Optional[GenericString] = None
    NotificationProperty: Optional[NotificationProperty] = None
    GlueVersion: Optional[GlueVersionString] = None


class JobRunList(BaseModel):
    __root__: List[JobRun]


class TaskRunList(BaseModel):
    __root__: List[TaskRun]


class TransformList(BaseModel):
    __root__: List[MLTransform]


class Partition(BaseModel):
    """
    Represents a slice of table data.
    """

    Values: Optional[ValueStringList] = None
    DatabaseName: Optional[NameString] = None
    TableName: Optional[NameString] = None
    CreationTime: Optional[Timestamp] = None
    LastAccessTime: Optional[Timestamp] = None
    StorageDescriptor: Optional[StorageDescriptor] = None
    Parameters: Optional[ParametersMap] = None
    LastAnalyzedTime: Optional[Timestamp] = None
    CatalogId: Optional[CatalogIdString] = None


class GetResourcePoliciesResponseList(BaseModel):
    __root__: List[GluePolicy]


class SecurityConfiguration(BaseModel):
    """
    Specifies a security configuration.
    """

    Name: Optional[NameString] = None
    CreatedTimeStamp: Optional[TimestampValue] = None
    EncryptionConfiguration: Optional[EncryptionConfiguration] = None


class SecurityConfigurationList(BaseModel):
    __root__: List[SecurityConfiguration]


class Table(BaseModel):
    """
    Represents a collection of related data organized in columns and rows.
    """

    Name: NameString
    DatabaseName: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Owner: Optional[NameString] = None
    CreateTime: Optional[Timestamp] = None
    UpdateTime: Optional[Timestamp] = None
    LastAccessTime: Optional[Timestamp] = None
    LastAnalyzedTime: Optional[Timestamp] = None
    Retention: Optional[NonNegativeInteger] = None
    StorageDescriptor: Optional[StorageDescriptor] = None
    PartitionKeys: Optional[ColumnList] = None
    ViewOriginalText: Optional[ViewTextString] = None
    ViewExpandedText: Optional[ViewTextString] = None
    TableType: Optional[TableTypeString] = None
    Parameters: Optional[ParametersMap] = None
    CreatedBy: Optional[NameString] = None
    IsRegisteredWithLakeFormation: Optional[Boolean] = None
    TargetTable: Optional[TableIdentifier] = None
    CatalogId: Optional[CatalogIdString] = None


class TableVersion(BaseModel):
    """
    Specifies a version of a table.
    """

    Table: Optional[Table] = None
    VersionId: Optional[VersionString] = None


class GetTableVersionsList(BaseModel):
    __root__: List[TableVersion]


class TableList(BaseModel):
    __root__: List[Table]


class JobNodeDetails(BaseModel):
    """
    The details of a Job node present in the workflow.
    """

    JobRuns: Optional[JobRunList] = None


class Node(BaseModel):
    """
    A node represents an Glue component (trigger, crawler, or job) on a workflow graph.
    """

    Type: Optional[NodeType1] = None
    Name: Optional[NameString] = None
    UniqueId: Optional[NameString] = None
    TriggerDetails: Optional[TriggerNodeDetails] = None
    JobDetails: Optional[JobNodeDetails] = None
    CrawlerDetails: Optional[CrawlerNodeDetails] = None


class NodeList(BaseModel):
    __root__: List[Node]


class PartitionIndexDescriptor(BaseModel):
    """
    A descriptor for a partition index in a table.
    """

    IndexName: NameString
    Keys: KeySchemaElementList
    IndexStatus: PartitionIndexStatus
    BackfillErrors: Optional[BackfillErrors] = None


class UpdateColumnStatisticsList(BaseModel):
    __root__: Annotated[List[ColumnStatistics], Field(max_items=25, min_items=0)]


class WorkflowGraph(BaseModel):
    """
    A workflow graph represents the complete workflow containing all the Glue components present in the workflow and all the directed connections between them.
    """

    Nodes: Optional[NodeList] = None
    Edges: Optional[EdgeList] = None


class BatchCreatePartitionResponse(BaseModel):
    Errors: Optional[PartitionErrors] = None


class BatchDeletePartitionResponse(BatchCreatePartitionResponse):
    pass


class BatchDeleteTableResponse(BaseModel):
    Errors: Optional[TableErrors] = None


class BatchDeleteTableVersionResponse(BaseModel):
    Errors: Optional[TableVersionErrors] = None


class BatchGetJobsResponse(BaseModel):
    Jobs: Optional[JobList] = None
    JobsNotFound: Optional[JobNameList] = None


class BatchGetTriggersResponse(BaseModel):
    Triggers: Optional[TriggerList] = None
    TriggersNotFound: Optional[TriggerNameList] = None


class CreateCrawlerRequest(BaseModel):
    Name: NameString
    Role: Role
    DatabaseName: Optional[DatabaseName] = None
    Description: Optional[DescriptionString] = None
    Targets: CrawlerTargets
    Schedule: Optional[CronExpression] = None
    Classifiers: Optional[ClassifierNameList] = None
    TablePrefix: Optional[TablePrefix] = None
    SchemaChangePolicy: Optional[SchemaChangePolicy] = None
    RecrawlPolicy: Optional[RecrawlPolicy] = None
    LineageConfiguration: Optional[LineageConfiguration] = None
    Configuration: Optional[CrawlerConfiguration] = None
    CrawlerSecurityConfiguration: Optional[CrawlerSecurityConfiguration] = None
    Tags: Optional[TagsMap] = None


class CreateDatabaseRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseInput: DatabaseInput


class CreatePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionInput: PartitionInput


class CreateSecurityConfigurationRequest(BaseModel):
    Name: NameString
    EncryptionConfiguration: EncryptionConfiguration


class CreateTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableInput: TableInput
    PartitionIndexes: Optional[PartitionIndexList] = None


class GetColumnStatisticsForPartitionResponse(BaseModel):
    ColumnStatisticsList: Optional[ColumnStatisticsList] = None
    Errors: Optional[ColumnErrors] = None


class GetColumnStatisticsForTableResponse(GetColumnStatisticsForPartitionResponse):
    pass


class GetCrawlerResponse(BaseModel):
    Crawler: Optional[Crawler] = None


class GetJobRunResponse(BaseModel):
    JobRun: Optional[JobRun] = None


class GetJobRunsResponse(BaseModel):
    JobRuns: Optional[JobRunList] = None
    NextToken: Optional[GenericString] = None


class GetJobsResponse(BaseModel):
    Jobs: Optional[JobList] = None
    NextToken: Optional[GenericString] = None


class GetMLTaskRunsResponse(BaseModel):
    TaskRuns: Optional[TaskRunList] = None
    NextToken: Optional[PaginationToken] = None


class GetMLTransformsResponse(BaseModel):
    Transforms: TransformList
    NextToken: Optional[PaginationToken] = None


class GetPartitionResponse(BaseModel):
    Partition: Optional[Partition] = None


class GetResourcePoliciesResponse(BaseModel):
    GetResourcePoliciesResponseList: Optional[GetResourcePoliciesResponseList] = None
    NextToken: Optional[Token] = None


class GetSecurityConfigurationResponse(BaseModel):
    SecurityConfiguration: Optional[SecurityConfiguration] = None


class GetSecurityConfigurationsResponse(BaseModel):
    SecurityConfigurations: Optional[SecurityConfigurationList] = None
    NextToken: Optional[GenericString] = None


class GetTableResponse(BaseModel):
    Table: Optional[Table] = None


class GetTableVersionResponse(BaseModel):
    TableVersion: Optional[TableVersion] = None


class GetTableVersionsResponse(BaseModel):
    TableVersions: Optional[GetTableVersionsList] = None
    NextToken: Optional[Token] = None


class GetTablesResponse(BaseModel):
    TableList: Optional[TableList] = None
    NextToken: Optional[Token] = None


class GetTriggersResponse(BaseModel):
    Triggers: Optional[TriggerList] = None
    NextToken: Optional[GenericString] = None


class SearchTablesResponse(BaseModel):
    NextToken: Optional[Token] = None
    TableList: Optional[TableList] = None


class UpdateColumnStatisticsForPartitionResponse(BaseModel):
    Errors: Optional[ColumnStatisticsErrors] = None


class UpdateColumnStatisticsForPartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValues: ValueStringList
    ColumnStatisticsList: UpdateColumnStatisticsList


class UpdateColumnStatisticsForTableResponse(
    UpdateColumnStatisticsForPartitionResponse
):
    pass


class UpdateColumnStatisticsForTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    ColumnStatisticsList: UpdateColumnStatisticsList


class UpdateCrawlerRequest(BaseModel):
    Name: NameString
    Role: Optional[Role] = None
    DatabaseName: Optional[DatabaseName] = None
    Description: Optional[DescriptionStringRemovable] = None
    Targets: Optional[CrawlerTargets] = None
    Schedule: Optional[CronExpression] = None
    Classifiers: Optional[ClassifierNameList] = None
    TablePrefix: Optional[TablePrefix] = None
    SchemaChangePolicy: Optional[SchemaChangePolicy] = None
    RecrawlPolicy: Optional[RecrawlPolicy] = None
    LineageConfiguration: Optional[LineageConfiguration] = None
    Configuration: Optional[CrawlerConfiguration] = None
    CrawlerSecurityConfiguration: Optional[CrawlerSecurityConfiguration] = None


class UpdateDatabaseRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    Name: NameString
    DatabaseInput: DatabaseInput


class UpdatePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionValueList: BoundedPartitionValueList
    PartitionInput: PartitionInput


class UpdateTableRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableInput: TableInput
    SkipArchive: Optional[BooleanNullable] = None


class PartitionInputList(BaseModel):
    __root__: Annotated[List[PartitionInput], Field(max_items=100, min_items=0)]


class CrawlerList(BaseModel):
    __root__: List[Crawler]


class PartitionList(BaseModel):
    __root__: List[Partition]


class BatchUpdatePartitionRequestEntryList(BaseModel):
    __root__: Annotated[
        List[BatchUpdatePartitionRequestEntry], Field(max_items=100, min_items=1)
    ]


class PartitionIndexDescriptorList(BaseModel):
    __root__: List[PartitionIndexDescriptor]


class WorkflowRun(BaseModel):
    """
    A workflow run is an execution of a workflow providing all the runtime information.
    """

    Name: Optional[NameString] = None
    WorkflowRunId: Optional[IdString] = None
    PreviousRunId: Optional[IdString] = None
    WorkflowRunProperties: Optional[WorkflowRunProperties] = None
    StartedOn: Optional[TimestampValue] = None
    CompletedOn: Optional[TimestampValue] = None
    Status: Optional[WorkflowRunStatus] = None
    ErrorMessage: Optional[ErrorString1] = None
    Statistics: Optional[WorkflowRunStatistics] = None
    Graph: Optional[WorkflowGraph] = None
    StartingEventBatchCondition: Optional[StartingEventBatchCondition] = None


class WorkflowRuns(BaseModel):
    __root__: Annotated[List[WorkflowRun], Field(max_items=1000, min_items=1)]


class BatchCreatePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    PartitionInputList: PartitionInputList


class BatchGetCrawlersResponse(BaseModel):
    Crawlers: Optional[CrawlerList] = None
    CrawlersNotFound: Optional[CrawlerNameList] = None


class BatchGetPartitionResponse(BaseModel):
    Partitions: Optional[PartitionList] = None
    UnprocessedKeys: Optional[BatchGetPartitionValueList] = None


class BatchUpdatePartitionRequest(BaseModel):
    CatalogId: Optional[CatalogIdString] = None
    DatabaseName: NameString
    TableName: NameString
    Entries: BatchUpdatePartitionRequestEntryList


class GetCrawlersResponse(BaseModel):
    Crawlers: Optional[CrawlerList] = None
    NextToken: Optional[Token] = None


class GetPartitionIndexesResponse(BaseModel):
    PartitionIndexDescriptorList: Optional[PartitionIndexDescriptorList] = None
    NextToken: Optional[Token] = None


class GetPartitionsResponse(BaseModel):
    Partitions: Optional[PartitionList] = None
    NextToken: Optional[Token] = None


class GetWorkflowRunResponse(BaseModel):
    Run: Optional[WorkflowRun] = None


class GetWorkflowRunsResponse(BaseModel):
    Runs: Optional[WorkflowRuns] = None
    NextToken: Optional[GenericString] = None


class Workflow(BaseModel):
    """
    A workflow is a collection of multiple dependent Glue jobs and crawlers that are run to complete a complex ETL task. A workflow manages the execution and monitoring of all its jobs and crawlers.
    """

    Name: Optional[NameString] = None
    Description: Optional[GenericString] = None
    DefaultRunProperties: Optional[WorkflowRunProperties] = None
    CreatedOn: Optional[TimestampValue] = None
    LastModifiedOn: Optional[TimestampValue] = None
    LastRun: Optional[WorkflowRun] = None
    Graph: Optional[WorkflowGraph] = None
    MaxConcurrentRuns: Optional[NullableInteger] = None
    BlueprintDetails: Optional[BlueprintDetails] = None


class GetWorkflowResponse(BaseModel):
    Workflow: Optional[Workflow] = None


class Workflows(BaseModel):
    __root__: Annotated[List[Workflow], Field(max_items=25, min_items=1)]


class BatchGetWorkflowsResponse(BaseModel):
    Workflows: Optional[Workflows] = None
    MissingWorkflows: Optional[WorkflowNames] = None

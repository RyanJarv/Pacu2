# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:53:15+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class _Integer(BaseModel):
    __root__: int


class _Boolean(BaseModel):
    __root__: bool


class _ListOfString(BaseModel):
    __root__: List[_String]


class DayOfWeek(Enum):
    MONDAY = 'MONDAY'
    TUESDAY = 'TUESDAY'
    WEDNESDAY = 'WEDNESDAY'
    THURSDAY = 'THURSDAY'
    FRIDAY = 'FRIDAY'
    SATURDAY = 'SATURDAY'
    SUNDAY = 'SUNDAY'


class User(BaseModel):
    """
    A user associated with the broker. For RabbitMQ brokers, one and only one administrative user is accepted and created when a broker is first provisioned. All subsequent broker users are created by making RabbitMQ API calls directly to brokers or via the RabbitMQ web console.
    """

    ConsoleAccess: Optional[_Boolean] = None
    Groups: Optional[_ListOfString] = None
    Password: _String
    Username: _String


class BadRequestException(BaseModel):
    __root__: Any


class UnauthorizedException(BadRequestException):
    pass


class InternalServerErrorException(BadRequestException):
    pass


class ConflictException(BadRequestException):
    pass


class ForbiddenException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class CreateUserResponse(BaseModel):
    pass


class DeleteBrokerResponse(BaseModel):
    BrokerId: Optional[_String] = None


class DeleteUserResponse(CreateUserResponse):
    pass


class RebootBrokerResponse(CreateUserResponse):
    pass


class UpdateUserResponse(CreateUserResponse):
    pass


class AuthenticationStrategy(Enum):
    """
    Optional. The authentication strategy used to secure the broker. The default is SIMPLE.
    """

    SIMPLE = 'SIMPLE'
    LDAP = 'LDAP'


class AvailabilityZone(BaseModel):
    """
    Name of the availability zone.
    """

    Name: Optional[_String] = None


class EngineType(Enum):
    """
    The type of broker engine. Amazon MQ supports ActiveMQ and RabbitMQ.
    """

    ACTIVEMQ = 'ACTIVEMQ'
    RABBITMQ = 'RABBITMQ'


class BrokerInstance(BaseModel):
    """
    Returns information about all brokers.
    """

    ConsoleURL: Optional[_String] = None
    Endpoints: Optional[_ListOfString] = None
    IpAddress: Optional[_String] = None


class _ListOfAvailabilityZone(BaseModel):
    __root__: List[AvailabilityZone]


class BrokerStorageType(Enum):
    """
    <p>The broker's storage type.</p> <important><p>EFS is not supported for RabbitMQ engine type.</p></important>
    """

    EBS = 'EBS'
    EFS = 'EFS'


class BrokerState(Enum):
    """
    The broker's status.
    """

    CREATION_IN_PROGRESS = 'CREATION_IN_PROGRESS'
    CREATION_FAILED = 'CREATION_FAILED'
    DELETION_IN_PROGRESS = 'DELETION_IN_PROGRESS'
    RUNNING = 'RUNNING'
    REBOOT_IN_PROGRESS = 'REBOOT_IN_PROGRESS'


class _TimestampIso8601(BaseModel):
    __root__: datetime


class DeploymentMode(Enum):
    """
    The broker's deployment mode.
    """

    SINGLE_INSTANCE = 'SINGLE_INSTANCE'
    ACTIVE_STANDBY_MULTI_AZ = 'ACTIVE_STANDBY_MULTI_AZ'
    CLUSTER_MULTI_AZ = 'CLUSTER_MULTI_AZ'


class BrokerSummary(BaseModel):
    """
    Returns information about all brokers.
    """

    BrokerArn: Optional[_String] = None
    BrokerId: Optional[_String] = None
    BrokerName: Optional[_String] = None
    BrokerState: Optional[BrokerState] = None
    Created: Optional[_TimestampIso8601] = None
    DeploymentMode: DeploymentMode
    EngineType: EngineType
    HostInstanceType: Optional[_String] = None


class ChangeType(Enum):
    """
    The type of change pending for the ActiveMQ user.
    """

    CREATE = 'CREATE'
    UPDATE = 'UPDATE'
    DELETE = 'DELETE'


class ConfigurationRevision(BaseModel):
    """
    Returns information about the specified configuration revision.
    """

    Created: _TimestampIso8601
    Description: Optional[_String] = None
    Revision: _Integer


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Configuration1(BaseModel):
    """
    Returns information about all configurations.
    """

    Arn: _String
    AuthenticationStrategy: AuthenticationStrategy
    Created: _TimestampIso8601
    Description: _String
    EngineType: EngineType
    EngineVersion: _String
    Id: _String
    LatestRevision: ConfigurationRevision
    Name: _String
    Tags: Optional[_MapOfString] = None


class ConfigurationId(BaseModel):
    """
    <p>A list of information about the configuration.</p> <important><p>Does not apply to RabbitMQ brokers.</p></important>
    """

    Id: _String
    Revision: Optional[_Integer] = None


class _ListOfConfigurationId(BaseModel):
    __root__: List[ConfigurationId]


class Configurations(BaseModel):
    """
    Broker configuration information
    """

    Current: Optional[ConfigurationId] = None
    History: Optional[_ListOfConfigurationId] = None
    Pending: Optional[ConfigurationId] = None


class EncryptionOptions(BaseModel):
    """
    <important><p>Does not apply to RabbitMQ brokers.</p></important> <p>Encryption options for the broker.</p>
    """

    KmsKeyId: Optional[_String] = None
    UseAwsOwnedKey: _Boolean


class LdapServerMetadataInput(BaseModel):
    """
    <p>Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker.</p> <important><p>Does not apply to RabbitMQ brokers.</p></important>
    """

    Hosts: _ListOfString
    RoleBase: _String
    RoleName: Optional[_String] = None
    RoleSearchMatching: _String
    RoleSearchSubtree: Optional[_Boolean] = None
    ServiceAccountPassword: _String
    ServiceAccountUsername: _String
    UserBase: _String
    UserRoleName: Optional[_String] = None
    UserSearchMatching: _String
    UserSearchSubtree: Optional[_Boolean] = None


class Logs(BaseModel):
    """
    The list of information about logs to be enabled for the specified broker.
    """

    Audit: Optional[_Boolean] = None
    General: Optional[_Boolean] = None


class WeeklyStartTime(BaseModel):
    """
    The scheduled time period relative to UTC during which Amazon MQ begins to apply pending updates or patches to the broker.
    """

    DayOfWeek: DayOfWeek
    TimeOfDay: _String
    TimeZone: Optional[_String] = None


class _ListOfUser(BaseModel):
    __root__: List[User]


class CreateBrokerRequest(BaseModel):
    """
    Creates a broker using the specified properties.
    """

    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    AutoMinorVersionUpgrade: _Boolean
    BrokerName: _String
    Configuration: Optional[ConfigurationId] = None
    CreatorRequestId: Optional[_String] = None
    DeploymentMode: DeploymentMode
    EncryptionOptions: Optional[EncryptionOptions] = None
    EngineType: EngineType
    EngineVersion: _String
    HostInstanceType: _String
    LdapServerMetadata: Optional[LdapServerMetadataInput] = None
    Logs: Optional[Logs] = None
    MaintenanceWindowStartTime: Optional[WeeklyStartTime] = None
    PubliclyAccessible: _Boolean
    SecurityGroups: Optional[_ListOfString] = None
    StorageType: Optional[BrokerStorageType] = None
    SubnetIds: Optional[_ListOfString] = None
    Tags: Optional[_MapOfString] = None
    Users: _ListOfUser


class CreateConfigurationRequest(BaseModel):
    """
    Creates a new configuration for the specified configuration name. Amazon MQ uses the default configuration (the engine type and version).
    """

    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    EngineType: EngineType
    EngineVersion: _String
    Name: _String
    Tags: Optional[_MapOfString] = None


class CreateTagsRequest(BaseModel):
    """
    A map of the key-value pairs for the resource tag.
    """

    Tags: Optional[_MapOfString] = None


class CreateUserRequest(BaseModel):
    """
    Creates a new ActiveMQ user.
    """

    ConsoleAccess: Optional[_Boolean] = None
    Groups: Optional[_ListOfString] = None
    Password: _String


class DeleteBrokerRequest(BaseModel):
    pass


class DeleteTagsRequest(BaseModel):
    pass


class DeleteUserRequest(BaseModel):
    pass


class MaxResults5(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class DescribeBrokerEngineTypesRequest(BaseModel):
    pass


class _IntegerMin5Max100(BaseModel):
    __root__: Annotated[int, Field(ge=5.0, le=100.0)]


class DescribeBrokerInstanceOptionsRequest(BaseModel):
    pass


class DescribeBrokerRequest(BaseModel):
    pass


class _ListOfBrokerInstance(BaseModel):
    __root__: List[BrokerInstance]


class LdapServerMetadataOutput(BaseModel):
    """
    Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker.
    """

    Hosts: _ListOfString
    RoleBase: _String
    RoleName: Optional[_String] = None
    RoleSearchMatching: _String
    RoleSearchSubtree: Optional[_Boolean] = None
    ServiceAccountUsername: _String
    UserBase: _String
    UserRoleName: Optional[_String] = None
    UserSearchMatching: _String
    UserSearchSubtree: Optional[_Boolean] = None


class DescribeConfigurationRequest(BaseModel):
    pass


class DescribeConfigurationRevisionRequest(BaseModel):
    pass


class DescribeUserRequest(BaseModel):
    pass


class UserPendingChanges(BaseModel):
    """
    Returns information about the status of the changes pending for the ActiveMQ user.
    """

    ConsoleAccess: Optional[_Boolean] = None
    Groups: Optional[_ListOfString] = None
    PendingChange: ChangeType


class EngineVersion(AvailabilityZone):
    """
    Id of the engine version.
    """

    pass


class ListBrokersRequest(BaseModel):
    pass


class _ListOfBrokerSummary(BaseModel):
    __root__: List[BrokerSummary]


class ListConfigurationRevisionsRequest(BaseModel):
    pass


class _ListOfConfigurationRevision(BaseModel):
    __root__: List[ConfigurationRevision]


class ListConfigurationsRequest(BaseModel):
    pass


class _ListOfConfiguration(BaseModel):
    __root__: List[Configuration1]


class ListTagsRequest(BaseModel):
    pass


class ListUsersRequest(BaseModel):
    pass


class PendingLogs(Logs):
    """
    The list of information about logs to be enabled for the specified broker.
    """

    pass


class RebootBrokerRequest(BaseModel):
    pass


class SanitizationWarningReason(Enum):
    """
    The reason for which the XML elements or attributes were sanitized.
    """

    DISALLOWED_ELEMENT_REMOVED = 'DISALLOWED_ELEMENT_REMOVED'
    DISALLOWED_ATTRIBUTE_REMOVED = 'DISALLOWED_ATTRIBUTE_REMOVED'
    INVALID_ATTRIBUTE_VALUE_REMOVED = 'INVALID_ATTRIBUTE_VALUE_REMOVED'


class SanitizationWarning(BaseModel):
    """
    Returns information about the XML element or attribute that was sanitized in the configuration.
    """

    AttributeName: Optional[_String] = None
    ElementName: Optional[_String] = None
    Reason: SanitizationWarningReason


class UpdateBrokerRequest(BaseModel):
    """
    Updates the broker using the specified properties.
    """

    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    AutoMinorVersionUpgrade: Optional[_Boolean] = None
    Configuration: Optional[ConfigurationId] = None
    EngineVersion: Optional[_String] = None
    HostInstanceType: Optional[_String] = None
    LdapServerMetadata: Optional[LdapServerMetadataInput] = None
    Logs: Optional[Logs] = None
    MaintenanceWindowStartTime: Optional[WeeklyStartTime] = None
    SecurityGroups: Optional[_ListOfString] = None


class UpdateConfigurationRequest(BaseModel):
    """
    Updates the specified configuration.
    """

    Data: _String
    Description: Optional[_String] = None


class _ListOfSanitizationWarning(BaseModel):
    __root__: List[SanitizationWarning]


class UpdateUserRequest(BaseModel):
    """
    Updates the information for an ActiveMQ user.
    """

    ConsoleAccess: Optional[_Boolean] = None
    Groups: Optional[_ListOfString] = None
    Password: Optional[_String] = None


class UserSummary(BaseModel):
    """
    Returns a list of all broker users. Does not apply to RabbitMQ brokers.
    """

    PendingChange: Optional[ChangeType] = None
    Username: _String


class CreateBrokerResponse(BaseModel):
    BrokerArn: Optional[_String] = None
    BrokerId: Optional[_String] = None


class CreateConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    Created: Optional[_TimestampIso8601] = None
    Id: Optional[_String] = None
    LatestRevision: Optional[ConfigurationRevision] = None
    Name: Optional[_String] = None


class DescribeConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    Created: Optional[_TimestampIso8601] = None
    Description: Optional[_String] = None
    EngineType: Optional[EngineType] = None
    EngineVersion: Optional[_String] = None
    Id: Optional[_String] = None
    LatestRevision: Optional[ConfigurationRevision] = None
    Name: Optional[_String] = None
    Tags: Optional[_MapOfString] = None


class DescribeConfigurationRevisionResponse(BaseModel):
    ConfigurationId: Optional[_String] = None
    Created: Optional[_TimestampIso8601] = None
    Data: Optional[_String] = None
    Description: Optional[_String] = None


class DescribeUserResponse(BaseModel):
    BrokerId: Optional[_String] = None
    ConsoleAccess: Optional[_Boolean] = None
    Groups: Optional[_ListOfString] = None
    Pending: Optional[UserPendingChanges] = None
    Username: Optional[_String] = None


class ListBrokersResponse(BaseModel):
    BrokerSummaries: Optional[_ListOfBrokerSummary] = None
    NextToken: Optional[_String] = None


class ListConfigurationRevisionsResponse(BaseModel):
    ConfigurationId: Optional[_String] = None
    MaxResults: Optional[_Integer] = None
    NextToken: Optional[_String] = None
    Revisions: Optional[_ListOfConfigurationRevision] = None


class ListConfigurationsResponse(BaseModel):
    Configurations: Optional[_ListOfConfiguration] = None
    MaxResults: Optional[_Integer] = None
    NextToken: Optional[_String] = None


class ListTagsResponse(BaseModel):
    Tags: Optional[_MapOfString] = None


class UpdateBrokerResponse(BaseModel):
    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    AutoMinorVersionUpgrade: Optional[_Boolean] = None
    BrokerId: Optional[_String] = None
    Configuration: Optional[ConfigurationId] = None
    EngineVersion: Optional[_String] = None
    HostInstanceType: Optional[_String] = None
    LdapServerMetadata: Optional[LdapServerMetadataOutput] = None
    Logs: Optional[Logs] = None
    MaintenanceWindowStartTime: Optional[WeeklyStartTime] = None
    SecurityGroups: Optional[_ListOfString] = None


class UpdateConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    Created: Optional[_TimestampIso8601] = None
    Id: Optional[_String] = None
    LatestRevision: Optional[ConfigurationRevision] = None
    Name: Optional[_String] = None
    Warnings: Optional[_ListOfSanitizationWarning] = None


class _ListOfEngineVersion(BaseModel):
    __root__: List[EngineVersion]


class BrokerEngineType(BaseModel):
    """
    Types of broker engines.
    """

    EngineType: Optional[EngineType] = None
    EngineVersions: Optional[_ListOfEngineVersion] = None


class _ListOfDeploymentMode(BaseModel):
    __root__: List[DeploymentMode]


class BrokerInstanceOption(BaseModel):
    """
    Option for host instance type.
    """

    AvailabilityZones: Optional[_ListOfAvailabilityZone] = None
    EngineType: Optional[EngineType] = None
    HostInstanceType: Optional[_String] = None
    StorageType: Optional[BrokerStorageType] = None
    SupportedDeploymentModes: Optional[_ListOfDeploymentMode] = None
    SupportedEngineVersions: Optional[_ListOfString] = None


class _ListOfBrokerEngineType(BaseModel):
    __root__: List[BrokerEngineType]


class _ListOfBrokerInstanceOption(BaseModel):
    __root__: List[BrokerInstanceOption]


class LogsSummary(BaseModel):
    """
    The list of information about logs currently enabled and pending to be deployed for the specified broker.
    """

    Audit: Optional[_Boolean] = None
    AuditLogGroup: Optional[_String] = None
    General: _Boolean
    GeneralLogGroup: _String
    Pending: Optional[PendingLogs] = None


class _ListOfUserSummary(BaseModel):
    __root__: List[UserSummary]


class DescribeBrokerResponse(BaseModel):
    AuthenticationStrategy: Optional[AuthenticationStrategy] = None
    AutoMinorVersionUpgrade: Optional[_Boolean] = None
    BrokerArn: Optional[_String] = None
    BrokerId: Optional[_String] = None
    BrokerInstances: Optional[_ListOfBrokerInstance] = None
    BrokerName: Optional[_String] = None
    BrokerState: Optional[BrokerState] = None
    Configurations: Optional[Configurations] = None
    Created: Optional[_TimestampIso8601] = None
    DeploymentMode: Optional[DeploymentMode] = None
    EncryptionOptions: Optional[EncryptionOptions] = None
    EngineType: Optional[EngineType] = None
    EngineVersion: Optional[_String] = None
    HostInstanceType: Optional[_String] = None
    LdapServerMetadata: Optional[LdapServerMetadataOutput] = None
    Logs: Optional[LogsSummary] = None
    MaintenanceWindowStartTime: Optional[WeeklyStartTime] = None
    PendingAuthenticationStrategy: Optional[AuthenticationStrategy] = None
    PendingEngineVersion: Optional[_String] = None
    PendingHostInstanceType: Optional[_String] = None
    PendingLdapServerMetadata: Optional[LdapServerMetadataOutput] = None
    PendingSecurityGroups: Optional[_ListOfString] = None
    PubliclyAccessible: Optional[_Boolean] = None
    SecurityGroups: Optional[_ListOfString] = None
    StorageType: Optional[BrokerStorageType] = None
    SubnetIds: Optional[_ListOfString] = None
    Tags: Optional[_MapOfString] = None
    Users: Optional[_ListOfUserSummary] = None


class DescribeBrokerEngineTypesResponse(BaseModel):
    BrokerEngineTypes: Optional[_ListOfBrokerEngineType] = None
    MaxResults: Optional[_IntegerMin5Max100] = None
    NextToken: Optional[_String] = None


class DescribeBrokerInstanceOptionsResponse(BaseModel):
    BrokerInstanceOptions: Optional[_ListOfBrokerInstanceOption] = None
    MaxResults: Optional[_IntegerMin5Max100] = None
    NextToken: Optional[_String] = None


class ListUsersResponse(BaseModel):
    BrokerId: Optional[_String] = None
    MaxResults: Optional[_IntegerMin5Max100] = None
    NextToken: Optional[_String] = None
    Users: Optional[_ListOfUserSummary] = None

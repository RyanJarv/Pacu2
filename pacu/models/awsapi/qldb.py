# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:54:09+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class InvalidParameterException(BaseModel):
    __root__: Any


class ResourceNotFoundException(InvalidParameterException):
    pass


class ResourcePreconditionNotMetException(InvalidParameterException):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class ResourceAlreadyExistsException(InvalidParameterException):
    pass


class LimitExceededException(InvalidParameterException):
    pass


class ResourceInUseException(InvalidParameterException):
    pass


class S3Bucket(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=3, regex='^[A-Za-z-0-9-_.]+$')
    ]


class S3Prefix(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0)]


class IonText(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1048576, min_length=1)]


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=20)]


class Boolean(BaseModel):
    __root__: bool


class TagResourceResponse(BaseModel):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class LedgerName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32,
            min_length=1,
            regex='(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$',
        ),
    ]


class UniqueId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=22, min_length=22, regex='^[A-Za-z-0-9]+$')
    ]


class CancelJournalKinesisStreamRequest(BaseModel):
    pass


class Tags(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class PermissionsMode(Enum):
    ALLOW_ALL = 'ALLOW_ALL'
    STANDARD = 'STANDARD'


class DeletionProtection(Boolean):
    pass


class KmsKey(BaseModel):
    __root__: Annotated[str, Field(max_length=1600)]


class CreateLedgerRequest(BaseModel):
    Name: LedgerName
    Tags: Optional[Tags] = None
    PermissionsMode: PermissionsMode
    DeletionProtection: Optional[DeletionProtection] = None
    KmsKey: Optional[KmsKey] = None


class LedgerState(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class Timestamp(BaseModel):
    __root__: datetime


class DeleteLedgerRequest(BaseModel):
    pass


class DescribeJournalKinesisStreamRequest(BaseModel):
    pass


class DescribeJournalS3ExportRequest(BaseModel):
    pass


class DescribeLedgerRequest(BaseModel):
    pass


class Digest(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=32)]


class EncryptionStatus(Enum):
    ENABLED = 'ENABLED'
    UPDATING = 'UPDATING'
    KMS_KEY_INACCESSIBLE = 'KMS_KEY_INACCESSIBLE'


class ErrorCause(Enum):
    KINESIS_STREAM_NOT_FOUND = 'KINESIS_STREAM_NOT_FOUND'
    IAM_PERMISSION_REVOKED = 'IAM_PERMISSION_REVOKED'


class ExportStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'


class ValueHolder(BaseModel):
    """
    A structure that can contain a value in multiple encoding formats.
    """

    IonText: Optional[IonText] = None


class GetBlockRequest(BaseModel):
    BlockAddress: ValueHolder
    DigestTipAddress: Optional[ValueHolder] = None


class GetDigestRequest(BaseModel):
    pass


class GetRevisionRequest(BaseModel):
    BlockAddress: ValueHolder
    DocumentId: UniqueId
    DigestTipAddress: Optional[ValueHolder] = None


class StreamStatus(Enum):
    ACTIVE = 'ACTIVE'
    COMPLETED = 'COMPLETED'
    CANCELED = 'CANCELED'
    FAILED = 'FAILED'
    IMPAIRED = 'IMPAIRED'


class KinesisConfiguration(BaseModel):
    """
    The configuration settings of the Amazon Kinesis Data Streams destination for an Amazon QLDB journal stream.
    """

    StreamArn: Arn
    AggregationEnabled: Optional[Boolean] = None


class StreamName(LedgerName):
    pass


class LedgerSummary(BaseModel):
    """
    Information about a ledger, including its name, state, and when it was created.
    """

    Name: Optional[LedgerName] = None
    State: Optional[LedgerState] = None
    CreationDateTime: Optional[Timestamp] = None


class LedgerList(BaseModel):
    __root__: List[LedgerSummary]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class NextToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=4, regex='^[A-Za-z-0-9+/=]+$')
    ]


class ListJournalKinesisStreamsForLedgerRequest(BaseModel):
    pass


class ListJournalS3ExportsForLedgerRequest(BaseModel):
    pass


class ListJournalS3ExportsRequest(BaseModel):
    pass


class ListLedgersRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class S3ObjectEncryptionType(Enum):
    SSE_KMS = 'SSE_KMS'
    SSE_S3 = 'SSE_S3'
    NO_ENCRYPTION = 'NO_ENCRYPTION'


class StreamJournalToKinesisRequest(BaseModel):
    RoleArn: Arn
    Tags: Optional[Tags] = None
    InclusiveStartTime: Timestamp
    ExclusiveEndTime: Optional[Timestamp] = None
    KinesisConfiguration: KinesisConfiguration
    StreamName: StreamName


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class TagResourceRequest(BaseModel):
    Tags: Tags


class UntagResourceRequest(BaseModel):
    pass


class UpdateLedgerPermissionsModeRequest(BaseModel):
    PermissionsMode: PermissionsMode


class UpdateLedgerRequest(BaseModel):
    DeletionProtection: Optional[DeletionProtection] = None
    KmsKey: Optional[KmsKey] = None


class CancelJournalKinesisStreamResponse(BaseModel):
    StreamId: Optional[UniqueId] = None


class CreateLedgerResponse(BaseModel):
    Name: Optional[LedgerName] = None
    Arn: Optional[Arn] = None
    State: Optional[LedgerState] = None
    CreationDateTime: Optional[Timestamp] = None
    PermissionsMode: Optional[PermissionsMode] = None
    DeletionProtection: Optional[DeletionProtection] = None
    KmsKeyArn: Optional[Arn] = None


class ExportJournalToS3Response(BaseModel):
    ExportId: UniqueId


class S3EncryptionConfiguration(BaseModel):
    """
    The encryption settings that are used by a journal export job to write data in an Amazon Simple Storage Service (Amazon S3) bucket.
    """

    ObjectEncryptionType: S3ObjectEncryptionType
    KmsKeyArn: Optional[Arn] = None


class GetBlockResponse(BaseModel):
    Block: ValueHolder
    Proof: Optional[ValueHolder] = None


class GetDigestResponse(BaseModel):
    Digest: Digest
    DigestTipAddress: ValueHolder


class GetRevisionResponse(BaseModel):
    Proof: Optional[ValueHolder] = None
    Revision: ValueHolder


class ListLedgersResponse(BaseModel):
    Ledgers: Optional[LedgerList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[Tags] = None


class StreamJournalToKinesisResponse(CancelJournalKinesisStreamResponse):
    pass


class UpdateLedgerPermissionsModeResponse(BaseModel):
    Name: Optional[LedgerName] = None
    Arn: Optional[Arn] = None
    PermissionsMode: Optional[PermissionsMode] = None


class JournalKinesisStreamDescription(BaseModel):
    """
    Information about an Amazon QLDB journal stream, including the Amazon Resource Name (ARN), stream name, creation time, current status, and the parameters of the original stream creation request.
    """

    LedgerName: LedgerName
    CreationTime: Optional[Timestamp] = None
    InclusiveStartTime: Optional[Timestamp] = None
    ExclusiveEndTime: Optional[Timestamp] = None
    RoleArn: Arn
    StreamId: UniqueId
    Arn: Optional[Arn] = None
    Status: StreamStatus
    KinesisConfiguration: KinesisConfiguration
    ErrorCause: Optional[ErrorCause] = None
    StreamName: StreamName


class LedgerEncryptionDescription(BaseModel):
    """
    <p>Information about the encryption of data at rest in an Amazon QLDB ledger. This includes the current status, the key in Key Management Service (KMS), and when the key became inaccessible (in the case of an error).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html">Encryption at rest</a> in the <i>Amazon QLDB Developer Guide</i>.</p>
    """

    KmsKeyArn: Arn
    EncryptionStatus: EncryptionStatus
    InaccessibleKmsKeyDateTime: Optional[Timestamp] = None


class S3ExportConfiguration(BaseModel):
    """
    The Amazon Simple Storage Service (Amazon S3) bucket location in which a journal export job writes the journal contents.
    """

    Bucket: S3Bucket
    Prefix: S3Prefix
    EncryptionConfiguration: S3EncryptionConfiguration


class ExportJournalToS3Request(BaseModel):
    InclusiveStartTime: Timestamp
    ExclusiveEndTime: Timestamp
    S3ExportConfiguration: S3ExportConfiguration
    RoleArn: Arn


class JournalKinesisStreamDescriptionList(BaseModel):
    __root__: List[JournalKinesisStreamDescription]


class DescribeJournalKinesisStreamResponse(BaseModel):
    Stream: Optional[JournalKinesisStreamDescription] = None


class DescribeLedgerResponse(BaseModel):
    Name: Optional[LedgerName] = None
    Arn: Optional[Arn] = None
    State: Optional[LedgerState] = None
    CreationDateTime: Optional[Timestamp] = None
    PermissionsMode: Optional[PermissionsMode] = None
    DeletionProtection: Optional[DeletionProtection] = None
    EncryptionDescription: Optional[LedgerEncryptionDescription] = None


class ListJournalKinesisStreamsForLedgerResponse(BaseModel):
    Streams: Optional[JournalKinesisStreamDescriptionList] = None
    NextToken: Optional[NextToken] = None


class UpdateLedgerResponse(BaseModel):
    Name: Optional[LedgerName] = None
    Arn: Optional[Arn] = None
    State: Optional[LedgerState] = None
    CreationDateTime: Optional[Timestamp] = None
    DeletionProtection: Optional[DeletionProtection] = None
    EncryptionDescription: Optional[LedgerEncryptionDescription] = None


class JournalS3ExportDescription(BaseModel):
    """
    Information about a journal export job, including the ledger name, export ID, creation time, current status, and the parameters of the original export creation request.
    """

    LedgerName: LedgerName
    ExportId: UniqueId
    ExportCreationTime: Timestamp
    Status: ExportStatus
    InclusiveStartTime: Timestamp
    ExclusiveEndTime: Timestamp
    S3ExportConfiguration: S3ExportConfiguration
    RoleArn: Arn


class JournalS3ExportList(BaseModel):
    __root__: List[JournalS3ExportDescription]


class DescribeJournalS3ExportResponse(BaseModel):
    ExportDescription: JournalS3ExportDescription


class ListJournalS3ExportsResponse(BaseModel):
    JournalS3Exports: Optional[JournalS3ExportList] = None
    NextToken: Optional[NextToken] = None


class ListJournalS3ExportsForLedgerResponse(ListJournalS3ExportsResponse):
    pass

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:08+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InternalServerException(BaseModel):
    __root__: Any


class InvalidRequestException(InternalServerException):
    pass


class InternalServerError(InternalServerException):
    pass


class AddTagsOutput(BaseModel):
    """
    This output indicates the result of adding tags to a resource.
    """

    pass


class DeleteSecurityConfigurationOutput(AddTagsOutput):
    pass


class GetBlockPublicAccessConfigurationInput(BaseModel):
    pass


class PutAutoTerminationPolicyOutput(AddTagsOutput):
    pass


class PutBlockPublicAccessConfigurationOutput(AddTagsOutput):
    pass


class PutManagedScalingPolicyOutput(AddTagsOutput):
    pass


class RemoveAutoScalingPolicyOutput(AddTagsOutput):
    pass


class RemoveAutoTerminationPolicyOutput(AddTagsOutput):
    pass


class RemoveManagedScalingPolicyOutput(AddTagsOutput):
    pass


class RemoveTagsOutput(AddTagsOutput):
    """
    This output indicates the result of removing tags from the resource.
    """

    pass


class ActionOnFailure(Enum):
    TERMINATE_JOB_FLOW = 'TERMINATE_JOB_FLOW'
    TERMINATE_CLUSTER = 'TERMINATE_CLUSTER'
    CANCEL_AND_WAIT = 'CANCEL_AND_WAIT'
    CONTINUE = 'CONTINUE'


class XmlStringMaxLen256(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class InstanceFleetId(BaseModel):
    __root__: str


class ArnType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class InstanceGroupIdsList(BaseModel):
    __root__: List[XmlStringMaxLen256]


class StepIdsList(InstanceGroupIdsList):
    pass


class ResourceId(InstanceFleetId):
    pass


class AdjustmentType(Enum):
    CHANGE_IN_CAPACITY = 'CHANGE_IN_CAPACITY'
    PERCENT_CHANGE_IN_CAPACITY = 'PERCENT_CHANGE_IN_CAPACITY'
    EXACT_CAPACITY = 'EXACT_CAPACITY'


class String(InstanceFleetId):
    pass


class StringList(BaseModel):
    __root__: List[String]


class StringMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Application(BaseModel):
    """
    <p>With Amazon EMR release version 4.0 and later, the only accepted parameter is the application name. To pass arguments to applications, you use configuration classifications specified using configuration JSON objects. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p> <p>With earlier Amazon EMR releases, the application is any Amazon or third-party software that you can add to the cluster. This structure contains a list of strings that indicates the software to use with the cluster and accepts a user argument list. Amazon EMR accepts and forwards the argument list to the corresponding installation script as bootstrap action argument.</p>
    """

    Name: Optional[String] = None
    Version: Optional[String] = None
    Args: Optional[StringList] = None
    AdditionalInfo: Optional[StringMap] = None


class ApplicationList(BaseModel):
    __root__: List[Application]


class AuthMode(Enum):
    SSO = 'SSO'
    IAM = 'IAM'


class AutoScalingPolicyState(Enum):
    PENDING = 'PENDING'
    ATTACHING = 'ATTACHING'
    ATTACHED = 'ATTACHED'
    DETACHING = 'DETACHING'
    DETACHED = 'DETACHED'
    FAILED = 'FAILED'


class AutoScalingPolicyStateChangeReasonCode(Enum):
    USER_REQUEST = 'USER_REQUEST'
    PROVISION_FAILURE = 'PROVISION_FAILURE'
    CLEANUP_FAILURE = 'CLEANUP_FAILURE'


class AutoScalingPolicyStateChangeReason(BaseModel):
    """
    The reason for an <a>AutoScalingPolicyStatus</a> change.
    """

    Code: Optional[AutoScalingPolicyStateChangeReasonCode] = None
    Message: Optional[String] = None


class Long(BaseModel):
    __root__: int


class AutoTerminationPolicy(BaseModel):
    """
    An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control cluster termination</a>.
    """

    IdleTimeout: Optional[Long] = None


class Boolean(BaseModel):
    __root__: bool


class Date(BaseModel):
    __root__: datetime


class BlockPublicAccessConfigurationMetadata(BaseModel):
    """
    Properties that describe the Amazon Web Services principal that created the <code>BlockPublicAccessConfiguration</code> using the <code>PutBlockPublicAccessConfiguration</code> action as well as the date and time that the configuration was created. Each time a configuration for block public access is updated, Amazon EMR updates this metadata.
    """

    CreationDateTime: Date
    CreatedByArn: ArnType


class BooleanObject(Boolean):
    pass


class StepId(InstanceFleetId):
    pass


class CancelStepsRequestStatus(Enum):
    SUBMITTED = 'SUBMITTED'
    FAILED = 'FAILED'


class CancelStepsInfo(BaseModel):
    """
    Specification of the status of a CancelSteps request. Available only in Amazon EMR version 4.8.0 and later, excluding version 5.0.0.
    """

    StepId: Optional[StepId] = None
    Status: Optional[CancelStepsRequestStatus] = None
    Reason: Optional[String] = None


class CancelStepsInfoList(BaseModel):
    __root__: List[CancelStepsInfo]


class StepCancellationOption(Enum):
    SEND_INTERRUPT = 'SEND_INTERRUPT'
    TERMINATE_PROCESS = 'TERMINATE_PROCESS'


class ComparisonOperator(Enum):
    GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL'
    GREATER_THAN = 'GREATER_THAN'
    LESS_THAN = 'LESS_THAN'
    LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL'


class Integer(Long):
    pass


class Statistic(Enum):
    SAMPLE_COUNT = 'SAMPLE_COUNT'
    AVERAGE = 'AVERAGE'
    SUM = 'SUM'
    MINIMUM = 'MINIMUM'
    MAXIMUM = 'MAXIMUM'


class NonNegativeDouble(BaseModel):
    __root__: Annotated[float, Field(ge=0.0)]


class Unit(Enum):
    NONE = 'NONE'
    SECONDS = 'SECONDS'
    MICRO_SECONDS = 'MICRO_SECONDS'
    MILLI_SECONDS = 'MILLI_SECONDS'
    BYTES = 'BYTES'
    KILO_BYTES = 'KILO_BYTES'
    MEGA_BYTES = 'MEGA_BYTES'
    GIGA_BYTES = 'GIGA_BYTES'
    TERA_BYTES = 'TERA_BYTES'
    BITS = 'BITS'
    KILO_BITS = 'KILO_BITS'
    MEGA_BITS = 'MEGA_BITS'
    GIGA_BITS = 'GIGA_BITS'
    TERA_BITS = 'TERA_BITS'
    PERCENT = 'PERCENT'
    COUNT = 'COUNT'
    BYTES_PER_SECOND = 'BYTES_PER_SECOND'
    KILO_BYTES_PER_SECOND = 'KILO_BYTES_PER_SECOND'
    MEGA_BYTES_PER_SECOND = 'MEGA_BYTES_PER_SECOND'
    GIGA_BYTES_PER_SECOND = 'GIGA_BYTES_PER_SECOND'
    TERA_BYTES_PER_SECOND = 'TERA_BYTES_PER_SECOND'
    BITS_PER_SECOND = 'BITS_PER_SECOND'
    KILO_BITS_PER_SECOND = 'KILO_BITS_PER_SECOND'
    MEGA_BITS_PER_SECOND = 'MEGA_BITS_PER_SECOND'
    GIGA_BITS_PER_SECOND = 'GIGA_BITS_PER_SECOND'
    TERA_BITS_PER_SECOND = 'TERA_BITS_PER_SECOND'
    COUNT_PER_SECOND = 'COUNT_PER_SECOND'


class ClusterId(InstanceFleetId):
    pass


class InstanceCollectionType(Enum):
    INSTANCE_FLEET = 'INSTANCE_FLEET'
    INSTANCE_GROUP = 'INSTANCE_GROUP'


class XmlString(BaseModel):
    __root__: Annotated[str, Field(max_length=10280, min_length=0)]


class ScaleDownBehavior(Enum):
    TERMINATE_AT_INSTANCE_HOUR = 'TERMINATE_AT_INSTANCE_HOUR'
    TERMINATE_AT_TASK_COMPLETION = 'TERMINATE_AT_TASK_COMPLETION'


class RepoUpgradeOnBoot(Enum):
    SECURITY = 'SECURITY'
    NONE = 'NONE'


class KerberosAttributes(BaseModel):
    """
    Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration. For more information see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-kerberos.html">Use Kerberos Authentication</a> in the <i>Amazon EMR Management Guide</i>.
    """

    Realm: XmlStringMaxLen256
    KdcAdminPassword: XmlStringMaxLen256
    CrossRealmTrustPrincipalPassword: Optional[XmlStringMaxLen256] = None
    ADDomainJoinUser: Optional[XmlStringMaxLen256] = None
    ADDomainJoinPassword: Optional[XmlStringMaxLen256] = None


class OptionalArnType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0)]


class ClusterState(Enum):
    STARTING = 'STARTING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    WAITING = 'WAITING'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'
    TERMINATED_WITH_ERRORS = 'TERMINATED_WITH_ERRORS'


class ClusterStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    INSTANCE_FLEET_TIMEOUT = 'INSTANCE_FLEET_TIMEOUT'
    BOOTSTRAP_FAILURE = 'BOOTSTRAP_FAILURE'
    USER_REQUEST = 'USER_REQUEST'
    STEP_FAILURE = 'STEP_FAILURE'
    ALL_STEPS_COMPLETED = 'ALL_STEPS_COMPLETED'


class ClusterStateChangeReason(BaseModel):
    """
    The reason that the cluster changed to its current state.
    """

    Code: Optional[ClusterStateChangeReasonCode] = None
    Message: Optional[String] = None


class ClusterStateList(BaseModel):
    __root__: List[ClusterState]


class ClusterTimeline(BaseModel):
    """
    Represents the timeline of the cluster's lifecycle.
    """

    CreationDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None


class Command(BaseModel):
    """
    An entity describing an executable that runs on a cluster.
    """

    Name: Optional[String] = None
    ScriptPath: Optional[String] = None
    Args: Optional[StringList] = None


class CommandList(BaseModel):
    __root__: List[Command]


class ComputeLimitsUnitType(Enum):
    InstanceFleetUnits = 'InstanceFleetUnits'
    Instances = 'Instances'
    VCPU = 'VCPU'


class ComputeLimits(BaseModel):
    """
    The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
    """

    UnitType: ComputeLimitsUnitType
    MinimumCapacityUnits: Integer
    MaximumCapacityUnits: Integer
    MaximumOnDemandCapacityUnits: Optional[Integer] = None
    MaximumCoreCapacityUnits: Optional[Integer] = None


class SubnetIdList(StringList):
    pass


class IdentityType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'


class XmlStringList(BaseModel):
    __root__: List[XmlString]


class MaxResultsNumber(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class InstanceId(InstanceFleetId):
    pass


class EC2InstanceIdsList(BaseModel):
    __root__: List[InstanceId]


class EC2InstanceIdsToTerminateList(EC2InstanceIdsList):
    pass


class VolumeSpecification(BaseModel):
    """
    EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster.
    """

    VolumeType: String
    Iops: Optional[Integer] = None
    SizeInGB: Integer


class EbsBlockDevice(BaseModel):
    """
    Configuration of requested EBS block device associated with the instance group.
    """

    VolumeSpecification: Optional[VolumeSpecification] = None
    Device: Optional[String] = None


class EbsBlockDeviceConfig(BaseModel):
    """
    Configuration of requested EBS block device associated with the instance group with count of volumes that will be associated to every instance.
    """

    VolumeSpecification: VolumeSpecification
    VolumesPerInstance: Optional[Integer] = None


class EbsBlockDeviceConfigList(BaseModel):
    __root__: List[EbsBlockDeviceConfig]


class EbsBlockDeviceList(BaseModel):
    __root__: List[EbsBlockDevice]


class EbsConfiguration(BaseModel):
    """
    The Amazon EBS configuration of a cluster instance.
    """

    EbsBlockDeviceConfigs: Optional[EbsBlockDeviceConfigList] = None
    EbsOptimized: Optional[BooleanObject] = None


class EbsVolume(BaseModel):
    """
    EBS block device that's attached to an EC2 instance.
    """

    Device: Optional[String] = None
    VolumeId: Optional[String] = None


class EbsVolumeList(BaseModel):
    __root__: List[EbsVolume]


class XmlStringMaxLen256List(InstanceGroupIdsList):
    pass


class ExecutionEngineType(Enum):
    EMR = 'EMR'


class ExecutionEngineConfig(BaseModel):
    """
    Specifies the execution engine (cluster) to run the notebook and perform the notebook execution, for example, an EMR cluster.
    """

    Id: XmlStringMaxLen256
    Type: Optional[ExecutionEngineType] = None
    MasterInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None


class FailureDetails(BaseModel):
    """
    The details of the step failure. The service attempts to detect the root cause for many common failures.
    """

    Reason: Optional[String] = None
    Message: Optional[String] = None
    LogFile: Optional[String] = None


class ManagedScalingPolicy(BaseModel):
    """
    Managed scaling policy for an Amazon EMR cluster. The policy specifies the limits for resources that can be added or terminated from a cluster. The policy only applies to the core and task nodes. The master node cannot be scaled after initial configuration.
    """

    ComputeLimits: Optional[ComputeLimits] = None


class SessionMappingDetail(BaseModel):
    """
    Details for an Amazon EMR Studio session mapping including creation time, user or group ID, Studio ID, and so on.
    """

    StudioId: Optional[XmlStringMaxLen256] = None
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: Optional[IdentityType] = None
    SessionPolicyArn: Optional[XmlStringMaxLen256] = None
    CreationTime: Optional[Date] = None
    LastModifiedTime: Optional[Date] = None


class HadoopStepConfig(BaseModel):
    """
    A cluster step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
    """

    Jar: Optional[String] = None
    Properties: Optional[StringMap] = None
    MainClass: Optional[String] = None
    Args: Optional[StringList] = None


class MarketType(Enum):
    ON_DEMAND = 'ON_DEMAND'
    SPOT = 'SPOT'


class InstanceType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class InstanceFleetType(Enum):
    MASTER = 'MASTER'
    CORE = 'CORE'
    TASK = 'TASK'


class WholeNumber(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class InstanceFleetModifyConfig(BaseModel):
    """
    <p>Configuration parameters for an instance fleet modification request.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    InstanceFleetId: InstanceFleetId
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None


class InstanceFleetState(Enum):
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    RESIZING = 'RESIZING'
    SUSPENDED = 'SUSPENDED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'


class InstanceFleetStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    CLUSTER_TERMINATED = 'CLUSTER_TERMINATED'


class InstanceFleetStateChangeReason(BaseModel):
    """
    <p>Provides status change reason details for the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    Code: Optional[InstanceFleetStateChangeReasonCode] = None
    Message: Optional[String] = None


class InstanceFleetTimeline(ClusterTimeline):
    """
    <p>Provides historical timestamps for the instance fleet, including the time of creation, the time it became ready to run jobs, and the time of termination.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    pass


class InstanceGroupId(InstanceFleetId):
    pass


class InstanceGroupState(Enum):
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    RECONFIGURING = 'RECONFIGURING'
    RESIZING = 'RESIZING'
    SUSPENDED = 'SUSPENDED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'
    ARRESTED = 'ARRESTED'
    SHUTTING_DOWN = 'SHUTTING_DOWN'
    ENDED = 'ENDED'


class InstanceGroupDetail(BaseModel):
    """
    Detailed information about an instance group.
    """

    InstanceGroupId: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    Market: MarketType
    InstanceRole: InstanceFleetType
    BidPrice: Optional[XmlStringMaxLen256] = None
    InstanceType: InstanceType
    InstanceRequestCount: Integer
    InstanceRunningCount: Integer
    State: InstanceGroupState
    LastStateChangeReason: Optional[XmlString] = None
    CreationDateTime: Date
    StartDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None


class InstanceGroupDetailList(BaseModel):
    __root__: List[InstanceGroupDetail]


class InstanceGroupStateChangeReason(InstanceFleetStateChangeReason):
    """
    The status change reason details for the instance group.
    """

    pass


class InstanceGroupTimeline(ClusterTimeline):
    """
    The timeline of the instance group lifecycle.
    """

    pass


class InstanceGroupTypeList(BaseModel):
    __root__: List[InstanceFleetType]


class InstanceResizePolicy(BaseModel):
    """
    Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group.
    """

    InstancesToTerminate: Optional[EC2InstanceIdsList] = None
    InstancesToProtect: Optional[EC2InstanceIdsList] = None
    InstanceTerminationTimeout: Optional[Integer] = None


class InstanceState(Enum):
    AWAITING_FULFILLMENT = 'AWAITING_FULFILLMENT'
    PROVISIONING = 'PROVISIONING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    TERMINATED = 'TERMINATED'


class InstanceStateChangeReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INSTANCE_FAILURE = 'INSTANCE_FAILURE'
    BOOTSTRAP_FAILURE = 'BOOTSTRAP_FAILURE'
    CLUSTER_TERMINATED = 'CLUSTER_TERMINATED'


class InstanceStateChangeReason(BaseModel):
    """
    The details of the status change reason for the instance.
    """

    Code: Optional[InstanceStateChangeReasonCode] = None
    Message: Optional[String] = None


class InstanceStateList(BaseModel):
    __root__: List[InstanceState]


class InstanceTimeline(ClusterTimeline):
    """
    The timeline of the instance lifecycle.
    """

    pass


class SupportedProductsList(InstanceGroupIdsList):
    pass


class JobFlowExecutionState(Enum):
    """
    The type of instance.
    """

    STARTING = 'STARTING'
    BOOTSTRAPPING = 'BOOTSTRAPPING'
    RUNNING = 'RUNNING'
    WAITING = 'WAITING'
    SHUTTING_DOWN = 'SHUTTING_DOWN'
    TERMINATED = 'TERMINATED'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'


class PlacementType(BaseModel):
    """
    The Amazon EC2 Availability Zone configuration of the cluster (job flow).
    """

    AvailabilityZone: Optional[XmlString] = None
    AvailabilityZones: Optional[XmlStringMaxLen256List] = None


class SecurityGroupsList(InstanceGroupIdsList):
    pass


class KeyValue(BaseModel):
    """
    A key-value pair.
    """

    Key: Optional[XmlString] = None
    Value: Optional[XmlString] = None


class Marker(InstanceFleetId):
    pass


class NotebookExecutionStatus(Enum):
    START_PENDING = 'START_PENDING'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    FINISHING = 'FINISHING'
    FINISHED = 'FINISHED'
    FAILING = 'FAILING'
    FAILED = 'FAILED'
    STOP_PENDING = 'STOP_PENDING'
    STOPPING = 'STOPPING'
    STOPPED = 'STOPPED'


class ReleaseLabelFilter(BaseModel):
    """
    The release label filters by application or version prefix.
    """

    Prefix: Optional[String] = None
    Application: Optional[String] = None


class MetricDimension(BaseModel):
    """
    A CloudWatch dimension, which is specified using a <code>Key</code> (known as a <code>Name</code> in CloudWatch), <code>Value</code> pair. By default, Amazon EMR uses one dimension whose <code>Key</code> is <code>JobFlowID</code> and <code>Value</code> is a variable representing the cluster ID, which is <code>${emr.clusterId}</code>. This enables the rule to bootstrap when the cluster ID becomes available.
    """

    Key: Optional[String] = None
    Value: Optional[String] = None


class SupportedProductConfig(BaseModel):
    """
    The list of supported product configurations that allow user-supplied arguments. EMR accepts these arguments and forwards them to the corresponding installation script as bootstrap action arguments.
    """

    Name: Optional[XmlStringMaxLen256] = None
    Args: Optional[XmlStringList] = None


class NewSupportedProductsList(BaseModel):
    __root__: List[SupportedProductConfig]


class NotebookExecutionSummary(BaseModel):
    """
    Details for a notebook execution. The details include information such as the unique ID and status of the notebook execution.
    """

    NotebookExecutionId: Optional[XmlStringMaxLen256] = None
    EditorId: Optional[XmlStringMaxLen256] = None
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    Status: Optional[NotebookExecutionStatus] = None
    StartTime: Optional[Date] = None
    EndTime: Optional[Date] = None


class OnDemandCapacityReservationUsageStrategy(Enum):
    use_capacity_reservations_first = 'use-capacity-reservations-first'


class OnDemandCapacityReservationPreference(Enum):
    open = 'open'
    none = 'none'


class OnDemandCapacityReservationOptions(BaseModel):
    """
    Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.
    """

    UsageStrategy: Optional[OnDemandCapacityReservationUsageStrategy] = None
    CapacityReservationPreference: Optional[
        OnDemandCapacityReservationPreference
    ] = None
    CapacityReservationResourceGroupArn: Optional[XmlStringMaxLen256] = None


class OnDemandProvisioningAllocationStrategy(Enum):
    lowest_price = 'lowest-price'


class PlacementGroupStrategy(Enum):
    SPREAD = 'SPREAD'
    PARTITION = 'PARTITION'
    CLUSTER = 'CLUSTER'
    NONE = 'NONE'


class PlacementGroupConfig(BaseModel):
    """
    <p>Placement group configuration for an Amazon EMR cluster. The configuration specifies the placement strategy that can be applied to instance roles during cluster creation.</p> <p>To use this configuration, consider attaching managed policy AmazonElasticMapReducePlacementGroupPolicy to the EMR role.</p>
    """

    InstanceRole: InstanceFleetType
    PlacementStrategy: Optional[PlacementGroupStrategy] = None


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=-1.0, le=65535.0)]


class PortRange(BaseModel):
    """
    A list of port ranges that are permitted to allow inbound traffic from all public IP addresses. To specify a single port, use the same value for <code>MinRange</code> and <code>MaxRange</code>.
    """

    MinRange: Port
    MaxRange: Optional[Port] = None


class SimpleScalingPolicyConfiguration(BaseModel):
    """
    An automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period, and the number of EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied.
    """

    AdjustmentType: Optional[AdjustmentType] = None
    ScalingAdjustment: Integer
    CoolDown: Optional[Integer] = None


class ScalingAction(BaseModel):
    """
    The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.
    """

    Market: Optional[MarketType] = None
    SimpleScalingPolicyConfiguration: SimpleScalingPolicyConfiguration


class SecurityConfigurationSummary(BaseModel):
    """
    The creation date and time, and name, of a security configuration.
    """

    Name: Optional[XmlString] = None
    CreationDateTime: Optional[Date] = None


class SessionMappingSummary(BaseModel):
    """
    Details for an Amazon EMR Studio session mapping. The details do not include the time the session mapping was last modified.
    """

    StudioId: Optional[XmlStringMaxLen256] = None
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: Optional[IdentityType] = None
    SessionPolicyArn: Optional[XmlStringMaxLen256] = None
    CreationTime: Optional[Date] = None


class SimplifiedApplication(BaseModel):
    """
    The returned release label application names or versions.
    """

    Name: Optional[String] = None
    Version: Optional[String] = None


class SpotProvisioningAllocationStrategy(Enum):
    capacity_optimized = 'capacity-optimized'


class SpotProvisioningTimeoutAction(Enum):
    SWITCH_TO_ON_DEMAND = 'SWITCH_TO_ON_DEMAND'
    TERMINATE_CLUSTER = 'TERMINATE_CLUSTER'


class StepExecutionState(Enum):
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    CONTINUE = 'CONTINUE'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'
    INTERRUPTED = 'INTERRUPTED'


class StepState(Enum):
    PENDING = 'PENDING'
    CANCEL_PENDING = 'CANCEL_PENDING'
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'
    INTERRUPTED = 'INTERRUPTED'


class StepStateChangeReasonCode(Enum):
    NONE = 'NONE'


class StepStateChangeReason(BaseModel):
    """
    The details of the step state change reason.
    """

    Code: Optional[StepStateChangeReasonCode] = None
    Message: Optional[String] = None


class StepTimeline(BaseModel):
    """
    The timeline of the cluster step lifecycle.
    """

    CreationDateTime: Optional[Date] = None
    StartDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None


class StudioSummary(BaseModel):
    """
    Details for an Amazon EMR Studio, including ID, Name, VPC, and Description. The details do not include subnets, IAM roles, security groups, or tags associated with the Studio.
    """

    StudioId: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    VpcId: Optional[XmlStringMaxLen256] = None
    Description: Optional[XmlStringMaxLen256] = None
    Url: Optional[XmlStringMaxLen256] = None
    AuthMode: Optional[AuthMode] = None
    CreationTime: Optional[Date] = None


class Tag(MetricDimension):
    """
    A key-value pair containing user-defined metadata that you can associate with an Amazon EMR resource. Tags make it easier to associate clusters in various ways, such as grouping clusters to track your Amazon EMR resource allocation costs. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-tags.html">Tag Clusters</a>.
    """

    pass


class AddInstanceFleetOutput(BaseModel):
    ClusterId: Optional[XmlStringMaxLen256] = None
    InstanceFleetId: Optional[InstanceFleetId] = None
    ClusterArn: Optional[ArnType] = None


class AddInstanceGroupsOutput(BaseModel):
    """
    Output from an AddInstanceGroups call.
    """

    JobFlowId: Optional[XmlStringMaxLen256] = None
    InstanceGroupIds: Optional[InstanceGroupIdsList] = None
    ClusterArn: Optional[ArnType] = None


class AddJobFlowStepsOutput(BaseModel):
    """
    The output for the <a>AddJobFlowSteps</a> operation.
    """

    StepIds: Optional[StepIdsList] = None


class CancelStepsOutput(BaseModel):
    """
    The output for the <a>CancelSteps</a> operation.
    """

    CancelStepsInfoList: Optional[CancelStepsInfoList] = None


class CancelStepsInput(BaseModel):
    """
    The input argument to the <a>CancelSteps</a> operation.
    """

    ClusterId: XmlStringMaxLen256
    StepIds: StepIdsList
    StepCancellationOption: Optional[StepCancellationOption] = None


class CreateSecurityConfigurationOutput(BaseModel):
    Name: XmlString
    CreationDateTime: Date


class CreateSecurityConfigurationInput(BaseModel):
    Name: XmlString
    SecurityConfiguration: String


class CreateStudioOutput(BaseModel):
    StudioId: Optional[XmlStringMaxLen256] = None
    Url: Optional[XmlString] = None


class CreateStudioSessionMappingInput(BaseModel):
    StudioId: XmlStringMaxLen256
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: IdentityType
    SessionPolicyArn: XmlStringMaxLen256


class DeleteSecurityConfigurationInput(BaseModel):
    Name: XmlString


class DeleteStudioInput(BaseModel):
    StudioId: XmlStringMaxLen256


class DeleteStudioSessionMappingInput(BaseModel):
    StudioId: XmlStringMaxLen256
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: IdentityType


class DescribeClusterInput(BaseModel):
    """
    This input determines which cluster to describe.
    """

    ClusterId: ClusterId


class DescribeNotebookExecutionInput(BaseModel):
    NotebookExecutionId: XmlStringMaxLen256


class DescribeReleaseLabelInput(BaseModel):
    ReleaseLabel: Optional[String] = None
    NextToken: Optional[String] = None
    MaxResults: Optional[MaxResultsNumber] = None


class DescribeSecurityConfigurationOutput(BaseModel):
    Name: Optional[XmlString] = None
    SecurityConfiguration: Optional[String] = None
    CreationDateTime: Optional[Date] = None


class DescribeSecurityConfigurationInput(BaseModel):
    Name: XmlString


class DescribeStepInput(BaseModel):
    """
    This input determines which step to describe.
    """

    ClusterId: ClusterId
    StepId: StepId


class DescribeStudioInput(BaseModel):
    StudioId: XmlStringMaxLen256


class GetAutoTerminationPolicyOutput(BaseModel):
    AutoTerminationPolicy: Optional[AutoTerminationPolicy] = None


class GetAutoTerminationPolicyInput(BaseModel):
    ClusterId: ClusterId


class GetManagedScalingPolicyOutput(BaseModel):
    ManagedScalingPolicy: Optional[ManagedScalingPolicy] = None


class GetManagedScalingPolicyInput(BaseModel):
    ClusterId: ClusterId


class GetStudioSessionMappingOutput(BaseModel):
    SessionMapping: Optional[SessionMappingDetail] = None


class GetStudioSessionMappingInput(BaseModel):
    StudioId: XmlStringMaxLen256
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: IdentityType


class ListBootstrapActionsOutput(BaseModel):
    """
    This output contains the bootstrap actions detail.
    """

    BootstrapActions: Optional[CommandList] = None
    Marker: Optional[Marker] = None


class ListBootstrapActionsInput(BaseModel):
    """
    This input determines which bootstrap actions to retrieve.
    """

    ClusterId: ClusterId
    Marker: Optional[Marker] = None


class ListClustersInput(BaseModel):
    """
    This input determines how the ListClusters action filters the list of clusters that it returns.
    """

    CreatedAfter: Optional[Date] = None
    CreatedBefore: Optional[Date] = None
    ClusterStates: Optional[ClusterStateList] = None
    Marker: Optional[Marker] = None


class ListInstanceFleetsInput(BaseModel):
    ClusterId: ClusterId
    Marker: Optional[Marker] = None


class ListInstanceGroupsInput(BaseModel):
    """
    This input determines which instance groups to retrieve.
    """

    ClusterId: ClusterId
    Marker: Optional[Marker] = None


class ListInstancesInput(BaseModel):
    """
    This input determines which instances to list.
    """

    ClusterId: ClusterId
    InstanceGroupId: Optional[InstanceGroupId] = None
    InstanceGroupTypes: Optional[InstanceGroupTypeList] = None
    InstanceFleetId: Optional[InstanceFleetId] = None
    InstanceFleetType: Optional[InstanceFleetType] = None
    InstanceStates: Optional[InstanceStateList] = None
    Marker: Optional[Marker] = None


class ListNotebookExecutionsInput(BaseModel):
    EditorId: Optional[XmlStringMaxLen256] = None
    Status: Optional[NotebookExecutionStatus] = None
    From: Optional[Date] = None
    To: Optional[Date] = None
    Marker: Optional[Marker] = None


class ListReleaseLabelsOutput(BaseModel):
    ReleaseLabels: Optional[StringList] = None
    NextToken: Optional[String] = None


class ListReleaseLabelsInput(BaseModel):
    Filters: Optional[ReleaseLabelFilter] = None
    NextToken: Optional[String] = None
    MaxResults: Optional[MaxResultsNumber] = None


class ListSecurityConfigurationsInput(BaseModel):
    Marker: Optional[Marker] = None


class ListStudioSessionMappingsInput(BaseModel):
    StudioId: Optional[XmlStringMaxLen256] = None
    IdentityType: Optional[IdentityType] = None
    Marker: Optional[Marker] = None


class ListStudiosInput(BaseModel):
    Marker: Optional[Marker] = None


class ModifyClusterOutput(BaseModel):
    StepConcurrencyLevel: Optional[Integer] = None


class ModifyClusterInput(BaseModel):
    ClusterId: String
    StepConcurrencyLevel: Optional[Integer] = None


class ModifyInstanceFleetInput(BaseModel):
    ClusterId: ClusterId
    InstanceFleet: InstanceFleetModifyConfig


class PutAutoTerminationPolicyInput(BaseModel):
    ClusterId: ClusterId
    AutoTerminationPolicy: Optional[AutoTerminationPolicy] = None


class PutManagedScalingPolicyInput(BaseModel):
    ClusterId: ClusterId
    ManagedScalingPolicy: ManagedScalingPolicy


class RemoveAutoScalingPolicyInput(BaseModel):
    ClusterId: ClusterId
    InstanceGroupId: InstanceGroupId


class RemoveAutoTerminationPolicyInput(BaseModel):
    ClusterId: ClusterId


class RemoveManagedScalingPolicyInput(BaseModel):
    ClusterId: ClusterId


class RemoveTagsInput(BaseModel):
    """
    This input identifies an Amazon EMR resource and a list of tags to remove.
    """

    ResourceId: ResourceId
    TagKeys: StringList


class RunJobFlowOutput(BaseModel):
    """
    The result of the <a>RunJobFlow</a> operation.
    """

    JobFlowId: Optional[XmlStringMaxLen256] = None
    ClusterArn: Optional[ArnType] = None


class SetTerminationProtectionInput(BaseModel):
    """
    The input argument to the <a>TerminationProtection</a> operation.
    """

    JobFlowIds: XmlStringList
    TerminationProtected: Boolean


class SetVisibleToAllUsersInput(BaseModel):
    """
    The input to the SetVisibleToAllUsers action.
    """

    JobFlowIds: XmlStringList
    VisibleToAllUsers: Boolean


class StartNotebookExecutionOutput(BaseModel):
    NotebookExecutionId: Optional[XmlStringMaxLen256] = None


class StopNotebookExecutionInput(BaseModel):
    NotebookExecutionId: XmlStringMaxLen256


class TerminateJobFlowsInput(BaseModel):
    """
    Input to the <a>TerminateJobFlows</a> operation.
    """

    JobFlowIds: XmlStringList


class UpdateStudioInput(BaseModel):
    StudioId: XmlStringMaxLen256
    Name: Optional[XmlStringMaxLen256] = None
    Description: Optional[XmlStringMaxLen256] = None
    SubnetIds: Optional[SubnetIdList] = None
    DefaultS3Location: Optional[XmlString] = None


class UpdateStudioSessionMappingInput(BaseModel):
    StudioId: XmlStringMaxLen256
    IdentityId: Optional[XmlStringMaxLen256] = None
    IdentityName: Optional[XmlStringMaxLen256] = None
    IdentityType: IdentityType
    SessionPolicyArn: XmlStringMaxLen256


class TagList(BaseModel):
    __root__: List[Tag]


class ScalingConstraints(BaseModel):
    """
    The upper and lower EC2 instance limits for an automatic scaling policy. Automatic scaling activities triggered by automatic scaling rules will not cause an instance group to grow above or below these limits.
    """

    MinCapacity: Integer
    MaxCapacity: Integer


class AutoScalingPolicyStatus(BaseModel):
    """
    The status of an automatic scaling policy.
    """

    State: Optional[AutoScalingPolicyState] = None
    StateChangeReason: Optional[AutoScalingPolicyStateChangeReason] = None


class PortRanges(BaseModel):
    __root__: List[PortRange]


class BlockPublicAccessConfiguration(BaseModel):
    """
    A configuration for Amazon EMR block public access. When <code>BlockPublicSecurityGroupRules</code> is set to <code>true</code>, Amazon EMR prevents cluster creation if one of the cluster's security groups has a rule that allows inbound traffic from 0.0.0.0/0 or ::/0 on a port, unless the port is specified as an exception using <code>PermittedPublicSecurityGroupRuleRanges</code>.
    """

    BlockPublicSecurityGroupRules: Boolean
    PermittedPublicSecurityGroupRuleRanges: Optional[PortRanges] = None


class ScriptBootstrapActionConfig(BaseModel):
    """
    Configuration of the script to run during a bootstrap action.
    """

    Path: XmlString
    Args: Optional[XmlStringList] = None


class BootstrapActionConfig(BaseModel):
    """
    Configuration of a bootstrap action.
    """

    Name: XmlStringMaxLen256
    ScriptBootstrapAction: ScriptBootstrapActionConfig


class BootstrapActionConfigList(BaseModel):
    __root__: List[BootstrapActionConfig]


class BootstrapActionDetail(BaseModel):
    """
    Reports the configuration of a bootstrap action in a cluster (job flow).
    """

    BootstrapActionConfig: Optional[BootstrapActionConfig] = None


class BootstrapActionDetailList(BaseModel):
    __root__: List[BootstrapActionDetail]


class MetricDimensionList(BaseModel):
    __root__: List[MetricDimension]


class CloudWatchAlarmDefinition(BaseModel):
    """
    The definition of a CloudWatch metric alarm, which determines when an automatic scaling activity is triggered. When the defined alarm conditions are satisfied, scaling activity begins.
    """

    ComparisonOperator: ComparisonOperator
    EvaluationPeriods: Optional[Integer] = None
    MetricName: String
    Namespace: Optional[String] = None
    Period: Integer
    Statistic: Optional[Statistic] = None
    Threshold: NonNegativeDouble
    Unit: Optional[Unit] = None
    Dimensions: Optional[MetricDimensionList] = None


class ClusterStatus(BaseModel):
    """
    The detailed status of the cluster.
    """

    State: Optional[ClusterState] = None
    StateChangeReason: Optional[ClusterStateChangeReason] = None
    Timeline: Optional[ClusterTimeline] = None


class Ec2InstanceAttributes(BaseModel):
    """
    Provides information about the EC2 instances in a cluster grouped by category. For example, key name, subnet ID, IAM instance profile, and so on.
    """

    Ec2KeyName: Optional[String] = None
    Ec2SubnetId: Optional[String] = None
    RequestedEc2SubnetIds: Optional[XmlStringMaxLen256List] = None
    Ec2AvailabilityZone: Optional[String] = None
    RequestedEc2AvailabilityZones: Optional[XmlStringMaxLen256List] = None
    IamInstanceProfile: Optional[String] = None
    EmrManagedMasterSecurityGroup: Optional[String] = None
    EmrManagedSlaveSecurityGroup: Optional[String] = None
    ServiceAccessSecurityGroup: Optional[String] = None
    AdditionalMasterSecurityGroups: Optional[StringList] = None
    AdditionalSlaveSecurityGroups: Optional[StringList] = None


class PlacementGroupConfigList(BaseModel):
    __root__: List[PlacementGroupConfig]


class ClusterSummary(BaseModel):
    """
    The summary description of the cluster.
    """

    Id: Optional[ClusterId] = None
    Name: Optional[String] = None
    Status: Optional[ClusterStatus] = None
    NormalizedInstanceHours: Optional[Integer] = None
    ClusterArn: Optional[ArnType] = None
    OutpostArn: Optional[OptionalArnType] = None


class ClusterSummaryList(BaseModel):
    __root__: List[ClusterSummary]


class JobFlowExecutionStateList(BaseModel):
    __root__: List[JobFlowExecutionState]


class NotebookExecution(BaseModel):
    """
    A notebook execution. An execution is a specific instance that an EMR Notebook is run using the <code>StartNotebookExecution</code> action.
    """

    NotebookExecutionId: Optional[XmlStringMaxLen256] = None
    EditorId: Optional[XmlStringMaxLen256] = None
    ExecutionEngine: Optional[ExecutionEngineConfig] = None
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    NotebookParams: Optional[XmlString] = None
    Status: Optional[NotebookExecutionStatus] = None
    StartTime: Optional[Date] = None
    EndTime: Optional[Date] = None
    Arn: Optional[XmlStringMaxLen256] = None
    OutputNotebookURI: Optional[XmlString] = None
    LastStateChangeReason: Optional[XmlString] = None
    NotebookInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    Tags: Optional[TagList] = None


class SimplifiedApplicationList(BaseModel):
    __root__: List[SimplifiedApplication]


class Studio(BaseModel):
    """
    Details for an Amazon EMR Studio including ID, creation time, name, and so on.
    """

    StudioId: Optional[XmlStringMaxLen256] = None
    StudioArn: Optional[XmlStringMaxLen256] = None
    Name: Optional[XmlStringMaxLen256] = None
    Description: Optional[XmlStringMaxLen256] = None
    AuthMode: Optional[AuthMode] = None
    VpcId: Optional[XmlStringMaxLen256] = None
    SubnetIds: Optional[SubnetIdList] = None
    ServiceRole: Optional[XmlString] = None
    UserRole: Optional[XmlString] = None
    WorkspaceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    EngineSecurityGroupId: Optional[XmlStringMaxLen256] = None
    Url: Optional[XmlString] = None
    CreationTime: Optional[Date] = None
    DefaultS3Location: Optional[XmlString] = None
    IdpAuthUrl: Optional[XmlString] = None
    IdpRelayStateParameterName: Optional[XmlStringMaxLen256] = None
    Tags: Optional[TagList] = None


class KeyValueList(BaseModel):
    __root__: List[KeyValue]


class HadoopJarStepConfig(BaseModel):
    """
    A job flow step consisting of a JAR file whose main function will be executed. The main function submits a job for Hadoop to execute and waits for the job to finish or fail.
    """

    Properties: Optional[KeyValueList] = None
    Jar: XmlString
    MainClass: Optional[XmlString] = None
    Args: Optional[XmlStringList] = None


class InstanceStatus(BaseModel):
    """
    The instance status details.
    """

    State: Optional[InstanceState] = None
    StateChangeReason: Optional[InstanceStateChangeReason] = None
    Timeline: Optional[InstanceTimeline] = None


class Instance(BaseModel):
    """
    Represents an EC2 instance provisioned as part of cluster.
    """

    Id: Optional[InstanceId] = None
    Ec2InstanceId: Optional[InstanceId] = None
    PublicDnsName: Optional[String] = None
    PublicIpAddress: Optional[String] = None
    PrivateDnsName: Optional[String] = None
    PrivateIpAddress: Optional[String] = None
    Status: Optional[InstanceStatus] = None
    InstanceGroupId: Optional[String] = None
    InstanceFleetId: Optional[InstanceFleetId] = None
    Market: Optional[MarketType] = None
    InstanceType: Optional[InstanceType] = None
    EbsVolumes: Optional[EbsVolumeList] = None


class InstanceFleetStatus(BaseModel):
    """
    <p>The status of the instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    State: Optional[InstanceFleetState] = None
    StateChangeReason: Optional[InstanceFleetStateChangeReason] = None
    Timeline: Optional[InstanceFleetTimeline] = None


class SpotProvisioningSpecification(BaseModel):
    """
    <p>The launch specification for Spot Instances in the instance fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. Spot Instance allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note>
    """

    TimeoutDurationMinutes: WholeNumber
    TimeoutAction: SpotProvisioningTimeoutAction
    BlockDurationMinutes: Optional[WholeNumber] = None
    AllocationStrategy: Optional[SpotProvisioningAllocationStrategy] = None


class OnDemandProvisioningSpecification(BaseModel):
    """
    <p> The launch specification for On-Demand Instances in the instance fleet, which determines the allocation strategy. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand Instances allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note>
    """

    AllocationStrategy: OnDemandProvisioningAllocationStrategy
    CapacityReservationOptions: Optional[OnDemandCapacityReservationOptions] = None


class InstanceGroupStatus(BaseModel):
    """
    The details of the instance group status.
    """

    State: Optional[InstanceGroupState] = None
    StateChangeReason: Optional[InstanceGroupStateChangeReason] = None
    Timeline: Optional[InstanceGroupTimeline] = None


class ShrinkPolicy(BaseModel):
    """
    Policy for customizing shrink operations. Allows configuration of decommissioning timeout and targeted instance shrinking.
    """

    DecommissionTimeout: Optional[Integer] = None
    InstanceResizePolicy: Optional[InstanceResizePolicy] = None


class InstanceList(BaseModel):
    __root__: List[Instance]


class JobFlowExecutionStatusDetail(BaseModel):
    """
    Describes the status of the cluster (job flow).
    """

    State: JobFlowExecutionState
    CreationDateTime: Date
    StartDateTime: Optional[Date] = None
    ReadyDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    LastStateChangeReason: Optional[XmlString] = None


class JobFlowInstancesDetail(BaseModel):
    """
    Specify the type of Amazon EC2 instances that the cluster (job flow) runs on.
    """

    MasterInstanceType: InstanceType
    MasterPublicDnsName: Optional[XmlString] = None
    MasterInstanceId: Optional[XmlString] = None
    SlaveInstanceType: InstanceType
    InstanceCount: Integer
    InstanceGroups: Optional[InstanceGroupDetailList] = None
    NormalizedInstanceHours: Optional[Integer] = None
    Ec2KeyName: Optional[XmlStringMaxLen256] = None
    Ec2SubnetId: Optional[XmlStringMaxLen256] = None
    Placement: Optional[PlacementType] = None
    KeepJobFlowAliveWhenNoSteps: Optional[Boolean] = None
    TerminationProtected: Optional[Boolean] = None
    HadoopVersion: Optional[XmlStringMaxLen256] = None


class NotebookExecutionSummaryList(BaseModel):
    __root__: List[NotebookExecutionSummary]


class SecurityConfigurationList(BaseModel):
    __root__: List[SecurityConfigurationSummary]


class StepStateList(BaseModel):
    __root__: List[StepState]


class SessionMappingSummaryList(BaseModel):
    __root__: List[SessionMappingSummary]


class StudioSummaryList(BaseModel):
    __root__: List[StudioSummary]


class ScalingTrigger(BaseModel):
    """
    The conditions that trigger an automatic scaling activity.
    """

    CloudWatchAlarmDefinition: CloudWatchAlarmDefinition


class ScalingRule(BaseModel):
    """
    A scale-in or scale-out rule that defines scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules.
    """

    Name: String
    Description: Optional[String] = None
    Action: ScalingAction
    Trigger: ScalingTrigger


class StepStatus(BaseModel):
    """
    The execution status details of the cluster step.
    """

    State: Optional[StepState] = None
    StateChangeReason: Optional[StepStateChangeReason] = None
    FailureDetails: Optional[FailureDetails] = None
    Timeline: Optional[StepTimeline] = None


class StepConfig(BaseModel):
    """
    Specification for a cluster (job flow) step.
    """

    Name: XmlStringMaxLen256
    ActionOnFailure: Optional[ActionOnFailure] = None
    HadoopJarStep: HadoopJarStepConfig


class StepExecutionStatusDetail(BaseModel):
    """
    The execution state of a step.
    """

    State: StepExecutionState
    CreationDateTime: Date
    StartDateTime: Optional[Date] = None
    EndDateTime: Optional[Date] = None
    LastStateChangeReason: Optional[XmlString] = None


class StepDetail(BaseModel):
    """
    Combines the execution state and configuration of a step.
    """

    StepConfig: StepConfig
    ExecutionStatusDetail: StepExecutionStatusDetail


class StepSummary(BaseModel):
    """
    The summary of the cluster step.
    """

    Id: Optional[StepId] = None
    Name: Optional[String] = None
    Config_: Annotated[Optional[HadoopStepConfig], Field(alias='Config')] = None
    ActionOnFailure: Optional[ActionOnFailure] = None
    Status: Optional[StepStatus] = None


class AddTagsInput(BaseModel):
    """
    This input identifies an Amazon EMR resource and a list of tags to attach.
    """

    ResourceId: ResourceId
    Tags: TagList


class CreateStudioInput(BaseModel):
    Name: XmlStringMaxLen256
    Description: Optional[XmlStringMaxLen256] = None
    AuthMode: AuthMode
    VpcId: XmlStringMaxLen256
    SubnetIds: SubnetIdList
    ServiceRole: XmlString
    UserRole: Optional[XmlString] = None
    WorkspaceSecurityGroupId: XmlStringMaxLen256
    EngineSecurityGroupId: XmlStringMaxLen256
    DefaultS3Location: XmlString
    IdpAuthUrl: Optional[XmlString] = None
    IdpRelayStateParameterName: Optional[XmlStringMaxLen256] = None
    Tags: Optional[TagList] = None


class DescribeJobFlowsInput(BaseModel):
    """
    The input for the <a>DescribeJobFlows</a> operation.
    """

    CreatedAfter: Optional[Date] = None
    CreatedBefore: Optional[Date] = None
    JobFlowIds: Optional[XmlStringList] = None
    JobFlowStates: Optional[JobFlowExecutionStateList] = None


class DescribeNotebookExecutionOutput(BaseModel):
    NotebookExecution: Optional[NotebookExecution] = None


class DescribeReleaseLabelOutput(BaseModel):
    ReleaseLabel: Optional[String] = None
    Applications: Optional[SimplifiedApplicationList] = None
    NextToken: Optional[String] = None


class DescribeStudioOutput(BaseModel):
    Studio: Optional[Studio] = None


class GetBlockPublicAccessConfigurationOutput(BaseModel):
    BlockPublicAccessConfiguration: BlockPublicAccessConfiguration
    BlockPublicAccessConfigurationMetadata: BlockPublicAccessConfigurationMetadata


class ListClustersOutput(BaseModel):
    """
    This contains a ClusterSummaryList with the cluster details; for example, the cluster IDs, names, and status.
    """

    Clusters: Optional[ClusterSummaryList] = None
    Marker: Optional[Marker] = None


class ListInstancesOutput(BaseModel):
    """
    This output contains the list of instances.
    """

    Instances: Optional[InstanceList] = None
    Marker: Optional[Marker] = None


class ListNotebookExecutionsOutput(BaseModel):
    NotebookExecutions: Optional[NotebookExecutionSummaryList] = None
    Marker: Optional[Marker] = None


class ListSecurityConfigurationsOutput(BaseModel):
    SecurityConfigurations: Optional[SecurityConfigurationList] = None
    Marker: Optional[Marker] = None


class ListStepsInput(BaseModel):
    """
    This input determines which steps to list.
    """

    ClusterId: ClusterId
    StepStates: Optional[StepStateList] = None
    StepIds: Optional[XmlStringList] = None
    Marker: Optional[Marker] = None


class ListStudioSessionMappingsOutput(BaseModel):
    SessionMappings: Optional[SessionMappingSummaryList] = None
    Marker: Optional[Marker] = None


class ListStudiosOutput(BaseModel):
    Studios: Optional[StudioSummaryList] = None
    Marker: Optional[Marker] = None


class PutBlockPublicAccessConfigurationInput(BaseModel):
    BlockPublicAccessConfiguration: BlockPublicAccessConfiguration


class StartNotebookExecutionInput(BaseModel):
    EditorId: XmlStringMaxLen256
    RelativePath: XmlString
    NotebookExecutionName: Optional[XmlStringMaxLen256] = None
    NotebookParams: Optional[XmlString] = None
    ExecutionEngine: ExecutionEngineConfig
    ServiceRole: XmlString
    NotebookInstanceSecurityGroupId: Optional[XmlStringMaxLen256] = None
    Tags: Optional[TagList] = None


class StepConfigList(BaseModel):
    __root__: List[StepConfig]


class ScalingRuleList(BaseModel):
    __root__: List[ScalingRule]


class AutoScalingPolicy(BaseModel):
    """
    An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. An automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
    """

    Constraints: ScalingConstraints
    Rules: ScalingRuleList


class AutoScalingPolicyDescription(BaseModel):
    """
    An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>.
    """

    Status: Optional[AutoScalingPolicyStatus] = None
    Constraints: Optional[ScalingConstraints] = None
    Rules: Optional[ScalingRuleList] = None


class Step(StepSummary):
    """
    This represents a step in a cluster.
    """

    pass


class InstanceFleetProvisioningSpecifications(BaseModel):
    """
    <p>The launch specification for Spot Instances in the fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. On-Demand and Spot Instance allocation strategies are available in Amazon EMR version 5.12.1 and later.</p> </note>
    """

    SpotSpecification: Optional[SpotProvisioningSpecification] = None
    OnDemandSpecification: Optional[OnDemandProvisioningSpecification] = None


class StepDetailList(BaseModel):
    __root__: List[StepDetail]


class JobFlowDetail(BaseModel):
    """
    A description of a cluster (job flow).
    """

    JobFlowId: XmlStringMaxLen256
    Name: XmlStringMaxLen256
    LogUri: Optional[XmlString] = None
    LogEncryptionKmsKeyId: Optional[XmlString] = None
    AmiVersion: Optional[XmlStringMaxLen256] = None
    ExecutionStatusDetail: JobFlowExecutionStatusDetail
    Instances: JobFlowInstancesDetail
    Steps: Optional[StepDetailList] = None
    BootstrapActions: Optional[BootstrapActionDetailList] = None
    SupportedProducts: Optional[SupportedProductsList] = None
    VisibleToAllUsers: Optional[Boolean] = None
    JobFlowRole: Optional[XmlString] = None
    ServiceRole: Optional[XmlString] = None
    AutoScalingRole: Optional[XmlString] = None
    ScaleDownBehavior: Optional[ScaleDownBehavior] = None


class StepSummaryList(BaseModel):
    __root__: List[StepSummary]


class AddJobFlowStepsInput(BaseModel):
    """
    The input argument to the <a>AddJobFlowSteps</a> operation.
    """

    JobFlowId: XmlStringMaxLen256
    Steps: StepConfigList


class DescribeStepOutput(BaseModel):
    """
    This output contains the description of the cluster step.
    """

    Step: Optional[Step] = None


class ListStepsOutput(BaseModel):
    """
    This output contains the list of steps returned in reverse order. This means that the last step is the first element in the list.
    """

    Steps: Optional[StepSummaryList] = None
    Marker: Optional[Marker] = None


class PutAutoScalingPolicyOutput(BaseModel):
    ClusterId: Optional[ClusterId] = None
    InstanceGroupId: Optional[InstanceGroupId] = None
    AutoScalingPolicy: Optional[AutoScalingPolicyDescription] = None
    ClusterArn: Optional[ArnType] = None


class PutAutoScalingPolicyInput(BaseModel):
    ClusterId: ClusterId
    InstanceGroupId: InstanceGroupId
    AutoScalingPolicy: AutoScalingPolicy


class JobFlowDetailList(BaseModel):
    __root__: List[JobFlowDetail]


class DescribeJobFlowsOutput(BaseModel):
    """
    The output for the <a>DescribeJobFlows</a> operation.
    """

    JobFlows: Optional[JobFlowDetailList] = None


class AddInstanceFleetInput(BaseModel):
    ClusterId: XmlStringMaxLen256
    InstanceFleet: InstanceFleetConfig


class AddInstanceGroupsInput(BaseModel):
    """
    Input to an AddInstanceGroups call.
    """

    InstanceGroups: InstanceGroupConfigList
    JobFlowId: XmlStringMaxLen256


class DescribeClusterOutput(BaseModel):
    """
    This output contains the description of the cluster.
    """

    Cluster: Optional[Cluster] = None


class ListInstanceFleetsOutput(BaseModel):
    InstanceFleets: Optional[InstanceFleetList] = None
    Marker: Optional[Marker] = None


class ListInstanceGroupsOutput(BaseModel):
    """
    This input determines which instance groups to retrieve.
    """

    InstanceGroups: Optional[InstanceGroupList] = None
    Marker: Optional[Marker] = None


class ModifyInstanceGroupsInput(BaseModel):
    """
    Change the size of some instance groups.
    """

    ClusterId: Optional[ClusterId] = None
    InstanceGroups: Optional[InstanceGroupModifyConfigList] = None


class RunJobFlowInput(BaseModel):
    """
    Input to the <a>RunJobFlow</a> operation.
    """

    Name: XmlStringMaxLen256
    LogUri: Optional[XmlString] = None
    LogEncryptionKmsKeyId: Optional[XmlString] = None
    AdditionalInfo: Optional[XmlString] = None
    AmiVersion: Optional[XmlStringMaxLen256] = None
    ReleaseLabel: Optional[XmlStringMaxLen256] = None
    Instances: JobFlowInstancesConfig
    Steps: Optional[StepConfigList] = None
    BootstrapActions: Optional[BootstrapActionConfigList] = None
    SupportedProducts: Optional[SupportedProductsList] = None
    NewSupportedProducts: Optional[NewSupportedProductsList] = None
    Applications: Optional[ApplicationList] = None
    Configurations: Optional[ConfigurationList] = None
    VisibleToAllUsers: Optional[Boolean] = None
    JobFlowRole: Optional[XmlString] = None
    ServiceRole: Optional[XmlString] = None
    Tags: Optional[TagList] = None
    SecurityConfiguration: Optional[XmlString] = None
    AutoScalingRole: Optional[XmlString] = None
    ScaleDownBehavior: Optional[ScaleDownBehavior] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsRootVolumeSize: Optional[Integer] = None
    RepoUpgradeOnBoot: Optional[RepoUpgradeOnBoot] = None
    KerberosAttributes: Optional[KerberosAttributes] = None
    StepConcurrencyLevel: Optional[Integer] = None
    ManagedScalingPolicy: Optional[ManagedScalingPolicy] = None
    PlacementGroupConfigs: Optional[PlacementGroupConfigList] = None
    AutoTerminationPolicy: Optional[AutoTerminationPolicy] = None


class InstanceFleetConfig(BaseModel):
    """
    <p>The configuration that defines an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    Name: Optional[XmlStringMaxLen256] = None
    InstanceFleetType: InstanceFleetType
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None
    InstanceTypeConfigs: Optional[InstanceTypeConfigList] = None
    LaunchSpecifications: Optional[InstanceFleetProvisioningSpecifications] = None


class InstanceGroupConfigList(BaseModel):
    __root__: List[InstanceGroupConfig]


class ConfigurationList(BaseModel):
    __root__: List[Configuration]


class Cluster(BaseModel):
    """
    The detailed description of the cluster.
    """

    Id: Optional[ClusterId] = None
    Name: Optional[String] = None
    Status: Optional[ClusterStatus] = None
    Ec2InstanceAttributes: Optional[Ec2InstanceAttributes] = None
    InstanceCollectionType: Optional[InstanceCollectionType] = None
    LogUri: Optional[String] = None
    LogEncryptionKmsKeyId: Optional[String] = None
    RequestedAmiVersion: Optional[String] = None
    RunningAmiVersion: Optional[String] = None
    ReleaseLabel: Optional[String] = None
    AutoTerminate: Optional[Boolean] = None
    TerminationProtected: Optional[Boolean] = None
    VisibleToAllUsers: Optional[Boolean] = None
    Applications: Optional[ApplicationList] = None
    Tags: Optional[TagList] = None
    ServiceRole: Optional[String] = None
    NormalizedInstanceHours: Optional[Integer] = None
    MasterPublicDnsName: Optional[String] = None
    Configurations: Optional[ConfigurationList] = None
    SecurityConfiguration: Optional[XmlString] = None
    AutoScalingRole: Optional[XmlString] = None
    ScaleDownBehavior: Optional[ScaleDownBehavior] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None
    EbsRootVolumeSize: Optional[Integer] = None
    RepoUpgradeOnBoot: Optional[RepoUpgradeOnBoot] = None
    KerberosAttributes: Optional[KerberosAttributes] = None
    ClusterArn: Optional[ArnType] = None
    OutpostArn: Optional[OptionalArnType] = None
    StepConcurrencyLevel: Optional[Integer] = None
    PlacementGroups: Optional[PlacementGroupConfigList] = None


class Configuration(BaseModel):
    """
    <note> <p>Amazon EMR releases 4.x or later.</p> </note> <p>An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see <a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html">Configuring Applications</a>.</p>
    """

    Classification: Optional[String] = None
    Configurations: Optional[ConfigurationList] = None
    Properties: Optional[StringMap] = None


class InstanceTypeSpecificationList(BaseModel):
    __root__: List[InstanceTypeSpecification]


class InstanceFleet2(BaseModel):
    """
    <p>Describes an instance fleet, which is a group of EC2 instances that host a particular node type (master, core, or task) in an Amazon EMR cluster. Instance fleets can consist of a mix of instance types and On-Demand and Spot Instances, which are provisioned to meet a defined target capacity. </p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    Id: Optional[InstanceFleetId] = None
    Name: Optional[XmlStringMaxLen256] = None
    Status: Optional[InstanceFleetStatus] = None
    InstanceFleetType: Optional[InstanceFleetType] = None
    TargetOnDemandCapacity: Optional[WholeNumber] = None
    TargetSpotCapacity: Optional[WholeNumber] = None
    ProvisionedOnDemandCapacity: Optional[WholeNumber] = None
    ProvisionedSpotCapacity: Optional[WholeNumber] = None
    InstanceTypeSpecifications: Optional[InstanceTypeSpecificationList] = None
    LaunchSpecifications: Optional[InstanceFleetProvisioningSpecifications] = None


class InstanceTypeConfigList(BaseModel):
    __root__: List[InstanceTypeConfig]


class InstanceFleetConfigList(BaseModel):
    __root__: List[InstanceFleetConfig]


class InstanceFleetList(BaseModel):
    __root__: List[InstanceFleet2]


class InstanceGroup(BaseModel):
    """
    This entity represents an instance group, which is a group of instances that have common purpose. For example, CORE instance group is used for HDFS.
    """

    Id: Optional[InstanceGroupId] = None
    Name: Optional[String] = None
    Market: Optional[MarketType] = None
    InstanceGroupType: Optional[InstanceFleetType] = None
    BidPrice: Optional[String] = None
    InstanceType: Optional[InstanceType] = None
    RequestedInstanceCount: Optional[Integer] = None
    RunningInstanceCount: Optional[Integer] = None
    Status: Optional[InstanceGroupStatus] = None
    Configurations: Optional[ConfigurationList] = None
    ConfigurationsVersion: Optional[Long] = None
    LastSuccessfullyAppliedConfigurations: Optional[ConfigurationList] = None
    LastSuccessfullyAppliedConfigurationsVersion: Optional[Long] = None
    EbsBlockDevices: Optional[EbsBlockDeviceList] = None
    EbsOptimized: Optional[BooleanObject] = None
    ShrinkPolicy: Optional[ShrinkPolicy] = None
    AutoScalingPolicy: Optional[AutoScalingPolicyDescription] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None


class InstanceGroupConfig(BaseModel):
    """
    Configuration defining a new instance group.
    """

    Name: Optional[XmlStringMaxLen256] = None
    Market: Optional[MarketType] = None
    InstanceRole: InstanceFleetType
    BidPrice: Optional[XmlStringMaxLen256] = None
    InstanceType: InstanceType
    InstanceCount: Integer
    Configurations: Optional[ConfigurationList] = None
    EbsConfiguration: Optional[EbsConfiguration] = None
    AutoScalingPolicy: Optional[AutoScalingPolicy] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None


class InstanceGroupList(BaseModel):
    __root__: List[InstanceGroup]


class InstanceGroupModifyConfig(BaseModel):
    """
    Modify the size or configurations of an instance group.
    """

    InstanceGroupId: XmlStringMaxLen256
    InstanceCount: Optional[Integer] = None
    EC2InstanceIdsToTerminate: Optional[EC2InstanceIdsToTerminateList] = None
    ShrinkPolicy: Optional[ShrinkPolicy] = None
    Configurations: Optional[ConfigurationList] = None


class InstanceGroupModifyConfigList(BaseModel):
    __root__: List[InstanceGroupModifyConfig]


class InstanceTypeConfig(BaseModel):
    """
    <p>An instance type configuration for each instance type in an instance fleet, which determines the EC2 instances Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities. When you use an allocation strategy, you can include a maximum of 30 instance type configurations for a fleet. For more information about how to use an allocation strategy, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html">Configure Instance Fleets</a>. Without an allocation strategy, you may specify a maximum of five instance type configurations for a fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    InstanceType: InstanceType
    WeightedCapacity: Optional[WholeNumber] = None
    BidPrice: Optional[XmlStringMaxLen256] = None
    BidPriceAsPercentageOfOnDemandPrice: Optional[NonNegativeDouble] = None
    EbsConfiguration: Optional[EbsConfiguration] = None
    Configurations: Optional[ConfigurationList] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None


class InstanceTypeSpecification(BaseModel):
    """
    <p>The configuration specification for each instance type in an instance fleet.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.</p> </note>
    """

    InstanceType: Optional[InstanceType] = None
    WeightedCapacity: Optional[WholeNumber] = None
    BidPrice: Optional[XmlStringMaxLen256] = None
    BidPriceAsPercentageOfOnDemandPrice: Optional[NonNegativeDouble] = None
    Configurations: Optional[ConfigurationList] = None
    EbsBlockDevices: Optional[EbsBlockDeviceList] = None
    EbsOptimized: Optional[BooleanObject] = None
    CustomAmiId: Optional[XmlStringMaxLen256] = None


class JobFlowInstancesConfig(BaseModel):
    """
    A description of the Amazon EC2 instance on which the cluster (job flow) runs. A valid JobFlowInstancesConfig must contain either InstanceGroups or InstanceFleets. They cannot be used together. You may also have MasterInstanceType, SlaveInstanceType, and InstanceCount (all three must be present), but we don't recommend this configuration.
    """

    MasterInstanceType: Optional[InstanceType] = None
    SlaveInstanceType: Optional[InstanceType] = None
    InstanceCount: Optional[Integer] = None
    InstanceGroups: Optional[InstanceGroupConfigList] = None
    InstanceFleets: Optional[InstanceFleetConfigList] = None
    Ec2KeyName: Optional[XmlStringMaxLen256] = None
    Placement: Optional[PlacementType] = None
    KeepJobFlowAliveWhenNoSteps: Optional[Boolean] = None
    TerminationProtected: Optional[Boolean] = None
    HadoopVersion: Optional[XmlStringMaxLen256] = None
    Ec2SubnetId: Optional[XmlStringMaxLen256] = None
    Ec2SubnetIds: Optional[XmlStringMaxLen256List] = None
    EmrManagedMasterSecurityGroup: Optional[XmlStringMaxLen256] = None
    EmrManagedSlaveSecurityGroup: Optional[XmlStringMaxLen256] = None
    ServiceAccessSecurityGroup: Optional[XmlStringMaxLen256] = None
    AdditionalMasterSecurityGroups: Optional[SecurityGroupsList] = None
    AdditionalSlaveSecurityGroups: Optional[SecurityGroupsList] = None


AddInstanceFleetInput.update_forward_refs()
AddInstanceGroupsInput.update_forward_refs()
DescribeClusterOutput.update_forward_refs()
ListInstanceFleetsOutput.update_forward_refs()
ListInstanceGroupsOutput.update_forward_refs()
ModifyInstanceGroupsInput.update_forward_refs()
RunJobFlowInput.update_forward_refs()
InstanceFleetConfig.update_forward_refs()
InstanceGroupConfigList.update_forward_refs()
ConfigurationList.update_forward_refs()
InstanceTypeSpecificationList.update_forward_refs()
InstanceTypeConfigList.update_forward_refs()

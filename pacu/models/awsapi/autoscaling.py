# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:28+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class XmlStringMaxLen19(BaseModel):
    __root__: Annotated[str, Field(max_length=19, min_length=1)]


class ResourceContentionFault(BaseModel):
    __root__: Any


class ServiceLinkedRoleFailure(ResourceContentionFault):
    pass


class AttachLoadBalancerTargetGroupsResultType(BaseModel):
    pass


class XmlStringMaxLen511(BaseModel):
    __root__: Annotated[str, Field(max_length=511, min_length=1)]


class AttachLoadBalancersResultType(AttachLoadBalancerTargetGroupsResultType):
    pass


class XmlStringMaxLen255(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class AlreadyExistsFault(ResourceContentionFault):
    pass


class LimitExceededFault(ResourceContentionFault):
    pass


class CancelInstanceRefreshAnswer(BaseModel):
    InstanceRefreshId: Optional[XmlStringMaxLen255] = None


class ActiveInstanceRefreshNotFoundFault(ResourceContentionFault):
    pass


class CompleteLifecycleActionAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class LaunchTemplateName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=3, regex='[a-zA-Z0-9\\(\\)\\.\\-/_]+')
    ]


class XmlStringMaxLen1600(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1)]


class XmlString(BaseModel):
    __root__: str


class MonitoringEnabled(BaseModel):
    __root__: bool


class InstanceMetadataHttpTokensState(Enum):
    optional = 'optional'
    required = 'required'


class InstanceMetadataHttpPutResponseHopLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=64.0)]


class InstanceMetadataEndpointState(Enum):
    disabled = 'disabled'
    enabled = 'enabled'


class ResourceInUseFault(ResourceContentionFault):
    pass


class ScalingActivityInProgressFault(ResourceContentionFault):
    pass


class DeleteLifecycleHookAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class DeleteWarmPoolAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class InvalidNextToken(ResourceContentionFault):
    pass


class AsciiStringMaxLen255(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='[A-Za-z0-9\\-_\\/]+')
    ]


class ResourceName(XmlStringMaxLen1600):
    pass


class XmlStringMaxLen64(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class DetachLoadBalancerTargetGroupsResultType(
    AttachLoadBalancerTargetGroupsResultType
):
    pass


class DetachLoadBalancersResultType(AttachLoadBalancerTargetGroupsResultType):
    pass


class PutLifecycleHookAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class MetricScale(BaseModel):
    __root__: float


class DisableScaleIn(MonitoringEnabled):
    pass


class PredictiveScalingMode(Enum):
    ForecastAndScale = 'ForecastAndScale'
    ForecastOnly = 'ForecastOnly'


class PredictiveScalingSchedulingBufferTime(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class PredictiveScalingMaxCapacityBreachBehavior(Enum):
    HonorMaxCapacity = 'HonorMaxCapacity'
    IncreaseMaxCapacity = 'IncreaseMaxCapacity'


class PredictiveScalingMaxCapacityBuffer(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class PutWarmPoolAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class RecordLifecycleActionHeartbeatAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class SetInstanceProtectionAnswer(AttachLoadBalancerTargetGroupsResultType):
    pass


class StartInstanceRefreshAnswer(CancelInstanceRefreshAnswer):
    pass


class LaunchTemplateSpecification(BaseModel):
    """
    Describes the launch template and the version of the launch template that Amazon EC2 Auto Scaling uses to launch Amazon EC2 instances. For more information about launch templates, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchTemplates.html">Launch templates</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    """

    LaunchTemplateId: Optional[XmlStringMaxLen255] = None
    LaunchTemplateName: Optional[LaunchTemplateName] = None
    Version: Optional[XmlStringMaxLen255] = None


class IntPercent(PredictiveScalingMaxCapacityBuffer):
    pass


class RefreshInstanceWarmup(PredictiveScalingSchedulingBufferTime):
    pass


class CheckpointDelay(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=172800.0)]


class SkipMatching(MonitoringEnabled):
    pass


class InstanceRefreshInProgressFault(ResourceContentionFault):
    pass


class XmlStringMaxLen1023(BaseModel):
    __root__: Annotated[str, Field(max_length=1023, min_length=1)]


class TimestampType(BaseModel):
    __root__: datetime


class ScalingActivityStatusCode(Enum):
    PendingSpotBidPlacement = 'PendingSpotBidPlacement'
    WaitingForSpotInstanceRequestId = 'WaitingForSpotInstanceRequestId'
    WaitingForSpotInstanceId = 'WaitingForSpotInstanceId'
    WaitingForInstanceId = 'WaitingForInstanceId'
    PreInService = 'PreInService'
    InProgress = 'InProgress'
    WaitingForELBConnectionDraining = 'WaitingForELBConnectionDraining'
    MidLifecycleAction = 'MidLifecycleAction'
    WaitingForInstanceWarmup = 'WaitingForInstanceWarmup'
    Successful = 'Successful'
    Failed = 'Failed'
    Cancelled = 'Cancelled'


class Progress(BaseModel):
    __root__: int


class AutoScalingGroupState(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class ActivityIds(BaseModel):
    __root__: List[XmlString]


class AdjustmentType(BaseModel):
    """
    Describes a policy adjustment type.
    """

    AdjustmentType: Optional[XmlStringMaxLen255] = None


class AdjustmentTypes(BaseModel):
    __root__: List[AdjustmentType]


class Alarm(BaseModel):
    """
    Describes an alarm.
    """

    AlarmName: Optional[XmlStringMaxLen255] = None
    AlarmARN: Optional[ResourceName] = None


class Alarms(BaseModel):
    __root__: List[Alarm]


class AssociatePublicIpAddress(MonitoringEnabled):
    pass


class InstanceIds(BaseModel):
    __root__: List[XmlStringMaxLen19]


class AttachInstancesQuery(BaseModel):
    InstanceIds: Optional[InstanceIds] = None
    AutoScalingGroupName: XmlStringMaxLen255


class TargetGroupARNs(BaseModel):
    __root__: List[XmlStringMaxLen511]


class AttachLoadBalancerTargetGroupsType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    TargetGroupARNs: TargetGroupARNs


class LoadBalancerNames(BaseModel):
    __root__: List[XmlStringMaxLen255]


class AttachLoadBalancersType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    LoadBalancerNames: LoadBalancerNames


class AutoScalingGroupMinSize(Progress):
    pass


class AutoScalingGroupMaxSize(Progress):
    pass


class AutoScalingGroupDesiredCapacity(Progress):
    pass


class AutoScalingGroupPredictedCapacity(Progress):
    pass


class Cooldown(Progress):
    pass


class AvailabilityZones(LoadBalancerNames):
    pass


class XmlStringMaxLen32(AutoScalingGroupState):
    pass


class HealthCheckGracePeriod(Progress):
    pass


class XmlStringMaxLen2047(BaseModel):
    __root__: Annotated[str, Field(max_length=2047, min_length=1)]


class TerminationPolicies(BaseModel):
    __root__: List[XmlStringMaxLen1600]


class InstanceProtected(MonitoringEnabled):
    pass


class MaxInstanceLifetime(Progress):
    pass


class CapacityRebalanceEnabled(MonitoringEnabled):
    pass


class WarmPoolSize(Progress):
    pass


class Context(XmlString):
    pass


class AutoScalingGroupNames(LoadBalancerNames):
    pass


class MaxRecords(Progress):
    pass


class AutoScalingGroupNamesType(BaseModel):
    AutoScalingGroupNames: Optional[AutoScalingGroupNames] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class AutoScalingInstanceDetails(BaseModel):
    """
    Describes an EC2 instance associated with an Auto Scaling group.
    """

    InstanceId: XmlStringMaxLen19
    InstanceType: Optional[XmlStringMaxLen255] = None
    AutoScalingGroupName: XmlStringMaxLen255
    AvailabilityZone: XmlStringMaxLen255
    LifecycleState: XmlStringMaxLen32
    HealthStatus: XmlStringMaxLen32
    LaunchConfigurationName: Optional[XmlStringMaxLen255] = None
    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    ProtectedFromScaleIn: InstanceProtected
    WeightedCapacity: Optional[XmlStringMaxLen32] = None


class AutoScalingInstances(BaseModel):
    __root__: List[AutoScalingInstanceDetails]


class AutoScalingNotificationTypes(LoadBalancerNames):
    pass


class ScheduledActionNames(LoadBalancerNames):
    pass


class BatchDeleteScheduledActionType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ScheduledActionNames: ScheduledActionNames


class BlockDeviceEbsDeleteOnTermination(MonitoringEnabled):
    pass


class BlockDeviceEbsEncrypted(MonitoringEnabled):
    pass


class BlockDeviceEbsIops(BaseModel):
    __root__: Annotated[int, Field(ge=100.0, le=20000.0)]


class BlockDeviceEbsThroughput(BaseModel):
    __root__: Annotated[int, Field(ge=125.0, le=1000.0)]


class BlockDeviceEbsVolumeSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=16384.0)]


class BlockDeviceEbsVolumeType(XmlStringMaxLen255):
    pass


class Ebs(BaseModel):
    """
    Describes information used to set up an Amazon EBS volume specified in a block device mapping.
    """

    SnapshotId: Optional[XmlStringMaxLen255] = None
    VolumeSize: Optional[BlockDeviceEbsVolumeSize] = None
    VolumeType: Optional[BlockDeviceEbsVolumeType] = None
    DeleteOnTermination: Optional[BlockDeviceEbsDeleteOnTermination] = None
    Iops: Optional[BlockDeviceEbsIops] = None
    Encrypted: Optional[BlockDeviceEbsEncrypted] = None
    Throughput: Optional[BlockDeviceEbsThroughput] = None


class NoDevice(MonitoringEnabled):
    pass


class CancelInstanceRefreshType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255


class PredictiveScalingForecastTimestamps(BaseModel):
    __root__: List[TimestampType]


class PredictiveScalingForecastValues(BaseModel):
    __root__: List[MetricScale]


class CapacityForecast(BaseModel):
    """
    A <code>GetPredictiveScalingForecast</code> call returns the capacity forecast for a predictive scaling policy. This structure includes the data points for that capacity forecast, along with the timestamps of those data points.
    """

    Timestamps: PredictiveScalingForecastTimestamps
    Values: PredictiveScalingForecastValues


class NonZeroIntPercent(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ClassicLinkVPCSecurityGroups(LoadBalancerNames):
    pass


class LifecycleActionToken(BaseModel):
    __root__: Annotated[str, Field(max_length=36, min_length=36)]


class LifecycleActionResult(XmlString):
    pass


class CompleteLifecycleActionType(BaseModel):
    LifecycleHookName: AsciiStringMaxLen255
    AutoScalingGroupName: ResourceName
    LifecycleActionToken: Optional[LifecycleActionToken] = None
    LifecycleActionResult: LifecycleActionResult
    InstanceId: Optional[XmlStringMaxLen19] = None


class SecurityGroups(ActivityIds):
    pass


class XmlStringUserData(BaseModel):
    __root__: Annotated[str, Field(max_length=21847)]


class InstanceMonitoring(BaseModel):
    """
    Describes whether detailed monitoring is enabled for the Auto Scaling instances.
    """

    Enabled: Optional[MonitoringEnabled] = None


class SpotPrice(XmlStringMaxLen255):
    pass


class EbsOptimized(MonitoringEnabled):
    pass


class InstanceMetadataOptions(BaseModel):
    """
    The metadata options for the instances. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-config.html#launch-configurations-imds">Configuring the Instance Metadata Options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    """

    HttpTokens: Optional[InstanceMetadataHttpTokensState] = None
    HttpPutResponseHopLimit: Optional[InstanceMetadataHttpPutResponseHopLimit] = None
    HttpEndpoint: Optional[InstanceMetadataEndpointState] = None


class MetricName(XmlString):
    pass


class MetricNamespace(XmlString):
    pass


class MetricStatistic(Enum):
    Average = 'Average'
    Minimum = 'Minimum'
    Maximum = 'Maximum'
    SampleCount = 'SampleCount'
    Sum = 'Sum'


class MetricUnit(XmlString):
    pass


class ForceDelete(MonitoringEnabled):
    pass


class DeleteAutoScalingGroupType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ForceDelete: Optional[ForceDelete] = None


class DeleteLifecycleHookType(BaseModel):
    LifecycleHookName: AsciiStringMaxLen255
    AutoScalingGroupName: XmlStringMaxLen255


class DeleteNotificationConfigurationType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    TopicARN: XmlStringMaxLen255


class DeletePolicyType(BaseModel):
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    PolicyName: ResourceName


class DeleteScheduledActionType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ScheduledActionName: XmlStringMaxLen255


class DeleteWarmPoolType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ForceDelete: Optional[ForceDelete] = None


class MaxNumberOfAutoScalingGroups(Progress):
    pass


class MaxNumberOfLaunchConfigurations(Progress):
    pass


class NumberOfAutoScalingGroups(Progress):
    pass


class NumberOfLaunchConfigurations(Progress):
    pass


class DescribeAutoScalingInstancesType(BaseModel):
    InstanceIds: Optional[InstanceIds] = None
    MaxRecords: Optional[MaxRecords] = None
    NextToken: Optional[XmlString] = None


class InstanceRefreshIds(LoadBalancerNames):
    pass


class DescribeInstanceRefreshesType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    InstanceRefreshIds: Optional[InstanceRefreshIds] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class LifecycleHookNames(BaseModel):
    __root__: Annotated[List[AsciiStringMaxLen255], Field(max_items=50)]


class DescribeLifecycleHooksType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    LifecycleHookNames: Optional[LifecycleHookNames] = None


class DescribeLoadBalancerTargetGroupsRequest(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class DescribeLoadBalancersRequest(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class DescribeNotificationConfigurationsType(BaseModel):
    AutoScalingGroupNames: Optional[AutoScalingGroupNames] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class PolicyNames(BaseModel):
    __root__: List[ResourceName]


class PolicyTypes(BaseModel):
    __root__: List[XmlStringMaxLen64]


class DescribePoliciesType(BaseModel):
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    PolicyNames: Optional[PolicyNames] = None
    PolicyTypes: Optional[PolicyTypes] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class IncludeDeletedGroups(MonitoringEnabled):
    pass


class DescribeScalingActivitiesType(BaseModel):
    ActivityIds: Optional[ActivityIds] = None
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    IncludeDeletedGroups: Optional[IncludeDeletedGroups] = None
    MaxRecords: Optional[MaxRecords] = None
    NextToken: Optional[XmlString] = None


class DescribeScheduledActionsType(BaseModel):
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    ScheduledActionNames: Optional[ScheduledActionNames] = None
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class DescribeWarmPoolType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    MaxRecords: Optional[MaxRecords] = None
    NextToken: Optional[XmlString] = None


class ShouldDecrementDesiredCapacity(MonitoringEnabled):
    pass


class DetachInstancesQuery(BaseModel):
    InstanceIds: Optional[InstanceIds] = None
    AutoScalingGroupName: XmlStringMaxLen255
    ShouldDecrementDesiredCapacity: ShouldDecrementDesiredCapacity


class DetachLoadBalancerTargetGroupsType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    TargetGroupARNs: TargetGroupARNs


class DetachLoadBalancersType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    LoadBalancerNames: LoadBalancerNames


class Metrics1(LoadBalancerNames):
    pass


class DisableMetricsCollectionQuery(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    Metrics: Optional[Metrics1] = None


class EnableMetricsCollectionQuery(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    Metrics: Optional[Metrics1] = None
    Granularity: XmlStringMaxLen255


class EnabledMetric(BaseModel):
    """
    Describes an enabled metric.
    """

    Metric: Optional[XmlStringMaxLen255] = None
    Granularity: Optional[XmlStringMaxLen255] = None


class EnterStandbyQuery(BaseModel):
    InstanceIds: Optional[InstanceIds] = None
    AutoScalingGroupName: XmlStringMaxLen255
    ShouldDecrementDesiredCapacity: ShouldDecrementDesiredCapacity


class EstimatedInstanceWarmup(Progress):
    pass


class HonorCooldown(MonitoringEnabled):
    pass


class ExecutePolicyType(BaseModel):
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    PolicyName: ResourceName
    HonorCooldown: Optional[HonorCooldown] = None
    MetricValue: Optional[MetricScale] = None
    BreachThreshold: Optional[MetricScale] = None


class ExitStandbyQuery(BaseModel):
    InstanceIds: Optional[InstanceIds] = None
    AutoScalingGroupName: XmlStringMaxLen255


class FailedScheduledUpdateGroupActionRequest(BaseModel):
    """
    Describes a scheduled action that could not be created, updated, or deleted.
    """

    ScheduledActionName: XmlStringMaxLen255
    ErrorCode: Optional[XmlStringMaxLen64] = None
    ErrorMessage: Optional[XmlString] = None


class Values(ActivityIds):
    pass


class GetPredictiveScalingForecastType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    PolicyName: XmlStringMaxLen255
    StartTime: TimestampType
    EndTime: TimestampType


class GlobalTimeout(Progress):
    pass


class HeartbeatTimeout(Progress):
    pass


class LifecycleState1(Enum):
    Pending = 'Pending'
    Pending_Wait = 'Pending:Wait'
    Pending_Proceed = 'Pending:Proceed'
    Quarantined = 'Quarantined'
    InService = 'InService'
    Terminating = 'Terminating'
    Terminating_Wait = 'Terminating:Wait'
    Terminating_Proceed = 'Terminating:Proceed'
    Terminated = 'Terminated'
    Detaching = 'Detaching'
    Detached = 'Detached'
    EnteringStandby = 'EnteringStandby'
    Standby = 'Standby'
    Warmed_Pending = 'Warmed:Pending'
    Warmed_Pending_Wait = 'Warmed:Pending:Wait'
    Warmed_Pending_Proceed = 'Warmed:Pending:Proceed'
    Warmed_Terminating = 'Warmed:Terminating'
    Warmed_Terminating_Wait = 'Warmed:Terminating:Wait'
    Warmed_Terminating_Proceed = 'Warmed:Terminating:Proceed'
    Warmed_Terminated = 'Warmed:Terminated'
    Warmed_Stopped = 'Warmed:Stopped'
    Warmed_Running = 'Warmed:Running'


class Instance(BaseModel):
    """
    Describes an EC2 instance.
    """

    InstanceId: XmlStringMaxLen19
    InstanceType: Optional[XmlStringMaxLen255] = None
    AvailabilityZone: XmlStringMaxLen255
    LifecycleState: LifecycleState1
    HealthStatus: XmlStringMaxLen32
    LaunchConfigurationName: Optional[XmlStringMaxLen255] = None
    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    ProtectedFromScaleIn: InstanceProtected
    WeightedCapacity: Optional[XmlStringMaxLen32] = None


class InstanceRefreshStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Successful = 'Successful'
    Failed = 'Failed'
    Cancelling = 'Cancelling'
    Cancelled = 'Cancelled'


class InstancesToUpdate(PredictiveScalingSchedulingBufferTime):
    pass


class InstanceRefreshLivePoolProgress(BaseModel):
    """
    Reports the progress of an instance refresh on instances that are in the Auto Scaling group.
    """

    PercentageComplete: Optional[IntPercent] = None
    InstancesToUpdate: Optional[InstancesToUpdate] = None


class InstanceRefreshWarmPoolProgress(InstanceRefreshLivePoolProgress):
    """
    Reports the progress of an instance refresh on instances that are in the warm pool.
    """

    pass


class OnDemandBaseCapacity(Progress):
    pass


class OnDemandPercentageAboveBaseCapacity(Progress):
    pass


class SpotInstancePools(Progress):
    pass


class MixedInstanceSpotPrice(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=0)]


class LaunchConfigurationNameType(BaseModel):
    LaunchConfigurationName: XmlStringMaxLen255


class LaunchConfigurationNames(LoadBalancerNames):
    pass


class LaunchConfigurationNamesType(BaseModel):
    LaunchConfigurationNames: Optional[LaunchConfigurationNames] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class LaunchTemplateOverrides(BaseModel):
    """
    Describes an override for a launch template. The maximum number of instance types that can be associated with an Auto Scaling group is 40. The maximum number of distinct launch templates you can define for an Auto Scaling group is 20. For more information about configuring overrides, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-override-options.html">Configuring overrides</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    """

    InstanceType: Optional[XmlStringMaxLen255] = None
    WeightedCapacity: Optional[XmlStringMaxLen32] = None
    LaunchTemplateSpecification: Optional[LaunchTemplateSpecification] = None


class LifecycleTransition(XmlString):
    pass


class NotificationTargetResourceName(MixedInstanceSpotPrice):
    pass


class LifecycleHook(BaseModel):
    """
    Describes a lifecycle hook, which tells Amazon EC2 Auto Scaling that you want to perform an action whenever it launches instances or terminates instances.
    """

    LifecycleHookName: Optional[AsciiStringMaxLen255] = None
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    LifecycleTransition: Optional[LifecycleTransition] = None
    NotificationTargetARN: Optional[NotificationTargetResourceName] = None
    RoleARN: Optional[XmlStringMaxLen255] = None
    NotificationMetadata: Optional[XmlStringMaxLen1023] = None
    HeartbeatTimeout: Optional[HeartbeatTimeout] = None
    GlobalTimeout: Optional[GlobalTimeout] = None
    DefaultResult: Optional[LifecycleActionResult] = None


class LoadBalancerState(BaseModel):
    """
    Describes the state of a Classic Load Balancer.
    """

    LoadBalancerName: Optional[XmlStringMaxLen255] = None
    State: Optional[XmlStringMaxLen255] = None


class LoadBalancerTargetGroupState(BaseModel):
    """
    Describes the state of a target group.
    """

    LoadBalancerTargetGroupARN: Optional[XmlStringMaxLen511] = None
    State: Optional[XmlStringMaxLen255] = None


class MaxGroupPreparedCapacity(BaseModel):
    __root__: Annotated[int, Field(ge=-1.0)]


class MetricCollectionType(BaseModel):
    """
    Describes a metric.
    """

    Metric: Optional[XmlStringMaxLen255] = None


class MetricDimensionName(XmlString):
    pass


class MetricDimensionValue(XmlString):
    pass


class MetricDimension(BaseModel):
    """
    Describes the dimension of a metric.
    """

    Name: MetricDimensionName
    Value: MetricDimensionValue


class MetricGranularityType(BaseModel):
    """
    Describes a granularity of a metric.
    """

    Granularity: Optional[XmlStringMaxLen255] = None


class MetricType(Enum):
    ASGAverageCPUUtilization = 'ASGAverageCPUUtilization'
    ASGAverageNetworkIn = 'ASGAverageNetworkIn'
    ASGAverageNetworkOut = 'ASGAverageNetworkOut'
    ALBRequestCountPerTarget = 'ALBRequestCountPerTarget'


class MinAdjustmentMagnitude(Progress):
    pass


class MinAdjustmentStep(Progress):
    pass


class NotificationConfiguration(BaseModel):
    """
    Describes a notification.
    """

    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    TopicARN: Optional[XmlStringMaxLen255] = None
    NotificationType: Optional[XmlStringMaxLen255] = None


class PolicyIncrement(Progress):
    pass


class PredefinedLoadMetricType(Enum):
    ASGTotalCPUUtilization = 'ASGTotalCPUUtilization'
    ASGTotalNetworkIn = 'ASGTotalNetworkIn'
    ASGTotalNetworkOut = 'ASGTotalNetworkOut'
    ALBTargetGroupRequestCount = 'ALBTargetGroupRequestCount'


class PredefinedMetricPairType(Enum):
    ASGCPUUtilization = 'ASGCPUUtilization'
    ASGNetworkIn = 'ASGNetworkIn'
    ASGNetworkOut = 'ASGNetworkOut'
    ALBRequestCount = 'ALBRequestCount'


class PredictiveScalingPredefinedMetricPair(BaseModel):
    """
    Represents a metric pair for a predictive scaling policy.
    """

    PredefinedMetricType: PredefinedMetricPairType
    ResourceLabel: Optional[XmlStringMaxLen1023] = None


class PredictiveScalingPredefinedScalingMetric(BaseModel):
    """
    <p>Describes a scaling metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>
    """

    PredefinedMetricType: MetricType
    ResourceLabel: Optional[XmlStringMaxLen1023] = None


class PredictiveScalingPredefinedLoadMetric(BaseModel):
    """
    <p>Describes a load metric for a predictive scaling policy.</p> <p>When returned in the output of <code>DescribePolicies</code>, it indicates that a predictive scaling policy uses individually specified load and scaling metrics instead of a metric pair.</p>
    """

    PredefinedMetricType: PredefinedLoadMetricType
    ResourceLabel: Optional[XmlStringMaxLen1023] = None


class ProcessNames(LoadBalancerNames):
    pass


class ProcessType(BaseModel):
    """
    <p>Describes a process type.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types">Scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    """

    ProcessName: XmlStringMaxLen255


class Processes(BaseModel):
    __root__: List[ProcessType]


class PropagateAtLaunch(MonitoringEnabled):
    pass


class ProtectedFromScaleIn2(MonitoringEnabled):
    pass


class PutLifecycleHookType(BaseModel):
    LifecycleHookName: AsciiStringMaxLen255
    AutoScalingGroupName: XmlStringMaxLen255
    LifecycleTransition: Optional[LifecycleTransition] = None
    RoleARN: Optional[XmlStringMaxLen255] = None
    NotificationTargetARN: Optional[NotificationTargetResourceName] = None
    NotificationMetadata: Optional[XmlStringMaxLen1023] = None
    HeartbeatTimeout: Optional[HeartbeatTimeout] = None
    DefaultResult: Optional[LifecycleActionResult] = None


class PutNotificationConfigurationType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    TopicARN: XmlStringMaxLen255
    NotificationTypes: AutoScalingNotificationTypes


class ScalingPolicyEnabled(MonitoringEnabled):
    pass


class PutScheduledUpdateGroupActionType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ScheduledActionName: XmlStringMaxLen255
    Time: Optional[TimestampType] = None
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    Recurrence: Optional[XmlStringMaxLen255] = None
    MinSize: Optional[AutoScalingGroupMinSize] = None
    MaxSize: Optional[AutoScalingGroupMaxSize] = None
    DesiredCapacity: Optional[AutoScalingGroupDesiredCapacity] = None
    TimeZone: Optional[XmlStringMaxLen255] = None


class WarmPoolMinSize(PredictiveScalingSchedulingBufferTime):
    pass


class WarmPoolState(Enum):
    Stopped = 'Stopped'
    Running = 'Running'


class PutWarmPoolType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    MaxGroupPreparedCapacity: Optional[MaxGroupPreparedCapacity] = None
    MinSize: Optional[WarmPoolMinSize] = None
    PoolState: Optional[WarmPoolState] = None


class RecordLifecycleActionHeartbeatType(BaseModel):
    LifecycleHookName: AsciiStringMaxLen255
    AutoScalingGroupName: ResourceName
    LifecycleActionToken: Optional[LifecycleActionToken] = None
    InstanceId: Optional[XmlStringMaxLen19] = None


class RefreshStrategy(Enum):
    Rolling = 'Rolling'


class ScalingProcessQuery(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ScalingProcesses: Optional[ProcessNames] = None


class ScheduledUpdateGroupAction(BaseModel):
    """
    Describes a scheduled scaling action.
    """

    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    ScheduledActionName: Optional[XmlStringMaxLen255] = None
    ScheduledActionARN: Optional[ResourceName] = None
    Time: Optional[TimestampType] = None
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    Recurrence: Optional[XmlStringMaxLen255] = None
    MinSize: Optional[AutoScalingGroupMinSize] = None
    MaxSize: Optional[AutoScalingGroupMaxSize] = None
    DesiredCapacity: Optional[AutoScalingGroupDesiredCapacity] = None
    TimeZone: Optional[XmlStringMaxLen255] = None


class SetDesiredCapacityType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    DesiredCapacity: AutoScalingGroupDesiredCapacity
    HonorCooldown: Optional[HonorCooldown] = None


class ShouldRespectGracePeriod(MonitoringEnabled):
    pass


class SetInstanceHealthQuery(BaseModel):
    InstanceId: XmlStringMaxLen19
    HealthStatus: XmlStringMaxLen32
    ShouldRespectGracePeriod: Optional[ShouldRespectGracePeriod] = None


class SetInstanceProtectionQuery(BaseModel):
    InstanceIds: InstanceIds
    AutoScalingGroupName: XmlStringMaxLen255
    ProtectedFromScaleIn: ProtectedFromScaleIn2


class SuspendedProcess(BaseModel):
    """
    <p>Describes an auto scaling process that has been suspended.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html#process-types">Scaling processes</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    """

    ProcessName: Optional[XmlStringMaxLen255] = None
    SuspensionReason: Optional[XmlStringMaxLen255] = None


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class TagDescription(BaseModel):
    """
    Describes a tag for an Auto Scaling group.
    """

    ResourceId: Optional[XmlString] = None
    ResourceType: Optional[XmlString] = None
    Key: Optional[TagKey] = None
    Value: Optional[TagValue] = None
    PropagateAtLaunch: Optional[PropagateAtLaunch] = None


class TerminateInstanceInAutoScalingGroupType(BaseModel):
    InstanceId: XmlStringMaxLen19
    ShouldDecrementDesiredCapacity: ShouldDecrementDesiredCapacity


class WarmPoolStatus(Enum):
    PendingDelete = 'PendingDelete'


class ScheduledUpdateGroupActionRequest(BaseModel):
    """
    Describes information used for one or more scheduled scaling action updates in a <a>BatchPutScheduledUpdateGroupAction</a> operation.
    """

    ScheduledActionName: XmlStringMaxLen255
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    Recurrence: Optional[XmlStringMaxLen255] = None
    MinSize: Optional[AutoScalingGroupMinSize] = None
    MaxSize: Optional[AutoScalingGroupMaxSize] = None
    DesiredCapacity: Optional[AutoScalingGroupDesiredCapacity] = None
    TimeZone: Optional[XmlStringMaxLen255] = None


class InstancesDistribution(BaseModel):
    """
    <p>Describes an instances distribution for an Auto Scaling group with a <a>MixedInstancesPolicy</a>.</p> <p>The instances distribution specifies the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities.</p> <p>When you modify <code>SpotAllocationStrategy</code>, <code>SpotInstancePools</code>, or <code>SpotMaxPrice</code> in the <a>UpdateAutoScalingGroup</a> API call, this update action does not deploy any changes across the running Amazon EC2 instances in the group. Your existing Spot Instances continue to run as long as the maximum price for those instances is higher than the current Spot price. When scale out occurs, Amazon EC2 Auto Scaling launches instances based on the new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates instances according to the group's termination policies.</p>
    """

    OnDemandAllocationStrategy: Optional[XmlString] = None
    OnDemandBaseCapacity: Optional[OnDemandBaseCapacity] = None
    OnDemandPercentageAboveBaseCapacity: Optional[
        OnDemandPercentageAboveBaseCapacity
    ] = None
    SpotAllocationStrategy: Optional[XmlString] = None
    SpotInstancePools: Optional[SpotInstancePools] = None
    SpotMaxPrice: Optional[MixedInstanceSpotPrice] = None


class LifecycleHookSpecification(BaseModel):
    """
    <p>Describes information used to specify a lifecycle hook for an Auto Scaling group.</p> <p>A lifecycle hook tells Amazon EC2 Auto Scaling to perform an action on an instance when the instance launches (before it is put into service) or as the instance terminates (before it is fully terminated).</p> <p>This step is a part of the procedure for creating a lifecycle hook for an Auto Scaling group:</p> <ol> <li> <p>(Optional) Create a Lambda function and a rule that allows CloudWatch Events to invoke your Lambda function when Amazon EC2 Auto Scaling launches or terminates instances.</p> </li> <li> <p>(Optional) Create a notification target and an IAM role. The target can be either an Amazon SQS queue or an Amazon SNS topic. The role allows Amazon EC2 Auto Scaling to publish lifecycle notifications to the target.</p> </li> <li> <p> <b>Create the lifecycle hook. Specify whether the hook is used when the instances launch or terminate.</b> </p> </li> <li> <p>If you need more time, record the lifecycle action heartbeat to keep the instance in a pending state.</p> </li> <li> <p>If you finish before the timeout period ends, complete the lifecycle action.</p> </li> </ol> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html">Amazon EC2 Auto Scaling lifecycle hooks</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    """

    LifecycleHookName: AsciiStringMaxLen255
    LifecycleTransition: LifecycleTransition
    NotificationMetadata: Optional[XmlStringMaxLen1023] = None
    HeartbeatTimeout: Optional[HeartbeatTimeout] = None
    DefaultResult: Optional[LifecycleActionResult] = None
    NotificationTargetARN: Optional[NotificationTargetResourceName] = None
    RoleARN: Optional[XmlStringMaxLen255] = None


class Tag(BaseModel):
    """
    Describes a tag for an Auto Scaling group.
    """

    ResourceId: Optional[XmlString] = None
    ResourceType: Optional[XmlString] = None
    Key: TagKey
    Value: Optional[TagValue] = None
    PropagateAtLaunch: Optional[PropagateAtLaunch] = None


class BlockDeviceMapping(BaseModel):
    """
    Describes a block device mapping.
    """

    VirtualName: Optional[XmlStringMaxLen255] = None
    DeviceName: XmlStringMaxLen255
    Ebs: Optional[Ebs] = None
    NoDevice: Optional[NoDevice] = None


class DescribeAccountLimitsAnswer(BaseModel):
    MaxNumberOfAutoScalingGroups: Optional[MaxNumberOfAutoScalingGroups] = None
    MaxNumberOfLaunchConfigurations: Optional[MaxNumberOfLaunchConfigurations] = None
    NumberOfAutoScalingGroups: Optional[NumberOfAutoScalingGroups] = None
    NumberOfLaunchConfigurations: Optional[NumberOfLaunchConfigurations] = None


class DescribeAdjustmentTypesAnswer(BaseModel):
    AdjustmentTypes: Optional[AdjustmentTypes] = None


class AutoScalingInstancesType(BaseModel):
    AutoScalingInstances: Optional[AutoScalingInstances] = None
    NextToken: Optional[XmlString] = None


class DescribeAutoScalingNotificationTypesAnswer(BaseModel):
    AutoScalingNotificationTypes: Optional[AutoScalingNotificationTypes] = None


class DescribeLifecycleHookTypesAnswer(BaseModel):
    LifecycleHookTypes: Optional[AutoScalingNotificationTypes] = None


class ProcessesType(BaseModel):
    Processes: Optional[Processes] = None


class Filter(BaseModel):
    """
    <p>Describes a filter that is used to return a more specific list of results when describing tags.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html">Tagging Auto Scaling groups and instances</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    """

    Name: Optional[XmlString] = None
    Values: Optional[Values] = None


class DescribeTerminationPolicyTypesAnswer(BaseModel):
    TerminationPolicyTypes: Optional[TerminationPolicies] = None


class PolicyARNType(BaseModel):
    """
    Contains the output of PutScalingPolicy.
    """

    PolicyARN: Optional[ResourceName] = None
    Alarms: Optional[Alarms] = None


class StepAdjustment(BaseModel):
    """
    <p>Describes information used to create a step adjustment for a step scaling policy.</p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most, one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most, one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html#as-scaling-steps">Step adjustments</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.</p>
    """

    MetricIntervalLowerBound: Optional[MetricScale] = None
    MetricIntervalUpperBound: Optional[MetricScale] = None
    ScalingAdjustment: PolicyIncrement


class PredefinedMetricSpecification(PredictiveScalingPredefinedScalingMetric):
    """
    Represents a predefined metric for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.
    """

    pass


class CheckpointPercentages(BaseModel):
    __root__: List[NonZeroIntPercent]


class Activity(BaseModel):
    """
    Describes scaling activity, which is a long-running process that represents a change to your Auto Scaling group, such as changing its size or replacing an instance.
    """

    ActivityId: XmlString
    AutoScalingGroupName: XmlStringMaxLen255
    Description: Optional[XmlString] = None
    Cause: XmlStringMaxLen1023
    StartTime: TimestampType
    EndTime: Optional[TimestampType] = None
    StatusCode: ScalingActivityStatusCode
    StatusMessage: Optional[XmlStringMaxLen255] = None
    Progress: Optional[Progress] = None
    Details: Optional[XmlString] = None
    AutoScalingGroupState: Optional[AutoScalingGroupState] = None
    AutoScalingGroupARN: Optional[ResourceName] = None


class Activities(BaseModel):
    __root__: List[Activity]


class Instances(BaseModel):
    __root__: List[Instance]


class SuspendedProcesses(BaseModel):
    __root__: List[SuspendedProcess]


class EnabledMetrics(BaseModel):
    __root__: List[EnabledMetric]


class TagDescriptionList(BaseModel):
    __root__: List[TagDescription]


class WarmPoolConfiguration(BaseModel):
    """
    Describes a warm pool configuration.
    """

    MaxGroupPreparedCapacity: Optional[MaxGroupPreparedCapacity] = None
    MinSize: Optional[WarmPoolMinSize] = None
    PoolState: Optional[WarmPoolState] = None
    Status: Optional[WarmPoolStatus] = None


class FailedScheduledUpdateGroupActionRequests(BaseModel):
    __root__: List[FailedScheduledUpdateGroupActionRequest]


class ScheduledUpdateGroupActionRequests(BaseModel):
    __root__: List[ScheduledUpdateGroupActionRequest]


class BatchPutScheduledUpdateGroupActionType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    ScheduledUpdateGroupActions: ScheduledUpdateGroupActionRequests


class BlockDeviceMappings(BaseModel):
    __root__: List[BlockDeviceMapping]


class LifecycleHookSpecifications(BaseModel):
    __root__: List[LifecycleHookSpecification]


class Tags2(BaseModel):
    __root__: List[Tag]


class CreateLaunchConfigurationType(BaseModel):
    LaunchConfigurationName: XmlStringMaxLen255
    ImageId: Optional[XmlStringMaxLen255] = None
    KeyName: Optional[XmlStringMaxLen255] = None
    SecurityGroups: Optional[SecurityGroups] = None
    ClassicLinkVPCId: Optional[XmlStringMaxLen255] = None
    ClassicLinkVPCSecurityGroups: Optional[ClassicLinkVPCSecurityGroups] = None
    UserData: Optional[XmlStringUserData] = None
    InstanceId: Optional[XmlStringMaxLen19] = None
    InstanceType: Optional[XmlStringMaxLen255] = None
    KernelId: Optional[XmlStringMaxLen255] = None
    RamdiskId: Optional[XmlStringMaxLen255] = None
    BlockDeviceMappings: Optional[BlockDeviceMappings] = None
    InstanceMonitoring: Optional[InstanceMonitoring] = None
    SpotPrice: Optional[SpotPrice] = None
    IamInstanceProfile: Optional[XmlStringMaxLen1600] = None
    EbsOptimized: Optional[EbsOptimized] = None
    AssociatePublicIpAddress: Optional[AssociatePublicIpAddress] = None
    PlacementTenancy: Optional[XmlStringMaxLen64] = None
    MetadataOptions: Optional[InstanceMetadataOptions] = None


class CreateOrUpdateTagsType(BaseModel):
    Tags: Tags2


class MetricDimensions(BaseModel):
    __root__: List[MetricDimension]


class DeleteTagsType(BaseModel):
    Tags: Tags2


class LifecycleHooks(BaseModel):
    __root__: List[LifecycleHook]


class LoadBalancerTargetGroupStates(BaseModel):
    __root__: List[LoadBalancerTargetGroupState]


class LoadBalancerStates(BaseModel):
    __root__: List[LoadBalancerState]


class MetricCollectionTypes(BaseModel):
    __root__: List[MetricCollectionType]


class MetricGranularityTypes(BaseModel):
    __root__: List[MetricGranularityType]


class NotificationConfigurations(BaseModel):
    __root__: List[NotificationConfiguration]


class Filters(BaseModel):
    __root__: List[Filter]


class DescribeTagsType(BaseModel):
    Filters: Optional[Filters] = None
    NextToken: Optional[XmlString] = None
    MaxRecords: Optional[MaxRecords] = None


class InstanceRefreshProgressDetails(BaseModel):
    """
    Reports the progress of an instance refresh on an Auto Scaling group that has a warm pool. This includes separate details for instances in the warm pool and instances in the Auto Scaling group (the live pool).
    """

    LivePoolProgress: Optional[InstanceRefreshLivePoolProgress] = None
    WarmPoolProgress: Optional[InstanceRefreshWarmPoolProgress] = None


class RefreshPreferences(BaseModel):
    """
    Describes the preferences for an instance refresh.
    """

    MinHealthyPercentage: Optional[IntPercent] = None
    InstanceWarmup: Optional[RefreshInstanceWarmup] = None
    CheckpointPercentages: Optional[CheckpointPercentages] = None
    CheckpointDelay: Optional[CheckpointDelay] = None
    SkipMatching: Optional[SkipMatching] = None


class LaunchConfiguration(BaseModel):
    """
    Describes a launch configuration.
    """

    LaunchConfigurationName: XmlStringMaxLen255
    LaunchConfigurationARN: Optional[ResourceName] = None
    ImageId: XmlStringMaxLen255
    KeyName: Optional[XmlStringMaxLen255] = None
    SecurityGroups: Optional[SecurityGroups] = None
    ClassicLinkVPCId: Optional[XmlStringMaxLen255] = None
    ClassicLinkVPCSecurityGroups: Optional[ClassicLinkVPCSecurityGroups] = None
    UserData: Optional[XmlStringUserData] = None
    InstanceType: XmlStringMaxLen255
    KernelId: Optional[XmlStringMaxLen255] = None
    RamdiskId: Optional[XmlStringMaxLen255] = None
    BlockDeviceMappings: Optional[BlockDeviceMappings] = None
    InstanceMonitoring: Optional[InstanceMonitoring] = None
    SpotPrice: Optional[SpotPrice] = None
    IamInstanceProfile: Optional[XmlStringMaxLen1600] = None
    CreatedTime: TimestampType
    EbsOptimized: Optional[EbsOptimized] = None
    AssociatePublicIpAddress: Optional[AssociatePublicIpAddress] = None
    PlacementTenancy: Optional[XmlStringMaxLen64] = None
    MetadataOptions: Optional[InstanceMetadataOptions] = None


class LaunchConfigurations(BaseModel):
    __root__: List[LaunchConfiguration]


class Overrides(BaseModel):
    __root__: List[LaunchTemplateOverrides]


class PredictiveScalingMetricSpecification(BaseModel):
    """
    <p>This structure specifies the metrics and target utilization settings for a predictive scaling policy. </p> <p>You must specify either a metric pair, or a load metric and a scaling metric individually. Specifying a metric pair instead of individual metrics provides a simpler way to configure metrics for a scaling policy. You choose the metric pair, and the policy automatically knows the correct sum and average statistics to use for the load metric and the scaling metric.</p> <p>Example</p> <ul> <li> <p>You create a predictive scaling policy and specify <code>ALBRequestCount</code> as the value for the metric pair and <code>1000.0</code> as the target value. For this type of metric, you must provide the metric dimension for the corresponding target group, so you also provide a resource label for the Application Load Balancer target group that is attached to your Auto Scaling group.</p> </li> <li> <p>The number of requests the target group receives per minute provides the load metric, and the request count averaged between the members of the target group provides the scaling metric. In CloudWatch, this refers to the <code>RequestCount</code> and <code>RequestCountPerTarget</code> metrics, respectively.</p> </li> <li> <p>For optimal use of predictive scaling, you adhere to the best practice of using a dynamic scaling policy to automatically scale between the minimum capacity and maximum capacity in response to real-time changes in resource utilization.</p> </li> <li> <p>Amazon EC2 Auto Scaling consumes data points for the load metric over the last 14 days and creates an hourly load forecast for predictive scaling. (A minimum of 24 hours of data is required.)</p> </li> <li> <p>After creating the load forecast, Amazon EC2 Auto Scaling determines when to reduce or increase the capacity of your Auto Scaling group in each hour of the forecast period so that the average number of requests received by each instance is as close to 1000 requests per minute as possible at all times.</p> </li> </ul>
    """

    TargetValue: MetricScale
    PredefinedMetricPairSpecification: Optional[
        PredictiveScalingPredefinedMetricPair
    ] = None
    PredefinedScalingMetricSpecification: Optional[
        PredictiveScalingPredefinedScalingMetric
    ] = None
    PredefinedLoadMetricSpecification: Optional[
        PredictiveScalingPredefinedLoadMetric
    ] = None


class LoadForecast(BaseModel):
    """
    A <code>GetPredictiveScalingForecast</code> call returns the load forecast for a predictive scaling policy. This structure includes the data points for that load forecast, along with the timestamps of those data points and the metric specification.
    """

    Timestamps: PredictiveScalingForecastTimestamps
    Values: PredictiveScalingForecastValues
    MetricSpecification: PredictiveScalingMetricSpecification


class StepAdjustments(BaseModel):
    __root__: List[StepAdjustment]


class ScheduledUpdateGroupActions(BaseModel):
    __root__: List[ScheduledUpdateGroupAction]


class BatchDeleteScheduledActionAnswer(BaseModel):
    FailedScheduledActions: Optional[FailedScheduledUpdateGroupActionRequests] = None


class BatchPutScheduledUpdateGroupActionAnswer(BaseModel):
    FailedScheduledUpdateGroupActions: Optional[
        FailedScheduledUpdateGroupActionRequests
    ] = None


class LaunchTemplate(BaseModel):
    """
    <p>Describes a launch template and overrides. </p> <p>You specify these properties as part of a mixed instances policy. </p> <p>When you update the launch template or overrides in the <a>UpdateAutoScalingGroup</a> API call, existing Amazon EC2 instances continue to run. When scale out occurs, Amazon EC2 Auto Scaling launches instances to match the new settings. When scale in occurs, Amazon EC2 Auto Scaling terminates instances according to the group's termination policies.</p>
    """

    LaunchTemplateSpecification: Optional[LaunchTemplateSpecification] = None
    Overrides: Optional[Overrides] = None


class LaunchConfigurationsType(BaseModel):
    LaunchConfigurations: LaunchConfigurations
    NextToken: Optional[XmlString] = None


class DescribeLifecycleHooksAnswer(BaseModel):
    LifecycleHooks: Optional[LifecycleHooks] = None


class DescribeLoadBalancerTargetGroupsResponse(BaseModel):
    LoadBalancerTargetGroups: Optional[LoadBalancerTargetGroupStates] = None
    NextToken: Optional[XmlString] = None


class DescribeLoadBalancersResponse(BaseModel):
    LoadBalancers: Optional[LoadBalancerStates] = None
    NextToken: Optional[XmlString] = None


class DescribeMetricCollectionTypesAnswer(BaseModel):
    Metrics: Optional[MetricCollectionTypes] = None
    Granularities: Optional[MetricGranularityTypes] = None


class DescribeNotificationConfigurationsAnswer(BaseModel):
    NotificationConfigurations: NotificationConfigurations
    NextToken: Optional[XmlString] = None


class ActivitiesType(BaseModel):
    Activities: Activities
    NextToken: Optional[XmlString] = None


class ScheduledActionsType(BaseModel):
    ScheduledUpdateGroupActions: Optional[ScheduledUpdateGroupActions] = None
    NextToken: Optional[XmlString] = None


class TagsType(BaseModel):
    Tags: Optional[TagDescriptionList] = None
    NextToken: Optional[XmlString] = None


class DescribeWarmPoolAnswer(BaseModel):
    WarmPoolConfiguration: Optional[WarmPoolConfiguration] = None
    Instances: Optional[Instances] = None
    NextToken: Optional[XmlString] = None


class DetachInstancesAnswer(BaseModel):
    Activities: Optional[Activities] = None


class EnterStandbyAnswer(DetachInstancesAnswer):
    pass


class ExitStandbyAnswer(DetachInstancesAnswer):
    pass


class CustomizedMetricSpecification(BaseModel):
    """
    <p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Amazon EC2 Auto Scaling.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.</p> </li> </ul> <p>For more information about CloudWatch, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch Concepts</a>.</p>
    """

    MetricName: MetricName
    Namespace: MetricNamespace
    Dimensions: Optional[MetricDimensions] = None
    Statistic: MetricStatistic
    Unit: Optional[MetricUnit] = None


class PredictiveScalingMetricSpecifications(BaseModel):
    __root__: List[PredictiveScalingMetricSpecification]


class MixedInstancesPolicy(BaseModel):
    """
    Describes a mixed instances policy. A mixed instances policy contains the instance types Amazon EC2 Auto Scaling can launch, and other information Amazon EC2 Auto Scaling can use to launch instances to help you optimize your costs. For more information, see <a href="https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html">Auto Scaling groups with multiple instance types and purchase options</a> in the <i>Amazon EC2 Auto Scaling User Guide</i>.
    """

    LaunchTemplate: Optional[LaunchTemplate] = None
    InstancesDistribution: Optional[InstancesDistribution] = None


class ActivityType(BaseModel):
    Activity: Optional[Activity] = None


class AutoScalingGroup(BaseModel):
    """
    Describes an Auto Scaling group.
    """

    AutoScalingGroupName: XmlStringMaxLen255
    AutoScalingGroupARN: Optional[ResourceName] = None
    LaunchConfigurationName: Optional[XmlStringMaxLen255] = None
    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    MixedInstancesPolicy: Optional[MixedInstancesPolicy] = None
    MinSize: AutoScalingGroupMinSize
    MaxSize: AutoScalingGroupMaxSize
    DesiredCapacity: AutoScalingGroupDesiredCapacity
    PredictedCapacity: Optional[AutoScalingGroupPredictedCapacity] = None
    DefaultCooldown: Cooldown
    AvailabilityZones: AvailabilityZones
    LoadBalancerNames: Optional[LoadBalancerNames] = None
    TargetGroupARNs: Optional[TargetGroupARNs] = None
    HealthCheckType: XmlStringMaxLen32
    HealthCheckGracePeriod: Optional[HealthCheckGracePeriod] = None
    Instances: Optional[Instances] = None
    CreatedTime: TimestampType
    SuspendedProcesses: Optional[SuspendedProcesses] = None
    PlacementGroup: Optional[XmlStringMaxLen255] = None
    VPCZoneIdentifier: Optional[XmlStringMaxLen2047] = None
    EnabledMetrics: Optional[EnabledMetrics] = None
    Status: Optional[XmlStringMaxLen255] = None
    Tags: Optional[TagDescriptionList] = None
    TerminationPolicies: Optional[TerminationPolicies] = None
    NewInstancesProtectedFromScaleIn: Optional[InstanceProtected] = None
    ServiceLinkedRoleARN: Optional[ResourceName] = None
    MaxInstanceLifetime: Optional[MaxInstanceLifetime] = None
    CapacityRebalance: Optional[CapacityRebalanceEnabled] = None
    WarmPoolConfiguration: Optional[WarmPoolConfiguration] = None
    WarmPoolSize: Optional[WarmPoolSize] = None
    Context: Optional[Context] = None


class AutoScalingGroups(BaseModel):
    __root__: List[AutoScalingGroup]


class CreateAutoScalingGroupType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    LaunchConfigurationName: Optional[XmlStringMaxLen255] = None
    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    MixedInstancesPolicy: Optional[MixedInstancesPolicy] = None
    InstanceId: Optional[XmlStringMaxLen19] = None
    MinSize: AutoScalingGroupMinSize
    MaxSize: AutoScalingGroupMaxSize
    DesiredCapacity: Optional[AutoScalingGroupDesiredCapacity] = None
    DefaultCooldown: Optional[Cooldown] = None
    AvailabilityZones: Optional[AvailabilityZones] = None
    LoadBalancerNames: Optional[LoadBalancerNames] = None
    TargetGroupARNs: Optional[TargetGroupARNs] = None
    HealthCheckType: Optional[XmlStringMaxLen32] = None
    HealthCheckGracePeriod: Optional[HealthCheckGracePeriod] = None
    PlacementGroup: Optional[XmlStringMaxLen255] = None
    VPCZoneIdentifier: Optional[XmlStringMaxLen2047] = None
    TerminationPolicies: Optional[TerminationPolicies] = None
    NewInstancesProtectedFromScaleIn: Optional[InstanceProtected] = None
    CapacityRebalance: Optional[CapacityRebalanceEnabled] = None
    LifecycleHookSpecificationList: Optional[LifecycleHookSpecifications] = None
    Tags: Optional[Tags2] = None
    ServiceLinkedRoleARN: Optional[ResourceName] = None
    MaxInstanceLifetime: Optional[MaxInstanceLifetime] = None
    Context: Optional[Context] = None


class DesiredConfiguration(BaseModel):
    """
    <p>Describes the desired configuration for an instance refresh. </p> <p>If you specify a desired configuration, you must specify either a <code>LaunchTemplate</code> or a <code>MixedInstancesPolicy</code>. </p>
    """

    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    MixedInstancesPolicy: Optional[MixedInstancesPolicy] = None


class LoadForecasts(BaseModel):
    __root__: List[LoadForecast]


class InstanceRefresh(BaseModel):
    """
    Describes an instance refresh for an Auto Scaling group.
    """

    InstanceRefreshId: Optional[XmlStringMaxLen255] = None
    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    Status: Optional[InstanceRefreshStatus] = None
    StatusReason: Optional[XmlStringMaxLen1023] = None
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    PercentageComplete: Optional[IntPercent] = None
    InstancesToUpdate: Optional[InstancesToUpdate] = None
    ProgressDetails: Optional[InstanceRefreshProgressDetails] = None
    Preferences: Optional[RefreshPreferences] = None
    DesiredConfiguration: Optional[DesiredConfiguration] = None


class PredictiveScalingConfiguration(BaseModel):
    """
    Represents a predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.
    """

    MetricSpecifications: PredictiveScalingMetricSpecifications
    Mode: Optional[PredictiveScalingMode] = None
    SchedulingBufferTime: Optional[PredictiveScalingSchedulingBufferTime] = None
    MaxCapacityBreachBehavior: Optional[
        PredictiveScalingMaxCapacityBreachBehavior
    ] = None
    MaxCapacityBuffer: Optional[PredictiveScalingMaxCapacityBuffer] = None


class TargetTrackingConfiguration(BaseModel):
    """
    Represents a target tracking scaling policy configuration to use with Amazon EC2 Auto Scaling.
    """

    PredefinedMetricSpecification: Optional[PredefinedMetricSpecification] = None
    CustomizedMetricSpecification: Optional[CustomizedMetricSpecification] = None
    TargetValue: MetricScale
    DisableScaleIn: Optional[DisableScaleIn] = None


class PutScalingPolicyType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    PolicyName: XmlStringMaxLen255
    PolicyType: Optional[XmlStringMaxLen64] = None
    AdjustmentType: Optional[XmlStringMaxLen255] = None
    MinAdjustmentStep: Optional[MinAdjustmentStep] = None
    MinAdjustmentMagnitude: Optional[MinAdjustmentMagnitude] = None
    ScalingAdjustment: Optional[PolicyIncrement] = None
    Cooldown: Optional[Cooldown] = None
    MetricAggregationType: Optional[XmlStringMaxLen32] = None
    StepAdjustments: Optional[StepAdjustments] = None
    EstimatedInstanceWarmup: Optional[EstimatedInstanceWarmup] = None
    TargetTrackingConfiguration: Optional[TargetTrackingConfiguration] = None
    Enabled: Optional[ScalingPolicyEnabled] = None
    PredictiveScalingConfiguration: Optional[PredictiveScalingConfiguration] = None


class ScalingPolicy(BaseModel):
    """
    Describes a scaling policy.
    """

    AutoScalingGroupName: Optional[XmlStringMaxLen255] = None
    PolicyName: Optional[XmlStringMaxLen255] = None
    PolicyARN: Optional[ResourceName] = None
    PolicyType: Optional[XmlStringMaxLen64] = None
    AdjustmentType: Optional[XmlStringMaxLen255] = None
    MinAdjustmentStep: Optional[MinAdjustmentStep] = None
    MinAdjustmentMagnitude: Optional[MinAdjustmentMagnitude] = None
    ScalingAdjustment: Optional[PolicyIncrement] = None
    Cooldown: Optional[Cooldown] = None
    StepAdjustments: Optional[StepAdjustments] = None
    MetricAggregationType: Optional[XmlStringMaxLen32] = None
    EstimatedInstanceWarmup: Optional[EstimatedInstanceWarmup] = None
    Alarms: Optional[Alarms] = None
    TargetTrackingConfiguration: Optional[TargetTrackingConfiguration] = None
    Enabled: Optional[ScalingPolicyEnabled] = None
    PredictiveScalingConfiguration: Optional[PredictiveScalingConfiguration] = None


class StartInstanceRefreshType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    Strategy: Optional[RefreshStrategy] = None
    DesiredConfiguration: Optional[DesiredConfiguration] = None
    Preferences: Optional[RefreshPreferences] = None


class UpdateAutoScalingGroupType(BaseModel):
    AutoScalingGroupName: XmlStringMaxLen255
    LaunchConfigurationName: Optional[XmlStringMaxLen255] = None
    LaunchTemplate: Optional[LaunchTemplateSpecification] = None
    MixedInstancesPolicy: Optional[MixedInstancesPolicy] = None
    MinSize: Optional[AutoScalingGroupMinSize] = None
    MaxSize: Optional[AutoScalingGroupMaxSize] = None
    DesiredCapacity: Optional[AutoScalingGroupDesiredCapacity] = None
    DefaultCooldown: Optional[Cooldown] = None
    AvailabilityZones: Optional[AvailabilityZones] = None
    HealthCheckType: Optional[XmlStringMaxLen32] = None
    HealthCheckGracePeriod: Optional[HealthCheckGracePeriod] = None
    PlacementGroup: Optional[XmlStringMaxLen255] = None
    VPCZoneIdentifier: Optional[XmlStringMaxLen2047] = None
    TerminationPolicies: Optional[TerminationPolicies] = None
    NewInstancesProtectedFromScaleIn: Optional[InstanceProtected] = None
    ServiceLinkedRoleARN: Optional[ResourceName] = None
    MaxInstanceLifetime: Optional[MaxInstanceLifetime] = None
    CapacityRebalance: Optional[CapacityRebalanceEnabled] = None
    Context: Optional[Context] = None


class AutoScalingGroupsType(BaseModel):
    AutoScalingGroups: AutoScalingGroups
    NextToken: Optional[XmlString] = None


class GetPredictiveScalingForecastAnswer(BaseModel):
    LoadForecast: LoadForecasts
    CapacityForecast: CapacityForecast
    UpdateTime: TimestampType


class InstanceRefreshes(BaseModel):
    __root__: List[InstanceRefresh]


class ScalingPolicies(BaseModel):
    __root__: List[ScalingPolicy]


class DescribeInstanceRefreshesAnswer(BaseModel):
    InstanceRefreshes: Optional[InstanceRefreshes] = None
    NextToken: Optional[XmlString] = None


class PoliciesType(BaseModel):
    ScalingPolicies: Optional[ScalingPolicies] = None
    NextToken: Optional[XmlString] = None

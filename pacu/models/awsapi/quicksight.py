# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:54:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class AccessDeniedException(BaseModel):
    __root__: Any


class InvalidParameterValueException(AccessDeniedException):
    pass


class ResourceNotFoundException(AccessDeniedException):
    pass


class ThrottlingException(AccessDeniedException):
    pass


class ResourceExistsException(AccessDeniedException):
    pass


class InternalFailureException(AccessDeniedException):
    pass


class Arn(BaseModel):
    __root__: str


class ResourceUnavailableException(AccessDeniedException):
    pass


class ConflictException(AccessDeniedException):
    pass


class UnsupportedUserEditionException(AccessDeniedException):
    pass


class Namespace(BaseModel):
    __root__: Annotated[str, Field(max_length=64, regex='^[a-zA-Z0-9._-]*$')]


class RowLevelPermissionPolicy(Enum):
    GRANT_ACCESS = 'GRANT_ACCESS'
    DENY_ACCESS = 'DENY_ACCESS'


class RowLevelPermissionFormatVersion(Enum):
    VERSION_1 = 'VERSION_1'
    VERSION_2 = 'VERSION_2'


class Status5(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class Boolean(BaseModel):
    __root__: bool


class LimitExceededException(AccessDeniedException):
    pass


class CopySourceArn(BaseModel):
    __root__: Annotated[
        str,
        Field(regex='^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+'),
    ]


class PreconditionNotMetException(AccessDeniedException):
    pass


class ConcurrentUpdatingException(AccessDeniedException):
    pass


class TemplateSourceTemplate(BaseModel):
    """
    The source template of the template.
    """

    Arn: Arn


class InvalidNextTokenException(AccessDeniedException):
    pass


class SessionLifetimeInMinutesInvalidException(AccessDeniedException):
    pass


class UnsupportedPricingPlanException(AccessDeniedException):
    pass


class QuickSightUserNotFoundException(AccessDeniedException):
    pass


class RestrictiveResourceId(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='[\\w\\-]+')]


class DomainNotWhitelistedException(AccessDeniedException):
    pass


class IdentityTypeNotSupportedException(AccessDeniedException):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class AccountCustomization(BaseModel):
    """
    The Amazon QuickSight customizations associated with your Amazon Web Services account or a Amazon QuickSight namespace in a specific Amazon Web Services Region;.
    """

    DefaultTheme: Optional[Arn] = None


class String(Arn):
    pass


class Edition(Enum):
    STANDARD = 'STANDARD'
    ENTERPRISE = 'ENTERPRISE'


class AccountSettings(BaseModel):
    """
    The Amazon QuickSight settings associated with your Amazon Web Services account.
    """

    AccountName: Optional[String] = None
    Edition: Optional[Edition] = None
    DefaultNamespace: Optional[Namespace] = None
    NotificationEmail: Optional[String] = None


class ActionList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=16, min_items=1)]


class IAMPolicyAssignmentName(BaseModel):
    __root__: Annotated[
        str, Field(min_length=1, regex='(?=^.{2,256}$)(?!.*\\s)[0-9a-zA-Z-_.:=+@]*$')
    ]


class ActiveIAMPolicyAssignment(BaseModel):
    """
    The active Identity and Access Management (IAM) policy assignment.
    """

    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    PolicyArn: Optional[Arn] = None


class ActiveIAMPolicyAssignmentList(BaseModel):
    __root__: List[ActiveIAMPolicyAssignment]


class AdditionalDashboardIdList(BaseModel):
    __root__: Annotated[List[RestrictiveResourceId], Field(max_items=20, min_items=1)]


class AliasName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048, min_length=1, regex='[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)'
        ),
    ]


class Domain(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class AnalysisName(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class ResourceStatus(Enum):
    CREATION_IN_PROGRESS = 'CREATION_IN_PROGRESS'
    CREATION_SUCCESSFUL = 'CREATION_SUCCESSFUL'
    CREATION_FAILED = 'CREATION_FAILED'
    UPDATE_IN_PROGRESS = 'UPDATE_IN_PROGRESS'
    UPDATE_SUCCESSFUL = 'UPDATE_SUCCESSFUL'
    UPDATE_FAILED = 'UPDATE_FAILED'
    DELETED = 'DELETED'


class DataSetArnsList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=100)]


class Timestamp(BaseModel):
    __root__: datetime


class AnalysisErrorType(Enum):
    ACCESS_DENIED = 'ACCESS_DENIED'
    SOURCE_NOT_FOUND = 'SOURCE_NOT_FOUND'
    DATA_SET_NOT_FOUND = 'DATA_SET_NOT_FOUND'
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'
    PARAMETER_VALUE_INCOMPATIBLE = 'PARAMETER_VALUE_INCOMPATIBLE'
    PARAMETER_TYPE_INVALID = 'PARAMETER_TYPE_INVALID'
    PARAMETER_NOT_FOUND = 'PARAMETER_NOT_FOUND'
    COLUMN_TYPE_MISMATCH = 'COLUMN_TYPE_MISMATCH'
    COLUMN_GEOGRAPHIC_ROLE_MISMATCH = 'COLUMN_GEOGRAPHIC_ROLE_MISMATCH'
    COLUMN_REPLACEMENT_MISSING = 'COLUMN_REPLACEMENT_MISSING'


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(regex='.*\\S.*')]


class AnalysisError(BaseModel):
    """
    Analysis error.
    """

    Type: Optional[AnalysisErrorType] = None
    Message: Optional[NonEmptyString] = None


class AnalysisFilterAttribute(Enum):
    QUICKSIGHT_USER = 'QUICKSIGHT_USER'


class FilterOperator(Enum):
    StringEquals = 'StringEquals'


class AnalysisSummary(BaseModel):
    """
    The summary metadata that describes an analysis.
    """

    Arn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    Name: Optional[AnalysisName] = None
    Status: Optional[ResourceStatus] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class AnalysisSummaryList(BaseModel):
    __root__: Annotated[List[AnalysisSummary], Field(max_items=100)]


class ArnList(BaseModel):
    __root__: List[Arn]


class AssignmentStatus(Enum):
    ENABLED = 'ENABLED'
    DRAFT = 'DRAFT'
    DISABLED = 'DISABLED'


class WorkGroup(TagKey):
    pass


class Host(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=65535.0)]


class Database(TagKey):
    pass


class AwsAccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='^[0-9]{12}$')]


class AwsAndAccountId(BaseModel):
    __root__: Annotated[str, Field(regex='^(aws|[0-9]{12})$')]


class DataSetName(TagKey):
    pass


class Boolean1(Boolean):
    pass


class BorderStyle(BaseModel):
    """
    The display options for tile borders for visuals.
    """

    Show: Optional[Boolean1] = None


class ColumnName(TagKey):
    pass


class ColumnId(Domain):
    pass


class Expression(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1)]


class CalculatedColumn(BaseModel):
    """
    A calculated column for a dataset.
    """

    ColumnName: ColumnName
    ColumnId: ColumnId
    Expression: Expression


class CalculatedColumnList(BaseModel):
    __root__: Annotated[List[CalculatedColumn], Field(max_items=128, min_items=1)]


class StringModel(Arn):
    pass


class IngestionId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9-_]+$')
    ]


class CancelIngestionRequest(BaseModel):
    pass


class StatusCode(BaseModel):
    __root__: int


class ColumnDataType(Enum):
    STRING = 'STRING'
    INTEGER = 'INTEGER'
    DECIMAL = 'DECIMAL'
    DATETIME = 'DATETIME'


class TypeCastFormat(BaseModel):
    __root__: Annotated[str, Field(max_length=32)]


class CastColumnTypeOperation(BaseModel):
    """
    A transform operation that casts a column to a different type.
    """

    ColumnName: ColumnName
    NewColumnType: ColumnDataType
    Format: Optional[TypeCastFormat] = None


class Catalog(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class ClusterId(Domain):
    pass


class HexColor(BaseModel):
    __root__: Annotated[str, Field(regex='^#[A-F0-9]{6}$')]


class ColorList(BaseModel):
    __root__: Annotated[List[HexColor], Field(max_items=100)]


class ColumnDescriptiveText(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=0)]


class ColumnDescription(BaseModel):
    """
    Metadata that contains a description for a column.
    """

    Text: Optional[ColumnDescriptiveText] = None


class ColumnGroupColumnSchema(BaseModel):
    """
    A structure describing the name, data type, and geographic role of the columns.
    """

    Name: Optional[String] = None


class ColumnGroupColumnSchemaList(BaseModel):
    __root__: Annotated[List[ColumnGroupColumnSchema], Field(max_items=500)]


class ColumnGroupName(Domain):
    pass


class ColumnGroupSchema(BaseModel):
    """
    The column group schema.
    """

    Name: Optional[String] = None
    ColumnGroupColumnSchemaList: Optional[ColumnGroupColumnSchemaList] = None


class ColumnGroupSchemaList(BaseModel):
    __root__: Annotated[List[ColumnGroupSchema], Field(max_items=500)]


class PrincipalList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=100, min_items=1)]


class ColumnNameList(BaseModel):
    __root__: Annotated[List[String], Field(min_items=1)]


class ColumnList(BaseModel):
    __root__: Annotated[List[ColumnName], Field(max_items=16, min_items=1)]


class ColumnSchema(BaseModel):
    """
    The column schema.
    """

    Name: Optional[String] = None
    DataType: Optional[String] = None
    GeographicRole: Optional[String] = None


class ColumnSchemaList(BaseModel):
    __root__: Annotated[List[ColumnSchema], Field(max_items=500)]


class GeoSpatialDataRole(Enum):
    COUNTRY = 'COUNTRY'
    STATE = 'STATE'
    COUNTY = 'COUNTY'
    CITY = 'CITY'
    POSTCODE = 'POSTCODE'
    LONGITUDE = 'LONGITUDE'
    LATITUDE = 'LATITUDE'


class ColumnTag(BaseModel):
    """
    A tag for a column in a <a>TagColumnOperation</a> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    ColumnGeographicRole: Optional[GeoSpatialDataRole] = None
    ColumnDescription: Optional[ColumnDescription] = None


class ColumnTagList(BaseModel):
    __root__: Annotated[List[ColumnTag], Field(max_items=16, min_items=1)]


class ColumnTagName(Enum):
    COLUMN_GEOGRAPHIC_ROLE = 'COLUMN_GEOGRAPHIC_ROLE'
    COLUMN_DESCRIPTION = 'COLUMN_DESCRIPTION'


class ColumnTagNames(BaseModel):
    __root__: List[ColumnTagName]


class CreateColumnsOperation(BaseModel):
    """
    A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.
    """

    Columns: CalculatedColumnList


class DashboardName(AnalysisName):
    pass


class VersionDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class ResourceId(Arn):
    pass


class ResourceName(TagKey):
    pass


class PhysicalTableMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LogicalTableMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DataSetImportMode(Enum):
    SPICE = 'SPICE'
    DIRECT_QUERY = 'DIRECT_QUERY'


class FieldFolderMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class RowLevelPermissionDataSet(BaseModel):
    """
    <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
    """

    Namespace: Optional[Namespace] = None
    Arn: Arn
    PermissionPolicy: RowLevelPermissionPolicy
    FormatVersion: Optional[RowLevelPermissionFormatVersion] = None
    Status: Optional[Status5] = None


class DataSetUsageConfiguration(BaseModel):
    """
    The usage configuration to apply to child datasets that reference this dataset as a source.
    """

    DisableUseAsDirectQuerySource: Optional[Boolean] = None
    DisableUseAsImportedSource: Optional[Boolean] = None


class DataSourceType(Enum):
    ADOBE_ANALYTICS = 'ADOBE_ANALYTICS'
    AMAZON_ELASTICSEARCH = 'AMAZON_ELASTICSEARCH'
    ATHENA = 'ATHENA'
    AURORA = 'AURORA'
    AURORA_POSTGRESQL = 'AURORA_POSTGRESQL'
    AWS_IOT_ANALYTICS = 'AWS_IOT_ANALYTICS'
    GITHUB = 'GITHUB'
    JIRA = 'JIRA'
    MARIADB = 'MARIADB'
    MYSQL = 'MYSQL'
    ORACLE = 'ORACLE'
    POSTGRESQL = 'POSTGRESQL'
    PRESTO = 'PRESTO'
    REDSHIFT = 'REDSHIFT'
    S3 = 'S3'
    SALESFORCE = 'SALESFORCE'
    SERVICENOW = 'SERVICENOW'
    SNOWFLAKE = 'SNOWFLAKE'
    SPARK = 'SPARK'
    SQLSERVER = 'SQLSERVER'
    TERADATA = 'TERADATA'
    TWITTER = 'TWITTER'
    TIMESTREAM = 'TIMESTREAM'
    AMAZON_OPENSEARCH = 'AMAZON_OPENSEARCH'


class VpcConnectionProperties(BaseModel):
    """
    VPC connection properties.
    """

    VpcConnectionArn: Arn


class SslProperties(BaseModel):
    """
    Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
    """

    DisableSsl: Optional[Boolean] = None


class MemberType(Enum):
    DASHBOARD = 'DASHBOARD'
    ANALYSIS = 'ANALYSIS'
    DATASET = 'DATASET'


class CreateFolderMembershipRequest(BaseModel):
    pass


class FolderMember(BaseModel):
    """
    An asset in a folder, such as a dashboard, analysis, or dataset.
    """

    MemberId: Optional[RestrictiveResourceId] = None
    MemberType: Optional[MemberType] = None


class FolderName(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=1)]


class FolderType(Enum):
    SHARED = 'SHARED'


class GroupMemberName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[\\u0020-\\u00FF]+')
    ]


class GroupName(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[\\u0020-\\u00FF]+')]


class CreateGroupMembershipRequest(BaseModel):
    pass


class GroupMember(BaseModel):
    """
    A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .
    """

    Arn: Optional[Arn] = None
    MemberName: Optional[GroupMemberName] = None


class GroupDescription(VersionDescription):
    pass


class CreateGroupRequest(BaseModel):
    """
    The request object for this operation.
    """

    GroupName: GroupName
    Description: Optional[GroupDescription] = None


class Group(BaseModel):
    """
    A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security.
    """

    Arn: Optional[Arn] = None
    GroupName: Optional[GroupName] = None
    Description: Optional[GroupDescription] = None
    PrincipalId: Optional[String] = None


class IdentityMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateIAMPolicyAssignmentRequest(BaseModel):
    AssignmentName: IAMPolicyAssignmentName
    AssignmentStatus: AssignmentStatus
    PolicyArn: Optional[Arn] = None
    Identities: Optional[IdentityMap] = None


class CreateIngestionRequest(BaseModel):
    pass


class IngestionStatus(Enum):
    INITIALIZED = 'INITIALIZED'
    QUEUED = 'QUEUED'
    RUNNING = 'RUNNING'
    FAILED = 'FAILED'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'


class IdentityStore(Enum):
    QUICKSIGHT = 'QUICKSIGHT'


class NamespaceStatus(Enum):
    CREATED = 'CREATED'
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    RETRYABLE_FAILURE = 'RETRYABLE_FAILURE'
    NON_RETRYABLE_FAILURE = 'NON_RETRYABLE_FAILURE'


class VersionNumber(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class CreateTemplateAliasRequest(BaseModel):
    TemplateVersionNumber: VersionNumber


class TemplateAlias(BaseModel):
    """
    The template alias.
    """

    AliasName: Optional[AliasName] = None
    Arn: Optional[Arn] = None
    TemplateVersionNumber: Optional[VersionNumber] = None


class TemplateName(AnalysisName):
    pass


class CreateThemeAliasRequest(BaseModel):
    ThemeVersionNumber: VersionNumber


class ThemeAlias(BaseModel):
    """
    An alias for a theme.
    """

    Arn: Optional[Arn] = None
    AliasName: Optional[AliasName] = None
    ThemeVersionNumber: Optional[VersionNumber] = None


class ThemeName(AnalysisName):
    pass


class Username(Domain):
    pass


class Password(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class CustomSqlName(Domain):
    pass


class SqlQuery(BaseModel):
    __root__: Annotated[str, Field(max_length=65536, min_length=1)]


class DashboardError(AnalysisError):
    """
    Dashboard error.
    """

    pass


class DashboardErrorList(BaseModel):
    __root__: Annotated[List[DashboardError], Field(min_items=1)]


class DashboardSummary(BaseModel):
    """
    Dashboard summary.
    """

    Arn: Optional[Arn] = None
    DashboardId: Optional[RestrictiveResourceId] = None
    Name: Optional[DashboardName] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    PublishedVersionNumber: Optional[VersionNumber] = None
    LastPublishedTime: Optional[Timestamp] = None


class DashboardSummaryList(BaseModel):
    __root__: Annotated[List[DashboardSummary], Field(max_items=100)]


class DashboardUIState(Enum):
    EXPANDED = 'EXPANDED'
    COLLAPSED = 'COLLAPSED'


class DashboardVersionSummary(BaseModel):
    """
    Dashboard version summary.
    """

    Arn: Optional[Arn] = None
    CreatedTime: Optional[Timestamp] = None
    VersionNumber: Optional[VersionNumber] = None
    Status: Optional[ResourceStatus] = None
    SourceEntityArn: Optional[Arn] = None
    Description: Optional[VersionDescription] = None


class DashboardVersionSummaryList(BaseModel):
    __root__: Annotated[List[DashboardVersionSummary], Field(max_items=100)]


class Long(StatusCode):
    pass


class DataSetSchema(BaseModel):
    """
    Dataset schema.
    """

    ColumnSchemaList: Optional[ColumnSchemaList] = None


class DataSetConfiguration(BaseModel):
    """
    Dataset configuration.
    """

    Placeholder: Optional[String] = None
    DataSetSchema: Optional[DataSetSchema] = None
    ColumnGroupSchemaList: Optional[ColumnGroupSchemaList] = None


class DataSetConfigurationList(BaseModel):
    __root__: Annotated[List[DataSetConfiguration], Field(max_items=30)]


class DataSetReference(BaseModel):
    """
    Dataset reference.
    """

    DataSetPlaceholder: NonEmptyString
    DataSetArn: Arn


class DataSetSummary(BaseModel):
    """
    Dataset summary.
    """

    Arn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    Name: Optional[ResourceName] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    ImportMode: Optional[DataSetImportMode] = None
    RowLevelPermissionDataSet: Optional[RowLevelPermissionDataSet] = None
    RowLevelPermissionTagConfigurationApplied: Optional[Boolean] = None
    ColumnLevelPermissionRulesApplied: Optional[Boolean] = None


class DataSetSummaryList(BaseModel):
    __root__: List[DataSetSummary]


class DataSourceErrorInfoType(Enum):
    ACCESS_DENIED = 'ACCESS_DENIED'
    COPY_SOURCE_NOT_FOUND = 'COPY_SOURCE_NOT_FOUND'
    TIMEOUT = 'TIMEOUT'
    ENGINE_VERSION_NOT_SUPPORTED = 'ENGINE_VERSION_NOT_SUPPORTED'
    UNKNOWN_HOST = 'UNKNOWN_HOST'
    GENERIC_SQL_FAILURE = 'GENERIC_SQL_FAILURE'
    CONFLICT = 'CONFLICT'
    UNKNOWN = 'UNKNOWN'


class TimestampList(BaseModel):
    __root__: List[Timestamp]


class DateTimeParameter(BaseModel):
    """
    A date-time parameter.
    """

    Name: NonEmptyString
    Values: TimestampList


class DeleteAccountCustomizationRequest(BaseModel):
    pass


class RecoveryWindowInDays(BaseModel):
    __root__: Annotated[int, Field(ge=7.0, le=30.0)]


class DeleteAnalysisRequest(BaseModel):
    pass


class DeleteDashboardRequest(BaseModel):
    pass


class DeleteDataSetRequest(BaseModel):
    pass


class DeleteDataSourceRequest(BaseModel):
    pass


class DeleteFolderMembershipRequest(BaseModel):
    pass


class DeleteFolderRequest(BaseModel):
    pass


class DeleteGroupMembershipRequest(BaseModel):
    pass


class DeleteGroupRequest(BaseModel):
    pass


class DeleteIAMPolicyAssignmentRequest(BaseModel):
    pass


class DeleteNamespaceRequest(BaseModel):
    pass


class DeleteTemplateAliasRequest(BaseModel):
    pass


class DeleteTemplateRequest(BaseModel):
    pass


class DeleteThemeAliasRequest(BaseModel):
    pass


class DeleteThemeRequest(BaseModel):
    pass


class DeleteUserByPrincipalIdRequest(BaseModel):
    """
    <p/>
    """

    pass


class UserName(GroupName):
    pass


class DeleteUserRequest(BaseModel):
    pass


class Delimiter(BaseModel):
    __root__: Annotated[str, Field(max_length=1, min_length=1)]


class DescribeAccountCustomizationRequest(BaseModel):
    pass


class DescribeAccountSettingsRequest(BaseModel):
    pass


class DescribeAnalysisPermissionsRequest(BaseModel):
    pass


class DescribeAnalysisRequest(BaseModel):
    pass


class DescribeDashboardPermissionsRequest(BaseModel):
    pass


class DescribeDashboardRequest(BaseModel):
    pass


class DescribeDataSetPermissionsRequest(BaseModel):
    pass


class DescribeDataSetRequest(BaseModel):
    pass


class DescribeDataSourcePermissionsRequest(BaseModel):
    pass


class DescribeDataSourceRequest(BaseModel):
    pass


class DescribeFolderPermissionsRequest(BaseModel):
    pass


class DescribeFolderRequest(BaseModel):
    pass


class DescribeFolderResolvedPermissionsRequest(BaseModel):
    pass


class DescribeGroupRequest(BaseModel):
    pass


class DescribeIAMPolicyAssignmentRequest(BaseModel):
    pass


class IAMPolicyAssignment(BaseModel):
    """
    An Identity and Access Management (IAM) policy assignment.
    """

    AwsAccountId: Optional[AwsAccountId] = None
    AssignmentId: Optional[String] = None
    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    PolicyArn: Optional[Arn] = None
    Identities: Optional[IdentityMap] = None
    AssignmentStatus: Optional[AssignmentStatus] = None


class DescribeIngestionRequest(BaseModel):
    pass


class DescribeNamespaceRequest(BaseModel):
    pass


class DescribeTemplateAliasRequest(BaseModel):
    pass


class DescribeTemplatePermissionsRequest(BaseModel):
    pass


class DescribeTemplateRequest(BaseModel):
    pass


class DescribeThemeAliasRequest(BaseModel):
    pass


class DescribeThemePermissionsRequest(BaseModel):
    pass


class DescribeThemeRequest(BaseModel):
    pass


class DescribeUserRequest(BaseModel):
    pass


class Double(BaseModel):
    __root__: float


class EmbeddingIdentityType(Enum):
    IAM = 'IAM'
    QUICKSIGHT = 'QUICKSIGHT'
    ANONYMOUS = 'ANONYMOUS'


class EmbeddingUrl(BaseModel):
    __root__: SecretStr


class EntryPath(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class EntryPoint(EntryPath):
    pass


class IngestionErrorType(Enum):
    FAILURE_TO_ASSUME_ROLE = 'FAILURE_TO_ASSUME_ROLE'
    INGESTION_SUPERSEDED = 'INGESTION_SUPERSEDED'
    INGESTION_CANCELED = 'INGESTION_CANCELED'
    DATA_SET_DELETED = 'DATA_SET_DELETED'
    DATA_SET_NOT_SPICE = 'DATA_SET_NOT_SPICE'
    S3_UPLOADED_FILE_DELETED = 'S3_UPLOADED_FILE_DELETED'
    S3_MANIFEST_ERROR = 'S3_MANIFEST_ERROR'
    DATA_TOLERANCE_EXCEPTION = 'DATA_TOLERANCE_EXCEPTION'
    SPICE_TABLE_NOT_FOUND = 'SPICE_TABLE_NOT_FOUND'
    DATA_SET_SIZE_LIMIT_EXCEEDED = 'DATA_SET_SIZE_LIMIT_EXCEEDED'
    ROW_SIZE_LIMIT_EXCEEDED = 'ROW_SIZE_LIMIT_EXCEEDED'
    ACCOUNT_CAPACITY_LIMIT_EXCEEDED = 'ACCOUNT_CAPACITY_LIMIT_EXCEEDED'
    CUSTOMER_ERROR = 'CUSTOMER_ERROR'
    DATA_SOURCE_NOT_FOUND = 'DATA_SOURCE_NOT_FOUND'
    IAM_ROLE_NOT_AVAILABLE = 'IAM_ROLE_NOT_AVAILABLE'
    CONNECTION_FAILURE = 'CONNECTION_FAILURE'
    SQL_TABLE_NOT_FOUND = 'SQL_TABLE_NOT_FOUND'
    PERMISSION_DENIED = 'PERMISSION_DENIED'
    SSL_CERTIFICATE_VALIDATION_FAILURE = 'SSL_CERTIFICATE_VALIDATION_FAILURE'
    OAUTH_TOKEN_FAILURE = 'OAUTH_TOKEN_FAILURE'
    SOURCE_API_LIMIT_EXCEEDED_FAILURE = 'SOURCE_API_LIMIT_EXCEEDED_FAILURE'
    PASSWORD_AUTHENTICATION_FAILURE = 'PASSWORD_AUTHENTICATION_FAILURE'
    SQL_SCHEMA_MISMATCH_ERROR = 'SQL_SCHEMA_MISMATCH_ERROR'
    INVALID_DATE_FORMAT = 'INVALID_DATE_FORMAT'
    INVALID_DATAPREP_SYNTAX = 'INVALID_DATAPREP_SYNTAX'
    SOURCE_RESOURCE_LIMIT_EXCEEDED = 'SOURCE_RESOURCE_LIMIT_EXCEEDED'
    SQL_INVALID_PARAMETER_VALUE = 'SQL_INVALID_PARAMETER_VALUE'
    QUERY_TIMEOUT = 'QUERY_TIMEOUT'
    SQL_NUMERIC_OVERFLOW = 'SQL_NUMERIC_OVERFLOW'
    UNRESOLVABLE_HOST = 'UNRESOLVABLE_HOST'
    UNROUTABLE_HOST = 'UNROUTABLE_HOST'
    SQL_EXCEPTION = 'SQL_EXCEPTION'
    S3_FILE_INACCESSIBLE = 'S3_FILE_INACCESSIBLE'
    IOT_FILE_NOT_FOUND = 'IOT_FILE_NOT_FOUND'
    IOT_DATA_SET_FILE_EMPTY = 'IOT_DATA_SET_FILE_EMPTY'
    INVALID_DATA_SOURCE_CONFIG = 'INVALID_DATA_SOURCE_CONFIG'
    DATA_SOURCE_AUTH_FAILED = 'DATA_SOURCE_AUTH_FAILED'
    DATA_SOURCE_CONNECTION_FAILED = 'DATA_SOURCE_CONNECTION_FAILED'
    FAILURE_TO_PROCESS_JSON_FILE = 'FAILURE_TO_PROCESS_JSON_FILE'
    INTERNAL_SERVICE_ERROR = 'INTERNAL_SERVICE_ERROR'


class ErrorInfo(BaseModel):
    """
    Error information for the SPICE ingestion of a dataset.
    """

    Type: Optional[IngestionErrorType] = None
    Message: Optional[StringModel] = None


class FieldFolderDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=500)]


class FolderColumnList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=5000)]


class FieldFolderPath(EntryPath):
    pass


class FileFormat(Enum):
    CSV = 'CSV'
    TSV = 'TSV'
    CLF = 'CLF'
    ELF = 'ELF'
    XLSX = 'XLSX'
    JSON = 'JSON'


class FilterOperation(BaseModel):
    """
    A transform operation that filters rows based on a condition.
    """

    ConditionExpression: Expression


class Path(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=10, min_items=1)]


class FolderFilterAttribute(Enum):
    PARENT_FOLDER_ARN = 'PARENT_FOLDER_ARN'


class MemberIdArnPair(BaseModel):
    """
    An object that consists of the member Amazon Resource Name (ARN) and member ID.
    """

    MemberId: Optional[RestrictiveResourceId] = None
    MemberArn: Optional[Arn] = None


class FolderMemberList(BaseModel):
    __root__: Annotated[List[MemberIdArnPair], Field(max_items=100)]


class FolderSummary(BaseModel):
    """
    A summary of the folder.
    """

    Arn: Optional[Arn] = None
    FolderId: Optional[RestrictiveResourceId] = None
    Name: Optional[FolderName] = None
    FolderType: Optional[FolderType] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class FolderSummaryList(BaseModel):
    __root__: Annotated[List[FolderSummary], Field(max_items=100)]


class SessionLifetimeInMinutes(BaseModel):
    __root__: Annotated[int, Field(ge=15.0, le=600.0)]


class GeoSpatialCountryCode(Enum):
    US = 'US'


class GetDashboardEmbedUrlRequest(BaseModel):
    pass


class GetSessionEmbedUrlRequest(BaseModel):
    pass


class GroupList(BaseModel):
    __root__: List[Group]


class GroupMemberList(BaseModel):
    __root__: List[GroupMember]


class GutterStyle(BorderStyle):
    """
    The display options for gutter spacing between tiles on a sheet.
    """

    pass


class IAMPolicyAssignmentSummary(BaseModel):
    """
    IAMpolicy assignment summary.
    """

    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    AssignmentStatus: Optional[AssignmentStatus] = None


class IAMPolicyAssignmentSummaryList(BaseModel):
    __root__: List[IAMPolicyAssignmentSummary]


class IdentityName(GroupName):
    pass


class IdentityType(Enum):
    IAM = 'IAM'
    QUICKSIGHT = 'QUICKSIGHT'


class QueueInfo(BaseModel):
    """
    Information about a queued dataset SPICE ingestion.
    """

    WaitingOnIngestion: StringModel
    QueuedIngestion: StringModel


class TimestampModel(Timestamp):
    pass


class LongModel(StatusCode):
    pass


class IngestionRequestSource(Enum):
    MANUAL = 'MANUAL'
    SCHEDULED = 'SCHEDULED'


class IngestionRequestType(Enum):
    INITIAL_INGESTION = 'INITIAL_INGESTION'
    EDIT = 'EDIT'
    INCREMENTAL_REFRESH = 'INCREMENTAL_REFRESH'
    FULL_REFRESH = 'FULL_REFRESH'


class IngestionMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class InputColumnDataType(Enum):
    STRING = 'STRING'
    INTEGER = 'INTEGER'
    DECIMAL = 'DECIMAL'
    DATETIME = 'DATETIME'
    BIT = 'BIT'
    BOOLEAN = 'BOOLEAN'
    JSON = 'JSON'


class InputColumn(BaseModel):
    """
    Metadata for a column that is used as the input of a transform operation.
    """

    Name: ColumnName
    Type: InputColumnDataType


class InstanceId(Domain):
    pass


class LongList(BaseModel):
    __root__: List[Long]


class IntegerParameter(BaseModel):
    """
    An integer parameter.
    """

    Name: NonEmptyString
    Values: LongList


class SiteBaseUrl(Password):
    pass


class LogicalTableId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[0-9a-zA-Z-]*')]


class JoinKeyProperties(BaseModel):
    """
    Properties associated with the columns participating in a join.
    """

    UniqueKey: Optional[Boolean] = None


class JoinType(Enum):
    INNER = 'INNER'
    OUTER = 'OUTER'
    LEFT = 'LEFT'
    RIGHT = 'RIGHT'


class OnClause(VersionDescription):
    pass


class JoinInstruction(BaseModel):
    """
    The instructions associated with a join.
    """

    LeftOperand: LogicalTableId
    RightOperand: LogicalTableId
    LeftJoinKeyProperties: Optional[JoinKeyProperties] = None
    RightJoinKeyProperties: Optional[JoinKeyProperties] = None
    Type: JoinType
    OnClause: OnClause


class MaxResults(IngestionMaxResults):
    pass


class ListAnalysesRequest(BaseModel):
    pass


class ListDashboardVersionsRequest(BaseModel):
    pass


class ListDashboardsRequest(BaseModel):
    pass


class ListDataSetsRequest(BaseModel):
    pass


class ListDataSourcesRequest(BaseModel):
    pass


class ListFolderMembersRequest(BaseModel):
    pass


class ListFoldersRequest(BaseModel):
    pass


class ListGroupMembershipsRequest(BaseModel):
    pass


class ListGroupsRequest(BaseModel):
    pass


class ListIAMPolicyAssignmentsForUserRequest(BaseModel):
    pass


class ListIAMPolicyAssignmentsRequest(BaseModel):
    AssignmentStatus: Optional[AssignmentStatus] = None


class ListIngestionsRequest(BaseModel):
    pass


class ListNamespacesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ListTemplateAliasesRequest(BaseModel):
    pass


class TemplateAliasList(BaseModel):
    __root__: Annotated[List[TemplateAlias], Field(max_items=100)]


class ListTemplateVersionsRequest(BaseModel):
    pass


class ListTemplatesRequest(BaseModel):
    pass


class ListThemeAliasesRequest(BaseModel):
    pass


class ThemeAliasList(BaseModel):
    __root__: Annotated[List[ThemeAlias], Field(max_items=100)]


class ListThemeVersionsRequest(BaseModel):
    pass


class ThemeType(Enum):
    QUICKSIGHT = 'QUICKSIGHT'
    CUSTOM = 'CUSTOM'
    ALL = 'ALL'


class ListThemesRequest(BaseModel):
    pass


class ListUserGroupsRequest(BaseModel):
    pass


class ListUsersRequest(BaseModel):
    pass


class LogicalTableAlias(Domain):
    pass


class PhysicalTableId(LogicalTableId):
    pass


class S3Bucket(Password):
    pass


class S3Key(Password):
    pass


class ManifestFileLocation(BaseModel):
    """
    Amazon S3 manifest file location.
    """

    Bucket: S3Bucket
    Key: S3Key


class MarginStyle(BorderStyle):
    """
    The display options for margins around the outside edge of sheets.
    """

    pass


class NamespaceErrorType(Enum):
    PERMISSION_DENIED = 'PERMISSION_DENIED'
    INTERNAL_SERVICE_ERROR = 'INTERNAL_SERVICE_ERROR'


class NamespaceError(BaseModel):
    """
    Errors that occur during namespace creation.
    """

    Type: Optional[NamespaceErrorType] = None
    Message: Optional[String] = None


class OptionalPort(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=65535.0)]


class OutputColumn(BaseModel):
    """
    Output column.
    """

    Name: Optional[ColumnName] = None
    Description: Optional[ColumnDescriptiveText] = None
    Type: Optional[ColumnDataType] = None


class PositiveInteger(VersionNumber):
    pass


class Principal(Host):
    pass


class ProjectedColumnList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=2000, min_items=1)]


class ProjectOperation(BaseModel):
    """
    A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.
    """

    ProjectedColumns: ProjectedColumnList


class Query(Host):
    pass


class UserRole(Enum):
    ADMIN = 'ADMIN'
    AUTHOR = 'AUTHOR'
    READER = 'READER'
    RESTRICTED_AUTHOR = 'RESTRICTED_AUTHOR'
    RESTRICTED_READER = 'RESTRICTED_READER'


class RoleSessionName(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=2, regex='[\\w+=.@-]*')]


class RoleName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9+=,.@_-]+$')
    ]


class RegisterUserRequest(BaseModel):
    IdentityType: IdentityType
    Email: String
    UserRole: UserRole
    IamArn: Optional[String] = None
    SessionName: Optional[RoleSessionName] = None
    UserName: Optional[UserName] = None
    CustomPermissionsName: Optional[RoleName] = None
    ExternalLoginFederationProviderType: Optional[String] = None
    CustomFederationProviderUrl: Optional[String] = None
    ExternalLoginId: Optional[String] = None


class RelationalTableCatalog(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class RelationalTableSchema(BaseModel):
    __root__: Annotated[str, Field(max_length=64)]


class RelationalTableName(Domain):
    pass


class RenameColumnOperation(BaseModel):
    """
    A transform operation that renames a column.
    """

    ColumnName: ColumnName
    NewColumnName: ColumnName


class RestoreAnalysisRequest(BaseModel):
    pass


class RowLevelPermissionTagDelimiter(BaseModel):
    __root__: Annotated[str, Field(max_length=10)]


class SessionTagKey(TagKey):
    pass


class SessionTagValue(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=256, min_length=1)]


class RowLevelPermissionTagRule(BaseModel):
    """
    A set of rules associated with a tag.
    """

    TagKey: SessionTagKey
    ColumnName: String
    TagMultiValueDelimiter: Optional[RowLevelPermissionTagDelimiter] = None
    MatchAllValue: Optional[SessionTagValue] = None


class Sheet(BaseModel):
    """
    A <i>sheet</i>, which is an object that contains a set of visuals that are viewed together on one page in Amazon QuickSight. Every analysis and dashboard contains at least one sheet. Each sheet contains at least one visualization widget, for example a chart, pivot table, or narrative insight. Sheets can be associated with other components, such as controls, filters, and so on.
    """

    SheetId: Optional[RestrictiveResourceId] = None
    Name: Optional[NonEmptyString] = None


class TileStyle(BaseModel):
    """
    Display options related to tiles on a sheet.
    """

    Border: Optional[BorderStyle] = None


class TileLayoutStyle(BaseModel):
    """
    The display options for the layout of tiles on a sheet.
    """

    Gutter: Optional[GutterStyle] = None
    Margin: Optional[MarginStyle] = None


class Warehouse(Catalog):
    pass


class StringList(BaseModel):
    __root__: List[String]


class StringParameter(BaseModel):
    """
    A string parameter.
    """

    Name: NonEmptyString
    Values: StringList


class TagValue(Host):
    pass


class TagColumnOperation(BaseModel):
    """
    A transform operation that tags a column with additional information.
    """

    ColumnName: ColumnName
    Tags: ColumnTagList


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=1)]


class TemplateErrorType(Enum):
    SOURCE_NOT_FOUND = 'SOURCE_NOT_FOUND'
    DATA_SET_NOT_FOUND = 'DATA_SET_NOT_FOUND'
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'
    ACCESS_DENIED = 'ACCESS_DENIED'


class TemplateError(BaseModel):
    """
    List of errors that occurred when the template version creation failed.
    """

    Type: Optional[TemplateErrorType] = None
    Message: Optional[NonEmptyString] = None


class TemplateErrorList(BaseModel):
    __root__: Annotated[List[TemplateError], Field(min_items=1)]


class TemplateSummary(BaseModel):
    """
    The template summary.
    """

    Arn: Optional[Arn] = None
    TemplateId: Optional[RestrictiveResourceId] = None
    Name: Optional[TemplateName] = None
    LatestVersionNumber: Optional[VersionNumber] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class TemplateVersionSummary(BaseModel):
    """
    The template version.
    """

    Arn: Optional[Arn] = None
    VersionNumber: Optional[VersionNumber] = None
    CreatedTime: Optional[Timestamp] = None
    Status: Optional[ResourceStatus] = None
    Description: Optional[VersionDescription] = None


class TextQualifier(Enum):
    DOUBLE_QUOTE = 'DOUBLE_QUOTE'
    SINGLE_QUOTE = 'SINGLE_QUOTE'


class ThemeErrorType(Enum):
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'


class ThemeError(BaseModel):
    """
    Theme error.
    """

    Type: Optional[ThemeErrorType] = None
    Message: Optional[NonEmptyString] = None


class ThemeErrorList(BaseModel):
    __root__: Annotated[List[ThemeError], Field(min_items=1)]


class ThemeSummary(BaseModel):
    """
    The theme summary.
    """

    Arn: Optional[Arn] = None
    Name: Optional[ThemeName] = None
    ThemeId: Optional[RestrictiveResourceId] = None
    LatestVersionNumber: Optional[VersionNumber] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class ThemeVersionSummary(BaseModel):
    """
    The theme version.
    """

    VersionNumber: Optional[VersionNumber] = None
    Arn: Optional[Arn] = None
    Description: Optional[VersionDescription] = None
    CreatedTime: Optional[Timestamp] = None
    Status: Optional[ResourceStatus] = None


class UntagColumnOperation(BaseModel):
    """
    A transform operation that removes tags associated with a column.
    """

    ColumnName: ColumnName
    TagNames: ColumnTagNames


class TransformOperation(BaseModel):
    """
    A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    ProjectOperation: Optional[ProjectOperation] = None
    FilterOperation: Optional[FilterOperation] = None
    CreateColumnsOperation: Optional[CreateColumnsOperation] = None
    RenameColumnOperation: Optional[RenameColumnOperation] = None
    CastColumnTypeOperation: Optional[CastColumnTypeOperation] = None
    TagColumnOperation: Optional[TagColumnOperation] = None
    UntagColumnOperation: Optional[UntagColumnOperation] = None


class UntagResourceRequest(BaseModel):
    pass


class UpdateAccountCustomizationRequest(BaseModel):
    AccountCustomization: AccountCustomization


class UpdateAccountSettingsRequest(BaseModel):
    DefaultNamespace: Namespace
    NotificationEmail: Optional[String] = None


class UpdateDashboardPublishedVersionRequest(BaseModel):
    pass


class UpdateFolderRequest(BaseModel):
    Name: FolderName


class UpdateGroupRequest(BaseModel):
    Description: Optional[GroupDescription] = None


class UpdateIAMPolicyAssignmentRequest(BaseModel):
    AssignmentStatus: Optional[AssignmentStatus] = None
    PolicyArn: Optional[Arn] = None
    Identities: Optional[IdentityMap] = None


class UpdateTemplateAliasRequest(BaseModel):
    TemplateVersionNumber: VersionNumber


class UpdateThemeAliasRequest(BaseModel):
    ThemeVersionNumber: VersionNumber


class UpdateUserRequest(BaseModel):
    Email: String
    Role: UserRole
    CustomPermissionsName: Optional[RoleName] = None
    UnapplyCustomPermissions: Optional[Boolean] = None
    ExternalLoginFederationProviderType: Optional[String] = None
    CustomFederationProviderUrl: Optional[String] = None
    ExternalLoginId: Optional[String] = None


class CancelIngestionResponse(BaseModel):
    Arn: Optional[Arn] = None
    IngestionId: Optional[IngestionId] = None
    RequestId: Optional[StringModel] = None
    Status: Optional[StatusCode] = None


class CreateAccountCustomizationResponse(BaseModel):
    Arn: Optional[Arn] = None
    AwsAccountId: Optional[AwsAccountId] = None
    Namespace: Optional[Namespace] = None
    AccountCustomization: Optional[AccountCustomization] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class Tag(BaseModel):
    """
    The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.
    """

    Key: TagKey
    Value: TagValue


class CreateAnalysisResponse(BaseModel):
    Arn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class StringParameterList(BaseModel):
    __root__: Annotated[List[StringParameter], Field(max_items=100)]


class IntegerParameterList(BaseModel):
    __root__: Annotated[List[IntegerParameter], Field(max_items=100)]


class DateTimeParameterList(BaseModel):
    __root__: Annotated[List[DateTimeParameter], Field(max_items=100)]


class ResourcePermission(BaseModel):
    """
    Permission for the resource.
    """

    Principal: Principal
    Actions: ActionList


class CreateDashboardResponse(BaseModel):
    Arn: Optional[Arn] = None
    VersionArn: Optional[Arn] = None
    DashboardId: Optional[RestrictiveResourceId] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class AdHocFilteringOption(BaseModel):
    """
    Ad hoc (one-time) filtering option.
    """

    AvailabilityStatus: Optional[Status5] = None


class ExportToCSVOption(AdHocFilteringOption):
    """
    Export to .csv option.
    """

    pass


class SheetControlsOption(BaseModel):
    """
    Sheet controls option.
    """

    VisibilityState: Optional[DashboardUIState] = None


class CreateDataSetResponse(BaseModel):
    Arn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    IngestionArn: Optional[Arn] = None
    IngestionId: Optional[ResourceId] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class FieldFolder(BaseModel):
    """
    A FieldFolder element is a folder that contains fields and nested subfolders.
    """

    description: Optional[FieldFolderDescription] = None
    columns: Optional[FolderColumnList] = None


class RowLevelPermissionTagRuleList(BaseModel):
    __root__: Annotated[
        List[RowLevelPermissionTagRule], Field(max_items=50, min_items=1)
    ]


class ColumnLevelPermissionRule(BaseModel):
    """
    A rule defined to grant access on one or more restricted columns. Each dataset can have multiple rules. To create a restricted column, you add it to one or more rules. Each rule must contain at least one column and at least one user or group. To be able to see a restricted column, a user or group needs to be added to a rule for that column.
    """

    Principals: Optional[PrincipalList] = None
    ColumnNames: Optional[ColumnNameList] = None


class CreateDataSourceResponse(BaseModel):
    Arn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    CreationStatus: Optional[ResourceStatus] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class AmazonElasticsearchParameters(BaseModel):
    """
    The parameters for Elasticsearch.
    """

    Domain: Domain


class AthenaParameters(BaseModel):
    """
    Parameters for Amazon Athena.
    """

    WorkGroup: Optional[WorkGroup] = None


class AuroraParameters(BaseModel):
    """
    Parameters for Amazon Aurora.
    """

    Host: Host
    Port: Port
    Database: Database


class AuroraPostgreSqlParameters(AuroraParameters):
    """
    Parameters for Amazon Aurora PostgreSQL-Compatible Edition.
    """

    pass


class AwsIotAnalyticsParameters(BaseModel):
    """
    The parameters for IoT Analytics.
    """

    DataSetName: DataSetName


class JiraParameters(BaseModel):
    """
    The parameters for Jira.
    """

    SiteBaseUrl: SiteBaseUrl


class MariaDbParameters(AuroraParameters):
    """
    The parameters for MariaDB.
    """

    pass


class MySqlParameters(AuroraParameters):
    """
    The parameters for MySQL.
    """

    pass


class OracleParameters(AuroraParameters):
    """
    The parameters for Oracle.
    """

    pass


class PostgreSqlParameters(AuroraParameters):
    """
    The parameters for PostgreSQL.
    """

    pass


class PrestoParameters(BaseModel):
    """
    The parameters for Presto.
    """

    Host: Host
    Port: Port
    Catalog: Catalog


class RdsParameters(BaseModel):
    """
    The parameters for Amazon RDS.
    """

    InstanceId: InstanceId
    Database: Database


class RedshiftParameters(BaseModel):
    """
    The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.
    """

    Host: Optional[Host] = None
    Port: Optional[OptionalPort] = None
    Database: Database
    ClusterId: Optional[ClusterId] = None


class S3Parameters(BaseModel):
    """
    The parameters for S3.
    """

    ManifestFileLocation: ManifestFileLocation


class ServiceNowParameters(JiraParameters):
    """
    The parameters for ServiceNow.
    """

    pass


class SnowflakeParameters(BaseModel):
    """
    The parameters for Snowflake.
    """

    Host: Host
    Database: Database
    Warehouse: Warehouse


class SparkParameters(BaseModel):
    """
    The parameters for Spark.
    """

    Host: Host
    Port: Port


class SqlServerParameters(AuroraParameters):
    """
    The parameters for SQL Server.
    """

    pass


class TeradataParameters(AuroraParameters):
    """
    The parameters for Teradata.
    """

    pass


class TwitterParameters(BaseModel):
    """
    The parameters for Twitter.
    """

    Query: Query
    MaxRows: PositiveInteger


class AmazonOpenSearchParameters(AmazonElasticsearchParameters):
    pass


class CreateFolderResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Arn: Optional[Arn] = None
    FolderId: Optional[RestrictiveResourceId] = None
    RequestId: Optional[String] = None


class CreateFolderMembershipResponse(BaseModel):
    Status: Optional[StatusCode] = None
    FolderMember: Optional[FolderMember] = None
    RequestId: Optional[String] = None


class CreateGroupResponse(BaseModel):
    """
    The response object for this operation.
    """

    Group: Optional[Group] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class CreateGroupMembershipResponse(BaseModel):
    GroupMember: Optional[GroupMember] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class CreateIAMPolicyAssignmentResponse(BaseModel):
    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    AssignmentId: Optional[String] = None
    AssignmentStatus: Optional[AssignmentStatus] = None
    PolicyArn: Optional[Arn] = None
    Identities: Optional[IdentityMap] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class IdentityNameList(BaseModel):
    __root__: List[IdentityName]


class CreateIngestionResponse(BaseModel):
    Arn: Optional[Arn] = None
    IngestionId: Optional[IngestionId] = None
    IngestionStatus: Optional[IngestionStatus] = None
    RequestId: Optional[StringModel] = None
    Status: Optional[StatusCode] = None


class CreateNamespaceResponse(BaseModel):
    Arn: Optional[Arn] = None
    Name: Optional[Namespace] = None
    CapacityRegion: Optional[String] = None
    CreationStatus: Optional[NamespaceStatus] = None
    IdentityStore: Optional[IdentityStore] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class CreateTemplateResponse(BaseModel):
    Arn: Optional[Arn] = None
    VersionArn: Optional[Arn] = None
    TemplateId: Optional[RestrictiveResourceId] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class CreateTemplateAliasResponse(BaseModel):
    TemplateAlias: Optional[TemplateAlias] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class CreateThemeResponse(BaseModel):
    Arn: Optional[Arn] = None
    VersionArn: Optional[Arn] = None
    ThemeId: Optional[RestrictiveResourceId] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DataColorPalette(BaseModel):
    """
    The theme colors that are used for data colors in charts. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5.
    """

    Colors: Optional[ColorList] = None
    MinMaxGradient: Optional[ColorList] = None
    EmptyFillColor: Optional[HexColor] = None


class UIColorPalette(BaseModel):
    """
    The theme colors that apply to UI and to charts, excluding data colors. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i>
    """

    PrimaryForeground: Optional[HexColor] = None
    PrimaryBackground: Optional[HexColor] = None
    SecondaryForeground: Optional[HexColor] = None
    SecondaryBackground: Optional[HexColor] = None
    Accent: Optional[HexColor] = None
    AccentForeground: Optional[HexColor] = None
    Danger: Optional[HexColor] = None
    DangerForeground: Optional[HexColor] = None
    Warning: Optional[HexColor] = None
    WarningForeground: Optional[HexColor] = None
    Success: Optional[HexColor] = None
    SuccessForeground: Optional[HexColor] = None
    Dimension: Optional[HexColor] = None
    DimensionForeground: Optional[HexColor] = None
    Measure: Optional[HexColor] = None
    MeasureForeground: Optional[HexColor] = None


class SheetStyle(BaseModel):
    """
    The theme display options for sheets.
    """

    Tile: Optional[TileStyle] = None
    TileLayout: Optional[TileLayoutStyle] = None


class CreateThemeAliasResponse(BaseModel):
    ThemeAlias: Optional[ThemeAlias] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DeleteAccountCustomizationResponse(BaseModel):
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DeleteAnalysisResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Arn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    DeletionTime: Optional[Timestamp] = None
    RequestId: Optional[String] = None


class DeleteDashboardResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Arn: Optional[Arn] = None
    DashboardId: Optional[RestrictiveResourceId] = None
    RequestId: Optional[String] = None


class DeleteDataSetResponse(BaseModel):
    Arn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DeleteDataSourceResponse(BaseModel):
    Arn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DeleteFolderResponse(CreateFolderResponse):
    pass


class DeleteFolderMembershipResponse(BaseModel):
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DeleteGroupResponse(DeleteAccountCustomizationResponse):
    pass


class DeleteGroupMembershipResponse(DeleteAccountCustomizationResponse):
    pass


class DeleteIAMPolicyAssignmentResponse(BaseModel):
    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DeleteNamespaceResponse(DeleteAccountCustomizationResponse):
    pass


class DeleteTemplateResponse(BaseModel):
    RequestId: Optional[String] = None
    Arn: Optional[Arn] = None
    TemplateId: Optional[RestrictiveResourceId] = None
    Status: Optional[StatusCode] = None


class DeleteTemplateAliasResponse(BaseModel):
    Status: Optional[StatusCode] = None
    TemplateId: Optional[RestrictiveResourceId] = None
    AliasName: Optional[AliasName] = None
    Arn: Optional[Arn] = None
    RequestId: Optional[String] = None


class DeleteThemeResponse(BaseModel):
    Arn: Optional[Arn] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None
    ThemeId: Optional[RestrictiveResourceId] = None


class DeleteThemeAliasResponse(BaseModel):
    AliasName: Optional[AliasName] = None
    Arn: Optional[Arn] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None
    ThemeId: Optional[RestrictiveResourceId] = None


class DeleteUserResponse(DeleteAccountCustomizationResponse):
    pass


class DeleteUserByPrincipalIdResponse(DeleteAccountCustomizationResponse):
    pass


class DescribeAccountCustomizationResponse(CreateAccountCustomizationResponse):
    pass


class DescribeAccountSettingsResponse(BaseModel):
    AccountSettings: Optional[AccountSettings] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeGroupResponse(CreateGroupResponse):
    pass


class DescribeIAMPolicyAssignmentResponse(BaseModel):
    IAMPolicyAssignment: Optional[IAMPolicyAssignment] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeTemplateAliasResponse(CreateTemplateAliasResponse):
    pass


class DescribeThemeAliasResponse(CreateThemeAliasResponse):
    pass


class GenerateEmbedUrlForAnonymousUserResponse(BaseModel):
    EmbedUrl: EmbeddingUrl
    Status: StatusCode
    RequestId: String


class SessionTag(BaseModel):
    """
    The key-value pair used for the row-level security tags feature.
    """

    Key: SessionTagKey
    Value: SessionTagValue


class AnonymousUserDashboardEmbeddingConfiguration(BaseModel):
    """
    Information about the dashboard that you want to embed.
    """

    InitialDashboardId: RestrictiveResourceId


class GenerateEmbedUrlForRegisteredUserResponse(
    GenerateEmbedUrlForAnonymousUserResponse
):
    pass


class RegisteredUserDashboardEmbeddingConfiguration(
    AnonymousUserDashboardEmbeddingConfiguration
):
    """
    Information about the dashboard you want to embed.
    """

    pass


class RegisteredUserQuickSightConsoleEmbeddingConfiguration(BaseModel):
    """
    Information about the Amazon QuickSight console that you want to embed.
    """

    InitialPath: Optional[EntryPath] = None


class GetDashboardEmbedUrlResponse(BaseModel):
    """
    Output returned from the <code>GetDashboardEmbedUrl</code> operation.
    """

    EmbedUrl: Optional[EmbeddingUrl] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class GetSessionEmbedUrlResponse(GetDashboardEmbedUrlResponse):
    pass


class ListAnalysesResponse(BaseModel):
    AnalysisSummaryList: Optional[AnalysisSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListDashboardVersionsResponse(BaseModel):
    DashboardVersionSummaryList: Optional[DashboardVersionSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListDashboardsResponse(BaseModel):
    DashboardSummaryList: Optional[DashboardSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListDataSetsResponse(BaseModel):
    DataSetSummaries: Optional[DataSetSummaryList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListFolderMembersResponse(BaseModel):
    Status: Optional[StatusCode] = None
    FolderMemberList: Optional[FolderMemberList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None


class ListFoldersResponse(BaseModel):
    Status: Optional[StatusCode] = None
    FolderSummaryList: Optional[FolderSummaryList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None


class ListGroupMembershipsResponse(BaseModel):
    GroupMemberList: Optional[GroupMemberList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListGroupsResponse(BaseModel):
    GroupList: Optional[GroupList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListIAMPolicyAssignmentsResponse(BaseModel):
    IAMPolicyAssignments: Optional[IAMPolicyAssignmentSummaryList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListIAMPolicyAssignmentsForUserResponse(BaseModel):
    ActiveAssignments: Optional[ActiveIAMPolicyAssignmentList] = None
    RequestId: Optional[String] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListTemplateAliasesResponse(BaseModel):
    TemplateAliasList: Optional[TemplateAliasList] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None
    NextToken: Optional[String] = None


class ListThemeAliasesResponse(BaseModel):
    ThemeAliasList: Optional[ThemeAliasList] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None
    NextToken: Optional[String] = None


class ListUserGroupsResponse(ListGroupsResponse):
    pass


class RestoreAnalysisResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Arn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    RequestId: Optional[String] = None


class SearchAnalysesResponse(ListAnalysesResponse):
    pass


class AnalysisSearchFilter(BaseModel):
    """
    A filter that you apply when searching for one or more analyses.
    """

    Operator: Optional[FilterOperator] = None
    Name: Optional[AnalysisFilterAttribute] = None
    Value: Optional[String] = None


class SearchDashboardsResponse(ListDashboardsResponse):
    pass


class DashboardSearchFilter(BaseModel):
    """
    A filter that you apply when searching for dashboards.
    """

    Operator: FilterOperator
    Name: Optional[AnalysisFilterAttribute] = None
    Value: Optional[String] = None


class SearchFoldersResponse(ListFoldersResponse):
    pass


class FolderSearchFilter(BaseModel):
    """
    Searches a folder by a filter.
    """

    Operator: Optional[FilterOperator] = None
    Name: Optional[FolderFilterAttribute] = None
    Value: Optional[String] = None


class TagResourceResponse(DeleteAccountCustomizationResponse):
    pass


class UntagResourceResponse(DeleteAccountCustomizationResponse):
    pass


class UpdateAccountCustomizationResponse(CreateAccountCustomizationResponse):
    pass


class UpdateAccountSettingsResponse(DeleteAccountCustomizationResponse):
    pass


class UpdateAnalysisResponse(BaseModel):
    Arn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    UpdateStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class UpdateDashboardResponse(CreateDashboardResponse):
    pass


class UpdateDashboardPublishedVersionResponse(BaseModel):
    DashboardId: Optional[RestrictiveResourceId] = None
    DashboardArn: Optional[Arn] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class UpdateDataSetResponse(CreateDataSetResponse):
    pass


class UpdateDataSetPermissionsResponse(BaseModel):
    DataSetArn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateDataSourceResponse(BaseModel):
    Arn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    UpdateStatus: Optional[ResourceStatus] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateDataSourcePermissionsResponse(BaseModel):
    DataSourceArn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateFolderResponse(CreateFolderResponse):
    pass


class UpdateGroupResponse(CreateGroupResponse):
    pass


class UpdateIAMPolicyAssignmentResponse(BaseModel):
    AssignmentName: Optional[IAMPolicyAssignmentName] = None
    AssignmentId: Optional[String] = None
    PolicyArn: Optional[Arn] = None
    Identities: Optional[IdentityMap] = None
    AssignmentStatus: Optional[AssignmentStatus] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateTemplateResponse(BaseModel):
    TemplateId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    VersionArn: Optional[Arn] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class UpdateTemplateAliasResponse(CreateTemplateAliasResponse):
    pass


class UpdateThemeResponse(BaseModel):
    ThemeId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    VersionArn: Optional[Arn] = None
    CreationStatus: Optional[ResourceStatus] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class UpdateThemeAliasResponse(CreateThemeAliasResponse):
    pass


class AnalysisErrorList(BaseModel):
    __root__: Annotated[List[AnalysisError], Field(min_items=1)]


class SheetList(BaseModel):
    __root__: Annotated[List[Sheet], Field(max_items=20)]


class Analysis(BaseModel):
    """
    Metadata structure for an analysis in Amazon QuickSight
    """

    AnalysisId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[AnalysisName] = None
    Status: Optional[ResourceStatus] = None
    Errors: Optional[AnalysisErrorList] = None
    DataSetArns: Optional[DataSetArnsList] = None
    ThemeArn: Optional[Arn] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    Sheets: Optional[SheetList] = None


class AnalysisSearchFilterList(BaseModel):
    __root__: Annotated[List[AnalysisSearchFilter], Field(max_items=1, min_items=1)]


class DataSetReferenceList(BaseModel):
    __root__: Annotated[List[DataSetReference], Field(min_items=1)]


class AnonymousUserEmbeddingExperienceConfiguration(BaseModel):
    """
    The type of experience you want to embed. For anonymous users, you can embed an Amazon QuickSight dashboard.
    """

    Dashboard: Optional[AnonymousUserDashboardEmbeddingConfiguration] = None


class GeoSpatialColumnGroup(BaseModel):
    """
    Geospatial column group that denotes a hierarchy.
    """

    Name: ColumnGroupName
    CountryCode: GeoSpatialCountryCode
    Columns: ColumnList


class ColumnLevelPermissionRuleList(BaseModel):
    __root__: Annotated[List[ColumnLevelPermissionRule], Field(min_items=1)]


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=1)]


class CreateAccountCustomizationRequest(BaseModel):
    AccountCustomization: AccountCustomization
    Tags: Optional[TagList] = None


class ResourcePermissionList(BaseModel):
    __root__: Annotated[List[ResourcePermission], Field(max_items=64, min_items=1)]


class DashboardPublishOptions(BaseModel):
    """
    Dashboard publish options.
    """

    AdHocFilteringOption: Optional[AdHocFilteringOption] = None
    ExportToCSVOption: Optional[ExportToCSVOption] = None
    SheetControlsOption: Optional[SheetControlsOption] = None


class RowLevelPermissionTagConfiguration(BaseModel):
    """
    The configuration of tags on a dataset to set row-level security.
    """

    Status: Optional[Status5] = None
    TagRules: RowLevelPermissionTagRuleList


class DataSourceParameters(BaseModel):
    """
    The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    AmazonElasticsearchParameters: Optional[AmazonElasticsearchParameters] = None
    AthenaParameters: Optional[AthenaParameters] = None
    AuroraParameters: Optional[AuroraParameters] = None
    AuroraPostgreSqlParameters: Optional[AuroraPostgreSqlParameters] = None
    AwsIotAnalyticsParameters: Optional[AwsIotAnalyticsParameters] = None
    JiraParameters: Optional[JiraParameters] = None
    MariaDbParameters: Optional[MariaDbParameters] = None
    MySqlParameters: Optional[MySqlParameters] = None
    OracleParameters: Optional[OracleParameters] = None
    PostgreSqlParameters: Optional[PostgreSqlParameters] = None
    PrestoParameters: Optional[PrestoParameters] = None
    RdsParameters: Optional[RdsParameters] = None
    RedshiftParameters: Optional[RedshiftParameters] = None
    S3Parameters: Optional[S3Parameters] = None
    ServiceNowParameters: Optional[ServiceNowParameters] = None
    SnowflakeParameters: Optional[SnowflakeParameters] = None
    SparkParameters: Optional[SparkParameters] = None
    SqlServerParameters: Optional[SqlServerParameters] = None
    TeradataParameters: Optional[TeradataParameters] = None
    TwitterParameters: Optional[TwitterParameters] = None
    AmazonOpenSearchParameters: Optional[AmazonOpenSearchParameters] = None


class CreateFolderRequest(BaseModel):
    Name: Optional[FolderName] = None
    FolderType: Optional[FolderType] = None
    ParentFolderArn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    Tags: Optional[TagList] = None


class CreateNamespaceRequest(BaseModel):
    Namespace: Namespace
    IdentityStore: IdentityStore
    Tags: Optional[TagList] = None


class ThemeConfiguration(BaseModel):
    """
    The theme configuration. This configuration contains all of the display properties for a theme.
    """

    DataColorPalette: Optional[DataColorPalette] = None
    UIColorPalette: Optional[UIColorPalette] = None
    Sheet: Optional[SheetStyle] = None


class CreateThemeRequest(BaseModel):
    Name: ThemeName
    BaseThemeId: RestrictiveResourceId
    VersionDescription: Optional[VersionDescription] = None
    Configuration: ThemeConfiguration
    Permissions: Optional[ResourcePermissionList] = None
    Tags: Optional[TagList] = None


class DataSourceParametersList(BaseModel):
    __root__: Annotated[List[DataSourceParameters], Field(max_items=50, min_items=1)]


class InputColumnList(BaseModel):
    __root__: Annotated[List[InputColumn], Field(max_items=2048, min_items=1)]


class CustomSql(BaseModel):
    """
    A physical table type built from the results of the custom SQL query.
    """

    DataSourceArn: Arn
    Name: CustomSqlName
    SqlQuery: SqlQuery
    Columns: Optional[InputColumnList] = None


class DashboardVersion(BaseModel):
    """
    Dashboard version.
    """

    CreatedTime: Optional[Timestamp] = None
    Errors: Optional[DashboardErrorList] = None
    VersionNumber: Optional[VersionNumber] = None
    Status: Optional[ResourceStatus] = None
    Arn: Optional[Arn] = None
    SourceEntityArn: Optional[Arn] = None
    DataSetArns: Optional[DataSetArnsList] = None
    Description: Optional[VersionDescription] = None
    ThemeArn: Optional[Arn] = None
    Sheets: Optional[SheetList] = None


class Dashboard(BaseModel):
    """
    Dashboard.
    """

    DashboardId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[DashboardName] = None
    Version: Optional[DashboardVersion] = None
    CreatedTime: Optional[Timestamp] = None
    LastPublishedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class DashboardSearchFilterList(BaseModel):
    __root__: Annotated[List[DashboardSearchFilter], Field(max_items=1, min_items=1)]


class OutputColumnList(BaseModel):
    __root__: List[OutputColumn]


class DataSourceErrorInfo(BaseModel):
    """
    Error information for the data source creation or update.
    """

    Type: Optional[DataSourceErrorInfoType] = None
    Message: Optional[String] = None


class DataSource(BaseModel):
    """
    The structure of a data source.
    """

    Arn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    Name: Optional[ResourceName] = None
    Type: Optional[DataSourceType] = None
    Status: Optional[ResourceStatus] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    DataSourceParameters: Optional[DataSourceParameters] = None
    AlternateDataSourceParameters: Optional[DataSourceParametersList] = None
    VpcConnectionProperties: Optional[VpcConnectionProperties] = None
    SslProperties: Optional[SslProperties] = None
    ErrorInfo: Optional[DataSourceErrorInfo] = None


class DataSourceList(BaseModel):
    __root__: List[DataSource]


class DoubleList(BaseModel):
    __root__: List[Double]


class DecimalParameter(BaseModel):
    """
    A decimal parameter.
    """

    Name: NonEmptyString
    Values: DoubleList


class Folder(BaseModel):
    """
    A folder.
    """

    FolderId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[FolderName] = None
    FolderType: Optional[FolderType] = None
    FolderPath: Optional[Path] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class NamespaceInfoV2(BaseModel):
    """
    The error type.
    """

    Name: Optional[Namespace] = None
    Arn: Optional[Arn] = None
    CapacityRegion: Optional[String] = None
    CreationStatus: Optional[NamespaceStatus] = None
    IdentityStore: Optional[IdentityStore] = None
    NamespaceError: Optional[NamespaceError] = None


class User(BaseModel):
    """
    A registered user of Amazon QuickSight.
    """

    Arn: Optional[Arn] = None
    UserName: Optional[UserName] = None
    Email: Optional[String] = None
    Role: Optional[UserRole] = None
    IdentityType: Optional[IdentityType] = None
    Active: Optional[Boolean] = None
    PrincipalId: Optional[String] = None
    CustomPermissionsName: Optional[RoleName] = None
    ExternalLoginFederationProviderType: Optional[String] = None
    ExternalLoginFederationProviderUrl: Optional[String] = None
    ExternalLoginId: Optional[String] = None


class FolderSearchFilterList(BaseModel):
    __root__: Annotated[List[FolderSearchFilter], Field(max_items=100)]


class SessionTagList(BaseModel):
    __root__: Annotated[List[SessionTag], Field(max_items=50, min_items=1)]


class GenerateEmbedUrlForAnonymousUserRequest(BaseModel):
    SessionLifetimeInMinutes: Optional[SessionLifetimeInMinutes] = None
    Namespace: Namespace
    SessionTags: Optional[SessionTagList] = None
    AuthorizedResourceArns: ArnList
    ExperienceConfiguration: AnonymousUserEmbeddingExperienceConfiguration


class RegisteredUserEmbeddingExperienceConfiguration(BaseModel):
    """
    <p>The type of experience you want to embed. For registered users, you can embed an Amazon QuickSight dashboard or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuraton.</p> </note>
    """

    Dashboard: Optional[RegisteredUserDashboardEmbeddingConfiguration] = None
    QuickSightConsole: Optional[
        RegisteredUserQuickSightConsoleEmbeddingConfiguration
    ] = None


class GenerateEmbedUrlForRegisteredUserRequest(BaseModel):
    SessionLifetimeInMinutes: Optional[SessionLifetimeInMinutes] = None
    UserArn: Arn
    ExperienceConfiguration: RegisteredUserEmbeddingExperienceConfiguration


class RowInfo(BaseModel):
    """
    Information about rows for a data set SPICE ingestion.
    """

    RowsIngested: Optional[LongModel] = None
    RowsDropped: Optional[LongModel] = None


class Namespaces(BaseModel):
    __root__: List[NamespaceInfoV2]


class TemplateVersionSummaryList(BaseModel):
    __root__: Annotated[List[TemplateVersionSummary], Field(max_items=100)]


class TemplateSummaryList(BaseModel):
    __root__: Annotated[List[TemplateSummary], Field(max_items=100)]


class ThemeVersionSummaryList(BaseModel):
    __root__: Annotated[List[ThemeVersionSummary], Field(max_items=100)]


class ThemeSummaryList(BaseModel):
    __root__: Annotated[List[ThemeSummary], Field(max_items=100)]


class UserList(BaseModel):
    __root__: List[User]


class TransformOperationList(BaseModel):
    __root__: Annotated[List[TransformOperation], Field(max_items=2048, min_items=1)]


class LogicalTableSource(BaseModel):
    """
    Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    JoinInstruction: Optional[JoinInstruction] = None
    PhysicalTableId: Optional[PhysicalTableId] = None
    DataSetArn: Optional[Arn] = None


class RelationalTable(BaseModel):
    """
    A physical table type for relational data sources.
    """

    DataSourceArn: Arn
    Catalog: Optional[RelationalTableCatalog] = None
    Schema: Optional[RelationalTableSchema] = None
    Name: RelationalTableName
    InputColumns: InputColumnList


class UploadSettings(BaseModel):
    """
    Information about the format for a source file or files.
    """

    Format: Optional[FileFormat] = None
    StartFromRow: Optional[PositiveInteger] = None
    ContainsHeader: Optional[Boolean] = None
    TextQualifier: Optional[TextQualifier] = None
    Delimiter: Optional[Delimiter] = None


class SearchAnalysesRequest(BaseModel):
    Filters: AnalysisSearchFilterList
    NextToken: Optional[String] = None
    MaxResults: Optional[MaxResults] = None


class SearchDashboardsRequest(BaseModel):
    Filters: DashboardSearchFilterList
    NextToken: Optional[String] = None
    MaxResults: Optional[MaxResults] = None


class SearchFoldersRequest(BaseModel):
    Filters: FolderSearchFilterList
    NextToken: Optional[String] = None
    MaxResults: Optional[MaxResults] = None


class TagResourceRequest(BaseModel):
    Tags: TagList


class TemplateVersion(BaseModel):
    """
    A version of a template.
    """

    CreatedTime: Optional[Timestamp] = None
    Errors: Optional[TemplateErrorList] = None
    VersionNumber: Optional[VersionNumber] = None
    Status: Optional[ResourceStatus] = None
    DataSetConfigurations: Optional[DataSetConfigurationList] = None
    Description: Optional[VersionDescription] = None
    SourceEntityArn: Optional[Arn] = None
    ThemeArn: Optional[Arn] = None
    Sheets: Optional[SheetList] = None


class ThemeVersion(BaseModel):
    """
    A version of a theme.
    """

    VersionNumber: Optional[VersionNumber] = None
    Arn: Optional[Arn] = None
    Description: Optional[VersionDescription] = None
    BaseThemeId: Optional[RestrictiveResourceId] = None
    CreatedTime: Optional[Timestamp] = None
    Configuration: Optional[ThemeConfiguration] = None
    Errors: Optional[ThemeErrorList] = None
    Status: Optional[ResourceStatus] = None


class UpdateResourcePermissionList(BaseModel):
    __root__: Annotated[List[ResourcePermission], Field(max_items=100)]


class UpdateAnalysisPermissionsRequest(BaseModel):
    GrantPermissions: Optional[UpdateResourcePermissionList] = None
    RevokePermissions: Optional[UpdateResourcePermissionList] = None


class UpdateDashboardPermissionsRequest(BaseModel):
    GrantPermissions: Optional[UpdateResourcePermissionList] = None
    RevokePermissions: Optional[UpdateResourcePermissionList] = None


class UpdateDataSetPermissionsRequest(BaseModel):
    GrantPermissions: Optional[ResourcePermissionList] = None
    RevokePermissions: Optional[ResourcePermissionList] = None


class UpdateDataSourcePermissionsRequest(BaseModel):
    GrantPermissions: Optional[ResourcePermissionList] = None
    RevokePermissions: Optional[ResourcePermissionList] = None


class UpdateFolderPermissionsRequest(BaseModel):
    GrantPermissions: Optional[ResourcePermissionList] = None
    RevokePermissions: Optional[ResourcePermissionList] = None


class UpdateTemplatePermissionsRequest(BaseModel):
    GrantPermissions: Optional[UpdateResourcePermissionList] = None
    RevokePermissions: Optional[UpdateResourcePermissionList] = None


class UpdateThemePermissionsRequest(BaseModel):
    GrantPermissions: Optional[UpdateResourcePermissionList] = None
    RevokePermissions: Optional[UpdateResourcePermissionList] = None


class UpdateThemeRequest(BaseModel):
    Name: Optional[ThemeName] = None
    BaseThemeId: RestrictiveResourceId
    VersionDescription: Optional[VersionDescription] = None
    Configuration: Optional[ThemeConfiguration] = None


class DecimalParameterList(BaseModel):
    __root__: Annotated[List[DecimalParameter], Field(max_items=100)]


class AnalysisSourceTemplate(BaseModel):
    """
    The source template of an analysis.
    """

    DataSetReferences: DataSetReferenceList
    Arn: Arn


class DashboardSourceTemplate(AnalysisSourceTemplate):
    """
    Dashboard source template.
    """

    pass


class LogicalTable(BaseModel):
    """
    A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.
    """

    Alias: LogicalTableAlias
    DataTransforms: Optional[TransformOperationList] = None
    Source: LogicalTableSource


class ColumnGroup(BaseModel):
    """
    Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    GeoSpatialColumnGroup: Optional[GeoSpatialColumnGroup] = None


class CredentialPair(BaseModel):
    """
    The combination of user name and password that are used as credentials.
    """

    Username: Username
    Password: Password
    AlternateDataSourceParameters: Optional[DataSourceParametersList] = None


class TemplateSourceAnalysis(BaseModel):
    """
    The source analysis of the template.
    """

    Arn: Arn
    DataSetReferences: DataSetReferenceList


class DescribeAnalysisResponse(BaseModel):
    Analysis: Optional[Analysis] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DescribeAnalysisPermissionsResponse(BaseModel):
    AnalysisId: Optional[RestrictiveResourceId] = None
    AnalysisArn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DescribeDashboardResponse(BaseModel):
    Dashboard: Optional[Dashboard] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DescribeDashboardPermissionsResponse(BaseModel):
    DashboardId: Optional[RestrictiveResourceId] = None
    DashboardArn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DescribeDataSetPermissionsResponse(BaseModel):
    DataSetArn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeDataSourceResponse(BaseModel):
    DataSource: Optional[DataSource] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeDataSourcePermissionsResponse(BaseModel):
    DataSourceArn: Optional[Arn] = None
    DataSourceId: Optional[ResourceId] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeFolderResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Folder: Optional[Folder] = None
    RequestId: Optional[String] = None


class DescribeFolderPermissionsResponse(BaseModel):
    Status: Optional[StatusCode] = None
    FolderId: Optional[RestrictiveResourceId] = None
    Arn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None


class DescribeFolderResolvedPermissionsResponse(DescribeFolderPermissionsResponse):
    pass


class DescribeNamespaceResponse(BaseModel):
    Namespace: Optional[NamespaceInfoV2] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeTemplatePermissionsResponse(BaseModel):
    TemplateId: Optional[RestrictiveResourceId] = None
    TemplateArn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeThemePermissionsResponse(BaseModel):
    ThemeId: Optional[RestrictiveResourceId] = None
    ThemeArn: Optional[Arn] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeUserResponse(BaseModel):
    User: Optional[User] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListDataSourcesResponse(BaseModel):
    DataSources: Optional[DataSourceList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListNamespacesResponse(BaseModel):
    Namespaces: Optional[Namespaces] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class ListTemplateVersionsResponse(BaseModel):
    TemplateVersionSummaryList: Optional[TemplateVersionSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListTemplatesResponse(BaseModel):
    TemplateSummaryList: Optional[TemplateSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListThemeVersionsResponse(BaseModel):
    ThemeVersionSummaryList: Optional[ThemeVersionSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListThemesResponse(BaseModel):
    ThemeSummaryList: Optional[ThemeSummaryList] = None
    NextToken: Optional[String] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListUsersResponse(BaseModel):
    UserList: Optional[UserList] = None
    NextToken: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class RegisterUserResponse(BaseModel):
    User: Optional[User] = None
    UserInvitationUrl: Optional[String] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateAnalysisPermissionsResponse(BaseModel):
    AnalysisArn: Optional[Arn] = None
    AnalysisId: Optional[RestrictiveResourceId] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateDashboardPermissionsResponse(BaseModel):
    DashboardArn: Optional[Arn] = None
    DashboardId: Optional[RestrictiveResourceId] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class UpdateFolderPermissionsResponse(BaseModel):
    Status: Optional[StatusCode] = None
    Arn: Optional[Arn] = None
    FolderId: Optional[RestrictiveResourceId] = None
    Permissions: Optional[ResourcePermissionList] = None
    RequestId: Optional[String] = None


class UpdateTemplatePermissionsResponse(DescribeTemplatePermissionsResponse):
    pass


class UpdateThemePermissionsResponse(DescribeThemePermissionsResponse):
    pass


class UpdateUserResponse(DescribeUserResponse):
    pass


class AnalysisSourceEntity(BaseModel):
    """
    The source entity of an analysis.
    """

    SourceTemplate: Optional[AnalysisSourceTemplate] = None


class ColumnGroupList(BaseModel):
    __root__: Annotated[List[ColumnGroup], Field(max_items=8, min_items=1)]


class Parameters(BaseModel):
    """
    A list of Amazon QuickSight parameters and the list's override values.
    """

    StringParameters: Optional[StringParameterList] = None
    IntegerParameters: Optional[IntegerParameterList] = None
    DecimalParameters: Optional[DecimalParameterList] = None
    DateTimeParameters: Optional[DateTimeParameterList] = None


class CreateAnalysisRequest(BaseModel):
    Name: AnalysisName
    Parameters: Optional[Parameters] = None
    Permissions: Optional[ResourcePermissionList] = None
    SourceEntity: AnalysisSourceEntity
    ThemeArn: Optional[Arn] = None
    Tags: Optional[TagList] = None


class DashboardSourceEntity(BaseModel):
    """
    Dashboard source entity.
    """

    SourceTemplate: Optional[DashboardSourceTemplate] = None


class CreateDashboardRequest(BaseModel):
    Name: DashboardName
    Parameters: Optional[Parameters] = None
    Permissions: Optional[ResourcePermissionList] = None
    SourceEntity: DashboardSourceEntity
    Tags: Optional[TagList] = None
    VersionDescription: Optional[VersionDescription] = None
    DashboardPublishOptions: Optional[DashboardPublishOptions] = None
    ThemeArn: Optional[Arn] = None


class CreateDataSetRequest(BaseModel):
    DataSetId: ResourceId
    Name: ResourceName
    PhysicalTableMap: PhysicalTableMap
    LogicalTableMap: Optional[LogicalTableMap] = None
    ImportMode: DataSetImportMode
    ColumnGroups: Optional[ColumnGroupList] = None
    FieldFolders: Optional[FieldFolderMap] = None
    Permissions: Optional[ResourcePermissionList] = None
    RowLevelPermissionDataSet: Optional[RowLevelPermissionDataSet] = None
    RowLevelPermissionTagConfiguration: Optional[
        RowLevelPermissionTagConfiguration
    ] = None
    ColumnLevelPermissionRules: Optional[ColumnLevelPermissionRuleList] = None
    Tags: Optional[TagList] = None
    DataSetUsageConfiguration: Optional[DataSetUsageConfiguration] = None


class DataSourceCredentials(BaseModel):
    """
    Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    CredentialPair: Optional[CredentialPair] = None
    CopySourceArn: Optional[CopySourceArn] = None


class CreateDataSourceRequest(BaseModel):
    DataSourceId: ResourceId
    Name: ResourceName
    Type: DataSourceType
    DataSourceParameters: Optional[DataSourceParameters] = None
    Credentials: Optional[DataSourceCredentials] = None
    Permissions: Optional[ResourcePermissionList] = None
    VpcConnectionProperties: Optional[VpcConnectionProperties] = None
    SslProperties: Optional[SslProperties] = None
    Tags: Optional[TagList] = None


class TemplateSourceEntity(BaseModel):
    """
    The source entity of the template.
    """

    SourceAnalysis: Optional[TemplateSourceAnalysis] = None
    SourceTemplate: Optional[TemplateSourceTemplate] = None


class CreateTemplateRequest(BaseModel):
    Name: Optional[TemplateName] = None
    Permissions: Optional[ResourcePermissionList] = None
    SourceEntity: TemplateSourceEntity
    Tags: Optional[TagList] = None
    VersionDescription: Optional[VersionDescription] = None


class DataSet(BaseModel):
    """
    Dataset.
    """

    Arn: Optional[Arn] = None
    DataSetId: Optional[ResourceId] = None
    Name: Optional[ResourceName] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    PhysicalTableMap: Optional[PhysicalTableMap] = None
    LogicalTableMap: Optional[LogicalTableMap] = None
    OutputColumns: Optional[OutputColumnList] = None
    ImportMode: Optional[DataSetImportMode] = None
    ConsumedSpiceCapacityInBytes: Optional[Long] = None
    ColumnGroups: Optional[ColumnGroupList] = None
    FieldFolders: Optional[FieldFolderMap] = None
    RowLevelPermissionDataSet: Optional[RowLevelPermissionDataSet] = None
    RowLevelPermissionTagConfiguration: Optional[
        RowLevelPermissionTagConfiguration
    ] = None
    ColumnLevelPermissionRules: Optional[ColumnLevelPermissionRuleList] = None
    DataSetUsageConfiguration: Optional[DataSetUsageConfiguration] = None


class Ingestion(BaseModel):
    """
    Information about the SPICE ingestion for a dataset.
    """

    Arn: Arn
    IngestionId: Optional[IngestionId] = None
    IngestionStatus: IngestionStatus
    ErrorInfo: Optional[ErrorInfo] = None
    RowInfo: Optional[RowInfo] = None
    QueueInfo: Optional[QueueInfo] = None
    CreatedTime: TimestampModel
    IngestionTimeInSeconds: Optional[LongModel] = None
    IngestionSizeInBytes: Optional[LongModel] = None
    RequestSource: Optional[IngestionRequestSource] = None
    RequestType: Optional[IngestionRequestType] = None


class Template(BaseModel):
    """
    <p>A template object. A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.</p>
    """

    Arn: Optional[Arn] = None
    Name: Optional[TemplateName] = None
    Version: Optional[TemplateVersion] = None
    TemplateId: Optional[RestrictiveResourceId] = None
    LastUpdatedTime: Optional[Timestamp] = None
    CreatedTime: Optional[Timestamp] = None


class Theme(BaseModel):
    """
    Summary information about a theme.
    """

    Arn: Optional[Arn] = None
    Name: Optional[ThemeName] = None
    ThemeId: Optional[RestrictiveResourceId] = None
    Version: Optional[ThemeVersion] = None
    CreatedTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None
    Type: Optional[ThemeType] = None


class Ingestions(BaseModel):
    __root__: List[Ingestion]


class S3Source(BaseModel):
    """
    A physical table type for an S3 data source.
    """

    DataSourceArn: Arn
    UploadSettings: Optional[UploadSettings] = None
    InputColumns: InputColumnList


class UpdateAnalysisRequest(BaseModel):
    Name: AnalysisName
    Parameters: Optional[Parameters] = None
    SourceEntity: AnalysisSourceEntity
    ThemeArn: Optional[Arn] = None


class UpdateDashboardRequest(BaseModel):
    Name: DashboardName
    SourceEntity: DashboardSourceEntity
    Parameters: Optional[Parameters] = None
    VersionDescription: Optional[VersionDescription] = None
    DashboardPublishOptions: Optional[DashboardPublishOptions] = None
    ThemeArn: Optional[Arn] = None


class UpdateDataSetRequest(BaseModel):
    Name: ResourceName
    PhysicalTableMap: PhysicalTableMap
    LogicalTableMap: Optional[LogicalTableMap] = None
    ImportMode: DataSetImportMode
    ColumnGroups: Optional[ColumnGroupList] = None
    FieldFolders: Optional[FieldFolderMap] = None
    RowLevelPermissionDataSet: Optional[RowLevelPermissionDataSet] = None
    RowLevelPermissionTagConfiguration: Optional[
        RowLevelPermissionTagConfiguration
    ] = None
    ColumnLevelPermissionRules: Optional[ColumnLevelPermissionRuleList] = None
    DataSetUsageConfiguration: Optional[DataSetUsageConfiguration] = None


class UpdateDataSourceRequest(BaseModel):
    Name: ResourceName
    DataSourceParameters: Optional[DataSourceParameters] = None
    Credentials: Optional[DataSourceCredentials] = None
    VpcConnectionProperties: Optional[VpcConnectionProperties] = None
    SslProperties: Optional[SslProperties] = None


class UpdateTemplateRequest(BaseModel):
    SourceEntity: TemplateSourceEntity
    VersionDescription: Optional[VersionDescription] = None
    Name: Optional[TemplateName] = None


class PhysicalTable(BaseModel):
    """
    A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    """

    RelationalTable: Optional[RelationalTable] = None
    CustomSql: Optional[CustomSql] = None
    S3Source: Optional[S3Source] = None


class DescribeDataSetResponse(BaseModel):
    DataSet: Optional[DataSet] = None
    RequestId: Optional[String] = None
    Status: Optional[StatusCode] = None


class DescribeIngestionResponse(BaseModel):
    Ingestion: Optional[Ingestion] = None
    RequestId: Optional[StringModel] = None
    Status: Optional[StatusCode] = None


class DescribeTemplateResponse(BaseModel):
    Template: Optional[Template] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class DescribeThemeResponse(BaseModel):
    Theme: Optional[Theme] = None
    Status: Optional[StatusCode] = None
    RequestId: Optional[String] = None


class ListIngestionsResponse(BaseModel):
    Ingestions: Optional[Ingestions] = None
    NextToken: Optional[StringModel] = None
    RequestId: Optional[StringModel] = None
    Status: Optional[StatusCode] = None

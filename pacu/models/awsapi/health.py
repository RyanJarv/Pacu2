# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:15+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidPaginationToken(BaseModel):
    __root__: Any


class UnsupportedLocale(InvalidPaginationToken):
    pass


class ConcurrentModificationException(InvalidPaginationToken):
    pass


class EntityArn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, regex='.{0,1600}')]


class EventArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            regex='arn:aws(-[a-z]+(-[a-z]+)?)?:health:[^:]*:[^:]*:event(?:/[\\w-]+){3}',
        ),
    ]


class EntityValue(BaseModel):
    __root__: Annotated[str, Field(max_length=1224, regex='.{0,1224}')]


class EntityUrl(BaseModel):
    __root__: str


class AccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, regex='^\\S+$')]


class Timestamp(BaseModel):
    __root__: datetime


class EntityStatusCode(Enum):
    IMPAIRED = 'IMPAIRED'
    UNIMPAIRED = 'UNIMPAIRED'
    UNKNOWN = 'UNKNOWN'


class TagSet(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AffectedEntity(BaseModel):
    """
    Information about an entity that is affected by a Health event.
    """

    entityArn: Optional[EntityArn] = None
    eventArn: Optional[EventArn] = None
    entityValue: Optional[EntityValue] = None
    entityUrl: Optional[EntityUrl] = None
    awsAccountId: Optional[AccountId] = None
    lastUpdatedTime: Optional[Timestamp] = None
    statusCode: Optional[EntityStatusCode] = None
    tags: Optional[TagSet] = None


class DateTimeRange(BaseModel):
    """
    A range of dates and times that is used by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventFilter.html">EventFilter</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> objects. If <code>from</code> is set and <code>to</code> is set: match items where the timestamp (<code>startTime</code>, <code>endTime</code>, or <code>lastUpdatedTime</code>) is between <code>from</code> and <code>to</code> inclusive. If <code>from</code> is set and <code>to</code> is not set: match items where the timestamp value is equal to or after <code>from</code>. If <code>from</code> is not set and <code>to</code> is set: match items where the timestamp value is equal to or before <code>to</code>.
    """

    from_: Annotated[Optional[Timestamp], Field(alias='from')] = None
    to: Optional[Timestamp] = None


class NextToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=10000, min_length=4, regex='[a-zA-Z0-9=/+_.-]{4,10000}')
    ]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=10.0, le=100.0)]


class AffectedAccountsList(BaseModel):
    __root__: List[AccountId]


class EventScopeCode(Enum):
    PUBLIC = 'PUBLIC'
    ACCOUNT_SPECIFIC = 'ACCOUNT_SPECIFIC'
    NONE = 'NONE'


class Locale(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=2, regex='.{2,256}')]


class MaxResultsLowerRange(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class EntityList(BaseModel):
    __root__: List[AffectedEntity]


class EventArnsList(BaseModel):
    __root__: Annotated[List[EventArn], Field(max_items=50, min_items=1)]


class EventAggregateField(Enum):
    eventTypeCategory = 'eventTypeCategory'


class EventArnList(BaseModel):
    __root__: Annotated[List[EventArn], Field(max_items=10, min_items=1)]


class HealthServiceAccessStatusForOrganization(EntityUrl):
    pass


class Count(BaseModel):
    __root__: int


class EntityAggregate(BaseModel):
    """
    The number of entities that are affected by one or more events. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEntityAggregates.html">DescribeEntityAggregates</a> operation.
    """

    eventArn: Optional[EventArn] = None
    count: Optional[Count] = None


class EntityArnList(BaseModel):
    __root__: Annotated[List[EntityArn], Field(max_items=99, min_items=1)]


class EntityValueList(BaseModel):
    __root__: Annotated[List[EntityValue], Field(max_items=99, min_items=1)]


class DateTimeRangeList(BaseModel):
    __root__: Annotated[List[DateTimeRange], Field(max_items=10, min_items=1)]


class TagFilter(BaseModel):
    __root__: Annotated[List[TagSet], Field(max_items=50)]


class EntityStatusCodeList(BaseModel):
    __root__: Annotated[List[EntityStatusCode], Field(max_items=3, min_items=1)]


class Service(BaseModel):
    __root__: Annotated[str, Field(max_length=30, min_length=2, regex='[^:/]{2,30}')]


class EventTypeCode(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=3, regex='[a-zA-Z0-9\\_\\-]{3,100}')
    ]


class EventTypeCategory(Enum):
    issue = 'issue'
    accountNotification = 'accountNotification'
    scheduledChange = 'scheduledChange'
    investigation = 'investigation'


class Region(BaseModel):
    __root__: Annotated[str, Field(max_length=25, min_length=2, regex='[^:/]{2,25}')]


class AvailabilityZone(BaseModel):
    __root__: Annotated[
        str, Field(max_length=18, min_length=6, regex='[a-z]{2}\\-[0-9a-z\\-]{4,16}')
    ]


class EventStatusCode(Enum):
    open = 'open'
    closed = 'closed'
    upcoming = 'upcoming'


class Event(BaseModel):
    """
    <p>Summary information about an AWS Health event.</p> <p>AWS Health events can be public or account-specific:</p> <ul> <li> <p> <i>Public events</i> might be service events that are not specific to an AWS account. For example, if there is an issue with an AWS Region, AWS Health provides information about the event, even if you don't use services or resources in that Region.</p> </li> <li> <p> <i>Account-specific</i> events are specific to either your AWS account or an account in your organization. For example, if there's an issue with Amazon Elastic Compute Cloud in a Region that you use, AWS Health provides information about the event and the affected resources in the account.</p> </li> </ul> <p>You can determine if an event is public or account-specific by using the <code>eventScopeCode</code> parameter. For more information, see <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html#AWSHealth-Type-Event-eventScopeCode">eventScopeCode</a>.</p>
    """

    arn: Optional[EventArn] = None
    service: Optional[Service] = None
    eventTypeCode: Optional[EventTypeCode] = None
    eventTypeCategory: Optional[EventTypeCategory] = None
    region: Optional[Region] = None
    availabilityZone: Optional[AvailabilityZone] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    lastUpdatedTime: Optional[Timestamp] = None
    statusCode: Optional[EventStatusCode] = None
    eventScopeCode: Optional[EventScopeCode] = None


class EventAccountFilter(BaseModel):
    """
    The values used to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operations.
    """

    eventArn: EventArn
    awsAccountId: Optional[AccountId] = None


class AggregateValue(EntityUrl):
    pass


class EventAggregate(BaseModel):
    """
    The number of events of each issue type. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventAggregates.html">DescribeEventAggregates</a> operation.
    """

    aggregateValue: Optional[AggregateValue] = None
    count: Optional[Count] = None


class EventDescription2(EntityUrl):
    pass


class EventDescription(BaseModel):
    """
    The detailed description of the event. Included in the information returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation.
    """

    latestDescription: Optional[EventDescription2] = None


class EventMetadata(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class String(EntityUrl):
    pass


class ServiceList(BaseModel):
    __root__: Annotated[List[Service], Field(max_items=10, min_items=1)]


class RegionList(BaseModel):
    __root__: Annotated[List[Region], Field(max_items=10, min_items=1)]


class AvailabilityZones(BaseModel):
    __root__: List[AvailabilityZone]


class EventTypeCategoryList(BaseModel):
    __root__: Annotated[List[EventTypeCategory], Field(max_items=10, min_items=1)]


class EventStatusCodeList(BaseModel):
    __root__: Annotated[List[EventStatusCode], Field(max_items=6, min_items=1)]


class EventType(BaseModel):
    """
    <p>Contains the metadata about a type of event that is reported by AWS Health. The <code>EventType</code> shows the category, service, and the event type code of the event. For example, an <code>issue</code> might be the category, <code>EC2</code> the service, and <code>AWS_EC2_SYSTEM_MAINTENANCE_EVENT</code> the event type code.</p> <p>You can use the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventTypes.html">DescribeEventTypes</a> API operation to return this information about an event.</p> <p>You can also use the Amazon CloudWatch Events console to create a rule so that you can get notified or take action when AWS Health delivers a specific event to your AWS account. For more information, see <a href="https://docs.aws.amazon.com/health/latest/ug/cloudwatch-events-health.html">Monitor for AWS Health events with Amazon CloudWatch Events</a> in the <i>AWS Health User Guide</i>.</p>
    """

    service: Optional[Service] = None
    code: Optional[EventTypeCode] = None
    category: Optional[EventTypeCategory] = None


class EventTypeCategoryListModel(EventTypeCategoryList):
    pass


class EventTypeCodeList(BaseModel):
    __root__: Annotated[List[EventTypeCode], Field(max_items=10, min_items=1)]


class OrganizationEvent(BaseModel):
    """
    Summary information about an event, returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.
    """

    arn: Optional[EventArn] = None
    service: Optional[Service] = None
    eventTypeCode: Optional[EventTypeCode] = None
    eventTypeCategory: Optional[EventTypeCategory] = None
    eventScopeCode: Optional[EventScopeCode] = None
    region: Optional[Region] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    lastUpdatedTime: Optional[Timestamp] = None
    statusCode: Optional[EventStatusCode] = None


class AwsAccountIdsList(BaseModel):
    __root__: Annotated[List[AccountId], Field(max_items=50, min_items=1)]


class MetadataValue(BaseModel):
    __root__: Annotated[str, Field(max_length=32766)]


class EventTypeModel(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=3, regex='[^:/]{3,100}')]


class MetadataKey(MetadataValue):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=127, regex='.{0,127}')]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=255, regex='.{0,255}')]


class DescribeAffectedAccountsForOrganizationResponse(BaseModel):
    affectedAccounts: Optional[AffectedAccountsList] = None
    eventScopeCode: Optional[EventScopeCode] = None
    nextToken: Optional[NextToken] = None


class DescribeAffectedAccountsForOrganizationRequest(BaseModel):
    eventArn: EventArn
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class DescribeAffectedEntitiesResponse(BaseModel):
    entities: Optional[EntityList] = None
    nextToken: Optional[NextToken] = None


class DescribeEntityAggregatesRequest(BaseModel):
    eventArns: Optional[EventArnsList] = None


class DescribeEventDetailsRequest(BaseModel):
    eventArns: EventArnList
    locale: Optional[Locale] = None


class DescribeHealthServiceStatusForOrganizationResponse(BaseModel):
    healthServiceAccessStatusForOrganization: Optional[
        HealthServiceAccessStatusForOrganization
    ] = None


class OrganizationAffectedEntitiesErrorItem(BaseModel):
    """
    Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeAffectedEntitiesForOrganization.html">DescribeAffectedEntitiesForOrganization</a> operation can't find or process a specific entity.
    """

    awsAccountId: Optional[AccountId] = None
    eventArn: Optional[EventArn] = None
    errorName: Optional[String] = None
    errorMessage: Optional[String] = None


class DescribeAffectedEntitiesForOrganizationFailedSet(BaseModel):
    __root__: List[OrganizationAffectedEntitiesErrorItem]


class OrganizationEntityFiltersList(BaseModel):
    __root__: Annotated[List[EventAccountFilter], Field(max_items=10, min_items=1)]


class EntityFilter(BaseModel):
    """
    The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EntityFilter.html">EntityFilter</a> operation.
    """

    eventArns: EventArnList
    entityArns: Optional[EntityArnList] = None
    entityValues: Optional[EntityValueList] = None
    lastUpdatedTimes: Optional[DateTimeRangeList] = None
    tags: Optional[TagFilter] = None
    statusCodes: Optional[EntityStatusCodeList] = None


class EntityAggregateList(BaseModel):
    __root__: List[EntityAggregate]


class EventAggregateList(BaseModel):
    __root__: List[EventAggregate]


class EventDetailsErrorItem(BaseModel):
    """
    Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation can't find a specified event.
    """

    eventArn: Optional[EventArn] = None
    errorName: Optional[String] = None
    errorMessage: Optional[String] = None


class DescribeEventDetailsFailedSet(BaseModel):
    __root__: List[EventDetailsErrorItem]


class OrganizationEventDetailsErrorItem(OrganizationAffectedEntitiesErrorItem):
    """
    Error information returned when a <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> operation can't find a specified event.
    """

    pass


class DescribeEventDetailsForOrganizationFailedSet(BaseModel):
    __root__: List[OrganizationEventDetailsErrorItem]


class OrganizationEventDetailFiltersList(OrganizationEntityFiltersList):
    pass


class OrganizationEventDetails(BaseModel):
    """
    Detailed information about an event. A combination of an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a> object, an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventDescription.html">EventDescription</a> object, and additional metadata about the event. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetailsForOrganization.html">DescribeEventDetailsForOrganization</a> operation.
    """

    awsAccountId: Optional[AccountId] = None
    event: Optional[Event] = None
    eventDescription: Optional[EventDescription] = None
    eventMetadata: Optional[EventMetadata] = None


class EventDetails(BaseModel):
    """
    Detailed information about an event. A combination of an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_Event.html">Event</a> object, an <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_EventDescription.html">EventDescription</a> object, and additional metadata about the event. Returned by the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventDetails.html">DescribeEventDetails</a> operation.
    """

    event: Optional[Event] = None
    eventDescription: Optional[EventDescription] = None
    eventMetadata: Optional[EventMetadata] = None


class EventTypeFilter(BaseModel):
    """
    The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventTypes.html">DescribeEventTypes</a> operation.
    """

    eventTypeCodes: Optional[EventTypeCodeList] = None
    services: Optional[ServiceList] = None
    eventTypeCategories: Optional[EventTypeCategoryListModel] = None


class EventTypeList(BaseModel):
    __root__: List[EventType]


class OrganizationEventList(BaseModel):
    __root__: List[OrganizationEvent]


class EventList(BaseModel):
    __root__: List[Event]


class EventTypeListModel(BaseModel):
    __root__: Annotated[List[EventTypeModel], Field(max_items=10, min_items=1)]


class DescribeAffectedEntitiesRequest(BaseModel):
    filter: EntityFilter
    locale: Optional[Locale] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class DescribeAffectedEntitiesForOrganizationResponse(BaseModel):
    entities: Optional[EntityList] = None
    failedSet: Optional[DescribeAffectedEntitiesForOrganizationFailedSet] = None
    nextToken: Optional[NextToken] = None


class DescribeAffectedEntitiesForOrganizationRequest(BaseModel):
    organizationEntityFilters: OrganizationEntityFiltersList
    locale: Optional[Locale] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResultsLowerRange] = None


class DescribeEntityAggregatesResponse(BaseModel):
    entityAggregates: Optional[EntityAggregateList] = None


class DescribeEventAggregatesResponse(BaseModel):
    eventAggregates: Optional[EventAggregateList] = None
    nextToken: Optional[NextToken] = None


class DescribeEventDetailsForOrganizationRequest(BaseModel):
    organizationEventDetailFilters: OrganizationEventDetailFiltersList
    locale: Optional[Locale] = None


class DescribeEventTypesResponse(BaseModel):
    eventTypes: Optional[EventTypeList] = None
    nextToken: Optional[NextToken] = None


class DescribeEventTypesRequest(BaseModel):
    filter: Optional[EventTypeFilter] = None
    locale: Optional[Locale] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class DescribeEventsResponse(BaseModel):
    events: Optional[EventList] = None
    nextToken: Optional[NextToken] = None


class DescribeEventsForOrganizationResponse(BaseModel):
    events: Optional[OrganizationEventList] = None
    nextToken: Optional[NextToken] = None


class EventFilter(BaseModel):
    """
    The values to use to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEvents.html">DescribeEvents</a> and <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventAggregates.html">DescribeEventAggregates</a> operations.
    """

    eventArns: Optional[EventArnList] = None
    eventTypeCodes: Optional[EventTypeListModel] = None
    services: Optional[ServiceList] = None
    regions: Optional[RegionList] = None
    availabilityZones: Optional[AvailabilityZones] = None
    startTimes: Optional[DateTimeRangeList] = None
    endTimes: Optional[DateTimeRangeList] = None
    lastUpdatedTimes: Optional[DateTimeRangeList] = None
    entityArns: Optional[EntityArnList] = None
    entityValues: Optional[EntityValueList] = None
    eventTypeCategories: Optional[EventTypeCategoryList] = None
    tags: Optional[TagFilter] = None
    eventStatusCodes: Optional[EventStatusCodeList] = None


class DescribeEventDetailsForOrganizationSuccessfulSet(BaseModel):
    __root__: List[OrganizationEventDetails]


class DescribeEventDetailsSuccessfulSet(BaseModel):
    __root__: List[EventDetails]


class OrganizationEventFilter(BaseModel):
    """
    The values to filter results from the <a href="https://docs.aws.amazon.com/health/latest/APIReference/API_DescribeEventsForOrganization.html">DescribeEventsForOrganization</a> operation.
    """

    eventTypeCodes: Optional[EventTypeListModel] = None
    awsAccountIds: Optional[AwsAccountIdsList] = None
    services: Optional[ServiceList] = None
    regions: Optional[RegionList] = None
    startTime: Optional[DateTimeRange] = None
    endTime: Optional[DateTimeRange] = None
    lastUpdatedTime: Optional[DateTimeRange] = None
    entityArns: Optional[EntityArnList] = None
    entityValues: Optional[EntityValueList] = None
    eventTypeCategories: Optional[EventTypeCategoryList] = None
    eventStatusCodes: Optional[EventStatusCodeList] = None


class DescribeEventAggregatesRequest(BaseModel):
    filter: Optional[EventFilter] = None
    aggregateField: EventAggregateField
    maxResults: Optional[MaxResults] = None
    nextToken: Optional[NextToken] = None


class DescribeEventDetailsResponse(BaseModel):
    successfulSet: Optional[DescribeEventDetailsSuccessfulSet] = None
    failedSet: Optional[DescribeEventDetailsFailedSet] = None


class DescribeEventDetailsForOrganizationResponse(BaseModel):
    successfulSet: Optional[DescribeEventDetailsForOrganizationSuccessfulSet] = None
    failedSet: Optional[DescribeEventDetailsForOrganizationFailedSet] = None


class DescribeEventsRequest(BaseModel):
    filter: Optional[EventFilter] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None
    locale: Optional[Locale] = None


class DescribeEventsForOrganizationRequest(BaseModel):
    filter: Optional[OrganizationEventFilter] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResultsLowerRange] = None
    locale: Optional[Locale] = None

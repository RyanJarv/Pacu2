# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:47:04+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ResourceConflictException(ResourceNotFoundException):
    pass


class InternalServiceException(ResourceNotFoundException):
    pass


class InvalidRequestException(ResourceNotFoundException):
    pass


class InvalidParameterException(ResourceNotFoundException):
    pass


class ServiceQuotaExceededException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class BotName(BaseModel):
    __root__: Annotated[str, Field(max_length=50)]


class LexRegion(BaseModel):
    __root__: Annotated[str, Field(max_length=60)]


class AliasArn(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class LimitExceededException(ResourceNotFoundException):
    pass


class AssociationId(AliasArn):
    pass


class StorageType(Enum):
    S3 = 'S3'
    KINESIS_VIDEO_STREAM = 'KINESIS_VIDEO_STREAM'
    KINESIS_STREAM = 'KINESIS_STREAM'
    KINESIS_FIREHOSE = 'KINESIS_FIREHOSE'


class QuickConnectId(BaseModel):
    __root__: str


class AssociateSecurityKeyResponse(BaseModel):
    AssociationId: Optional[AssociationId] = None


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class DuplicateResourceException(ResourceNotFoundException):
    pass


class InvalidContactFlowException(ResourceNotFoundException):
    pass


class OutboundCallerIdName(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class PhoneNumberId(QuickConnectId):
    pass


class ContactFlowId(BaseModel):
    __root__: Annotated[str, Field(max_length=500)]


class QuickConnectType(Enum):
    USER = 'USER'
    QUEUE = 'QUEUE'
    PHONE_NUMBER = 'PHONE_NUMBER'


class AgentFirstName(AliasArn):
    pass


class AgentLastName(AliasArn):
    pass


class Email(QuickConnectId):
    pass


class PhoneType(Enum):
    SOFT_PHONE = 'SOFT_PHONE'
    DESK_PHONE = 'DESK_PHONE'


class AutoAccept(BaseModel):
    __root__: bool


class AfterContactWorkTimeLimit(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class PhoneNumber(QuickConnectId):
    pass


class SecurityProfileId(QuickConnectId):
    pass


class ResourceInUseException(ResourceNotFoundException):
    pass


class ContactFlowNotPublishedException(ResourceNotFoundException):
    pass


class Grouping(Enum):
    QUEUE = 'QUEUE'
    CHANNEL = 'CHANNEL'


class UserNotFoundException(ResourceNotFoundException):
    pass


class AgentStatusType(Enum):
    ROUTABLE = 'ROUTABLE'
    CUSTOM = 'CUSTOM'
    OFFLINE = 'OFFLINE'


class ContactFlowType(Enum):
    CONTACT_FLOW = 'CONTACT_FLOW'
    CUSTOMER_QUEUE = 'CUSTOMER_QUEUE'
    CUSTOMER_HOLD = 'CUSTOMER_HOLD'
    CUSTOMER_WHISPER = 'CUSTOMER_WHISPER'
    AGENT_HOLD = 'AGENT_HOLD'
    AGENT_WHISPER = 'AGENT_WHISPER'
    OUTBOUND_WHISPER = 'OUTBOUND_WHISPER'
    AGENT_TRANSFER = 'AGENT_TRANSFER'
    QUEUE_TRANSFER = 'QUEUE_TRANSFER'


class PhoneNumberType(Enum):
    TOLL_FREE = 'TOLL_FREE'
    DID = 'DID'


class PhoneNumberCountryCode(Enum):
    AF = 'AF'
    AL = 'AL'
    DZ = 'DZ'
    AS = 'AS'
    AD = 'AD'
    AO = 'AO'
    AI = 'AI'
    AQ = 'AQ'
    AG = 'AG'
    AR = 'AR'
    AM = 'AM'
    AW = 'AW'
    AU = 'AU'
    AT = 'AT'
    AZ = 'AZ'
    BS = 'BS'
    BH = 'BH'
    BD = 'BD'
    BB = 'BB'
    BY = 'BY'
    BE = 'BE'
    BZ = 'BZ'
    BJ = 'BJ'
    BM = 'BM'
    BT = 'BT'
    BO = 'BO'
    BA = 'BA'
    BW = 'BW'
    BR = 'BR'
    IO = 'IO'
    VG = 'VG'
    BN = 'BN'
    BG = 'BG'
    BF = 'BF'
    BI = 'BI'
    KH = 'KH'
    CM = 'CM'
    CA = 'CA'
    CV = 'CV'
    KY = 'KY'
    CF = 'CF'
    TD = 'TD'
    CL = 'CL'
    CN = 'CN'
    CX = 'CX'
    CC = 'CC'
    CO = 'CO'
    KM = 'KM'
    CK = 'CK'
    CR = 'CR'
    HR = 'HR'
    CU = 'CU'
    CW = 'CW'
    CY = 'CY'
    CZ = 'CZ'
    CD = 'CD'
    DK = 'DK'
    DJ = 'DJ'
    DM = 'DM'
    DO = 'DO'
    TL = 'TL'
    EC = 'EC'
    EG = 'EG'
    SV = 'SV'
    GQ = 'GQ'
    ER = 'ER'
    EE = 'EE'
    ET = 'ET'
    FK = 'FK'
    FO = 'FO'
    FJ = 'FJ'
    FI = 'FI'
    FR = 'FR'
    PF = 'PF'
    GA = 'GA'
    GM = 'GM'
    GE = 'GE'
    DE = 'DE'
    GH = 'GH'
    GI = 'GI'
    GR = 'GR'
    GL = 'GL'
    GD = 'GD'
    GU = 'GU'
    GT = 'GT'
    GG = 'GG'
    GN = 'GN'
    GW = 'GW'
    GY = 'GY'
    HT = 'HT'
    HN = 'HN'
    HK = 'HK'
    HU = 'HU'
    IS = 'IS'
    IN = 'IN'
    ID = 'ID'
    IR = 'IR'
    IQ = 'IQ'
    IE = 'IE'
    IM = 'IM'
    IL = 'IL'
    IT = 'IT'
    CI = 'CI'
    JM = 'JM'
    JP = 'JP'
    JE = 'JE'
    JO = 'JO'
    KZ = 'KZ'
    KE = 'KE'
    KI = 'KI'
    KW = 'KW'
    KG = 'KG'
    LA = 'LA'
    LV = 'LV'
    LB = 'LB'
    LS = 'LS'
    LR = 'LR'
    LY = 'LY'
    LI = 'LI'
    LT = 'LT'
    LU = 'LU'
    MO = 'MO'
    MK = 'MK'
    MG = 'MG'
    MW = 'MW'
    MY = 'MY'
    MV = 'MV'
    ML = 'ML'
    MT = 'MT'
    MH = 'MH'
    MR = 'MR'
    MU = 'MU'
    YT = 'YT'
    MX = 'MX'
    FM = 'FM'
    MD = 'MD'
    MC = 'MC'
    MN = 'MN'
    ME = 'ME'
    MS = 'MS'
    MA = 'MA'
    MZ = 'MZ'
    MM = 'MM'
    NA = 'NA'
    NR = 'NR'
    NP = 'NP'
    NL = 'NL'
    AN = 'AN'
    NC = 'NC'
    NZ = 'NZ'
    NI = 'NI'
    NE = 'NE'
    NG = 'NG'
    NU = 'NU'
    KP = 'KP'
    MP = 'MP'
    NO = 'NO'
    OM = 'OM'
    PK = 'PK'
    PW = 'PW'
    PA = 'PA'
    PG = 'PG'
    PY = 'PY'
    PE = 'PE'
    PH = 'PH'
    PN = 'PN'
    PL = 'PL'
    PT = 'PT'
    PR = 'PR'
    QA = 'QA'
    CG = 'CG'
    RE = 'RE'
    RO = 'RO'
    RU = 'RU'
    RW = 'RW'
    BL = 'BL'
    SH = 'SH'
    KN = 'KN'
    LC = 'LC'
    MF = 'MF'
    PM = 'PM'
    VC = 'VC'
    WS = 'WS'
    SM = 'SM'
    ST = 'ST'
    SA = 'SA'
    SN = 'SN'
    RS = 'RS'
    SC = 'SC'
    SL = 'SL'
    SG = 'SG'
    SX = 'SX'
    SK = 'SK'
    SI = 'SI'
    SB = 'SB'
    SO = 'SO'
    ZA = 'ZA'
    KR = 'KR'
    ES = 'ES'
    LK = 'LK'
    SD = 'SD'
    SR = 'SR'
    SJ = 'SJ'
    SZ = 'SZ'
    SE = 'SE'
    CH = 'CH'
    SY = 'SY'
    TW = 'TW'
    TJ = 'TJ'
    TZ = 'TZ'
    TH = 'TH'
    TG = 'TG'
    TK = 'TK'
    TO = 'TO'
    TT = 'TT'
    TN = 'TN'
    TR = 'TR'
    TM = 'TM'
    TC = 'TC'
    TV = 'TV'
    VI = 'VI'
    UG = 'UG'
    UA = 'UA'
    AE = 'AE'
    GB = 'GB'
    US = 'US'
    UY = 'UY'
    UZ = 'UZ'
    VU = 'VU'
    VA = 'VA'
    VE = 'VE'
    VN = 'VN'
    WF = 'WF'
    EH = 'EH'
    YE = 'YE'
    ZM = 'ZM'
    ZW = 'ZW'


class QueueType(Enum):
    STANDARD = 'STANDARD'
    AGENT = 'AGENT'


class ResumeContactRecordingResponse(BaseModel):
    pass


class AttributeValue(BaseModel):
    __root__: Annotated[str, Field(max_length=32767, min_length=0)]


class DisplayName(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class ChatContentType(AliasArn):
    pass


class ChatContent(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class StartContactRecordingResponse(ResumeContactRecordingResponse):
    pass


class VoiceRecordingTrack(Enum):
    FROM_AGENT = 'FROM_AGENT'
    TO_AGENT = 'TO_AGENT'
    ALL = 'ALL'


class DestinationNotAllowedException(ResourceNotFoundException):
    pass


class OutboundContactNotPermittedException(ResourceNotFoundException):
    pass


class StopContactResponse(ResumeContactRecordingResponse):
    pass


class ContactNotFoundException(ResourceNotFoundException):
    pass


class StopContactRecordingResponse(ResumeContactRecordingResponse):
    pass


class SuspendContactRecordingResponse(ResumeContactRecordingResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class UpdateContactAttributesResponse(ResumeContactRecordingResponse):
    pass


class ARN(QuickConnectId):
    pass


class AgentStatusId(QuickConnectId):
    pass


class AgentStatusName(BaseModel):
    __root__: Annotated[str, Field(max_length=127, min_length=1)]


class AgentStatusDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=250, min_length=1)]


class AgentStatusOrderNumber(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class AgentStatusState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AgentStatus(BaseModel):
    """
    Contains information about an agent status.
    """

    AgentStatusARN: Optional[ARN] = None
    AgentStatusId: Optional[AgentStatusId] = None
    Name: Optional[AgentStatusName] = None
    Description: Optional[AgentStatusDescription] = None
    Type: Optional[AgentStatusType] = None
    DisplayOrder: Optional[AgentStatusOrderNumber] = None
    State: Optional[AgentStatusState] = None
    Tags: Optional[TagMap] = None


class AgentStatusSummary(BaseModel):
    """
    Summary information for an agent status.
    """

    Id: Optional[AgentStatusId] = None
    Arn: Optional[ARN] = None
    Name: Optional[AgentStatusName] = None
    Type: Optional[AgentStatusType] = None


class AgentStatusSummaryList(BaseModel):
    __root__: List[AgentStatusSummary]


class AgentStatusTypes(BaseModel):
    __root__: Annotated[List[AgentStatusType], Field(max_items=3)]


class AgentUsername(AliasArn):
    pass


class InstanceId(AliasArn):
    pass


class Origin(BaseModel):
    __root__: Annotated[str, Field(max_length=267)]


class AssociateApprovedOriginRequest(BaseModel):
    Origin: Origin


class LexBot(BaseModel):
    """
    Configuration information of an Amazon Lex bot.
    """

    Name: Optional[BotName] = None
    LexRegion: Optional[LexRegion] = None


class LexV2Bot(BaseModel):
    """
    Configuration information of an Amazon Lex V2 bot.
    """

    AliasArn: Optional[AliasArn] = None


class AssociateBotRequest(BaseModel):
    LexBot: Optional[LexBot] = None
    LexV2Bot: Optional[LexV2Bot] = None


class InstanceStorageResourceType(Enum):
    CHAT_TRANSCRIPTS = 'CHAT_TRANSCRIPTS'
    CALL_RECORDINGS = 'CALL_RECORDINGS'
    SCHEDULED_REPORTS = 'SCHEDULED_REPORTS'
    MEDIA_STREAMS = 'MEDIA_STREAMS'
    CONTACT_TRACE_RECORDS = 'CONTACT_TRACE_RECORDS'
    AGENT_EVENTS = 'AGENT_EVENTS'


class FunctionArn(BaseModel):
    __root__: Annotated[str, Field(max_length=140, min_length=1)]


class AssociateLambdaFunctionRequest(BaseModel):
    FunctionArn: FunctionArn


class AssociateLexBotRequest(BaseModel):
    LexBot: LexBot


class QueueId(QuickConnectId):
    pass


class QuickConnectsList(BaseModel):
    __root__: Annotated[List[QuickConnectId], Field(max_items=50, min_items=1)]


class AssociateQueueQuickConnectsRequest(BaseModel):
    QuickConnectIds: QuickConnectsList


class RoutingProfileId(QuickConnectId):
    pass


class PEM(ChatContent):
    pass


class AssociateSecurityKeyRequest(BaseModel):
    Key: PEM


class InstanceAttributeType(Enum):
    INBOUND_CALLS = 'INBOUND_CALLS'
    OUTBOUND_CALLS = 'OUTBOUND_CALLS'
    CONTACTFLOW_LOGS = 'CONTACTFLOW_LOGS'
    CONTACT_LENS = 'CONTACT_LENS'
    AUTO_RESOLVE_BEST_VOICES = 'AUTO_RESOLVE_BEST_VOICES'
    USE_CUSTOM_TTS_VOICES = 'USE_CUSTOM_TTS_VOICES'
    EARLY_MEDIA = 'EARLY_MEDIA'


class InstanceAttributeValue(AliasArn):
    pass


class Attribute(BaseModel):
    """
    A toggle for an individual feature at the instance level.
    """

    AttributeType: Optional[InstanceAttributeType] = None
    Value: Optional[InstanceAttributeValue] = None


class AttributeName(BaseModel):
    __root__: Annotated[str, Field(max_length=32767, min_length=1)]


class Attributes(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AttributesList(BaseModel):
    __root__: List[Attribute]


class Boolean(AutoAccept):
    pass


class BucketName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class Channel(Enum):
    VOICE = 'VOICE'
    CHAT = 'CHAT'
    TASK = 'TASK'


class ChatMessage(BaseModel):
    """
    A chat message.
    """

    ContentType: ChatContentType
    Content: ChatContent


class ClientToken(ContactFlowId):
    pass


class CommonNameLength127(AgentStatusName):
    pass


class Comparison(Enum):
    LT = 'LT'


class Concurrency(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class ContactFlowName(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class ContactFlowDescription(QuickConnectId):
    pass


class ContactFlowContent(QuickConnectId):
    pass


class ContactFlow(BaseModel):
    """
    Contains information about a contact flow.
    """

    Arn: Optional[ARN] = None
    Id: Optional[ContactFlowId] = None
    Name: Optional[ContactFlowName] = None
    Type: Optional[ContactFlowType] = None
    Description: Optional[ContactFlowDescription] = None
    Content: Optional[ContactFlowContent] = None
    Tags: Optional[TagMap] = None


class ContactFlowSummary(BaseModel):
    """
    <p>Contains summary information about a contact flow.</p> <p>You can also create and update contact flows using the <a href="https://docs.aws.amazon.com/connect/latest/adminguide/flow-language.html">Amazon Connect Flow language</a>.</p>
    """

    Id: Optional[ContactFlowId] = None
    Arn: Optional[ARN] = None
    Name: Optional[ContactFlowName] = None
    ContactFlowType: Optional[ContactFlowType] = None


class ContactFlowSummaryList(BaseModel):
    __root__: List[ContactFlowSummary]


class ContactFlowTypes(BaseModel):
    __root__: Annotated[List[ContactFlowType], Field(max_items=10)]


class ContactId(DisplayName):
    pass


class ContactReferences(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateAgentStatusRequest(BaseModel):
    Name: AgentStatusName
    Description: Optional[AgentStatusDescription] = None
    State: AgentStatusState
    DisplayOrder: Optional[AgentStatusOrderNumber] = None
    Tags: Optional[TagMap] = None


class CreateContactFlowRequest(BaseModel):
    Name: ContactFlowName
    Type: ContactFlowType
    Description: Optional[ContactFlowDescription] = None
    Content: ContactFlowContent
    Tags: Optional[TagMap] = None


class HoursOfOperationDescription(AgentStatusDescription):
    pass


class TimeZone(QuickConnectId):
    pass


class HoursOfOperationId(QuickConnectId):
    pass


class DirectoryType(Enum):
    SAML = 'SAML'
    CONNECT_MANAGED = 'CONNECT_MANAGED'
    EXISTING_DIRECTORY = 'EXISTING_DIRECTORY'


class DirectoryAlias(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=62,
            min_length=1,
            regex='^(?!d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*$',
        ),
    ]


class DirectoryId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=12, min_length=12, regex='^d-[0-9a-f]{10}$')
    ]


class InboundCallsEnabled(AutoAccept):
    pass


class OutboundCallsEnabled(AutoAccept):
    pass


class CreateInstanceRequest(BaseModel):
    ClientToken: Optional[ClientToken] = None
    IdentityManagementType: DirectoryType
    InstanceAlias: Optional[DirectoryAlias] = None
    DirectoryId: Optional[DirectoryId] = None
    InboundCallsEnabled: InboundCallsEnabled
    OutboundCallsEnabled: OutboundCallsEnabled


class IntegrationType(Enum):
    EVENT = 'EVENT'


class URI(BaseModel):
    __root__: Annotated[str, Field(max_length=2000, min_length=1)]


class SourceApplicationName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[a-zA-Z0-9_ -]+$')
    ]


class SourceType(Enum):
    SALESFORCE = 'SALESFORCE'
    ZENDESK = 'ZENDESK'


class CreateIntegrationAssociationRequest(BaseModel):
    IntegrationType: IntegrationType
    IntegrationArn: ARN
    SourceApplicationUrl: URI
    SourceApplicationName: SourceApplicationName
    SourceType: SourceType
    Tags: Optional[TagMap] = None


class IntegrationAssociationId(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=1)]


class QueueDescription(AgentStatusDescription):
    pass


class OutboundCallerConfig(BaseModel):
    """
    The outbound caller ID name, number, and outbound whisper flow.
    """

    OutboundCallerIdName: Optional[OutboundCallerIdName] = None
    OutboundCallerIdNumberId: Optional[PhoneNumberId] = None
    OutboundFlowId: Optional[ContactFlowId] = None


class QueueMaxContacts(AfterContactWorkTimeLimit):
    pass


class CreateQueueRequest(BaseModel):
    Name: CommonNameLength127
    Description: Optional[QueueDescription] = None
    OutboundCallerConfig: Optional[OutboundCallerConfig] = None
    HoursOfOperationId: HoursOfOperationId
    MaxContacts: Optional[QueueMaxContacts] = None
    QuickConnectIds: Optional[QuickConnectsList] = None
    Tags: Optional[TagMap] = None


class QuickConnectName(AgentStatusName):
    pass


class QuickConnectDescription(AgentStatusDescription):
    pass


class RoutingProfileName(AgentStatusName):
    pass


class RoutingProfileDescription(AgentStatusDescription):
    pass


class UseCaseType(Enum):
    RULES_EVALUATION = 'RULES_EVALUATION'


class CreateUseCaseRequest(BaseModel):
    UseCaseType: UseCaseType
    Tags: Optional[TagMap] = None


class UseCaseId(IntegrationAssociationId):
    pass


class HierarchyGroupName(QuickConnectId):
    pass


class HierarchyGroupId(QuickConnectId):
    pass


class CreateUserHierarchyGroupRequest(BaseModel):
    Name: HierarchyGroupName
    ParentGroupId: Optional[HierarchyGroupId] = None


class Password(BaseModel):
    __root__: Annotated[
        str, Field(regex='/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d\\S]{8,64}$/')
    ]


class UserIdentityInfo(BaseModel):
    """
    Contains information about the identity of a user.
    """

    FirstName: Optional[AgentFirstName] = None
    LastName: Optional[AgentLastName] = None
    Email: Optional[Email] = None


class UserPhoneConfig(BaseModel):
    """
    Contains information about the phone configuration settings for a user.
    """

    PhoneType: PhoneType
    AutoAccept: Optional[AutoAccept] = None
    AfterContactWorkTimeLimit: Optional[AfterContactWorkTimeLimit] = None
    DeskPhoneNumber: Optional[PhoneNumber] = None


class DirectoryUserId(QuickConnectId):
    pass


class SecurityProfileIds(BaseModel):
    __root__: Annotated[List[SecurityProfileId], Field(max_items=10, min_items=1)]


class CreateUserRequest(BaseModel):
    Username: AgentUsername
    Password: Optional[Password] = None
    IdentityInfo: Optional[UserIdentityInfo] = None
    PhoneConfig: UserPhoneConfig
    DirectoryUserId: Optional[DirectoryUserId] = None
    SecurityProfileIds: SecurityProfileIds
    RoutingProfileId: RoutingProfileId
    HierarchyGroupId: Optional[HierarchyGroupId] = None
    Tags: Optional[TagMap] = None


class UserId(QuickConnectId):
    pass


class SecurityToken(BaseModel):
    __root__: SecretStr


class Timestamp(BaseModel):
    __root__: datetime


class Credentials(BaseModel):
    """
    Contains credentials to use for federation.
    """

    AccessToken: Optional[SecurityToken] = None
    AccessTokenExpiration: Optional[Timestamp] = None
    RefreshToken: Optional[SecurityToken] = None
    RefreshTokenExpiration: Optional[Timestamp] = None


class CurrentMetricName(Enum):
    """
    The current metric names.
    """

    AGENTS_ONLINE = 'AGENTS_ONLINE'
    AGENTS_AVAILABLE = 'AGENTS_AVAILABLE'
    AGENTS_ON_CALL = 'AGENTS_ON_CALL'
    AGENTS_NON_PRODUCTIVE = 'AGENTS_NON_PRODUCTIVE'
    AGENTS_AFTER_CONTACT_WORK = 'AGENTS_AFTER_CONTACT_WORK'
    AGENTS_ERROR = 'AGENTS_ERROR'
    AGENTS_STAFFED = 'AGENTS_STAFFED'
    CONTACTS_IN_QUEUE = 'CONTACTS_IN_QUEUE'
    OLDEST_CONTACT_AGE = 'OLDEST_CONTACT_AGE'
    CONTACTS_SCHEDULED = 'CONTACTS_SCHEDULED'
    AGENTS_ON_CONTACT = 'AGENTS_ON_CONTACT'
    SLOTS_ACTIVE = 'SLOTS_ACTIVE'
    SLOTS_AVAILABLE = 'SLOTS_AVAILABLE'


class Unit(Enum):
    SECONDS = 'SECONDS'
    COUNT = 'COUNT'
    PERCENT = 'PERCENT'


class Value2(BaseModel):
    __root__: float


class Delay(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=9999.0)]


class DeleteHoursOfOperationRequest(BaseModel):
    pass


class DeleteInstanceRequest(BaseModel):
    pass


class DeleteIntegrationAssociationRequest(BaseModel):
    pass


class DeleteQuickConnectRequest(BaseModel):
    pass


class DeleteUseCaseRequest(BaseModel):
    pass


class DeleteUserHierarchyGroupRequest(BaseModel):
    pass


class DeleteUserRequest(BaseModel):
    pass


class DescribeAgentStatusRequest(BaseModel):
    pass


class DescribeContactFlowRequest(BaseModel):
    pass


class DescribeHoursOfOperationRequest(BaseModel):
    pass


class DescribeInstanceAttributeRequest(BaseModel):
    pass


class DescribeInstanceRequest(BaseModel):
    pass


class DescribeInstanceStorageConfigRequest(BaseModel):
    pass


class DescribeQueueRequest(BaseModel):
    pass


class DescribeQuickConnectRequest(BaseModel):
    pass


class DescribeRoutingProfileRequest(BaseModel):
    pass


class DescribeUserHierarchyGroupRequest(BaseModel):
    pass


class DescribeUserHierarchyStructureRequest(BaseModel):
    pass


class DescribeUserRequest(BaseModel):
    pass


class User(BaseModel):
    """
    Contains information about a user account for a Amazon Connect instance.
    """

    Id: Optional[UserId] = None
    Arn: Optional[ARN] = None
    Username: Optional[AgentUsername] = None
    IdentityInfo: Optional[UserIdentityInfo] = None
    PhoneConfig: Optional[UserPhoneConfig] = None
    DirectoryUserId: Optional[DirectoryUserId] = None
    SecurityProfileIds: Optional[SecurityProfileIds] = None
    RoutingProfileId: Optional[RoutingProfileId] = None
    HierarchyGroupId: Optional[HierarchyGroupId] = None
    Tags: Optional[TagMap] = None


class Description12(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=0)]


class QueueReference(BaseModel):
    """
    Contains information about a queue resource for which metrics are returned.
    """

    Id: Optional[QueueId] = None
    Arn: Optional[ARN] = None


class DisassociateApprovedOriginRequest(BaseModel):
    pass


class DisassociateBotRequest(BaseModel):
    LexBot: Optional[LexBot] = None
    LexV2Bot: Optional[LexV2Bot] = None


class DisassociateInstanceStorageConfigRequest(BaseModel):
    pass


class DisassociateLambdaFunctionRequest(BaseModel):
    pass


class DisassociateLexBotRequest(BaseModel):
    pass


class DisassociateQueueQuickConnectsRequest(BaseModel):
    QuickConnectIds: QuickConnectsList


class DisassociateSecurityKeyRequest(BaseModel):
    pass


class EncryptionType(Enum):
    KMS = 'KMS'


class KeyId(BucketName):
    pass


class EncryptionConfig(BaseModel):
    """
    The encryption configuration.
    """

    EncryptionType: EncryptionType
    KeyId: KeyId


class FunctionArnsList(BaseModel):
    __root__: List[FunctionArn]


class GetContactAttributesRequest(BaseModel):
    pass


class Groupings(BaseModel):
    __root__: Annotated[List[Grouping], Field(max_items=2)]


class NextToken(QuickConnectId):
    pass


class MaxResult100(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class GetFederationTokenRequest(BaseModel):
    pass


class HierarchyLevelId(QuickConnectId):
    pass


class HierarchyGroupSummary(BaseModel):
    """
    Contains summary information about a hierarchy group.
    """

    Id: Optional[HierarchyGroupId] = None
    Arn: Optional[ARN] = None
    Name: Optional[HierarchyGroupName] = None


class HierarchyGroupSummaryList(BaseModel):
    __root__: List[HierarchyGroupSummary]


class HierarchyLevelName(QuickConnectId):
    pass


class HierarchyLevel(BaseModel):
    """
    Contains information about a hierarchy level.
    """

    Id: Optional[HierarchyLevelId] = None
    Arn: Optional[ARN] = None
    Name: Optional[HierarchyLevelName] = None


class HistoricalMetricName(Enum):
    """
    The historical metric names.
    """

    CONTACTS_QUEUED = 'CONTACTS_QUEUED'
    CONTACTS_HANDLED = 'CONTACTS_HANDLED'
    CONTACTS_ABANDONED = 'CONTACTS_ABANDONED'
    CONTACTS_CONSULTED = 'CONTACTS_CONSULTED'
    CONTACTS_AGENT_HUNG_UP_FIRST = 'CONTACTS_AGENT_HUNG_UP_FIRST'
    CONTACTS_HANDLED_INCOMING = 'CONTACTS_HANDLED_INCOMING'
    CONTACTS_HANDLED_OUTBOUND = 'CONTACTS_HANDLED_OUTBOUND'
    CONTACTS_HOLD_ABANDONS = 'CONTACTS_HOLD_ABANDONS'
    CONTACTS_TRANSFERRED_IN = 'CONTACTS_TRANSFERRED_IN'
    CONTACTS_TRANSFERRED_OUT = 'CONTACTS_TRANSFERRED_OUT'
    CONTACTS_TRANSFERRED_IN_FROM_QUEUE = 'CONTACTS_TRANSFERRED_IN_FROM_QUEUE'
    CONTACTS_TRANSFERRED_OUT_FROM_QUEUE = 'CONTACTS_TRANSFERRED_OUT_FROM_QUEUE'
    CONTACTS_MISSED = 'CONTACTS_MISSED'
    CALLBACK_CONTACTS_HANDLED = 'CALLBACK_CONTACTS_HANDLED'
    API_CONTACTS_HANDLED = 'API_CONTACTS_HANDLED'
    OCCUPANCY = 'OCCUPANCY'
    HANDLE_TIME = 'HANDLE_TIME'
    AFTER_CONTACT_WORK_TIME = 'AFTER_CONTACT_WORK_TIME'
    QUEUED_TIME = 'QUEUED_TIME'
    ABANDON_TIME = 'ABANDON_TIME'
    QUEUE_ANSWER_TIME = 'QUEUE_ANSWER_TIME'
    HOLD_TIME = 'HOLD_TIME'
    INTERACTION_TIME = 'INTERACTION_TIME'
    INTERACTION_AND_HOLD_TIME = 'INTERACTION_AND_HOLD_TIME'
    SERVICE_LEVEL = 'SERVICE_LEVEL'


class Statistic(Enum):
    SUM = 'SUM'
    MAX = 'MAX'
    AVG = 'AVG'


class Hours(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=87600.0)]


class Hours24Format(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=23.0)]


class HoursOfOperationDays(Enum):
    SUNDAY = 'SUNDAY'
    MONDAY = 'MONDAY'
    TUESDAY = 'TUESDAY'
    WEDNESDAY = 'WEDNESDAY'
    THURSDAY = 'THURSDAY'
    FRIDAY = 'FRIDAY'
    SATURDAY = 'SATURDAY'


class HoursOfOperationName(QuickConnectId):
    pass


class HoursOfOperationSummary(BaseModel):
    """
    Contains summary information about hours of operation for a contact center.
    """

    Id: Optional[HoursOfOperationId] = None
    Arn: Optional[ARN] = None
    Name: Optional[HoursOfOperationName] = None


class HoursOfOperationSummaryList(BaseModel):
    __root__: List[HoursOfOperationSummary]


class MinutesLimit60(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=59.0)]


class TimestampModel(Timestamp):
    pass


class InstanceStatus(Enum):
    CREATION_IN_PROGRESS = 'CREATION_IN_PROGRESS'
    ACTIVE = 'ACTIVE'
    CREATION_FAILED = 'CREATION_FAILED'


class String(QuickConnectId):
    pass


class InstanceSummary(BaseModel):
    """
    Information about the instance.
    """

    Id: Optional[InstanceId] = None
    Arn: Optional[ARN] = None
    IdentityManagementType: Optional[DirectoryType] = None
    InstanceAlias: Optional[DirectoryAlias] = None
    CreatedTime: Optional[TimestampModel] = None
    ServiceRole: Optional[ARN] = None
    InstanceStatus: Optional[InstanceStatus] = None
    InboundCallsEnabled: Optional[InboundCallsEnabled] = None
    OutboundCallsEnabled: Optional[OutboundCallsEnabled] = None


class InstanceSummaryList(BaseModel):
    __root__: List[InstanceSummary]


class IntegrationAssociationSummary(BaseModel):
    """
    Contains summary information about the associated AppIntegrations.
    """

    IntegrationAssociationId: Optional[IntegrationAssociationId] = None
    IntegrationAssociationArn: Optional[ARN] = None
    InstanceId: Optional[InstanceId] = None
    IntegrationType: Optional[IntegrationType] = None
    IntegrationArn: Optional[ARN] = None
    SourceApplicationUrl: Optional[URI] = None
    SourceApplicationName: Optional[SourceApplicationName] = None
    SourceType: Optional[SourceType] = None


class IntegrationAssociationSummaryList(BaseModel):
    __root__: List[IntegrationAssociationSummary]


class Prefix(BucketName):
    pass


class LexBotConfig(BaseModel):
    """
    Configuration information of an Amazon Lex or Amazon Lex V2 bot.
    """

    LexBot: Optional[LexBot] = None
    LexV2Bot: Optional[LexV2Bot] = None


class LexBotConfigList(BaseModel):
    __root__: List[LexBotConfig]


class LexBotsList(BaseModel):
    __root__: List[LexBot]


class LexVersion(Enum):
    V1 = 'V1'
    V2 = 'V2'


class MaxResult1000(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class ListAgentStatusRequest(BaseModel):
    pass


class MaxResult25(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=25.0)]


class ListApprovedOriginsRequest(BaseModel):
    pass


class OriginsList(BaseModel):
    __root__: List[Origin]


class ListBotsRequest(BaseModel):
    pass


class ListContactFlowsRequest(BaseModel):
    pass


class ListHoursOfOperationsRequest(BaseModel):
    pass


class MaxResult7(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=7.0)]


class ListInstanceAttributesRequest(BaseModel):
    pass


class MaxResult10(Concurrency):
    pass


class ListInstanceStorageConfigsRequest(BaseModel):
    pass


class ListInstancesRequest(BaseModel):
    pass


class ListIntegrationAssociationsRequest(BaseModel):
    pass


class ListLambdaFunctionsRequest(BaseModel):
    pass


class ListLexBotsRequest(BaseModel):
    pass


class PhoneNumberTypes(BaseModel):
    __root__: Annotated[List[PhoneNumberType], Field(max_items=2)]


class PhoneNumberCountryCodes(BaseModel):
    __root__: Annotated[List[PhoneNumberCountryCode], Field(max_items=10)]


class ListPhoneNumbersRequest(BaseModel):
    pass


class ListPromptsRequest(BaseModel):
    pass


class ListQueueQuickConnectsRequest(BaseModel):
    pass


class QueueTypes(BaseModel):
    __root__: Annotated[List[QueueType], Field(max_items=2)]


class ListQueuesRequest(BaseModel):
    pass


class QuickConnectTypes(BaseModel):
    __root__: Annotated[List[QuickConnectType], Field(max_items=3)]


class ListQuickConnectsRequest(BaseModel):
    pass


class ListRoutingProfileQueuesRequest(BaseModel):
    pass


class ListRoutingProfilesRequest(BaseModel):
    pass


class MaxResult2(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2.0)]


class ListSecurityKeysRequest(BaseModel):
    pass


class ListSecurityProfilesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ListUseCasesRequest(BaseModel):
    """
    Provides summary information about the use cases for the specified Amazon Connect AppIntegration association.
    """

    pass


class ListUserHierarchyGroupsRequest(BaseModel):
    pass


class ListUsersRequest(BaseModel):
    pass


class Name23(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=0)]


class ParticipantDetails(BaseModel):
    """
    The customer's details.
    """

    DisplayName: DisplayName


class ParticipantId(DisplayName):
    pass


class ParticipantToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class PhoneNumberSummary(BaseModel):
    """
    Contains summary information about a phone number for a contact center.
    """

    Id: Optional[PhoneNumberId] = None
    Arn: Optional[ARN] = None
    PhoneNumber: Optional[PhoneNumber] = None
    PhoneNumberType: Optional[PhoneNumberType] = None
    PhoneNumberCountryCode: Optional[PhoneNumberCountryCode] = None


class Priority(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=99.0)]


class PromptId(DisplayName):
    pass


class PromptName(DisplayName):
    pass


class PromptSummary(BaseModel):
    """
    Contains information about the prompt.
    """

    Id: Optional[PromptId] = None
    Arn: Optional[ARN] = None
    Name: Optional[PromptName] = None


class QueueName(DisplayName):
    pass


class QueueSummary(BaseModel):
    """
    Contains summary information about a queue.
    """

    Id: Optional[QueueId] = None
    Arn: Optional[ARN] = None
    Name: Optional[QueueName] = None
    QueueType: Optional[QueueType] = None


class QuickConnectSummary(BaseModel):
    """
    Contains summary information about a quick connect.
    """

    Id: Optional[QuickConnectId] = None
    Arn: Optional[ARN] = None
    Name: Optional[QuickConnectName] = None
    QuickConnectType: Optional[QuickConnectType] = None


class ReferenceValue(Description12):
    pass


class ReferenceType(Enum):
    URL = 'URL'


class ReferenceKey(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1)]


class ResumeContactRecordingRequest(BaseModel):
    InstanceId: InstanceId
    ContactId: ContactId
    InitialContactId: ContactId


class RoutingProfileQueueConfigSummary(BaseModel):
    """
    Contains summary information about a routing profile queue.
    """

    QueueId: QueueId
    QueueArn: ARN
    QueueName: QueueName
    Priority: Priority
    Delay: Delay
    Channel: Channel


class RoutingProfileSummary(BaseModel):
    """
    Contains summary information about a routing profile.
    """

    Id: Optional[RoutingProfileId] = None
    Arn: Optional[ARN] = None
    Name: Optional[RoutingProfileName] = None


class SecurityKey(BaseModel):
    """
    Configuration information of the security key.
    """

    AssociationId: Optional[AssociationId] = None
    Key: Optional[PEM] = None
    CreationTime: Optional[Timestamp] = None


class SecurityProfileName(QuickConnectId):
    pass


class SecurityProfileSummary(BaseModel):
    """
    Contains information about a security profile.
    """

    Id: Optional[SecurityProfileId] = None
    Arn: Optional[ARN] = None
    Name: Optional[SecurityProfileName] = None


class StartChatContactRequest(BaseModel):
    InstanceId: InstanceId
    ContactFlowId: ContactFlowId
    Attributes: Optional[Attributes] = None
    ParticipantDetails: ParticipantDetails
    InitialMessage: Optional[ChatMessage] = None
    ClientToken: Optional[ClientToken] = None


class VoiceRecordingConfiguration(BaseModel):
    """
    Contains information about the recording configuration settings.
    """

    VoiceRecordingTrack: Optional[VoiceRecordingTrack] = None


class StartContactRecordingRequest(BaseModel):
    InstanceId: InstanceId
    ContactId: ContactId
    InitialContactId: ContactId
    VoiceRecordingConfiguration: VoiceRecordingConfiguration


class StartOutboundVoiceContactRequest(BaseModel):
    DestinationPhoneNumber: PhoneNumber
    ContactFlowId: ContactFlowId
    InstanceId: InstanceId
    ClientToken: Optional[ClientToken] = None
    SourcePhoneNumber: Optional[PhoneNumber] = None
    QueueId: Optional[QueueId] = None
    Attributes: Optional[Attributes] = None


class StartTaskContactRequest(BaseModel):
    InstanceId: InstanceId
    PreviousContactId: Optional[ContactId] = None
    ContactFlowId: ContactFlowId
    Attributes: Optional[Attributes] = None
    Name: Name23
    References: Optional[ContactReferences] = None
    Description: Optional[Description12] = None
    ClientToken: Optional[ClientToken] = None


class StopContactRecordingRequest(BaseModel):
    InstanceId: InstanceId
    ContactId: ContactId
    InitialContactId: ContactId


class StopContactRequest(BaseModel):
    ContactId: ContactId
    InstanceId: InstanceId


class SuspendContactRecordingRequest(BaseModel):
    InstanceId: InstanceId
    ContactId: ContactId
    InitialContactId: ContactId


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class ThresholdValue(Value2):
    pass


class UntagResourceRequest(BaseModel):
    pass


class UpdateAgentStatusDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=250, min_length=0)]


class UpdateAgentStatusRequest(BaseModel):
    Name: Optional[AgentStatusName] = None
    Description: Optional[UpdateAgentStatusDescription] = None
    State: Optional[AgentStatusState] = None
    DisplayOrder: Optional[AgentStatusOrderNumber] = None
    ResetOrderNumber: Optional[Boolean] = None


class UpdateContactAttributesRequest(BaseModel):
    InitialContactId: ContactId
    InstanceId: InstanceId
    Attributes: Attributes


class UpdateContactFlowContentRequest(BaseModel):
    Content: ContactFlowContent


class UpdateContactFlowNameRequest(BaseModel):
    Name: Optional[ContactFlowName] = None
    Description: Optional[ContactFlowDescription] = None


class UpdateHoursOfOperationDescription(UpdateAgentStatusDescription):
    pass


class UpdateInstanceAttributeRequest(BaseModel):
    Value: InstanceAttributeValue


class UpdateQueueHoursOfOperationRequest(BaseModel):
    HoursOfOperationId: HoursOfOperationId


class UpdateQueueMaxContactsRequest(BaseModel):
    MaxContacts: Optional[QueueMaxContacts] = None


class UpdateQueueNameRequest(BaseModel):
    Name: Optional[CommonNameLength127] = None
    Description: Optional[QueueDescription] = None


class UpdateQueueOutboundCallerConfigRequest(BaseModel):
    OutboundCallerConfig: OutboundCallerConfig


class UpdateQueueStatusRequest(BaseModel):
    Status: AgentStatusState


class UpdateQuickConnectDescription(UpdateAgentStatusDescription):
    pass


class UpdateQuickConnectNameRequest(BaseModel):
    Name: Optional[QuickConnectName] = None
    Description: Optional[UpdateQuickConnectDescription] = None


class UpdateRoutingProfileDefaultOutboundQueueRequest(BaseModel):
    DefaultOutboundQueueId: QueueId


class UpdateRoutingProfileNameRequest(BaseModel):
    Name: Optional[RoutingProfileName] = None
    Description: Optional[RoutingProfileDescription] = None


class UpdateUserHierarchyGroupNameRequest(BaseModel):
    Name: HierarchyGroupName


class UpdateUserHierarchyRequest(BaseModel):
    HierarchyGroupId: Optional[HierarchyGroupId] = None


class UpdateUserIdentityInfoRequest(BaseModel):
    IdentityInfo: UserIdentityInfo


class UpdateUserPhoneConfigRequest(BaseModel):
    PhoneConfig: UserPhoneConfig


class UpdateUserRoutingProfileRequest(BaseModel):
    RoutingProfileId: RoutingProfileId


class UpdateUserSecurityProfilesRequest(BaseModel):
    SecurityProfileIds: SecurityProfileIds


class UseCase(BaseModel):
    """
    Contains the use case.
    """

    UseCaseId: Optional[UseCaseId] = None
    UseCaseArn: Optional[ARN] = None
    UseCaseType: Optional[UseCaseType] = None


class UserSummary(BaseModel):
    """
    Contains summary information about a user.
    """

    Id: Optional[UserId] = None
    Arn: Optional[ARN] = None
    Username: Optional[AgentUsername] = None


class AssociateInstanceStorageConfigResponse(AssociateSecurityKeyResponse):
    pass


class S3Config(BaseModel):
    """
    Information about the Amazon Simple Storage Service (Amazon S3) storage type.
    """

    BucketName: BucketName
    BucketPrefix: Prefix
    EncryptionConfig: Optional[EncryptionConfig] = None


class KinesisVideoStreamConfig(BaseModel):
    """
    Configuration information of a Kinesis video stream.
    """

    Prefix: Prefix
    RetentionPeriodHours: Hours
    EncryptionConfig: EncryptionConfig


class KinesisStreamConfig(BaseModel):
    """
    Configuration information of a Kinesis data stream.
    """

    StreamArn: ARN


class KinesisFirehoseConfig(BaseModel):
    """
    Configuration information of a Kinesis Data Firehose delivery stream.
    """

    FirehoseArn: ARN


class CreateAgentStatusResponse(BaseModel):
    AgentStatusARN: Optional[ARN] = None
    AgentStatusId: Optional[AgentStatusId] = None


class CreateContactFlowResponse(BaseModel):
    ContactFlowId: Optional[ContactFlowId] = None
    ContactFlowArn: Optional[ARN] = None


class CreateHoursOfOperationResponse(BaseModel):
    HoursOfOperationId: Optional[HoursOfOperationId] = None
    HoursOfOperationArn: Optional[ARN] = None


class CreateInstanceResponse(BaseModel):
    Id: Optional[InstanceId] = None
    Arn: Optional[ARN] = None


class CreateIntegrationAssociationResponse(BaseModel):
    IntegrationAssociationId: Optional[IntegrationAssociationId] = None
    IntegrationAssociationArn: Optional[ARN] = None


class CreateQueueResponse(BaseModel):
    QueueArn: Optional[ARN] = None
    QueueId: Optional[QueueId] = None


class CreateQuickConnectResponse(BaseModel):
    QuickConnectARN: Optional[ARN] = None
    QuickConnectId: Optional[QuickConnectId] = None


class UserQuickConnectConfig(BaseModel):
    """
    Contains information about the quick connect configuration settings for a user. The contact flow must be of type Transfer to Agent.
    """

    UserId: UserId
    ContactFlowId: ContactFlowId


class QueueQuickConnectConfig(BaseModel):
    """
    Contains information about a queue for a quick connect. The contact flow must be of type Transfer to Queue.
    """

    QueueId: QueueId
    ContactFlowId: ContactFlowId


class PhoneNumberQuickConnectConfig(BaseModel):
    """
    Contains information about a phone number for a quick connect.
    """

    PhoneNumber: PhoneNumber


class CreateRoutingProfileResponse(BaseModel):
    RoutingProfileArn: Optional[ARN] = None
    RoutingProfileId: Optional[RoutingProfileId] = None


class MediaConcurrency(BaseModel):
    """
    Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
    """

    Channel: Channel
    Concurrency: Concurrency


class CreateUseCaseResponse(BaseModel):
    UseCaseId: Optional[UseCaseId] = None
    UseCaseArn: Optional[ARN] = None


class CreateUserResponse(BaseModel):
    UserId: Optional[UserId] = None
    UserArn: Optional[ARN] = None


class CreateUserHierarchyGroupResponse(BaseModel):
    HierarchyGroupId: Optional[HierarchyGroupId] = None
    HierarchyGroupArn: Optional[ARN] = None


class DescribeAgentStatusResponse(BaseModel):
    AgentStatus: Optional[AgentStatus] = None


class DescribeContactFlowResponse(BaseModel):
    ContactFlow: Optional[ContactFlow] = None


class DescribeInstanceAttributeResponse(BaseModel):
    Attribute: Optional[Attribute] = None


class DescribeUserResponse(BaseModel):
    User: Optional[User] = None


class RoutingProfileQueueReference(BaseModel):
    """
    Contains the channel and queue identifier for a routing profile.
    """

    QueueId: QueueId
    Channel: Channel


class GetContactAttributesResponse(BaseModel):
    Attributes: Optional[Attributes] = None


class Queues(BaseModel):
    __root__: Annotated[List[QueueId], Field(max_items=100, min_items=1)]


class Channels(BaseModel):
    __root__: Annotated[List[Channel], Field(max_items=1)]


class CurrentMetric(BaseModel):
    """
    Contains information about a real-time metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/real-time-metrics-definitions.html">Real-time Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.
    """

    Name: Optional[CurrentMetricName] = None
    Unit: Optional[Unit] = None


class GetFederationTokenResponse(BaseModel):
    Credentials: Optional[Credentials] = None


class ListAgentStatusResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    AgentStatusSummaryList: Optional[AgentStatusSummaryList] = None


class ListApprovedOriginsResponse(BaseModel):
    Origins: Optional[OriginsList] = None
    NextToken: Optional[NextToken] = None


class ListBotsResponse(BaseModel):
    LexBots: Optional[LexBotConfigList] = None
    NextToken: Optional[NextToken] = None


class ListContactFlowsResponse(BaseModel):
    ContactFlowSummaryList: Optional[ContactFlowSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListHoursOfOperationsResponse(BaseModel):
    HoursOfOperationSummaryList: Optional[HoursOfOperationSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListInstanceAttributesResponse(BaseModel):
    Attributes: Optional[AttributesList] = None
    NextToken: Optional[NextToken] = None


class ListInstancesResponse(BaseModel):
    InstanceSummaryList: Optional[InstanceSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListIntegrationAssociationsResponse(BaseModel):
    IntegrationAssociationSummaryList: Optional[
        IntegrationAssociationSummaryList
    ] = None
    NextToken: Optional[NextToken] = None


class ListLambdaFunctionsResponse(BaseModel):
    LambdaFunctions: Optional[FunctionArnsList] = None
    NextToken: Optional[NextToken] = None


class ListLexBotsResponse(BaseModel):
    LexBots: Optional[LexBotsList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class ListUserHierarchyGroupsResponse(BaseModel):
    UserHierarchyGroupSummaryList: Optional[HierarchyGroupSummaryList] = None
    NextToken: Optional[NextToken] = None


class StartChatContactResponse(BaseModel):
    ContactId: Optional[ContactId] = None
    ParticipantId: Optional[ParticipantId] = None
    ParticipantToken: Optional[ParticipantToken] = None


class StartOutboundVoiceContactResponse(BaseModel):
    ContactId: Optional[ContactId] = None


class StartTaskContactResponse(StartOutboundVoiceContactResponse):
    pass


class Reference(BaseModel):
    """
    A link that an agent selects to complete a given task. You can have up to 4,096 UTF-8 bytes across all references for a contact.
    """

    Value: ReferenceValue
    Type: ReferenceType


class HierarchyLevelUpdate(BaseModel):
    """
    Contains information about the hierarchy level to update.
    """

    Name: HierarchyLevelName


class InstanceStorageConfig(BaseModel):
    """
    The storage configuration for the instance.
    """

    AssociationId: Optional[AssociationId] = None
    StorageType: StorageType
    S3Config: Optional[S3Config] = None
    KinesisVideoStreamConfig: Optional[KinesisVideoStreamConfig] = None
    KinesisStreamConfig: Optional[KinesisStreamConfig] = None
    KinesisFirehoseConfig: Optional[KinesisFirehoseConfig] = None


class AssociateInstanceStorageConfigRequest(BaseModel):
    ResourceType: InstanceStorageResourceType
    StorageConfig: InstanceStorageConfig


class QuickConnectConfig(BaseModel):
    """
    Contains configuration settings for a quick connect.
    """

    QuickConnectType: QuickConnectType
    UserConfig: Optional[UserQuickConnectConfig] = None
    QueueConfig: Optional[QueueQuickConnectConfig] = None
    PhoneConfig: Optional[PhoneNumberQuickConnectConfig] = None


class CreateQuickConnectRequest(BaseModel):
    Name: QuickConnectName
    Description: Optional[QuickConnectDescription] = None
    QuickConnectConfig: QuickConnectConfig
    Tags: Optional[TagMap] = None


class MediaConcurrencies(BaseModel):
    __root__: List[MediaConcurrency]


class CurrentMetricData(BaseModel):
    """
    Contains the data for a real-time metric.
    """

    Metric: Optional[CurrentMetric] = None
    Value: Optional[Value2] = None


class CurrentMetricDataCollections(BaseModel):
    __root__: List[CurrentMetricData]


class Dimensions(BaseModel):
    """
    Contains information about the dimensions for a set of metrics.
    """

    Queue: Optional[QueueReference] = None
    Channel: Optional[Channel] = None


class CurrentMetricResult(BaseModel):
    """
    Contains information about a set of real-time metrics.
    """

    Dimensions: Optional[Dimensions] = None
    Collections: Optional[CurrentMetricDataCollections] = None


class CurrentMetricResults(BaseModel):
    __root__: List[CurrentMetricResult]


class CurrentMetrics(BaseModel):
    __root__: List[CurrentMetric]


class Queue(BaseModel):
    """
    Contains information about a queue.
    """

    Name: Optional[CommonNameLength127] = None
    QueueArn: Optional[ARN] = None
    QueueId: Optional[QueueId] = None
    Description: Optional[QueueDescription] = None
    OutboundCallerConfig: Optional[OutboundCallerConfig] = None
    HoursOfOperationId: Optional[HoursOfOperationId] = None
    MaxContacts: Optional[QueueMaxContacts] = None
    Status: Optional[AgentStatusState] = None
    Tags: Optional[TagMap] = None


class QuickConnect(BaseModel):
    """
    Contains information about a quick connect.
    """

    QuickConnectARN: Optional[ARN] = None
    QuickConnectId: Optional[QuickConnectId] = None
    Name: Optional[QuickConnectName] = None
    Description: Optional[QuickConnectDescription] = None
    QuickConnectConfig: Optional[QuickConnectConfig] = None
    Tags: Optional[TagMap] = None


class RoutingProfile(BaseModel):
    """
    Contains information about a routing profile.
    """

    InstanceId: Optional[InstanceId] = None
    Name: Optional[RoutingProfileName] = None
    RoutingProfileArn: Optional[ARN] = None
    RoutingProfileId: Optional[RoutingProfileId] = None
    Description: Optional[RoutingProfileDescription] = None
    MediaConcurrencies: Optional[MediaConcurrencies] = None
    DefaultOutboundQueueId: Optional[QueueId] = None
    Tags: Optional[TagMap] = None


class HierarchyStructure(BaseModel):
    """
    Contains information about a hierarchy structure.
    """

    LevelOne: Optional[HierarchyLevel] = None
    LevelTwo: Optional[HierarchyLevel] = None
    LevelThree: Optional[HierarchyLevel] = None
    LevelFour: Optional[HierarchyLevel] = None
    LevelFive: Optional[HierarchyLevel] = None


class RoutingProfileQueueReferenceList(BaseModel):
    __root__: List[RoutingProfileQueueReference]


class DisassociateRoutingProfileQueuesRequest(BaseModel):
    QueueReferences: RoutingProfileQueueReferenceList


class Filters(BaseModel):
    """
    Contains the filter to apply when retrieving metrics.
    """

    Queues: Optional[Queues] = None
    Channels: Optional[Channels] = None


class GetCurrentMetricDataRequest(BaseModel):
    Filters: Filters
    Groupings: Optional[Groupings] = None
    CurrentMetrics: CurrentMetrics
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResult100] = None


class HierarchyPath(BaseModel):
    """
    Contains information about the levels of a hierarchy group.
    """

    LevelOne: Optional[HierarchyGroupSummary] = None
    LevelTwo: Optional[HierarchyGroupSummary] = None
    LevelThree: Optional[HierarchyGroupSummary] = None
    LevelFour: Optional[HierarchyGroupSummary] = None
    LevelFive: Optional[HierarchyGroupSummary] = None


class HierarchyStructureUpdate(BaseModel):
    """
    Contains information about the level hierarchy to update.
    """

    LevelOne: Optional[HierarchyLevelUpdate] = None
    LevelTwo: Optional[HierarchyLevelUpdate] = None
    LevelThree: Optional[HierarchyLevelUpdate] = None
    LevelFour: Optional[HierarchyLevelUpdate] = None
    LevelFive: Optional[HierarchyLevelUpdate] = None


class Threshold(BaseModel):
    """
    Contains information about the threshold for service level metrics.
    """

    Comparison: Optional[Comparison] = None
    ThresholdValue: Optional[ThresholdValue] = None


class HoursOfOperationTimeSlice(BaseModel):
    """
    The start time or end time for an hours of operation.
    """

    Hours: Hours24Format
    Minutes: MinutesLimit60


class InstanceStatusReason(BaseModel):
    """
    Relevant details why the instance was not successfully created.
    """

    Message: Optional[String] = None


class InstanceStorageConfigs(BaseModel):
    __root__: List[InstanceStorageConfig]


class PhoneNumberSummaryList(BaseModel):
    __root__: List[PhoneNumberSummary]


class PromptSummaryList(BaseModel):
    __root__: List[PromptSummary]


class QuickConnectSummaryList(BaseModel):
    __root__: List[QuickConnectSummary]


class QueueSummaryList(BaseModel):
    __root__: List[QueueSummary]


class RoutingProfileQueueConfigSummaryList(BaseModel):
    __root__: List[RoutingProfileQueueConfigSummary]


class RoutingProfileSummaryList(BaseModel):
    __root__: List[RoutingProfileSummary]


class SecurityKeysList(BaseModel):
    __root__: List[SecurityKey]


class SecurityProfileSummaryList(BaseModel):
    __root__: List[SecurityProfileSummary]


class UseCaseSummaryList(BaseModel):
    __root__: List[UseCase]


class UserSummaryList(BaseModel):
    __root__: List[UserSummary]


class UpdateInstanceStorageConfigRequest(BaseModel):
    StorageConfig: InstanceStorageConfig


class UpdateQuickConnectConfigRequest(BaseModel):
    QuickConnectConfig: QuickConnectConfig


class UpdateRoutingProfileConcurrencyRequest(BaseModel):
    MediaConcurrencies: MediaConcurrencies


class UpdateUserHierarchyStructureRequest(BaseModel):
    HierarchyStructure: HierarchyStructureUpdate


class RoutingProfileQueueConfig(BaseModel):
    """
    Contains information about the queue and channel for which priority and delay can be set.
    """

    QueueReference: RoutingProfileQueueReference
    Priority: Priority
    Delay: Delay


class HoursOfOperationConfig(BaseModel):
    """
    Contains information about the hours of operation.
    """

    Day: HoursOfOperationDays
    StartTime: HoursOfOperationTimeSlice
    EndTime: HoursOfOperationTimeSlice


class DescribeInstanceStorageConfigResponse(BaseModel):
    StorageConfig: Optional[InstanceStorageConfig] = None


class DescribeQueueResponse(BaseModel):
    Queue: Optional[Queue] = None


class DescribeQuickConnectResponse(BaseModel):
    QuickConnect: Optional[QuickConnect] = None


class DescribeRoutingProfileResponse(BaseModel):
    RoutingProfile: Optional[RoutingProfile] = None


class DescribeUserHierarchyStructureResponse(BaseModel):
    HierarchyStructure: Optional[HierarchyStructure] = None


class GetCurrentMetricDataResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MetricResults: Optional[CurrentMetricResults] = None
    DataSnapshotTime: Optional[Timestamp] = None


class HistoricalMetric(BaseModel):
    """
    Contains information about a historical metric. For a description of each metric, see <a href="https://docs.aws.amazon.com/connect/latest/adminguide/historical-metrics-definitions.html">Historical Metrics Definitions</a> in the <i>Amazon Connect Administrator Guide</i>.
    """

    Name: Optional[HistoricalMetricName] = None
    Threshold: Optional[Threshold] = None
    Statistic: Optional[Statistic] = None
    Unit: Optional[Unit] = None


class ListInstanceStorageConfigsResponse(BaseModel):
    StorageConfigs: Optional[InstanceStorageConfigs] = None
    NextToken: Optional[NextToken] = None


class ListPhoneNumbersResponse(BaseModel):
    PhoneNumberSummaryList: Optional[PhoneNumberSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListPromptsResponse(BaseModel):
    PromptSummaryList: Optional[PromptSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListQueueQuickConnectsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    QuickConnectSummaryList: Optional[QuickConnectSummaryList] = None


class ListQueuesResponse(BaseModel):
    QueueSummaryList: Optional[QueueSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListQuickConnectsResponse(BaseModel):
    QuickConnectSummaryList: Optional[QuickConnectSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListRoutingProfileQueuesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    RoutingProfileQueueConfigSummaryList: Optional[
        RoutingProfileQueueConfigSummaryList
    ] = None


class ListRoutingProfilesResponse(BaseModel):
    RoutingProfileSummaryList: Optional[RoutingProfileSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListSecurityKeysResponse(BaseModel):
    SecurityKeys: Optional[SecurityKeysList] = None
    NextToken: Optional[NextToken] = None


class ListSecurityProfilesResponse(BaseModel):
    SecurityProfileSummaryList: Optional[SecurityProfileSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListUseCasesResponse(BaseModel):
    UseCaseSummaryList: Optional[UseCaseSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListUsersResponse(BaseModel):
    UserSummaryList: Optional[UserSummaryList] = None
    NextToken: Optional[NextToken] = None


class RoutingProfileQueueConfigList(BaseModel):
    __root__: Annotated[
        List[RoutingProfileQueueConfig], Field(max_items=10, min_items=1)
    ]


class AssociateRoutingProfileQueuesRequest(BaseModel):
    QueueConfigs: RoutingProfileQueueConfigList


class HoursOfOperationConfigList(BaseModel):
    __root__: Annotated[List[HoursOfOperationConfig], Field(max_items=100, min_items=0)]


class CreateHoursOfOperationRequest(BaseModel):
    Name: CommonNameLength127
    Description: Optional[HoursOfOperationDescription] = None
    TimeZone: TimeZone
    Config_: Annotated[HoursOfOperationConfigList, Field(alias='Config')]
    Tags: Optional[TagMap] = None


class CreateRoutingProfileRequest(BaseModel):
    Name: RoutingProfileName
    Description: RoutingProfileDescription
    DefaultOutboundQueueId: QueueId
    QueueConfigs: Optional[RoutingProfileQueueConfigList] = None
    MediaConcurrencies: MediaConcurrencies
    Tags: Optional[TagMap] = None


class HoursOfOperation(BaseModel):
    """
    Information about of the hours of operation.
    """

    HoursOfOperationId: Optional[HoursOfOperationId] = None
    HoursOfOperationArn: Optional[ARN] = None
    Name: Optional[CommonNameLength127] = None
    Description: Optional[HoursOfOperationDescription] = None
    TimeZone: Optional[TimeZone] = None
    Config_: Annotated[
        Optional[HoursOfOperationConfigList], Field(alias='Config')
    ] = None
    Tags: Optional[TagMap] = None


class Instance(BaseModel):
    """
    The Amazon Connect instance.
    """

    Id: Optional[InstanceId] = None
    Arn: Optional[ARN] = None
    IdentityManagementType: Optional[DirectoryType] = None
    InstanceAlias: Optional[DirectoryAlias] = None
    CreatedTime: Optional[TimestampModel] = None
    ServiceRole: Optional[ARN] = None
    InstanceStatus: Optional[InstanceStatus] = None
    StatusReason: Optional[InstanceStatusReason] = None
    InboundCallsEnabled: Optional[InboundCallsEnabled] = None
    OutboundCallsEnabled: Optional[OutboundCallsEnabled] = None


class HierarchyGroup(BaseModel):
    """
    Contains information about a hierarchy group.
    """

    Id: Optional[HierarchyGroupId] = None
    Arn: Optional[ARN] = None
    Name: Optional[HierarchyGroupName] = None
    LevelId: Optional[HierarchyLevelId] = None
    HierarchyPath: Optional[HierarchyPath] = None


class HistoricalMetrics(BaseModel):
    __root__: List[HistoricalMetric]


class GetMetricDataRequest(BaseModel):
    StartTime: Timestamp
    EndTime: Timestamp
    Filters: Filters
    Groupings: Optional[Groupings] = None
    HistoricalMetrics: HistoricalMetrics
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResult100] = None


class HistoricalMetricData(BaseModel):
    """
    Contains the data for a historical metric.
    """

    Metric: Optional[HistoricalMetric] = None
    Value: Optional[Value2] = None


class HistoricalMetricDataCollections(BaseModel):
    __root__: List[HistoricalMetricData]


class HistoricalMetricResult(BaseModel):
    """
    Contains information about the historical metrics retrieved.
    """

    Dimensions: Optional[Dimensions] = None
    Collections: Optional[HistoricalMetricDataCollections] = None


class UpdateHoursOfOperationRequest(BaseModel):
    Name: Optional[CommonNameLength127] = None
    Description: Optional[UpdateHoursOfOperationDescription] = None
    TimeZone: Optional[TimeZone] = None
    Config_: Annotated[
        Optional[HoursOfOperationConfigList], Field(alias='Config')
    ] = None


class UpdateRoutingProfileQueuesRequest(BaseModel):
    QueueConfigs: RoutingProfileQueueConfigList


class DescribeHoursOfOperationResponse(BaseModel):
    HoursOfOperation: Optional[HoursOfOperation] = None


class DescribeInstanceResponse(BaseModel):
    Instance: Optional[Instance] = None


class DescribeUserHierarchyGroupResponse(BaseModel):
    HierarchyGroup: Optional[HierarchyGroup] = None


class HistoricalMetricResults(BaseModel):
    __root__: List[HistoricalMetricResult]


class GetMetricDataResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MetricResults: Optional[HistoricalMetricResults] = None

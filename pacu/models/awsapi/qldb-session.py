# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:54:10+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class BadRequestException(BaseModel):
    __root__: Any


class InvalidSessionException(BadRequestException):
    pass


class OccConflictException(BadRequestException):
    pass


class RateExceededException(BadRequestException):
    pass


class LimitExceededException(BadRequestException):
    pass


class CapacityExceededException(BadRequestException):
    pass


class AbortTransactionRequest(BaseModel):
    """
    Contains the details of the transaction to abort.
    """

    pass


class CommitDigest(BaseModel):
    __root__: str


class TransactionId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=22, min_length=22, regex='^[A-Za-z-0-9]+$')
    ]


class CommitTransactionRequest(BaseModel):
    """
    Contains the details of the transaction to commit.
    """

    TransactionId: TransactionId
    CommitDigest: CommitDigest


class EndSessionRequest(AbortTransactionRequest):
    """
    Specifies a request to end the session.
    """

    pass


class Statement(BaseModel):
    __root__: Annotated[str, Field(max_length=100000, min_length=1)]


class PageToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=4, regex='^[A-Za-z-0-9+/=]+$')
    ]


class FetchPageRequest(BaseModel):
    """
    Specifies the details of the page to be fetched.
    """

    TransactionId: TransactionId
    NextPageToken: PageToken


class ReadIOs(BaseModel):
    __root__: int


class WriteIOs(ReadIOs):
    pass


class IonBinary(BaseModel):
    __root__: Annotated[str, Field(max_length=131072, min_length=1)]


class IonText(BaseModel):
    __root__: Annotated[str, Field(max_length=1048576, min_length=1)]


class LedgerName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32,
            min_length=1,
            regex='(?!^.*--)(?!^[0-9]+$)(?!^-)(?!.*-$)^[A-Za-z0-9-]+$',
        ),
    ]


class ProcessingTimeMilliseconds(ReadIOs):
    pass


class SessionToken(PageToken):
    pass


class StartSessionRequest(BaseModel):
    """
    Specifies a request to start a new session.
    """

    LedgerName: LedgerName


class StartTransactionRequest(AbortTransactionRequest):
    """
    Specifies a request to start a transaction.
    """

    pass


class ValueHolder(BaseModel):
    """
    A structure that can contain a value in multiple encoding formats.
    """

    IonBinary: Optional[IonBinary] = None
    IonText: Optional[IonText] = None


class TimingInformation(BaseModel):
    """
    Contains server-side performance information for a command. Amazon QLDB captures timing information between the times when it receives the request and when it sends the corresponding response.
    """

    ProcessingTimeMilliseconds: Optional[ProcessingTimeMilliseconds] = None


class AbortTransactionResult(BaseModel):
    """
    Contains the details of the aborted transaction.
    """

    TimingInformation: Optional[TimingInformation] = None


class IOUsage(BaseModel):
    """
    Contains I/O usage metrics for a command that was invoked.
    """

    ReadIOs: Optional[ReadIOs] = None
    WriteIOs: Optional[WriteIOs] = None


class CommitTransactionResult(BaseModel):
    """
    Contains the details of the committed transaction.
    """

    TransactionId: Optional[TransactionId] = None
    CommitDigest: Optional[CommitDigest] = None
    TimingInformation: Optional[TimingInformation] = None
    ConsumedIOs: Optional[IOUsage] = None


class EndSessionResult(AbortTransactionResult):
    """
    Contains the details of the ended session.
    """

    pass


class StatementParameters(BaseModel):
    __root__: List[ValueHolder]


class ExecuteStatementRequest(BaseModel):
    """
    Specifies a request to execute a statement.
    """

    TransactionId: TransactionId
    Statement: Statement
    Parameters: Optional[StatementParameters] = None


class ValueHolders(StatementParameters):
    pass


class StartSessionResult(BaseModel):
    """
    Contains the details of the started session.
    """

    SessionToken: Optional[SessionToken] = None
    TimingInformation: Optional[TimingInformation] = None


class StartTransactionResult(BaseModel):
    """
    Contains the details of the started transaction.
    """

    TransactionId: Optional[TransactionId] = None
    TimingInformation: Optional[TimingInformation] = None


class SendCommandRequest(BaseModel):
    SessionToken: Optional[SessionToken] = None
    StartSession: Optional[StartSessionRequest] = None
    StartTransaction: Optional[StartTransactionRequest] = None
    EndSession: Optional[EndSessionRequest] = None
    CommitTransaction: Optional[CommitTransactionRequest] = None
    AbortTransaction: Optional[AbortTransactionRequest] = None
    ExecuteStatement: Optional[ExecuteStatementRequest] = None
    FetchPage: Optional[FetchPageRequest] = None


class Page(BaseModel):
    """
    Contains details of the fetched page.
    """

    Values: Optional[ValueHolders] = None
    NextPageToken: Optional[PageToken] = None


class ExecuteStatementResult(BaseModel):
    """
    Contains the details of the executed statement.
    """

    FirstPage: Optional[Page] = None
    TimingInformation: Optional[TimingInformation] = None
    ConsumedIOs: Optional[IOUsage] = None


class FetchPageResult(BaseModel):
    """
    Contains the page that was fetched.
    """

    Page: Optional[Page] = None
    TimingInformation: Optional[TimingInformation] = None
    ConsumedIOs: Optional[IOUsage] = None


class SendCommandResult(BaseModel):
    StartSession: Optional[StartSessionResult] = None
    StartTransaction: Optional[StartTransactionResult] = None
    EndSession: Optional[EndSessionResult] = None
    CommitTransaction: Optional[CommitTransactionResult] = None
    AbortTransaction: Optional[AbortTransactionResult] = None
    ExecuteStatement: Optional[ExecuteStatementResult] = None
    FetchPage: Optional[FetchPageResult] = None

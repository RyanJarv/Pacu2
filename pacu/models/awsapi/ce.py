# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:42+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class LimitExceededException(BaseModel):
    __root__: Any


class UnknownMonitorException(LimitExceededException):
    pass


class ServiceQuotaExceededException(LimitExceededException):
    pass


class DeleteAnomalyMonitorResponse(BaseModel):
    pass


class DeleteAnomalySubscriptionResponse(DeleteAnomalyMonitorResponse):
    pass


class UnknownSubscriptionException(LimitExceededException):
    pass


class ResourceNotFoundException(LimitExceededException):
    pass


class InvalidNextTokenException(LimitExceededException):
    pass


class BillExpirationException(LimitExceededException):
    pass


class DataUnavailableException(LimitExceededException):
    pass


class RequestChangedException(LimitExceededException):
    pass


class UnresolvableUsageUnitException(LimitExceededException):
    pass


class AccountScope(Enum):
    PAYER = 'PAYER'
    LINKED = 'LINKED'


class AmortizedRecurringFee(BaseModel):
    __root__: str


class AmortizedUpfrontFee(AmortizedRecurringFee):
    pass


class GenericString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0, regex='[\\S\\s]*')]


class YearMonthDay(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=40,
            min_length=0,
            regex='(\\d{4}-\\d{2}-\\d{2})(T\\d{2}:\\d{2}:\\d{2}Z)?',
        ),
    ]


class AnomalyFeedbackType(Enum):
    YES = 'YES'
    NO = 'NO'
    PLANNED_ACTIVITY = 'PLANNED_ACTIVITY'


class AnomalyDateInterval(BaseModel):
    """
    The time period for an anomaly.
    """

    StartDate: YearMonthDay
    EndDate: Optional[YearMonthDay] = None


class MonitorType(Enum):
    DIMENSIONAL = 'DIMENSIONAL'
    CUSTOM = 'CUSTOM'


class MonitorDimension(Enum):
    SERVICE = 'SERVICE'


class NonNegativeInteger(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class GenericDouble(BaseModel):
    __root__: float


class NullableNonNegativeDouble(BaseModel):
    __root__: Annotated[float, Field(ge=0.0)]


class AnomalySubscriptionFrequency(Enum):
    DAILY = 'DAILY'
    IMMEDIATE = 'IMMEDIATE'
    WEEKLY = 'WEEKLY'


class Arn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=20,
            regex='arn:aws[-a-z0-9]*:[a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+',
        ),
    ]


class AttributeType(AmortizedRecurringFee):
    pass


class AttributeValue(AmortizedRecurringFee):
    pass


class Attributes(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Context(Enum):
    COST_AND_USAGE = 'COST_AND_USAGE'
    RESERVATIONS = 'RESERVATIONS'
    SAVINGS_PLANS = 'SAVINGS_PLANS'


class ZonedDateTime(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The time period that you want the usage and costs for.',
            max_length=25,
            min_length=20,
            regex='^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(([+-]\\d\\d:\\d\\d)|Z)$',
        ),
    ]


class CostCategoryName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The unique name of the Cost Category.',
            max_length=50,
            min_length=1,
        ),
    ]


class CostCategoryRuleVersion(Enum):
    """
    The rule schema version in this particular Cost Category.
    """

    CostCategoryExpression_v1 = 'CostCategoryExpression.v1'


class CostCategoryValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The default value for the cost category.',
            max_length=50,
            min_length=1,
        ),
    ]


class CostCategoryInheritedValueDimensionName(Enum):
    LINKED_ACCOUNT_NAME = 'LINKED_ACCOUNT_NAME'
    TAG = 'TAG'


class CostCategoryInheritedValueDimension(BaseModel):
    """
    When creating or updating a cost category, you can define the <code>CostCategoryRule</code> rule type as <code>INHERITED_VALUE</code>. This rule type adds the flexibility of defining a rule that dynamically inherits the cost category value from the dimension value defined by <code>CostCategoryInheritedValueDimension</code>. For example, if you want to dynamically group costs that are based on the value of a specific tag key, first choose an inherited value rule type, then choose the tag dimension and specify the tag key to use.
    """

    DimensionName: Optional[CostCategoryInheritedValueDimensionName] = None
    DimensionKey: Optional[GenericString] = None


class CostCategoryMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class CostCategoryNamesList(BaseModel):
    __root__: List[CostCategoryName]


class CostCategoryStatusComponent(Enum):
    COST_EXPLORER = 'COST_EXPLORER'


class CostCategoryStatus(Enum):
    PROCESSING = 'PROCESSING'
    APPLIED = 'APPLIED'


class CostCategoryProcessingStatus(BaseModel):
    """
    The list of processing statuses for Cost Management products for a specific cost category.
    """

    Component: Optional[CostCategoryStatusComponent] = None
    Status: Optional[CostCategoryStatus] = None


class CostCategoryValuesList(BaseModel):
    __root__: List[CostCategoryValue]


class CostCategoryRuleType(Enum):
    REGULAR = 'REGULAR'
    INHERITED_VALUE = 'INHERITED_VALUE'


class CostCategorySplitChargeMethod(Enum):
    FIXED = 'FIXED'
    PROPORTIONAL = 'PROPORTIONAL'
    EVEN = 'EVEN'


class CostCategorySplitChargeRuleTargetsList(BaseModel):
    __root__: Annotated[List[GenericString], Field(max_items=500, min_items=1)]


class CostCategorySplitChargeRuleParameterType(Enum):
    ALLOCATION_PERCENTAGES = 'ALLOCATION_PERCENTAGES'


class CostCategorySplitChargeRuleParameterValuesList(
    CostCategorySplitChargeRuleTargetsList
):
    pass


class CostCategorySplitChargeRuleParameter(BaseModel):
    """
    The parameters for a split charge method.
    """

    Type: CostCategorySplitChargeRuleParameterType
    Values: CostCategorySplitChargeRuleParameterValuesList


class DateInterval(BaseModel):
    """
    The time period of the request.
    """

    Start: YearMonthDay
    End: YearMonthDay


class OnDemandCost(AmortizedRecurringFee):
    pass


class OnDemandHours(AmortizedRecurringFee):
    pass


class ReservedHours(AmortizedRecurringFee):
    pass


class TotalRunningHours(AmortizedRecurringFee):
    pass


class CoverageHoursPercentage(AmortizedRecurringFee):
    pass


class OnDemandNormalizedUnits(AmortizedRecurringFee):
    pass


class ReservedNormalizedUnits(AmortizedRecurringFee):
    pass


class TotalRunningNormalizedUnits(AmortizedRecurringFee):
    pass


class CoverageNormalizedUnitsPercentage(AmortizedRecurringFee):
    pass


class Dimension(Enum):
    AZ = 'AZ'
    INSTANCE_TYPE = 'INSTANCE_TYPE'
    LINKED_ACCOUNT = 'LINKED_ACCOUNT'
    LINKED_ACCOUNT_NAME = 'LINKED_ACCOUNT_NAME'
    OPERATION = 'OPERATION'
    PURCHASE_TYPE = 'PURCHASE_TYPE'
    REGION = 'REGION'
    SERVICE = 'SERVICE'
    SERVICE_CODE = 'SERVICE_CODE'
    USAGE_TYPE = 'USAGE_TYPE'
    USAGE_TYPE_GROUP = 'USAGE_TYPE_GROUP'
    RECORD_TYPE = 'RECORD_TYPE'
    OPERATING_SYSTEM = 'OPERATING_SYSTEM'
    TENANCY = 'TENANCY'
    SCOPE = 'SCOPE'
    PLATFORM = 'PLATFORM'
    SUBSCRIPTION_ID = 'SUBSCRIPTION_ID'
    LEGAL_ENTITY_NAME = 'LEGAL_ENTITY_NAME'
    DEPLOYMENT_OPTION = 'DEPLOYMENT_OPTION'
    DATABASE_ENGINE = 'DATABASE_ENGINE'
    CACHE_ENGINE = 'CACHE_ENGINE'
    INSTANCE_TYPE_FAMILY = 'INSTANCE_TYPE_FAMILY'
    BILLING_ENTITY = 'BILLING_ENTITY'
    RESERVATION_ID = 'RESERVATION_ID'
    RESOURCE_ID = 'RESOURCE_ID'
    RIGHTSIZING_TYPE = 'RIGHTSIZING_TYPE'
    SAVINGS_PLANS_TYPE = 'SAVINGS_PLANS_TYPE'
    SAVINGS_PLAN_ARN = 'SAVINGS_PLAN_ARN'
    PAYMENT_OPTION = 'PAYMENT_OPTION'
    AGREEMENT_END_DATE_TIME_AFTER = 'AGREEMENT_END_DATE_TIME_AFTER'
    AGREEMENT_END_DATE_TIME_BEFORE = 'AGREEMENT_END_DATE_TIME_BEFORE'


class Value(GenericString):
    pass


class DimensionValuesWithAttributes(BaseModel):
    """
    The metadata of a specific type that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
    """

    Value: Optional[Value] = None
    Attributes: Optional[Attributes] = None


class DimensionValuesWithAttributesList(BaseModel):
    __root__: List[DimensionValuesWithAttributes]


class DiskResourceUtilization(BaseModel):
    """
    The field that contains a list of disk (local storage) metrics that are associated with the current instance.
    """

    DiskReadOpsPerSecond: Optional[GenericString] = None
    DiskWriteOpsPerSecond: Optional[GenericString] = None
    DiskReadBytesPerSecond: Optional[GenericString] = None
    DiskWriteBytesPerSecond: Optional[GenericString] = None


class EBSResourceUtilization(BaseModel):
    """
    The EBS field that contains a list of EBS metrics that are associated with the current instance.
    """

    EbsReadOpsPerSecond: Optional[GenericString] = None
    EbsWriteOpsPerSecond: Optional[GenericString] = None
    EbsReadBytesPerSecond: Optional[GenericString] = None
    EbsWriteBytesPerSecond: Optional[GenericString] = None


class GenericBoolean(BaseModel):
    __root__: bool


class EC2InstanceDetails(BaseModel):
    """
    Details about the Amazon EC2 instances that Amazon Web Services recommends that you purchase.
    """

    Family: Optional[GenericString] = None
    InstanceType: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    AvailabilityZone: Optional[GenericString] = None
    Platform: Optional[GenericString] = None
    Tenancy: Optional[GenericString] = None
    CurrentGeneration: Optional[GenericBoolean] = None
    SizeFlexEligible: Optional[GenericBoolean] = None


class EC2ResourceDetails(BaseModel):
    """
    Details on the Amazon EC2 Resource.
    """

    HourlyOnDemandRate: Optional[GenericString] = None
    InstanceType: Optional[GenericString] = None
    Platform: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    Sku: Optional[GenericString] = None
    Memory: Optional[GenericString] = None
    NetworkPerformance: Optional[GenericString] = None
    Storage: Optional[GenericString] = None
    Vcpu: Optional[GenericString] = None


class NetworkResourceUtilization(BaseModel):
    """
    The network field that contains a list of network metrics that are associated with the current instance.
    """

    NetworkInBytesPerSecond: Optional[GenericString] = None
    NetworkOutBytesPerSecond: Optional[GenericString] = None
    NetworkPacketsInPerSecond: Optional[GenericString] = None
    NetworkPacketsOutPerSecond: Optional[GenericString] = None


class EC2ResourceUtilization(BaseModel):
    """
    Utilization metrics of the instance.
    """

    MaxCpuUtilizationPercentage: Optional[GenericString] = None
    MaxMemoryUtilizationPercentage: Optional[GenericString] = None
    MaxStorageUtilizationPercentage: Optional[GenericString] = None
    EBSResourceUtilization: Optional[EBSResourceUtilization] = None
    DiskResourceUtilization: Optional[DiskResourceUtilization] = None
    NetworkResourceUtilization: Optional[NetworkResourceUtilization] = None


class OfferingClass(Enum):
    STANDARD = 'STANDARD'
    CONVERTIBLE = 'CONVERTIBLE'


class EC2Specification(BaseModel):
    """
    The Amazon EC2 hardware specifications that you want Amazon Web Services to provide recommendations for.
    """

    OfferingClass: Optional[OfferingClass] = None


class ESInstanceDetails(BaseModel):
    """
    Details about the Amazon ES instances that Amazon Web Services recommends that you purchase.
    """

    InstanceClass: Optional[GenericString] = None
    InstanceSize: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    CurrentGeneration: Optional[GenericBoolean] = None
    SizeFlexEligible: Optional[GenericBoolean] = None


class ElastiCacheInstanceDetails(BaseModel):
    """
    Details about the Amazon ElastiCache instances that Amazon Web Services recommends that you purchase.
    """

    Family: Optional[GenericString] = None
    NodeType: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    ProductDescription: Optional[GenericString] = None
    CurrentGeneration: Optional[GenericBoolean] = None
    SizeFlexEligible: Optional[GenericBoolean] = None


class Entity(AmortizedRecurringFee):
    pass


class Estimated(GenericBoolean):
    pass


class FindingReasonCode(Enum):
    CPU_OVER_PROVISIONED = 'CPU_OVER_PROVISIONED'
    CPU_UNDER_PROVISIONED = 'CPU_UNDER_PROVISIONED'
    MEMORY_OVER_PROVISIONED = 'MEMORY_OVER_PROVISIONED'
    MEMORY_UNDER_PROVISIONED = 'MEMORY_UNDER_PROVISIONED'
    EBS_THROUGHPUT_OVER_PROVISIONED = 'EBS_THROUGHPUT_OVER_PROVISIONED'
    EBS_THROUGHPUT_UNDER_PROVISIONED = 'EBS_THROUGHPUT_UNDER_PROVISIONED'
    EBS_IOPS_OVER_PROVISIONED = 'EBS_IOPS_OVER_PROVISIONED'
    EBS_IOPS_UNDER_PROVISIONED = 'EBS_IOPS_UNDER_PROVISIONED'
    NETWORK_BANDWIDTH_OVER_PROVISIONED = 'NETWORK_BANDWIDTH_OVER_PROVISIONED'
    NETWORK_BANDWIDTH_UNDER_PROVISIONED = 'NETWORK_BANDWIDTH_UNDER_PROVISIONED'
    NETWORK_PPS_OVER_PROVISIONED = 'NETWORK_PPS_OVER_PROVISIONED'
    NETWORK_PPS_UNDER_PROVISIONED = 'NETWORK_PPS_UNDER_PROVISIONED'
    DISK_IOPS_OVER_PROVISIONED = 'DISK_IOPS_OVER_PROVISIONED'
    DISK_IOPS_UNDER_PROVISIONED = 'DISK_IOPS_UNDER_PROVISIONED'
    DISK_THROUGHPUT_OVER_PROVISIONED = 'DISK_THROUGHPUT_OVER_PROVISIONED'
    DISK_THROUGHPUT_UNDER_PROVISIONED = 'DISK_THROUGHPUT_UNDER_PROVISIONED'


class FindingReasonCodes(BaseModel):
    __root__: List[FindingReasonCode]


class ForecastResult(BaseModel):
    """
    The forecast that's created for your query.
    """

    TimePeriod: Optional[DateInterval] = None
    MeanValue: Optional[GenericString] = None
    PredictionIntervalLowerBound: Optional[GenericString] = None
    PredictionIntervalUpperBound: Optional[GenericString] = None


class ForecastResultsByTime(BaseModel):
    __root__: List[ForecastResult]


class NextPageToken(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=0, regex='[\\S\\s]*')]


class PageSize(BaseModel):
    __root__: int


class Granularity(Enum):
    DAILY = 'DAILY'
    MONTHLY = 'MONTHLY'
    HOURLY = 'HOURLY'


class SearchString(GenericString):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class Metric(Enum):
    BLENDED_COST = 'BLENDED_COST'
    UNBLENDED_COST = 'UNBLENDED_COST'
    AMORTIZED_COST = 'AMORTIZED_COST'
    NET_UNBLENDED_COST = 'NET_UNBLENDED_COST'
    NET_AMORTIZED_COST = 'NET_AMORTIZED_COST'
    USAGE_QUANTITY = 'USAGE_QUANTITY'
    NORMALIZED_USAGE_AMOUNT = 'NORMALIZED_USAGE_AMOUNT'


class PredictionIntervalLevel(BaseModel):
    __root__: Annotated[int, Field(ge=51.0, le=99.0)]


class LookbackPeriodInDays(Enum):
    SEVEN_DAYS = 'SEVEN_DAYS'
    THIRTY_DAYS = 'THIRTY_DAYS'
    SIXTY_DAYS = 'SIXTY_DAYS'


class TermInYears(Enum):
    ONE_YEAR = 'ONE_YEAR'
    THREE_YEARS = 'THREE_YEARS'


class PaymentOption(Enum):
    NO_UPFRONT = 'NO_UPFRONT'
    PARTIAL_UPFRONT = 'PARTIAL_UPFRONT'
    ALL_UPFRONT = 'ALL_UPFRONT'
    LIGHT_UTILIZATION = 'LIGHT_UTILIZATION'
    MEDIUM_UTILIZATION = 'MEDIUM_UTILIZATION'
    HEAVY_UTILIZATION = 'HEAVY_UTILIZATION'


class ServiceSpecification(BaseModel):
    """
    Hardware specifications for the service that you want recommendations for.
    """

    EC2Specification: Optional[EC2Specification] = None


class ReservationPurchaseRecommendationMetadata(BaseModel):
    """
    Information about this specific recommendation, such as the timestamp for when Amazon Web Services made a specific recommendation.
    """

    RecommendationId: Optional[GenericString] = None
    GenerationTimestamp: Optional[GenericString] = None


class RightsizingRecommendationMetadata(BaseModel):
    """
    Metadata for this recommendation set.
    """

    RecommendationId: Optional[GenericString] = None
    GenerationTimestamp: Optional[GenericString] = None
    LookbackPeriodInDays: Optional[LookbackPeriodInDays] = None
    AdditionalMetadata: Optional[GenericString] = None


class RightsizingRecommendationSummary(BaseModel):
    """
    The summary of rightsizing recommendations
    """

    TotalRecommendationCount: Optional[GenericString] = None
    EstimatedTotalMonthlySavingsAmount: Optional[GenericString] = None
    SavingsCurrencyCode: Optional[GenericString] = None
    SavingsPercentage: Optional[GenericString] = None


class SupportedSavingsPlansType(Enum):
    COMPUTE_SP = 'COMPUTE_SP'
    EC2_INSTANCE_SP = 'EC2_INSTANCE_SP'
    SAGEMAKER_SP = 'SAGEMAKER_SP'


class SavingsPlansPurchaseRecommendationMetadata(BaseModel):
    """
    Metadata about your Savings Plans Purchase Recommendations.
    """

    RecommendationId: Optional[GenericString] = None
    GenerationTimestamp: Optional[GenericString] = None
    AdditionalMetadata: Optional[GenericString] = None


class TagKey(GenericString):
    pass


class TagList(BaseModel):
    __root__: List[Entity]


class Metrics4(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class GroupDefinitionType(Enum):
    DIMENSION = 'DIMENSION'
    TAG = 'TAG'
    COST_CATEGORY = 'COST_CATEGORY'


class GroupDefinitionKey(GenericString):
    pass


class GroupDefinition(BaseModel):
    """
    Represents a group when you specify a group by criteria or in the response to a query with a specific grouping.
    """

    Type: Optional[GroupDefinitionType] = None
    Key: Optional[GroupDefinitionKey] = None


class RDSInstanceDetails(BaseModel):
    """
    Details about the Amazon RDS instances that Amazon Web Services recommends that you purchase.
    """

    Family: Optional[GenericString] = None
    InstanceType: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    DatabaseEngine: Optional[GenericString] = None
    DatabaseEdition: Optional[GenericString] = None
    DeploymentOption: Optional[GenericString] = None
    LicenseModel: Optional[GenericString] = None
    CurrentGeneration: Optional[GenericBoolean] = None
    SizeFlexEligible: Optional[GenericBoolean] = None


class RedshiftInstanceDetails(BaseModel):
    """
    Details about the Amazon Redshift instances that Amazon Web Services recommends that you purchase.
    """

    Family: Optional[GenericString] = None
    NodeType: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    CurrentGeneration: Optional[GenericBoolean] = None
    SizeFlexEligible: Optional[GenericBoolean] = None


class InstanceDetails(BaseModel):
    """
    Details about the instances that Amazon Web Services recommends that you purchase.
    """

    EC2InstanceDetails: Optional[EC2InstanceDetails] = None
    RDSInstanceDetails: Optional[RDSInstanceDetails] = None
    RedshiftInstanceDetails: Optional[RedshiftInstanceDetails] = None
    ElastiCacheInstanceDetails: Optional[ElastiCacheInstanceDetails] = None
    ESInstanceDetails: Optional[ESInstanceDetails] = None


class Key(AmortizedRecurringFee):
    pass


class MatchOption(Enum):
    EQUALS = 'EQUALS'
    ABSENT = 'ABSENT'
    STARTS_WITH = 'STARTS_WITH'
    ENDS_WITH = 'ENDS_WITH'
    CONTAINS = 'CONTAINS'
    CASE_SENSITIVE = 'CASE_SENSITIVE'
    CASE_INSENSITIVE = 'CASE_INSENSITIVE'


class MetricAmount(AmortizedRecurringFee):
    pass


class MetricName(GenericString):
    pass


class MetricUnit(AmortizedRecurringFee):
    pass


class NetRISavings(AmortizedRecurringFee):
    pass


class NumericOperator(Enum):
    EQUAL = 'EQUAL'
    GREATER_THAN_OR_EQUAL = 'GREATER_THAN_OR_EQUAL'
    LESS_THAN_OR_EQUAL = 'LESS_THAN_OR_EQUAL'
    GREATER_THAN = 'GREATER_THAN'
    LESS_THAN = 'LESS_THAN'
    BETWEEN = 'BETWEEN'


class OnDemandCostOfRIHoursUsed(AmortizedRecurringFee):
    pass


class PlatformDifference(Enum):
    HYPERVISOR = 'HYPERVISOR'
    NETWORK_INTERFACE = 'NETWORK_INTERFACE'
    STORAGE_INTERFACE = 'STORAGE_INTERFACE'
    INSTANCE_STORE_AVAILABILITY = 'INSTANCE_STORE_AVAILABILITY'
    VIRTUALIZATION_TYPE = 'VIRTUALIZATION_TYPE'


class PlatformDifferences(BaseModel):
    __root__: List[PlatformDifference]


class PurchasedHours(AmortizedRecurringFee):
    pass


class PurchasedUnits(AmortizedRecurringFee):
    pass


class RICostForUnusedHours(AmortizedRecurringFee):
    pass


class RealizedSavings(AmortizedRecurringFee):
    pass


class RecommendationTarget(Enum):
    SAME_INSTANCE_FAMILY = 'SAME_INSTANCE_FAMILY'
    CROSS_INSTANCE_FAMILY = 'CROSS_INSTANCE_FAMILY'


class UtilizationPercentage(AmortizedRecurringFee):
    pass


class UtilizationPercentageInUnits(AmortizedRecurringFee):
    pass


class TotalActualHours(AmortizedRecurringFee):
    pass


class TotalActualUnits(AmortizedRecurringFee):
    pass


class UnusedHours(AmortizedRecurringFee):
    pass


class UnusedUnits(AmortizedRecurringFee):
    pass


class TotalPotentialRISavings(AmortizedRecurringFee):
    pass


class TotalAmortizedFee(AmortizedRecurringFee):
    pass


class UnrealizedSavings(AmortizedRecurringFee):
    pass


class ReservationGroupKey(AmortizedRecurringFee):
    pass


class ReservationGroupValue(AmortizedRecurringFee):
    pass


class ReservationPurchaseRecommendationSummary(BaseModel):
    """
    A summary about this recommendation, such as the currency code, the amount that Amazon Web Services estimates that you could save, and the total amount of reservation to purchase.
    """

    TotalEstimatedMonthlySavingsAmount: Optional[GenericString] = None
    TotalEstimatedMonthlySavingsPercentage: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None


class ReservationPurchaseRecommendationDetail(BaseModel):
    """
    Details about your recommended reservation purchase.
    """

    AccountId: Optional[GenericString] = None
    InstanceDetails: Optional[InstanceDetails] = None
    RecommendedNumberOfInstancesToPurchase: Optional[GenericString] = None
    RecommendedNormalizedUnitsToPurchase: Optional[GenericString] = None
    MinimumNumberOfInstancesUsedPerHour: Optional[GenericString] = None
    MinimumNormalizedUnitsUsedPerHour: Optional[GenericString] = None
    MaximumNumberOfInstancesUsedPerHour: Optional[GenericString] = None
    MaximumNormalizedUnitsUsedPerHour: Optional[GenericString] = None
    AverageNumberOfInstancesUsedPerHour: Optional[GenericString] = None
    AverageNormalizedUnitsUsedPerHour: Optional[GenericString] = None
    AverageUtilization: Optional[GenericString] = None
    EstimatedBreakEvenInMonths: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None
    EstimatedMonthlySavingsAmount: Optional[GenericString] = None
    EstimatedMonthlySavingsPercentage: Optional[GenericString] = None
    EstimatedMonthlyOnDemandCost: Optional[GenericString] = None
    EstimatedReservationCostForLookbackPeriod: Optional[GenericString] = None
    UpfrontCost: Optional[GenericString] = None
    RecurringStandardMonthlyCost: Optional[GenericString] = None


class RightsizingType(Enum):
    TERMINATE = 'TERMINATE'
    MODIFY = 'MODIFY'


class TerminateRecommendationDetail(BaseModel):
    """
    Details on termination recommendation.
    """

    EstimatedMonthlySavings: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None


class RootCause(BaseModel):
    """
    The combination of Amazon Web Services service, linked account, Region, and usage type where a cost anomaly is observed.
    """

    Service: Optional[GenericString] = None
    Region: Optional[GenericString] = None
    LinkedAccount: Optional[GenericString] = None
    UsageType: Optional[GenericString] = None


class SavingsPlanArn(AmortizedRecurringFee):
    pass


class SavingsPlansAmortizedCommitment(BaseModel):
    """
    The amortized amount of Savings Plans purchased in a specific account during a specific time interval.
    """

    AmortizedRecurringCommitment: Optional[GenericString] = None
    AmortizedUpfrontCommitment: Optional[GenericString] = None
    TotalAmortizedCommitment: Optional[GenericString] = None


class SavingsPlansCoverageData(BaseModel):
    """
    Specific coverage percentage, On-Demand costs, and spend covered by Savings Plans, and total Savings Plans costs for an account.
    """

    SpendCoveredBySavingsPlans: Optional[GenericString] = None
    OnDemandCost: Optional[GenericString] = None
    TotalCost: Optional[GenericString] = None
    CoveragePercentage: Optional[GenericString] = None


class SavingsPlansCoverage(BaseModel):
    """
    The amount of Savings Plans eligible usage that is covered by Savings Plans. All calculations consider the On-Demand equivalent of your Savings Plans usage.
    """

    Attributes: Optional[Attributes] = None
    Coverage: Optional[SavingsPlansCoverageData] = None
    TimePeriod: Optional[DateInterval] = None


class SavingsPlansDataType(Enum):
    ATTRIBUTES = 'ATTRIBUTES'
    UTILIZATION = 'UTILIZATION'
    AMORTIZED_COMMITMENT = 'AMORTIZED_COMMITMENT'
    SAVINGS = 'SAVINGS'


class SavingsPlansDetails(BaseModel):
    """
    The attribute details on a specific Savings Plan.
    """

    Region: Optional[GenericString] = None
    InstanceFamily: Optional[GenericString] = None
    OfferingId: Optional[GenericString] = None


class SavingsPlansPurchaseRecommendationSummary(BaseModel):
    """
    Summary metrics for your Savings Plans Purchase Recommendations.
    """

    EstimatedROI: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None
    EstimatedTotalCost: Optional[GenericString] = None
    CurrentOnDemandSpend: Optional[GenericString] = None
    EstimatedSavingsAmount: Optional[GenericString] = None
    TotalRecommendationCount: Optional[GenericString] = None
    DailyCommitmentToPurchase: Optional[GenericString] = None
    HourlyCommitmentToPurchase: Optional[GenericString] = None
    EstimatedSavingsPercentage: Optional[GenericString] = None
    EstimatedMonthlySavingsAmount: Optional[GenericString] = None
    EstimatedOnDemandCostWithCurrentCommitment: Optional[GenericString] = None


class SavingsPlansPurchaseRecommendationDetail(BaseModel):
    """
    Details for your recommended Savings Plans.
    """

    SavingsPlansDetails: Optional[SavingsPlansDetails] = None
    AccountId: Optional[GenericString] = None
    UpfrontCost: Optional[GenericString] = None
    EstimatedROI: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None
    EstimatedSPCost: Optional[GenericString] = None
    EstimatedOnDemandCost: Optional[GenericString] = None
    EstimatedOnDemandCostWithCurrentCommitment: Optional[GenericString] = None
    EstimatedSavingsAmount: Optional[GenericString] = None
    EstimatedSavingsPercentage: Optional[GenericString] = None
    HourlyCommitmentToPurchase: Optional[GenericString] = None
    EstimatedAverageUtilization: Optional[GenericString] = None
    EstimatedMonthlySavingsAmount: Optional[GenericString] = None
    CurrentMinimumHourlyOnDemandSpend: Optional[GenericString] = None
    CurrentMaximumHourlyOnDemandSpend: Optional[GenericString] = None
    CurrentAverageHourlyOnDemandSpend: Optional[GenericString] = None


class SavingsPlansSavings(BaseModel):
    """
    The amount of savings that you're accumulating, against the public On-Demand rate of the usage accrued in an account.
    """

    NetSavings: Optional[GenericString] = None
    OnDemandCostEquivalent: Optional[GenericString] = None


class SavingsPlansUtilization(BaseModel):
    """
    The measurement of how well you're using your existing Savings Plans.
    """

    TotalCommitment: Optional[GenericString] = None
    UsedCommitment: Optional[GenericString] = None
    UnusedCommitment: Optional[GenericString] = None
    UtilizationPercentage: Optional[GenericString] = None


class SavingsPlansUtilizationByTime(BaseModel):
    """
    The amount of Savings Plans utilization, in hours.
    """

    TimePeriod: DateInterval
    Utilization: SavingsPlansUtilization
    Savings: Optional[SavingsPlansSavings] = None
    AmortizedCommitment: Optional[SavingsPlansAmortizedCommitment] = None


class SavingsPlansUtilizationDetail(BaseModel):
    """
    A single daily or monthly Savings Plans utilization rate, and details for your account. A management account in an organization have access to member accounts. You can use <code>GetDimensionValues</code> to determine the possible dimension values.
    """

    SavingsPlanArn: Optional[SavingsPlanArn] = None
    Attributes: Optional[Attributes] = None
    Utilization: Optional[SavingsPlansUtilization] = None
    Savings: Optional[SavingsPlansSavings] = None
    AmortizedCommitment: Optional[SavingsPlansAmortizedCommitment] = None


class SortDefinitionKey(GenericString):
    pass


class SortOrder(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class SubscriberAddress(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=302,
            min_length=6,
            regex="(^[a-zA-Z0-9.!#$%&'*+=?^_‘{|}~-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+$)",
        ),
    ]


class SubscriberType(Enum):
    EMAIL = 'EMAIL'
    SNS = 'SNS'


class SubscriberStatus(Enum):
    CONFIRMED = 'CONFIRMED'
    DECLINED = 'DECLINED'


class Subscriber(BaseModel):
    """
    The recipient of <code>AnomalySubscription</code> notifications.
    """

    Address: Optional[SubscriberAddress] = None
    Type: Optional[SubscriberType] = None
    Status: Optional[SubscriberStatus] = None


class CreateAnomalyMonitorResponse(BaseModel):
    MonitorArn: GenericString


class CreateAnomalySubscriptionResponse(BaseModel):
    SubscriptionArn: GenericString


class CreateCostCategoryDefinitionResponse(BaseModel):
    CostCategoryArn: Optional[Arn] = None
    EffectiveStart: Optional[ZonedDateTime] = None


class DeleteAnomalyMonitorRequest(BaseModel):
    MonitorArn: GenericString


class DeleteAnomalySubscriptionRequest(BaseModel):
    SubscriptionArn: GenericString


class DeleteCostCategoryDefinitionResponse(BaseModel):
    CostCategoryArn: Optional[Arn] = None
    EffectiveEnd: Optional[ZonedDateTime] = None


class DeleteCostCategoryDefinitionRequest(BaseModel):
    CostCategoryArn: Arn


class DescribeCostCategoryDefinitionRequest(BaseModel):
    CostCategoryArn: Arn
    EffectiveOn: Optional[ZonedDateTime] = None


class GetCostCategoriesResponse(BaseModel):
    NextPageToken: Optional[NextPageToken] = None
    CostCategoryNames: Optional[CostCategoryNamesList] = None
    CostCategoryValues: Optional[CostCategoryValuesList] = None
    ReturnSize: PageSize
    TotalSize: PageSize


class GetDimensionValuesResponse(BaseModel):
    DimensionValues: DimensionValuesWithAttributesList
    ReturnSize: PageSize
    TotalSize: PageSize
    NextPageToken: Optional[NextPageToken] = None


class GetTagsResponse(BaseModel):
    NextPageToken: Optional[NextPageToken] = None
    Tags: TagList
    ReturnSize: PageSize
    TotalSize: PageSize


class ListCostCategoryDefinitionsRequest(BaseModel):
    EffectiveOn: Optional[ZonedDateTime] = None
    NextToken: Optional[NextPageToken] = None
    MaxResults: Optional[CostCategoryMaxResults] = None


class ProvideAnomalyFeedbackResponse(BaseModel):
    AnomalyId: GenericString


class ProvideAnomalyFeedbackRequest(BaseModel):
    AnomalyId: GenericString
    Feedback: AnomalyFeedbackType


class UpdateAnomalyMonitorResponse(CreateAnomalyMonitorResponse):
    pass


class UpdateAnomalyMonitorRequest(BaseModel):
    MonitorArn: GenericString
    MonitorName: Optional[GenericString] = None


class UpdateAnomalySubscriptionResponse(CreateAnomalySubscriptionResponse):
    pass


class UpdateCostCategoryDefinitionResponse(CreateCostCategoryDefinitionResponse):
    pass


class RootCauses(BaseModel):
    __root__: List[RootCause]


class AnomalyScore(BaseModel):
    """
    Quantifies the anomaly. The higher score means that it's more anomalous.
    """

    MaxScore: GenericDouble
    CurrentScore: GenericDouble


class Impact(BaseModel):
    """
    The dollar value of the anomaly.
    """

    MaxImpact: GenericDouble
    TotalImpact: Optional[GenericDouble] = None


class MonitorArnList(BaseModel):
    __root__: List[Arn]


class Subscribers(BaseModel):
    __root__: List[Subscriber]


class AnomalySubscription(BaseModel):
    """
    The association between a monitor, threshold, and list of subscribers used to deliver notifications about anomalies detected by a monitor that exceeds a threshold. The content consists of the detailed metadata and the current status of the <code>AnomalySubscription</code> object.
    """

    SubscriptionArn: Optional[GenericString] = None
    AccountId: Optional[GenericString] = None
    MonitorArnList: MonitorArnList
    Subscribers: Subscribers
    Threshold: NullableNonNegativeDouble
    Frequency: AnomalySubscriptionFrequency
    SubscriptionName: GenericString


class AnomalySubscriptions(BaseModel):
    __root__: List[AnomalySubscription]


class CostCategoryProcessingStatusList(BaseModel):
    __root__: List[CostCategoryProcessingStatus]


class CostCategoryReference(BaseModel):
    """
    <p>A reference to a Cost Category containing only enough information to identify the Cost Category.</p> <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>
    """

    CostCategoryArn: Optional[Arn] = None
    Name: Optional[CostCategoryName] = None
    EffectiveStart: Optional[ZonedDateTime] = None
    EffectiveEnd: Optional[ZonedDateTime] = None
    NumberOfRules: Optional[NonNegativeInteger] = None
    ProcessingStatus: Optional[CostCategoryProcessingStatusList] = None
    Values: Optional[CostCategoryValuesList] = None
    DefaultValue: Optional[CostCategoryValue] = None


class CostCategoryReferencesList(BaseModel):
    __root__: List[CostCategoryReference]


class CostCategorySplitChargeRuleParametersList(BaseModel):
    __root__: Annotated[
        List[CostCategorySplitChargeRuleParameter], Field(max_items=10, min_items=1)
    ]


class CostCategorySplitChargeRule(BaseModel):
    """
    Use the split charge rule to split the cost of one Cost Category value across several other target values.
    """

    Source: GenericString
    Targets: CostCategorySplitChargeRuleTargetsList
    Method: CostCategorySplitChargeMethod
    Parameters: Optional[CostCategorySplitChargeRuleParametersList] = None


class Values(BaseModel):
    __root__: List[Value]


class MatchOptions(BaseModel):
    __root__: List[MatchOption]


class CostCategoryValues(BaseModel):
    """
    <p>The Cost Categories values used for filtering the costs.</p> <p>If <code>Values</code> and <code>Key</code> are not specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all Cost Categories. That is, it filters on resources that aren't mapped to any Cost Categories.</p> <p>If <code>Values</code> is provided and <code>Key</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the Cost Categories <code>Key</code> only. That is, it filters on resources without the given Cost Categories key.</p>
    """

    Key: Optional[CostCategoryName] = None
    Values: Optional[Values] = None
    MatchOptions: Optional[MatchOptions] = None


class CoverageHours(BaseModel):
    """
    How long a running instance either used a reservation or was On-Demand.
    """

    OnDemandHours: Optional[OnDemandHours] = None
    ReservedHours: Optional[ReservedHours] = None
    TotalRunningHours: Optional[TotalRunningHours] = None
    CoverageHoursPercentage: Optional[CoverageHoursPercentage] = None


class CoverageNormalizedUnits(BaseModel):
    """
    <p>The amount of instance usage, in normalized units. You can use normalized units to see your EC2 usage for multiple sizes of instances in a uniform way. For example, suppose that you run an xlarge instance and a 2xlarge instance. If you run both instances for the same amount of time, the 2xlarge instance uses twice as much of your reservation as the xlarge instance, even though both instances show only one instance-hour. When you use normalized units instead of instance-hours, the xlarge instance used 8 normalized units, and the 2xlarge instance used 16 normalized units.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html">Modifying Reserved Instances</a> in the <i>Amazon Elastic Compute Cloud User Guide for Linux Instances</i>.</p>
    """

    OnDemandNormalizedUnits: Optional[OnDemandNormalizedUnits] = None
    ReservedNormalizedUnits: Optional[ReservedNormalizedUnits] = None
    TotalRunningNormalizedUnits: Optional[TotalRunningNormalizedUnits] = None
    CoverageNormalizedUnitsPercentage: Optional[
        CoverageNormalizedUnitsPercentage
    ] = None


class CoverageCost(BaseModel):
    """
    How much it costs to run an instance.
    """

    OnDemandCost: Optional[OnDemandCost] = None


class Coverage(BaseModel):
    """
    The amount of instance usage that a reservation covered.
    """

    CoverageHours: Optional[CoverageHours] = None
    CoverageNormalizedUnits: Optional[CoverageNormalizedUnits] = None
    CoverageCost: Optional[CoverageCost] = None


class ResourceDetails(BaseModel):
    """
    Details on the resource.
    """

    EC2ResourceDetails: Optional[EC2ResourceDetails] = None


class ResourceUtilization(BaseModel):
    """
    Resource utilization of current resource.
    """

    EC2ResourceUtilization: Optional[EC2ResourceUtilization] = None


class DimensionValues(BaseModel):
    """
    The metadata that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values.
    """

    Key: Optional[Dimension] = None
    Values: Optional[Values] = None
    MatchOptions: Optional[MatchOptions] = None


class TagValues(BaseModel):
    """
    <p>The values that are available for a tag.</p> <p>If <code>Values</code> and <code>Key</code> aren't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all tags. That is, it's filtered on resources with no tags.</p> <p>If <code>Values</code> is provided and <code>Key</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the tag <code>Key</code> only. That is, it's filtered on resources without the given tag key.</p>
    """

    Key: Optional[TagKey] = None
    Values: Optional[Values] = None
    MatchOptions: Optional[MatchOptions] = None


class TotalImpactFilter(BaseModel):
    """
    Filters cost anomalies based on the total impact.
    """

    NumericOperator: NumericOperator
    StartValue: GenericDouble
    EndValue: Optional[GenericDouble] = None


class MetricNames(BaseModel):
    __root__: List[MetricName]


class GroupDefinitions(BaseModel):
    __root__: List[GroupDefinition]


class MetricValue(BaseModel):
    """
    The aggregated value for a metric.
    """

    Amount: Optional[MetricAmount] = None
    Unit: Optional[MetricUnit] = None


class SortDefinition(BaseModel):
    """
    The details of how to sort the data.
    """

    Key: SortDefinitionKey
    SortOrder: Optional[SortOrder] = None


class ReservationAggregates(BaseModel):
    """
    The aggregated numbers for your reservation usage.
    """

    UtilizationPercentage: Optional[UtilizationPercentage] = None
    UtilizationPercentageInUnits: Optional[UtilizationPercentageInUnits] = None
    PurchasedHours: Optional[PurchasedHours] = None
    PurchasedUnits: Optional[PurchasedUnits] = None
    TotalActualHours: Optional[TotalActualHours] = None
    TotalActualUnits: Optional[TotalActualUnits] = None
    UnusedHours: Optional[UnusedHours] = None
    UnusedUnits: Optional[UnusedUnits] = None
    OnDemandCostOfRIHoursUsed: Optional[OnDemandCostOfRIHoursUsed] = None
    NetRISavings: Optional[NetRISavings] = None
    TotalPotentialRISavings: Optional[TotalPotentialRISavings] = None
    AmortizedUpfrontFee: Optional[AmortizedUpfrontFee] = None
    AmortizedRecurringFee: Optional[AmortizedRecurringFee] = None
    TotalAmortizedFee: Optional[TotalAmortizedFee] = None
    RICostForUnusedHours: Optional[RICostForUnusedHours] = None
    RealizedSavings: Optional[RealizedSavings] = None
    UnrealizedSavings: Optional[UnrealizedSavings] = None


class RightsizingRecommendationConfiguration(BaseModel):
    """
    You can use <code>RightsizingRecommendationConfiguration</code> to customize recommendations across two attributes. You can choose to view recommendations for instances within the same instance families or across different instance families. You can also choose to view your estimated savings that are associated with recommendations with consideration of existing Savings Plans or RI benefits, or neither.
    """

    RecommendationTarget: RecommendationTarget
    BenefitsConsidered: GenericBoolean


class SavingsPlansCoverages(BaseModel):
    __root__: List[SavingsPlansCoverage]


class SavingsPlansDataTypes(BaseModel):
    __root__: List[SavingsPlansDataType]


class SavingsPlansUtilizationDetails(BaseModel):
    __root__: List[SavingsPlansUtilizationDetail]


class SavingsPlansUtilizationAggregates(BaseModel):
    """
    The aggregated utilization metrics for your Savings Plans usage.
    """

    Utilization: SavingsPlansUtilization
    Savings: Optional[SavingsPlansSavings] = None
    AmortizedCommitment: Optional[SavingsPlansAmortizedCommitment] = None


class SavingsPlansUtilizationsByTime(BaseModel):
    __root__: List[SavingsPlansUtilizationByTime]


class Keys(BaseModel):
    __root__: List[Key]


class Group(BaseModel):
    """
    One level of grouped data in the results.
    """

    Keys: Optional[Keys] = None
    Metrics: Optional[Metrics4] = None


class Groups1(BaseModel):
    __root__: List[Group]


class ReservationCoverageGroup(BaseModel):
    """
    A group of reservations that share a set of attributes.
    """

    Attributes: Optional[Attributes] = None
    Coverage: Optional[Coverage] = None


class ReservationPurchaseRecommendationDetails(BaseModel):
    __root__: List[ReservationPurchaseRecommendationDetail]


class ReservationPurchaseRecommendation(BaseModel):
    """
    A specific reservation that Amazon Web Services recommends for purchase.
    """

    AccountScope: Optional[AccountScope] = None
    LookbackPeriodInDays: Optional[LookbackPeriodInDays] = None
    TermInYears: Optional[TermInYears] = None
    PaymentOption: Optional[PaymentOption] = None
    ServiceSpecification: Optional[ServiceSpecification] = None
    RecommendationDetails: Optional[ReservationPurchaseRecommendationDetails] = None
    RecommendationSummary: Optional[ReservationPurchaseRecommendationSummary] = None


class ReservationUtilizationGroup(BaseModel):
    """
    A group of reservations that share a set of attributes.
    """

    Key: Optional[ReservationGroupKey] = None
    Value: Optional[ReservationGroupValue] = None
    Attributes: Optional[Attributes] = None
    Utilization: Optional[ReservationAggregates] = None


class ReservationUtilizationGroups(BaseModel):
    __root__: List[ReservationUtilizationGroup]


class ResultByTime(BaseModel):
    """
    The result that's associated with a time period.
    """

    TimePeriod: Optional[DateInterval] = None
    Total: Optional[Metrics4] = None
    Groups: Optional[Groups1] = None
    Estimated: Optional[Estimated] = None


class SavingsPlansPurchaseRecommendationDetailList(BaseModel):
    __root__: List[SavingsPlansPurchaseRecommendationDetail]


class TargetInstance(BaseModel):
    """
    Details on recommended instance.
    """

    EstimatedMonthlyCost: Optional[GenericString] = None
    EstimatedMonthlySavings: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None
    DefaultTargetInstance: Optional[GenericBoolean] = None
    ResourceDetails: Optional[ResourceDetails] = None
    ExpectedResourceUtilization: Optional[ResourceUtilization] = None
    PlatformDifferences: Optional[PlatformDifferences] = None


class UtilizationByTime(BaseModel):
    """
    The amount of utilization, in hours.
    """

    TimePeriod: Optional[DateInterval] = None
    Groups: Optional[ReservationUtilizationGroups] = None
    Total: Optional[ReservationAggregates] = None


class CreateAnomalySubscriptionRequest(BaseModel):
    AnomalySubscription: AnomalySubscription


class GetAnomaliesRequest(BaseModel):
    MonitorArn: Optional[GenericString] = None
    DateInterval: AnomalyDateInterval
    Feedback: Optional[AnomalyFeedbackType] = None
    TotalImpact: Optional[TotalImpactFilter] = None
    NextPageToken: Optional[NextPageToken] = None
    MaxResults: Optional[PageSize] = None


class GetAnomalyMonitorsRequest(BaseModel):
    MonitorArnList: Optional[Values] = None
    NextPageToken: Optional[NextPageToken] = None
    MaxResults: Optional[PageSize] = None


class GetAnomalySubscriptionsResponse(BaseModel):
    AnomalySubscriptions: AnomalySubscriptions
    NextPageToken: Optional[NextPageToken] = None


class GetAnomalySubscriptionsRequest(BaseModel):
    SubscriptionArnList: Optional[Values] = None
    MonitorArn: Optional[GenericString] = None
    NextPageToken: Optional[NextPageToken] = None
    MaxResults: Optional[PageSize] = None


class GetCostForecastResponse(BaseModel):
    Total: Optional[MetricValue] = None
    ForecastResultsByTime: Optional[ForecastResultsByTime] = None


class GetSavingsPlansCoverageResponse(BaseModel):
    SavingsPlansCoverages: SavingsPlansCoverages
    NextToken: Optional[NextPageToken] = None


class GetSavingsPlansUtilizationResponse(BaseModel):
    SavingsPlansUtilizationsByTime: Optional[SavingsPlansUtilizationsByTime] = None
    Total: SavingsPlansUtilizationAggregates


class GetSavingsPlansUtilizationDetailsResponse(BaseModel):
    SavingsPlansUtilizationDetails: SavingsPlansUtilizationDetails
    Total: Optional[SavingsPlansUtilizationAggregates] = None
    TimePeriod: DateInterval
    NextToken: Optional[NextPageToken] = None


class GetUsageForecastResponse(GetCostForecastResponse):
    pass


class ListCostCategoryDefinitionsResponse(BaseModel):
    CostCategoryReferences: Optional[CostCategoryReferencesList] = None
    NextToken: Optional[NextPageToken] = None


class UpdateAnomalySubscriptionRequest(BaseModel):
    SubscriptionArn: GenericString
    Threshold: Optional[NullableNonNegativeDouble] = None
    Frequency: Optional[AnomalySubscriptionFrequency] = None
    MonitorArnList: Optional[MonitorArnList] = None
    Subscribers: Optional[Subscribers] = None
    SubscriptionName: Optional[GenericString] = None


class Anomaly(BaseModel):
    """
    An unusual cost pattern. This consists of the detailed metadata and the current status of the anomaly object.
    """

    AnomalyId: GenericString
    AnomalyStartDate: Optional[YearMonthDay] = None
    AnomalyEndDate: Optional[YearMonthDay] = None
    DimensionValue: Optional[GenericString] = None
    RootCauses: Optional[RootCauses] = None
    AnomalyScore: AnomalyScore
    Impact: Impact
    MonitorArn: GenericString
    Feedback: Optional[AnomalyFeedbackType] = None


class Anomalies(BaseModel):
    __root__: List[Anomaly]


class CostCategorySplitChargeRulesList(BaseModel):
    __root__: Annotated[
        List[CostCategorySplitChargeRule], Field(max_items=10, min_items=1)
    ]


class ReservationCoverageGroups(BaseModel):
    __root__: List[ReservationCoverageGroup]


class CoverageByTime(BaseModel):
    """
    Reservation coverage for a specified period, in hours.
    """

    TimePeriod: Optional[DateInterval] = None
    Groups: Optional[ReservationCoverageGroups] = None
    Total: Optional[Coverage] = None


class CoveragesByTime(BaseModel):
    __root__: List[CoverageByTime]


class TagValuesList(BaseModel):
    __root__: List[TagValues]


class CurrentInstance(BaseModel):
    """
    Context about the current instance.
    """

    ResourceId: Optional[GenericString] = None
    InstanceName: Optional[GenericString] = None
    Tags: Optional[TagValuesList] = None
    ResourceDetails: Optional[ResourceDetails] = None
    ResourceUtilization: Optional[ResourceUtilization] = None
    ReservationCoveredHoursInLookbackPeriod: Optional[GenericString] = None
    SavingsPlansCoveredHoursInLookbackPeriod: Optional[GenericString] = None
    OnDemandHoursInLookbackPeriod: Optional[GenericString] = None
    TotalRunningHoursInLookbackPeriod: Optional[GenericString] = None
    MonthlyCost: Optional[GenericString] = None
    CurrencyCode: Optional[GenericString] = None


class ResultsByTime(BaseModel):
    __root__: List[ResultByTime]


class SortDefinitions(BaseModel):
    __root__: List[SortDefinition]


class ReservationPurchaseRecommendations(BaseModel):
    __root__: List[ReservationPurchaseRecommendation]


class UtilizationsByTime(BaseModel):
    __root__: List[UtilizationByTime]


class SavingsPlansPurchaseRecommendation(BaseModel):
    """
    Contains your request parameters, Savings Plan Recommendations Summary, and Details.
    """

    AccountScope: Optional[AccountScope] = None
    SavingsPlansType: Optional[SupportedSavingsPlansType] = None
    TermInYears: Optional[TermInYears] = None
    PaymentOption: Optional[PaymentOption] = None
    LookbackPeriodInDays: Optional[LookbackPeriodInDays] = None
    SavingsPlansPurchaseRecommendationDetails: Optional[
        SavingsPlansPurchaseRecommendationDetailList
    ] = None
    SavingsPlansPurchaseRecommendationSummary: Optional[
        SavingsPlansPurchaseRecommendationSummary
    ] = None


class TargetInstancesList(BaseModel):
    __root__: List[TargetInstance]


class ModifyRecommendationDetail(BaseModel):
    """
    Details on the modification recommendation.
    """

    TargetInstances: Optional[TargetInstancesList] = None


class RightsizingRecommendation(BaseModel):
    """
    Recommendations to rightsize resources.
    """

    AccountId: Optional[GenericString] = None
    CurrentInstance: Optional[CurrentInstance] = None
    RightsizingType: Optional[RightsizingType] = None
    ModifyRecommendationDetail: Optional[ModifyRecommendationDetail] = None
    TerminateRecommendationDetail: Optional[TerminateRecommendationDetail] = None
    FindingReasonCodes: Optional[FindingReasonCodes] = None


class GetAnomaliesResponse(BaseModel):
    Anomalies: Anomalies
    NextPageToken: Optional[NextPageToken] = None


class GetCostAndUsageResponse(BaseModel):
    NextPageToken: Optional[NextPageToken] = None
    GroupDefinitions: Optional[GroupDefinitions] = None
    ResultsByTime: Optional[ResultsByTime] = None
    DimensionValueAttributes: Optional[DimensionValuesWithAttributesList] = None


class GetCostAndUsageWithResourcesResponse(GetCostAndUsageResponse):
    pass


class GetReservationCoverageResponse(BaseModel):
    CoveragesByTime: CoveragesByTime
    Total: Optional[Coverage] = None
    NextPageToken: Optional[NextPageToken] = None


class GetReservationPurchaseRecommendationResponse(BaseModel):
    Metadata: Optional[ReservationPurchaseRecommendationMetadata] = None
    Recommendations: Optional[ReservationPurchaseRecommendations] = None
    NextPageToken: Optional[NextPageToken] = None


class GetReservationUtilizationResponse(BaseModel):
    UtilizationsByTime: UtilizationsByTime
    Total: Optional[ReservationAggregates] = None
    NextPageToken: Optional[NextPageToken] = None


class GetSavingsPlansPurchaseRecommendationResponse(BaseModel):
    Metadata: Optional[SavingsPlansPurchaseRecommendationMetadata] = None
    SavingsPlansPurchaseRecommendation: Optional[
        SavingsPlansPurchaseRecommendation
    ] = None
    NextPageToken: Optional[NextPageToken] = None


class RightsizingRecommendationList(BaseModel):
    __root__: List[RightsizingRecommendation]


class GetRightsizingRecommendationResponse(BaseModel):
    Metadata: Optional[RightsizingRecommendationMetadata] = None
    Summary: Optional[RightsizingRecommendationSummary] = None
    RightsizingRecommendations: Optional[RightsizingRecommendationList] = None
    NextPageToken: Optional[NextPageToken] = None
    Configuration: Optional[RightsizingRecommendationConfiguration] = None


class CreateAnomalyMonitorRequest(BaseModel):
    AnomalyMonitor: AnomalyMonitor


class CreateCostCategoryDefinitionRequest(BaseModel):
    Name: CostCategoryName
    RuleVersion: CostCategoryRuleVersion
    Rules: CostCategoryRulesList
    DefaultValue: Optional[CostCategoryValue] = None
    SplitChargeRules: Optional[CostCategorySplitChargeRulesList] = None


class DescribeCostCategoryDefinitionResponse(BaseModel):
    CostCategory: Optional[CostCategory] = None


class GetAnomalyMonitorsResponse(BaseModel):
    AnomalyMonitors: AnomalyMonitors
    NextPageToken: Optional[NextPageToken] = None


class GetCostAndUsageRequest(BaseModel):
    TimePeriod: DateInterval
    Granularity: Granularity
    Filter: Optional[Expression] = None
    Metrics: MetricNames
    GroupBy: Optional[GroupDefinitions] = None
    NextPageToken: Optional[NextPageToken] = None


class GetCostAndUsageWithResourcesRequest(BaseModel):
    TimePeriod: DateInterval
    Granularity: Granularity
    Filter: Expression
    Metrics: Optional[MetricNames] = None
    GroupBy: Optional[GroupDefinitions] = None
    NextPageToken: Optional[NextPageToken] = None


class GetCostCategoriesRequest(BaseModel):
    SearchString: Optional[SearchString] = None
    TimePeriod: DateInterval
    CostCategoryName: Optional[CostCategoryName] = None
    Filter: Optional[Expression] = None
    SortBy: Optional[SortDefinitions] = None
    MaxResults: Optional[MaxResults] = None
    NextPageToken: Optional[NextPageToken] = None


class GetCostForecastRequest(BaseModel):
    TimePeriod: DateInterval
    Metric: Metric
    Granularity: Granularity
    Filter: Optional[Expression] = None
    PredictionIntervalLevel: Optional[PredictionIntervalLevel] = None


class GetDimensionValuesRequest(BaseModel):
    SearchString: Optional[SearchString] = None
    TimePeriod: DateInterval
    Dimension: Dimension
    Context: Optional[Context] = None
    Filter: Optional[Expression] = None
    SortBy: Optional[SortDefinitions] = None
    MaxResults: Optional[MaxResults] = None
    NextPageToken: Optional[NextPageToken] = None


class GetReservationCoverageRequest(BaseModel):
    """
    You can use the following request parameters to query for how much of your instance usage a reservation covered.
    """

    TimePeriod: DateInterval
    GroupBy: Optional[GroupDefinitions] = None
    Granularity: Optional[Granularity] = None
    Filter: Optional[Expression] = None
    Metrics: Optional[MetricNames] = None
    NextPageToken: Optional[NextPageToken] = None
    SortBy: Optional[SortDefinition] = None
    MaxResults: Optional[MaxResults] = None


class GetReservationPurchaseRecommendationRequest(BaseModel):
    AccountId: Optional[GenericString] = None
    Service: GenericString
    Filter: Optional[Expression] = None
    AccountScope: Optional[AccountScope] = None
    LookbackPeriodInDays: Optional[LookbackPeriodInDays] = None
    TermInYears: Optional[TermInYears] = None
    PaymentOption: Optional[PaymentOption] = None
    ServiceSpecification: Optional[ServiceSpecification] = None
    PageSize: Optional[NonNegativeInteger] = None
    NextPageToken: Optional[NextPageToken] = None


class GetReservationUtilizationRequest(BaseModel):
    TimePeriod: DateInterval
    GroupBy: Optional[GroupDefinitions] = None
    Granularity: Optional[Granularity] = None
    Filter: Optional[Expression] = None
    SortBy: Optional[SortDefinition] = None
    NextPageToken: Optional[NextPageToken] = None
    MaxResults: Optional[MaxResults] = None


class GetRightsizingRecommendationRequest(BaseModel):
    Filter: Optional[Expression] = None
    Configuration: Optional[RightsizingRecommendationConfiguration] = None
    Service: GenericString
    PageSize: Optional[NonNegativeInteger] = None
    NextPageToken: Optional[NextPageToken] = None


class GetSavingsPlansCoverageRequest(BaseModel):
    TimePeriod: DateInterval
    GroupBy: Optional[GroupDefinitions] = None
    Granularity: Optional[Granularity] = None
    Filter: Optional[Expression] = None
    Metrics: Optional[MetricNames] = None
    NextToken: Optional[NextPageToken] = None
    MaxResults: Optional[MaxResults] = None
    SortBy: Optional[SortDefinition] = None


class GetSavingsPlansPurchaseRecommendationRequest(BaseModel):
    SavingsPlansType: SupportedSavingsPlansType
    TermInYears: TermInYears
    PaymentOption: PaymentOption
    AccountScope: Optional[AccountScope] = None
    NextPageToken: Optional[NextPageToken] = None
    PageSize: Optional[NonNegativeInteger] = None
    LookbackPeriodInDays: LookbackPeriodInDays
    Filter: Optional[Expression] = None


class GetSavingsPlansUtilizationRequest(BaseModel):
    TimePeriod: DateInterval
    Granularity: Optional[Granularity] = None
    Filter: Optional[Expression] = None
    SortBy: Optional[SortDefinition] = None


class GetSavingsPlansUtilizationDetailsRequest(BaseModel):
    TimePeriod: DateInterval
    Filter: Optional[Expression] = None
    DataType: Optional[SavingsPlansDataTypes] = None
    NextToken: Optional[NextPageToken] = None
    MaxResults: Optional[MaxResults] = None
    SortBy: Optional[SortDefinition] = None


class GetTagsRequest(BaseModel):
    SearchString: Optional[SearchString] = None
    TimePeriod: DateInterval
    TagKey: Optional[TagKey] = None
    Filter: Optional[Expression] = None
    SortBy: Optional[SortDefinitions] = None
    MaxResults: Optional[MaxResults] = None
    NextPageToken: Optional[NextPageToken] = None


class GetUsageForecastRequest(BaseModel):
    TimePeriod: DateInterval
    Metric: Metric
    Granularity: Granularity
    Filter: Optional[Expression] = None
    PredictionIntervalLevel: Optional[PredictionIntervalLevel] = None


class UpdateCostCategoryDefinitionRequest(BaseModel):
    CostCategoryArn: Arn
    RuleVersion: CostCategoryRuleVersion
    Rules: CostCategoryRulesList
    DefaultValue: Optional[CostCategoryValue] = None
    SplitChargeRules: Optional[CostCategorySplitChargeRulesList] = None


class Expression(BaseModel):
    """
    <p>Use <code>Expression</code> to filter by cost or by usage. There are two patterns: </p> <ul> <li> <p>Simple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for <code>REGION==us-east-1 OR REGION==us-west-1</code>. For <code>GetRightsizingRecommendation</code>, the Region is a full name (for example, <code>REGION==US East (N. Virginia)</code>. The <code>Expression</code> example is as follows:</p> <p> <code>{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", “us-west-1” ] } }</code> </p> <p>The list of dimension values are OR'd together to retrieve cost or usage data. You can create <code>Expression</code> and <code>DimensionValues</code> objects using either <code>with*</code> methods or <code>set*</code> methods in multiple lines. </p> </li> <li> <p>Compound dimension values with logical operations - You can use multiple <code>Expression</code> types and the logical operators <code>AND/OR/NOT</code> to create a list of one or more <code>Expression</code> objects. By doing this, you can filter on more advanced options. For example, you can filter on <code>((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)</code>. The <code>Expression</code> for that is as follows:</p> <p> <code>{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } </code> </p> <note> <p>Because each <code>Expression</code> can have only one operator, the service returns an error if more than one is specified. The following example shows an <code>Expression</code> object that creates an error.</p> </note> <p> <code> { "And": [ ... ], "DimensionValues": { "Dimension": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } </code> </p> </li> </ul> <note> <p>For the <code>GetRightsizingRecommendation</code> action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to <code>LINKED_ACCOUNT</code>, <code>REGION</code>, or <code>RIGHTSIZING_TYPE</code>.</p> <p>For the <code>GetReservationPurchaseRecommendation</code> action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to <code>LINKED_ACCOUNT</code>.</p> </note>
    """

    Or: Optional[Expressions] = None
    And: Optional[Expressions] = None
    Not: Optional[Expression] = None
    Dimensions: Optional[DimensionValues] = None
    Tags: Optional[TagValues] = None
    CostCategories: Optional[CostCategoryValues] = None


class AnomalyMonitor(BaseModel):
    """
    This object continuously inspects your account's cost data for anomalies. It's based on <code>MonitorType</code> and <code>MonitorSpecification</code>. The content consists of detailed metadata and the current status of the monitor object.
    """

    MonitorArn: Optional[GenericString] = None
    MonitorName: GenericString
    CreationDate: Optional[YearMonthDay] = None
    LastUpdatedDate: Optional[YearMonthDay] = None
    LastEvaluatedDate: Optional[YearMonthDay] = None
    MonitorType: MonitorType
    MonitorDimension: Optional[MonitorDimension] = None
    MonitorSpecification: Optional[Expression] = None
    DimensionalValueCount: Optional[NonNegativeInteger] = None


class AnomalyMonitors(BaseModel):
    __root__: List[AnomalyMonitor]


class CostCategoryRulesList(BaseModel):
    __root__: Annotated[List[CostCategoryRule], Field(max_items=500, min_items=1)]


class CostCategory(BaseModel):
    """
    The structure of Cost Categories. This includes detailed metadata and the set of rules for the <code>CostCategory</code> object.
    """

    CostCategoryArn: Arn
    EffectiveStart: ZonedDateTime
    EffectiveEnd: Optional[ZonedDateTime] = None
    Name: CostCategoryName
    RuleVersion: CostCategoryRuleVersion
    Rules: CostCategoryRulesList
    SplitChargeRules: Optional[CostCategorySplitChargeRulesList] = None
    ProcessingStatus: Optional[CostCategoryProcessingStatusList] = None
    DefaultValue: Optional[CostCategoryValue] = None


class CostCategoryRule(BaseModel):
    """
    Rules are processed in order. If there are multiple rules that match the line item, then the first rule to match is used to determine that Cost Category value.
    """

    Value: Optional[CostCategoryValue] = None
    Rule: Optional[Expression] = None
    InheritedValue: Optional[CostCategoryInheritedValueDimension] = None
    Type: Optional[CostCategoryRuleType] = None


class Expressions(BaseModel):
    __root__: List[Expression]


CreateAnomalyMonitorRequest.update_forward_refs()
CreateCostCategoryDefinitionRequest.update_forward_refs()
DescribeCostCategoryDefinitionResponse.update_forward_refs()
GetAnomalyMonitorsResponse.update_forward_refs()
GetCostAndUsageRequest.update_forward_refs()
GetCostAndUsageWithResourcesRequest.update_forward_refs()
GetCostCategoriesRequest.update_forward_refs()
GetCostForecastRequest.update_forward_refs()
GetDimensionValuesRequest.update_forward_refs()
GetReservationCoverageRequest.update_forward_refs()
GetReservationPurchaseRecommendationRequest.update_forward_refs()
GetReservationUtilizationRequest.update_forward_refs()
GetRightsizingRecommendationRequest.update_forward_refs()
GetSavingsPlansCoverageRequest.update_forward_refs()
GetSavingsPlansPurchaseRecommendationRequest.update_forward_refs()
GetSavingsPlansUtilizationRequest.update_forward_refs()
GetSavingsPlansUtilizationDetailsRequest.update_forward_refs()
GetTagsRequest.update_forward_refs()
GetUsageForecastRequest.update_forward_refs()
UpdateCostCategoryDefinitionRequest.update_forward_refs()
Expression.update_forward_refs()
CostCategoryRulesList.update_forward_refs()

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:33+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InternalException(BaseModel):
    __root__: Any


class InvalidInputException(InternalException):
    pass


class AccessDeniedException(InternalException):
    pass


class NoSuchEntityException(InternalException):
    pass


class ServiceTemporarilyUnavailableException(InternalException):
    pass


class LimitExceededException(InternalException):
    pass


class InvalidCrossAccountRoleException(InternalException):
    pass


class PreviewGenerationInProgressException(InternalException):
    pass


class AssessmentRunInProgressException(InternalException):
    pass


class UnsupportedFeatureException(InternalException):
    pass


class AgentsAlreadyRunningAssessmentException(InternalException):
    pass


class FailedItems(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=300, min_length=1)]


class AgentHealth(Enum):
    HEALTHY = 'HEALTHY'
    UNHEALTHY = 'UNHEALTHY'
    UNKNOWN = 'UNKNOWN'


class AgentHealthCode(Enum):
    IDLE = 'IDLE'
    RUNNING = 'RUNNING'
    SHUTDOWN = 'SHUTDOWN'
    UNHEALTHY = 'UNHEALTHY'
    THROTTLED = 'THROTTLED'
    UNKNOWN = 'UNKNOWN'


class AgentId(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class AgentIdList(BaseModel):
    __root__: Annotated[List[AgentId], Field(max_items=99, min_items=0)]


class Hostname(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class AutoScalingGroup(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class AgentVersion(AgentId):
    pass


class OperatingSystem(AutoScalingGroup):
    pass


class KernelVersion(AgentId):
    pass


class Ipv4Address(BaseModel):
    __root__: Annotated[str, Field(max_length=15, min_length=7)]


class AgentPreview(BaseModel):
    """
    Used as a response element in the <a>PreviewAgents</a> action.
    """

    hostname: Optional[Hostname] = None
    agentId: AgentId
    autoScalingGroup: Optional[AutoScalingGroup] = None
    agentHealth: Optional[AgentHealth] = None
    agentVersion: Optional[AgentVersion] = None
    operatingSystem: Optional[OperatingSystem] = None
    kernelVersion: Optional[KernelVersion] = None
    ipv4Address: Optional[Ipv4Address] = None


class AgentPreviewList(BaseModel):
    __root__: Annotated[List[AgentPreview], Field(max_items=100, min_items=0)]


class AmiId(Hostname):
    pass


class ArnCount(BaseModel):
    __root__: int


class AssessmentRulesPackageArnList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=50, min_items=1)]


class AssessmentRunName(BaseModel):
    __root__: Annotated[str, Field(max_length=140, min_length=1)]


class AssessmentRunState(Enum):
    CREATED = 'CREATED'
    START_DATA_COLLECTION_PENDING = 'START_DATA_COLLECTION_PENDING'
    START_DATA_COLLECTION_IN_PROGRESS = 'START_DATA_COLLECTION_IN_PROGRESS'
    COLLECTING_DATA = 'COLLECTING_DATA'
    STOP_DATA_COLLECTION_PENDING = 'STOP_DATA_COLLECTION_PENDING'
    DATA_COLLECTED = 'DATA_COLLECTED'
    START_EVALUATING_RULES_PENDING = 'START_EVALUATING_RULES_PENDING'
    EVALUATING_RULES = 'EVALUATING_RULES'
    FAILED = 'FAILED'
    ERROR = 'ERROR'
    COMPLETED = 'COMPLETED'
    COMPLETED_WITH_ERRORS = 'COMPLETED_WITH_ERRORS'
    CANCELED = 'CANCELED'


class AssessmentRunDuration(BaseModel):
    __root__: Annotated[int, Field(ge=180.0, le=86400.0)]


class Timestamp(BaseModel):
    __root__: datetime


class Bool(BaseModel):
    __root__: bool


class AssessmentRunFindingCounts(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Message(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=0)]


class NamePattern(AssessmentRunName):
    pass


class AssessmentRunStateList(BaseModel):
    __root__: Annotated[List[AssessmentRunState], Field(max_items=50, min_items=0)]


class DurationRange(BaseModel):
    """
    This data type is used in the <a>AssessmentTemplateFilter</a> data type.
    """

    minSeconds: Optional[AssessmentRunDuration] = None
    maxSeconds: Optional[AssessmentRunDuration] = None


class FilterRulesPackageArnList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=50, min_items=0)]


class TimestampRange(BaseModel):
    """
    This data type is used in the <a>AssessmentRunFilter</a> data type.
    """

    beginDate: Optional[Timestamp] = None
    endDate: Optional[Timestamp] = None


class AssessmentRunFilter(BaseModel):
    """
    Used as the request parameter in the <a>ListAssessmentRuns</a> action.
    """

    namePattern: Optional[NamePattern] = None
    states: Optional[AssessmentRunStateList] = None
    durationRange: Optional[DurationRange] = None
    rulesPackageArns: Optional[FilterRulesPackageArnList] = None
    startTimeRange: Optional[TimestampRange] = None
    completionTimeRange: Optional[TimestampRange] = None
    stateChangeTimeRange: Optional[TimestampRange] = None


class FindingCount(ArnCount):
    pass


class InspectorEvent(Enum):
    ASSESSMENT_RUN_STARTED = 'ASSESSMENT_RUN_STARTED'
    ASSESSMENT_RUN_COMPLETED = 'ASSESSMENT_RUN_COMPLETED'
    ASSESSMENT_RUN_STATE_CHANGED = 'ASSESSMENT_RUN_STATE_CHANGED'
    FINDING_REPORTED = 'FINDING_REPORTED'
    OTHER = 'OTHER'


class AssessmentRunNotificationSnsStatusCode(Enum):
    SUCCESS = 'SUCCESS'
    TOPIC_DOES_NOT_EXIST = 'TOPIC_DOES_NOT_EXIST'
    ACCESS_DENIED = 'ACCESS_DENIED'
    INTERNAL_ERROR = 'INTERNAL_ERROR'


class AssessmentRunNotification(BaseModel):
    """
    Used as one of the elements of the <a>AssessmentRun</a> data type.
    """

    date: Timestamp
    event: InspectorEvent
    message: Optional[Message] = None
    error: Bool
    snsTopicArn: Optional[Arn] = None
    snsPublishStatusCode: Optional[AssessmentRunNotificationSnsStatusCode] = None


class AssessmentRunStateChange(BaseModel):
    """
    Used as one of the elements of the <a>AssessmentRun</a> data type.
    """

    stateChangedAt: Timestamp
    state: AssessmentRunState


class AssessmentTargetName(AssessmentRunName):
    pass


class AssessmentTarget(BaseModel):
    """
    Contains information about an Amazon Inspector application. This data type is used as the response element in the <a>DescribeAssessmentTargets</a> action.
    """

    arn: Arn
    name: AssessmentTargetName
    resourceGroupArn: Optional[Arn] = None
    createdAt: Timestamp
    updatedAt: Timestamp


class AssessmentTargetFilter(BaseModel):
    """
    Used as the request parameter in the <a>ListAssessmentTargets</a> action.
    """

    assessmentTargetNamePattern: Optional[NamePattern] = None


class AssessmentTargetList(BaseModel):
    __root__: Annotated[List[AssessmentTarget], Field(max_items=10, min_items=0)]


class AssessmentTemplateName(AssessmentRunName):
    pass


class AssessmentTemplateRulesPackageArnList(FilterRulesPackageArnList):
    pass


class AssessmentTemplateFilter(BaseModel):
    """
    Used as the request parameter in the <a>ListAssessmentTemplates</a> action.
    """

    namePattern: Optional[NamePattern] = None
    durationRange: Optional[DurationRange] = None
    rulesPackageArns: Optional[FilterRulesPackageArnList] = None


class NumericVersion(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class Ipv4AddressList(BaseModel):
    __root__: Annotated[List[Ipv4Address], Field(max_items=50, min_items=0)]


class AssetType(Enum):
    ec2_instance = 'ec2-instance'


class AttributeKey(AgentId):
    pass


class AttributeValue(AutoScalingGroup):
    pass


class Attribute(BaseModel):
    """
    This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions.
    """

    key: AttributeKey
    value: Optional[AttributeValue] = None


class AttributeList(BaseModel):
    __root__: Annotated[List[Attribute], Field(max_items=50, min_items=0)]


class AutoScalingGroupList(BaseModel):
    __root__: Annotated[List[AutoScalingGroup], Field(max_items=20, min_items=0)]


class BatchDescribeArnList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=10, min_items=1)]


class BatchDescribeExclusionsArnList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=100, min_items=1)]


class UUID(BaseModel):
    __root__: Annotated[
        str, Field(regex='[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')
    ]


class Locale(Enum):
    EN_US = 'EN_US'


class ExclusionMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class EventSubscription(BaseModel):
    """
    This data type is used in the <a>Subscription</a> data type.
    """

    event: InspectorEvent
    subscribedAt: Timestamp


class EventSubscriptionList(BaseModel):
    __root__: Annotated[List[EventSubscription], Field(max_items=50, min_items=1)]


class Text(BaseModel):
    __root__: Annotated[str, Field(max_length=20000, min_length=0)]


class FailedItemErrorCode(Enum):
    INVALID_ARN = 'INVALID_ARN'
    DUPLICATE_ARN = 'DUPLICATE_ARN'
    ITEM_DOES_NOT_EXIST = 'ITEM_DOES_NOT_EXIST'
    ACCESS_DENIED = 'ACCESS_DENIED'
    LIMIT_EXCEEDED = 'LIMIT_EXCEEDED'
    INTERNAL_ERROR = 'INTERNAL_ERROR'


class FailedItemDetails(BaseModel):
    """
    Includes details about the failed items.
    """

    failureCode: FailedItemErrorCode
    retryable: Bool


class ServiceName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0)]


class InspectorServiceAttributes(BaseModel):
    """
    This data type is used in the <a>Finding</a> data type.
    """

    schemaVersion: NumericVersion
    assessmentRunArn: Optional[Arn] = None
    rulesPackageArn: Optional[Arn] = None


class FindingId(ServiceName):
    pass


class Severity(Enum):
    Low = 'Low'
    Medium = 'Medium'
    High = 'High'
    Informational = 'Informational'
    Undefined = 'Undefined'


class NumericSeverity(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=10.0)]


class IocConfidence(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10.0)]


class SeverityList(BaseModel):
    __root__: Annotated[List[Severity], Field(max_items=50, min_items=0)]


class ReportFileFormat(Enum):
    HTML = 'HTML'
    PDF = 'PDF'


class ReportType(Enum):
    FINDING = 'FINDING'
    FULL = 'FULL'


class ReportStatus(Enum):
    WORK_IN_PROGRESS = 'WORK_IN_PROGRESS'
    FAILED = 'FAILED'
    COMPLETED = 'COMPLETED'


class Url(BaseModel):
    __root__: Annotated[str, Field(max_length=2048)]


class PaginationToken(Arn):
    pass


class ListMaxResults(ArnCount):
    pass


class PreviewStatus(Enum):
    WORK_IN_PROGRESS = 'WORK_IN_PROGRESS'
    COMPLETED = 'COMPLETED'


class Ipv6Addresses(BaseModel):
    __root__: List[Text]


class ListParentArnList(FilterRulesPackageArnList):
    pass


class ListReturnedArnList(BaseModel):
    __root__: Annotated[List[Arn], Field(max_items=100, min_items=0)]


class ListEventSubscriptionsMaxResults(ArnCount):
    pass


class Long(ArnCount):
    pass


class MessageType(Arn):
    pass


class PreviewAgentsMaxResults(ArnCount):
    pass


class PrivateIp(BaseModel):
    """
    Contains information about a private IP address associated with a network interface. This data type is used as a response element in the <a>DescribeFindings</a> action.
    """

    privateDnsName: Optional[Text] = None
    privateIpAddress: Optional[Text] = None


class ProviderName(Message):
    pass


class UserAttributeKeyList(BaseModel):
    __root__: Annotated[List[AttributeKey], Field(max_items=10, min_items=0)]


class TagKey(AgentId):
    pass


class TagValue(AutoScalingGroup):
    pass


class ResourceGroupTag(BaseModel):
    """
    This data type is used as one of the elements of the <a>ResourceGroup</a> data type.
    """

    key: TagKey
    value: Optional[TagValue] = None


class RuleName(BaseModel):
    __root__: Annotated[str, Field(max_length=1000)]


class RulesPackageName(Message):
    pass


class Version(Message):
    pass


class RulesPackage(BaseModel):
    """
    Contains information about an Amazon Inspector rules package. This data type is used as the response element in the <a>DescribeRulesPackages</a> action.
    """

    arn: Arn
    name: RulesPackageName
    version: Version
    provider: ProviderName
    description: Optional[Text] = None


class ScopeType(Enum):
    INSTANCE_ID = 'INSTANCE_ID'
    RULES_PACKAGE_ARN = 'RULES_PACKAGE_ARN'


class ScopeValue(BaseModel):
    __root__: str


class Scope(BaseModel):
    """
    This data type contains key-value pairs that identify various Amazon resources.
    """

    key: Optional[ScopeType] = None
    value: Optional[ScopeValue] = None


class SecurityGroup(BaseModel):
    """
    Contains information about a security group associated with a network interface. This data type is used as one of the elements of the <a>NetworkInterface</a> data type.
    """

    groupName: Optional[Text] = None
    groupId: Optional[Text] = None


class StopAction(Enum):
    START_EVALUATION = 'START_EVALUATION'
    SKIP_EVALUATION = 'SKIP_EVALUATION'


class Subscription(BaseModel):
    """
    This data type is used as a response element in the <a>ListEventSubscriptions</a> action.
    """

    resourceArn: Arn
    topicArn: Arn
    eventSubscriptions: EventSubscriptionList


class Tag(ResourceGroupTag):
    """
    A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action.
    """

    pass


class TelemetryMetadata(BaseModel):
    """
    The metadata about the Amazon Inspector application data metrics collected by the agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action.
    """

    messageType: MessageType
    count: Long
    dataSize: Optional[Long] = None


class AddAttributesToFindingsResponse(BaseModel):
    failedItems: FailedItems


class CreateAssessmentTargetResponse(BaseModel):
    assessmentTargetArn: Arn


class CreateAssessmentTargetRequest(BaseModel):
    assessmentTargetName: AssessmentTargetName
    resourceGroupArn: Optional[Arn] = None


class CreateAssessmentTemplateResponse(BaseModel):
    assessmentTemplateArn: Arn


class CreateExclusionsPreviewResponse(BaseModel):
    previewToken: UUID


class CreateExclusionsPreviewRequest(BaseModel):
    assessmentTemplateArn: Arn


class CreateResourceGroupResponse(BaseModel):
    resourceGroupArn: Arn


class DeleteAssessmentRunRequest(BaseModel):
    assessmentRunArn: Arn


class DeleteAssessmentTargetRequest(BaseModel):
    assessmentTargetArn: Arn


class DeleteAssessmentTemplateRequest(BaseModel):
    assessmentTemplateArn: Arn


class DescribeAssessmentRunsRequest(BaseModel):
    assessmentRunArns: BatchDescribeArnList


class DescribeAssessmentTargetsResponse(BaseModel):
    assessmentTargets: AssessmentTargetList
    failedItems: FailedItems


class DescribeAssessmentTargetsRequest(BaseModel):
    assessmentTargetArns: BatchDescribeArnList


class DescribeAssessmentTemplatesRequest(BaseModel):
    assessmentTemplateArns: BatchDescribeArnList


class DescribeCrossAccountAccessRoleResponse(BaseModel):
    roleArn: Arn
    valid: Bool
    registeredAt: Timestamp


class DescribeExclusionsResponse(BaseModel):
    exclusions: ExclusionMap
    failedItems: FailedItems


class DescribeExclusionsRequest(BaseModel):
    exclusionArns: BatchDescribeExclusionsArnList
    locale: Optional[Locale] = None


class DescribeFindingsRequest(BaseModel):
    findingArns: BatchDescribeArnList
    locale: Optional[Locale] = None


class DescribeResourceGroupsRequest(BaseModel):
    resourceGroupArns: BatchDescribeArnList


class DescribeRulesPackagesRequest(BaseModel):
    rulesPackageArns: BatchDescribeArnList
    locale: Optional[Locale] = None


class GetAssessmentReportResponse(BaseModel):
    status: ReportStatus
    url: Optional[Url] = None


class GetAssessmentReportRequest(BaseModel):
    assessmentRunArn: Arn
    reportFileFormat: ReportFileFormat
    reportType: ReportType


class GetExclusionsPreviewRequest(BaseModel):
    assessmentTemplateArn: Arn
    previewToken: UUID
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None
    locale: Optional[Locale] = None


class GetTelemetryMetadataRequest(BaseModel):
    assessmentRunArn: Arn


class ListAssessmentRunsResponse(BaseModel):
    assessmentRunArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListAssessmentRunsRequest(BaseModel):
    assessmentTemplateArns: Optional[ListParentArnList] = None
    filter: Optional[AssessmentRunFilter] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListAssessmentTargetsResponse(BaseModel):
    assessmentTargetArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListAssessmentTargetsRequest(BaseModel):
    filter: Optional[AssessmentTargetFilter] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListAssessmentTemplatesResponse(BaseModel):
    assessmentTemplateArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListAssessmentTemplatesRequest(BaseModel):
    assessmentTargetArns: Optional[ListParentArnList] = None
    filter: Optional[AssessmentTemplateFilter] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListEventSubscriptionsRequest(BaseModel):
    resourceArn: Optional[Arn] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListEventSubscriptionsMaxResults] = None


class ListExclusionsResponse(BaseModel):
    exclusionArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListExclusionsRequest(BaseModel):
    assessmentRunArn: Arn
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListFindingsResponse(BaseModel):
    findingArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListRulesPackagesResponse(BaseModel):
    rulesPackageArns: ListReturnedArnList
    nextToken: Optional[PaginationToken] = None


class ListRulesPackagesRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListTagsForResourceRequest(BaseModel):
    resourceArn: Arn


class PreviewAgentsResponse(BaseModel):
    agentPreviews: AgentPreviewList
    nextToken: Optional[PaginationToken] = None


class PreviewAgentsRequest(BaseModel):
    previewAgentsArn: Arn
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[PreviewAgentsMaxResults] = None


class RegisterCrossAccountAccessRoleRequest(BaseModel):
    roleArn: Arn


class RemoveAttributesFromFindingsResponse(AddAttributesToFindingsResponse):
    pass


class StartAssessmentRunResponse(BaseModel):
    assessmentRunArn: Arn


class StartAssessmentRunRequest(BaseModel):
    assessmentTemplateArn: Arn
    assessmentRunName: Optional[AssessmentRunName] = None


class StopAssessmentRunRequest(BaseModel):
    assessmentRunArn: Arn
    stopAction: Optional[StopAction] = None


class SubscribeToEventRequest(BaseModel):
    resourceArn: Arn
    event: InspectorEvent
    topicArn: Arn


class UnsubscribeFromEventRequest(BaseModel):
    resourceArn: Arn
    event: InspectorEvent
    topicArn: Arn


class UpdateAssessmentTargetRequest(BaseModel):
    assessmentTargetArn: Arn
    assessmentTargetName: AssessmentTargetName
    resourceGroupArn: Optional[Arn] = None


class AddRemoveAttributesFindingArnList(BatchDescribeArnList):
    pass


class UserAttributeList(BaseModel):
    __root__: Annotated[List[Attribute], Field(max_items=10, min_items=0)]


class AgentHealthList(BaseModel):
    __root__: Annotated[List[AgentHealth], Field(max_items=10, min_items=0)]


class AgentHealthCodeList(BaseModel):
    __root__: Annotated[List[AgentHealthCode], Field(max_items=10, min_items=0)]


class AgentFilter(BaseModel):
    """
    Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action.
    """

    agentHealths: AgentHealthList
    agentHealthCodes: AgentHealthCodeList


class AssessmentRunStateChangeList(BaseModel):
    __root__: Annotated[
        List[AssessmentRunStateChange], Field(max_items=50, min_items=0)
    ]


class AssessmentRunNotificationList(BaseModel):
    __root__: Annotated[
        List[AssessmentRunNotification], Field(max_items=50, min_items=0)
    ]


class AssessmentRun(BaseModel):
    """
    <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>
    """

    arn: Arn
    name: AssessmentRunName
    assessmentTemplateArn: Arn
    state: AssessmentRunState
    durationInSeconds: AssessmentRunDuration
    rulesPackageArns: AssessmentRulesPackageArnList
    userAttributesForFindings: UserAttributeList
    createdAt: Timestamp
    startedAt: Optional[Timestamp] = None
    completedAt: Optional[Timestamp] = None
    stateChangedAt: Timestamp
    dataCollected: Bool
    stateChanges: AssessmentRunStateChangeList
    notifications: AssessmentRunNotificationList
    findingCounts: AssessmentRunFindingCounts


class TelemetryMetadataList(BaseModel):
    __root__: Annotated[List[TelemetryMetadata], Field(max_items=5000, min_items=0)]


class AssessmentRunAgent(BaseModel):
    """
    Contains information about an Amazon Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action.
    """

    agentId: AgentId
    assessmentRunArn: Arn
    agentHealth: AgentHealth
    agentHealthCode: AgentHealthCode
    agentHealthDetails: Optional[Message] = None
    autoScalingGroup: Optional[AutoScalingGroup] = None
    telemetryMetadata: TelemetryMetadataList


class AssessmentRunAgentList(BaseModel):
    __root__: Annotated[List[AssessmentRunAgent], Field(max_items=500, min_items=0)]


class AssessmentRunList(BaseModel):
    __root__: Annotated[List[AssessmentRun], Field(max_items=10, min_items=0)]


class AssessmentTemplate(BaseModel):
    """
    Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action.
    """

    arn: Arn
    name: AssessmentTemplateName
    assessmentTargetArn: Arn
    durationInSeconds: AssessmentRunDuration
    rulesPackageArns: AssessmentTemplateRulesPackageArnList
    userAttributesForFindings: UserAttributeList
    lastAssessmentRunArn: Optional[Arn] = None
    assessmentRunCount: ArnCount
    createdAt: Timestamp


class AssessmentTemplateList(BaseModel):
    __root__: Annotated[List[AssessmentTemplate], Field(max_items=10, min_items=0)]


class Tags2(BaseModel):
    __root__: List[Tag]


class ResourceGroupTags(BaseModel):
    __root__: Annotated[List[ResourceGroupTag], Field(max_items=10, min_items=1)]


class RulesPackageList(BaseModel):
    __root__: Annotated[List[RulesPackage], Field(max_items=10, min_items=0)]


class ScopeList(BaseModel):
    __root__: Annotated[List[Scope], Field(min_items=1)]


class Exclusion(BaseModel):
    """
    Contains information about what was excluded from an assessment run.
    """

    arn: Arn
    title: Text
    description: Text
    recommendation: Text
    scopes: ScopeList
    attributes: Optional[AttributeList] = None


class ExclusionPreview(BaseModel):
    """
    Contains information about what is excluded from an assessment run given the current state of the assessment template.
    """

    title: Text
    description: Text
    recommendation: Text
    scopes: ScopeList
    attributes: Optional[AttributeList] = None


class ExclusionPreviewList(BaseModel):
    __root__: Annotated[List[ExclusionPreview], Field(max_items=100, min_items=0)]


class RuleNameList(BaseModel):
    __root__: Annotated[List[RuleName], Field(max_items=50, min_items=0)]


class FindingFilter(BaseModel):
    """
    This data type is used as a request parameter in the <a>ListFindings</a> action.
    """

    agentIds: Optional[AgentIdList] = None
    autoScalingGroups: Optional[AutoScalingGroupList] = None
    ruleNames: Optional[RuleNameList] = None
    severities: Optional[SeverityList] = None
    rulesPackageArns: Optional[FilterRulesPackageArnList] = None
    attributes: Optional[AttributeList] = None
    userAttributes: Optional[AttributeList] = None
    creationTimeRange: Optional[TimestampRange] = None


class SubscriptionList(BaseModel):
    __root__: Annotated[List[Subscription], Field(max_items=50, min_items=0)]


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=10, min_items=0)]


class PrivateIpAddresses(BaseModel):
    __root__: List[PrivateIp]


class SecurityGroups(BaseModel):
    __root__: List[SecurityGroup]


class NetworkInterface(BaseModel):
    """
    Contains information about the network interfaces interacting with an EC2 instance. This data type is used as one of the elements of the <a>AssetAttributes</a> data type.
    """

    networkInterfaceId: Optional[Text] = None
    subnetId: Optional[Text] = None
    vpcId: Optional[Text] = None
    privateDnsName: Optional[Text] = None
    privateIpAddress: Optional[Text] = None
    privateIpAddresses: Optional[PrivateIpAddresses] = None
    publicDnsName: Optional[Text] = None
    publicIp: Optional[Text] = None
    ipv6Addresses: Optional[Ipv6Addresses] = None
    securityGroups: Optional[SecurityGroups] = None


class ResourceGroup(BaseModel):
    """
    Contains information about a resource group. The resource group defines a set of tags that, when queried, identify the AWS resources that make up the assessment target. This data type is used as the response element in the <a>DescribeResourceGroups</a> action.
    """

    arn: Arn
    tags: ResourceGroupTags
    createdAt: Timestamp


class AddAttributesToFindingsRequest(BaseModel):
    findingArns: AddRemoveAttributesFindingArnList
    attributes: UserAttributeList


class CreateAssessmentTemplateRequest(BaseModel):
    assessmentTargetArn: Arn
    assessmentTemplateName: AssessmentTemplateName
    durationInSeconds: AssessmentRunDuration
    rulesPackageArns: AssessmentTemplateRulesPackageArnList
    userAttributesForFindings: Optional[UserAttributeList] = None


class CreateResourceGroupRequest(BaseModel):
    resourceGroupTags: ResourceGroupTags


class DescribeAssessmentRunsResponse(BaseModel):
    assessmentRuns: AssessmentRunList
    failedItems: FailedItems


class DescribeAssessmentTemplatesResponse(BaseModel):
    assessmentTemplates: AssessmentTemplateList
    failedItems: FailedItems


class DescribeRulesPackagesResponse(BaseModel):
    rulesPackages: RulesPackageList
    failedItems: FailedItems


class GetExclusionsPreviewResponse(BaseModel):
    previewStatus: PreviewStatus
    exclusionPreviews: Optional[ExclusionPreviewList] = None
    nextToken: Optional[PaginationToken] = None


class GetTelemetryMetadataResponse(BaseModel):
    telemetryMetadata: TelemetryMetadataList


class ListAssessmentRunAgentsResponse(BaseModel):
    assessmentRunAgents: AssessmentRunAgentList
    nextToken: Optional[PaginationToken] = None


class ListAssessmentRunAgentsRequest(BaseModel):
    assessmentRunArn: Arn
    filter: Optional[AgentFilter] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListEventSubscriptionsResponse(BaseModel):
    subscriptions: SubscriptionList
    nextToken: Optional[PaginationToken] = None


class ListFindingsRequest(BaseModel):
    assessmentRunArns: Optional[ListParentArnList] = None
    filter: Optional[FindingFilter] = None
    nextToken: Optional[PaginationToken] = None
    maxResults: Optional[ListMaxResults] = None


class ListTagsForResourceResponse(BaseModel):
    tags: TagList


class RemoveAttributesFromFindingsRequest(BaseModel):
    findingArns: AddRemoveAttributesFindingArnList
    attributeKeys: UserAttributeKeyList


class SetTagsForResourceRequest(BaseModel):
    resourceArn: Arn
    tags: Optional[TagList] = None


class NetworkInterfaces(BaseModel):
    __root__: List[NetworkInterface]


class AssetAttributes(BaseModel):
    """
    A collection of attributes of the host from which the finding is generated.
    """

    schemaVersion: NumericVersion
    agentId: Optional[AgentId] = None
    autoScalingGroup: Optional[AutoScalingGroup] = None
    amiId: Optional[AmiId] = None
    hostname: Optional[Hostname] = None
    ipv4Addresses: Optional[Ipv4AddressList] = None
    tags: Optional[Tags2] = None
    networkInterfaces: Optional[NetworkInterfaces] = None


class ResourceGroupList(BaseModel):
    __root__: Annotated[List[ResourceGroup], Field(max_items=10, min_items=0)]


class Finding(BaseModel):
    """
    Contains information about an Amazon Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action.
    """

    arn: Arn
    schemaVersion: Optional[NumericVersion] = None
    service: Optional[ServiceName] = None
    serviceAttributes: Optional[InspectorServiceAttributes] = None
    assetType: Optional[AssetType] = None
    assetAttributes: Optional[AssetAttributes] = None
    id: Optional[FindingId] = None
    title: Optional[Text] = None
    description: Optional[Text] = None
    recommendation: Optional[Text] = None
    severity: Optional[Severity] = None
    numericSeverity: Optional[NumericSeverity] = None
    confidence: Optional[IocConfidence] = None
    indicatorOfCompromise: Optional[Bool] = None
    attributes: AttributeList
    userAttributes: UserAttributeList
    createdAt: Timestamp
    updatedAt: Timestamp


class DescribeResourceGroupsResponse(BaseModel):
    resourceGroups: ResourceGroupList
    failedItems: FailedItems


class FindingList(BaseModel):
    __root__: Annotated[List[Finding], Field(max_items=100, min_items=0)]


class DescribeFindingsResponse(BaseModel):
    findings: FindingList
    failedItems: FailedItems

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:48+00:00

from __future__ import annotations

from datetime import datetime
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class AssociateDeviceWithPlacementResponse(BaseModel):
    pass


class InternalFailureException(BaseModel):
    __root__: Any


class InvalidRequestException(InternalFailureException):
    pass


class ResourceConflictException(InternalFailureException):
    pass


class ResourceNotFoundException(InternalFailureException):
    pass


class CreatePlacementResponse(AssociateDeviceWithPlacementResponse):
    pass


class AttributeValue(BaseModel):
    __root__: Annotated[str, Field(max_length=800)]


class CreateProjectResponse(AssociateDeviceWithPlacementResponse):
    pass


class DefaultPlacementAttributeMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DeviceTemplateMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class DeletePlacementResponse(AssociateDeviceWithPlacementResponse):
    pass


class TooManyRequestsException(InternalFailureException):
    pass


class DeleteProjectResponse(AssociateDeviceWithPlacementResponse):
    pass


class DisassociateDeviceFromPlacementResponse(AssociateDeviceWithPlacementResponse):
    pass


class TagResourceResponse(AssociateDeviceWithPlacementResponse):
    pass


class UntagResourceResponse(AssociateDeviceWithPlacementResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class UpdatePlacementResponse(AssociateDeviceWithPlacementResponse):
    pass


class UpdateProjectResponse(AssociateDeviceWithPlacementResponse):
    pass


class ProjectName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[0-9A-Za-z_-]+$')
    ]


class PlacementName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9_-]+$')
    ]


class DeviceId(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class DeviceTemplateName(PlacementName):
    pass


class AssociateDeviceWithPlacementRequest(BaseModel):
    deviceId: DeviceId


class AttributeDefaultValue(AttributeValue):
    pass


class AttributeName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class PlacementAttributeMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreatePlacementRequest(BaseModel):
    placementName: PlacementName
    attributes: Optional[PlacementAttributeMap] = None


class Description(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=0)]


class PlacementTemplate(BaseModel):
    """
    An object defining the template for a placement.
    """

    defaultAttributes: Optional[DefaultPlacementAttributeMap] = None
    deviceTemplates: Optional[DeviceTemplateMap] = None


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateProjectRequest(BaseModel):
    projectName: ProjectName
    description: Optional[Description] = None
    placementTemplate: Optional[PlacementTemplate] = None
    tags: Optional[TagMap] = None


class DeletePlacementRequest(BaseModel):
    pass


class DeleteProjectRequest(BaseModel):
    pass


class DescribePlacementRequest(BaseModel):
    pass


class DescribeProjectRequest(BaseModel):
    pass


class DeviceCallbackKey(AttributeName):
    pass


class DeviceCallbackValue(BaseModel):
    __root__: Annotated[str, Field(max_length=200)]


class DeviceCallbackOverrideMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DeviceMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DeviceType(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class DeviceTemplate(BaseModel):
    """
    An object representing a device for a placement template (see <a>PlacementTemplate</a>).
    """

    deviceType: Optional[DeviceType] = None
    callbackOverrides: Optional[DeviceCallbackOverrideMap] = None


class DisassociateDeviceFromPlacementRequest(BaseModel):
    pass


class GetDevicesInPlacementRequest(BaseModel):
    pass


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=250.0)]


class ListPlacementsRequest(BaseModel):
    pass


class ListProjectsRequest(BaseModel):
    pass


class ProjectArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^arn:aws:iot1click:[A-Za-z0-9_/.-]{0,63}:\\d+:projects/[0-9A-Za-z_-]{1,128}$'
        ),
    ]


class ListTagsForResourceRequest(BaseModel):
    pass


class Time(BaseModel):
    __root__: datetime


class PlacementSummary(BaseModel):
    """
    An object providing summary information for a particular placement.
    """

    projectName: ProjectName
    placementName: PlacementName
    createdDate: Time
    updatedDate: Time


class ProjectSummary(BaseModel):
    """
    An object providing summary information for a particular project for an associated AWS account and region.
    """

    arn: Optional[ProjectArn] = None
    projectName: ProjectName
    createdDate: Time
    updatedDate: Time
    tags: Optional[TagMap] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class UntagResourceRequest(BaseModel):
    pass


class UpdatePlacementRequest(BaseModel):
    attributes: Optional[PlacementAttributeMap] = None


class UpdateProjectRequest(BaseModel):
    description: Optional[Description] = None
    placementTemplate: Optional[PlacementTemplate] = None


class GetDevicesInPlacementResponse(BaseModel):
    devices: DeviceMap


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class PlacementDescription(BaseModel):
    """
    An object describing a project's placement.
    """

    projectName: ProjectName
    placementName: PlacementName
    attributes: PlacementAttributeMap
    createdDate: Time
    updatedDate: Time


class ProjectDescription(BaseModel):
    """
    An object providing detailed information for a particular project associated with an AWS account and region.
    """

    arn: Optional[ProjectArn] = None
    projectName: ProjectName
    description: Optional[Description] = None
    createdDate: Time
    updatedDate: Time
    placementTemplate: Optional[PlacementTemplate] = None
    tags: Optional[TagMap] = None


class PlacementSummaryList(BaseModel):
    __root__: List[PlacementSummary]


class ProjectSummaryList(BaseModel):
    __root__: List[ProjectSummary]


class DescribePlacementResponse(BaseModel):
    placement: PlacementDescription


class DescribeProjectResponse(BaseModel):
    project: ProjectDescription


class ListPlacementsResponse(BaseModel):
    placements: PlacementSummaryList
    nextToken: Optional[NextToken] = None


class ListProjectsResponse(BaseModel):
    projects: ProjectSummaryList
    nextToken: Optional[NextToken] = None

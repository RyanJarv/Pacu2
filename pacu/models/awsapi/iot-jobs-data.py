# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidRequestException(BaseModel):
    __root__: Any


class ResourceNotFoundException(InvalidRequestException):
    pass


class ThrottlingException(InvalidRequestException):
    pass


class ServiceUnavailableException(InvalidRequestException):
    pass


class CertificateValidationException(InvalidRequestException):
    pass


class TerminalStateException(InvalidRequestException):
    pass


class DetailsValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='[^\\p\\{C\\}]*\\+')
    ]


class InvalidStateTransitionException(InvalidRequestException):
    pass


class ApproximateSecondsBeforeTimedOut(BaseModel):
    __root__: int


class DescribeJobExecutionJobId(BaseModel):
    __root__: Annotated[str, Field(regex='[a-zA-Z0-9_-]+|^\\$next')]


class ThingName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9:_-]+')
    ]


class IncludeJobDocument(BaseModel):
    __root__: bool


class ExecutionNumber(ApproximateSecondsBeforeTimedOut):
    pass


class DescribeJobExecutionRequest(BaseModel):
    pass


class DetailsKey(ThingName):
    pass


class DetailsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ExpectedVersion(ApproximateSecondsBeforeTimedOut):
    pass


class GetPendingJobExecutionsRequest(BaseModel):
    pass


class IncludeExecutionState(IncludeJobDocument):
    pass


class JobDocument(BaseModel):
    __root__: Annotated[str, Field(max_length=32768)]


class JobId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9_-]+')]


class JobExecutionStatus(Enum):
    QUEUED = 'QUEUED'
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    TIMED_OUT = 'TIMED_OUT'
    REJECTED = 'REJECTED'
    REMOVED = 'REMOVED'
    CANCELED = 'CANCELED'


class QueuedAt(ApproximateSecondsBeforeTimedOut):
    pass


class StartedAt(ApproximateSecondsBeforeTimedOut):
    pass


class LastUpdatedAt(ApproximateSecondsBeforeTimedOut):
    pass


class VersionNumber(ApproximateSecondsBeforeTimedOut):
    pass


class JobExecutionState(BaseModel):
    """
    Contains data about the state of a job execution.
    """

    status: Optional[JobExecutionStatus] = None
    statusDetails: Optional[DetailsMap] = None
    versionNumber: Optional[VersionNumber] = None


class JobExecutionSummary(BaseModel):
    """
    Contains a subset of information about a job execution.
    """

    jobId: Optional[JobId] = None
    queuedAt: Optional[QueuedAt] = None
    startedAt: Optional[StartedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    versionNumber: Optional[VersionNumber] = None
    executionNumber: Optional[ExecutionNumber] = None


class StepTimeoutInMinutes(ApproximateSecondsBeforeTimedOut):
    pass


class StartNextPendingJobExecutionRequest(BaseModel):
    statusDetails: Optional[DetailsMap] = None
    stepTimeoutInMinutes: Optional[StepTimeoutInMinutes] = None


class UpdateJobExecutionRequest(BaseModel):
    status: JobExecutionStatus
    statusDetails: Optional[DetailsMap] = None
    stepTimeoutInMinutes: Optional[StepTimeoutInMinutes] = None
    expectedVersion: Optional[ExpectedVersion] = None
    includeJobExecutionState: Optional[IncludeExecutionState] = None
    includeJobDocument: Optional[IncludeJobDocument] = None
    executionNumber: Optional[ExecutionNumber] = None


class UpdateJobExecutionResponse(BaseModel):
    executionState: Optional[JobExecutionState] = None
    jobDocument: Optional[JobDocument] = None


class JobExecution(BaseModel):
    """
    Contains data about a job execution.
    """

    jobId: Optional[JobId] = None
    thingName: Optional[ThingName] = None
    status: Optional[JobExecutionStatus] = None
    statusDetails: Optional[DetailsMap] = None
    queuedAt: Optional[QueuedAt] = None
    startedAt: Optional[StartedAt] = None
    lastUpdatedAt: Optional[LastUpdatedAt] = None
    approximateSecondsBeforeTimedOut: Optional[ApproximateSecondsBeforeTimedOut] = None
    versionNumber: Optional[VersionNumber] = None
    executionNumber: Optional[ExecutionNumber] = None
    jobDocument: Optional[JobDocument] = None


class JobExecutionSummaryList(BaseModel):
    __root__: List[JobExecutionSummary]


class DescribeJobExecutionResponse(BaseModel):
    execution: Optional[JobExecution] = None


class GetPendingJobExecutionsResponse(BaseModel):
    inProgressJobs: Optional[JobExecutionSummaryList] = None
    queuedJobs: Optional[JobExecutionSummaryList] = None


class StartNextPendingJobExecutionResponse(DescribeJobExecutionResponse):
    pass

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:25+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ValidationException(BaseModel):
    __root__: Any


class ResourceNotFoundException(ValidationException):
    pass


class AccessDeniedException(ValidationException):
    pass


class ServiceLimitExceededException(ValidationException):
    pass


class ConflictException(ValidationException):
    pass


class TooManyRequestsException(ValidationException):
    pass


class InternalServiceErrorException(ValidationException):
    pass


class SigningProfileStatus(Enum):
    Active = 'Active'
    Canceled = 'Canceled'
    Revoked = 'Revoked'


class BadRequestException(ValidationException):
    pass


class NotFoundException(ValidationException):
    pass


class CertificateArn(BaseModel):
    __root__: str


class Integer(BaseModel):
    __root__: int


class ValidityType(Enum):
    DAYS = 'DAYS'
    MONTHS = 'MONTHS'
    YEARS = 'YEARS'


class ImageFormat(Enum):
    JSON = 'JSON'
    JSONEmbedded = 'JSONEmbedded'
    JSONDetached = 'JSONDetached'


class SigningParameterValue(CertificateArn):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class ThrottlingException(ValidationException):
    pass


class TagResourceResponse(BaseModel):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class AccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='^[0-9]{12}$')]


class ProfileName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=2, regex='^[a-zA-Z0-9_]{2,}')
    ]


class ProfileVersion(BaseModel):
    __root__: Annotated[
        str, Field(max_length=10, min_length=10, regex='^[a-zA-Z0-9]{10}$')
    ]


class String(CertificateArn):
    pass


class AddProfilePermissionRequest(BaseModel):
    profileVersion: Optional[ProfileVersion] = None
    action: String
    principal: String
    revisionId: Optional[String] = None
    statementId: String


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class BucketName(CertificateArn):
    pass


class CancelSigningProfileRequest(BaseModel):
    pass


class Category(Enum):
    AWSIoT = 'AWSIoT'


class ClientRequestToken(CertificateArn):
    pass


class JobId(CertificateArn):
    pass


class DescribeSigningJobRequest(BaseModel):
    pass


class SigningMaterial(BaseModel):
    """
    The ACM certificate that is used to sign your code.
    """

    certificateArn: CertificateArn


class PlatformId(CertificateArn):
    pass


class DisplayName(CertificateArn):
    pass


class SigningParameters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Timestamp(BaseModel):
    __root__: datetime


class RequestedBy(CertificateArn):
    pass


class SigningStatus(Enum):
    InProgress = 'InProgress'
    Failed = 'Failed'
    Succeeded = 'Succeeded'


class StatusReason(CertificateArn):
    pass


class SigningJobRevocationRecord(BaseModel):
    """
    Revocation information for a signing job.
    """

    reason: Optional[String] = None
    revokedAt: Optional[Timestamp] = None
    revokedBy: Optional[String] = None


class EncryptionAlgorithm(Enum):
    RSA = 'RSA'
    ECDSA = 'ECDSA'


class EncryptionAlgorithms(BaseModel):
    __root__: List[EncryptionAlgorithm]


class EncryptionAlgorithmOptions(BaseModel):
    """
    The encryption algorithm options that are available to a code signing job.
    """

    allowedValues: EncryptionAlgorithms
    defaultValue: EncryptionAlgorithm


class GetSigningPlatformRequest(BaseModel):
    pass


class MaxSizeInMB(Integer):
    pass


class Bool(BaseModel):
    __root__: bool


class GetSigningProfileRequest(BaseModel):
    pass


class SigningProfileRevocationRecord(BaseModel):
    """
    Revocation information for a signing profile.
    """

    revocationEffectiveFrom: Optional[Timestamp] = None
    revokedAt: Optional[Timestamp] = None
    revokedBy: Optional[String] = None


class SignatureValidityPeriod(BaseModel):
    """
    The validity period for a signing job.
    """

    value: Optional[Integer] = None
    type: Optional[ValidityType] = None


class StringModel(CertificateArn):
    pass


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class HashAlgorithm(Enum):
    SHA1 = 'SHA1'
    SHA256 = 'SHA256'


class HashAlgorithms(BaseModel):
    __root__: List[HashAlgorithm]


class HashAlgorithmOptions(BaseModel):
    """
    The hash algorithms that are available to a code signing job.
    """

    allowedValues: HashAlgorithms
    defaultValue: HashAlgorithm


class ImageFormats(BaseModel):
    __root__: List[ImageFormat]


class Key(CertificateArn):
    pass


class ListProfilePermissionsRequest(BaseModel):
    pass


class PolicySizeBytes(Integer):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=25.0)]


class NextToken(CertificateArn):
    pass


class ListSigningJobsRequest(BaseModel):
    pass


class ListSigningPlatformsRequest(BaseModel):
    pass


class Statuses(BaseModel):
    __root__: List[SigningProfileStatus]


class ListSigningProfilesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class Permission(BaseModel):
    """
    A cross-account permission for a signing profile.
    """

    action: Optional[String] = None
    principal: Optional[String] = None
    statementId: Optional[String] = None
    profileVersion: Optional[ProfileVersion] = None


class Prefix(CertificateArn):
    pass


class RemoveProfilePermissionRequest(BaseModel):
    pass


class RevocationReasonString(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=1)]


class RevokeSignatureRequest(BaseModel):
    jobOwner: Optional[AccountId] = None
    reason: RevocationReasonString


class RevokeSigningProfileRequest(BaseModel):
    profileVersion: ProfileVersion
    reason: RevocationReasonString
    effectiveTime: Timestamp


class S3SignedObject(BaseModel):
    """
    The S3 bucket name and key where code signing saved your signed code image.
    """

    bucketName: Optional[BucketName] = None
    key: Optional[Key] = None


class Version(CertificateArn):
    pass


class SigningParameterKey(CertificateArn):
    pass


class SigningProfile(BaseModel):
    """
    Contains information about the ACM certificates and code signing configuration parameters that can be used by a given code signing user.
    """

    profileName: Optional[ProfileName] = None
    profileVersion: Optional[ProfileVersion] = None
    profileVersionArn: Optional[Arn] = None
    signingMaterial: Optional[SigningMaterial] = None
    signatureValidityPeriod: Optional[SignatureValidityPeriod] = None
    platformId: Optional[PlatformId] = None
    platformDisplayName: Optional[DisplayName] = None
    signingParameters: Optional[SigningParameters] = None
    status: Optional[SigningProfileStatus] = None
    arn: Optional[StringModel] = None
    tags: Optional[TagMap] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=1)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class UntagResourceRequest(BaseModel):
    pass


class AddProfilePermissionResponse(BaseModel):
    revisionId: Optional[String] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class PutSigningProfileResponse(BaseModel):
    arn: Optional[StringModel] = None
    profileVersion: Optional[ProfileVersion] = None
    profileVersionArn: Optional[Arn] = None


class SigningConfigurationOverrides(BaseModel):
    """
    A signing configuration that overrides the default encryption or hash algorithm of a signing job.
    """

    encryptionAlgorithm: Optional[EncryptionAlgorithm] = None
    hashAlgorithm: Optional[HashAlgorithm] = None


class RemoveProfilePermissionResponse(AddProfilePermissionResponse):
    pass


class StartSigningJobResponse(BaseModel):
    jobId: Optional[JobId] = None
    jobOwner: Optional[AccountId] = None


class S3Source(BaseModel):
    """
    Information about the S3 bucket where you saved your unsigned code.
    """

    bucketName: BucketName
    key: Key
    version: Version


class S3Destination(BaseModel):
    """
    The name and prefix of the S3 bucket where code signing saves your signed objects.
    """

    bucketName: Optional[BucketName] = None
    prefix: Optional[Prefix] = None


class Source(BaseModel):
    """
    An <code>S3Source</code> object that contains information about the S3 bucket where you saved your unsigned code.
    """

    s3: Optional[S3Source] = None


class SigningPlatformOverrides(BaseModel):
    """
    Any overrides that are applied to the signing configuration of a code signing platform.
    """

    signingConfiguration: Optional[SigningConfigurationOverrides] = None
    signingImageFormat: Optional[ImageFormat] = None


class SignedObject(BaseModel):
    """
    Points to an <code>S3SignedObject</code> object that contains information about your signed code image.
    """

    s3: Optional[S3SignedObject] = None


class Destination(BaseModel):
    """
    Points to an <code>S3Destination</code> object that contains information about your S3 bucket.
    """

    s3: Optional[S3Destination] = None


class SigningConfiguration(BaseModel):
    """
    The configuration of a code signing operation.
    """

    encryptionAlgorithmOptions: EncryptionAlgorithmOptions
    hashAlgorithmOptions: HashAlgorithmOptions


class SigningImageFormat(BaseModel):
    """
    The image format of a code signing platform or profile.
    """

    supportedFormats: ImageFormats
    defaultFormat: ImageFormat


class Permissions(BaseModel):
    __root__: List[Permission]


class SigningProfiles(BaseModel):
    __root__: List[SigningProfile]


class PutSigningProfileRequest(BaseModel):
    signingMaterial: Optional[SigningMaterial] = None
    signatureValidityPeriod: Optional[SignatureValidityPeriod] = None
    platformId: PlatformId
    overrides: Optional[SigningPlatformOverrides] = None
    signingParameters: Optional[SigningParameters] = None
    tags: Optional[TagMap] = None


class SigningJob(BaseModel):
    """
    Contains information about a signing job.
    """

    jobId: Optional[JobId] = None
    source: Optional[Source] = None
    signedObject: Optional[SignedObject] = None
    signingMaterial: Optional[SigningMaterial] = None
    createdAt: Optional[Timestamp] = None
    status: Optional[SigningStatus] = None
    isRevoked: Optional[Bool] = None
    profileName: Optional[ProfileName] = None
    profileVersion: Optional[ProfileVersion] = None
    platformId: Optional[PlatformId] = None
    platformDisplayName: Optional[DisplayName] = None
    signatureExpiresAt: Optional[Timestamp] = None
    jobOwner: Optional[AccountId] = None
    jobInvoker: Optional[AccountId] = None


class SigningPlatform(BaseModel):
    """
    Contains information about the signing configurations and parameters that are used to perform a code signing job.
    """

    platformId: Optional[String] = None
    displayName: Optional[String] = None
    partner: Optional[String] = None
    target: Optional[String] = None
    category: Optional[Category] = None
    signingConfiguration: Optional[SigningConfiguration] = None
    signingImageFormat: Optional[SigningImageFormat] = None
    maxSizeInMB: Optional[MaxSizeInMB] = None
    revocationSupported: Optional[Bool] = None


class StartSigningJobRequest(BaseModel):
    source: Source
    destination: Destination
    profileName: ProfileName
    clientRequestToken: ClientRequestToken
    profileOwner: Optional[AccountId] = None


class DescribeSigningJobResponse(BaseModel):
    jobId: Optional[JobId] = None
    source: Optional[Source] = None
    signingMaterial: Optional[SigningMaterial] = None
    platformId: Optional[PlatformId] = None
    platformDisplayName: Optional[DisplayName] = None
    profileName: Optional[ProfileName] = None
    profileVersion: Optional[ProfileVersion] = None
    overrides: Optional[SigningPlatformOverrides] = None
    signingParameters: Optional[SigningParameters] = None
    createdAt: Optional[Timestamp] = None
    completedAt: Optional[Timestamp] = None
    signatureExpiresAt: Optional[Timestamp] = None
    requestedBy: Optional[RequestedBy] = None
    status: Optional[SigningStatus] = None
    statusReason: Optional[StatusReason] = None
    revocationRecord: Optional[SigningJobRevocationRecord] = None
    signedObject: Optional[SignedObject] = None
    jobOwner: Optional[AccountId] = None
    jobInvoker: Optional[AccountId] = None


class GetSigningPlatformResponse(BaseModel):
    platformId: Optional[PlatformId] = None
    displayName: Optional[DisplayName] = None
    partner: Optional[String] = None
    target: Optional[String] = None
    category: Optional[Category] = None
    signingConfiguration: Optional[SigningConfiguration] = None
    signingImageFormat: Optional[SigningImageFormat] = None
    maxSizeInMB: Optional[MaxSizeInMB] = None
    revocationSupported: Optional[Bool] = None


class GetSigningProfileResponse(BaseModel):
    profileName: Optional[ProfileName] = None
    profileVersion: Optional[ProfileVersion] = None
    profileVersionArn: Optional[Arn] = None
    revocationRecord: Optional[SigningProfileRevocationRecord] = None
    signingMaterial: Optional[SigningMaterial] = None
    platformId: Optional[PlatformId] = None
    platformDisplayName: Optional[DisplayName] = None
    signatureValidityPeriod: Optional[SignatureValidityPeriod] = None
    overrides: Optional[SigningPlatformOverrides] = None
    signingParameters: Optional[SigningParameters] = None
    status: Optional[SigningProfileStatus] = None
    statusReason: Optional[String] = None
    arn: Optional[StringModel] = None
    tags: Optional[TagMap] = None


class ListProfilePermissionsResponse(BaseModel):
    revisionId: Optional[String] = None
    policySizeBytes: Optional[PolicySizeBytes] = None
    permissions: Optional[Permissions] = None
    nextToken: Optional[String] = None


class ListSigningProfilesResponse(BaseModel):
    profiles: Optional[SigningProfiles] = None
    nextToken: Optional[NextToken] = None


class SigningJobs(BaseModel):
    __root__: List[SigningJob]


class SigningPlatforms(BaseModel):
    __root__: List[SigningPlatform]


class ListSigningJobsResponse(BaseModel):
    jobs: Optional[SigningJobs] = None
    nextToken: Optional[NextToken] = None


class ListSigningPlatformsResponse(BaseModel):
    platforms: Optional[SigningPlatforms] = None
    nextToken: Optional[String] = None

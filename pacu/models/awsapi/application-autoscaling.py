# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:04+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class DeleteScalingPolicyResponse(BaseModel):
    pass


class ValidationException(BaseModel):
    __root__: Any


class ObjectNotFoundException(ValidationException):
    pass


class ConcurrentUpdateException(ValidationException):
    pass


class InternalServiceException(ValidationException):
    pass


class DeleteScheduledActionResponse(DeleteScalingPolicyResponse):
    pass


class DeregisterScalableTargetResponse(DeleteScalingPolicyResponse):
    pass


class InvalidNextTokenException(ValidationException):
    pass


class FailedResourceAccessException(ValidationException):
    pass


class LimitExceededException(ValidationException):
    pass


class PutScheduledActionResponse(DeleteScalingPolicyResponse):
    pass


class RegisterScalableTargetResponse(DeleteScalingPolicyResponse):
    pass


class AdjustmentType(Enum):
    ChangeInCapacity = 'ChangeInCapacity'
    PercentChangeInCapacity = 'PercentChangeInCapacity'
    ExactCapacity = 'ExactCapacity'


class ResourceId9(BaseModel):
    __root__: str


class Alarm(BaseModel):
    """
    Represents a CloudWatch alarm associated with a scaling policy.
    """

    AlarmName: ResourceId9
    AlarmARN: ResourceId9


class Alarms(BaseModel):
    __root__: List[Alarm]


class Cooldown(BaseModel):
    __root__: int


class MetricName(ResourceId9):
    pass


class MetricNamespace(ResourceId9):
    pass


class MetricStatistic(Enum):
    Average = 'Average'
    Minimum = 'Minimum'
    Maximum = 'Maximum'
    SampleCount = 'SampleCount'
    Sum = 'Sum'


class MetricUnit(ResourceId9):
    pass


class ResourceIdMaxLen1600(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1)]


class ServiceNamespace(Enum):
    ecs = 'ecs'
    elasticmapreduce = 'elasticmapreduce'
    ec2 = 'ec2'
    appstream = 'appstream'
    dynamodb = 'dynamodb'
    rds = 'rds'
    sagemaker = 'sagemaker'
    custom_resource = 'custom-resource'
    comprehend = 'comprehend'
    lambda_ = 'lambda'
    cassandra = 'cassandra'
    kafka = 'kafka'
    elasticache = 'elasticache'


class ScalableDimension(Enum):
    ecs_service_DesiredCount = 'ecs:service:DesiredCount'
    ec2_spot_fleet_request_TargetCapacity = 'ec2:spot-fleet-request:TargetCapacity'
    elasticmapreduce_instancegroup_InstanceCount = (
        'elasticmapreduce:instancegroup:InstanceCount'
    )
    appstream_fleet_DesiredCapacity = 'appstream:fleet:DesiredCapacity'
    dynamodb_table_ReadCapacityUnits = 'dynamodb:table:ReadCapacityUnits'
    dynamodb_table_WriteCapacityUnits = 'dynamodb:table:WriteCapacityUnits'
    dynamodb_index_ReadCapacityUnits = 'dynamodb:index:ReadCapacityUnits'
    dynamodb_index_WriteCapacityUnits = 'dynamodb:index:WriteCapacityUnits'
    rds_cluster_ReadReplicaCount = 'rds:cluster:ReadReplicaCount'
    sagemaker_variant_DesiredInstanceCount = 'sagemaker:variant:DesiredInstanceCount'
    custom_resource_ResourceType_Property = 'custom-resource:ResourceType:Property'
    comprehend_document_classifier_endpoint_DesiredInferenceUnits = (
        'comprehend:document-classifier-endpoint:DesiredInferenceUnits'
    )
    comprehend_entity_recognizer_endpoint_DesiredInferenceUnits = (
        'comprehend:entity-recognizer-endpoint:DesiredInferenceUnits'
    )
    lambda_function_ProvisionedConcurrency = 'lambda:function:ProvisionedConcurrency'
    cassandra_table_ReadCapacityUnits = 'cassandra:table:ReadCapacityUnits'
    cassandra_table_WriteCapacityUnits = 'cassandra:table:WriteCapacityUnits'
    kafka_broker_storage_VolumeSize = 'kafka:broker-storage:VolumeSize'
    elasticache_replication_group_NodeGroups = (
        'elasticache:replication-group:NodeGroups'
    )
    elasticache_replication_group_Replicas = 'elasticache:replication-group:Replicas'


class ResourceIdsMaxLen1600(BaseModel):
    __root__: Annotated[List[ResourceIdMaxLen1600], Field(max_items=50)]


class MaxResults(Cooldown):
    pass


class XmlString(ResourceId9):
    pass


class DisableScaleIn(BaseModel):
    __root__: bool


class MetricAggregationType(Enum):
    Average = 'Average'
    Minimum = 'Minimum'
    Maximum = 'Maximum'


class MetricDimensionName(ResourceId9):
    pass


class MetricDimensionValue(ResourceId9):
    pass


class MetricDimension(BaseModel):
    """
    Describes the dimension names and values associated with a metric.
    """

    Name: MetricDimensionName
    Value: MetricDimensionValue


class MetricScale(BaseModel):
    __root__: float


class MetricType(Enum):
    DynamoDBReadCapacityUtilization = 'DynamoDBReadCapacityUtilization'
    DynamoDBWriteCapacityUtilization = 'DynamoDBWriteCapacityUtilization'
    ALBRequestCountPerTarget = 'ALBRequestCountPerTarget'
    RDSReaderAverageCPUUtilization = 'RDSReaderAverageCPUUtilization'
    RDSReaderAverageDatabaseConnections = 'RDSReaderAverageDatabaseConnections'
    EC2SpotFleetRequestAverageCPUUtilization = (
        'EC2SpotFleetRequestAverageCPUUtilization'
    )
    EC2SpotFleetRequestAverageNetworkIn = 'EC2SpotFleetRequestAverageNetworkIn'
    EC2SpotFleetRequestAverageNetworkOut = 'EC2SpotFleetRequestAverageNetworkOut'
    SageMakerVariantInvocationsPerInstance = 'SageMakerVariantInvocationsPerInstance'
    ECSServiceAverageCPUUtilization = 'ECSServiceAverageCPUUtilization'
    ECSServiceAverageMemoryUtilization = 'ECSServiceAverageMemoryUtilization'
    AppStreamAverageCapacityUtilization = 'AppStreamAverageCapacityUtilization'
    ComprehendInferenceUtilization = 'ComprehendInferenceUtilization'
    LambdaProvisionedConcurrencyUtilization = 'LambdaProvisionedConcurrencyUtilization'
    CassandraReadCapacityUtilization = 'CassandraReadCapacityUtilization'
    CassandraWriteCapacityUtilization = 'CassandraWriteCapacityUtilization'
    KafkaBrokerStorageUtilization = 'KafkaBrokerStorageUtilization'
    ElastiCachePrimaryEngineCPUUtilization = 'ElastiCachePrimaryEngineCPUUtilization'
    ElastiCacheReplicaEngineCPUUtilization = 'ElastiCacheReplicaEngineCPUUtilization'
    ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage = (
        'ElastiCacheDatabaseMemoryUsageCountedForEvictPercentage'
    )


class MinAdjustmentMagnitude(Cooldown):
    pass


class PolicyName(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='\\p{Print}+')]


class PolicyType(Enum):
    StepScaling = 'StepScaling'
    TargetTrackingScaling = 'TargetTrackingScaling'


class ResourceLabel(BaseModel):
    __root__: Annotated[str, Field(max_length=1023, min_length=1)]


class PredefinedMetricSpecification(BaseModel):
    """
    <p>Represents a predefined metric for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>Only the Amazon Web Services that you're using send metrics to Amazon CloudWatch. To determine whether a desired metric already exists by looking up its namespace and dimension using the CloudWatch metrics dashboard in the console, follow the procedure in <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/monitoring-cloudwatch.html">Building dashboards with CloudWatch</a> in the <i>Application Auto Scaling User Guide</i>.</p>
    """

    PredefinedMetricType: MetricType
    ResourceLabel: Optional[ResourceLabel] = None


class ScheduledActionName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='(?!((^[ ]+.*)|(.*([\\u0000-\\u001f]|[\\u007f-\\u009f]|[:/|])+.*)|(.*[ ]+$))).+',
        ),
    ]


class TimestampType(BaseModel):
    __root__: datetime


class ResourceCapacity(Cooldown):
    pass


class ScalingActivityStatusCode(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Successful = 'Successful'
    Overridden = 'Overridden'
    Unfulfilled = 'Unfulfilled'
    Failed = 'Failed'


class ScalingAdjustment(Cooldown):
    pass


class ScalingSuspended(DisableScaleIn):
    pass


class StepAdjustment(BaseModel):
    """
    <p>Represents a step adjustment for a <a href="https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepScalingPolicyConfiguration.html">StepScalingPolicyConfiguration</a>. Describes an adjustment based on the difference between the value of the aggregated CloudWatch metric and the breach threshold that you've defined for the alarm. </p> <p>For the following examples, suppose that you have an alarm with a breach threshold of 50:</p> <ul> <li> <p>To trigger the adjustment when the metric is greater than or equal to 50 and less than 60, specify a lower bound of 0 and an upper bound of 10.</p> </li> <li> <p>To trigger the adjustment when the metric is greater than 40 and less than or equal to 50, specify a lower bound of -10 and an upper bound of 0.</p> </li> </ul> <p>There are a few rules for the step adjustments for your step policy:</p> <ul> <li> <p>The ranges of your step adjustments can't overlap or have a gap.</p> </li> <li> <p>At most one step adjustment can have a null lower bound. If one step adjustment has a negative lower bound, then there must be a step adjustment with a null lower bound.</p> </li> <li> <p>At most one step adjustment can have a null upper bound. If one step adjustment has a positive upper bound, then there must be a step adjustment with a null upper bound.</p> </li> <li> <p>The upper and lower bound can't be null in the same step adjustment.</p> </li> </ul>
    """

    MetricIntervalLowerBound: Optional[MetricScale] = None
    MetricIntervalUpperBound: Optional[MetricScale] = None
    ScalingAdjustment: ScalingAdjustment


class StepAdjustments(BaseModel):
    __root__: List[StepAdjustment]


class DeleteScalingPolicyRequest(BaseModel):
    PolicyName: ResourceIdMaxLen1600
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension


class DeleteScheduledActionRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    ScheduledActionName: ResourceIdMaxLen1600
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension


class DeregisterScalableTargetRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension


class DescribeScalableTargetsRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    ResourceIds: Optional[ResourceIdsMaxLen1600] = None
    ScalableDimension: Optional[ScalableDimension] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[XmlString] = None


class DescribeScalingActivitiesRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    ResourceId: Optional[ResourceIdMaxLen1600] = None
    ScalableDimension: Optional[ScalableDimension] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[XmlString] = None


class DescribeScalingPoliciesRequest(BaseModel):
    PolicyNames: Optional[ResourceIdsMaxLen1600] = None
    ServiceNamespace: ServiceNamespace
    ResourceId: Optional[ResourceIdMaxLen1600] = None
    ScalableDimension: Optional[ScalableDimension] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[XmlString] = None


class DescribeScheduledActionsRequest(BaseModel):
    ScheduledActionNames: Optional[ResourceIdsMaxLen1600] = None
    ServiceNamespace: ServiceNamespace
    ResourceId: Optional[ResourceIdMaxLen1600] = None
    ScalableDimension: Optional[ScalableDimension] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[XmlString] = None


class PutScalingPolicyResponse(BaseModel):
    PolicyARN: ResourceIdMaxLen1600
    Alarms: Optional[Alarms] = None


class MetricDimensions(BaseModel):
    __root__: List[MetricDimension]


class CustomizedMetricSpecification(BaseModel):
    """
    <p>Represents a CloudWatch metric of your choosing for a target tracking scaling policy to use with Application Auto Scaling.</p> <p>For information about the available metrics for a service, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html">Amazon Web Services Services That Publish CloudWatch Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> <p>To create your customized metric specification:</p> <ul> <li> <p>Add values for each required parameter from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li> <li> <p>Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases, and increase when capacity decreases. </p> </li> </ul> <p>For more information about CloudWatch, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon CloudWatch Concepts</a>. </p>
    """

    MetricName: MetricName
    Namespace: MetricNamespace
    Dimensions: Optional[MetricDimensions] = None
    Statistic: MetricStatistic
    Unit: Optional[MetricUnit] = None


class StepScalingPolicyConfiguration(BaseModel):
    """
    Represents a step scaling policy configuration to use with Application Auto Scaling.
    """

    AdjustmentType: Optional[AdjustmentType] = None
    StepAdjustments: Optional[StepAdjustments] = None
    MinAdjustmentMagnitude: Optional[MinAdjustmentMagnitude] = None
    Cooldown: Optional[Cooldown] = None
    MetricAggregationType: Optional[MetricAggregationType] = None


class TargetTrackingScalingPolicyConfiguration(BaseModel):
    """
    Represents a target tracking scaling policy configuration to use with Application Auto Scaling.
    """

    TargetValue: MetricScale
    PredefinedMetricSpecification: Optional[PredefinedMetricSpecification] = None
    CustomizedMetricSpecification: Optional[CustomizedMetricSpecification] = None
    ScaleOutCooldown: Optional[Cooldown] = None
    ScaleInCooldown: Optional[Cooldown] = None
    DisableScaleIn: Optional[DisableScaleIn] = None


class ScalableTargetAction(BaseModel):
    """
    Represents the minimum and maximum capacity for a scheduled action.
    """

    MinCapacity: Optional[ResourceCapacity] = None
    MaxCapacity: Optional[ResourceCapacity] = None


class SuspendedState(BaseModel):
    """
    Specifies whether the scaling activities for a scalable target are in a suspended state.
    """

    DynamicScalingInSuspended: Optional[ScalingSuspended] = None
    DynamicScalingOutSuspended: Optional[ScalingSuspended] = None
    ScheduledScalingSuspended: Optional[ScalingSuspended] = None


class ScalableTarget(BaseModel):
    """
    Represents a scalable target.
    """

    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    MinCapacity: ResourceCapacity
    MaxCapacity: ResourceCapacity
    RoleARN: ResourceIdMaxLen1600
    CreationTime: TimestampType
    SuspendedState: Optional[SuspendedState] = None


class ScalingActivity(BaseModel):
    """
    Represents a scaling activity.
    """

    ActivityId: ResourceId9
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    Description: XmlString
    Cause: XmlString
    StartTime: TimestampType
    EndTime: Optional[TimestampType] = None
    StatusCode: ScalingActivityStatusCode
    StatusMessage: Optional[XmlString] = None
    Details: Optional[XmlString] = None


class ScalingPolicy(BaseModel):
    """
    <p>Represents a scaling policy to use with Application Auto Scaling.</p> <p>For more information about configuring scaling policies for a specific service, see <a href="https://docs.aws.amazon.com/autoscaling/application/userguide/getting-started.html">Getting started with Application Auto Scaling</a> in the <i>Application Auto Scaling User Guide</i>.</p>
    """

    PolicyARN: ResourceIdMaxLen1600
    PolicyName: PolicyName
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    PolicyType: PolicyType
    StepScalingPolicyConfiguration: Optional[StepScalingPolicyConfiguration] = None
    TargetTrackingScalingPolicyConfiguration: Optional[
        TargetTrackingScalingPolicyConfiguration
    ] = None
    Alarms: Optional[Alarms] = None
    CreationTime: TimestampType


class ScheduledAction(BaseModel):
    """
    Represents a scheduled action.
    """

    ScheduledActionName: ScheduledActionName
    ScheduledActionARN: ResourceIdMaxLen1600
    ServiceNamespace: ServiceNamespace
    Schedule: ResourceIdMaxLen1600
    Timezone: Optional[ResourceIdMaxLen1600] = None
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: Optional[ScalableDimension] = None
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    ScalableTargetAction: Optional[ScalableTargetAction] = None
    CreationTime: TimestampType


class PutScalingPolicyRequest(BaseModel):
    PolicyName: PolicyName
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    PolicyType: Optional[PolicyType] = None
    StepScalingPolicyConfiguration: Optional[StepScalingPolicyConfiguration] = None
    TargetTrackingScalingPolicyConfiguration: Optional[
        TargetTrackingScalingPolicyConfiguration
    ] = None


class PutScheduledActionRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    Schedule: Optional[ResourceIdMaxLen1600] = None
    Timezone: Optional[ResourceIdMaxLen1600] = None
    ScheduledActionName: ScheduledActionName
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    StartTime: Optional[TimestampType] = None
    EndTime: Optional[TimestampType] = None
    ScalableTargetAction: Optional[ScalableTargetAction] = None


class RegisterScalableTargetRequest(BaseModel):
    ServiceNamespace: ServiceNamespace
    ResourceId: ResourceIdMaxLen1600
    ScalableDimension: ScalableDimension
    MinCapacity: Optional[ResourceCapacity] = None
    MaxCapacity: Optional[ResourceCapacity] = None
    RoleARN: Optional[ResourceIdMaxLen1600] = None
    SuspendedState: Optional[SuspendedState] = None


class ScalableTargets(BaseModel):
    __root__: List[ScalableTarget]


class ScalingActivities(BaseModel):
    __root__: List[ScalingActivity]


class ScalingPolicies(BaseModel):
    __root__: List[ScalingPolicy]


class ScheduledActions(BaseModel):
    __root__: List[ScheduledAction]


class DescribeScalableTargetsResponse(BaseModel):
    ScalableTargets: Optional[ScalableTargets] = None
    NextToken: Optional[XmlString] = None


class DescribeScalingActivitiesResponse(BaseModel):
    ScalingActivities: Optional[ScalingActivities] = None
    NextToken: Optional[XmlString] = None


class DescribeScalingPoliciesResponse(BaseModel):
    ScalingPolicies: Optional[ScalingPolicies] = None
    NextToken: Optional[XmlString] = None


class DescribeScheduledActionsResponse(BaseModel):
    ScheduledActions: Optional[ScheduledActions] = None
    NextToken: Optional[XmlString] = None

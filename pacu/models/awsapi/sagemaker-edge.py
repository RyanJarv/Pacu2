# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:57:47+00:00

from __future__ import annotations

from datetime import datetime
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class InternalServiceException(BaseModel):
    __root__: Any


class CacheTTLSeconds(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class DeviceFleetName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=63, min_length=1, regex='^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$')
    ]


class DeviceName(DeviceFleetName):
    pass


class DeviceRegistration(CacheTTLSeconds):
    pass


class Dimension(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=1000, min_length=1, regex='^[a-zA-Z0-9](-*[a-zA-Z0-9\\/])*$'),
    ]


class Metric(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=4, regex='^[a-zA-Z0-9](-*[a-zA-Z0-9])*$')
    ]


class Value(BaseModel):
    __root__: float


class Timestamp(BaseModel):
    __root__: datetime


class GetDeviceRegistrationRequest(BaseModel):
    DeviceName: DeviceName
    DeviceFleetName: DeviceFleetName


class ModelName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=4, regex='^[a-zA-Z0-9](-*[a-zA-Z0-9])*$')
    ]


class Version(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9\\ \\_\\.]+')
    ]


class GetDeviceRegistrationResult(BaseModel):
    DeviceRegistration: Optional[DeviceRegistration] = None
    CacheTTL: Optional[CacheTTLSeconds] = None


class EdgeMetric(BaseModel):
    """
    Information required for edge device metrics.
    """

    Dimension: Optional[Dimension] = None
    MetricName: Optional[Metric] = None
    Value: Optional[Value] = None
    Timestamp: Optional[Timestamp] = None


class EdgeMetrics(BaseModel):
    __root__: List[EdgeMetric]


class Model(BaseModel):
    """
    Information about a model deployed on an edge device that is registered with SageMaker Edge Manager.
    """

    ModelName: Optional[ModelName] = None
    ModelVersion: Optional[Version] = None
    LatestSampleTime: Optional[Timestamp] = None
    LatestInference: Optional[Timestamp] = None
    ModelMetrics: Optional[EdgeMetrics] = None


class Models(BaseModel):
    __root__: List[Model]


class SendHeartbeatRequest(BaseModel):
    AgentMetrics: Optional[EdgeMetrics] = None
    Models: Optional[Models] = None
    AgentVersion: Version
    DeviceName: DeviceName
    DeviceFleetName: DeviceFleetName

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:57:52+00:00

from __future__ import annotations

from typing import Annotated, List, Optional

from pydantic import BaseModel


class String(BaseModel):
    __root__: str


class Boolean(BaseModel):
    __root__: bool


class ReplaceableAttribute(BaseModel):
    Name: String
    Value: String
    Replace: Optional[Boolean] = None


class Attribute(BaseModel):
    Name: String
    AlternateNameEncoding: Optional[String] = None
    Value: String
    AlternateValueEncoding: Optional[String] = None


class Float(BaseModel):
    __root__: float


class AttributeList(BaseModel):
    __root__: List[Attribute]


class AttributeNameList(BaseModel):
    __root__: List[String]


class CreateDomainRequest(BaseModel):
    DomainName: String


class UpdateCondition(BaseModel):
    """
    Specifies the conditions under which data should be updated. If an update condition is specified for a request, the data will only be updated if the condition is satisfied. For example, if an attribute with a specific name and value exists, or if a specific attribute doesn't exist.
    """

    Name: Optional[String] = None
    Value: Optional[String] = None
    Exists: Optional[Boolean] = None


class DeleteDomainRequest(BaseModel):
    DomainName: String


class DomainMetadataRequest(BaseModel):
    DomainName: String


class Integer(BaseModel):
    __root__: int


class Long(Integer):
    pass


class DomainNameList(AttributeNameList):
    pass


class GetAttributesRequest(BaseModel):
    DomainName: String
    ItemName: String
    AttributeNames: Optional[AttributeNameList] = None
    ConsistentRead: Optional[Boolean] = None


class Item(BaseModel):
    Name: String
    AlternateNameEncoding: Optional[String] = None
    Attributes: AttributeList


class ItemList(BaseModel):
    __root__: List[Item]


class ListDomainsRequest(BaseModel):
    MaxNumberOfDomains: Optional[Integer] = None
    NextToken: Optional[String] = None


class ReplaceableAttributeList(BaseModel):
    __root__: List[ReplaceableAttribute]


class PutAttributesRequest(BaseModel):
    DomainName: String
    ItemName: String
    Attributes: ReplaceableAttributeList
    Expected: Optional[UpdateCondition] = None


class SelectRequest(BaseModel):
    SelectExpression: String
    NextToken: Optional[String] = None
    ConsistentRead: Optional[Boolean] = None


class ReplaceableItem(BaseModel):
    Name: String
    Attributes: ReplaceableAttributeList


class DuplicateItemName(BaseModel):
    """
    The item name was specified more than once.
    """

    BoxUsage: Optional[Float] = None


class InvalidParameterValue(DuplicateItemName):
    """
    The value for a parameter is invalid.
    """

    pass


class MissingParameter(DuplicateItemName):
    """
    The request must contain the specified missing parameter.
    """

    pass


class NoSuchDomain(DuplicateItemName):
    """
    The specified domain does not exist.
    """

    pass


class NumberItemAttributesExceeded(DuplicateItemName):
    """
    Too many attributes in this item.
    """

    pass


class NumberDomainAttributesExceeded(DuplicateItemName):
    """
    Too many attributes in this domain.
    """

    pass


class NumberDomainBytesExceeded(DuplicateItemName):
    """
    Too many bytes in this domain.
    """

    pass


class NumberSubmittedItemsExceeded(DuplicateItemName):
    """
    Too many items exist in a single call.
    """

    pass


class NumberSubmittedAttributesExceeded(DuplicateItemName):
    """
    Too many attributes exist in a single call.
    """

    pass


class NumberDomainsExceeded(DuplicateItemName):
    """
    Too many domains exist per this account.
    """

    pass


class DeletableAttribute(BaseModel):
    Name: String
    Value: Optional[String] = None


class AttributeDoesNotExist(DuplicateItemName):
    """
    The specified attribute does not exist.
    """

    pass


class DomainMetadataResult(BaseModel):
    ItemCount: Optional[Integer] = None
    ItemNamesSizeBytes: Optional[Long] = None
    AttributeNameCount: Optional[Integer] = None
    AttributeNamesSizeBytes: Optional[Long] = None
    AttributeValueCount: Optional[Integer] = None
    AttributeValuesSizeBytes: Optional[Long] = None
    Timestamp: Optional[Integer] = None


class GetAttributesResult(BaseModel):
    Attributes: Optional[AttributeList] = None


class ListDomainsResult(BaseModel):
    DomainNames: Optional[DomainNameList] = None
    NextToken: Optional[String] = None


class InvalidNextToken(DuplicateItemName):
    """
    The specified NextToken is not valid.
    """

    pass


class SelectResult(BaseModel):
    Items: Optional[ItemList] = None
    NextToken: Optional[String] = None


class InvalidNumberPredicates(DuplicateItemName):
    """
    Too many predicates exist in the query expression.
    """

    pass


class InvalidNumberValueTests(DuplicateItemName):
    """
    Too many predicates exist in the query expression.
    """

    pass


class InvalidQueryExpression(DuplicateItemName):
    """
    The specified query expression syntax is not valid.
    """

    pass


class RequestTimeout(DuplicateItemName):
    """
    A timeout occurred when attempting to query the specified domain with specified query expression.
    """

    pass


class TooManyRequestedAttributes(DuplicateItemName):
    """
    Too many attributes requested.
    """

    pass


class ReplaceableItemList(BaseModel):
    __root__: List[ReplaceableItem]


class BatchPutAttributesRequest(BaseModel):
    DomainName: String
    Items: ReplaceableItemList


class DeletableAttributeList(BaseModel):
    __root__: List[DeletableAttribute]


class DeleteAttributesRequest(BaseModel):
    DomainName: String
    ItemName: String
    Attributes: Optional[DeletableAttributeList] = None
    Expected: Optional[UpdateCondition] = None


class DeletableItem(BaseModel):
    Name: String
    Attributes: Optional[DeletableAttributeList] = None


class DeletableItemList(BaseModel):
    __root__: List[DeletableItem]


class BatchDeleteAttributesRequest(BaseModel):
    DomainName: String
    Items: DeletableItemList

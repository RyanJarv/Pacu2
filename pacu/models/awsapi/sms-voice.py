# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:29+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class CreateConfigurationSetResponse(BaseModel):
    """
    An empty object that indicates that the configuration set was successfully created.
    """

    pass


class TooManyRequestsException(BaseModel):
    __root__: Any


class BadRequestException(TooManyRequestsException):
    pass


class LimitExceededException(TooManyRequestsException):
    pass


class InternalServiceErrorException(TooManyRequestsException):
    pass


class AlreadyExistsException(TooManyRequestsException):
    pass


class CreateConfigurationSetEventDestinationResponse(CreateConfigurationSetResponse):
    """
    An empty object that indicates that the event destination was created successfully.
    """

    pass


class Boolean(BaseModel):
    __root__: bool


class NotFoundException(TooManyRequestsException):
    pass


class DeleteConfigurationSetResponse(CreateConfigurationSetResponse):
    """
    An empty object that indicates that the configuration set was deleted successfully.
    """

    pass


class DeleteConfigurationSetEventDestinationResponse(CreateConfigurationSetResponse):
    """
    An empty object that indicates that the event destination was deleted successfully.
    """

    pass


class UpdateConfigurationSetEventDestinationResponse(CreateConfigurationSetResponse):
    """
    An empty object that indicates that the event destination was updated successfully.
    """

    pass


class NonEmptyString(BaseModel):
    __root__: str


class String(NonEmptyString):
    pass


class WordCharactersWithDelimiters(NonEmptyString):
    pass


class ConfigurationSets(BaseModel):
    """
    An array that contains all of the configuration sets in your Amazon Pinpoint account in the current AWS Region.
    """

    __root__: Annotated[
        List[WordCharactersWithDelimiters],
        Field(
            description='An array that contains all of the configuration sets in your Amazon Pinpoint account in the current AWS Region.'
        ),
    ]


class _String(NonEmptyString):
    pass


class CreateConfigurationSetRequest(BaseModel):
    """
    A request to create a new configuration set.
    """

    ConfigurationSetName: Optional[WordCharactersWithDelimiters] = None


class DeleteConfigurationSetEventDestinationRequest(BaseModel):
    pass


class DeleteConfigurationSetRequest(BaseModel):
    pass


class EventType(Enum):
    """
    The types of events that are sent to the event destination.
    """

    INITIATED_CALL = 'INITIATED_CALL'
    RINGING = 'RINGING'
    ANSWERED = 'ANSWERED'
    COMPLETED_CALL = 'COMPLETED_CALL'
    BUSY = 'BUSY'
    FAILED = 'FAILED'
    NO_ANSWER = 'NO_ANSWER'


class GetConfigurationSetEventDestinationsRequest(BaseModel):
    pass


class ListConfigurationSetsRequest(BaseModel):
    pass


class NextTokenString(NonEmptyString):
    pass


class CloudWatchLogsDestination(BaseModel):
    """
    An object that contains information about an event destination that sends data to Amazon CloudWatch Logs.
    """

    IamRoleArn: Optional[String] = None
    LogGroupArn: Optional[String] = None


class KinesisFirehoseDestination(BaseModel):
    """
    An object that contains information about an event destination that sends data to Amazon Kinesis Data Firehose.
    """

    DeliveryStreamArn: Optional[String] = None
    IamRoleArn: Optional[String] = None


class EventTypes(BaseModel):
    """
    An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.
    """

    __root__: Annotated[
        List[EventType],
        Field(
            description='An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.'
        ),
    ]


class SnsDestination(BaseModel):
    """
    An object that contains information about an event destination that sends data to Amazon SNS.
    """

    TopicArn: Optional[String] = None


class ListConfigurationSetsResponse(BaseModel):
    """
    An object that contains information about the configuration sets for your account in the current region.
    """

    ConfigurationSets: Optional[ConfigurationSets] = None
    NextToken: Optional[NextTokenString] = None


class SendVoiceMessageResponse(BaseModel):
    """
    An object that that contains the Message ID of a Voice message that was sent successfully.
    """

    MessageId: Optional[String] = None


class CallInstructionsMessageType(BaseModel):
    """
    An object that defines a message that contains text formatted using Amazon Pinpoint Voice Instructions markup.
    """

    Text: Optional[NonEmptyString] = None


class PlainTextMessageType(BaseModel):
    """
    An object that defines a message that contains unformatted text.
    """

    LanguageCode: Optional[String] = None
    Text: Optional[NonEmptyString] = None
    VoiceId: Optional[String] = None


class SSMLMessageType(PlainTextMessageType):
    """
    An object that defines a message that contains SSML-formatted text.
    """

    pass


class EventDestinationDefinition(BaseModel):
    """
    An object that defines a single event destination.
    """

    CloudWatchLogsDestination: Optional[CloudWatchLogsDestination] = None
    Enabled: Optional[Boolean] = None
    KinesisFirehoseDestination: Optional[KinesisFirehoseDestination] = None
    MatchingEventTypes: Optional[EventTypes] = None
    SnsDestination: Optional[SnsDestination] = None


class CreateConfigurationSetEventDestinationRequest(BaseModel):
    """
    Create a new event destination in a configuration set.
    """

    EventDestination: Optional[EventDestinationDefinition] = None
    EventDestinationName: Optional[NonEmptyString] = None


class EventDestination(BaseModel):
    """
    An object that defines an event destination.
    """

    CloudWatchLogsDestination: Optional[CloudWatchLogsDestination] = None
    Enabled: Optional[Boolean] = None
    KinesisFirehoseDestination: Optional[KinesisFirehoseDestination] = None
    MatchingEventTypes: Optional[EventTypes] = None
    Name: Optional[String] = None
    SnsDestination: Optional[SnsDestination] = None


class EventDestinations(BaseModel):
    """
    An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.
    """

    __root__: Annotated[
        List[EventDestination],
        Field(
            description='An array of EventDestination objects. Each EventDestination object includes ARNs and other information that define an event destination.'
        ),
    ]


class VoiceMessageContent(BaseModel):
    """
    An object that contains a voice message and information about the recipient that you want to send it to.
    """

    CallInstructionsMessage: Optional[CallInstructionsMessageType] = None
    PlainTextMessage: Optional[PlainTextMessageType] = None
    SSMLMessage: Optional[SSMLMessageType] = None


class SendVoiceMessageRequest(BaseModel):
    """
    SendVoiceMessageRequest
    """

    CallerId: Optional[String] = None
    ConfigurationSetName: Optional[WordCharactersWithDelimiters] = None
    Content: Optional[VoiceMessageContent] = None
    DestinationPhoneNumber: Optional[NonEmptyString] = None
    OriginationPhoneNumber: Optional[NonEmptyString] = None


class UpdateConfigurationSetEventDestinationRequest(BaseModel):
    """
    UpdateConfigurationSetEventDestinationRequest
    """

    EventDestination: Optional[EventDestinationDefinition] = None


class GetConfigurationSetEventDestinationsResponse(BaseModel):
    """
    An object that contains information about an event destination.
    """

    EventDestinations: Optional[EventDestinations] = None

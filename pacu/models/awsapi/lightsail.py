# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:49+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ServiceException(BaseModel):
    __root__: Any


class InvalidInputException(ServiceException):
    pass


class NotFoundException(ServiceException):
    pass


class OperationFailureException(ServiceException):
    pass


class AccessDeniedException(ServiceException):
    pass


class AccountSetupInProgressException(ServiceException):
    pass


class UnauthenticatedException(ServiceException):
    pass


class CreateContainerServiceRegistryLoginRequest(BaseModel):
    pass


class DeleteContainerImageResult(BaseModel):
    pass


class DeleteContainerServiceResult(DeleteContainerImageResult):
    pass


class DownloadDefaultKeyPairRequest(BaseModel):
    pass


class GetContainerAPIMetadataRequest(BaseModel):
    pass


class GetContainerServicePowersRequest(BaseModel):
    pass


class GetDistributionBundlesRequest(BaseModel):
    pass


class IsVpcPeeredRequest(BaseModel):
    pass


class PeerVpcRequest(BaseModel):
    pass


class UnpeerVpcRequest(BaseModel):
    pass


class AccessDirection(Enum):
    inbound = 'inbound'
    outbound = 'outbound'


class IAMAccessKeyId(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=20, min_length=20, regex='^[A-Z0-9]{20}$')
    ]


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(regex='.*\\S.*')]


class StatusType(Enum):
    Active = 'Active'
    Inactive = 'Inactive'


class IsoDate(BaseModel):
    __root__: datetime


class String(BaseModel):
    __root__: str


class ResourceReceivingAccess(BaseModel):
    """
    Describes an Amazon Lightsail instance that has access to a Lightsail bucket.
    """

    name: Optional[NonEmptyString] = None
    resourceType: Optional[NonEmptyString] = None


class AccessReceiverList(BaseModel):
    __root__: List[ResourceReceivingAccess]


class AccessType(Enum):
    public = 'public'
    private = 'private'


class Boolean(BaseModel):
    __root__: bool


class AccessRules(BaseModel):
    """
    <p>Describes the anonymous access permissions for an Amazon Lightsail bucket and its objects.</p> <p>For more information about bucket access permissions, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-understanding-bucket-permissions">Understanding bucket permissions in Amazon Lightsail</a> in the </p> <p> <i>Amazon Lightsail Developer Guide</i>.</p>
    """

    getObject: Optional[AccessType] = None
    allowPublicOverrides: Optional[Boolean] = None


class TimeOfDay(BaseModel):
    __root__: Annotated[str, Field(regex='^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$')]


class AddOn(BaseModel):
    """
    Describes an add-on that is enabled for an Amazon Lightsail resource.
    """

    name: Optional[String] = None
    status: Optional[String] = None
    snapshotTimeOfDay: Optional[TimeOfDay] = None
    nextSnapshotTimeOfDay: Optional[TimeOfDay] = None


class AddOnList(BaseModel):
    __root__: List[AddOn]


class AddOnType(Enum):
    AutoSnapshot = 'AutoSnapshot'


class AutoSnapshotAddOnRequest(BaseModel):
    """
    <p>Describes a request to enable or modify the automatic snapshot add-on for an Amazon Lightsail instance or disk.</p> <p>When you modify the automatic snapshot time for a resource, it is typically effective immediately except under the following conditions:</p> <ul> <li> <p>If an automatic snapshot has been created for the current day, and you change the snapshot time to a later time of day, then the new snapshot time will be effective the following day. This ensures that two snapshots are not created for the current day.</p> </li> <li> <p>If an automatic snapshot has not yet been created for the current day, and you change the snapshot time to an earlier time of day, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day.</p> </li> <li> <p>If an automatic snapshot has not yet been created for the current day, and you change the snapshot time to a time that is within 30 minutes from your current time, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day, because 30 minutes is required between your current time and the new snapshot time that you specify.</p> </li> <li> <p>If an automatic snapshot is scheduled to be created within 30 minutes from your current time and you change the snapshot time, then the new snapshot time will be effective the following day and a snapshot is automatically created at the previously set time for the current day. This ensures that a snapshot is created for the current day, because 30 minutes is required between your current time and the new snapshot time that you specify.</p> </li> </ul>
    """

    snapshotTimeOfDay: Optional[TimeOfDay] = None


class AddOnRequest(BaseModel):
    """
    <p>Describes a request to enable, modify, or disable an add-on for an Amazon Lightsail resource.</p> <note> <p>An additional cost may be associated with enabling add-ons. For more information, see the <a href="https://aws.amazon.com/lightsail/pricing/">Lightsail pricing page</a>.</p> </note>
    """

    addOnType: AddOnType
    autoSnapshotAddOnRequest: Optional[AutoSnapshotAddOnRequest] = None


class AddOnRequestList(BaseModel):
    __root__: List[AddOnRequest]


class ResourceName(BaseModel):
    __root__: Annotated[str, Field(regex='\\w[\\w\\-]*\\w')]


class ResourceType(Enum):
    ContainerService = 'ContainerService'
    Instance = 'Instance'
    StaticIp = 'StaticIp'
    KeyPair = 'KeyPair'
    InstanceSnapshot = 'InstanceSnapshot'
    Domain = 'Domain'
    PeeredVpc = 'PeeredVpc'
    LoadBalancer = 'LoadBalancer'
    LoadBalancerTlsCertificate = 'LoadBalancerTlsCertificate'
    Disk = 'Disk'
    DiskSnapshot = 'DiskSnapshot'
    RelationalDatabase = 'RelationalDatabase'
    RelationalDatabaseSnapshot = 'RelationalDatabaseSnapshot'
    ExportSnapshotRecord = 'ExportSnapshotRecord'
    CloudFormationStackRecord = 'CloudFormationStackRecord'
    Alarm = 'Alarm'
    ContactMethod = 'ContactMethod'
    Distribution = 'Distribution'
    Certificate = 'Certificate'
    Bucket = 'Bucket'


class ComparisonOperator(Enum):
    GreaterThanOrEqualToThreshold = 'GreaterThanOrEqualToThreshold'
    GreaterThanThreshold = 'GreaterThanThreshold'
    LessThanThreshold = 'LessThanThreshold'
    LessThanOrEqualToThreshold = 'LessThanOrEqualToThreshold'


class Integer(BaseModel):
    __root__: int


class MetricPeriod(BaseModel):
    __root__: Annotated[int, Field(ge=60.0, le=86400.0)]


class Double(BaseModel):
    __root__: float


class TreatMissingData(Enum):
    breaching = 'breaching'
    notBreaching = 'notBreaching'
    ignore = 'ignore'
    missing = 'missing'


class MetricStatistic(Enum):
    Minimum = 'Minimum'
    Maximum = 'Maximum'
    Sum = 'Sum'
    Average = 'Average'
    SampleCount = 'SampleCount'


class MetricName(Enum):
    CPUUtilization = 'CPUUtilization'
    NetworkIn = 'NetworkIn'
    NetworkOut = 'NetworkOut'
    StatusCheckFailed = 'StatusCheckFailed'
    StatusCheckFailed_Instance = 'StatusCheckFailed_Instance'
    StatusCheckFailed_System = 'StatusCheckFailed_System'
    ClientTLSNegotiationErrorCount = 'ClientTLSNegotiationErrorCount'
    HealthyHostCount = 'HealthyHostCount'
    UnhealthyHostCount = 'UnhealthyHostCount'
    HTTPCode_LB_4XX_Count = 'HTTPCode_LB_4XX_Count'
    HTTPCode_LB_5XX_Count = 'HTTPCode_LB_5XX_Count'
    HTTPCode_Instance_2XX_Count = 'HTTPCode_Instance_2XX_Count'
    HTTPCode_Instance_3XX_Count = 'HTTPCode_Instance_3XX_Count'
    HTTPCode_Instance_4XX_Count = 'HTTPCode_Instance_4XX_Count'
    HTTPCode_Instance_5XX_Count = 'HTTPCode_Instance_5XX_Count'
    InstanceResponseTime = 'InstanceResponseTime'
    RejectedConnectionCount = 'RejectedConnectionCount'
    RequestCount = 'RequestCount'
    DatabaseConnections = 'DatabaseConnections'
    DiskQueueDepth = 'DiskQueueDepth'
    FreeStorageSpace = 'FreeStorageSpace'
    NetworkReceiveThroughput = 'NetworkReceiveThroughput'
    NetworkTransmitThroughput = 'NetworkTransmitThroughput'
    BurstCapacityTime = 'BurstCapacityTime'
    BurstCapacityPercentage = 'BurstCapacityPercentage'


class AlarmState(Enum):
    OK = 'OK'
    ALARM = 'ALARM'
    INSUFFICIENT_DATA = 'INSUFFICIENT_DATA'


class MetricUnit(Enum):
    Seconds = 'Seconds'
    Microseconds = 'Microseconds'
    Milliseconds = 'Milliseconds'
    Bytes = 'Bytes'
    Kilobytes = 'Kilobytes'
    Megabytes = 'Megabytes'
    Gigabytes = 'Gigabytes'
    Terabytes = 'Terabytes'
    Bits = 'Bits'
    Kilobits = 'Kilobits'
    Megabits = 'Megabits'
    Gigabits = 'Gigabits'
    Terabits = 'Terabits'
    Percent = 'Percent'
    Count = 'Count'
    Bytes_Second = 'Bytes/Second'
    Kilobytes_Second = 'Kilobytes/Second'
    Megabytes_Second = 'Megabytes/Second'
    Gigabytes_Second = 'Gigabytes/Second'
    Terabytes_Second = 'Terabytes/Second'
    Bits_Second = 'Bits/Second'
    Kilobits_Second = 'Kilobits/Second'
    Megabits_Second = 'Megabits/Second'
    Gigabits_Second = 'Gigabits/Second'
    Terabits_Second = 'Terabits/Second'
    Count_Second = 'Count/Second'
    None_ = 'None'


class NotificationTriggerList(BaseModel):
    __root__: List[AlarmState]


class ResourceNameList(BaseModel):
    __root__: List[ResourceName]


class AttachedDisk(BaseModel):
    """
    Describes a block storage disk that is attached to an instance, and is included in an automatic snapshot.
    """

    path: Optional[String] = None
    sizeInGb: Optional[Integer] = None


class AttachedDiskList(BaseModel):
    __root__: List[AttachedDisk]


class AttachedDiskMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AutoSnapshotDate(BaseModel):
    __root__: Annotated[str, Field(regex='^[0-9]{4}-[0-9]{2}-[0-9]{2}$')]


class AutoSnapshotStatus(Enum):
    Success = 'Success'
    Failed = 'Failed'
    InProgress = 'InProgress'
    NotFound = 'NotFound'


class AutoSnapshotDetails(BaseModel):
    """
    Describes an automatic snapshot.
    """

    date: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    status: Optional[AutoSnapshotStatus] = None
    fromAttachedDisks: Optional[AttachedDiskList] = None


class AutoSnapshotDetailsList(BaseModel):
    __root__: List[AutoSnapshotDetails]


class AvailabilityZone7(BaseModel):
    """
    Describes an Availability Zone.
    """

    zoneName: Optional[NonEmptyString] = None
    state: Optional[NonEmptyString] = None


class AvailabilityZoneList(BaseModel):
    __root__: List[AvailabilityZone7]


class Base64(String):
    pass


class BehaviorEnum(Enum):
    dont_cache = 'dont-cache'
    cache = 'cache'


class BlueprintType(Enum):
    os = 'os'
    app = 'app'


class InstancePlatform(Enum):
    LINUX_UNIX = 'LINUX_UNIX'
    WINDOWS = 'WINDOWS'


class Blueprint(BaseModel):
    """
    Describes a blueprint (a virtual private server image).
    """

    blueprintId: Optional[NonEmptyString] = None
    name: Optional[ResourceName] = None
    group: Optional[NonEmptyString] = None
    type: Optional[BlueprintType] = None
    description: Optional[String] = None
    isActive: Optional[Boolean] = None
    minPower: Optional[Integer] = None
    version: Optional[String] = None
    versionCode: Optional[String] = None
    productUrl: Optional[String] = None
    licenseUrl: Optional[String] = None
    platform: Optional[InstancePlatform] = None


class BlueprintList(BaseModel):
    __root__: List[Blueprint]


class BucketName(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=54, min_length=3, regex='^[a-z0-9][a-z0-9-]{1,52}[a-z0-9]$'),
    ]


class PartnerIdList(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=10)]


class BucketState(BaseModel):
    """
    Describes the state of an Amazon Lightsail bucket.
    """

    code: Optional[NonEmptyString] = None
    message: Optional[String] = None


class Float(Double):
    pass


class BucketBundle(BaseModel):
    """
    <p>Describes the specifications of a bundle that can be applied to an Amazon Lightsail bucket.</p> <p>A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a bucket.</p>
    """

    bundleId: Optional[NonEmptyString] = None
    name: Optional[NonEmptyString] = None
    price: Optional[Float] = None
    storagePerMonthInGb: Optional[Integer] = None
    transferPerMonthInGb: Optional[Integer] = None
    isActive: Optional[Boolean] = None


class BucketBundleList(BaseModel):
    __root__: List[BucketBundle]


class BucketMetricName(Enum):
    BucketSizeBytes = 'BucketSizeBytes'
    NumberOfObjects = 'NumberOfObjects'


class InstancePlatformList(BaseModel):
    __root__: List[InstancePlatform]


class Bundle(BaseModel):
    """
    Describes a bundle, which is a set of specs describing your virtual private server (or <i>instance</i>).
    """

    price: Optional[Float] = None
    cpuCount: Optional[Integer] = None
    diskSizeInGb: Optional[Integer] = None
    bundleId: Optional[NonEmptyString] = None
    instanceType: Optional[String] = None
    isActive: Optional[Boolean] = None
    name: Optional[String] = None
    power: Optional[Integer] = None
    ramSizeInGb: Optional[Float] = None
    transferPerMonthInGb: Optional[Integer] = None
    supportedPlatforms: Optional[InstancePlatformList] = None


class BundleList(BaseModel):
    __root__: List[Bundle]


class CacheBehavior(BaseModel):
    """
    Describes the default cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
    """

    behavior: Optional[BehaviorEnum] = None


class CacheBehaviorPerPath(BaseModel):
    """
    <p>Describes the per-path cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>A per-path cache behavior is used to override, or add an exception to, the default cache behavior of a distribution. For example, if the <code>cacheBehavior</code> is set to <code>cache</code>, then a per-path cache behavior can be used to specify a directory, file, or file type that your distribution will cache. Alternately, if the distribution's <code>cacheBehavior</code> is <code>dont-cache</code>, then a per-path cache behavior can be used to specify a directory, file, or file type that your distribution will not cache.</p> <p>if the cacheBehavior's behavior is set to 'cache', then</p>
    """

    path: Optional[String] = None
    behavior: Optional[BehaviorEnum] = None


class CacheBehaviorList(BaseModel):
    __root__: List[CacheBehaviorPerPath]


class Long(Integer):
    pass


class CertificateName(String):
    pass


class DomainName(String):
    pass


class CertificateStatus(Enum):
    PENDING_VALIDATION = 'PENDING_VALIDATION'
    ISSUED = 'ISSUED'
    INACTIVE = 'INACTIVE'
    EXPIRED = 'EXPIRED'
    VALIDATION_TIMED_OUT = 'VALIDATION_TIMED_OUT'
    REVOKED = 'REVOKED'
    FAILED = 'FAILED'


class SerialNumber(String):
    pass


class SubjectAlternativeNameList(BaseModel):
    __root__: List[DomainName]


class RequestFailureReason(String):
    pass


class InUseResourceCount(Integer):
    pass


class KeyAlgorithm(String):
    pass


class IssuerCA(String):
    pass


class EligibleToRenew(String):
    pass


class RevocationReason(String):
    pass


class CertificateStatusList(BaseModel):
    __root__: List[CertificateStatus]


class RecordState(Enum):
    Started = 'Started'
    Succeeded = 'Succeeded'
    Failed = 'Failed'


class DestinationInfo(BaseModel):
    """
    Describes the destination of a record.
    """

    id: Optional[NonEmptyString] = None
    service: Optional[NonEmptyString] = None


class CloudFormationStackRecordSourceType(Enum):
    ExportSnapshotRecord = 'ExportSnapshotRecord'


class CloudFormationStackRecordSourceInfo(BaseModel):
    """
    Describes the source of a CloudFormation stack record (i.e., the export snapshot record).
    """

    resourceType: Optional[CloudFormationStackRecordSourceType] = None
    name: Optional[NonEmptyString] = None
    arn: Optional[NonEmptyString] = None


class ContactMethodStatus(Enum):
    PendingVerification = 'PendingVerification'
    Valid = 'Valid'
    Invalid = 'Invalid'


class ContactProtocol(Enum):
    Email = 'Email'
    SMS = 'SMS'


class ContactMethodVerificationProtocol(Enum):
    Email = 'Email'


class StringList(BaseModel):
    __root__: List[String]


class Environment(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class PortMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Container(BaseModel):
    """
    Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
    """

    image: Optional[String] = None
    command: Optional[StringList] = None
    environment: Optional[Environment] = None
    ports: Optional[PortMap] = None


class ContainerImage(BaseModel):
    """
    Describes a container image that is registered to an Amazon Lightsail container service.
    """

    image: Optional[String] = None
    digest: Optional[String] = None
    createdAt: Optional[IsoDate] = None


class ContainerImageList(BaseModel):
    __root__: List[ContainerImage]


class ContainerLabel(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=53,
            min_length=1,
            regex='^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$',
        ),
    ]


class ContainerMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ContainerName1(ContainerLabel):
    pass


class ContainerServiceName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63,
            min_length=1,
            regex='^[a-z0-9]{1,2}|[a-z0-9][a-z0-9-]+[a-z0-9]$',
        ),
    ]


class ContainerServicePowerName(Enum):
    nano = 'nano'
    micro = 'micro'
    small = 'small'
    medium = 'medium'
    large = 'large'
    xlarge = 'xlarge'


class ContainerServiceState(Enum):
    PENDING = 'PENDING'
    READY = 'READY'
    RUNNING = 'RUNNING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DISABLED = 'DISABLED'
    DEPLOYING = 'DEPLOYING'


class ContainerServiceScale(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=20.0)]


class ContainerServicePublicDomains(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ContainerServiceDeploymentState(Enum):
    ACTIVATING = 'ACTIVATING'
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    FAILED = 'FAILED'


class ContainerServiceHealthCheckConfig(BaseModel):
    """
    Describes the health check configuration of an Amazon Lightsail container service.
    """

    healthyThreshold: Optional[Integer] = None
    unhealthyThreshold: Optional[Integer] = None
    timeoutSeconds: Optional[Integer] = None
    intervalSeconds: Optional[Integer] = None
    path: Optional[String] = None
    successCodes: Optional[String] = None


class ContainerServiceLogEvent(BaseModel):
    """
    Describes the log events of a container of an Amazon Lightsail container service.
    """

    createdAt: Optional[IsoDate] = None
    message: Optional[String] = None


class ContainerServiceLogEventList(BaseModel):
    __root__: List[ContainerServiceLogEvent]


class ContainerServiceMetadataEntry(Environment):
    pass


class ContainerServiceMetadataEntryList(BaseModel):
    __root__: List[ContainerServiceMetadataEntry]


class ContainerServiceMetricName(Enum):
    CPUUtilization = 'CPUUtilization'
    MemoryUtilization = 'MemoryUtilization'


class ContainerServicePower(BaseModel):
    """
    <p>Describes the powers that can be specified for an Amazon Lightsail container service.</p> <p>The power specifies the amount of RAM, the number of vCPUs, and the base price of the container service.</p>
    """

    powerId: Optional[String] = None
    price: Optional[Float] = None
    cpuCount: Optional[Float] = None
    ramSizeInGb: Optional[Float] = None
    name: Optional[String] = None
    isActive: Optional[Boolean] = None


class ContainerServicePowerList(BaseModel):
    __root__: List[ContainerServicePower]


class ContainerServiceProtocol(Enum):
    HTTP = 'HTTP'
    HTTPS = 'HTTPS'
    TCP = 'TCP'
    UDP = 'UDP'


class ContainerServicePublicDomainsList(StringList):
    pass


class ContainerServiceRegistryLogin(BaseModel):
    """
    Describes the login information for the container image registry of an Amazon Lightsail account.
    """

    username: Optional[String] = None
    password: Optional[String] = None
    expiresAt: Optional[IsoDate] = None
    registry: Optional[String] = None


class ContainerServiceStateDetailCode(Enum):
    CREATING_SYSTEM_RESOURCES = 'CREATING_SYSTEM_RESOURCES'
    CREATING_NETWORK_INFRASTRUCTURE = 'CREATING_NETWORK_INFRASTRUCTURE'
    PROVISIONING_CERTIFICATE = 'PROVISIONING_CERTIFICATE'
    PROVISIONING_SERVICE = 'PROVISIONING_SERVICE'
    CREATING_DEPLOYMENT = 'CREATING_DEPLOYMENT'
    EVALUATING_HEALTH_CHECK = 'EVALUATING_HEALTH_CHECK'
    ACTIVATING_DEPLOYMENT = 'ACTIVATING_DEPLOYMENT'
    CERTIFICATE_LIMIT_EXCEEDED = 'CERTIFICATE_LIMIT_EXCEEDED'
    UNKNOWN_ERROR = 'UNKNOWN_ERROR'


class ForwardValues(Enum):
    none = 'none'
    allow_list = 'allow-list'
    all = 'all'


class RegionName(Enum):
    us_east_1 = 'us-east-1'
    us_east_2 = 'us-east-2'
    us_west_1 = 'us-west-1'
    us_west_2 = 'us-west-2'
    eu_west_1 = 'eu-west-1'
    eu_west_2 = 'eu-west-2'
    eu_west_3 = 'eu-west-3'
    eu_central_1 = 'eu-central-1'
    ca_central_1 = 'ca-central-1'
    ap_south_1 = 'ap-south-1'
    ap_southeast_1 = 'ap-southeast-1'
    ap_southeast_2 = 'ap-southeast-2'
    ap_northeast_1 = 'ap-northeast-1'
    ap_northeast_2 = 'ap-northeast-2'
    eu_north_1 = 'eu-north-1'


class StringMax256(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class IpAddressType(Enum):
    dualstack = 'dualstack'
    ipv4 = 'ipv4'


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=-1.0, le=65535.0)]


class DomainNameList(SubjectAlternativeNameList):
    pass


class SensitiveString(BaseModel):
    __root__: SecretStr


class DiskState(Enum):
    pending = 'pending'
    error = 'error'
    available = 'available'
    in_use = 'in-use'
    unknown = 'unknown'


class DiskInfo(BaseModel):
    """
    Describes a disk.
    """

    name: Optional[String] = None
    path: Optional[NonEmptyString] = None
    sizeInGb: Optional[Integer] = None
    isSystemDisk: Optional[Boolean] = None


class DiskInfoList(BaseModel):
    __root__: List[DiskInfo]


class DiskMap(BaseModel):
    """
    Describes a block storage disk mapping.
    """

    originalDiskPath: Optional[NonEmptyString] = None
    newDiskName: Optional[ResourceName] = None


class DiskSnapshotState(Enum):
    pending = 'pending'
    completed = 'completed'
    error = 'error'
    unknown = 'unknown'


class DiskSnapshotInfo(BaseModel):
    """
    Describes a disk snapshot.
    """

    sizeInGb: Optional[Integer] = None


class DistributionBundle(BaseModel):
    """
    Describes the specifications of a distribution bundle.
    """

    bundleId: Optional[String] = None
    name: Optional[String] = None
    price: Optional[Float] = None
    transferPerMonthInGb: Optional[Integer] = None
    isActive: Optional[Boolean] = None


class DistributionBundleList(BaseModel):
    __root__: List[DistributionBundle]


class DistributionMetricName(Enum):
    Requests = 'Requests'
    BytesDownloaded = 'BytesDownloaded'
    BytesUploaded = 'BytesUploaded'
    TotalErrorRate = 'TotalErrorRate'
    Http4xxErrorRate = 'Http4xxErrorRate'
    Http5xxErrorRate = 'Http5xxErrorRate'


class DomainEntryType(String):
    pass


class DomainEntryOptions(Environment):
    pass


class DomainEntryOptionsKeys(String):
    pass


class ResourceRecord(BaseModel):
    """
    Describes the domain name system (DNS) records to add to your domain's DNS to validate it for an Amazon Lightsail certificate.
    """

    name: Optional[String] = None
    type: Optional[String] = None
    value: Optional[String] = None


class DomainValidationRecord(BaseModel):
    """
    Describes the domain validation records of an Amazon Lightsail SSL/TLS certificate.
    """

    domainName: Optional[DomainName] = None
    resourceRecord: Optional[ResourceRecord] = None


class ExportSnapshotRecordSourceType(Enum):
    InstanceSnapshot = 'InstanceSnapshot'
    DiskSnapshot = 'DiskSnapshot'


class InstanceSnapshotInfo(BaseModel):
    """
    Describes an instance snapshot.
    """

    fromBundleId: Optional[NonEmptyString] = None
    fromBlueprintId: Optional[NonEmptyString] = None
    fromDiskInfo: Optional[DiskInfoList] = None


class MetricStatisticList(BaseModel):
    __root__: List[MetricStatistic]


class IncludeCertificateDetails(Boolean):
    pass


class Timestamp(IsoDate):
    pass


class InstanceAccessProtocol(Enum):
    ssh = 'ssh'
    rdp = 'rdp'


class InstanceMetricName(Enum):
    CPUUtilization = 'CPUUtilization'
    NetworkIn = 'NetworkIn'
    NetworkOut = 'NetworkOut'
    StatusCheckFailed = 'StatusCheckFailed'
    StatusCheckFailed_Instance = 'StatusCheckFailed_Instance'
    StatusCheckFailed_System = 'StatusCheckFailed_System'
    BurstCapacityTime = 'BurstCapacityTime'
    BurstCapacityPercentage = 'BurstCapacityPercentage'


class InstanceState(BaseModel):
    """
    Describes the virtual private server (or <i>instance</i>) status.
    """

    code: Optional[Integer] = None
    name: Optional[String] = None


class LoadBalancerMetricName(Enum):
    ClientTLSNegotiationErrorCount = 'ClientTLSNegotiationErrorCount'
    HealthyHostCount = 'HealthyHostCount'
    UnhealthyHostCount = 'UnhealthyHostCount'
    HTTPCode_LB_4XX_Count = 'HTTPCode_LB_4XX_Count'
    HTTPCode_LB_5XX_Count = 'HTTPCode_LB_5XX_Count'
    HTTPCode_Instance_2XX_Count = 'HTTPCode_Instance_2XX_Count'
    HTTPCode_Instance_3XX_Count = 'HTTPCode_Instance_3XX_Count'
    HTTPCode_Instance_4XX_Count = 'HTTPCode_Instance_4XX_Count'
    HTTPCode_Instance_5XX_Count = 'HTTPCode_Instance_5XX_Count'
    InstanceResponseTime = 'InstanceResponseTime'
    RejectedConnectionCount = 'RejectedConnectionCount'
    RequestCount = 'RequestCount'


class RelationalDatabasePasswordVersion(Enum):
    CURRENT = 'CURRENT'
    PREVIOUS = 'PREVIOUS'
    PENDING = 'PENDING'


class RelationalDatabaseMetricName(Enum):
    CPUUtilization = 'CPUUtilization'
    DatabaseConnections = 'DatabaseConnections'
    DiskQueueDepth = 'DiskQueueDepth'
    FreeStorageSpace = 'FreeStorageSpace'
    NetworkReceiveThroughput = 'NetworkReceiveThroughput'
    NetworkTransmitThroughput = 'NetworkTransmitThroughput'


class HeaderEnum(Enum):
    Accept = 'Accept'
    Accept_Charset = 'Accept-Charset'
    Accept_Datetime = 'Accept-Datetime'
    Accept_Encoding = 'Accept-Encoding'
    Accept_Language = 'Accept-Language'
    Authorization = 'Authorization'
    CloudFront_Forwarded_Proto = 'CloudFront-Forwarded-Proto'
    CloudFront_Is_Desktop_Viewer = 'CloudFront-Is-Desktop-Viewer'
    CloudFront_Is_Mobile_Viewer = 'CloudFront-Is-Mobile-Viewer'
    CloudFront_Is_SmartTV_Viewer = 'CloudFront-Is-SmartTV-Viewer'
    CloudFront_Is_Tablet_Viewer = 'CloudFront-Is-Tablet-Viewer'
    CloudFront_Viewer_Country = 'CloudFront-Viewer-Country'
    Host = 'Host'
    Origin = 'Origin'
    Referer = 'Referer'


class HeaderForwardList(BaseModel):
    __root__: List[HeaderEnum]


class HostKeyAttributes(BaseModel):
    """
    Describes the public SSH host keys or the RDP certificate.
    """

    algorithm: Optional[String] = None
    publicKey: Optional[String] = None
    witnessedAt: Optional[IsoDate] = None
    fingerprintSHA1: Optional[String] = None
    fingerprintSHA256: Optional[String] = None
    notValidBefore: Optional[IsoDate] = None
    notValidAfter: Optional[IsoDate] = None


class HostKeysList(BaseModel):
    __root__: List[HostKeyAttributes]


class OriginProtocolPolicyEnum(Enum):
    http_only = 'http-only'
    https_only = 'https-only'


class IpAddress(BaseModel):
    __root__: Annotated[str, Field(regex='([0-9]{1,3}\\.){3}[0-9]{1,3}')]


class PasswordData(BaseModel):
    """
    The password data for the Windows Server-based instance, including the ciphertext and the key pair name.
    """

    ciphertext: Optional[String] = None
    keyPairName: Optional[ResourceName] = None


class PortInfoSourceType(Enum):
    DEFAULT = 'DEFAULT'
    INSTANCE = 'INSTANCE'
    NONE = 'NONE'
    CLOSED = 'CLOSED'


class InstanceEntry(BaseModel):
    """
    Describes the Amazon Elastic Compute Cloud instance and related resources to be created using the <code>create cloud formation stack</code> operation.
    """

    sourceName: ResourceName
    instanceType: NonEmptyString
    portInfoSource: PortInfoSourceType
    userData: Optional[String] = None
    availabilityZone: String


class InstanceHealthReason(Enum):
    Lb_RegistrationInProgress = 'Lb.RegistrationInProgress'
    Lb_InitialHealthChecking = 'Lb.InitialHealthChecking'
    Lb_InternalError = 'Lb.InternalError'
    Instance_ResponseCodeMismatch = 'Instance.ResponseCodeMismatch'
    Instance_Timeout = 'Instance.Timeout'
    Instance_FailedHealthChecks = 'Instance.FailedHealthChecks'
    Instance_NotRegistered = 'Instance.NotRegistered'
    Instance_NotInUse = 'Instance.NotInUse'
    Instance_DeregistrationInProgress = 'Instance.DeregistrationInProgress'
    Instance_InvalidState = 'Instance.InvalidState'
    Instance_IpUnusable = 'Instance.IpUnusable'


class InstanceHealthState(Enum):
    initial = 'initial'
    healthy = 'healthy'
    unhealthy = 'unhealthy'
    unused = 'unused'
    draining = 'draining'
    unavailable = 'unavailable'


class InstanceHealthSummary1(BaseModel):
    """
    Describes information about the health of the instance.
    """

    instanceName: Optional[ResourceName] = None
    instanceHealth: Optional[InstanceHealthState] = None
    instanceHealthReason: Optional[InstanceHealthReason] = None


class InstanceHealthSummaryList(BaseModel):
    __root__: List[InstanceHealthSummary1]


class MonthlyTransfer(BaseModel):
    """
    Describes the monthly data transfer in and out of your virtual private server (or <i>instance</i>).
    """

    gbPerMonthAllocated: Optional[Integer] = None


class NetworkProtocol(Enum):
    tcp = 'tcp'
    all = 'all'
    udp = 'udp'
    icmp = 'icmp'


class PortAccessType(Enum):
    Public = 'Public'
    Private = 'Private'


class InstancePortInfo(BaseModel):
    """
    Describes information about ports for an Amazon Lightsail instance.
    """

    fromPort: Optional[Port] = None
    toPort: Optional[Port] = None
    protocol: Optional[NetworkProtocol] = None
    accessFrom: Optional[String] = None
    accessType: Optional[PortAccessType] = None
    commonName: Optional[String] = None
    accessDirection: Optional[AccessDirection] = None
    cidrs: Optional[StringList] = None
    ipv6Cidrs: Optional[StringList] = None
    cidrListAliases: Optional[StringList] = None


class PortState(Enum):
    open = 'open'
    closed = 'closed'


class InstancePortState(BaseModel):
    """
    Describes open ports on an instance, the IP addresses allowed to connect to the instance through the ports, and the protocol.
    """

    fromPort: Optional[Port] = None
    toPort: Optional[Port] = None
    protocol: Optional[NetworkProtocol] = None
    state: Optional[PortState] = None
    cidrs: Optional[StringList] = None
    ipv6Cidrs: Optional[StringList] = None
    cidrListAliases: Optional[StringList] = None


class InstanceSnapshotState(Enum):
    pending = 'pending'
    error = 'error'
    available = 'available'


class Ipv6Address(BaseModel):
    __root__: Annotated[str, Field(regex='([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}')]


class Origin(BaseModel):
    """
    <p>Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>An origin can be a Lightsail instance or load balancer. A distribution pulls content from an origin, caches it, and serves it to viewers via a worldwide network of edge servers.</p>
    """

    name: Optional[ResourceName] = None
    resourceType: Optional[ResourceType] = None
    regionName: Optional[RegionName] = None
    protocolPolicy: Optional[OriginProtocolPolicyEnum] = None


class LoadBalancerState(Enum):
    active = 'active'
    provisioning = 'provisioning'
    active_impaired = 'active_impaired'
    failed = 'failed'
    unknown = 'unknown'


class LoadBalancerProtocol(Enum):
    HTTP_HTTPS = 'HTTP_HTTPS'
    HTTP = 'HTTP'


class PortList(BaseModel):
    __root__: List[Port]


class LoadBalancerConfigurationOptions(Environment):
    pass


class LoadBalancerAttributeName(Enum):
    HealthCheckPath = 'HealthCheckPath'
    SessionStickinessEnabled = 'SessionStickinessEnabled'
    SessionStickiness_LB_CookieDurationSeconds = (
        'SessionStickiness_LB_CookieDurationSeconds'
    )


class LoadBalancerTlsCertificateStatus(Enum):
    PENDING_VALIDATION = 'PENDING_VALIDATION'
    ISSUED = 'ISSUED'
    INACTIVE = 'INACTIVE'
    EXPIRED = 'EXPIRED'
    VALIDATION_TIMED_OUT = 'VALIDATION_TIMED_OUT'
    REVOKED = 'REVOKED'
    FAILED = 'FAILED'
    UNKNOWN = 'UNKNOWN'


class LoadBalancerTlsCertificateFailureReason(Enum):
    NO_AVAILABLE_CONTACTS = 'NO_AVAILABLE_CONTACTS'
    ADDITIONAL_VERIFICATION_REQUIRED = 'ADDITIONAL_VERIFICATION_REQUIRED'
    DOMAIN_NOT_ALLOWED = 'DOMAIN_NOT_ALLOWED'
    INVALID_PUBLIC_DOMAIN = 'INVALID_PUBLIC_DOMAIN'
    OTHER = 'OTHER'


class LoadBalancerTlsCertificateRevocationReason(Enum):
    UNSPECIFIED = 'UNSPECIFIED'
    KEY_COMPROMISE = 'KEY_COMPROMISE'
    CA_COMPROMISE = 'CA_COMPROMISE'
    AFFILIATION_CHANGED = 'AFFILIATION_CHANGED'
    SUPERCEDED = 'SUPERCEDED'
    CESSATION_OF_OPERATION = 'CESSATION_OF_OPERATION'
    CERTIFICATE_HOLD = 'CERTIFICATE_HOLD'
    REMOVE_FROM_CRL = 'REMOVE_FROM_CRL'
    PRIVILEGE_WITHDRAWN = 'PRIVILEGE_WITHDRAWN'
    A_A_COMPROMISE = 'A_A_COMPROMISE'


class LoadBalancerTlsCertificateDomainStatus(Enum):
    PENDING_VALIDATION = 'PENDING_VALIDATION'
    FAILED = 'FAILED'
    SUCCESS = 'SUCCESS'


class LoadBalancerTlsCertificateDomainValidationOption(BaseModel):
    """
    Contains information about the domain names on an SSL/TLS certificate that you will use to validate domain ownership.
    """

    domainName: Optional[DomainName] = None
    validationStatus: Optional[LoadBalancerTlsCertificateDomainStatus] = None


class LoadBalancerTlsCertificateDomainValidationOptionList(BaseModel):
    __root__: List[LoadBalancerTlsCertificateDomainValidationOption]


class LoadBalancerTlsCertificateDomainValidationRecord(BaseModel):
    """
    Describes the validation record of each domain name in the SSL/TLS certificate.
    """

    name: Optional[NonEmptyString] = None
    type: Optional[NonEmptyString] = None
    value: Optional[NonEmptyString] = None
    validationStatus: Optional[LoadBalancerTlsCertificateDomainStatus] = None
    domainName: Optional[DomainName] = None


class LoadBalancerTlsCertificateRenewalStatus(Enum):
    PENDING_AUTO_RENEWAL = 'PENDING_AUTO_RENEWAL'
    PENDING_VALIDATION = 'PENDING_VALIDATION'
    SUCCESS = 'SUCCESS'
    FAILED = 'FAILED'


class LoadBalancerTlsCertificateSummary(BaseModel):
    """
    Provides a summary of SSL/TLS certificate metadata.
    """

    name: Optional[ResourceName] = None
    isAttached: Optional[Boolean] = None


class LogEvent(ContainerServiceLogEvent):
    """
    Describes a database log event.
    """

    pass


class MetricDatapoint(BaseModel):
    """
    Describes the metric data point.
    """

    average: Optional[Double] = None
    maximum: Optional[Double] = None
    minimum: Optional[Double] = None
    sampleCount: Optional[Double] = None
    sum: Optional[Double] = None
    timestamp: Optional[Timestamp] = None
    unit: Optional[MetricUnit] = None


class ResourceArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^arn:(aws[^:]*):([a-zA-Z0-9-]+):([a-z0-9-]+):([0-9]+):([a-zA-Z]+)/([a-zA-Z0-9-]+)$'
        ),
    ]


class OperationType(Enum):
    DeleteKnownHostKeys = 'DeleteKnownHostKeys'
    DeleteInstance = 'DeleteInstance'
    CreateInstance = 'CreateInstance'
    StopInstance = 'StopInstance'
    StartInstance = 'StartInstance'
    RebootInstance = 'RebootInstance'
    OpenInstancePublicPorts = 'OpenInstancePublicPorts'
    PutInstancePublicPorts = 'PutInstancePublicPorts'
    CloseInstancePublicPorts = 'CloseInstancePublicPorts'
    AllocateStaticIp = 'AllocateStaticIp'
    ReleaseStaticIp = 'ReleaseStaticIp'
    AttachStaticIp = 'AttachStaticIp'
    DetachStaticIp = 'DetachStaticIp'
    UpdateDomainEntry = 'UpdateDomainEntry'
    DeleteDomainEntry = 'DeleteDomainEntry'
    CreateDomain = 'CreateDomain'
    DeleteDomain = 'DeleteDomain'
    CreateInstanceSnapshot = 'CreateInstanceSnapshot'
    DeleteInstanceSnapshot = 'DeleteInstanceSnapshot'
    CreateInstancesFromSnapshot = 'CreateInstancesFromSnapshot'
    CreateLoadBalancer = 'CreateLoadBalancer'
    DeleteLoadBalancer = 'DeleteLoadBalancer'
    AttachInstancesToLoadBalancer = 'AttachInstancesToLoadBalancer'
    DetachInstancesFromLoadBalancer = 'DetachInstancesFromLoadBalancer'
    UpdateLoadBalancerAttribute = 'UpdateLoadBalancerAttribute'
    CreateLoadBalancerTlsCertificate = 'CreateLoadBalancerTlsCertificate'
    DeleteLoadBalancerTlsCertificate = 'DeleteLoadBalancerTlsCertificate'
    AttachLoadBalancerTlsCertificate = 'AttachLoadBalancerTlsCertificate'
    CreateDisk = 'CreateDisk'
    DeleteDisk = 'DeleteDisk'
    AttachDisk = 'AttachDisk'
    DetachDisk = 'DetachDisk'
    CreateDiskSnapshot = 'CreateDiskSnapshot'
    DeleteDiskSnapshot = 'DeleteDiskSnapshot'
    CreateDiskFromSnapshot = 'CreateDiskFromSnapshot'
    CreateRelationalDatabase = 'CreateRelationalDatabase'
    UpdateRelationalDatabase = 'UpdateRelationalDatabase'
    DeleteRelationalDatabase = 'DeleteRelationalDatabase'
    CreateRelationalDatabaseFromSnapshot = 'CreateRelationalDatabaseFromSnapshot'
    CreateRelationalDatabaseSnapshot = 'CreateRelationalDatabaseSnapshot'
    DeleteRelationalDatabaseSnapshot = 'DeleteRelationalDatabaseSnapshot'
    UpdateRelationalDatabaseParameters = 'UpdateRelationalDatabaseParameters'
    StartRelationalDatabase = 'StartRelationalDatabase'
    RebootRelationalDatabase = 'RebootRelationalDatabase'
    StopRelationalDatabase = 'StopRelationalDatabase'
    EnableAddOn = 'EnableAddOn'
    DisableAddOn = 'DisableAddOn'
    PutAlarm = 'PutAlarm'
    GetAlarms = 'GetAlarms'
    DeleteAlarm = 'DeleteAlarm'
    TestAlarm = 'TestAlarm'
    CreateContactMethod = 'CreateContactMethod'
    GetContactMethods = 'GetContactMethods'
    SendContactMethodVerification = 'SendContactMethodVerification'
    DeleteContactMethod = 'DeleteContactMethod'
    CreateDistribution = 'CreateDistribution'
    UpdateDistribution = 'UpdateDistribution'
    DeleteDistribution = 'DeleteDistribution'
    ResetDistributionCache = 'ResetDistributionCache'
    AttachCertificateToDistribution = 'AttachCertificateToDistribution'
    DetachCertificateFromDistribution = 'DetachCertificateFromDistribution'
    UpdateDistributionBundle = 'UpdateDistributionBundle'
    SetIpAddressType = 'SetIpAddressType'
    CreateCertificate = 'CreateCertificate'
    DeleteCertificate = 'DeleteCertificate'
    CreateContainerService = 'CreateContainerService'
    UpdateContainerService = 'UpdateContainerService'
    DeleteContainerService = 'DeleteContainerService'
    CreateContainerServiceDeployment = 'CreateContainerServiceDeployment'
    CreateContainerServiceRegistryLogin = 'CreateContainerServiceRegistryLogin'
    RegisterContainerImage = 'RegisterContainerImage'
    DeleteContainerImage = 'DeleteContainerImage'
    CreateBucket = 'CreateBucket'
    DeleteBucket = 'DeleteBucket'
    CreateBucketAccessKey = 'CreateBucketAccessKey'
    DeleteBucketAccessKey = 'DeleteBucketAccessKey'
    UpdateBucketBundle = 'UpdateBucketBundle'
    UpdateBucket = 'UpdateBucket'
    SetResourceAccessForBucket = 'SetResourceAccessForBucket'


class OperationStatus(Enum):
    NotStarted = 'NotStarted'
    Started = 'Started'
    Failed = 'Failed'
    Completed = 'Completed'
    Succeeded = 'Succeeded'


class PendingMaintenanceAction(BaseModel):
    """
    Describes a pending database maintenance action.
    """

    action: Optional[NonEmptyString] = None
    description: Optional[NonEmptyString] = None
    currentApplyDate: Optional[IsoDate] = None


class PendingMaintenanceActionList(BaseModel):
    __root__: List[PendingMaintenanceAction]


class PendingModifiedRelationalDatabaseValues(BaseModel):
    """
    Describes a pending database value modification.
    """

    masterUserPassword: Optional[String] = None
    engineVersion: Optional[String] = None
    backupRetentionEnabled: Optional[Boolean] = None


class Region(BaseModel):
    """
    Describes the AWS Region.
    """

    continentCode: Optional[String] = None
    description: Optional[String] = None
    displayName: Optional[String] = None
    name: Optional[RegionName] = None
    availabilityZones: Optional[AvailabilityZoneList] = None
    relationalDatabaseAvailabilityZones: Optional[AvailabilityZoneList] = None


class RelationalDatabaseHardware(BaseModel):
    """
    Describes the hardware of a database.
    """

    cpuCount: Optional[Integer] = None
    diskSizeInGb: Optional[Integer] = None
    ramSizeInGb: Optional[Float] = None


class RelationalDatabaseEndpoint(BaseModel):
    """
    Describes an endpoint for a database.
    """

    port: Optional[Integer] = None
    address: Optional[NonEmptyString] = None


class RelationalDatabaseEngine(Enum):
    mysql = 'mysql'


class RelationalDatabaseBlueprint(BaseModel):
    """
    Describes a database image, or blueprint. A blueprint describes the major engine version of a database.
    """

    blueprintId: Optional[String] = None
    engine: Optional[RelationalDatabaseEngine] = None
    engineVersion: Optional[String] = None
    engineDescription: Optional[String] = None
    engineVersionDescription: Optional[String] = None
    isEngineDefault: Optional[Boolean] = None


class RelationalDatabaseBundle(BaseModel):
    """
    Describes a database bundle. A bundle describes the performance specifications of the database.
    """

    bundleId: Optional[String] = None
    name: Optional[String] = None
    price: Optional[Float] = None
    ramSizeInGb: Optional[Float] = None
    diskSizeInGb: Optional[Integer] = None
    transferPerMonthInGb: Optional[Integer] = None
    cpuCount: Optional[Integer] = None
    isEncrypted: Optional[Boolean] = None
    isActive: Optional[Boolean] = None


class RelationalDatabaseEvent(BaseModel):
    """
    Describes an event for a database.
    """

    resource: Optional[ResourceName] = None
    createdAt: Optional[IsoDate] = None
    message: Optional[String] = None
    eventCategories: Optional[StringList] = None


class RelationalDatabaseParameter(BaseModel):
    """
    Describes the parameters of a database.
    """

    allowedValues: Optional[String] = None
    applyMethod: Optional[String] = None
    applyType: Optional[String] = None
    dataType: Optional[String] = None
    description: Optional[String] = None
    isModifiable: Optional[Boolean] = None
    parameterName: Optional[String] = None
    parameterValue: Optional[String] = None


class RenewalStatus(Enum):
    PendingAutoRenewal = 'PendingAutoRenewal'
    PendingValidation = 'PendingValidation'
    Success = 'Success'
    Failed = 'Failed'


class RenewalStatusReason(String):
    pass


class ResourceBucketAccess(Enum):
    allow = 'allow'
    deny = 'deny'


class TagKey(String):
    pass


class TagValue(String):
    pass


class Tag(BaseModel):
    """
    <p>Describes a tag key and optional value assigned to an Amazon Lightsail resource.</p> <p>For more information about tags in Lightsail, see the <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags">Amazon Lightsail Developer Guide</a>.</p>
    """

    key: Optional[TagKey] = None
    value: Optional[TagValue] = None


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class AllocateStaticIpRequest(BaseModel):
    staticIpName: ResourceName


class AttachCertificateToDistributionRequest(BaseModel):
    distributionName: ResourceName
    certificateName: ResourceName


class AttachDiskRequest(BaseModel):
    diskName: ResourceName
    instanceName: ResourceName
    diskPath: NonEmptyString


class AttachInstancesToLoadBalancerRequest(BaseModel):
    loadBalancerName: ResourceName
    instanceNames: ResourceNameList


class AttachLoadBalancerTlsCertificateRequest(BaseModel):
    loadBalancerName: ResourceName
    certificateName: ResourceName


class AttachStaticIpRequest(BaseModel):
    staticIpName: ResourceName
    instanceName: ResourceName


class CopySnapshotRequest(BaseModel):
    sourceSnapshotName: Optional[ResourceName] = None
    sourceResourceName: Optional[String] = None
    restoreDate: Optional[String] = None
    useLatestRestorableAutoSnapshot: Optional[Boolean] = None
    targetSnapshotName: ResourceName
    sourceRegion: RegionName


class CreateBucketAccessKeyRequest(BaseModel):
    bucketName: BucketName


class CreateContactMethodRequest(BaseModel):
    protocol: ContactProtocol
    contactEndpoint: StringMax256


class CreateContainerServiceRegistryLoginResult(BaseModel):
    registryLogin: Optional[ContainerServiceRegistryLogin] = None


class DeleteAlarmRequest(BaseModel):
    alarmName: ResourceName


class DeleteAutoSnapshotRequest(BaseModel):
    resourceName: ResourceName
    date: AutoSnapshotDate


class DeleteBucketRequest(BaseModel):
    bucketName: BucketName
    forceDelete: Optional[Boolean] = None


class DeleteBucketAccessKeyRequest(BaseModel):
    bucketName: BucketName
    accessKeyId: NonEmptyString


class DeleteCertificateRequest(BaseModel):
    certificateName: CertificateName


class DeleteContactMethodRequest(BaseModel):
    protocol: ContactProtocol


class DeleteContainerImageRequest(BaseModel):
    serviceName: ContainerServiceName
    image: String


class DeleteContainerServiceRequest(BaseModel):
    serviceName: ContainerServiceName


class DeleteDiskRequest(BaseModel):
    diskName: ResourceName
    forceDeleteAddOns: Optional[Boolean] = None


class DeleteDiskSnapshotRequest(BaseModel):
    diskSnapshotName: ResourceName


class DeleteDistributionRequest(BaseModel):
    distributionName: Optional[ResourceName] = None


class DeleteDomainRequest(BaseModel):
    domainName: DomainName


class DeleteInstanceRequest(BaseModel):
    instanceName: ResourceName
    forceDeleteAddOns: Optional[Boolean] = None


class DeleteInstanceSnapshotRequest(BaseModel):
    instanceSnapshotName: ResourceName


class DeleteKeyPairRequest(BaseModel):
    keyPairName: ResourceName


class DeleteKnownHostKeysRequest(BaseModel):
    instanceName: ResourceName


class DeleteLoadBalancerRequest(BaseModel):
    loadBalancerName: ResourceName


class DeleteLoadBalancerTlsCertificateRequest(BaseModel):
    loadBalancerName: ResourceName
    certificateName: ResourceName
    force: Optional[Boolean] = None


class DeleteRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName
    skipFinalSnapshot: Optional[Boolean] = None
    finalRelationalDatabaseSnapshotName: Optional[ResourceName] = None


class DeleteRelationalDatabaseSnapshotRequest(BaseModel):
    relationalDatabaseSnapshotName: ResourceName


class DetachCertificateFromDistributionRequest(BaseModel):
    distributionName: ResourceName


class DetachDiskRequest(BaseModel):
    diskName: ResourceName


class DetachInstancesFromLoadBalancerRequest(BaseModel):
    loadBalancerName: ResourceName
    instanceNames: ResourceNameList


class DetachStaticIpRequest(BaseModel):
    staticIpName: ResourceName


class DisableAddOnRequest(BaseModel):
    addOnType: AddOnType
    resourceName: ResourceName


class DownloadDefaultKeyPairResult(BaseModel):
    publicKeyBase64: Optional[Base64] = None
    privateKeyBase64: Optional[Base64] = None


class EnableAddOnRequest(BaseModel):
    resourceName: ResourceName
    addOnRequest: AddOnRequest


class ExportSnapshotRequest(BaseModel):
    sourceSnapshotName: ResourceName


class GetActiveNamesResult(BaseModel):
    activeNames: Optional[StringList] = None
    nextPageToken: Optional[String] = None


class GetActiveNamesRequest(BaseModel):
    pageToken: Optional[String] = None


class GetAlarmsRequest(BaseModel):
    alarmName: Optional[ResourceName] = None
    pageToken: Optional[String] = None
    monitoredResourceName: Optional[ResourceName] = None


class GetAutoSnapshotsResult(BaseModel):
    resourceName: Optional[ResourceName] = None
    resourceType: Optional[ResourceType] = None
    autoSnapshots: Optional[AutoSnapshotDetailsList] = None


class GetAutoSnapshotsRequest(BaseModel):
    resourceName: ResourceName


class GetBlueprintsResult(BaseModel):
    blueprints: Optional[BlueprintList] = None
    nextPageToken: Optional[String] = None


class GetBlueprintsRequest(BaseModel):
    includeInactive: Optional[Boolean] = None
    pageToken: Optional[String] = None


class GetBucketAccessKeysRequest(BaseModel):
    bucketName: BucketName


class GetBucketBundlesResult(BaseModel):
    bundles: Optional[BucketBundleList] = None


class GetBucketBundlesRequest(BaseModel):
    includeInactive: Optional[Boolean] = None


class GetBucketMetricDataRequest(BaseModel):
    bucketName: BucketName
    metricName: BucketMetricName
    startTime: IsoDate
    endTime: IsoDate
    period: MetricPeriod
    statistics: MetricStatisticList
    unit: MetricUnit


class GetBucketsRequest(BaseModel):
    bucketName: Optional[BucketName] = None
    pageToken: Optional[String] = None
    includeConnectedResources: Optional[Boolean] = None


class GetBundlesResult(BaseModel):
    bundles: Optional[BundleList] = None
    nextPageToken: Optional[String] = None


class GetBundlesRequest(BaseModel):
    includeInactive: Optional[Boolean] = None
    pageToken: Optional[String] = None


class GetCertificatesRequest(BaseModel):
    certificateStatuses: Optional[CertificateStatusList] = None
    includeCertificateDetails: Optional[IncludeCertificateDetails] = None
    certificateName: Optional[CertificateName] = None


class GetCloudFormationStackRecordsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetContainerAPIMetadataResult(BaseModel):
    metadata: Optional[ContainerServiceMetadataEntryList] = None


class GetContainerImagesResult(BaseModel):
    containerImages: Optional[ContainerImageList] = None


class GetContainerImagesRequest(BaseModel):
    serviceName: ContainerServiceName


class GetContainerLogResult(BaseModel):
    logEvents: Optional[ContainerServiceLogEventList] = None
    nextPageToken: Optional[String] = None


class GetContainerLogRequest(BaseModel):
    serviceName: ContainerServiceName
    containerName: String
    startTime: Optional[IsoDate] = None
    endTime: Optional[IsoDate] = None
    filterPattern: Optional[String] = None
    pageToken: Optional[String] = None


class GetContainerServiceDeploymentsRequest(BaseModel):
    serviceName: ContainerServiceName


class GetContainerServiceMetricDataRequest(BaseModel):
    serviceName: ContainerServiceName
    metricName: ContainerServiceMetricName
    startTime: IsoDate
    endTime: IsoDate
    period: MetricPeriod
    statistics: MetricStatisticList


class GetContainerServicePowersResult(BaseModel):
    powers: Optional[ContainerServicePowerList] = None


class GetContainerServicesRequest(BaseModel):
    serviceName: Optional[ContainerServiceName] = None


class GetDiskRequest(BaseModel):
    diskName: ResourceName


class GetDiskSnapshotRequest(BaseModel):
    diskSnapshotName: ResourceName


class GetDiskSnapshotsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetDisksRequest(BaseModel):
    pageToken: Optional[String] = None


class GetDistributionBundlesResult(BaseModel):
    bundles: Optional[DistributionBundleList] = None


class GetDistributionLatestCacheResetResult(BaseModel):
    status: Optional[String] = None
    createTime: Optional[IsoDate] = None


class GetDistributionLatestCacheResetRequest(BaseModel):
    distributionName: Optional[ResourceName] = None


class GetDistributionMetricDataRequest(BaseModel):
    distributionName: ResourceName
    metricName: DistributionMetricName
    startTime: Timestamp
    endTime: Timestamp
    period: MetricPeriod
    unit: MetricUnit
    statistics: MetricStatisticList


class GetDistributionsRequest(BaseModel):
    distributionName: Optional[ResourceName] = None
    pageToken: Optional[String] = None


class GetDomainRequest(BaseModel):
    domainName: DomainName


class GetDomainsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetExportSnapshotRecordsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetInstanceRequest(BaseModel):
    instanceName: ResourceName


class GetInstanceAccessDetailsRequest(BaseModel):
    instanceName: ResourceName
    protocol: Optional[InstanceAccessProtocol] = None


class GetInstanceMetricDataRequest(BaseModel):
    instanceName: ResourceName
    metricName: InstanceMetricName
    period: MetricPeriod
    startTime: Timestamp
    endTime: Timestamp
    unit: MetricUnit
    statistics: MetricStatisticList


class GetInstancePortStatesRequest(BaseModel):
    instanceName: ResourceName


class GetInstanceSnapshotRequest(BaseModel):
    instanceSnapshotName: ResourceName


class GetInstanceSnapshotsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetInstanceStateResult(BaseModel):
    state: Optional[InstanceState] = None


class GetInstanceStateRequest(BaseModel):
    instanceName: ResourceName


class GetInstancesRequest(BaseModel):
    pageToken: Optional[String] = None


class GetKeyPairRequest(BaseModel):
    keyPairName: ResourceName


class GetKeyPairsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetLoadBalancerRequest(BaseModel):
    loadBalancerName: ResourceName


class GetLoadBalancerMetricDataRequest(BaseModel):
    loadBalancerName: ResourceName
    metricName: LoadBalancerMetricName
    period: MetricPeriod
    startTime: Timestamp
    endTime: Timestamp
    unit: MetricUnit
    statistics: MetricStatisticList


class GetLoadBalancerTlsCertificatesRequest(BaseModel):
    loadBalancerName: ResourceName


class GetLoadBalancersRequest(BaseModel):
    pageToken: Optional[String] = None


class GetOperationRequest(BaseModel):
    operationId: NonEmptyString


class GetOperationsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetOperationsForResourceRequest(BaseModel):
    resourceName: ResourceName
    pageToken: Optional[String] = None


class GetRegionsRequest(BaseModel):
    includeAvailabilityZones: Optional[Boolean] = None
    includeRelationalDatabaseAvailabilityZones: Optional[Boolean] = None


class GetRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName


class GetRelationalDatabaseBlueprintsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetRelationalDatabaseBundlesRequest(BaseModel):
    pageToken: Optional[String] = None


class GetRelationalDatabaseEventsRequest(BaseModel):
    relationalDatabaseName: ResourceName
    durationInMinutes: Optional[Integer] = None
    pageToken: Optional[String] = None


class GetRelationalDatabaseLogEventsRequest(BaseModel):
    relationalDatabaseName: ResourceName
    logStreamName: String
    startTime: Optional[IsoDate] = None
    endTime: Optional[IsoDate] = None
    startFromHead: Optional[Boolean] = None
    pageToken: Optional[String] = None


class GetRelationalDatabaseLogStreamsResult(BaseModel):
    logStreams: Optional[StringList] = None


class GetRelationalDatabaseLogStreamsRequest(BaseModel):
    relationalDatabaseName: ResourceName


class GetRelationalDatabaseMasterUserPasswordResult(BaseModel):
    masterUserPassword: Optional[SensitiveString] = None
    createdAt: Optional[IsoDate] = None


class GetRelationalDatabaseMasterUserPasswordRequest(BaseModel):
    relationalDatabaseName: ResourceName
    passwordVersion: Optional[RelationalDatabasePasswordVersion] = None


class GetRelationalDatabaseMetricDataRequest(BaseModel):
    relationalDatabaseName: ResourceName
    metricName: RelationalDatabaseMetricName
    period: MetricPeriod
    startTime: IsoDate
    endTime: IsoDate
    unit: MetricUnit
    statistics: MetricStatisticList


class GetRelationalDatabaseParametersRequest(BaseModel):
    relationalDatabaseName: ResourceName
    pageToken: Optional[String] = None


class GetRelationalDatabaseSnapshotRequest(BaseModel):
    relationalDatabaseSnapshotName: ResourceName


class GetRelationalDatabaseSnapshotsRequest(BaseModel):
    pageToken: Optional[String] = None


class GetRelationalDatabasesRequest(BaseModel):
    pageToken: Optional[String] = None


class GetStaticIpRequest(BaseModel):
    staticIpName: ResourceName


class GetStaticIpsRequest(BaseModel):
    pageToken: Optional[String] = None


class ImportKeyPairRequest(BaseModel):
    keyPairName: ResourceName
    publicKeyBase64: Base64


class IsVpcPeeredResult(BaseModel):
    isPeered: Optional[Boolean] = None


class RebootInstanceRequest(BaseModel):
    instanceName: ResourceName


class RebootRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName


class RegisterContainerImageResult(BaseModel):
    containerImage: Optional[ContainerImage] = None


class RegisterContainerImageRequest(BaseModel):
    serviceName: ContainerServiceName
    label: ContainerLabel
    digest: String


class ReleaseStaticIpRequest(BaseModel):
    staticIpName: ResourceName


class ResetDistributionCacheRequest(BaseModel):
    distributionName: Optional[ResourceName] = None


class SendContactMethodVerificationRequest(BaseModel):
    protocol: ContactMethodVerificationProtocol


class SetIpAddressTypeRequest(BaseModel):
    resourceType: ResourceType
    resourceName: ResourceName
    ipAddressType: IpAddressType


class SetResourceAccessForBucketRequest(BaseModel):
    resourceName: ResourceName
    bucketName: BucketName
    access: ResourceBucketAccess


class StartInstanceRequest(BaseModel):
    instanceName: ResourceName


class StartRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName


class StopInstanceRequest(BaseModel):
    instanceName: ResourceName
    force: Optional[Boolean] = None


class StopRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName
    relationalDatabaseSnapshotName: Optional[ResourceName] = None


class TestAlarmRequest(BaseModel):
    alarmName: ResourceName
    state: AlarmState


class UntagResourceRequest(BaseModel):
    resourceName: ResourceName
    resourceArn: Optional[ResourceArn] = None
    tagKeys: TagKeyList


class UpdateBucketRequest(BaseModel):
    bucketName: BucketName
    accessRules: Optional[AccessRules] = None
    versioning: Optional[NonEmptyString] = None
    readonlyAccessAccounts: Optional[PartnerIdList] = None


class UpdateBucketBundleRequest(BaseModel):
    bucketName: BucketName
    bundleId: NonEmptyString


class UpdateContainerServiceRequest(BaseModel):
    serviceName: ContainerServiceName
    power: Optional[ContainerServicePowerName] = None
    scale: Optional[ContainerServiceScale] = None
    isDisabled: Optional[Boolean] = None
    publicDomainNames: Optional[ContainerServicePublicDomains] = None


class UpdateDistributionBundleRequest(BaseModel):
    distributionName: Optional[ResourceName] = None
    bundleId: Optional[String] = None


class UpdateLoadBalancerAttributeRequest(BaseModel):
    loadBalancerName: ResourceName
    attributeName: LoadBalancerAttributeName
    attributeValue: StringMax256


class UpdateRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName
    masterUserPassword: Optional[SensitiveString] = None
    rotateMasterUserPassword: Optional[Boolean] = None
    preferredBackupWindow: Optional[String] = None
    preferredMaintenanceWindow: Optional[String] = None
    enableBackupRetention: Optional[Boolean] = None
    disableBackupRetention: Optional[Boolean] = None
    publiclyAccessible: Optional[Boolean] = None
    applyImmediately: Optional[Boolean] = None
    caCertificateIdentifier: Optional[String] = None


class AccessKeyLastUsed(BaseModel):
    """
    <p>Describes the last time an access key was used.</p> <note> <p>This object does not include data in the response of a <a>CreateBucketAccessKey</a> action.</p> </note>
    """

    lastUsedDate: Optional[IsoDate] = None
    region: Optional[String] = None
    serviceName: Optional[String] = None


class AccessKey(BaseModel):
    """
    <p>Describes an access key for an Amazon Lightsail bucket.</p> <p>Access keys grant full programmatic access to the specified bucket and its objects. You can have a maximum of two access keys per bucket. Use the <a>CreateBucketAccessKey</a> action to create an access key for a specific bucket. For more information about access keys, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-creating-bucket-access-keys">Creating access keys for a bucket in Amazon Lightsail</a> in the <i>Amazon Lightsail Developer Guide</i>.</p> <important> <p>The <code>secretAccessKey</code> value is returned only in response to the <code>CreateBucketAccessKey</code> action. You can get a secret access key only when you first create an access key; you cannot get the secret access key later. If you lose the secret access key, you must create a new access key.</p> </important>
    """

    accessKeyId: Optional[IAMAccessKeyId] = None
    secretAccessKey: Optional[NonEmptyString] = None
    status: Optional[StatusType] = None
    createdAt: Optional[IsoDate] = None
    lastUsed: Optional[AccessKeyLastUsed] = None


class AccessKeyList(BaseModel):
    __root__: List[AccessKey]


class ResourceLocation(BaseModel):
    """
    Describes the resource location.
    """

    availabilityZone: Optional[String] = None
    regionName: Optional[RegionName] = None


class MonitoredResourceInfo(BaseModel):
    """
    <p>Describes resource being monitored by an alarm.</p> <p>An alarm is a way to monitor your Amazon Lightsail resource metrics. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>
    """

    arn: Optional[ResourceArn] = None
    name: Optional[ResourceName] = None
    resourceType: Optional[ResourceType] = None


class ContactProtocolsList(BaseModel):
    __root__: List[ContactProtocol]


class Alarm(BaseModel):
    """
    <p>Describes an alarm.</p> <p>An alarm is a way to monitor your Lightsail resource metrics. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    supportCode: Optional[String] = None
    monitoredResourceInfo: Optional[MonitoredResourceInfo] = None
    comparisonOperator: Optional[ComparisonOperator] = None
    evaluationPeriods: Optional[Integer] = None
    period: Optional[MetricPeriod] = None
    threshold: Optional[Double] = None
    datapointsToAlarm: Optional[Integer] = None
    treatMissingData: Optional[TreatMissingData] = None
    statistic: Optional[MetricStatistic] = None
    metricName: Optional[MetricName] = None
    state: Optional[AlarmState] = None
    unit: Optional[MetricUnit] = None
    contactProtocols: Optional[ContactProtocolsList] = None
    notificationTriggers: Optional[NotificationTriggerList] = None
    notificationEnabled: Optional[Boolean] = None


class AlarmsList(BaseModel):
    __root__: List[Alarm]


class Operation(BaseModel):
    """
    Describes the API operation.
    """

    id: Optional[NonEmptyString] = None
    resourceName: Optional[ResourceName] = None
    resourceType: Optional[ResourceType] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    isTerminal: Optional[Boolean] = None
    operationDetails: Optional[String] = None
    operationType: Optional[OperationType] = None
    status: Optional[OperationStatus] = None
    statusChangedAt: Optional[IsoDate] = None
    errorCode: Optional[String] = None
    errorDetails: Optional[String] = None


class DiskMapList(BaseModel):
    __root__: List[DiskMap]


class TagList(BaseModel):
    __root__: List[Tag]


class Bucket(BaseModel):
    """
    Describes an Amazon Lightsail bucket.
    """

    resourceType: Optional[NonEmptyString] = None
    accessRules: Optional[AccessRules] = None
    arn: Optional[NonEmptyString] = None
    bundleId: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    url: Optional[NonEmptyString] = None
    location: Optional[ResourceLocation] = None
    name: Optional[BucketName] = None
    supportCode: Optional[NonEmptyString] = None
    tags: Optional[TagList] = None
    objectVersioning: Optional[NonEmptyString] = None
    ableToUpdateBundle: Optional[Boolean] = None
    readonlyAccessAccounts: Optional[PartnerIdList] = None
    resourcesReceivingAccess: Optional[AccessReceiverList] = None
    state: Optional[BucketState] = None


class BucketList(BaseModel):
    __root__: List[Bucket]


class CookieObject(BaseModel):
    """
    <p>Describes whether an Amazon Lightsail content delivery network (CDN) distribution forwards cookies to the origin and, if so, which ones.</p> <p>For the cookies that you specify, your distribution caches separate versions of the specified content based on the cookie values in viewer requests.</p>
    """

    option: Optional[ForwardValues] = None
    cookiesAllowList: Optional[StringList] = None


class HeaderObject(BaseModel):
    """
    <p>Describes the request headers that a Lightsail distribution bases caching on.</p> <p>For the headers that you specify, your distribution caches separate versions of the specified content based on the header values in viewer requests. For example, suppose viewer requests for <code>logo.jpg</code> contain a custom <code>product</code> header that has a value of either <code>acme</code> or <code>apex</code>, and you configure your distribution to cache your content based on values in the <code>product</code> header. Your distribution forwards the <code>product</code> header to the origin and caches the response from the origin once for each header value. </p>
    """

    option: Optional[ForwardValues] = None
    headersAllowList: Optional[HeaderForwardList] = None


class QueryStringObject(BaseModel):
    """
    <p>Describes the query string parameters that an Amazon Lightsail content delivery network (CDN) distribution to bases caching on.</p> <p>For the query strings that you specify, your distribution caches separate versions of the specified content based on the query string values in viewer requests.</p>
    """

    option: Optional[Boolean] = None
    queryStringsAllowList: Optional[StringList] = None


class CacheSettings(BaseModel):
    """
    <p>Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>These settings apply only to your distribution's <code>cacheBehaviors</code> (including the <code>defaultCacheBehavior</code>) that have a <code>behavior</code> of <code>cache</code>.</p>
    """

    defaultTTL: Optional[Long] = None
    minimumTTL: Optional[Long] = None
    maximumTTL: Optional[Long] = None
    allowedHTTPMethods: Optional[NonEmptyString] = None
    cachedHTTPMethods: Optional[NonEmptyString] = None
    forwardedCookies: Optional[CookieObject] = None
    forwardedHeaders: Optional[HeaderObject] = None
    forwardedQueryStrings: Optional[QueryStringObject] = None


class DomainValidationRecordList(BaseModel):
    __root__: List[DomainValidationRecord]


class RenewalSummary(BaseModel):
    """
    Describes the status of a SSL/TLS certificate renewal managed by Amazon Lightsail.
    """

    domainValidationRecords: Optional[DomainValidationRecordList] = None
    renewalStatus: Optional[RenewalStatus] = None
    renewalStatusReason: Optional[RenewalStatusReason] = None
    updatedAt: Optional[IsoDate] = None


class Certificate1(BaseModel):
    """
    <p>Describes the full details of an Amazon Lightsail SSL/TLS certificate.</p> <note> <p>To get a summary of a certificate, use the <code>GetCertificates</code> action and ommit <code>includeCertificateDetails</code> from your request. The response will include only the certificate Amazon Resource Name (ARN), certificate name, domain name, and tags.</p> </note>
    """

    arn: Optional[NonEmptyString] = None
    name: Optional[CertificateName] = None
    domainName: Optional[DomainName] = None
    status: Optional[CertificateStatus] = None
    serialNumber: Optional[SerialNumber] = None
    subjectAlternativeNames: Optional[SubjectAlternativeNameList] = None
    domainValidationRecords: Optional[DomainValidationRecordList] = None
    requestFailureReason: Optional[RequestFailureReason] = None
    inUseResourceCount: Optional[InUseResourceCount] = None
    keyAlgorithm: Optional[KeyAlgorithm] = None
    createdAt: Optional[IsoDate] = None
    issuedAt: Optional[IsoDate] = None
    issuerCA: Optional[IssuerCA] = None
    notBefore: Optional[IsoDate] = None
    notAfter: Optional[IsoDate] = None
    eligibleToRenew: Optional[EligibleToRenew] = None
    renewalSummary: Optional[RenewalSummary] = None
    revokedAt: Optional[IsoDate] = None
    revocationReason: Optional[RevocationReason] = None
    tags: Optional[TagList] = None
    supportCode: Optional[String] = None


class CertificateSummary(BaseModel):
    """
    Describes an Amazon Lightsail SSL/TLS certificate.
    """

    certificateArn: Optional[NonEmptyString] = None
    certificateName: Optional[CertificateName] = None
    domainName: Optional[DomainName] = None
    certificateDetail: Optional[Certificate1] = None
    tags: Optional[TagList] = None


class CertificateSummaryList(BaseModel):
    __root__: List[CertificateSummary]


class PortInfo(BaseModel):
    """
    Describes ports to open on an instance, the IP addresses allowed to connect to the instance through the ports, and the protocol.
    """

    fromPort: Optional[Port] = None
    toPort: Optional[Port] = None
    protocol: Optional[NetworkProtocol] = None
    cidrs: Optional[StringList] = None
    ipv6Cidrs: Optional[StringList] = None
    cidrListAliases: Optional[StringList] = None


class CloudFormationStackRecordSourceInfoList(BaseModel):
    __root__: List[CloudFormationStackRecordSourceInfo]


class CloudFormationStackRecord(BaseModel):
    """
    <p>Describes a CloudFormation stack record created as a result of the <code>create cloud formation stack</code> action.</p> <p>A CloudFormation stack record provides information about the AWS CloudFormation stack used to create a new Amazon Elastic Compute Cloud instance from an exported Lightsail instance snapshot.</p>
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    state: Optional[RecordState] = None
    sourceInfo: Optional[CloudFormationStackRecordSourceInfoList] = None
    destinationInfo: Optional[DestinationInfo] = None


class CloudFormationStackRecordList(BaseModel):
    __root__: List[CloudFormationStackRecord]


class ContactMethod(BaseModel):
    """
    <p>Describes a contact method.</p> <p>A contact method is a way to send you notifications. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-notifications">Notifications in Amazon Lightsail</a>.</p>
    """

    contactEndpoint: Optional[NonEmptyString] = None
    status: Optional[ContactMethodStatus] = None
    protocol: Optional[ContactProtocol] = None
    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    supportCode: Optional[String] = None


class ContactMethodsList(BaseModel):
    __root__: List[ContactMethod]


class ContainerServiceStateDetail(BaseModel):
    """
    Describes the current state of a container service.
    """

    code: Optional[ContainerServiceStateDetailCode] = None
    message: Optional[String] = None


class ContainerServiceEndpoint(BaseModel):
    """
    Describes the public endpoint configuration of a deployment of an Amazon Lightsail container service.
    """

    containerName: Optional[String] = None
    containerPort: Optional[Integer] = None
    healthCheck: Optional[ContainerServiceHealthCheckConfig] = None


class EndpointRequest(BaseModel):
    """
    Describes the settings of a public endpoint for an Amazon Lightsail container service.
    """

    containerName: String
    containerPort: Integer
    healthCheck: Optional[ContainerServiceHealthCheckConfig] = None


class ContainerServiceDeploymentRequest(BaseModel):
    """
    <p>Describes a container deployment configuration of an Amazon Lightsail container service.</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p>
    """

    containers: Optional[ContainerMap] = None
    publicEndpoint: Optional[EndpointRequest] = None


class InstanceEntryList(BaseModel):
    __root__: List[InstanceEntry]


class InputOrigin(BaseModel):
    """
    <p>Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.</p> <p>An origin can be a Lightsail instance or load balancer. A distribution pulls content from an origin, caches it, and serves it to viewers via a worldwide network of edge servers.</p>
    """

    name: Optional[ResourceName] = None
    regionName: Optional[RegionName] = None
    protocolPolicy: Optional[OriginProtocolPolicyEnum] = None


class LightsailDistribution(BaseModel):
    """
    Describes an Amazon Lightsail content delivery network (CDN) distribution.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    alternativeDomainNames: Optional[StringList] = None
    status: Optional[String] = None
    isEnabled: Optional[Boolean] = None
    domainName: Optional[String] = None
    bundleId: Optional[String] = None
    certificateName: Optional[ResourceName] = None
    origin: Optional[Origin] = None
    originPublicDNS: Optional[String] = None
    defaultCacheBehavior: Optional[CacheBehavior] = None
    cacheBehaviorSettings: Optional[CacheSettings] = None
    cacheBehaviors: Optional[CacheBehaviorList] = None
    ableToUpdateBundle: Optional[Boolean] = None
    ipAddressType: Optional[IpAddressType] = None
    tags: Optional[TagList] = None


class DomainEntry(BaseModel):
    """
    Describes a domain recordset entry.
    """

    id: Optional[NonEmptyString] = None
    name: Optional[DomainName] = None
    target: Optional[String] = None
    isAlias: Optional[Boolean] = None
    type: Optional[DomainEntryType] = None
    options: Optional[DomainEntryOptions] = None


class KeyPair(BaseModel):
    """
    Describes an SSH key pair.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    fingerprint: Optional[Base64] = None


class Disk(BaseModel):
    """
    Describes a block storage disk.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    addOns: Optional[AddOnList] = None
    sizeInGb: Optional[Integer] = None
    isSystemDisk: Optional[Boolean] = None
    iops: Optional[Integer] = None
    path: Optional[String] = None
    state: Optional[DiskState] = None
    attachedTo: Optional[ResourceName] = None
    isAttached: Optional[Boolean] = None
    attachmentState: Optional[String] = None
    gbInUse: Optional[Integer] = None


class DiskList(BaseModel):
    __root__: List[Disk]


class DiskSnapshot(BaseModel):
    """
    Describes a block storage disk snapshot.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    sizeInGb: Optional[Integer] = None
    state: Optional[DiskSnapshotState] = None
    progress: Optional[String] = None
    fromDiskName: Optional[ResourceName] = None
    fromDiskArn: Optional[NonEmptyString] = None
    fromInstanceName: Optional[ResourceName] = None
    fromInstanceArn: Optional[NonEmptyString] = None
    isFromAutoSnapshot: Optional[Boolean] = None


class DiskSnapshotList(BaseModel):
    __root__: List[DiskSnapshot]


class DistributionList(BaseModel):
    __root__: List[LightsailDistribution]


class DomainEntryList(BaseModel):
    __root__: List[DomainEntry]


class Domain(BaseModel):
    """
    Describes a domain where you are storing recordsets.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    domainEntries: Optional[DomainEntryList] = None


class DomainList(BaseModel):
    __root__: List[Domain]


class ExportSnapshotRecordSourceInfo(BaseModel):
    """
    Describes the source of an export snapshot record.
    """

    resourceType: Optional[ExportSnapshotRecordSourceType] = None
    createdAt: Optional[IsoDate] = None
    name: Optional[NonEmptyString] = None
    arn: Optional[NonEmptyString] = None
    fromResourceName: Optional[NonEmptyString] = None
    fromResourceArn: Optional[NonEmptyString] = None
    instanceSnapshotInfo: Optional[InstanceSnapshotInfo] = None
    diskSnapshotInfo: Optional[DiskSnapshotInfo] = None


class ExportSnapshotRecord(BaseModel):
    """
    Describes an export snapshot record.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    state: Optional[RecordState] = None
    sourceInfo: Optional[ExportSnapshotRecordSourceInfo] = None
    destinationInfo: Optional[DestinationInfo] = None


class ExportSnapshotRecordList(BaseModel):
    __root__: List[ExportSnapshotRecord]


class MetricDatapointList(BaseModel):
    __root__: List[MetricDatapoint]


class InstanceAccessDetails(BaseModel):
    """
    The parameters for gaining temporary access to one of your Amazon Lightsail instances.
    """

    certKey: Optional[String] = None
    expiresAt: Optional[IsoDate] = None
    ipAddress: Optional[IpAddress] = None
    password: Optional[String] = None
    passwordData: Optional[PasswordData] = None
    privateKey: Optional[String] = None
    protocol: Optional[InstanceAccessProtocol] = None
    instanceName: Optional[ResourceName] = None
    username: Optional[String] = None
    hostKeys: Optional[HostKeysList] = None


class InstancePortStateList(BaseModel):
    __root__: List[InstancePortState]


class InstanceSnapshot(BaseModel):
    """
    Describes an instance snapshot.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    state: Optional[InstanceSnapshotState] = None
    progress: Optional[String] = None
    fromAttachedDisks: Optional[DiskList] = None
    fromInstanceName: Optional[ResourceName] = None
    fromInstanceArn: Optional[NonEmptyString] = None
    fromBlueprintId: Optional[String] = None
    fromBundleId: Optional[String] = None
    isFromAutoSnapshot: Optional[Boolean] = None
    sizeInGb: Optional[Integer] = None


class InstanceSnapshotList(BaseModel):
    __root__: List[InstanceSnapshot]


class KeyPairList(BaseModel):
    __root__: List[KeyPair]


class RegionList(BaseModel):
    __root__: List[Region]


class RelationalDatabaseBlueprintList(BaseModel):
    __root__: List[RelationalDatabaseBlueprint]


class RelationalDatabaseBundleList(BaseModel):
    __root__: List[RelationalDatabaseBundle]


class RelationalDatabaseEventList(BaseModel):
    __root__: List[RelationalDatabaseEvent]


class LogEventList(BaseModel):
    __root__: List[LogEvent]


class RelationalDatabaseParameterList(BaseModel):
    __root__: List[RelationalDatabaseParameter]


class RelationalDatabase(BaseModel):
    """
    Describes a database.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    relationalDatabaseBlueprintId: Optional[NonEmptyString] = None
    relationalDatabaseBundleId: Optional[NonEmptyString] = None
    masterDatabaseName: Optional[String] = None
    hardware: Optional[RelationalDatabaseHardware] = None
    state: Optional[NonEmptyString] = None
    secondaryAvailabilityZone: Optional[String] = None
    backupRetentionEnabled: Optional[Boolean] = None
    pendingModifiedValues: Optional[PendingModifiedRelationalDatabaseValues] = None
    engine: Optional[NonEmptyString] = None
    engineVersion: Optional[NonEmptyString] = None
    latestRestorableTime: Optional[IsoDate] = None
    masterUsername: Optional[NonEmptyString] = None
    parameterApplyStatus: Optional[NonEmptyString] = None
    preferredBackupWindow: Optional[NonEmptyString] = None
    preferredMaintenanceWindow: Optional[NonEmptyString] = None
    publiclyAccessible: Optional[Boolean] = None
    masterEndpoint: Optional[RelationalDatabaseEndpoint] = None
    pendingMaintenanceActions: Optional[PendingMaintenanceActionList] = None
    caCertificateIdentifier: Optional[String] = None


class RelationalDatabaseSnapshot(BaseModel):
    """
    Describes a database snapshot.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    engine: Optional[NonEmptyString] = None
    engineVersion: Optional[NonEmptyString] = None
    sizeInGb: Optional[Integer] = None
    state: Optional[NonEmptyString] = None
    fromRelationalDatabaseName: Optional[NonEmptyString] = None
    fromRelationalDatabaseArn: Optional[NonEmptyString] = None
    fromRelationalDatabaseBundleId: Optional[String] = None
    fromRelationalDatabaseBlueprintId: Optional[String] = None


class RelationalDatabaseSnapshotList(BaseModel):
    __root__: List[RelationalDatabaseSnapshot]


class RelationalDatabaseList(BaseModel):
    __root__: List[RelationalDatabase]


class StaticIp(BaseModel):
    """
    Describes a static IP.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    ipAddress: Optional[IpAddress] = None
    attachedTo: Optional[ResourceName] = None
    isAttached: Optional[Boolean] = None


class StaticIpList(BaseModel):
    __root__: List[StaticIp]


class Ipv6AddressList(BaseModel):
    __root__: List[Ipv6Address]


class InstanceHardware(BaseModel):
    """
    Describes the hardware for the instance.
    """

    cpuCount: Optional[Integer] = None
    disks: Optional[DiskList] = None
    ramSizeInGb: Optional[Float] = None


class InstancePortInfoList(BaseModel):
    __root__: List[InstancePortInfo]


class LoadBalancerTlsCertificateSummaryList(BaseModel):
    __root__: List[LoadBalancerTlsCertificateSummary]


class LoadBalancerTlsCertificateDomainValidationRecordList(BaseModel):
    __root__: List[LoadBalancerTlsCertificateDomainValidationRecord]


class LoadBalancerTlsCertificateRenewalSummary(BaseModel):
    """
    <p>Contains information about the status of Lightsail's managed renewal for the certificate.</p> <p>The renewal status of the certificate.</p> <p>The following renewal status are possible:</p> <ul> <li> <p> <b> <code>PendingAutoRenewal</code> </b> - Lightsail is attempting to automatically validate the domain names in the certificate. No further action is required. </p> </li> <li> <p> <b> <code>PendingValidation</code> </b> - Lightsail couldn't automatically validate one or more domain names in the certificate. You must take action to validate these domain names or the certificate won't be renewed. If you used DNS validation, check to make sure your certificate's domain validation records exist in your domain's DNS, and that your certificate remains in use.</p> </li> <li> <p> <b> <code>Success</code> </b> - All domain names in the certificate are validated, and Lightsail renewed the certificate. No further action is required. </p> </li> <li> <p> <b> <code>Failed</code> </b> - One or more domain names were not validated before the certificate expired, and Lightsail did not renew the certificate. You can request a new certificate using the <code>CreateCertificate</code> action.</p> </li> </ul>
    """

    renewalStatus: Optional[LoadBalancerTlsCertificateRenewalStatus] = None
    domainValidationOptions: Optional[
        LoadBalancerTlsCertificateDomainValidationOptionList
    ] = None


class LoadBalancerTlsCertificate(BaseModel):
    """
    <p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    loadBalancerName: Optional[ResourceName] = None
    isAttached: Optional[Boolean] = None
    status: Optional[LoadBalancerTlsCertificateStatus] = None
    domainName: Optional[DomainName] = None
    domainValidationRecords: Optional[
        LoadBalancerTlsCertificateDomainValidationRecordList
    ] = None
    failureReason: Optional[LoadBalancerTlsCertificateFailureReason] = None
    issuedAt: Optional[IsoDate] = None
    issuer: Optional[NonEmptyString] = None
    keyAlgorithm: Optional[NonEmptyString] = None
    notAfter: Optional[IsoDate] = None
    notBefore: Optional[IsoDate] = None
    renewalSummary: Optional[LoadBalancerTlsCertificateRenewalSummary] = None
    revocationReason: Optional[LoadBalancerTlsCertificateRevocationReason] = None
    revokedAt: Optional[IsoDate] = None
    serial: Optional[NonEmptyString] = None
    signatureAlgorithm: Optional[NonEmptyString] = None
    subject: Optional[NonEmptyString] = None
    subjectAlternativeNames: Optional[StringList] = None


class PortInfoList(BaseModel):
    __root__: List[PortInfo]


class AttachCertificateToDistributionResult(BaseModel):
    operation: Optional[Operation] = None


class CloseInstancePublicPortsResult(AttachCertificateToDistributionResult):
    pass


class CloseInstancePublicPortsRequest(BaseModel):
    portInfo: PortInfo
    instanceName: ResourceName


class CreateBucketRequest(BaseModel):
    bucketName: BucketName
    bundleId: NonEmptyString
    tags: Optional[TagList] = None
    enableObjectVersioning: Optional[Boolean] = None


class CreateCertificateRequest(BaseModel):
    certificateName: CertificateName
    domainName: DomainName
    subjectAlternativeNames: Optional[SubjectAlternativeNameList] = None
    tags: Optional[TagList] = None


class CreateCloudFormationStackRequest(BaseModel):
    instances: InstanceEntryList


class CreateContainerServiceRequest(BaseModel):
    serviceName: ContainerServiceName
    power: ContainerServicePowerName
    scale: ContainerServiceScale
    tags: Optional[TagList] = None
    publicDomainNames: Optional[ContainerServicePublicDomains] = None
    deployment: Optional[ContainerServiceDeploymentRequest] = None


class CreateContainerServiceDeploymentRequest(BaseModel):
    serviceName: ContainerServiceName
    containers: Optional[ContainerMap] = None
    publicEndpoint: Optional[EndpointRequest] = None


class CreateDiskRequest(BaseModel):
    diskName: ResourceName
    availabilityZone: NonEmptyString
    sizeInGb: Integer
    tags: Optional[TagList] = None
    addOns: Optional[AddOnRequestList] = None


class CreateDiskFromSnapshotRequest(BaseModel):
    diskName: ResourceName
    diskSnapshotName: Optional[ResourceName] = None
    availabilityZone: NonEmptyString
    sizeInGb: Integer
    tags: Optional[TagList] = None
    addOns: Optional[AddOnRequestList] = None
    sourceDiskName: Optional[String] = None
    restoreDate: Optional[String] = None
    useLatestRestorableAutoSnapshot: Optional[Boolean] = None


class CreateDiskSnapshotRequest(BaseModel):
    diskName: Optional[ResourceName] = None
    diskSnapshotName: ResourceName
    instanceName: Optional[ResourceName] = None
    tags: Optional[TagList] = None


class CreateDistributionResult(BaseModel):
    distribution: Optional[LightsailDistribution] = None
    operation: Optional[Operation] = None


class CreateDistributionRequest(BaseModel):
    distributionName: ResourceName
    origin: InputOrigin
    defaultCacheBehavior: CacheBehavior
    cacheBehaviorSettings: Optional[CacheSettings] = None
    cacheBehaviors: Optional[CacheBehaviorList] = None
    bundleId: String
    ipAddressType: Optional[IpAddressType] = None
    tags: Optional[TagList] = None


class CreateDomainResult(AttachCertificateToDistributionResult):
    pass


class CreateDomainRequest(BaseModel):
    domainName: DomainName
    tags: Optional[TagList] = None


class CreateDomainEntryResult(AttachCertificateToDistributionResult):
    pass


class CreateDomainEntryRequest(BaseModel):
    domainName: DomainName
    domainEntry: DomainEntry


class CreateInstanceSnapshotRequest(BaseModel):
    instanceSnapshotName: ResourceName
    instanceName: ResourceName
    tags: Optional[TagList] = None


class CreateInstancesRequest(BaseModel):
    instanceNames: StringList
    availabilityZone: String
    customImageName: Optional[ResourceName] = None
    blueprintId: NonEmptyString
    bundleId: NonEmptyString
    userData: Optional[String] = None
    keyPairName: Optional[ResourceName] = None
    tags: Optional[TagList] = None
    addOns: Optional[AddOnRequestList] = None
    ipAddressType: Optional[IpAddressType] = None


class CreateInstancesFromSnapshotRequest(BaseModel):
    instanceNames: StringList
    attachedDiskMapping: Optional[AttachedDiskMap] = None
    availabilityZone: String
    instanceSnapshotName: Optional[ResourceName] = None
    bundleId: NonEmptyString
    userData: Optional[String] = None
    keyPairName: Optional[ResourceName] = None
    tags: Optional[TagList] = None
    addOns: Optional[AddOnRequestList] = None
    ipAddressType: Optional[IpAddressType] = None
    sourceInstanceName: Optional[String] = None
    restoreDate: Optional[String] = None
    useLatestRestorableAutoSnapshot: Optional[Boolean] = None


class CreateKeyPairResult(BaseModel):
    keyPair: Optional[KeyPair] = None
    publicKeyBase64: Optional[Base64] = None
    privateKeyBase64: Optional[Base64] = None
    operation: Optional[Operation] = None


class CreateKeyPairRequest(BaseModel):
    keyPairName: ResourceName
    tags: Optional[TagList] = None


class CreateLoadBalancerRequest(BaseModel):
    loadBalancerName: ResourceName
    instancePort: Port
    healthCheckPath: Optional[String] = None
    certificateName: Optional[ResourceName] = None
    certificateDomainName: Optional[DomainName] = None
    certificateAlternativeNames: Optional[DomainNameList] = None
    tags: Optional[TagList] = None
    ipAddressType: Optional[IpAddressType] = None


class CreateLoadBalancerTlsCertificateRequest(BaseModel):
    loadBalancerName: ResourceName
    certificateName: ResourceName
    certificateDomainName: DomainName
    certificateAlternativeNames: Optional[DomainNameList] = None
    tags: Optional[TagList] = None


class CreateRelationalDatabaseRequest(BaseModel):
    relationalDatabaseName: ResourceName
    availabilityZone: Optional[String] = None
    relationalDatabaseBlueprintId: String
    relationalDatabaseBundleId: String
    masterDatabaseName: String
    masterUsername: String
    masterUserPassword: Optional[SensitiveString] = None
    preferredBackupWindow: Optional[String] = None
    preferredMaintenanceWindow: Optional[String] = None
    publiclyAccessible: Optional[Boolean] = None
    tags: Optional[TagList] = None


class CreateRelationalDatabaseFromSnapshotRequest(BaseModel):
    relationalDatabaseName: ResourceName
    availabilityZone: Optional[String] = None
    publiclyAccessible: Optional[Boolean] = None
    relationalDatabaseSnapshotName: Optional[ResourceName] = None
    relationalDatabaseBundleId: Optional[String] = None
    sourceRelationalDatabaseName: Optional[ResourceName] = None
    restoreTime: Optional[IsoDate] = None
    useLatestRestorableTime: Optional[Boolean] = None
    tags: Optional[TagList] = None


class CreateRelationalDatabaseSnapshotRequest(BaseModel):
    relationalDatabaseName: ResourceName
    relationalDatabaseSnapshotName: ResourceName
    tags: Optional[TagList] = None


class DeleteDistributionResult(AttachCertificateToDistributionResult):
    pass


class DeleteDomainResult(AttachCertificateToDistributionResult):
    pass


class DeleteDomainEntryResult(AttachCertificateToDistributionResult):
    pass


class DeleteDomainEntryRequest(BaseModel):
    domainName: DomainName
    domainEntry: DomainEntry


class DeleteKeyPairResult(AttachCertificateToDistributionResult):
    pass


class DetachCertificateFromDistributionResult(AttachCertificateToDistributionResult):
    pass


class GetAlarmsResult(BaseModel):
    alarms: Optional[AlarmsList] = None
    nextPageToken: Optional[String] = None


class GetBucketAccessKeysResult(BaseModel):
    accessKeys: Optional[AccessKeyList] = None


class GetBucketMetricDataResult(BaseModel):
    metricName: Optional[BucketMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetBucketsResult(BaseModel):
    buckets: Optional[BucketList] = None
    nextPageToken: Optional[String] = None


class GetCertificatesResult(BaseModel):
    certificates: Optional[CertificateSummaryList] = None


class GetCloudFormationStackRecordsResult(BaseModel):
    cloudFormationStackRecords: Optional[CloudFormationStackRecordList] = None
    nextPageToken: Optional[String] = None


class GetContactMethodsResult(BaseModel):
    contactMethods: Optional[ContactMethodsList] = None


class GetContactMethodsRequest(BaseModel):
    protocols: Optional[ContactProtocolsList] = None


class GetContainerServiceMetricDataResult(BaseModel):
    metricName: Optional[ContainerServiceMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetDiskResult(BaseModel):
    disk: Optional[Disk] = None


class GetDiskSnapshotResult(BaseModel):
    diskSnapshot: Optional[DiskSnapshot] = None


class GetDiskSnapshotsResult(BaseModel):
    diskSnapshots: Optional[DiskSnapshotList] = None
    nextPageToken: Optional[String] = None


class GetDisksResult(BaseModel):
    disks: Optional[DiskList] = None
    nextPageToken: Optional[String] = None


class GetDistributionMetricDataResult(BaseModel):
    metricName: Optional[DistributionMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetDistributionsResult(BaseModel):
    distributions: Optional[DistributionList] = None
    nextPageToken: Optional[String] = None


class GetDomainResult(BaseModel):
    domain: Optional[Domain] = None


class GetDomainsResult(BaseModel):
    domains: Optional[DomainList] = None
    nextPageToken: Optional[String] = None


class GetExportSnapshotRecordsResult(BaseModel):
    exportSnapshotRecords: Optional[ExportSnapshotRecordList] = None
    nextPageToken: Optional[String] = None


class GetInstanceAccessDetailsResult(BaseModel):
    accessDetails: Optional[InstanceAccessDetails] = None


class GetInstanceMetricDataResult(BaseModel):
    metricName: Optional[InstanceMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetInstancePortStatesResult(BaseModel):
    portStates: Optional[InstancePortStateList] = None


class GetInstanceSnapshotResult(BaseModel):
    instanceSnapshot: Optional[InstanceSnapshot] = None


class GetInstanceSnapshotsResult(BaseModel):
    instanceSnapshots: Optional[InstanceSnapshotList] = None
    nextPageToken: Optional[String] = None


class GetKeyPairResult(BaseModel):
    keyPair: Optional[KeyPair] = None


class GetKeyPairsResult(BaseModel):
    keyPairs: Optional[KeyPairList] = None
    nextPageToken: Optional[String] = None


class GetLoadBalancerMetricDataResult(BaseModel):
    metricName: Optional[LoadBalancerMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetOperationResult(AttachCertificateToDistributionResult):
    pass


class GetRegionsResult(BaseModel):
    regions: Optional[RegionList] = None


class GetRelationalDatabaseResult(BaseModel):
    relationalDatabase: Optional[RelationalDatabase] = None


class GetRelationalDatabaseBlueprintsResult(BaseModel):
    blueprints: Optional[RelationalDatabaseBlueprintList] = None
    nextPageToken: Optional[String] = None


class GetRelationalDatabaseBundlesResult(BaseModel):
    bundles: Optional[RelationalDatabaseBundleList] = None
    nextPageToken: Optional[String] = None


class GetRelationalDatabaseEventsResult(BaseModel):
    relationalDatabaseEvents: Optional[RelationalDatabaseEventList] = None
    nextPageToken: Optional[String] = None


class GetRelationalDatabaseLogEventsResult(BaseModel):
    resourceLogEvents: Optional[LogEventList] = None
    nextBackwardToken: Optional[String] = None
    nextForwardToken: Optional[String] = None


class GetRelationalDatabaseMetricDataResult(BaseModel):
    metricName: Optional[RelationalDatabaseMetricName] = None
    metricData: Optional[MetricDatapointList] = None


class GetRelationalDatabaseParametersResult(BaseModel):
    parameters: Optional[RelationalDatabaseParameterList] = None
    nextPageToken: Optional[String] = None


class GetRelationalDatabaseSnapshotResult(BaseModel):
    relationalDatabaseSnapshot: Optional[RelationalDatabaseSnapshot] = None


class GetRelationalDatabaseSnapshotsResult(BaseModel):
    relationalDatabaseSnapshots: Optional[RelationalDatabaseSnapshotList] = None
    nextPageToken: Optional[String] = None


class GetRelationalDatabasesResult(BaseModel):
    relationalDatabases: Optional[RelationalDatabaseList] = None
    nextPageToken: Optional[String] = None


class GetStaticIpResult(BaseModel):
    staticIp: Optional[StaticIp] = None


class GetStaticIpsResult(BaseModel):
    staticIps: Optional[StaticIpList] = None
    nextPageToken: Optional[String] = None


class ImportKeyPairResult(AttachCertificateToDistributionResult):
    pass


class OpenInstancePublicPortsResult(AttachCertificateToDistributionResult):
    pass


class OpenInstancePublicPortsRequest(BaseModel):
    portInfo: PortInfo
    instanceName: ResourceName


class PeerVpcResult(AttachCertificateToDistributionResult):
    pass


class PutAlarmRequest(BaseModel):
    alarmName: ResourceName
    metricName: MetricName
    monitoredResourceName: ResourceName
    comparisonOperator: ComparisonOperator
    threshold: Double
    evaluationPeriods: Integer
    datapointsToAlarm: Optional[Integer] = None
    treatMissingData: Optional[TreatMissingData] = None
    contactProtocols: Optional[ContactProtocolsList] = None
    notificationTriggers: Optional[NotificationTriggerList] = None
    notificationEnabled: Optional[Boolean] = None


class PutInstancePublicPortsResult(AttachCertificateToDistributionResult):
    pass


class PutInstancePublicPortsRequest(BaseModel):
    portInfos: PortInfoList
    instanceName: ResourceName


class ResetDistributionCacheResult(BaseModel):
    status: Optional[String] = None
    createTime: Optional[IsoDate] = None
    operation: Optional[Operation] = None


class TagResourceRequest(BaseModel):
    resourceName: ResourceName
    resourceArn: Optional[ResourceArn] = None
    tags: TagList


class UnpeerVpcResult(AttachCertificateToDistributionResult):
    pass


class UpdateDistributionResult(AttachCertificateToDistributionResult):
    pass


class UpdateDistributionRequest(BaseModel):
    distributionName: ResourceName
    origin: Optional[InputOrigin] = None
    defaultCacheBehavior: Optional[CacheBehavior] = None
    cacheBehaviorSettings: Optional[CacheSettings] = None
    cacheBehaviors: Optional[CacheBehaviorList] = None
    isEnabled: Optional[Boolean] = None


class UpdateDistributionBundleResult(AttachCertificateToDistributionResult):
    pass


class UpdateDomainEntryRequest(BaseModel):
    domainName: DomainName
    domainEntry: DomainEntry


class UpdateRelationalDatabaseParametersRequest(BaseModel):
    relationalDatabaseName: ResourceName
    parameters: RelationalDatabaseParameterList


class OperationList(BaseModel):
    __root__: List[Operation]


class ContainerServiceDeployment(BaseModel):
    """
    <p>Describes a container deployment configuration of an Amazon Lightsail container service.</p> <p>A deployment specifies the settings, such as the ports and launch command, of containers that are deployed to your container service.</p>
    """

    version: Optional[Integer] = None
    state: Optional[ContainerServiceDeploymentState] = None
    containers: Optional[ContainerMap] = None
    publicEndpoint: Optional[ContainerServiceEndpoint] = None
    createdAt: Optional[IsoDate] = None


class ContainerService(BaseModel):
    """
    Describes an Amazon Lightsail container service.
    """

    containerServiceName: Optional[ContainerServiceName] = None
    arn: Optional[NonEmptyString] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    power: Optional[ContainerServicePowerName] = None
    powerId: Optional[String] = None
    state: Optional[ContainerServiceState] = None
    stateDetail: Optional[ContainerServiceStateDetail] = None
    scale: Optional[ContainerServiceScale] = None
    currentDeployment: Optional[ContainerServiceDeployment] = None
    nextDeployment: Optional[ContainerServiceDeployment] = None
    isDisabled: Optional[Boolean] = None
    principalArn: Optional[String] = None
    privateDomainName: Optional[String] = None
    publicDomainNames: Optional[ContainerServicePublicDomains] = None
    url: Optional[String] = None


class ContainerServiceDeploymentList(BaseModel):
    __root__: List[ContainerServiceDeployment]


class ContainerServiceList(BaseModel):
    __root__: List[ContainerService]


class LoadBalancer(BaseModel):
    """
    Describes a load balancer.
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    dnsName: Optional[NonEmptyString] = None
    state: Optional[LoadBalancerState] = None
    protocol: Optional[LoadBalancerProtocol] = None
    publicPorts: Optional[PortList] = None
    healthCheckPath: Optional[NonEmptyString] = None
    instancePort: Optional[Integer] = None
    instanceHealthSummary: Optional[InstanceHealthSummaryList] = None
    tlsCertificateSummaries: Optional[LoadBalancerTlsCertificateSummaryList] = None
    configurationOptions: Optional[LoadBalancerConfigurationOptions] = None
    ipAddressType: Optional[IpAddressType] = None


class LoadBalancerTlsCertificateList(BaseModel):
    __root__: List[LoadBalancerTlsCertificate]


class LoadBalancerList(BaseModel):
    __root__: List[LoadBalancer]


class InstanceNetworking(BaseModel):
    """
    Describes monthly data transfer rates and port information for an instance.
    """

    monthlyTransfer: Optional[MonthlyTransfer] = None
    ports: Optional[InstancePortInfoList] = None


class AllocateStaticIpResult(BaseModel):
    operations: Optional[OperationList] = None


class AttachDiskResult(AllocateStaticIpResult):
    pass


class AttachInstancesToLoadBalancerResult(AllocateStaticIpResult):
    pass


class AttachLoadBalancerTlsCertificateResult(AllocateStaticIpResult):
    pass


class AttachStaticIpResult(AllocateStaticIpResult):
    pass


class CopySnapshotResult(AllocateStaticIpResult):
    pass


class CreateBucketResult(BaseModel):
    bucket: Optional[Bucket] = None
    operations: Optional[OperationList] = None


class CreateBucketAccessKeyResult(BaseModel):
    accessKey: Optional[AccessKey] = None
    operations: Optional[OperationList] = None


class CreateCertificateResult(BaseModel):
    certificate: Optional[CertificateSummary] = None
    operations: Optional[OperationList] = None


class CreateCloudFormationStackResult(AllocateStaticIpResult):
    pass


class CreateContactMethodResult(AllocateStaticIpResult):
    pass


class CreateContainerServiceResult(BaseModel):
    containerService: Optional[ContainerService] = None


class CreateContainerServiceDeploymentResult(CreateContainerServiceResult):
    pass


class CreateDiskResult(AllocateStaticIpResult):
    pass


class CreateDiskFromSnapshotResult(AllocateStaticIpResult):
    pass


class CreateDiskSnapshotResult(AllocateStaticIpResult):
    pass


class CreateInstanceSnapshotResult(AllocateStaticIpResult):
    pass


class CreateInstancesResult(AllocateStaticIpResult):
    pass


class CreateInstancesFromSnapshotResult(AllocateStaticIpResult):
    pass


class CreateLoadBalancerResult(AllocateStaticIpResult):
    pass


class CreateLoadBalancerTlsCertificateResult(AllocateStaticIpResult):
    pass


class CreateRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class CreateRelationalDatabaseFromSnapshotResult(AllocateStaticIpResult):
    pass


class CreateRelationalDatabaseSnapshotResult(AllocateStaticIpResult):
    pass


class DeleteAlarmResult(AllocateStaticIpResult):
    pass


class DeleteAutoSnapshotResult(AllocateStaticIpResult):
    pass


class DeleteBucketResult(AllocateStaticIpResult):
    pass


class DeleteBucketAccessKeyResult(AllocateStaticIpResult):
    pass


class DeleteCertificateResult(AllocateStaticIpResult):
    pass


class DeleteContactMethodResult(AllocateStaticIpResult):
    pass


class DeleteDiskResult(AllocateStaticIpResult):
    pass


class DeleteDiskSnapshotResult(AllocateStaticIpResult):
    pass


class DeleteInstanceResult(AllocateStaticIpResult):
    pass


class DeleteInstanceSnapshotResult(AllocateStaticIpResult):
    pass


class DeleteKnownHostKeysResult(AllocateStaticIpResult):
    pass


class DeleteLoadBalancerResult(AllocateStaticIpResult):
    pass


class DeleteLoadBalancerTlsCertificateResult(AllocateStaticIpResult):
    pass


class DeleteRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class DeleteRelationalDatabaseSnapshotResult(AllocateStaticIpResult):
    pass


class DetachDiskResult(AllocateStaticIpResult):
    pass


class DetachInstancesFromLoadBalancerResult(AllocateStaticIpResult):
    pass


class DetachStaticIpResult(AllocateStaticIpResult):
    pass


class DisableAddOnResult(AllocateStaticIpResult):
    pass


class EnableAddOnResult(AllocateStaticIpResult):
    pass


class ExportSnapshotResult(AllocateStaticIpResult):
    pass


class GetContainerServiceDeploymentsResult(BaseModel):
    deployments: Optional[ContainerServiceDeploymentList] = None


class ContainerServicesListResult(BaseModel):
    containerServices: Optional[ContainerServiceList] = None


class GetLoadBalancerResult(BaseModel):
    loadBalancer: Optional[LoadBalancer] = None


class GetLoadBalancerTlsCertificatesResult(BaseModel):
    tlsCertificates: Optional[LoadBalancerTlsCertificateList] = None


class GetLoadBalancersResult(BaseModel):
    loadBalancers: Optional[LoadBalancerList] = None
    nextPageToken: Optional[String] = None


class GetOperationsResult(BaseModel):
    operations: Optional[OperationList] = None
    nextPageToken: Optional[String] = None


class GetOperationsForResourceResult(BaseModel):
    operations: Optional[OperationList] = None
    nextPageCount: Optional[String] = None
    nextPageToken: Optional[String] = None


class PutAlarmResult(AllocateStaticIpResult):
    pass


class RebootInstanceResult(AllocateStaticIpResult):
    pass


class RebootRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class ReleaseStaticIpResult(AllocateStaticIpResult):
    pass


class SendContactMethodVerificationResult(AllocateStaticIpResult):
    pass


class SetIpAddressTypeResult(AllocateStaticIpResult):
    pass


class SetResourceAccessForBucketResult(AllocateStaticIpResult):
    pass


class StartInstanceResult(AllocateStaticIpResult):
    pass


class StartRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class StopInstanceResult(AllocateStaticIpResult):
    pass


class StopRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class TagResourceResult(AllocateStaticIpResult):
    pass


class TestAlarmResult(AllocateStaticIpResult):
    pass


class UntagResourceResult(AllocateStaticIpResult):
    pass


class UpdateBucketResult(CreateBucketResult):
    pass


class UpdateBucketBundleResult(AllocateStaticIpResult):
    pass


class UpdateContainerServiceResult(CreateContainerServiceResult):
    pass


class UpdateDomainEntryResult(AllocateStaticIpResult):
    pass


class UpdateLoadBalancerAttributeResult(AllocateStaticIpResult):
    pass


class UpdateRelationalDatabaseResult(AllocateStaticIpResult):
    pass


class UpdateRelationalDatabaseParametersResult(AllocateStaticIpResult):
    pass


class Instance(BaseModel):
    """
    Describes an instance (a virtual private server).
    """

    name: Optional[ResourceName] = None
    arn: Optional[NonEmptyString] = None
    supportCode: Optional[String] = None
    createdAt: Optional[IsoDate] = None
    location: Optional[ResourceLocation] = None
    resourceType: Optional[ResourceType] = None
    tags: Optional[TagList] = None
    blueprintId: Optional[NonEmptyString] = None
    blueprintName: Optional[NonEmptyString] = None
    bundleId: Optional[NonEmptyString] = None
    addOns: Optional[AddOnList] = None
    isStaticIp: Optional[Boolean] = None
    privateIpAddress: Optional[IpAddress] = None
    publicIpAddress: Optional[IpAddress] = None
    ipv6Addresses: Optional[Ipv6AddressList] = None
    ipAddressType: Optional[IpAddressType] = None
    hardware: Optional[InstanceHardware] = None
    networking: Optional[InstanceNetworking] = None
    state: Optional[InstanceState] = None
    username: Optional[NonEmptyString] = None
    sshKeyName: Optional[ResourceName] = None


class InstanceList(BaseModel):
    __root__: List[Instance]


class GetInstanceResult(BaseModel):
    instance: Optional[Instance] = None


class GetInstancesResult(BaseModel):
    instances: Optional[InstanceList] = None
    nextPageToken: Optional[String] = None

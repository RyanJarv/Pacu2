# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:55:00+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class ThrottlingException(BaseModel):
    __root__: Any


class ValidationException(ThrottlingException):
    pass


class InternalServerException(ThrottlingException):
    pass


class ConflictException(ThrottlingException):
    pass


class AccessDeniedException(ThrottlingException):
    pass


class ResourceNotFoundException(ThrottlingException):
    pass


class DeleteCrossAccountAuthorizationResponse(BaseModel):
    pass


class TagResourceResponse(DeleteCrossAccountAuthorizationResponse):
    pass


class _StringMax256(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class _StringMax64PatternAAZAZ09Z(BaseModel):
    __root__: Annotated[str, Field(max_length=64, regex='\\A[a-zA-Z0-9_]+\\z')]


class _ListOfString(BaseModel):
    __root__: List[_String]


class Tags(BaseModel):
    """
    A collection of tags associated with a resource
    """

    pass

    class Config:
        extra = Extra.allow


class CellOutput(BaseModel):
    """
    A Cell and its properties
    """

    CellArn: _StringMax256
    CellName: _StringMax64PatternAAZAZ09Z
    Cells: _ListOfString
    ParentReadinessScopes: _ListOfString
    Tags: Optional[Tags] = None


class CreateCellRequest(BaseModel):
    """
    The Cell to create
    """

    CellName: _String
    Cells: Optional[_ListOfString] = None
    Tags: Optional[Tags] = None


class CrossAccountAuthorization(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='A cross-account authorization, e.g. arn:aws:iam::123456789012:root'
        ),
    ]


class CreateCrossAccountAuthorizationRequest(BaseModel):
    """
    The cross account authorization
    """

    CrossAccountAuthorization: CrossAccountAuthorization


class CreateReadinessCheckRequest(BaseModel):
    """
    The ReadinessCheck to create
    """

    ReadinessCheckName: _String
    ResourceSetName: _String
    Tags: Optional[Tags] = None


class CreateRecoveryGroupRequest(BaseModel):
    """
    The RecoveryGroup to create
    """

    Cells: Optional[_ListOfString] = None
    RecoveryGroupName: _String
    Tags: Optional[Tags] = None


class _StringPatternAWSAZaZ09AZaZ09(BaseModel):
    __root__: Annotated[str, Field(regex='AWS::[A-Za-z0-9]+::[A-Za-z0-9]+')]


class DeleteCellRequest(BaseModel):
    pass


class DeleteCrossAccountAuthorizationRequest(BaseModel):
    pass


class DeleteReadinessCheckRequest(BaseModel):
    pass


class DeleteRecoveryGroupRequest(BaseModel):
    pass


class DeleteResourceSetRequest(BaseModel):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class GetArchitectureRecommendationsRequest(BaseModel):
    pass


class LastAuditTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description='The time a Recovery Group was last assessed for recommendations in UTC ISO-8601 format'
        ),
    ]


class GetCellReadinessSummaryRequest(BaseModel):
    pass


class Readiness(Enum):
    """
    The readiness of an entire ReadinessCheck or an individual resource ARN.
    """

    READY = 'READY'
    NOT_READY = 'NOT_READY'
    UNKNOWN = 'UNKNOWN'
    NOT_AUTHORIZED = 'NOT_AUTHORIZED'


class GetCellRequest(BaseModel):
    pass


class GetReadinessCheckRequest(BaseModel):
    pass


class GetReadinessCheckResourceStatusRequest(BaseModel):
    pass


class GetReadinessCheckStatusRequest(BaseModel):
    pass


class GetRecoveryGroupReadinessSummaryRequest(BaseModel):
    pass


class GetRecoveryGroupRequest(BaseModel):
    pass


class GetResourceSetRequest(BaseModel):
    pass


class ListCellsRequest(BaseModel):
    pass


class _ListOfCellOutput(BaseModel):
    __root__: List[CellOutput]


class ListCrossAccountAuthorizationsRequest(BaseModel):
    pass


class _ListOfCrossAccountAuthorization(BaseModel):
    __root__: List[CrossAccountAuthorization]


class ListReadinessChecksRequest(BaseModel):
    pass


class ListRecoveryGroupsRequest(BaseModel):
    pass


class ListResourceSetsRequest(BaseModel):
    pass


class _StringMax64(BaseModel):
    __root__: Annotated[str, Field(max_length=64)]


class ListRulesOutput(BaseModel):
    """
    A collection of rules used in a readiness check
    """

    ResourceType: _StringMax64
    RuleDescription: _StringMax256
    RuleId: _StringMax64


class ListRulesRequest(BaseModel):
    pass


class _ListOfListRulesOutput(BaseModel):
    __root__: List[ListRulesOutput]


class ListTagsForResourcesRequest(BaseModel):
    pass


class Message(BaseModel):
    """
    Information relating to readiness check status
    """

    MessageText: Optional[_String] = None


class NLBResource(BaseModel):
    """
    The NLB resource a DNS Target Resource points to
    """

    Arn: Optional[_String] = None


class R53ResourceRecord(BaseModel):
    """
    The Route 53 resource a DNS Target Resource record points to
    """

    DomainName: Optional[_String] = None
    RecordSetId: Optional[_String] = None


class ReadinessCheckOutput(BaseModel):
    """
    A resource used for checking the readiness of a Resource Set
    """

    ReadinessCheckArn: _StringMax256
    ReadinessCheckName: Optional[_StringMax64PatternAAZAZ09Z] = None
    ResourceSet: _StringMax64PatternAAZAZ09Z
    Tags: Optional[Tags] = None


class ReadinessCheckSummary(BaseModel):
    """
    Summary of ReadinessCheck status, paginated in GetRecoveryGroupReadinessSummary and GetCellReadinessSummary
    """

    Readiness: Optional[Readiness] = None
    ReadinessCheckName: Optional[_String] = None


class ReadinessCheckTimestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description='The time the Cell was last checked for readiness, in ISO-8601 format, UTC.'
        ),
    ]


class Recommendation(BaseModel):
    """
    Guidance for improving Recovery Group resilliancy
    """

    RecommendationText: _String


class RecoveryGroupOutput(BaseModel):
    """
    A Recovery Group generally containing multiple Cells
    """

    Cells: _ListOfString
    RecoveryGroupArn: _StringMax256
    RecoveryGroupName: _StringMax64PatternAAZAZ09Z
    Tags: Optional[Tags] = None


class ResourceResult(BaseModel):
    """
    Result with status for an individual resource.
    """

    ComponentId: Optional[_String] = None
    LastCheckedTimestamp: ReadinessCheckTimestamp
    Readiness: Readiness
    ResourceArn: Optional[_String] = None


class TagResourceRequest(BaseModel):
    Tags: Tags


class UntagResourceRequest(BaseModel):
    pass


class UpdateCellRequest(BaseModel):
    """
    Parameters to update for the Cell
    """

    Cells: _ListOfString


class UpdateReadinessCheckRequest(BaseModel):
    """
    The new Readiness Check values
    """

    ResourceSetName: _String


class UpdateRecoveryGroupRequest(BaseModel):
    """
    Parameters to update for the RecoveryGroup
    """

    Cells: _ListOfString


class CreateCellResponse(BaseModel):
    CellArn: Optional[_StringMax256] = None
    CellName: Optional[_StringMax64PatternAAZAZ09Z] = None
    Cells: Optional[_ListOfString] = None
    ParentReadinessScopes: Optional[_ListOfString] = None
    Tags: Optional[Tags] = None


class CreateCrossAccountAuthorizationResponse(BaseModel):
    CrossAccountAuthorization: Optional[CrossAccountAuthorization] = None


class CreateReadinessCheckResponse(BaseModel):
    ReadinessCheckArn: Optional[_StringMax256] = None
    ReadinessCheckName: Optional[_StringMax64PatternAAZAZ09Z] = None
    ResourceSet: Optional[_StringMax64PatternAAZAZ09Z] = None
    Tags: Optional[Tags] = None


class CreateRecoveryGroupResponse(BaseModel):
    Cells: Optional[_ListOfString] = None
    RecoveryGroupArn: Optional[_StringMax256] = None
    RecoveryGroupName: Optional[_StringMax64PatternAAZAZ09Z] = None
    Tags: Optional[Tags] = None


class GetCellResponse(CreateCellResponse):
    pass


class GetReadinessCheckResponse(CreateReadinessCheckResponse):
    pass


class GetRecoveryGroupResponse(CreateRecoveryGroupResponse):
    pass


class ListCellsResponse(BaseModel):
    Cells: Optional[_ListOfCellOutput] = None
    NextToken: Optional[_String] = None


class ListCrossAccountAuthorizationsResponse(BaseModel):
    CrossAccountAuthorizations: Optional[_ListOfCrossAccountAuthorization] = None
    NextToken: Optional[_String] = None


class ListRulesResponse(BaseModel):
    NextToken: Optional[_String] = None
    Rules: Optional[_ListOfListRulesOutput] = None


class ListTagsForResourcesResponse(BaseModel):
    Tags: Optional[Tags] = None


class UpdateCellResponse(CreateCellResponse):
    pass


class UpdateReadinessCheckResponse(CreateReadinessCheckResponse):
    pass


class UpdateRecoveryGroupResponse(CreateRecoveryGroupResponse):
    pass


class TargetResource(BaseModel):
    """
    The target resource the R53 record points to
    """

    NLBResource: Optional[NLBResource] = None
    R53Resource: Optional[R53ResourceRecord] = None


class DNSTargetResource(BaseModel):
    """
    A component for DNS/Routing Control Readiness Checks
    """

    DomainName: Optional[_String] = None
    HostedZoneArn: Optional[_String] = None
    RecordSetId: Optional[_String] = None
    RecordType: Optional[_String] = None
    TargetResource: Optional[TargetResource] = None


class _ListOfRecommendation(BaseModel):
    __root__: List[Recommendation]


class _ListOfReadinessCheckSummary(BaseModel):
    __root__: List[ReadinessCheckSummary]


class _ListOfMessage(BaseModel):
    __root__: List[Message]


class _ListOfResourceResult(BaseModel):
    __root__: List[ResourceResult]


class _ListOfReadinessCheckOutput(BaseModel):
    __root__: List[ReadinessCheckOutput]


class _ListOfRecoveryGroupOutput(BaseModel):
    __root__: List[RecoveryGroupOutput]


class RuleResult(BaseModel):
    """
    Result with status for an individual rule..
    """

    LastCheckedTimestamp: ReadinessCheckTimestamp
    Messages: _ListOfMessage
    Readiness: Readiness
    RuleId: _String


class Resource(BaseModel):
    """
    The resource element of a ResourceSet
    """

    ComponentId: Optional[_String] = None
    DnsTargetResource: Optional[DNSTargetResource] = None
    ReadinessScopes: Optional[_ListOfString] = None
    ResourceArn: Optional[_String] = None


class GetArchitectureRecommendationsResponse(BaseModel):
    LastAuditTimestamp: Optional[LastAuditTimestamp] = None
    NextToken: Optional[_String] = None
    Recommendations: Optional[_ListOfRecommendation] = None


class GetCellReadinessSummaryResponse(BaseModel):
    NextToken: Optional[_String] = None
    Readiness: Optional[Readiness] = None
    ReadinessChecks: Optional[_ListOfReadinessCheckSummary] = None


class GetReadinessCheckStatusResponse(BaseModel):
    Messages: Optional[_ListOfMessage] = None
    NextToken: Optional[_String] = None
    Readiness: Optional[Readiness] = None
    Resources: Optional[_ListOfResourceResult] = None


class GetRecoveryGroupReadinessSummaryResponse(GetCellReadinessSummaryResponse):
    pass


class ListReadinessChecksResponse(BaseModel):
    NextToken: Optional[_String] = None
    ReadinessChecks: Optional[_ListOfReadinessCheckOutput] = None


class ListRecoveryGroupsResponse(BaseModel):
    NextToken: Optional[_String] = None
    RecoveryGroups: Optional[_ListOfRecoveryGroupOutput] = None


class _ListOfResource(BaseModel):
    __root__: List[Resource]


class CreateResourceSetRequest(BaseModel):
    """
    The ResourceSet to create
    """

    ResourceSetName: _String
    ResourceSetType: _StringPatternAWSAZaZ09AZaZ09
    Resources: _ListOfResource
    Tags: Optional[Tags] = None


class _ListOfRuleResult(BaseModel):
    __root__: List[RuleResult]


class ResourceSetOutput(BaseModel):
    """
    A collection of resources of the same type
    """

    ResourceSetArn: _StringMax256
    ResourceSetName: _StringMax64PatternAAZAZ09Z
    ResourceSetType: _StringPatternAWSAZaZ09AZaZ09
    Resources: _ListOfResource
    Tags: Optional[Tags] = None


class UpdateResourceSetRequest(BaseModel):
    """
    configuration for the desired
    """

    ResourceSetType: _StringPatternAWSAZaZ09AZaZ09
    Resources: _ListOfResource


class CreateResourceSetResponse(BaseModel):
    ResourceSetArn: Optional[_StringMax256] = None
    ResourceSetName: Optional[_StringMax64PatternAAZAZ09Z] = None
    ResourceSetType: Optional[_StringPatternAWSAZaZ09AZaZ09] = None
    Resources: Optional[_ListOfResource] = None
    Tags: Optional[Tags] = None


class GetReadinessCheckResourceStatusResponse(BaseModel):
    NextToken: Optional[_String] = None
    Readiness: Optional[Readiness] = None
    Rules: Optional[_ListOfRuleResult] = None


class GetResourceSetResponse(CreateResourceSetResponse):
    pass


class UpdateResourceSetResponse(CreateResourceSetResponse):
    pass


class _ListOfResourceSetOutput(BaseModel):
    __root__: List[ResourceSetOutput]


class ListResourceSetsResponse(BaseModel):
    NextToken: Optional[_String] = None
    ResourceSets: Optional[_ListOfResourceSetOutput] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:46:22+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class InvalidInputException(BaseModel):
    __root__: Any


class ResourceAlreadyExistsException(InvalidInputException):
    pass


class AccountLimitExceededException(InvalidInputException):
    pass


class OAuthProviderException(InvalidInputException):
    pass


class ResourceNotFoundException(InvalidInputException):
    pass


class DeleteProjectOutput(BaseModel):
    pass


class DeleteReportOutput(DeleteProjectOutput):
    pass


class DeleteReportGroupOutput(DeleteProjectOutput):
    pass


class DeleteResourcePolicyOutput(DeleteProjectOutput):
    pass


class DeleteWebhookOutput(DeleteProjectOutput):
    pass


class InvalidateProjectCacheOutput(DeleteProjectOutput):
    pass


class ListCuratedEnvironmentImagesInput(BaseModel):
    pass


class ListSourceCredentialsInput(BaseModel):
    pass


class ArtifactNamespace(Enum):
    NONE = 'NONE'
    BUILD_ID = 'BUILD_ID'


class ArtifactPackaging(Enum):
    NONE = 'NONE'
    ZIP = 'ZIP'


class ArtifactsType(Enum):
    CODEPIPELINE = 'CODEPIPELINE'
    S3 = 'S3'
    NO_ARTIFACTS = 'NO_ARTIFACTS'


class AuthType(Enum):
    OAUTH = 'OAUTH'
    BASIC_AUTH = 'BASIC_AUTH'
    PERSONAL_ACCESS_TOKEN = 'PERSONAL_ACCESS_TOKEN'


class WrapperInt(BaseModel):
    __root__: int


class Boolean(BaseModel):
    __root__: bool


class BucketOwnerAccess(Enum):
    """
    <p>Specifies the bucket owner's access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.</p> <note> <p>To use this property, your CodeBuild service role must have the <code>s3:PutBucketAcl</code> permission. This permission allows CodeBuild to modify the access control list for the bucket.</p> </note> <p>This property can be one of the following values:</p> <dl> <dt>NONE</dt> <dd> <p>The bucket owner does not have access to the objects. This is the default.</p> </dd> <dt>READ_ONLY</dt> <dd> <p>The bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.</p> </dd> <dt>FULL</dt> <dd> <p>The bucket owner has full access to the objects. Object ownership is determined by the following criteria:</p> <ul> <li> <p>If the bucket is configured with the <b>Bucket owner preferred</b> setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket's policy.</p> </li> <li> <p>Otherwise, the uploading account retains ownership of the objects.</p> </li> </ul> <p>For more information about Amazon S3 object ownership, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html">Controlling ownership of uploaded objects using S3 Object Ownership</a> in the <i>Amazon Simple Storage Service User Guide</i>.</p> </dd> </dl>
    """

    NONE = 'NONE'
    READ_ONLY = 'READ_ONLY'
    FULL = 'FULL'


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class WrapperLong(WrapperInt):
    pass


class Timestamp(BaseModel):
    __root__: datetime


class String(BaseModel):
    __root__: str


class StatusType(Enum):
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    FAULT = 'FAULT'
    TIMED_OUT = 'TIMED_OUT'
    IN_PROGRESS = 'IN_PROGRESS'
    STOPPED = 'STOPPED'


class NetworkInterface(BaseModel):
    """
    Describes a network interface.
    """

    subnetId: Optional[NonEmptyString] = None
    networkInterfaceId: Optional[NonEmptyString] = None


class BuildReportArns(BaseModel):
    __root__: List[String]


class WrapperBoolean(Boolean):
    pass


class BuildBatchFilter(BaseModel):
    """
    Specifies filters when retrieving batch builds.
    """

    status: Optional[StatusType] = None


class BuildBatchPhaseType(Enum):
    SUBMITTED = 'SUBMITTED'
    DOWNLOAD_BATCHSPEC = 'DOWNLOAD_BATCHSPEC'
    IN_PROGRESS = 'IN_PROGRESS'
    COMBINE_ARTIFACTS = 'COMBINE_ARTIFACTS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    STOPPED = 'STOPPED'


class Identifiers(BaseModel):
    __root__: List[NonEmptyString]


class BuildNotDeleted(BaseModel):
    """
    Information about a build that could not be successfully deleted.
    """

    id: Optional[NonEmptyString] = None
    statusCode: Optional[String] = None


class BuildPhaseType(Enum):
    SUBMITTED = 'SUBMITTED'
    QUEUED = 'QUEUED'
    PROVISIONING = 'PROVISIONING'
    DOWNLOAD_SOURCE = 'DOWNLOAD_SOURCE'
    INSTALL = 'INSTALL'
    PRE_BUILD = 'PRE_BUILD'
    BUILD = 'BUILD'
    POST_BUILD = 'POST_BUILD'
    UPLOAD_ARTIFACTS = 'UPLOAD_ARTIFACTS'
    FINALIZING = 'FINALIZING'
    COMPLETED = 'COMPLETED'


class BuildStatusConfig(BaseModel):
    """
    Contains information that defines how the CodeBuild build project reports the build status to the source provider.
    """

    context: Optional[String] = None
    targetUrl: Optional[String] = None


class ResolvedArtifact(BaseModel):
    """
    Represents a resolved build artifact. A resolved artifact is an artifact that is built and deployed to the destination, such as Amazon S3.
    """

    type: Optional[ArtifactsType] = None
    location: Optional[String] = None
    identifier: Optional[String] = None


class ResolvedSecondaryArtifacts(BaseModel):
    __root__: List[ResolvedArtifact]


class CacheMode(Enum):
    LOCAL_DOCKER_LAYER_CACHE = 'LOCAL_DOCKER_LAYER_CACHE'
    LOCAL_SOURCE_CACHE = 'LOCAL_SOURCE_CACHE'
    LOCAL_CUSTOM_CACHE = 'LOCAL_CUSTOM_CACHE'


class CacheType(Enum):
    NO_CACHE = 'NO_CACHE'
    S3 = 'S3'
    LOCAL = 'LOCAL'


class LogsConfigStatusType(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class CloudWatchLogsConfig(BaseModel):
    """
    Information about CloudWatch Logs for a build project.
    """

    status: LogsConfigStatusType
    groupName: Optional[String] = None
    streamName: Optional[String] = None


class Percentage(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=100.0)]


class NonNegativeInt(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class CodeCoverage(BaseModel):
    """
    <p>Contains code coverage report information.</p> <p>Line coverage measures how many statements your tests cover. A statement is a single instruction, not including comments, conditionals, etc.</p> <p>Branch coverage determines if your tests cover every possible branch of a control structure, such as an <code>if</code> or <code>case</code> statement.</p>
    """

    id: Optional[NonEmptyString] = None
    reportARN: Optional[NonEmptyString] = None
    filePath: Optional[NonEmptyString] = None
    lineCoveragePercentage: Optional[Percentage] = None
    linesCovered: Optional[NonNegativeInt] = None
    linesMissed: Optional[NonNegativeInt] = None
    branchCoveragePercentage: Optional[Percentage] = None
    branchesCovered: Optional[NonNegativeInt] = None
    branchesMissed: Optional[NonNegativeInt] = None
    expired: Optional[Timestamp] = None


class CodeCoverageReportSummary(BaseModel):
    """
    <p>Contains a summary of a code coverage report.</p> <p>Line coverage measures how many statements your tests cover. A statement is a single instruction, not including comments, conditionals, etc.</p> <p>Branch coverage determines if your tests cover every possible branch of a control structure, such as an <code>if</code> or <code>case</code> statement.</p>
    """

    lineCoveragePercentage: Optional[Percentage] = None
    linesCovered: Optional[NonNegativeInt] = None
    linesMissed: Optional[NonNegativeInt] = None
    branchCoveragePercentage: Optional[Percentage] = None
    branchesCovered: Optional[NonNegativeInt] = None
    branchesMissed: Optional[NonNegativeInt] = None


class CodeCoverages(BaseModel):
    __root__: List[CodeCoverage]


class ComputeType(Enum):
    BUILD_GENERAL1_SMALL = 'BUILD_GENERAL1_SMALL'
    BUILD_GENERAL1_MEDIUM = 'BUILD_GENERAL1_MEDIUM'
    BUILD_GENERAL1_LARGE = 'BUILD_GENERAL1_LARGE'
    BUILD_GENERAL1_2XLARGE = 'BUILD_GENERAL1_2XLARGE'


class ProjectName(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=255, min_length=2, regex='[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}'),
    ]


class ProjectDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=0)]


class ProjectArtifacts(BaseModel):
    """
    Information about the build output artifacts for the build project.
    """

    type: ArtifactsType
    location: Optional[String] = None
    path: Optional[String] = None
    namespaceType: Optional[ArtifactNamespace] = None
    name: Optional[String] = None
    packaging: Optional[ArtifactPackaging] = None
    overrideArtifactName: Optional[WrapperBoolean] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    artifactIdentifier: Optional[String] = None
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None


class ProjectArtifactsList(BaseModel):
    __root__: Annotated[List[ProjectArtifacts], Field(max_items=12, min_items=0)]


class TimeOut(BaseModel):
    __root__: Annotated[int, Field(ge=5.0, le=480.0)]


class ReportGroupName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=2)]


class ReportType(Enum):
    TEST = 'TEST'
    CODE_COVERAGE = 'CODE_COVERAGE'


class WebhookBuildType(Enum):
    BUILD = 'BUILD'
    BUILD_BATCH = 'BUILD_BATCH'


class CredentialProviderType(Enum):
    SECRETS_MANAGER = 'SECRETS_MANAGER'


class PageSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class SortOrderType(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class ReportCodeCoverageSortByType(Enum):
    LINE_COVERAGE_PERCENTAGE = 'LINE_COVERAGE_PERCENTAGE'
    FILE_PATH = 'FILE_PATH'


class TestCaseFilter(BaseModel):
    """
    A filter used to return specific types of test cases. In order to pass the filter, the report must meet all of the filter properties.
    """

    status: Optional[String] = None
    keyword: Optional[String] = None


class ImageVersions(BuildReportArns):
    pass


class EnvironmentImage(BaseModel):
    """
    Information about a Docker image that is managed by CodeBuild.
    """

    name: Optional[String] = None
    description: Optional[String] = None
    versions: Optional[ImageVersions] = None


class EnvironmentImages(BaseModel):
    __root__: List[EnvironmentImage]


class LanguageType(Enum):
    JAVA = 'JAVA'
    PYTHON = 'PYTHON'
    NODE_JS = 'NODE_JS'
    RUBY = 'RUBY'
    GOLANG = 'GOLANG'
    DOCKER = 'DOCKER'
    ANDROID = 'ANDROID'
    DOTNET = 'DOTNET'
    BASE = 'BASE'
    PHP = 'PHP'


class EnvironmentLanguage(BaseModel):
    """
    A set of Docker images that are related by programming language and are managed by CodeBuild.
    """

    language: Optional[LanguageType] = None
    images: Optional[EnvironmentImages] = None


class EnvironmentLanguages(BaseModel):
    __root__: List[EnvironmentLanguage]


class PlatformType(Enum):
    DEBIAN = 'DEBIAN'
    AMAZON_LINUX = 'AMAZON_LINUX'
    UBUNTU = 'UBUNTU'
    WINDOWS_SERVER = 'WINDOWS_SERVER'


class EnvironmentPlatform(BaseModel):
    """
    A set of Docker images that are related by platform and are managed by CodeBuild.
    """

    platform: Optional[PlatformType] = None
    languages: Optional[EnvironmentLanguages] = None


class EnvironmentPlatforms(BaseModel):
    __root__: List[EnvironmentPlatform]


class EnvironmentType(Enum):
    WINDOWS_CONTAINER = 'WINDOWS_CONTAINER'
    LINUX_CONTAINER = 'LINUX_CONTAINER'
    LINUX_GPU_CONTAINER = 'LINUX_GPU_CONTAINER'
    ARM_CONTAINER = 'ARM_CONTAINER'
    WINDOWS_SERVER_2019_CONTAINER = 'WINDOWS_SERVER_2019_CONTAINER'


class EnvironmentVariableType(Enum):
    PLAINTEXT = 'PLAINTEXT'
    PARAMETER_STORE = 'PARAMETER_STORE'
    SECRETS_MANAGER = 'SECRETS_MANAGER'


class EnvironmentVariable(BaseModel):
    """
    Information about an environment variable for a build project or a build.
    """

    name: NonEmptyString
    value: String
    type: Optional[EnvironmentVariableType] = None


class EnvironmentVariables(BaseModel):
    __root__: List[EnvironmentVariable]


class ExportedEnvironmentVariable(BaseModel):
    """
    <p>Contains information about an exported environment variable. </p> <p>Exported environment variables are used in conjunction with CodePipeline to export environment variables from the current build stage to subsequent stages in the pipeline. For more information, see <a href="https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-variables.html">Working with variables</a> in the <i>CodePipeline User Guide</i>.</p> <note> <p> During a build, the value of a variable is available starting with the <code>install</code> phase. It can be updated between the start of the <code>install</code> phase and the end of the <code>post_build</code> phase. After the <code>post_build</code> phase ends, the value of exported variables cannot change.</p> </note>
    """

    name: Optional[NonEmptyString] = None
    value: Optional[String] = None


class FileSystemType(Enum):
    EFS = 'EFS'


class ReportGroupTrendFieldType(Enum):
    PASS_RATE = 'PASS_RATE'
    DURATION = 'DURATION'
    TOTAL = 'TOTAL'
    LINE_COVERAGE = 'LINE_COVERAGE'
    LINES_COVERED = 'LINES_COVERED'
    LINES_MISSED = 'LINES_MISSED'
    BRANCH_COVERAGE = 'BRANCH_COVERAGE'
    BRANCHES_COVERED = 'BRANCHES_COVERED'
    BRANCHES_MISSED = 'BRANCHES_MISSED'


class ReportGroupTrendStats(BaseModel):
    """
    Contains trend statistics for a set of reports. The actual values depend on the type of trend being collected. For more information, see .
    """

    average: Optional[String] = None
    max: Optional[String] = None
    min: Optional[String] = None


class GitCloneDepth(NonNegativeInt):
    pass


class GitSubmodulesConfig(BaseModel):
    """
    Information about the Git submodules configuration for an CodeBuild build project.
    """

    fetchSubmodules: WrapperBoolean


class ImagePullCredentialsType(Enum):
    CODEBUILD = 'CODEBUILD'
    SERVICE_ROLE = 'SERVICE_ROLE'


class SensitiveNonEmptyString(BaseModel):
    __root__: Annotated[SecretStr, Field(min_length=1)]


class ServerType(Enum):
    GITHUB = 'GITHUB'
    BITBUCKET = 'BITBUCKET'
    GITHUB_ENTERPRISE = 'GITHUB_ENTERPRISE'


class KeyInput(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=127, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=@+\\-]*)$'
        ),
    ]


class ProjectSortByType(Enum):
    NAME = 'NAME'
    CREATED_TIME = 'CREATED_TIME'
    LAST_MODIFIED_TIME = 'LAST_MODIFIED_TIME'


class SharedResourceSortByType(Enum):
    ARN = 'ARN'
    MODIFIED_TIME = 'MODIFIED_TIME'


class ProjectArns(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=100, min_items=1)]


class S3LogsConfig(BaseModel):
    """
    Information about S3 logs for a build project.
    """

    status: LogsConfigStatusType
    location: Optional[String] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None


class PhaseContext(BaseModel):
    """
    Additional information about a build phase that has an error. You can use this information for troubleshooting.
    """

    statusCode: Optional[String] = None
    message: Optional[String] = None


class ProjectBadge(BaseModel):
    """
    Information about the build badge for the build project.
    """

    badgeEnabled: Optional[Boolean] = None
    badgeRequestUrl: Optional[String] = None


class ProjectVisibilityType(Enum):
    """
    <p>Specifies the visibility of the project's builds. Possible values are:</p> <dl> <dt>PUBLIC_READ</dt> <dd> <p>The project builds are visible to the public.</p> </dd> <dt>PRIVATE</dt> <dd> <p>The project builds are not visible to the public.</p> </dd> </dl>
    """

    PUBLIC_READ = 'PUBLIC_READ'
    PRIVATE = 'PRIVATE'


class ProjectCacheModes(BaseModel):
    __root__: List[CacheMode]


class RegistryCredential(BaseModel):
    """
    <p> Information about credentials that provide access to a private Docker registry. When this is set: </p> <ul> <li> <p> <code>imagePullCredentialsType</code> must be set to <code>SERVICE_ROLE</code>. </p> </li> <li> <p> images cannot be curated or an Amazon ECR image.</p> </li> </ul> <p> For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/sample-private-registry.html">Private Registry with Secrets Manager Sample for CodeBuild</a>. </p>
    """

    credential: NonEmptyString
    credentialProvider: CredentialProviderType


class ProjectFileSystemLocation(BaseModel):
    """
    Information about a file system created by Amazon Elastic File System (EFS). For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html">What Is Amazon Elastic File System?</a>
    """

    type: Optional[FileSystemType] = None
    location: Optional[String] = None
    mountPoint: Optional[String] = None
    identifier: Optional[String] = None
    mountOptions: Optional[String] = None


class ProjectSourceVersion(BaseModel):
    """
    A source identifier and its corresponding version.
    """

    sourceIdentifier: String
    sourceVersion: String


class SourceType(Enum):
    CODECOMMIT = 'CODECOMMIT'
    CODEPIPELINE = 'CODEPIPELINE'
    GITHUB = 'GITHUB'
    S3 = 'S3'
    BITBUCKET = 'BITBUCKET'
    GITHUB_ENTERPRISE = 'GITHUB_ENTERPRISE'
    NO_SOURCE = 'NO_SOURCE'


class ReportStatusType(Enum):
    GENERATING = 'GENERATING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    INCOMPLETE = 'INCOMPLETE'
    DELETING = 'DELETING'


class ReportExportConfigType(Enum):
    S3 = 'S3'
    NO_EXPORT = 'NO_EXPORT'


class ReportGroupStatusType(Enum):
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'


class ReportWithRawData(BaseModel):
    """
    Contains the unmodified data for the report. For more information, see .
    """

    reportArn: Optional[NonEmptyString] = None
    data: Optional[String] = None


class ReportPackagingType(Enum):
    ZIP = 'ZIP'
    NONE = 'NONE'


class ReportStatusCounts(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class RetryBuildBatchType(Enum):
    RETRY_ALL_BUILDS = 'RETRY_ALL_BUILDS'
    RETRY_FAILED_BUILDS = 'RETRY_FAILED_BUILDS'


class SecurityGroupIds(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=5)]


class SourceAuthType(Enum):
    OAUTH = 'OAUTH'


class SourceCredentialsInfo(BaseModel):
    """
    Information about the credentials for a GitHub, GitHub Enterprise, or Bitbucket repository.
    """

    arn: Optional[NonEmptyString] = None
    serverType: Optional[ServerType] = None
    authType: Optional[AuthType] = None


class Subnets(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=16)]


class ValueInput(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=255, min_length=0, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=@+\\-]*)$'
        ),
    ]


class Tag(BaseModel):
    """
    <p>A tag, consisting of a key and a value.</p> <p>This tag is available for use by Amazon Web Services services that support tags in CodeBuild.</p>
    """

    key: Optional[KeyInput] = None
    value: Optional[ValueInput] = None


class TestCase(BaseModel):
    """
    Information about a test case created using a framework such as NUnit or Cucumber. A test case might be a unit test or a configuration test.
    """

    reportArn: Optional[NonEmptyString] = None
    testRawDataPath: Optional[String] = None
    prefix: Optional[String] = None
    name: Optional[String] = None
    status: Optional[String] = None
    durationInNanoSeconds: Optional[WrapperLong] = None
    message: Optional[String] = None
    expired: Optional[Timestamp] = None


class WebhookFilterType(Enum):
    EVENT = 'EVENT'
    BASE_REF = 'BASE_REF'
    HEAD_REF = 'HEAD_REF'
    ACTOR_ACCOUNT_ID = 'ACTOR_ACCOUNT_ID'
    FILE_PATH = 'FILE_PATH'
    COMMIT_MESSAGE = 'COMMIT_MESSAGE'


class DeleteBuildBatchInput(BaseModel):
    id: NonEmptyString


class DeleteProjectInput(BaseModel):
    name: NonEmptyString


class DeleteReportInput(BaseModel):
    arn: NonEmptyString


class DeleteReportGroupInput(BaseModel):
    arn: NonEmptyString
    deleteReports: Optional[Boolean] = None


class DeleteResourcePolicyInput(BaseModel):
    resourceArn: NonEmptyString


class DeleteSourceCredentialsOutput(BaseModel):
    arn: Optional[NonEmptyString] = None


class DeleteSourceCredentialsInput(BaseModel):
    arn: NonEmptyString


class DeleteWebhookInput(BaseModel):
    projectName: ProjectName


class DescribeCodeCoveragesOutput(BaseModel):
    nextToken: Optional[String] = None
    codeCoverages: Optional[CodeCoverages] = None


class DescribeCodeCoveragesInput(BaseModel):
    reportArn: NonEmptyString
    nextToken: Optional[String] = None
    maxResults: Optional[PageSize] = None
    sortOrder: Optional[SortOrderType] = None
    sortBy: Optional[ReportCodeCoverageSortByType] = None
    minLineCoveragePercentage: Optional[Percentage] = None
    maxLineCoveragePercentage: Optional[Percentage] = None


class DescribeTestCasesInput(BaseModel):
    reportArn: String
    nextToken: Optional[String] = None
    maxResults: Optional[PageSize] = None
    filter: Optional[TestCaseFilter] = None


class GetReportGroupTrendInput(BaseModel):
    reportGroupArn: NonEmptyString
    numOfReports: Optional[PageSize] = None
    trendField: ReportGroupTrendFieldType


class GetResourcePolicyOutput(BaseModel):
    policy: Optional[NonEmptyString] = None


class GetResourcePolicyInput(BaseModel):
    resourceArn: NonEmptyString


class ImportSourceCredentialsOutput(DeleteSourceCredentialsOutput):
    pass


class ImportSourceCredentialsInput(BaseModel):
    username: Optional[NonEmptyString] = None
    token: SensitiveNonEmptyString
    serverType: ServerType
    authType: AuthType
    shouldOverwrite: Optional[WrapperBoolean] = None


class InvalidateProjectCacheInput(BaseModel):
    projectName: NonEmptyString


class ListBuildBatchesInput(BaseModel):
    filter: Optional[BuildBatchFilter] = None
    maxResults: Optional[PageSize] = None
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[String] = None


class ListBuildBatchesForProjectInput(BaseModel):
    projectName: Optional[NonEmptyString] = None
    filter: Optional[BuildBatchFilter] = None
    maxResults: Optional[PageSize] = None
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[String] = None


class ListBuildsInput(BaseModel):
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[String] = None


class ListBuildsForProjectInput(BaseModel):
    projectName: NonEmptyString
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[String] = None


class ListCuratedEnvironmentImagesOutput(BaseModel):
    platforms: Optional[EnvironmentPlatforms] = None


class ListProjectsInput(BaseModel):
    sortBy: Optional[ProjectSortByType] = None
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[NonEmptyString] = None


class ListReportGroupsInput(BaseModel):
    sortOrder: Optional[SortOrderType] = None
    sortBy: Optional[ProjectSortByType] = None
    nextToken: Optional[String] = None
    maxResults: Optional[PageSize] = None


class ListSharedProjectsOutput(BaseModel):
    nextToken: Optional[String] = None
    projects: Optional[ProjectArns] = None


class ListSharedProjectsInput(BaseModel):
    sortBy: Optional[SharedResourceSortByType] = None
    sortOrder: Optional[SortOrderType] = None
    maxResults: Optional[PageSize] = None
    nextToken: Optional[NonEmptyString] = None


class ListSharedReportGroupsInput(BaseModel):
    sortOrder: Optional[SortOrderType] = None
    sortBy: Optional[SharedResourceSortByType] = None
    nextToken: Optional[String] = None
    maxResults: Optional[PageSize] = None


class PutResourcePolicyOutput(BaseModel):
    resourceArn: Optional[NonEmptyString] = None


class PutResourcePolicyInput(BaseModel):
    policy: NonEmptyString
    resourceArn: NonEmptyString


class RetryBuildInput(BaseModel):
    id: Optional[NonEmptyString] = None


class RetryBuildBatchInput(BaseModel):
    id: Optional[NonEmptyString] = None
    retryType: Optional[RetryBuildBatchType] = None


class StopBuildInput(BaseModel):
    id: NonEmptyString


class StopBuildBatchInput(BaseModel):
    id: NonEmptyString


class UpdateProjectVisibilityOutput(BaseModel):
    projectArn: Optional[NonEmptyString] = None
    publicProjectAlias: Optional[NonEmptyString] = None
    projectVisibility: Optional[ProjectVisibilityType] = None


class UpdateProjectVisibilityInput(BaseModel):
    projectArn: NonEmptyString
    projectVisibility: ProjectVisibilityType
    resourceAccessRole: Optional[NonEmptyString] = None


class BuildIds(ProjectArns):
    pass


class BuildsNotDeleted(BaseModel):
    __root__: List[BuildNotDeleted]


class BuildBatchIds(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=100, min_items=0)]


class ProjectNames(ProjectArns):
    pass


class ReportGroupArns(ProjectArns):
    pass


class ReportArns(ProjectArns):
    pass


class ComputeTypesAllowed(Identifiers):
    pass


class BatchRestrictions(BaseModel):
    """
    Specifies restrictions for the batch build.
    """

    maximumBuildsAllowed: Optional[WrapperInt] = None
    computeTypesAllowed: Optional[ComputeTypesAllowed] = None


class ProjectSecondarySourceVersions(BaseModel):
    __root__: Annotated[List[ProjectSourceVersion], Field(max_items=12, min_items=0)]


class BuildArtifacts(BaseModel):
    """
    Information about build output artifacts.
    """

    location: Optional[String] = None
    sha256sum: Optional[String] = None
    md5sum: Optional[String] = None
    overrideArtifactName: Optional[WrapperBoolean] = None
    encryptionDisabled: Optional[WrapperBoolean] = None
    artifactIdentifier: Optional[String] = None
    bucketOwnerAccess: Optional[BucketOwnerAccess] = None


class BuildArtifactsList(BaseModel):
    __root__: Annotated[List[BuildArtifacts], Field(max_items=12, min_items=0)]


class ProjectCache(BaseModel):
    """
    Information about the cache for the build project.
    """

    type: CacheType
    location: Optional[String] = None
    modes: Optional[ProjectCacheModes] = None


class ProjectEnvironment(BaseModel):
    """
    Information about the build environment of the build project.
    """

    type: EnvironmentType
    image: NonEmptyString
    computeType: ComputeType
    environmentVariables: Optional[EnvironmentVariables] = None
    privilegedMode: Optional[WrapperBoolean] = None
    certificate: Optional[String] = None
    registryCredential: Optional[RegistryCredential] = None
    imagePullCredentialsType: Optional[ImagePullCredentialsType] = None


class LogsLocation(BaseModel):
    """
    Information about build logs in CloudWatch Logs.
    """

    groupName: Optional[String] = None
    streamName: Optional[String] = None
    deepLink: Optional[String] = None
    s3DeepLink: Optional[String] = None
    cloudWatchLogsArn: Optional[String] = None
    s3LogsArn: Optional[String] = None
    cloudWatchLogs: Optional[CloudWatchLogsConfig] = None
    s3Logs: Optional[S3LogsConfig] = None


class VpcConfig(BaseModel):
    """
    Information about the VPC configuration that CodeBuild accesses.
    """

    vpcId: Optional[NonEmptyString] = None
    subnets: Optional[Subnets] = None
    securityGroupIds: Optional[SecurityGroupIds] = None


class ExportedEnvironmentVariables(BaseModel):
    __root__: List[ExportedEnvironmentVariable]


class ProjectFileSystemLocations(BaseModel):
    __root__: List[ProjectFileSystemLocation]


class DebugSession(BaseModel):
    """
    Contains information about the debug session for a build. For more information, see <a href="https://docs.aws.amazon.com/codebuild/latest/userguide/session-manager.html">Viewing a running build in Session Manager</a>.
    """

    sessionEnabled: Optional[WrapperBoolean] = None
    sessionTarget: Optional[NonEmptyString] = None


class LogsConfig(BaseModel):
    """
    Information about logs for a build project. These can be logs in CloudWatch Logs, built in a specified S3 bucket, or both.
    """

    cloudWatchLogs: Optional[CloudWatchLogsConfig] = None
    s3Logs: Optional[S3LogsConfig] = None


class ProjectBuildBatchConfig(BaseModel):
    """
    Contains configuration information about a batch build project.
    """

    serviceRole: Optional[NonEmptyString] = None
    combineArtifacts: Optional[WrapperBoolean] = None
    restrictions: Optional[BatchRestrictions] = None
    timeoutInMins: Optional[WrapperInt] = None


class PhaseContexts(BaseModel):
    __root__: List[PhaseContext]


class BuildBatchPhase(BaseModel):
    """
    Contains information about a stage for a batch build.
    """

    phaseType: Optional[BuildBatchPhaseType] = None
    phaseStatus: Optional[StatusType] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    durationInSeconds: Optional[WrapperLong] = None
    contexts: Optional[PhaseContexts] = None


class BuildSummary(BaseModel):
    """
    Contains summary information about a batch build group.
    """

    arn: Optional[String] = None
    requestedOn: Optional[Timestamp] = None
    buildStatus: Optional[StatusType] = None
    primaryArtifact: Optional[ResolvedArtifact] = None
    secondaryArtifacts: Optional[ResolvedSecondaryArtifacts] = None


class BuildSummaries(BaseModel):
    __root__: List[BuildSummary]


class BuildGroup(BaseModel):
    """
    Contains information about a batch build build group. Build groups are used to combine builds that can run in parallel, while still being able to set dependencies on other build groups.
    """

    identifier: Optional[String] = None
    dependsOn: Optional[Identifiers] = None
    ignoreFailure: Optional[Boolean] = None
    currentBuildSummary: Optional[BuildSummary] = None
    priorBuildSummaryList: Optional[BuildSummaries] = None


class BuildPhase(BaseModel):
    """
    Information about a stage for a build.
    """

    phaseType: Optional[BuildPhaseType] = None
    phaseStatus: Optional[StatusType] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    durationInSeconds: Optional[WrapperLong] = None
    contexts: Optional[PhaseContexts] = None


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50, min_items=0)]


class TestCases(BaseModel):
    __root__: List[TestCase]


class WebhookFilter(BaseModel):
    """
    A filter used to determine which webhooks trigger a build.
    """

    type: WebhookFilterType
    pattern: String
    excludeMatchedPattern: Optional[WrapperBoolean] = None


class FilterGroup(BaseModel):
    __root__: List[WebhookFilter]


class ReportGroupTrendRawDataList(BaseModel):
    __root__: List[ReportWithRawData]


class ReportFilter(BaseModel):
    """
    A filter used to return reports with the status specified by the input <code>status</code> parameter.
    """

    status: Optional[ReportStatusType] = None


class SourceCredentialsInfos(BaseModel):
    __root__: List[SourceCredentialsInfo]


class SourceAuth(BaseModel):
    """
    <p>Information about the authorization settings for CodeBuild to access the source code to be built.</p> <p>This information is for the CodeBuild console's use only. Your code should not get or set this information directly.</p>
    """

    type: SourceAuthType
    resource: Optional[String] = None


class TestReportSummary(BaseModel):
    """
    Information about a test report.
    """

    total: WrapperInt
    statusCounts: ReportStatusCounts
    durationInNanoSeconds: WrapperLong


class S3ReportExportConfig(BaseModel):
    """
    Information about the S3 bucket where the raw data of a report are exported.
    """

    bucket: Optional[NonEmptyString] = None
    bucketOwner: Optional[String] = None
    path: Optional[String] = None
    packaging: Optional[ReportPackagingType] = None
    encryptionKey: Optional[NonEmptyString] = None
    encryptionDisabled: Optional[WrapperBoolean] = None


class BatchDeleteBuildsOutput(BaseModel):
    buildsDeleted: Optional[BuildIds] = None
    buildsNotDeleted: Optional[BuildsNotDeleted] = None


class BatchDeleteBuildsInput(BaseModel):
    ids: BuildIds


class BatchGetBuildBatchesInput(BaseModel):
    ids: BuildBatchIds


class BatchGetBuildsInput(BaseModel):
    ids: BuildIds


class BatchGetProjectsInput(BaseModel):
    names: ProjectNames


class BatchGetReportGroupsInput(BaseModel):
    reportGroupArns: ReportGroupArns


class BatchGetReportsInput(BaseModel):
    reportArns: ReportArns


class DeleteBuildBatchOutput(BaseModel):
    statusCode: Optional[String] = None
    buildsDeleted: Optional[BuildIds] = None
    buildsNotDeleted: Optional[BuildsNotDeleted] = None


class DescribeTestCasesOutput(BaseModel):
    nextToken: Optional[String] = None
    testCases: Optional[TestCases] = None


class GetReportGroupTrendOutput(BaseModel):
    stats: Optional[ReportGroupTrendStats] = None
    rawData: Optional[ReportGroupTrendRawDataList] = None


class ListBuildBatchesOutput(BaseModel):
    ids: Optional[BuildBatchIds] = None
    nextToken: Optional[String] = None


class ListBuildBatchesForProjectOutput(ListBuildBatchesOutput):
    pass


class ListBuildsOutput(BaseModel):
    ids: Optional[BuildIds] = None
    nextToken: Optional[String] = None


class ListBuildsForProjectOutput(ListBuildsOutput):
    pass


class ListProjectsOutput(BaseModel):
    nextToken: Optional[String] = None
    projects: Optional[ProjectNames] = None


class ListReportGroupsOutput(BaseModel):
    nextToken: Optional[String] = None
    reportGroups: Optional[ReportGroupArns] = None


class ListReportsOutput(BaseModel):
    nextToken: Optional[String] = None
    reports: Optional[ReportArns] = None


class ListReportsInput(BaseModel):
    sortOrder: Optional[SortOrderType] = None
    nextToken: Optional[String] = None
    maxResults: Optional[PageSize] = None
    filter: Optional[ReportFilter] = None


class ListReportsForReportGroupOutput(ListReportsOutput):
    pass


class ListReportsForReportGroupInput(BaseModel):
    reportGroupArn: String
    nextToken: Optional[String] = None
    sortOrder: Optional[SortOrderType] = None
    maxResults: Optional[PageSize] = None
    filter: Optional[ReportFilter] = None


class ListSharedReportGroupsOutput(ListReportGroupsOutput):
    pass


class ListSourceCredentialsOutput(BaseModel):
    sourceCredentialsInfos: Optional[SourceCredentialsInfos] = None


class BuildPhases(BaseModel):
    __root__: List[BuildPhase]


class ProjectSource(BaseModel):
    """
    Information about the build input source code for the build project.
    """

    type: SourceType
    location: Optional[String] = None
    gitCloneDepth: Optional[GitCloneDepth] = None
    gitSubmodulesConfig: Optional[GitSubmodulesConfig] = None
    buildspec: Optional[String] = None
    auth: Optional[SourceAuth] = None
    reportBuildStatus: Optional[WrapperBoolean] = None
    buildStatusConfig: Optional[BuildStatusConfig] = None
    insecureSsl: Optional[WrapperBoolean] = None
    sourceIdentifier: Optional[String] = None


class ProjectSources(BaseModel):
    __root__: Annotated[List[ProjectSource], Field(max_items=12, min_items=0)]


class Build(BaseModel):
    """
    Information about a build.
    """

    id: Optional[NonEmptyString] = None
    arn: Optional[NonEmptyString] = None
    buildNumber: Optional[WrapperLong] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    currentPhase: Optional[String] = None
    buildStatus: Optional[StatusType] = None
    sourceVersion: Optional[NonEmptyString] = None
    resolvedSourceVersion: Optional[NonEmptyString] = None
    projectName: Optional[NonEmptyString] = None
    phases: Optional[BuildPhases] = None
    source: Optional[ProjectSource] = None
    secondarySources: Optional[ProjectSources] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    artifacts: Optional[BuildArtifacts] = None
    secondaryArtifacts: Optional[BuildArtifactsList] = None
    cache: Optional[ProjectCache] = None
    environment: Optional[ProjectEnvironment] = None
    serviceRole: Optional[NonEmptyString] = None
    logs: Optional[LogsLocation] = None
    timeoutInMinutes: Optional[WrapperInt] = None
    queuedTimeoutInMinutes: Optional[WrapperInt] = None
    buildComplete: Optional[Boolean] = None
    initiator: Optional[String] = None
    vpcConfig: Optional[VpcConfig] = None
    networkInterface: Optional[NetworkInterface] = None
    encryptionKey: Optional[NonEmptyString] = None
    exportedEnvironmentVariables: Optional[ExportedEnvironmentVariables] = None
    reportArns: Optional[BuildReportArns] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    debugSession: Optional[DebugSession] = None
    buildBatchArn: Optional[String] = None


class BuildBatchPhases(BaseModel):
    __root__: List[BuildBatchPhase]


class BuildGroups(BaseModel):
    __root__: List[BuildGroup]


class BuildBatch(BaseModel):
    """
    Contains information about a batch build.
    """

    id: Optional[NonEmptyString] = None
    arn: Optional[NonEmptyString] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    currentPhase: Optional[String] = None
    buildBatchStatus: Optional[StatusType] = None
    sourceVersion: Optional[NonEmptyString] = None
    resolvedSourceVersion: Optional[NonEmptyString] = None
    projectName: Optional[NonEmptyString] = None
    phases: Optional[BuildBatchPhases] = None
    source: Optional[ProjectSource] = None
    secondarySources: Optional[ProjectSources] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    artifacts: Optional[BuildArtifacts] = None
    secondaryArtifacts: Optional[BuildArtifactsList] = None
    cache: Optional[ProjectCache] = None
    environment: Optional[ProjectEnvironment] = None
    serviceRole: Optional[NonEmptyString] = None
    logConfig: Optional[LogsConfig] = None
    buildTimeoutInMinutes: Optional[WrapperInt] = None
    queuedTimeoutInMinutes: Optional[WrapperInt] = None
    complete: Optional[Boolean] = None
    initiator: Optional[String] = None
    vpcConfig: Optional[VpcConfig] = None
    encryptionKey: Optional[NonEmptyString] = None
    buildBatchNumber: Optional[WrapperLong] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    buildGroups: Optional[BuildGroups] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None


class ReportExportConfig(BaseModel):
    """
    Information about the location where the run of a report is exported.
    """

    exportConfigType: Optional[ReportExportConfigType] = None
    s3Destination: Optional[S3ReportExportConfig] = None


class ReportGroup(BaseModel):
    """
    A series of reports. Each report contains information about the results from running a series of test cases. You specify the test cases for a report group in the buildspec for a build project using one or more paths to the test case files.
    """

    arn: Optional[NonEmptyString] = None
    name: Optional[ReportGroupName] = None
    type: Optional[ReportType] = None
    exportConfig: Optional[ReportExportConfig] = None
    created: Optional[Timestamp] = None
    lastModified: Optional[Timestamp] = None
    tags: Optional[TagList] = None
    status: Optional[ReportGroupStatusType] = None


class FilterGroups(BaseModel):
    __root__: List[FilterGroup]


class Webhook(BaseModel):
    """
    Information about a webhook that connects repository events to a build project in CodeBuild.
    """

    url: Optional[NonEmptyString] = None
    payloadUrl: Optional[NonEmptyString] = None
    secret: Optional[NonEmptyString] = None
    branchFilter: Optional[String] = None
    filterGroups: Optional[FilterGroups] = None
    buildType: Optional[WebhookBuildType] = None
    lastModifiedSecret: Optional[Timestamp] = None


class Report(BaseModel):
    """
    Information about the results from running a series of test cases during the run of a build project. The test cases are specified in the buildspec for the build project using one or more paths to the test case files. You can specify any type of tests you want, such as unit tests, integration tests, and functional tests.
    """

    arn: Optional[NonEmptyString] = None
    type: Optional[ReportType] = None
    name: Optional[String] = None
    reportGroupArn: Optional[NonEmptyString] = None
    executionId: Optional[String] = None
    status: Optional[ReportStatusType] = None
    created: Optional[Timestamp] = None
    expired: Optional[Timestamp] = None
    exportConfig: Optional[ReportExportConfig] = None
    truncated: Optional[WrapperBoolean] = None
    testSummary: Optional[TestReportSummary] = None
    codeCoverageSummary: Optional[CodeCoverageReportSummary] = None


class CreateProjectInput(BaseModel):
    name: ProjectName
    description: Optional[ProjectDescription] = None
    source: ProjectSource
    secondarySources: Optional[ProjectSources] = None
    sourceVersion: Optional[String] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    artifacts: ProjectArtifacts
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    cache: Optional[ProjectCache] = None
    environment: ProjectEnvironment
    serviceRole: NonEmptyString
    timeoutInMinutes: Optional[TimeOut] = None
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    encryptionKey: Optional[NonEmptyString] = None
    tags: Optional[TagList] = None
    vpcConfig: Optional[VpcConfig] = None
    badgeEnabled: Optional[WrapperBoolean] = None
    logsConfig: Optional[LogsConfig] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    concurrentBuildLimit: Optional[WrapperInt] = None


class CreateReportGroupOutput(BaseModel):
    reportGroup: Optional[ReportGroup] = None


class CreateReportGroupInput(BaseModel):
    name: ReportGroupName
    type: ReportType
    exportConfig: ReportExportConfig
    tags: Optional[TagList] = None


class CreateWebhookOutput(BaseModel):
    webhook: Optional[Webhook] = None


class CreateWebhookInput(BaseModel):
    projectName: ProjectName
    branchFilter: Optional[String] = None
    filterGroups: Optional[FilterGroups] = None
    buildType: Optional[WebhookBuildType] = None


class RetryBuildOutput(BaseModel):
    build: Optional[Build] = None


class RetryBuildBatchOutput(BaseModel):
    buildBatch: Optional[BuildBatch] = None


class StartBuildOutput(RetryBuildOutput):
    pass


class StartBuildInput(BaseModel):
    projectName: NonEmptyString
    secondarySourcesOverride: Optional[ProjectSources] = None
    secondarySourcesVersionOverride: Optional[ProjectSecondarySourceVersions] = None
    sourceVersion: Optional[String] = None
    artifactsOverride: Optional[ProjectArtifacts] = None
    secondaryArtifactsOverride: Optional[ProjectArtifactsList] = None
    environmentVariablesOverride: Optional[EnvironmentVariables] = None
    sourceTypeOverride: Optional[SourceType] = None
    sourceLocationOverride: Optional[String] = None
    sourceAuthOverride: Optional[SourceAuth] = None
    gitCloneDepthOverride: Optional[GitCloneDepth] = None
    gitSubmodulesConfigOverride: Optional[GitSubmodulesConfig] = None
    buildspecOverride: Optional[String] = None
    insecureSslOverride: Optional[WrapperBoolean] = None
    reportBuildStatusOverride: Optional[WrapperBoolean] = None
    buildStatusConfigOverride: Optional[BuildStatusConfig] = None
    environmentTypeOverride: Optional[EnvironmentType] = None
    imageOverride: Optional[NonEmptyString] = None
    computeTypeOverride: Optional[ComputeType] = None
    certificateOverride: Optional[String] = None
    cacheOverride: Optional[ProjectCache] = None
    serviceRoleOverride: Optional[NonEmptyString] = None
    privilegedModeOverride: Optional[WrapperBoolean] = None
    timeoutInMinutesOverride: Optional[TimeOut] = None
    queuedTimeoutInMinutesOverride: Optional[TimeOut] = None
    encryptionKeyOverride: Optional[NonEmptyString] = None
    logsConfigOverride: Optional[LogsConfig] = None
    registryCredentialOverride: Optional[RegistryCredential] = None
    imagePullCredentialsTypeOverride: Optional[ImagePullCredentialsType] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None


class StartBuildBatchOutput(RetryBuildBatchOutput):
    pass


class StartBuildBatchInput(BaseModel):
    projectName: NonEmptyString
    secondarySourcesOverride: Optional[ProjectSources] = None
    secondarySourcesVersionOverride: Optional[ProjectSecondarySourceVersions] = None
    sourceVersion: Optional[String] = None
    artifactsOverride: Optional[ProjectArtifacts] = None
    secondaryArtifactsOverride: Optional[ProjectArtifactsList] = None
    environmentVariablesOverride: Optional[EnvironmentVariables] = None
    sourceTypeOverride: Optional[SourceType] = None
    sourceLocationOverride: Optional[String] = None
    sourceAuthOverride: Optional[SourceAuth] = None
    gitCloneDepthOverride: Optional[GitCloneDepth] = None
    gitSubmodulesConfigOverride: Optional[GitSubmodulesConfig] = None
    buildspecOverride: Optional[String] = None
    insecureSslOverride: Optional[WrapperBoolean] = None
    reportBuildBatchStatusOverride: Optional[WrapperBoolean] = None
    environmentTypeOverride: Optional[EnvironmentType] = None
    imageOverride: Optional[NonEmptyString] = None
    computeTypeOverride: Optional[ComputeType] = None
    certificateOverride: Optional[String] = None
    cacheOverride: Optional[ProjectCache] = None
    serviceRoleOverride: Optional[NonEmptyString] = None
    privilegedModeOverride: Optional[WrapperBoolean] = None
    buildTimeoutInMinutesOverride: Optional[TimeOut] = None
    queuedTimeoutInMinutesOverride: Optional[TimeOut] = None
    encryptionKeyOverride: Optional[NonEmptyString] = None
    logsConfigOverride: Optional[LogsConfig] = None
    registryCredentialOverride: Optional[RegistryCredential] = None
    imagePullCredentialsTypeOverride: Optional[ImagePullCredentialsType] = None
    buildBatchConfigOverride: Optional[ProjectBuildBatchConfig] = None
    debugSessionEnabled: Optional[WrapperBoolean] = None


class StopBuildOutput(RetryBuildOutput):
    pass


class StopBuildBatchOutput(RetryBuildBatchOutput):
    pass


class UpdateProjectInput(BaseModel):
    name: NonEmptyString
    description: Optional[ProjectDescription] = None
    source: Optional[ProjectSource] = None
    secondarySources: Optional[ProjectSources] = None
    sourceVersion: Optional[String] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    artifacts: Optional[ProjectArtifacts] = None
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    cache: Optional[ProjectCache] = None
    environment: Optional[ProjectEnvironment] = None
    serviceRole: Optional[NonEmptyString] = None
    timeoutInMinutes: Optional[TimeOut] = None
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    encryptionKey: Optional[NonEmptyString] = None
    tags: Optional[TagList] = None
    vpcConfig: Optional[VpcConfig] = None
    badgeEnabled: Optional[WrapperBoolean] = None
    logsConfig: Optional[LogsConfig] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    concurrentBuildLimit: Optional[WrapperInt] = None


class UpdateReportGroupOutput(CreateReportGroupOutput):
    pass


class UpdateReportGroupInput(BaseModel):
    arn: NonEmptyString
    exportConfig: Optional[ReportExportConfig] = None
    tags: Optional[TagList] = None


class UpdateWebhookOutput(CreateWebhookOutput):
    pass


class UpdateWebhookInput(BaseModel):
    projectName: ProjectName
    branchFilter: Optional[String] = None
    rotateSecret: Optional[Boolean] = None
    filterGroups: Optional[FilterGroups] = None
    buildType: Optional[WebhookBuildType] = None


class BuildBatches(BaseModel):
    __root__: Annotated[List[BuildBatch], Field(max_items=100, min_items=0)]


class Builds(BaseModel):
    __root__: List[Build]


class ReportGroups(BaseModel):
    __root__: Annotated[List[ReportGroup], Field(max_items=100, min_items=1)]


class Reports(BaseModel):
    __root__: Annotated[List[Report], Field(max_items=100, min_items=1)]


class Project(BaseModel):
    """
    Information about a build project.
    """

    name: Optional[ProjectName] = None
    arn: Optional[String] = None
    description: Optional[ProjectDescription] = None
    source: Optional[ProjectSource] = None
    secondarySources: Optional[ProjectSources] = None
    sourceVersion: Optional[String] = None
    secondarySourceVersions: Optional[ProjectSecondarySourceVersions] = None
    artifacts: Optional[ProjectArtifacts] = None
    secondaryArtifacts: Optional[ProjectArtifactsList] = None
    cache: Optional[ProjectCache] = None
    environment: Optional[ProjectEnvironment] = None
    serviceRole: Optional[NonEmptyString] = None
    timeoutInMinutes: Optional[TimeOut] = None
    queuedTimeoutInMinutes: Optional[TimeOut] = None
    encryptionKey: Optional[NonEmptyString] = None
    tags: Optional[TagList] = None
    created: Optional[Timestamp] = None
    lastModified: Optional[Timestamp] = None
    webhook: Optional[Webhook] = None
    vpcConfig: Optional[VpcConfig] = None
    badge: Optional[ProjectBadge] = None
    logsConfig: Optional[LogsConfig] = None
    fileSystemLocations: Optional[ProjectFileSystemLocations] = None
    buildBatchConfig: Optional[ProjectBuildBatchConfig] = None
    concurrentBuildLimit: Optional[WrapperInt] = None
    projectVisibility: Optional[ProjectVisibilityType] = None
    publicProjectAlias: Optional[NonEmptyString] = None
    resourceAccessRole: Optional[NonEmptyString] = None


class BatchGetBuildBatchesOutput(BaseModel):
    buildBatches: Optional[BuildBatches] = None
    buildBatchesNotFound: Optional[BuildBatchIds] = None


class BatchGetBuildsOutput(BaseModel):
    builds: Optional[Builds] = None
    buildsNotFound: Optional[BuildIds] = None


class BatchGetReportGroupsOutput(BaseModel):
    reportGroups: Optional[ReportGroups] = None
    reportGroupsNotFound: Optional[ReportGroupArns] = None


class BatchGetReportsOutput(BaseModel):
    reports: Optional[Reports] = None
    reportsNotFound: Optional[ReportArns] = None


class CreateProjectOutput(BaseModel):
    project: Optional[Project] = None


class UpdateProjectOutput(CreateProjectOutput):
    pass


class Projects(BaseModel):
    __root__: List[Project]


class BatchGetProjectsOutput(BaseModel):
    projects: Optional[Projects] = None
    projectsNotFound: Optional[ProjectNames] = None

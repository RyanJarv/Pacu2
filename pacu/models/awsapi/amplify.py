# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:44:47+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class EnvValue(BaseModel):
    __root__: Annotated[str, Field(max_length=1000)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class AutoBranchCreationPattern(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class Stage(Enum):
    PRODUCTION = 'PRODUCTION'
    BETA = 'BETA'
    DEVELOPMENT = 'DEVELOPMENT'
    EXPERIMENTAL = 'EXPERIMENTAL'
    PULL_REQUEST = 'PULL_REQUEST'


class Framework(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class EnableAutoBuild(BaseModel):
    __root__: bool


class EnvironmentVariables(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class BasicAuthCredentials(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2000)]


class EnableBasicAuth(EnableAutoBuild):
    pass


class EnablePerformanceMode(EnableAutoBuild):
    pass


class BuildSpec(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description=' The build specification (build spec) file for an Amplify app build. ',
            max_length=25000,
            min_length=1,
        ),
    ]


class EnablePullRequestPreview(EnableAutoBuild):
    pass


class PullRequestEnvironmentName(BaseModel):
    __root__: Annotated[str, Field(max_length=20)]


class BadRequestException(BaseModel):
    __root__: Any


class UnauthorizedException(BadRequestException):
    pass


class InternalFailureException(BadRequestException):
    pass


class LimitExceededException(BadRequestException):
    pass


class DependentServiceFailureException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class MD5Hash(BaseModel):
    __root__: Annotated[str, Field(max_length=32)]


class AutoSubDomainCreationPattern(AutoBranchCreationPattern):
    pass


class ResourceNotFoundException(BadRequestException):
    pass


class TagResourceResponse(BaseModel):
    """
    The response for the tag resource request.
    """

    pass


class UntagResourceResponse(TagResourceResponse):
    """
    The response for the untag resource request.
    """

    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class AccessToken(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=255, min_length=1)]


class ActiveJobId(EnvValue):
    pass


class AppId(BaseModel):
    __root__: Annotated[str, Field(max_length=20, min_length=1, regex='d[a-z0-9]+')]


class AppArn(EnvValue):
    pass


class Name(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Description(EnvValue):
    pass


class Repository(EnvValue):
    pass


class Platform(Enum):
    WEB = 'WEB'


class CreateTime(BaseModel):
    __root__: datetime


class UpdateTime(CreateTime):
    pass


class ServiceRoleArn(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class DefaultDomain(ServiceRoleArn):
    pass


class EnableBranchAutoBuild(EnableAutoBuild):
    pass


class EnableBranchAutoDeletion(EnableAutoBuild):
    pass


class CustomHeaders(BaseModel):
    __root__: Annotated[str, Field(max_length=25000, min_length=1)]


class EnableAutoBranchCreation(EnableAutoBuild):
    pass


class AutoBranchCreationPatterns(BaseModel):
    __root__: List[AutoBranchCreationPattern]


class AutoBranchCreationConfig(BaseModel):
    """
    Describes the automated branch creation configuration.
    """

    stage: Optional[Stage] = None
    framework: Optional[Framework] = None
    enableAutoBuild: Optional[EnableAutoBuild] = None
    environmentVariables: Optional[EnvironmentVariables] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    enableBasicAuth: Optional[EnableBasicAuth] = None
    enablePerformanceMode: Optional[EnablePerformanceMode] = None
    buildSpec: Optional[BuildSpec] = None
    enablePullRequestPreview: Optional[EnablePullRequestPreview] = None
    pullRequestEnvironmentName: Optional[PullRequestEnvironmentName] = None


class ArtifactFileName(EnvValue):
    pass


class ArtifactId(Framework):
    pass


class Artifact(BaseModel):
    """
    Describes an artifact.
    """

    artifactFileName: ArtifactFileName
    artifactId: ArtifactId


class ArtifactUrl(EnvValue):
    pass


class Artifacts(BaseModel):
    __root__: List[Artifact]


class ArtifactsUrl(EnvValue):
    pass


class AssociatedResource(AutoBranchCreationPattern):
    pass


class AssociatedResources(BaseModel):
    __root__: List[AssociatedResource]


class AutoSubDomainCreationPatterns(BaseModel):
    __root__: List[AutoSubDomainCreationPattern]


class AutoSubDomainIAMRole(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1000, regex='^$|^arn:aws:iam::\\d{12}:role.+')
    ]


class BackendEnvironmentArn(ServiceRoleArn):
    pass


class EnvironmentName(Name):
    pass


class StackName(Name):
    pass


class DeploymentArtifacts(ServiceRoleArn):
    pass


class BackendEnvironment(BaseModel):
    """
    Describes the backend environment for an Amplify app.
    """

    backendEnvironmentArn: BackendEnvironmentArn
    environmentName: EnvironmentName
    stackName: Optional[StackName] = None
    deploymentArtifacts: Optional[DeploymentArtifacts] = None
    createTime: CreateTime
    updateTime: UpdateTime


class BackendEnvironments(BaseModel):
    __root__: List[BackendEnvironment]


class BranchArn(EnvValue):
    pass


class BranchName(Name):
    pass


class DisplayName(Framework):
    pass


class EnableNotification(EnableAutoBuild):
    pass


class TotalNumberOfJobs(EnvValue):
    pass


class ThumbnailUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=2000, min_length=1)]


class TTL(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description=' The content Time to Live (TTL) for the website in seconds. '
        ),
    ]


class CertificateVerificationDNSRecord(EnvValue):
    pass


class CommitId(Framework):
    pass


class CommitMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=10000)]


class CommitTime(CreateTime):
    pass


class Condition(AutoBranchCreationPattern):
    pass


class Context(BaseModel):
    __root__: str


class OauthToken(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1000)]


class CreateBackendEnvironmentRequest(BaseModel):
    """
    The request structure for the backend environment create request.
    """

    environmentName: EnvironmentName
    stackName: Optional[StackName] = None
    deploymentArtifacts: Optional[DeploymentArtifacts] = None


class CreateBranchRequest(BaseModel):
    """
    The request structure for the create branch request.
    """

    branchName: BranchName
    description: Optional[Description] = None
    stage: Optional[Stage] = None
    framework: Optional[Framework] = None
    enableNotification: Optional[EnableNotification] = None
    enableAutoBuild: Optional[EnableAutoBuild] = None
    environmentVariables: Optional[EnvironmentVariables] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    enableBasicAuth: Optional[EnableBasicAuth] = None
    enablePerformanceMode: Optional[EnablePerformanceMode] = None
    tags: Optional[TagMap] = None
    buildSpec: Optional[BuildSpec] = None
    ttl: Optional[TTL] = None
    displayName: Optional[DisplayName] = None
    enablePullRequestPreview: Optional[EnablePullRequestPreview] = None
    pullRequestEnvironmentName: Optional[PullRequestEnvironmentName] = None
    backendEnvironmentArn: Optional[BackendEnvironmentArn] = None


class FileMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateDeploymentRequest(BaseModel):
    """
    The request structure for the create a new deployment request.
    """

    fileMap: Optional[FileMap] = None


class JobId(Framework):
    pass


class FileUploadUrls(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class UploadUrl(EnvValue):
    pass


class DomainName(Framework):
    pass


class EnableAutoSubDomain(EnableAutoBuild):
    pass


class CreateWebhookRequest(BaseModel):
    """
    The request structure for the create webhook request.
    """

    branchName: BranchName
    description: Optional[Description] = None


class CustomDomain(Framework):
    pass


class Source(AutoBranchCreationPattern):
    pass


class Target(AutoBranchCreationPattern):
    pass


class Status(BaseModel):
    __root__: Annotated[str, Field(max_length=7, min_length=3)]


class DNSRecord(EnvValue):
    pass


class DeleteAppRequest(BaseModel):
    """
    Describes the request structure for the delete app request.
    """

    pass


class DeleteBackendEnvironmentRequest(BaseModel):
    """
    The request structure for the delete backend environment request.
    """

    pass


class DeleteBranchRequest(BaseModel):
    """
    The request structure for the delete branch request.
    """

    pass


class DeleteDomainAssociationRequest(BaseModel):
    """
    The request structure for the delete domain association request.
    """

    pass


class DeleteJobRequest(BaseModel):
    """
    The request structure for the delete job request.
    """

    pass


class WebhookId(Framework):
    pass


class DeleteWebhookRequest(BaseModel):
    """
    The request structure for the delete webhook request.
    """

    pass


class DomainAssociationArn(EnvValue):
    pass


class DomainStatus(Enum):
    PENDING_VERIFICATION = 'PENDING_VERIFICATION'
    IN_PROGRESS = 'IN_PROGRESS'
    AVAILABLE = 'AVAILABLE'
    PENDING_DEPLOYMENT = 'PENDING_DEPLOYMENT'
    FAILED = 'FAILED'
    CREATING = 'CREATING'
    REQUESTING_CERTIFICATE = 'REQUESTING_CERTIFICATE'
    UPDATING = 'UPDATING'


class StatusReason(EnvValue):
    pass


class DomainPrefix(Framework):
    pass


class EndTime(CreateTime):
    pass


class EnvKey(Framework):
    pass


class FileName(Framework):
    pass


class StartTime(CreateTime):
    pass


class GenerateAccessLogsRequest(BaseModel):
    """
    The request structure for the generate access logs request.
    """

    startTime: Optional[StartTime] = None
    endTime: Optional[EndTime] = None
    domainName: DomainName


class LogUrl(EnvValue):
    pass


class GetAppRequest(BaseModel):
    """
    The request structure for the get app request.
    """

    pass


class GetArtifactUrlRequest(BaseModel):
    """
    Returns the request structure for the get artifact request.
    """

    pass


class GetBackendEnvironmentRequest(BaseModel):
    """
    The request structure for the get backend environment request.
    """

    pass


class GetBranchRequest(BaseModel):
    """
    The request structure for the get branch request.
    """

    pass


class GetDomainAssociationRequest(BaseModel):
    """
    The request structure for the get domain association request.
    """

    pass


class GetJobRequest(BaseModel):
    """
    The request structure for the get job request.
    """

    pass


class GetWebhookRequest(BaseModel):
    """
    The request structure for the get webhook request.
    """

    pass


class JobArn(EnvValue):
    pass


class JobReason(Framework):
    pass


class JobStatus(Enum):
    PENDING = 'PENDING'
    PROVISIONING = 'PROVISIONING'
    RUNNING = 'RUNNING'
    FAILED = 'FAILED'
    SUCCEED = 'SUCCEED'
    CANCELLING = 'CANCELLING'
    CANCELLED = 'CANCELLED'


class JobType(Enum):
    RELEASE = 'RELEASE'
    RETRY = 'RETRY'
    MANUAL = 'MANUAL'
    WEB_HOOK = 'WEB_HOOK'


class LastDeployTime(CreateTime):
    pass


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=2000)]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class ListAppsRequest(BaseModel):
    """
    The request structure for the list apps request.
    """

    pass


class ListArtifactsRequest(BaseModel):
    """
    Describes the request structure for the list artifacts request.
    """

    pass


class ListBackendEnvironmentsRequest(BaseModel):
    """
    The request structure for the list backend environments request.
    """

    pass


class ListBranchesRequest(BaseModel):
    """
    The request structure for the list branches request.
    """

    pass


class ListDomainAssociationsRequest(BaseModel):
    """
    The request structure for the list domain associations request.
    """

    pass


class ListJobsRequest(BaseModel):
    """
    The request structure for the list jobs request.
    """

    pass


class ResourceArn(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:aws:amplify:.*')]


class ListTagsForResourceRequest(BaseModel):
    """
    The request structure to use to list tags for a resource.
    """

    pass


class ListWebhooksRequest(BaseModel):
    """
    The request structure for the list webhooks request.
    """

    pass


class Screenshots(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class SourceUrl(EnvValue):
    pass


class StartDeploymentRequest(BaseModel):
    """
    The request structure for the start a deployment request.
    """

    jobId: Optional[JobId] = None
    sourceUrl: Optional[SourceUrl] = None


class StartJobRequest(BaseModel):
    """
    The request structure for the start job request.
    """

    jobId: Optional[JobId] = None
    jobType: JobType
    jobReason: Optional[JobReason] = None
    commitId: Optional[CommitId] = None
    commitMessage: Optional[CommitMessage] = None
    commitTime: Optional[CommitTime] = None


class StepName(Framework):
    pass


class TestArtifactsUrl(EnvValue):
    pass


class TestConfigUrl(EnvValue):
    pass


class Step(BaseModel):
    """
    Describes an execution step, for an execution job, for an Amplify app.
    """

    stepName: StepName
    startTime: StartTime
    status: JobStatus
    endTime: EndTime
    logUrl: Optional[LogUrl] = None
    artifactsUrl: Optional[ArtifactsUrl] = None
    testArtifactsUrl: Optional[TestArtifactsUrl] = None
    testConfigUrl: Optional[TestConfigUrl] = None
    screenshots: Optional[Screenshots] = None
    statusReason: Optional[StatusReason] = None
    context: Optional[Context] = None


class StopJobRequest(BaseModel):
    """
    The request structure for the stop job request.
    """

    pass


class Verified(EnableAutoBuild):
    pass


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    """
    The request structure to tag a resource with a tag key and value.
    """

    tags: TagMap


class ThumbnailName(TagValue):
    pass


class UntagResourceRequest(BaseModel):
    """
    The request structure for the untag resource request.
    """

    pass


class UpdateBranchRequest(BaseModel):
    """
    The request structure for the update branch request.
    """

    description: Optional[Description] = None
    framework: Optional[Framework] = None
    stage: Optional[Stage] = None
    enableNotification: Optional[EnableNotification] = None
    enableAutoBuild: Optional[EnableAutoBuild] = None
    environmentVariables: Optional[EnvironmentVariables] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    enableBasicAuth: Optional[EnableBasicAuth] = None
    enablePerformanceMode: Optional[EnablePerformanceMode] = None
    buildSpec: Optional[BuildSpec] = None
    ttl: Optional[TTL] = None
    displayName: Optional[DisplayName] = None
    enablePullRequestPreview: Optional[EnablePullRequestPreview] = None
    pullRequestEnvironmentName: Optional[PullRequestEnvironmentName] = None
    backendEnvironmentArn: Optional[BackendEnvironmentArn] = None


class UpdateWebhookRequest(BaseModel):
    """
    The request structure for the update webhook request.
    """

    branchName: Optional[BranchName] = None
    description: Optional[Description] = None


class WebhookArn(EnvValue):
    pass


class WebhookUrl(EnvValue):
    pass


class CustomRule(BaseModel):
    """
    Describes a custom rewrite or redirect rule.
    """

    source: Source
    target: Target
    status: Optional[Status] = None
    condition: Optional[Condition] = None


class CreateBackendEnvironmentResult(BaseModel):
    """
    The result structure for the create backend environment request.
    """

    backendEnvironment: BackendEnvironment


class CreateDeploymentResult(BaseModel):
    """
    The result structure for the create a new deployment request.
    """

    jobId: Optional[JobId] = None
    fileUploadUrls: FileUploadUrls
    zipUploadUrl: UploadUrl


class SubDomainSetting(BaseModel):
    """
    Describes the settings for the subdomain.
    """

    prefix: DomainPrefix
    branchName: BranchName


class DeleteBackendEnvironmentResult(CreateBackendEnvironmentResult):
    """
    The result structure of the delete backend environment result.
    """

    pass


class GenerateAccessLogsResult(BaseModel):
    """
    The result structure for the generate access logs request.
    """

    logUrl: Optional[LogUrl] = None


class GetArtifactUrlResult(BaseModel):
    """
    Returns the result structure for the get artifact request.
    """

    artifactId: ArtifactId
    artifactUrl: ArtifactUrl


class GetBackendEnvironmentResult(CreateBackendEnvironmentResult):
    """
    The result structure for the get backend environment result.
    """

    pass


class ListArtifactsResult(BaseModel):
    """
    The result structure for the list artifacts request.
    """

    artifacts: Artifacts
    nextToken: Optional[NextToken] = None


class ListBackendEnvironmentsResult(BaseModel):
    """
    The result structure for the list backend environments result.
    """

    backendEnvironments: BackendEnvironments
    nextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    """
    The response for the list tags for resource request.
    """

    tags: Optional[TagMap] = None


class CustomRules(BaseModel):
    __root__: List[CustomRule]


class ProductionBranch(BaseModel):
    """
    Describes the information about a production branch for an Amplify app.
    """

    lastDeployTime: Optional[LastDeployTime] = None
    status: Optional[Status] = None
    thumbnailUrl: Optional[ThumbnailUrl] = None
    branchName: Optional[BranchName] = None


class App(BaseModel):
    """
    Represents the different branches of a repository for building, deploying, and hosting an Amplify app.
    """

    appId: AppId
    appArn: AppArn
    name: Name
    tags: Optional[TagMap] = None
    description: Description
    repository: Repository
    platform: Platform
    createTime: CreateTime
    updateTime: UpdateTime
    iamServiceRoleArn: Optional[ServiceRoleArn] = None
    environmentVariables: EnvironmentVariables
    defaultDomain: DefaultDomain
    enableBranchAutoBuild: EnableBranchAutoBuild
    enableBranchAutoDeletion: Optional[EnableBranchAutoDeletion] = None
    enableBasicAuth: EnableBasicAuth
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    customRules: Optional[CustomRules] = None
    productionBranch: Optional[ProductionBranch] = None
    buildSpec: Optional[BuildSpec] = None
    customHeaders: Optional[CustomHeaders] = None
    enableAutoBranchCreation: Optional[EnableAutoBranchCreation] = None
    autoBranchCreationPatterns: Optional[AutoBranchCreationPatterns] = None
    autoBranchCreationConfig: Optional[AutoBranchCreationConfig] = None


class Apps(BaseModel):
    __root__: List[App]


class CustomDomains(BaseModel):
    __root__: Annotated[List[CustomDomain], Field(max_items=255)]


class Branch(BaseModel):
    """
    The branch for an Amplify app, which maps to a third-party repository branch.
    """

    branchArn: BranchArn
    branchName: BranchName
    description: Description
    tags: Optional[TagMap] = None
    stage: Stage
    displayName: DisplayName
    enableNotification: EnableNotification
    createTime: CreateTime
    updateTime: UpdateTime
    environmentVariables: EnvironmentVariables
    enableAutoBuild: EnableAutoBuild
    customDomains: CustomDomains
    framework: Framework
    activeJobId: ActiveJobId
    totalNumberOfJobs: TotalNumberOfJobs
    enableBasicAuth: EnableBasicAuth
    enablePerformanceMode: Optional[EnablePerformanceMode] = None
    thumbnailUrl: Optional[ThumbnailUrl] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    buildSpec: Optional[BuildSpec] = None
    ttl: TTL
    associatedResources: Optional[AssociatedResources] = None
    enablePullRequestPreview: EnablePullRequestPreview
    pullRequestEnvironmentName: Optional[PullRequestEnvironmentName] = None
    destinationBranch: Optional[BranchName] = None
    sourceBranch: Optional[BranchName] = None
    backendEnvironmentArn: Optional[BackendEnvironmentArn] = None


class Branches(BaseModel):
    __root__: Annotated[List[Branch], Field(max_items=255)]


class CreateAppRequest(BaseModel):
    """
    The request structure used to create apps in Amplify.
    """

    name: Name
    description: Optional[Description] = None
    repository: Optional[Repository] = None
    platform: Optional[Platform] = None
    iamServiceRoleArn: Optional[ServiceRoleArn] = None
    oauthToken: Optional[OauthToken] = None
    accessToken: Optional[AccessToken] = None
    environmentVariables: Optional[EnvironmentVariables] = None
    enableBranchAutoBuild: Optional[EnableBranchAutoBuild] = None
    enableBranchAutoDeletion: Optional[EnableBranchAutoDeletion] = None
    enableBasicAuth: Optional[EnableBasicAuth] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    customRules: Optional[CustomRules] = None
    tags: Optional[TagMap] = None
    buildSpec: Optional[BuildSpec] = None
    customHeaders: Optional[CustomHeaders] = None
    enableAutoBranchCreation: Optional[EnableAutoBranchCreation] = None
    autoBranchCreationPatterns: Optional[AutoBranchCreationPatterns] = None
    autoBranchCreationConfig: Optional[AutoBranchCreationConfig] = None


class SubDomainSettings(BaseModel):
    __root__: Annotated[List[SubDomainSetting], Field(max_items=255)]


class CreateDomainAssociationRequest(BaseModel):
    """
    The request structure for the create domain association request.
    """

    domainName: DomainName
    enableAutoSubDomain: Optional[EnableAutoSubDomain] = None
    subDomainSettings: SubDomainSettings
    autoSubDomainCreationPatterns: Optional[AutoSubDomainCreationPatterns] = None
    autoSubDomainIAMRole: Optional[AutoSubDomainIAMRole] = None


class Webhook(BaseModel):
    """
    Describes a webhook that connects repository events to an Amplify app.
    """

    webhookArn: WebhookArn
    webhookId: WebhookId
    webhookUrl: WebhookUrl
    branchName: BranchName
    description: Description
    createTime: CreateTime
    updateTime: UpdateTime


class JobSummary(BaseModel):
    """
    Describes the summary for an execution job for an Amplify app.
    """

    jobArn: JobArn
    jobId: JobId
    commitId: CommitId
    commitMessage: CommitMessage
    commitTime: CommitTime
    startTime: StartTime
    status: JobStatus
    endTime: Optional[EndTime] = None
    jobType: JobType


class Steps(BaseModel):
    __root__: List[Step]


class JobSummaries(BaseModel):
    __root__: List[JobSummary]


class Webhooks(BaseModel):
    __root__: List[Webhook]


class SubDomain(BaseModel):
    """
    The subdomain for the domain association.
    """

    subDomainSetting: SubDomainSetting
    verified: Verified
    dnsRecord: DNSRecord


class UpdateAppRequest(BaseModel):
    """
    The request structure for the update app request.
    """

    name: Optional[Name] = None
    description: Optional[Description] = None
    platform: Optional[Platform] = None
    iamServiceRoleArn: Optional[ServiceRoleArn] = None
    environmentVariables: Optional[EnvironmentVariables] = None
    enableBranchAutoBuild: Optional[EnableAutoBuild] = None
    enableBranchAutoDeletion: Optional[EnableBranchAutoDeletion] = None
    enableBasicAuth: Optional[EnableBasicAuth] = None
    basicAuthCredentials: Optional[BasicAuthCredentials] = None
    customRules: Optional[CustomRules] = None
    buildSpec: Optional[BuildSpec] = None
    customHeaders: Optional[CustomHeaders] = None
    enableAutoBranchCreation: Optional[EnableAutoBranchCreation] = None
    autoBranchCreationPatterns: Optional[AutoBranchCreationPatterns] = None
    autoBranchCreationConfig: Optional[AutoBranchCreationConfig] = None
    repository: Optional[Repository] = None
    oauthToken: Optional[OauthToken] = None
    accessToken: Optional[AccessToken] = None


class UpdateDomainAssociationRequest(BaseModel):
    """
    The request structure for the update domain association request.
    """

    enableAutoSubDomain: Optional[EnableAutoSubDomain] = None
    subDomainSettings: SubDomainSettings
    autoSubDomainCreationPatterns: Optional[AutoSubDomainCreationPatterns] = None
    autoSubDomainIAMRole: Optional[AutoSubDomainIAMRole] = None


class CreateAppResult(BaseModel):
    app: App


class CreateBranchResult(BaseModel):
    """
    The result structure for create branch request.
    """

    branch: Branch


class CreateWebhookResult(BaseModel):
    """
    The result structure for the create webhook request.
    """

    webhook: Webhook


class DeleteAppResult(CreateAppResult):
    """
    The result structure for the delete app request.
    """

    pass


class DeleteBranchResult(CreateBranchResult):
    """
    The result structure for the delete branch request.
    """

    pass


class DeleteJobResult(BaseModel):
    """
    The result structure for the delete job request.
    """

    jobSummary: JobSummary


class DeleteWebhookResult(CreateWebhookResult):
    """
    The result structure for the delete webhook request.
    """

    pass


class GetAppResult(CreateAppResult):
    pass


class GetBranchResult(CreateBranchResult):
    pass


class GetWebhookResult(CreateWebhookResult):
    """
    The result structure for the get webhook request.
    """

    pass


class ListAppsResult(BaseModel):
    """
    The result structure for an Amplify app list request.
    """

    apps: Apps
    nextToken: Optional[NextToken] = None


class ListBranchesResult(BaseModel):
    """
    The result structure for the list branches request.
    """

    branches: Branches
    nextToken: Optional[NextToken] = None


class ListJobsResult(BaseModel):
    """
    The maximum number of records to list in a single response.
    """

    jobSummaries: JobSummaries
    nextToken: Optional[NextToken] = None


class ListWebhooksResult(BaseModel):
    """
    The result structure for the list webhooks request.
    """

    webhooks: Webhooks
    nextToken: Optional[NextToken] = None


class StartDeploymentResult(DeleteJobResult):
    """
    The result structure for the start a deployment request.
    """

    pass


class StartJobResult(DeleteJobResult):
    """
    The result structure for the run job request.
    """

    pass


class StopJobResult(DeleteJobResult):
    """
    The result structure for the stop job request.
    """

    pass


class UpdateAppResult(CreateAppResult):
    """
    The result structure for an Amplify app update request.
    """

    pass


class UpdateBranchResult(CreateBranchResult):
    """
    The result structure for the update branch request.
    """

    pass


class UpdateWebhookResult(CreateWebhookResult):
    """
    The result structure for the update webhook request.
    """

    pass


class SubDomains(BaseModel):
    __root__: Annotated[List[SubDomain], Field(max_items=255)]


class Job(BaseModel):
    """
    Describes an execution job for an Amplify app.
    """

    summary: JobSummary
    steps: Steps


class GetJobResult(BaseModel):
    job: Job


class DomainAssociation(BaseModel):
    """
    Describes a domain association that associates a custom domain with an Amplify app.
    """

    domainAssociationArn: DomainAssociationArn
    domainName: DomainName
    enableAutoSubDomain: EnableAutoSubDomain
    autoSubDomainCreationPatterns: Optional[AutoSubDomainCreationPatterns] = None
    autoSubDomainIAMRole: Optional[AutoSubDomainIAMRole] = None
    domainStatus: DomainStatus
    statusReason: StatusReason
    certificateVerificationDNSRecord: Optional[CertificateVerificationDNSRecord] = None
    subDomains: SubDomains


class DomainAssociations(BaseModel):
    __root__: Annotated[List[DomainAssociation], Field(max_items=255)]


class CreateDomainAssociationResult(BaseModel):
    """
    The result structure for the create domain association request.
    """

    domainAssociation: DomainAssociation


class DeleteDomainAssociationResult(CreateDomainAssociationResult):
    pass


class GetDomainAssociationResult(CreateDomainAssociationResult):
    """
    The result structure for the get domain association request.
    """

    pass


class ListDomainAssociationsResult(BaseModel):
    """
    The result structure for the list domain association request.
    """

    domainAssociations: DomainAssociations
    nextToken: Optional[NextToken] = None


class UpdateDomainAssociationResult(CreateDomainAssociationResult):
    """
    The result structure for the update domain association request.
    """

    pass

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:47:15+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ThrottlingException(ResourceNotFoundException):
    pass


class ValidationException(ResourceNotFoundException):
    pass


class InternalServerException(ResourceNotFoundException):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class _String(BaseModel):
    __root__: str


class ServiceLimitExceededException(ResourceNotFoundException):
    pass


class AccessDeniedException(ResourceNotFoundException):
    pass


class StartJobResponse(BaseModel):
    pass


class Arn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='An Amazon Resource Name (ARN) that uniquely identifies an AWS resource.'
        ),
    ]


class Id(BaseModel):
    __root__: Annotated[str, Field(description='A unique identifier.')]


class AssetDestinationEntry(BaseModel):
    """
    The destination for the asset.
    """

    AssetId: Id
    Bucket: _String
    Key: Optional[_String] = None


class AssetType(Enum):
    """
    The type of file your data is stored in. Currently, the supported asset type is S3_SNAPSHOT.
    """

    S3_SNAPSHOT = 'S3_SNAPSHOT'


class Timestamp(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description='Dates and times in AWS Data Exchange are recorded in ISO 8601 format.'
        ),
    ]


class AssetName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The name of the asset. When importing from Amazon S3, the S3 object key is used as the asset name. When exporting to Amazon S3, the asset name is used as default target S3 object key.'
        ),
    ]


class AssetSourceEntry(BaseModel):
    """
    The source of the assets.
    """

    Bucket: _String
    Key: _String


class CancelJobRequest(BaseModel):
    pass


class Code(Enum):
    ACCESS_DENIED_EXCEPTION = 'ACCESS_DENIED_EXCEPTION'
    INTERNAL_SERVER_EXCEPTION = 'INTERNAL_SERVER_EXCEPTION'
    MALWARE_DETECTED = 'MALWARE_DETECTED'
    RESOURCE_NOT_FOUND_EXCEPTION = 'RESOURCE_NOT_FOUND_EXCEPTION'
    SERVICE_QUOTA_EXCEEDED_EXCEPTION = 'SERVICE_QUOTA_EXCEEDED_EXCEPTION'
    VALIDATION_EXCEPTION = 'VALIDATION_EXCEPTION'
    MALWARE_SCAN_ENCRYPTED_FILE = 'MALWARE_SCAN_ENCRYPTED_FILE'


class Description(BaseModel):
    __root__: Annotated[str, Field(description='A description of a resource.')]


class Name(BaseModel):
    __root__: Annotated[str, Field(description='The name of the model.')]


class MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateDataSetRequest(BaseModel):
    """
    The request body for CreateDataSet.
    """

    AssetType: AssetType
    Description: Description
    Name: Name
    Tags: Optional[MapOfString] = None


class Origin(Enum):
    """
    A property that defines the data set as OWNED by the account (for providers) or ENTITLED to the account (for subscribers). When an owned data set is published in a product, AWS Data Exchange creates a copy of the data set. Subscribers can access that copy of the data set as an entitled data set.
    """

    OWNED = 'OWNED'
    ENTITLED = 'ENTITLED'


class OriginDetails(BaseModel):
    ProductId: _String


class Type(Enum):
    IMPORT_ASSETS_FROM_S3 = 'IMPORT_ASSETS_FROM_S3'
    IMPORT_ASSET_FROM_SIGNED_URL = 'IMPORT_ASSET_FROM_SIGNED_URL'
    EXPORT_ASSETS_TO_S3 = 'EXPORT_ASSETS_TO_S3'
    EXPORT_ASSET_TO_SIGNED_URL = 'EXPORT_ASSET_TO_SIGNED_URL'
    EXPORT_REVISIONS_TO_S3 = 'EXPORT_REVISIONS_TO_S3'


class State(Enum):
    WAITING = 'WAITING'
    IN_PROGRESS = 'IN_PROGRESS'
    ERROR = 'ERROR'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    TIMED_OUT = 'TIMED_OUT'


class _StringMin0Max16384(BaseModel):
    __root__: Annotated[str, Field(max_length=16384, min_length=0)]


class CreateRevisionRequest(BaseModel):
    """
    The request body for CreateRevision.
    """

    Comment: Optional[_StringMin0Max16384] = None
    Tags: Optional[MapOfString] = None


class _Boolean(BaseModel):
    __root__: bool


class DataSetEntry(BaseModel):
    """
    A data set is an AWS resource with one or more revisions.
    """

    Arn: Arn
    AssetType: AssetType
    CreatedAt: Timestamp
    Description: Description
    Id: Id
    Name: Name
    Origin: Origin
    OriginDetails: Optional[OriginDetails] = None
    SourceId: Optional[Id] = None
    UpdatedAt: Timestamp


class DeleteAssetRequest(BaseModel):
    pass


class DeleteDataSetRequest(BaseModel):
    pass


class DeleteRevisionRequest(BaseModel):
    pass


class ImportAssetFromSignedUrlJobErrorDetails(BaseModel):
    AssetName: AssetName


class ListOfAssetSourceEntry(BaseModel):
    """
    The list of sources for the assets.
    """

    __root__: Annotated[
        List[AssetSourceEntry], Field(description='The list of sources for the assets.')
    ]


class Details3(BaseModel):
    ImportAssetFromSignedUrlJobErrorDetails: Optional[
        ImportAssetFromSignedUrlJobErrorDetails
    ] = None
    ImportAssetsFromS3JobErrorDetails: Optional[ListOfAssetSourceEntry] = None


class ExportAssetToSignedUrlResponseDetails(BaseModel):
    """
    The details of the export to signed URL response.
    """

    AssetId: Id
    DataSetId: Id
    RevisionId: Id
    SignedUrl: Optional[_String] = None
    SignedUrlExpiresAt: Optional[Timestamp] = None


class ListOfAssetDestinationEntry(BaseModel):
    """
    The destination where the assets will be exported.
    """

    __root__: Annotated[
        List[AssetDestinationEntry],
        Field(description='The destination where the assets will be exported.'),
    ]


class ServerSideEncryptionTypes(Enum):
    """
    The types of encryption supported in export jobs to Amazon S3.
    """

    aws_kms = 'aws:kms'
    AES256 = 'AES256'


class GetAssetRequest(BaseModel):
    pass


class GetDataSetRequest(BaseModel):
    pass


class GetJobRequest(BaseModel):
    pass


class GetRevisionRequest(BaseModel):
    pass


class _StringMin24Max24PatternAZaZ094AZaZ092AZaZ093(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=24,
            min_length=24,
            regex='^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$',
        ),
    ]


class ImportAssetFromSignedUrlResponseDetails(BaseModel):
    """
    The details in the response for an import request, including the signed URL and other information.
    """

    AssetName: AssetName
    DataSetId: Id
    Md5Hash: Optional[_StringMin24Max24PatternAZaZ094AZaZ092AZaZ093] = None
    RevisionId: Id
    SignedUrl: Optional[_String] = None
    SignedUrlExpiresAt: Optional[Timestamp] = None


class ImportAssetsFromS3ResponseDetails(BaseModel):
    """
    Details from an import from Amazon S3 response.
    """

    AssetSources: ListOfAssetSourceEntry
    DataSetId: Id
    RevisionId: Id


class JobErrorLimitName(Enum):
    """
    The name of the limit that was reached.
    """

    Assets_per_revision = 'Assets per revision'
    Asset_size_in_GB = 'Asset size in GB'


class _Double(BaseModel):
    __root__: float


class JobErrorResourceTypes(Enum):
    """
    The types of resource which the job error can apply to.
    """

    REVISION = 'REVISION'
    ASSET = 'ASSET'


class JobError(BaseModel):
    """
    An error that occurred with the job request.
    """

    Code: Code
    Details: Optional[Details3] = None
    LimitName: Optional[JobErrorLimitName] = None
    LimitValue: Optional[_Double] = None
    Message: _String
    ResourceId: Optional[_String] = None
    ResourceType: Optional[JobErrorResourceTypes] = None


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=25.0)]


class ListDataSetRevisionsRequest(BaseModel):
    pass


class NextToken(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The token value retrieved from a previous call to access the next page of results.'
        ),
    ]


class ListDataSetsRequest(BaseModel):
    pass


class ListOfDataSetEntry(BaseModel):
    __root__: List[DataSetEntry]


class ListJobsRequest(BaseModel):
    pass


class RevisionDestinationEntry(BaseModel):
    """
    The destination where the assets in the revision will be exported.
    """

    Bucket: _String
    KeyPattern: Optional[_String] = None
    RevisionId: Id


class ListRevisionAssetsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class RevisionEntry(BaseModel):
    """
    A revision is a container for one or more assets.
    """

    Arn: Arn
    Comment: Optional[_StringMin0Max16384] = None
    CreatedAt: Timestamp
    DataSetId: Id
    Finalized: Optional[_Boolean] = None
    Id: Id
    SourceId: Optional[Id] = None
    UpdatedAt: Timestamp


class _DoubleMin0(_Double):
    pass


class StartJobRequest(BaseModel):
    pass


class TagResourceRequest(BaseModel):
    """
    The request body for TagResource.
    """

    Tags: MapOfString


class ListOfString(BaseModel):
    __root__: List[_String]


class UntagResourceRequest(BaseModel):
    pass


class UpdateAssetRequest(BaseModel):
    """
    The request body for UpdateAsset.
    """

    Name: AssetName


class UpdateDataSetRequest(BaseModel):
    """
    The request body for UpdateDataSet.
    """

    Description: Optional[Description] = None
    Name: Optional[Name] = None


class UpdateRevisionRequest(BaseModel):
    """
    The request body for UpdateRevision.
    """

    Comment: Optional[_StringMin0Max16384] = None
    Finalized: Optional[_Boolean] = None


class CreateDataSetResponse(BaseModel):
    Arn: Optional[Arn] = None
    AssetType: Optional[AssetType] = None
    CreatedAt: Optional[Timestamp] = None
    Description: Optional[Description] = None
    Id: Optional[Id] = None
    Name: Optional[Name] = None
    Origin: Optional[Origin] = None
    OriginDetails: Optional[OriginDetails] = None
    SourceId: Optional[Id] = None
    Tags: Optional[MapOfString] = None
    UpdatedAt: Optional[Timestamp] = None


class ExportAssetToSignedUrlRequestDetails(BaseModel):
    """
    Details of the operation to be performed by the job.
    """

    AssetId: Id
    DataSetId: Id
    RevisionId: Id


class ImportAssetFromSignedUrlRequestDetails(BaseModel):
    """
    Details of the operation to be performed by the job.
    """

    AssetName: AssetName
    DataSetId: Id
    Md5Hash: _StringMin24Max24PatternAZaZ094AZaZ092AZaZ093
    RevisionId: Id


class ImportAssetsFromS3RequestDetails(ImportAssetsFromS3ResponseDetails):
    """
    Details of the operation to be performed by the job.
    """

    pass


class CreateRevisionResponse(BaseModel):
    Arn: Optional[Arn] = None
    Comment: Optional[_StringMin0Max16384] = None
    CreatedAt: Optional[Timestamp] = None
    DataSetId: Optional[Id] = None
    Finalized: Optional[_Boolean] = None
    Id: Optional[Id] = None
    SourceId: Optional[Id] = None
    Tags: Optional[MapOfString] = None
    UpdatedAt: Optional[Timestamp] = None


class GetDataSetResponse(CreateDataSetResponse):
    pass


class GetRevisionResponse(CreateRevisionResponse):
    pass


class ListDataSetsResponse(BaseModel):
    DataSets: Optional[ListOfDataSetEntry] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[MapOfString] = None


class UpdateDataSetResponse(BaseModel):
    Arn: Optional[Arn] = None
    AssetType: Optional[AssetType] = None
    CreatedAt: Optional[Timestamp] = None
    Description: Optional[Description] = None
    Id: Optional[Id] = None
    Name: Optional[Name] = None
    Origin: Optional[Origin] = None
    OriginDetails: Optional[OriginDetails] = None
    SourceId: Optional[Id] = None
    UpdatedAt: Optional[Timestamp] = None


class UpdateRevisionResponse(BaseModel):
    Arn: Optional[Arn] = None
    Comment: Optional[_StringMin0Max16384] = None
    CreatedAt: Optional[Timestamp] = None
    DataSetId: Optional[Id] = None
    Finalized: Optional[_Boolean] = None
    Id: Optional[Id] = None
    SourceId: Optional[Id] = None
    UpdatedAt: Optional[Timestamp] = None


class S3SnapshotAsset(BaseModel):
    """
    The S3 object that is the asset.
    """

    Size: _DoubleMin0


class AssetDetails(BaseModel):
    S3SnapshotAsset: Optional[S3SnapshotAsset] = None


class AssetEntry(BaseModel):
    """
    An asset in AWS Data Exchange is a piece of data that can be stored as an S3 object. The asset can be a structured data file, an image file, or some other data file. When you create an import job for your files, you create an asset in AWS Data Exchange for each of those files.
    """

    Arn: Arn
    AssetDetails: AssetDetails
    AssetType: AssetType
    CreatedAt: Timestamp
    DataSetId: Id
    Id: Id
    Name: AssetName
    RevisionId: Id
    SourceId: Optional[Id] = None
    UpdatedAt: Timestamp


class ListOfJobError(BaseModel):
    __root__: List[JobError]


class ExportServerSideEncryption(BaseModel):
    """
    Encryption configuration of the export job. Includes the encryption type as well as the AWS KMS key. The KMS key is only necessary if you chose the KMS encryption type.
    """

    KmsKeyArn: Optional[_String] = None
    Type: ServerSideEncryptionTypes


class ExportAssetsToS3ResponseDetails(BaseModel):
    """
    Details about the export to Amazon S3 response.
    """

    AssetDestinations: ListOfAssetDestinationEntry
    DataSetId: Id
    Encryption: Optional[ExportServerSideEncryption] = None
    RevisionId: Id


class ListOfRevisionDestinationEntry(BaseModel):
    """
    The destination where the assets in the revision will be exported.
    """

    __root__: Annotated[
        List[RevisionDestinationEntry],
        Field(
            description='The destination where the assets in the revision will be exported.'
        ),
    ]


class ExportRevisionsToS3ResponseDetails(BaseModel):
    """
    Details about the export revisions to Amazon S3 response.
    """

    DataSetId: Id
    Encryption: Optional[ExportServerSideEncryption] = None
    RevisionDestinations: ListOfRevisionDestinationEntry


class ListOfRevisionEntry(BaseModel):
    __root__: List[RevisionEntry]


class ListOfAssetEntry(BaseModel):
    __root__: List[AssetEntry]


class ExportAssetsToS3RequestDetails(ExportAssetsToS3ResponseDetails):
    """
    Details of the operation to be performed by the job.
    """

    pass


class ExportRevisionsToS3RequestDetails(ExportRevisionsToS3ResponseDetails):
    """
    Details of the operation to be performed by the job.
    """

    pass


class GetAssetResponse(BaseModel):
    Arn: Optional[Arn] = None
    AssetDetails: Optional[AssetDetails] = None
    AssetType: Optional[AssetType] = None
    CreatedAt: Optional[Timestamp] = None
    DataSetId: Optional[Id] = None
    Id: Optional[Id] = None
    Name: Optional[AssetName] = None
    RevisionId: Optional[Id] = None
    SourceId: Optional[Id] = None
    UpdatedAt: Optional[Timestamp] = None


class ListDataSetRevisionsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    Revisions: Optional[ListOfRevisionEntry] = None


class ListRevisionAssetsResponse(BaseModel):
    Assets: Optional[ListOfAssetEntry] = None
    NextToken: Optional[NextToken] = None


class UpdateAssetResponse(GetAssetResponse):
    pass


class RequestDetails(BaseModel):
    """
    The details for the request.
    """

    ExportAssetToSignedUrl: Optional[ExportAssetToSignedUrlRequestDetails] = None
    ExportAssetsToS3: Optional[ExportAssetsToS3RequestDetails] = None
    ExportRevisionsToS3: Optional[ExportRevisionsToS3RequestDetails] = None
    ImportAssetFromSignedUrl: Optional[ImportAssetFromSignedUrlRequestDetails] = None
    ImportAssetsFromS3: Optional[ImportAssetsFromS3RequestDetails] = None


class CreateJobRequest(BaseModel):
    """
    The request body for CreateJob.
    """

    Details: RequestDetails
    Type: Type


class ResponseDetails(BaseModel):
    """
    Details for the response.
    """

    ExportAssetToSignedUrl: Optional[ExportAssetToSignedUrlResponseDetails] = None
    ExportAssetsToS3: Optional[ExportAssetsToS3ResponseDetails] = None
    ExportRevisionsToS3: Optional[ExportRevisionsToS3ResponseDetails] = None
    ImportAssetFromSignedUrl: Optional[ImportAssetFromSignedUrlResponseDetails] = None
    ImportAssetsFromS3: Optional[ImportAssetsFromS3ResponseDetails] = None


class JobEntry(BaseModel):
    """
    AWS Data Exchange Jobs are asynchronous import or export operations used to create or copy assets. A data set owner can both import and export as they see fit. Someone with an entitlement to a data set can only export. Jobs are deleted 90 days after they are created.
    """

    Arn: Arn
    CreatedAt: Timestamp
    Details: ResponseDetails
    Errors: Optional[ListOfJobError] = None
    Id: Id
    State: State
    Type: Type
    UpdatedAt: Timestamp


class ListOfJobEntry(BaseModel):
    __root__: List[JobEntry]


class CreateJobResponse(BaseModel):
    Arn: Optional[Arn] = None
    CreatedAt: Optional[Timestamp] = None
    Details: Optional[ResponseDetails] = None
    Errors: Optional[ListOfJobError] = None
    Id: Optional[Id] = None
    State: Optional[State] = None
    Type: Optional[Type] = None
    UpdatedAt: Optional[Timestamp] = None


class GetJobResponse(CreateJobResponse):
    pass


class ListJobsResponse(BaseModel):
    Jobs: Optional[ListOfJobEntry] = None
    NextToken: Optional[NextToken] = None

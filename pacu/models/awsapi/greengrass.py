# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:07+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class BadRequestException(BaseModel):
    __root__: Any


class InternalServerErrorException(BadRequestException):
    pass


class _String(BaseModel):
    __root__: str


class CreateConnectorDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Id: Optional[_String] = None
    Version: Optional[_String] = None


class CreateCoreDefinitionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Id: Optional[_String] = None
    LastUpdatedTimestamp: Optional[_String] = None
    LatestVersion: Optional[_String] = None
    LatestVersionArn: Optional[_String] = None
    Name: Optional[_String] = None


class CreateCoreDefinitionVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateDeploymentResponse(BaseModel):
    DeploymentArn: Optional[_String] = None
    DeploymentId: Optional[_String] = None


class CreateDeviceDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class CreateDeviceDefinitionVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateFunctionDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class CreateFunctionDefinitionVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateGroupResponse(CreateCoreDefinitionResponse):
    pass


class CreateGroupCertificateAuthorityResponse(BaseModel):
    GroupCertificateAuthorityArn: Optional[_String] = None


class CreateGroupVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateLoggerDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class CreateLoggerDefinitionVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateResourceDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class CreateResourceDefinitionVersionResponse(CreateConnectorDefinitionVersionResponse):
    pass


class CreateSoftwareUpdateJobResponse(BaseModel):
    IotJobArn: Optional[_String] = None
    IotJobId: Optional[_String] = None
    PlatformSoftwareVersion: Optional[_String] = None


class CreateSubscriptionDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class CreateSubscriptionDefinitionVersionResponse(
    CreateConnectorDefinitionVersionResponse
):
    pass


class Subscription(BaseModel):
    """
    Information about a subscription.
    """

    Id: _String
    Source: _String
    Subject: _String
    Target: _String


class DeleteConnectorDefinitionResponse(BaseModel):
    pass


class DeleteCoreDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteDeviceDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteFunctionDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteGroupResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteLoggerDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteResourceDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DeleteSubscriptionDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class DisassociateRoleFromGroupResponse(BaseModel):
    DisassociatedAt: Optional[_String] = None


class DisassociateServiceRoleFromAccountResponse(DisassociateRoleFromGroupResponse):
    pass


class GetAssociatedRoleResponse(BaseModel):
    AssociatedAt: Optional[_String] = None
    RoleArn: Optional[_String] = None


class GetGroupCertificateAuthorityResponse(BaseModel):
    GroupCertificateAuthorityArn: Optional[_String] = None
    GroupCertificateAuthorityId: Optional[_String] = None
    PemEncodedCertificate: Optional[_String] = None


class GetGroupCertificateConfigurationResponse(BaseModel):
    CertificateAuthorityExpiryInMilliseconds: Optional[_String] = None
    CertificateExpiryInMilliseconds: Optional[_String] = None
    GroupId: Optional[_String] = None


class GetServiceRoleForAccountResponse(GetAssociatedRoleResponse):
    pass


class ResetDeploymentsResponse(CreateDeploymentResponse):
    pass


class StartBulkDeploymentResponse(BaseModel):
    BulkDeploymentArn: Optional[_String] = None
    BulkDeploymentId: Optional[_String] = None


class StopBulkDeploymentResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateConnectivityInfoResponse(BaseModel):
    Message: Optional[_String] = None
    Version: Optional[_String] = None


class UpdateConnectorDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateCoreDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateDeviceDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateFunctionDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateGroupResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateGroupCertificateConfigurationResponse(
    GetGroupCertificateConfigurationResponse
):
    pass


class UpdateLoggerDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateResourceDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateSubscriptionDefinitionResponse(DeleteConnectorDefinitionResponse):
    pass


class UpdateThingRuntimeConfigurationResponse(DeleteConnectorDefinitionResponse):
    pass


class Telemetry(Enum):
    On = 'On'
    Off = 'Off'


class AssociateRoleToGroupRequest(BaseModel):
    RoleArn: _String


class AssociateServiceRoleToAccountRequest(BaseModel):
    RoleArn: _String


class BulkDeployment(BaseModel):
    """
    Information about a bulk deployment. You cannot start a new bulk deployment while another one is still running or in a non-terminal state.
    """

    BulkDeploymentArn: Optional[_String] = None
    BulkDeploymentId: Optional[_String] = None
    CreatedAt: Optional[_String] = None


class _Integer(BaseModel):
    __root__: int


class BulkDeploymentMetrics(BaseModel):
    """
    Relevant metrics on input records processed during bulk deployment.
    """

    InvalidInputRecords: Optional[_Integer] = None
    RecordsProcessed: Optional[_Integer] = None
    RetryAttempts: Optional[_Integer] = None


class DeploymentType(Enum):
    """
    The type of deployment. When used for ''CreateDeployment'', only ''NewDeployment'' and ''Redeployment'' are valid.
    """

    NewDeployment = 'NewDeployment'
    Redeployment = 'Redeployment'
    ResetDeployment = 'ResetDeployment'
    ForceResetDeployment = 'ForceResetDeployment'


class BulkDeploymentStatus(Enum):
    """
    The current status of the bulk deployment.
    """

    Initializing = 'Initializing'
    Running = 'Running'
    Completed = 'Completed'
    Stopping = 'Stopping'
    Stopped = 'Stopped'
    Failed = 'Failed'


class BulkDeployments(BaseModel):
    __root__: List[BulkDeployment]


class ConfigurationSyncStatus(Enum):
    InSync = 'InSync'
    OutOfSync = 'OutOfSync'


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class _Boolean(BaseModel):
    __root__: bool


class Tags(_MapOfString):
    """
    The key-value pair for the resource tag.
    """

    pass


class CreateDeploymentRequest(BaseModel):
    DeploymentId: Optional[_String] = None
    DeploymentType: DeploymentType
    GroupVersionId: Optional[_String] = None


class CreateGroupCertificateAuthorityRequest(BaseModel):
    pass


class GroupVersion(BaseModel):
    """
    Information about a group version.
    """

    ConnectorDefinitionVersionArn: Optional[_String] = None
    CoreDefinitionVersionArn: Optional[_String] = None
    DeviceDefinitionVersionArn: Optional[_String] = None
    FunctionDefinitionVersionArn: Optional[_String] = None
    LoggerDefinitionVersionArn: Optional[_String] = None
    ResourceDefinitionVersionArn: Optional[_String] = None
    SubscriptionDefinitionVersionArn: Optional[_String] = None


class CreateGroupRequest(BaseModel):
    InitialVersion: Optional[GroupVersion] = None
    Name: _String
    tags: Optional[Tags] = None


class CreateGroupVersionRequest(BaseModel):
    ConnectorDefinitionVersionArn: Optional[_String] = None
    CoreDefinitionVersionArn: Optional[_String] = None
    DeviceDefinitionVersionArn: Optional[_String] = None
    FunctionDefinitionVersionArn: Optional[_String] = None
    LoggerDefinitionVersionArn: Optional[_String] = None
    ResourceDefinitionVersionArn: Optional[_String] = None
    SubscriptionDefinitionVersionArn: Optional[_String] = None


class S3UrlSignerRole(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The IAM Role that Greengrass will use to create pre-signed URLs pointing towards the update artifact.'
        ),
    ]


class SoftwareToUpdate(Enum):
    """
    The piece of software on the Greengrass core that will be updated.
    """

    core = 'core'
    ota_agent = 'ota_agent'


class UpdateAgentLogLevel(Enum):
    """
    The minimum level of log statements that should be logged by the OTA Agent during an update.
    """

    NONE = 'NONE'
    TRACE = 'TRACE'
    DEBUG = 'DEBUG'
    VERBOSE = 'VERBOSE'
    INFO = 'INFO'
    WARN = 'WARN'
    ERROR = 'ERROR'
    FATAL = 'FATAL'


class UpdateTargets(BaseModel):
    """
    The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.
    """

    __root__: Annotated[
        List[_String],
        Field(
            description='The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.'
        ),
    ]


class UpdateTargetsArchitecture(Enum):
    """
    The architecture of the cores which are the targets of an update.
    """

    armv6l = 'armv6l'
    armv7l = 'armv7l'
    x86_64 = 'x86_64'
    aarch64 = 'aarch64'


class UpdateTargetsOperatingSystem(Enum):
    """
    The operating system of the cores which are the targets of an update.
    """

    ubuntu = 'ubuntu'
    raspbian = 'raspbian'
    amazon_linux = 'amazon_linux'
    openwrt = 'openwrt'


class CreateSoftwareUpdateJobRequest(BaseModel):
    S3UrlSignerRole: S3UrlSignerRole
    SoftwareToUpdate: SoftwareToUpdate
    UpdateAgentLogLevel: Optional[UpdateAgentLogLevel] = None
    UpdateTargets: UpdateTargets
    UpdateTargetsArchitecture: UpdateTargetsArchitecture
    UpdateTargetsOperatingSystem: UpdateTargetsOperatingSystem


class DefinitionInformation(BaseModel):
    """
    Information about a definition.
    """

    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Id: Optional[_String] = None
    LastUpdatedTimestamp: Optional[_String] = None
    LatestVersion: Optional[_String] = None
    LatestVersionArn: Optional[_String] = None
    Name: Optional[_String] = None
    Tags: Optional[Tags] = None


class DeleteConnectorDefinitionRequest(BaseModel):
    pass


class DeleteCoreDefinitionRequest(BaseModel):
    pass


class DeleteDeviceDefinitionRequest(BaseModel):
    pass


class DeleteFunctionDefinitionRequest(BaseModel):
    pass


class DeleteGroupRequest(BaseModel):
    pass


class DeleteLoggerDefinitionRequest(BaseModel):
    pass


class DeleteResourceDefinitionRequest(BaseModel):
    pass


class DeleteSubscriptionDefinitionRequest(BaseModel):
    pass


class Deployment(BaseModel):
    """
    Information about a deployment.
    """

    CreatedAt: Optional[_String] = None
    DeploymentArn: Optional[_String] = None
    DeploymentId: Optional[_String] = None
    DeploymentType: Optional[DeploymentType] = None
    GroupArn: Optional[_String] = None


class Deployments(BaseModel):
    __root__: List[Deployment]


class DisassociateRoleFromGroupRequest(BaseModel):
    pass


class DisassociateServiceRoleFromAccountRequest(BaseModel):
    pass


class EncodingType(Enum):
    binary = 'binary'
    json = 'json'


class ErrorDetail(BaseModel):
    """
    Details about the error.
    """

    DetailedErrorCode: Optional[_String] = None
    DetailedErrorMessage: Optional[_String] = None


class FunctionIsolationMode(Enum):
    """
    Specifies whether the Lambda function runs in a Greengrass container (default) or without containerization. Unless your scenario requires that you run without containerization, we recommend that you run in a Greengrass container. Omit this value to run the Lambda function with the default containerization for the group.
    """

    GreengrassContainer = 'GreengrassContainer'
    NoContainer = 'NoContainer'


class FunctionRunAsConfig(BaseModel):
    """
    Specifies the user and group whose permissions are used when running the Lambda function. You can specify one or both values to override the default values. We recommend that you avoid running as root unless absolutely necessary to minimize the risk of unintended changes or malicious attacks. To run as root, you must set ''IsolationMode'' to ''NoContainer'' and update config.json in ''greengrass-root/config'' to set ''allowFunctionsToRunAsRoot'' to ''yes''.
    """

    Gid: Optional[_Integer] = None
    Uid: Optional[_Integer] = None


class GetAssociatedRoleRequest(BaseModel):
    pass


class GetBulkDeploymentStatusRequest(BaseModel):
    pass


class GetConnectivityInfoRequest(BaseModel):
    pass


class GetConnectorDefinitionRequest(BaseModel):
    pass


class GetConnectorDefinitionVersionRequest(BaseModel):
    pass


class GetCoreDefinitionRequest(BaseModel):
    pass


class GetCoreDefinitionVersionRequest(BaseModel):
    pass


class GetDeploymentStatusRequest(BaseModel):
    pass


class GetDeviceDefinitionRequest(BaseModel):
    pass


class GetDeviceDefinitionVersionRequest(BaseModel):
    pass


class GetFunctionDefinitionRequest(BaseModel):
    pass


class GetFunctionDefinitionVersionRequest(BaseModel):
    pass


class GetGroupCertificateAuthorityRequest(BaseModel):
    pass


class GetGroupCertificateConfigurationRequest(BaseModel):
    pass


class GetGroupRequest(BaseModel):
    pass


class GetGroupVersionRequest(BaseModel):
    pass


class GetLoggerDefinitionRequest(BaseModel):
    pass


class GetLoggerDefinitionVersionRequest(BaseModel):
    pass


class GetResourceDefinitionRequest(BaseModel):
    pass


class GetResourceDefinitionVersionRequest(BaseModel):
    pass


class GetServiceRoleForAccountRequest(BaseModel):
    pass


class GetSubscriptionDefinitionRequest(BaseModel):
    pass


class GetSubscriptionDefinitionVersionRequest(BaseModel):
    pass


class GetThingRuntimeConfigurationRequest(BaseModel):
    pass


class GroupCertificateAuthorityProperties(BaseModel):
    """
    Information about a certificate authority for a group.
    """

    GroupCertificateAuthorityArn: Optional[_String] = None
    GroupCertificateAuthorityId: Optional[_String] = None


class GroupInformation(CreateCoreDefinitionResponse):
    """
    Information about a group.
    """

    pass


class GroupOwnerSetting(BaseModel):
    """
    Group owner related settings for local resources.
    """

    AutoAddGroupOwner: Optional[_Boolean] = None
    GroupOwner: Optional[_String] = None


class ListBulkDeploymentDetailedReportsRequest(BaseModel):
    pass


class ListBulkDeploymentsRequest(BaseModel):
    pass


class ListConnectorDefinitionVersionsRequest(BaseModel):
    pass


class ListConnectorDefinitionsRequest(BaseModel):
    pass


class _ListOfDefinitionInformation(BaseModel):
    __root__: List[DefinitionInformation]


class ListCoreDefinitionVersionsRequest(BaseModel):
    pass


class ListCoreDefinitionsRequest(BaseModel):
    pass


class ListDeploymentsRequest(BaseModel):
    pass


class ListDeviceDefinitionVersionsRequest(BaseModel):
    pass


class ListDeviceDefinitionsRequest(BaseModel):
    pass


class ListFunctionDefinitionVersionsRequest(BaseModel):
    pass


class ListFunctionDefinitionsRequest(BaseModel):
    pass


class ListGroupCertificateAuthoritiesRequest(BaseModel):
    pass


class _ListOfGroupCertificateAuthorityProperties(BaseModel):
    __root__: List[GroupCertificateAuthorityProperties]


class ListGroupVersionsRequest(BaseModel):
    pass


class ListGroupsRequest(BaseModel):
    pass


class _ListOfGroupInformation(BaseModel):
    __root__: List[GroupInformation]


class ListLoggerDefinitionVersionsRequest(BaseModel):
    pass


class ListLoggerDefinitionsRequest(BaseModel):
    pass


class ListResourceDefinitionVersionsRequest(BaseModel):
    pass


class ListResourceDefinitionsRequest(BaseModel):
    pass


class ListSubscriptionDefinitionVersionsRequest(BaseModel):
    pass


class ListSubscriptionDefinitionsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class LocalDeviceResourceData(BaseModel):
    """
    Attributes that define a local device resource.
    """

    GroupOwnerSetting: Optional[GroupOwnerSetting] = None
    SourcePath: Optional[_String] = None


class LocalVolumeResourceData(BaseModel):
    """
    Attributes that define a local volume resource.
    """

    DestinationPath: Optional[_String] = None
    GroupOwnerSetting: Optional[GroupOwnerSetting] = None
    SourcePath: Optional[_String] = None


class LoggerComponent(Enum):
    GreengrassSystem = 'GreengrassSystem'
    Lambda = 'Lambda'


class LoggerLevel(Enum):
    DEBUG = 'DEBUG'
    INFO = 'INFO'
    WARN = 'WARN'
    ERROR = 'ERROR'
    FATAL = 'FATAL'


class LoggerType(Enum):
    FileSystem = 'FileSystem'
    AWSCloudWatch = 'AWSCloudWatch'


class Permission(Enum):
    """
    The type of permission a function has to access a resource.
    """

    ro = 'ro'
    rw = 'rw'


class ResetDeploymentsRequest(BaseModel):
    """
    Information needed to reset deployments.
    """

    Force: Optional[_Boolean] = None


class ResourceAccessPolicy(BaseModel):
    """
    A policy used by the function to access a resource.
    """

    Permission: Optional[Permission] = None
    ResourceId: _String


class ResourceDownloadOwnerSetting(BaseModel):
    """
    The owner setting for downloaded machine learning resources.
    """

    GroupOwner: _String
    GroupPermission: Permission


class TelemetryConfiguration(BaseModel):
    """
    Configuration settings for running telemetry.
    """

    ConfigurationSyncStatus: Optional[ConfigurationSyncStatus] = None
    Telemetry: Telemetry


class _ListOfString(BaseModel):
    __root__: List[_String]


class StartBulkDeploymentRequest(BaseModel):
    ExecutionRoleArn: _String
    InputFileUri: _String
    tags: Optional[Tags] = None


class StopBulkDeploymentRequest(BaseModel):
    pass


class TagResourceRequest(BaseModel):
    """
    A map of the key-value pairs for the resource tag.
    """

    tags: Optional[Tags] = None


class TelemetryConfigurationUpdate(BaseModel):
    """
    Configuration settings for running telemetry.
    """

    Telemetry: Telemetry


class UntagResourceRequest(BaseModel):
    pass


class UpdateConnectorDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateCoreDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateDeviceDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateFunctionDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateGroupCertificateConfigurationRequest(BaseModel):
    CertificateExpiryInMilliseconds: Optional[_String] = None


class UpdateGroupRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateLoggerDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateResourceDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateSubscriptionDefinitionRequest(BaseModel):
    Name: Optional[_String] = None


class UpdateThingRuntimeConfigurationRequest(BaseModel):
    TelemetryConfiguration: Optional[TelemetryConfigurationUpdate] = None


class VersionInformation(CreateConnectorDefinitionVersionResponse):
    """
    Information about a version.
    """

    pass


class AssociateRoleToGroupResponse(BaseModel):
    AssociatedAt: Optional[_String] = None


class AssociateServiceRoleToAccountResponse(AssociateRoleToGroupResponse):
    pass


class CreateConnectorDefinitionResponse(CreateCoreDefinitionResponse):
    pass


class Connector(BaseModel):
    """
    Information about a connector. Connectors run on the Greengrass core and contain built-in integration with local infrastructure, device protocols, AWS, and other cloud services.
    """

    ConnectorArn: _String
    Id: _String
    Parameters: Optional[_MapOfString] = None


class Core(BaseModel):
    """
    Information about a core.
    """

    CertificateArn: _String
    Id: _String
    SyncShadow: Optional[_Boolean] = None
    ThingArn: _String


class Device(Core):
    """
    Information about a device.
    """

    pass


class FunctionDefaultExecutionConfig(BaseModel):
    """
    Configuration information that specifies how a Lambda function runs.
    """

    IsolationMode: Optional[FunctionIsolationMode] = None
    RunAs: Optional[FunctionRunAsConfig] = None


class Logger(BaseModel):
    """
    Information about a logger
    """

    Component: LoggerComponent
    Id: _String
    Level: LoggerLevel
    Space: Optional[_Integer] = None
    Type: LoggerType


class _ListOfSubscription(BaseModel):
    __root__: List[Subscription]


class GetConnectorDefinitionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Id: Optional[_String] = None
    LastUpdatedTimestamp: Optional[_String] = None
    LatestVersion: Optional[_String] = None
    LatestVersionArn: Optional[_String] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class GetCoreDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class GetDeviceDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class GetFunctionDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class GetGroupResponse(GetConnectorDefinitionResponse):
    pass


class GetGroupVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[GroupVersion] = None
    Id: Optional[_String] = None
    Version: Optional[_String] = None


class GetLoggerDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class GetResourceDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class GetSubscriptionDefinitionResponse(GetConnectorDefinitionResponse):
    pass


class ListBulkDeploymentsResponse(BaseModel):
    BulkDeployments: Optional[BulkDeployments] = None
    NextToken: Optional[_String] = None


class ListConnectorDefinitionsResponse(BaseModel):
    Definitions: Optional[_ListOfDefinitionInformation] = None
    NextToken: Optional[_String] = None


class ListCoreDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListDeploymentsResponse(BaseModel):
    Deployments: Optional[Deployments] = None
    NextToken: Optional[_String] = None


class ListDeviceDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListFunctionDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListGroupCertificateAuthoritiesResponse(BaseModel):
    GroupCertificateAuthorities: Optional[
        _ListOfGroupCertificateAuthorityProperties
    ] = None


class ListGroupsResponse(BaseModel):
    Groups: Optional[_ListOfGroupInformation] = None
    NextToken: Optional[_String] = None


class ListLoggerDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListResourceDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListSubscriptionDefinitionsResponse(ListConnectorDefinitionsResponse):
    pass


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[Tags] = None


class ConnectivityInfo1(BaseModel):
    """
    Information about a Greengrass core's connectivity.
    """

    HostAddress: Optional[_String] = None
    Id: Optional[_String] = None
    Metadata: Optional[_String] = None
    PortNumber: Optional[_Integer] = None


class ErrorDetails(BaseModel):
    """
    A list of error details.
    """

    __root__: Annotated[
        List[ErrorDetail], Field(description='A list of error details.')
    ]


class BulkDeploymentResult(BaseModel):
    """
    Information about an individual group deployment in a bulk deployment operation.
    """

    CreatedAt: Optional[_String] = None
    DeploymentArn: Optional[_String] = None
    DeploymentId: Optional[_String] = None
    DeploymentStatus: Optional[_String] = None
    DeploymentType: Optional[DeploymentType] = None
    ErrorDetails: Optional[ErrorDetails] = None
    ErrorMessage: Optional[_String] = None
    GroupArn: Optional[_String] = None


class BulkDeploymentResults(BaseModel):
    __root__: List[BulkDeploymentResult]


class SubscriptionDefinitionVersion(BaseModel):
    """
    Information about a subscription definition version.
    """

    Subscriptions: Optional[_ListOfSubscription] = None


class CreateSubscriptionDefinitionRequest(BaseModel):
    InitialVersion: Optional[SubscriptionDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateSubscriptionDefinitionVersionRequest(BaseModel):
    Subscriptions: Optional[_ListOfSubscription] = None


class FunctionExecutionConfig(FunctionDefaultExecutionConfig):
    """
    Configuration information that specifies how a Lambda function runs.
    """

    pass


class _ListOfResourceAccessPolicy(BaseModel):
    __root__: List[ResourceAccessPolicy]


class _ListOfConnectivityInfo(BaseModel):
    __root__: List[ConnectivityInfo1]


class RuntimeConfiguration(BaseModel):
    """
    Runtime configuration for a thing.
    """

    TelemetryConfiguration: Optional[TelemetryConfiguration] = None


class _ListOfVersionInformation(BaseModel):
    __root__: List[VersionInformation]


class S3MachineLearningModelResourceData(BaseModel):
    """
    Attributes that define an Amazon S3 machine learning resource.
    """

    DestinationPath: Optional[_String] = None
    OwnerSetting: Optional[ResourceDownloadOwnerSetting] = None
    S3Uri: Optional[_String] = None


class SageMakerMachineLearningModelResourceData(BaseModel):
    """
    Attributes that define an Amazon SageMaker machine learning resource.
    """

    DestinationPath: Optional[_String] = None
    OwnerSetting: Optional[ResourceDownloadOwnerSetting] = None
    SageMakerJobArn: Optional[_String] = None


class SecretsManagerSecretResourceData(BaseModel):
    """
    Attributes that define a secret resource, which references a secret from AWS Secrets Manager. AWS IoT Greengrass stores a local, encrypted copy of the secret on the Greengrass core, where it can be securely accessed by connectors and Lambda functions.
    """

    ARN: Optional[_String] = None
    AdditionalStagingLabelsToDownload: Optional[_ListOfString] = None


class UpdateConnectivityInfoRequest(BaseModel):
    """
    Connectivity information.
    """

    ConnectivityInfo: Optional[_ListOfConnectivityInfo] = None


class _ListOfConnector(BaseModel):
    __root__: List[Connector]


class _ListOfCore(BaseModel):
    __root__: List[Core]


class _ListOfDevice(BaseModel):
    __root__: List[Device]


class FunctionDefaultConfig(BaseModel):
    """
    The default configuration that applies to all Lambda functions in the group. Individual Lambda functions can override these settings.
    """

    Execution: Optional[FunctionDefaultExecutionConfig] = None


class _ListOfLogger(BaseModel):
    __root__: List[Logger]


class GetBulkDeploymentStatusResponse(BaseModel):
    BulkDeploymentMetrics: Optional[BulkDeploymentMetrics] = None
    BulkDeploymentStatus: Optional[BulkDeploymentStatus] = None
    CreatedAt: Optional[_String] = None
    ErrorDetails: Optional[ErrorDetails] = None
    ErrorMessage: Optional[_String] = None
    tags: Optional[Tags] = None


class GetConnectivityInfoResponse(BaseModel):
    ConnectivityInfo: Optional[_ListOfConnectivityInfo] = None
    Message: Optional[_String] = None


class GetDeploymentStatusResponse(BaseModel):
    DeploymentStatus: Optional[_String] = None
    DeploymentType: Optional[DeploymentType] = None
    ErrorDetails: Optional[ErrorDetails] = None
    ErrorMessage: Optional[_String] = None
    UpdatedAt: Optional[_String] = None


class GetSubscriptionDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[SubscriptionDefinitionVersion] = None
    Id: Optional[_String] = None
    NextToken: Optional[_String] = None
    Version: Optional[_String] = None


class GetThingRuntimeConfigurationResponse(BaseModel):
    RuntimeConfiguration: Optional[RuntimeConfiguration] = None


class ListBulkDeploymentDetailedReportsResponse(BaseModel):
    Deployments: Optional[BulkDeploymentResults] = None
    NextToken: Optional[_String] = None


class ListConnectorDefinitionVersionsResponse(BaseModel):
    NextToken: Optional[_String] = None
    Versions: Optional[_ListOfVersionInformation] = None


class ListCoreDefinitionVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListDeviceDefinitionVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListFunctionDefinitionVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListGroupVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListLoggerDefinitionVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListResourceDefinitionVersionsResponse(ListConnectorDefinitionVersionsResponse):
    pass


class ListSubscriptionDefinitionVersionsResponse(
    ListConnectorDefinitionVersionsResponse
):
    pass


class ConnectorDefinitionVersion(BaseModel):
    """
    Information about the connector definition version, which is a container for connectors.
    """

    Connectors: Optional[_ListOfConnector] = None


class CoreDefinitionVersion(BaseModel):
    """
    Information about a core definition version.
    """

    Cores: Optional[_ListOfCore] = None


class CreateConnectorDefinitionRequest(BaseModel):
    InitialVersion: Optional[ConnectorDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateConnectorDefinitionVersionRequest(BaseModel):
    Connectors: Optional[_ListOfConnector] = None


class CreateCoreDefinitionRequest(BaseModel):
    """
    Information needed to create a core definition.
    """

    InitialVersion: Optional[CoreDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateCoreDefinitionVersionRequest(BaseModel):
    Cores: Optional[_ListOfCore] = None


class DeviceDefinitionVersion(BaseModel):
    """
    Information about a device definition version.
    """

    Devices: Optional[_ListOfDevice] = None


class CreateDeviceDefinitionRequest(BaseModel):
    InitialVersion: Optional[DeviceDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateDeviceDefinitionVersionRequest(BaseModel):
    Devices: Optional[_ListOfDevice] = None


class LoggerDefinitionVersion(BaseModel):
    """
    Information about a logger definition version.
    """

    Loggers: Optional[_ListOfLogger] = None


class CreateLoggerDefinitionRequest(BaseModel):
    InitialVersion: Optional[LoggerDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateLoggerDefinitionVersionRequest(BaseModel):
    Loggers: Optional[_ListOfLogger] = None


class FunctionConfigurationEnvironment(BaseModel):
    """
    The environment configuration of the function.
    """

    AccessSysfs: Optional[_Boolean] = None
    Execution: Optional[FunctionExecutionConfig] = None
    ResourceAccessPolicies: Optional[_ListOfResourceAccessPolicy] = None
    Variables: Optional[_MapOfString] = None


class ResourceDataContainer(BaseModel):
    """
    A container for resource data. The container takes only one of the following supported resource data types: ''LocalDeviceResourceData'', ''LocalVolumeResourceData'', ''SageMakerMachineLearningModelResourceData'', ''S3MachineLearningModelResourceData'', ''SecretsManagerSecretResourceData''.
    """

    LocalDeviceResourceData: Optional[LocalDeviceResourceData] = None
    LocalVolumeResourceData: Optional[LocalVolumeResourceData] = None
    S3MachineLearningModelResourceData: Optional[
        S3MachineLearningModelResourceData
    ] = None
    SageMakerMachineLearningModelResourceData: Optional[
        SageMakerMachineLearningModelResourceData
    ] = None
    SecretsManagerSecretResourceData: Optional[SecretsManagerSecretResourceData] = None


class Resource(BaseModel):
    """
    Information about a resource.
    """

    Id: _String
    Name: _String
    ResourceDataContainer: ResourceDataContainer


class GetConnectorDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[ConnectorDefinitionVersion] = None
    Id: Optional[_String] = None
    NextToken: Optional[_String] = None
    Version: Optional[_String] = None


class GetCoreDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[CoreDefinitionVersion] = None
    Id: Optional[_String] = None
    NextToken: Optional[_String] = None
    Version: Optional[_String] = None


class GetDeviceDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[DeviceDefinitionVersion] = None
    Id: Optional[_String] = None
    NextToken: Optional[_String] = None
    Version: Optional[_String] = None


class GetLoggerDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[LoggerDefinitionVersion] = None
    Id: Optional[_String] = None
    Version: Optional[_String] = None


class FunctionConfiguration(BaseModel):
    """
    The configuration of the Lambda function.
    """

    EncodingType: Optional[EncodingType] = None
    Environment: Optional[FunctionConfigurationEnvironment] = None
    ExecArgs: Optional[_String] = None
    Executable: Optional[_String] = None
    MemorySize: Optional[_Integer] = None
    Pinned: Optional[_Boolean] = None
    Timeout: Optional[_Integer] = None


class Function(BaseModel):
    """
    Information about a Lambda function.
    """

    FunctionArn: Optional[_String] = None
    FunctionConfiguration: Optional[FunctionConfiguration] = None
    Id: _String


class _ListOfResource(BaseModel):
    __root__: List[Resource]


class ResourceDefinitionVersion(BaseModel):
    """
    Information about a resource definition version.
    """

    Resources: Optional[_ListOfResource] = None


class CreateResourceDefinitionRequest(BaseModel):
    InitialVersion: Optional[ResourceDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateResourceDefinitionVersionRequest(BaseModel):
    Resources: Optional[_ListOfResource] = None


class _ListOfFunction(BaseModel):
    __root__: List[Function]


class GetResourceDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[ResourceDefinitionVersion] = None
    Id: Optional[_String] = None
    Version: Optional[_String] = None


class FunctionDefinitionVersion(BaseModel):
    """
    Information about a function definition version.
    """

    DefaultConfig: Optional[FunctionDefaultConfig] = None
    Functions: Optional[_ListOfFunction] = None


class CreateFunctionDefinitionRequest(BaseModel):
    InitialVersion: Optional[FunctionDefinitionVersion] = None
    Name: Optional[_String] = None
    tags: Optional[Tags] = None


class CreateFunctionDefinitionVersionRequest(BaseModel):
    """
    Information needed to create a function definition version.
    """

    DefaultConfig: Optional[FunctionDefaultConfig] = None
    Functions: Optional[_ListOfFunction] = None


class GetFunctionDefinitionVersionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTimestamp: Optional[_String] = None
    Definition: Optional[FunctionDefinitionVersion] = None
    Id: Optional[_String] = None
    NextToken: Optional[_String] = None
    Version: Optional[_String] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:28+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ResourceInUseException(ResourceNotFoundException):
    pass


class InvalidArgumentException(ResourceNotFoundException):
    pass


class ConcurrentModificationException(ResourceNotFoundException):
    pass


class InvalidRequestException(ResourceNotFoundException):
    pass


class InvalidApplicationConfigurationException(ResourceNotFoundException):
    pass


class CodeValidationException(ResourceNotFoundException):
    pass


class LimitExceededException(ResourceNotFoundException):
    pass


class TooManyTagsException(ResourceNotFoundException):
    pass


class CreateApplicationSnapshotResponse(BaseModel):
    pass


class UnsupportedOperationException(ResourceNotFoundException):
    pass


class DeleteApplicationResponse(CreateApplicationSnapshotResponse):
    pass


class DeleteApplicationSnapshotResponse(CreateApplicationSnapshotResponse):
    pass


class UnableToDetectSchemaException(ResourceNotFoundException):
    pass


class ResourceProvisionedThroughputExceededException(ResourceNotFoundException):
    pass


class ServiceUnavailableException(ResourceNotFoundException):
    pass


class StartApplicationResponse(CreateApplicationSnapshotResponse):
    pass


class StopApplicationResponse(CreateApplicationSnapshotResponse):
    pass


class TagResourceResponse(CreateApplicationSnapshotResponse):
    pass


class UntagResourceResponse(CreateApplicationSnapshotResponse):
    pass


class ApplicationName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9_.-]+')
    ]


class ApplicationVersionId(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=999999999.0)]


class ConditionalToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='[a-zA-Z0-9-_+/=]+')
    ]


class ResourceARN(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='arn:.*')]


class Id(BaseModel):
    __root__: Annotated[
        str, Field(max_length=50, min_length=1, regex='[a-zA-Z0-9_.-]+')
    ]


class CodeContentType(Enum):
    PLAINTEXT = 'PLAINTEXT'
    ZIPFILE = 'ZIPFILE'


class ApplicationDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0)]


class RuntimeEnvironment(Enum):
    SQL_1_0 = 'SQL-1_0'
    FLINK_1_6 = 'FLINK-1_6'
    FLINK_1_8 = 'FLINK-1_8'
    FLINK_1_11 = 'FLINK-1_11'
    ZEPPELIN_FLINK_1_0 = 'ZEPPELIN-FLINK-1_0'


class RoleARN(ResourceARN):
    pass


class ApplicationStatus(Enum):
    DELETING = 'DELETING'
    STARTING = 'STARTING'
    STOPPING = 'STOPPING'
    READY = 'READY'
    RUNNING = 'RUNNING'
    UPDATING = 'UPDATING'
    AUTOSCALING = 'AUTOSCALING'
    FORCE_STOPPING = 'FORCE_STOPPING'
    MAINTENANCE = 'MAINTENANCE'
    ROLLING_BACK = 'ROLLING_BACK'
    ROLLED_BACK = 'ROLLED_BACK'


class Timestamp(BaseModel):
    __root__: datetime


class ApplicationMode(Enum):
    STREAMING = 'STREAMING'
    INTERACTIVE = 'INTERACTIVE'


class ApplicationMaintenanceWindowStartTime(BaseModel):
    __root__: Annotated[
        str, Field(max_length=5, min_length=5, regex='([01][0-9]|2[0-3]):[0-5][0-9]')
    ]


class ApplicationMaintenanceWindowEndTime(ApplicationMaintenanceWindowStartTime):
    pass


class ApplicationMaintenanceConfigurationUpdate(BaseModel):
    """
    Describes the updated maintenance configuration for the application.
    """

    ApplicationMaintenanceWindowStartTimeUpdate: ApplicationMaintenanceWindowStartTime


class ApplicationRestoreType(Enum):
    SKIP_RESTORE_FROM_SNAPSHOT = 'SKIP_RESTORE_FROM_SNAPSHOT'
    RESTORE_FROM_LATEST_SNAPSHOT = 'RESTORE_FROM_LATEST_SNAPSHOT'
    RESTORE_FROM_CUSTOM_SNAPSHOT = 'RESTORE_FROM_CUSTOM_SNAPSHOT'


class SnapshotName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[a-zA-Z0-9_.-]+')
    ]


class ApplicationRestoreConfiguration(BaseModel):
    """
    Specifies the method and snapshot to use when restarting an application using previously saved application state.
    """

    ApplicationRestoreType: ApplicationRestoreType
    SnapshotName: Optional[SnapshotName] = None


class BooleanObject(BaseModel):
    __root__: bool


class ApplicationSummary(BaseModel):
    """
    Provides application summary information, including the application Amazon Resource Name (ARN), name, and status.
    """

    ApplicationName: ApplicationName
    ApplicationARN: ResourceARN
    ApplicationStatus: ApplicationStatus
    ApplicationVersionId: ApplicationVersionId
    RuntimeEnvironment: RuntimeEnvironment
    ApplicationMode: Optional[ApplicationMode] = None


class ApplicationSummaries(BaseModel):
    __root__: List[ApplicationSummary]


class ApplicationVersionSummary(BaseModel):
    """
    The summary of the application version.
    """

    ApplicationVersionId: ApplicationVersionId
    ApplicationStatus: ApplicationStatus


class ApplicationVersionSummaries(BaseModel):
    __root__: List[ApplicationVersionSummary]


class ArtifactType(Enum):
    UDF = 'UDF'
    DEPENDENCY_JAR = 'DEPENDENCY_JAR'


class AuthorizedUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class BasePath(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex="[a-zA-Z0-9/!-_.*'()]+")
    ]


class BucketARN(ResourceARN):
    pass


class RecordRowDelimiter(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class RecordColumnDelimiter(RecordRowDelimiter):
    pass


class CSVMappingParameters(BaseModel):
    """
    <p>For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the <i>'\n'</i> as the row delimiter and a comma (",") as the column delimiter: </p> <p> <code>"name1", "address1"</code> </p> <p> <code>"name2", "address2"</code> </p>
    """

    RecordRowDelimiter: RecordRowDelimiter
    RecordColumnDelimiter: RecordColumnDelimiter


class ConfigurationType(Enum):
    DEFAULT = 'DEFAULT'
    CUSTOM = 'CUSTOM'


class CheckpointInterval(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class MinPauseBetweenCheckpoints(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class CheckpointConfiguration(BaseModel):
    """
    Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/concepts/programming-model.html#checkpoints-for-fault-tolerance"> Checkpoints for Fault Tolerance</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink Documentation</a>.
    """

    ConfigurationType: ConfigurationType
    CheckpointingEnabled: Optional[BooleanObject] = None
    CheckpointInterval: Optional[CheckpointInterval] = None
    MinPauseBetweenCheckpoints: Optional[MinPauseBetweenCheckpoints] = None


class CheckpointConfigurationDescription(BaseModel):
    """
    Describes checkpointing parameters for a Flink-based Kinesis Data Analytics application.
    """

    ConfigurationType: Optional[ConfigurationType] = None
    CheckpointingEnabled: Optional[BooleanObject] = None
    CheckpointInterval: Optional[CheckpointInterval] = None
    MinPauseBetweenCheckpoints: Optional[MinPauseBetweenCheckpoints] = None


class CheckpointConfigurationUpdate(BaseModel):
    """
    Describes updates to the checkpointing parameters for a Flink-based Kinesis Data Analytics application.
    """

    ConfigurationTypeUpdate: Optional[ConfigurationType] = None
    CheckpointingEnabledUpdate: Optional[BooleanObject] = None
    CheckpointIntervalUpdate: Optional[CheckpointInterval] = None
    MinPauseBetweenCheckpointsUpdate: Optional[MinPauseBetweenCheckpoints] = None


class LogStreamARN(ResourceARN):
    pass


class CloudWatchLoggingOptionDescription(BaseModel):
    """
    Describes the Amazon CloudWatch logging option.
    """

    CloudWatchLoggingOptionId: Optional[Id] = None
    LogStreamARN: LogStreamARN
    RoleARN: Optional[RoleARN] = None


class CloudWatchLoggingOptionUpdate(BaseModel):
    """
    Describes the Amazon CloudWatch logging option updates.
    """

    CloudWatchLoggingOptionId: Id
    LogStreamARNUpdate: Optional[LogStreamARN] = None


class CloudWatchLoggingOptionUpdates(BaseModel):
    __root__: List[CloudWatchLoggingOptionUpdate]


class TextContent(BaseModel):
    __root__: Annotated[str, Field(max_length=102400, min_length=0)]


class ZipFileContent(BaseModel):
    __root__: Annotated[str, Field(max_length=52428800, min_length=0)]


class CodeMD5(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=128)]


class CodeSize(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=52428800.0)]


class UrlType(Enum):
    FLINK_DASHBOARD_URL = 'FLINK_DASHBOARD_URL'
    ZEPPELIN_UI_URL = 'ZEPPELIN_UI_URL'


class SessionExpirationDurationInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=1800.0, le=43200.0)]


class DatabaseARN(ResourceARN):
    pass


class S3ContentBaseLocation(BaseModel):
    """
    The S3 bucket that holds the application information.
    """

    BucketARN: BucketARN
    BasePath: Optional[BasePath] = None


class DeployAsApplicationConfiguration(BaseModel):
    """
    The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state..
    """

    S3ContentLocation: S3ContentBaseLocation


class S3ContentBaseLocationDescription(S3ContentBaseLocation):
    """
    The description of the S3 base location that holds the application.
    """

    pass


class DeployAsApplicationConfigurationDescription(BaseModel):
    """
    The configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state.
    """

    S3ContentLocationDescription: S3ContentBaseLocationDescription


class S3ContentBaseLocationUpdate(BaseModel):
    """
    The information required to update the S3 base location that holds the application.
    """

    BucketARNUpdate: BucketARN
    BasePathUpdate: Optional[BasePath] = None


class DeployAsApplicationConfigurationUpdate(BaseModel):
    """
    Updates to the configuration information required to deploy an Amazon Data Analytics Studio notebook as an application with durable state..
    """

    S3ContentLocationUpdate: S3ContentBaseLocationUpdate


class RecordFormatType(Enum):
    JSON = 'JSON'
    CSV = 'CSV'


class DestinationSchema(BaseModel):
    """
    Describes the data format when records are written to the destination in a SQL-based Kinesis Data Analytics application.
    """

    RecordFormatType: RecordFormatType


class FileKey(RecordRowDelimiter):
    pass


class JobPlanDescription(BaseModel):
    __root__: str


class FlinkRunConfiguration(BaseModel):
    """
    Describes the starting parameters for a Flink-based Kinesis Data Analytics application.
    """

    AllowNonRestoredState: Optional[BooleanObject] = None


class InAppStreamName(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1, regex='[^-\\s<>&]*')]


class InAppStreamNames(BaseModel):
    __root__: List[InAppStreamName]


class InAppTableName(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class KinesisStreamsInput(BaseModel):
    """
    Identifies a Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN).
    """

    ResourceARN: ResourceARN


class KinesisFirehoseInput(KinesisStreamsInput):
    """
    For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).
    """

    pass


class KinesisStreamsInputDescription(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the Kinesis data stream that is configured as the streaming source in the application input configuration.
    """

    ResourceARN: ResourceARN
    RoleARN: Optional[RoleARN] = None


class KinesisFirehoseInputDescription(KinesisStreamsInputDescription):
    """
    Describes the Amazon Kinesis Data Firehose delivery stream that is configured as the streaming source in the application input configuration.
    """

    pass


class InputLambdaProcessor(KinesisStreamsInput):
    """
    An object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application.
    """

    pass


class InputLambdaProcessorDescription(KinesisStreamsInputDescription):
    """
    For a SQL-based Kinesis Data Analytics application, an object that contains the Amazon Resource Name (ARN) of the AWS Lambda function that is used to preprocess records in the stream.
    """

    pass


class InputLambdaProcessorUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, represents an update to the <a>InputLambdaProcessor</a> that is used to preprocess the records in the stream.
    """

    ResourceARNUpdate: ResourceARN


class InputParallelismCount(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=64.0)]


class InputParallelismUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, provides updates to the parallelism count.
    """

    CountUpdate: InputParallelismCount


class InputProcessingConfigurationUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes updates to an <a>InputProcessingConfiguration</a>.
    """

    InputLambdaProcessorUpdate: InputLambdaProcessorUpdate


class RecordEncoding(BaseModel):
    __root__: Annotated[str, Field(max_length=5, min_length=5, regex='UTF-8')]


class InputStartingPosition(Enum):
    NOW = 'NOW'
    TRIM_HORIZON = 'TRIM_HORIZON'
    LAST_STOPPED_POINT = 'LAST_STOPPED_POINT'


class KinesisStreamsInputUpdate(InputLambdaProcessorUpdate):
    """
    When you update the input configuration for a SQL-based Kinesis Data Analytics application, provides information about a Kinesis stream as the streaming source.
    """

    pass


class KinesisFirehoseInputUpdate(InputLambdaProcessorUpdate):
    """
    For a SQL-based Kinesis Data Analytics application, when updating application input configuration, provides information about a Kinesis Data Firehose delivery stream as the streaming source.
    """

    pass


class RecordRowPath(BaseModel):
    __root__: Annotated[
        str, Field(max_length=65535, min_length=1, regex='^(?=^\\$)(?=^\\S+$).*$')
    ]


class JSONMappingParameters(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source.
    """

    RecordRowPath: RecordRowPath


class KinesisAnalyticsARN(ResourceARN):
    pass


class KinesisFirehoseOutput(KinesisStreamsInput):
    """
    For a SQL-based Kinesis Data Analytics application, when configuring application output, identifies a Kinesis Data Firehose delivery stream as the destination. You provide the stream Amazon Resource Name (ARN) of the delivery stream.
    """

    pass


class KinesisFirehoseOutputDescription(KinesisStreamsInputDescription):
    """
    For a SQL-based Kinesis Data Analytics application's output, describes the Kinesis Data Firehose delivery stream that is configured as its destination.
    """

    pass


class KinesisFirehoseOutputUpdate(InputLambdaProcessorUpdate):
    """
    For a SQL-based Kinesis Data Analytics application, when updating an output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis Data Firehose delivery stream that is configured as the destination.
    """

    pass


class KinesisStreamsOutput(KinesisStreamsInput):
    """
    When you configure a SQL-based Kinesis Data Analytics application's output, identifies a Kinesis data stream as the destination. You provide the stream Amazon Resource Name (ARN).
    """

    pass


class KinesisStreamsOutputDescription(KinesisStreamsInputDescription):
    """
    For an SQL-based Kinesis Data Analytics application's output, describes the Kinesis data stream that is configured as its destination.
    """

    pass


class KinesisStreamsOutputUpdate(InputLambdaProcessorUpdate):
    """
    When you update a SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about a Kinesis data stream that is configured as the destination.
    """

    pass


class LambdaOutput(KinesisStreamsInput):
    """
    When you configure a SQL-based Kinesis Data Analytics application's output, identifies an AWS Lambda function as the destination. You provide the function Amazon Resource Name (ARN) of the Lambda function.
    """

    pass


class LambdaOutputDescription(KinesisStreamsInputDescription):
    """
    For a SQL-based Kinesis Data Analytics application's output, describes the AWS Lambda function that is configured as its destination.
    """

    pass


class LambdaOutputUpdate(InputLambdaProcessorUpdate):
    """
    When you update an SQL-based Kinesis Data Analytics application's output configuration using the <a>UpdateApplication</a> operation, provides information about an AWS Lambda function that is configured as the destination.
    """

    pass


class ListSnapshotsInputLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class ListApplicationVersionsInputLimit(ListSnapshotsInputLimit):
    pass


class ListApplicationsInputLimit(ListSnapshotsInputLimit):
    pass


class LogLevel(Enum):
    INFO = 'INFO'
    WARN = 'WARN'
    ERROR = 'ERROR'
    DEBUG = 'DEBUG'


class MappingParameters(BaseModel):
    """
    When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
    """

    JSONMappingParameters: Optional[JSONMappingParameters] = None
    CSVMappingParameters: Optional[CSVMappingParameters] = None


class MavenArtifactId(SnapshotName):
    pass


class MavenGroupId(SnapshotName):
    pass


class MavenVersion(SnapshotName):
    pass


class MetricsLevel(Enum):
    APPLICATION = 'APPLICATION'
    TASK = 'TASK'
    OPERATOR = 'OPERATOR'
    PARALLELISM = 'PARALLELISM'


class ObjectVersion(ApplicationDescription):
    pass


class OutputDescription(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the application output configuration, which includes the in-application stream name and the destination where the stream data is written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream.
    """

    OutputId: Optional[Id] = None
    Name: Optional[InAppStreamName] = None
    KinesisStreamsOutputDescription: Optional[KinesisStreamsOutputDescription] = None
    KinesisFirehoseOutputDescription: Optional[KinesisFirehoseOutputDescription] = None
    LambdaOutputDescription: Optional[LambdaOutputDescription] = None
    DestinationSchema: Optional[DestinationSchema] = None


class OutputUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes updates to the output configuration identified by the <code>OutputId</code>.
    """

    OutputId: Id
    NameUpdate: Optional[InAppStreamName] = None
    KinesisStreamsOutputUpdate: Optional[KinesisStreamsOutputUpdate] = None
    KinesisFirehoseOutputUpdate: Optional[KinesisFirehoseOutputUpdate] = None
    LambdaOutputUpdate: Optional[LambdaOutputUpdate] = None
    DestinationSchemaUpdate: Optional[DestinationSchema] = None


class OutputUpdates(BaseModel):
    __root__: List[OutputUpdate]


class Parallelism(CheckpointInterval):
    pass


class ParallelismPerKPU(CheckpointInterval):
    pass


class ParsedInputRecordField(JobPlanDescription):
    pass


class ParsedInputRecord(BaseModel):
    __root__: List[ParsedInputRecordField]


class ProcessedInputRecord(JobPlanDescription):
    pass


class PropertyMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class PropertyGroup(BaseModel):
    """
    Property key-value pairs passed into an application.
    """

    PropertyGroupId: Id
    PropertyMap: PropertyMap


class PropertyKey(AuthorizedUrl):
    pass


class PropertyValue(AuthorizedUrl):
    pass


class RawInputRecord(JobPlanDescription):
    pass


class RecordColumnName(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='[^-\\s<>&]*')]


class RecordColumnMapping(BaseModel):
    __root__: Annotated[str, Field(max_length=65535, min_length=0)]


class RecordColumnSqlType(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class RecordColumn(BaseModel):
    """
    <p>For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.</p> <p>Also used to describe the format of the reference data source.</p>
    """

    Name: RecordColumnName
    Mapping: Optional[RecordColumnMapping] = None
    SqlType: RecordColumnSqlType


class S3ReferenceDataSource(BaseModel):
    """
    <p>For a SQL-based Kinesis Data Analytics application, identifies the Amazon S3 bucket and object that contains the reference data.</p> <p>A Kinesis Data Analytics application loads reference data only once. If the data changes, you call the <a>UpdateApplication</a> operation to trigger reloading of data into your application. </p>
    """

    BucketARN: Optional[BucketARN] = None
    FileKey: Optional[FileKey] = None


class S3ReferenceDataSourceDescription(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, provides the bucket name and object key name that stores the reference data.
    """

    BucketARN: BucketARN
    FileKey: FileKey
    ReferenceRoleARN: Optional[RoleARN] = None


class S3ReferenceDataSourceUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the Amazon S3 bucket name and object key name for an in-application reference table.
    """

    BucketARNUpdate: Optional[BucketARN] = None
    FileKeyUpdate: Optional[FileKey] = None


class RunConfigurationUpdate(BaseModel):
    """
    Describes the updates to the starting parameters for a Kinesis Data Analytics application.
    """

    FlinkRunConfiguration: Optional[FlinkRunConfiguration] = None
    ApplicationRestoreConfiguration: Optional[ApplicationRestoreConfiguration] = None


class SecurityGroupId(JobPlanDescription):
    pass


class SecurityGroupIds(BaseModel):
    __root__: Annotated[List[SecurityGroupId], Field(max_items=5, min_items=1)]


class SnapshotStatus(Enum):
    CREATING = 'CREATING'
    READY = 'READY'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class SubnetId(JobPlanDescription):
    pass


class SubnetIds(BaseModel):
    __root__: Annotated[List[SubnetId], Field(max_items=16, min_items=1)]


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    A key-value pair (the value is optional) that you can define and assign to AWS resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50. For more information, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/how-tagging.html">Using Tagging</a>.
    """

    Key: TagKey
    Value: Optional[TagValue] = None


class TagKeys(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=1)]


class VpcId(JobPlanDescription):
    pass


class VpcConfigurationUpdate(BaseModel):
    """
    Describes updates to the VPC configuration used by the application.
    """

    VpcConfigurationId: Id
    SubnetIdUpdates: Optional[SubnetIds] = None
    SecurityGroupIdUpdates: Optional[SecurityGroupIds] = None


class ZeppelinMonitoringConfiguration(BaseModel):
    """
    Describes configuration parameters for Amazon CloudWatch logging for a Kinesis Data Analytics Studio notebook. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
    """

    LogLevel: LogLevel


class ZeppelinMonitoringConfigurationDescription(BaseModel):
    """
    The monitoring configuration for Apache Zeppelin within a Kinesis Data Analytics Studio notebook.
    """

    LogLevel: Optional[LogLevel] = None


class ZeppelinMonitoringConfigurationUpdate(BaseModel):
    """
    Updates to the monitoring configuration for Apache Zeppelin within a Kinesis Data Analytics Studio notebook.
    """

    LogLevelUpdate: LogLevel


class CreateApplicationPresignedUrlResponse(BaseModel):
    AuthorizedUrl: Optional[AuthorizedUrl] = None


class CreateApplicationPresignedUrlRequest(BaseModel):
    ApplicationName: ApplicationName
    UrlType: UrlType
    SessionExpirationDurationInSeconds: Optional[
        SessionExpirationDurationInSeconds
    ] = None


class CreateApplicationSnapshotRequest(BaseModel):
    ApplicationName: ApplicationName
    SnapshotName: SnapshotName


class DeleteApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    CreateTimestamp: Timestamp


class DeleteApplicationCloudWatchLoggingOptionRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: Optional[ApplicationVersionId] = None
    CloudWatchLoggingOptionId: Id
    ConditionalToken: Optional[ConditionalToken] = None


class DeleteApplicationInputProcessingConfigurationResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None


class DeleteApplicationInputProcessingConfigurationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    InputId: Id


class DeleteApplicationOutputResponse(
    DeleteApplicationInputProcessingConfigurationResponse
):
    pass


class DeleteApplicationOutputRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    OutputId: Id


class DeleteApplicationReferenceDataSourceResponse(
    DeleteApplicationInputProcessingConfigurationResponse
):
    pass


class DeleteApplicationReferenceDataSourceRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    ReferenceId: Id


class DeleteApplicationSnapshotRequest(BaseModel):
    ApplicationName: ApplicationName
    SnapshotName: SnapshotName
    SnapshotCreationTimestamp: Timestamp


class DeleteApplicationVpcConfigurationResponse(
    DeleteApplicationInputProcessingConfigurationResponse
):
    pass


class DeleteApplicationVpcConfigurationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: Optional[ApplicationVersionId] = None
    VpcConfigurationId: Id
    ConditionalToken: Optional[ConditionalToken] = None


class DescribeApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    IncludeAdditionalDetails: Optional[BooleanObject] = None


class DescribeApplicationSnapshotRequest(BaseModel):
    ApplicationName: ApplicationName
    SnapshotName: SnapshotName


class DescribeApplicationVersionRequest(BaseModel):
    ApplicationName: ApplicationName
    ApplicationVersionId: ApplicationVersionId


class ListApplicationSnapshotsRequest(BaseModel):
    ApplicationName: ApplicationName
    Limit: Optional[ListSnapshotsInputLimit] = None
    NextToken: Optional[NextToken] = None


class ListApplicationVersionsResponse(BaseModel):
    ApplicationVersionSummaries: Optional[ApplicationVersionSummaries] = None
    NextToken: Optional[NextToken] = None


class ListApplicationVersionsRequest(BaseModel):
    ApplicationName: ApplicationName
    Limit: Optional[ListApplicationVersionsInputLimit] = None
    NextToken: Optional[NextToken] = None


class ListApplicationsResponse(BaseModel):
    ApplicationSummaries: ApplicationSummaries
    NextToken: Optional[ApplicationName] = None


class ListApplicationsRequest(BaseModel):
    Limit: Optional[ListApplicationsInputLimit] = None
    NextToken: Optional[ApplicationName] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: KinesisAnalyticsARN


class RollbackApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId


class StopApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    Force: Optional[BooleanObject] = None


class UntagResourceRequest(BaseModel):
    ResourceARN: KinesisAnalyticsARN
    TagKeys: TagKeys


class UpdateApplicationMaintenanceConfigurationRequest(BaseModel):
    ApplicationName: ApplicationName
    ApplicationMaintenanceConfigurationUpdate: ApplicationMaintenanceConfigurationUpdate


class CloudWatchLoggingOption(BaseModel):
    """
    Provides a description of Amazon CloudWatch logging options, including the log stream Amazon Resource Name (ARN).
    """

    LogStreamARN: LogStreamARN


class CloudWatchLoggingOptionDescriptions(BaseModel):
    __root__: List[CloudWatchLoggingOptionDescription]


class InputProcessingConfiguration(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">AWS Lambda</a>.
    """

    InputLambdaProcessor: InputLambdaProcessor


class InputProcessingConfigurationDescription(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, provides the configuration information about an input processor. Currently, the only input processor available is <a href="https://docs.aws.amazon.com/lambda/">AWS Lambda</a>.
    """

    InputLambdaProcessorDescription: Optional[InputLambdaProcessorDescription] = None


class Output(BaseModel):
    """
    <p> Describes a SQL-based Kinesis Data Analytics application's output configuration, in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be a Kinesis data stream or a Kinesis Data Firehose delivery stream. </p> <p/>
    """

    Name: InAppStreamName
    KinesisStreamsOutput: Optional[KinesisStreamsOutput] = None
    KinesisFirehoseOutput: Optional[KinesisFirehoseOutput] = None
    LambdaOutput: Optional[LambdaOutput] = None
    DestinationSchema: DestinationSchema


class OutputDescriptions(BaseModel):
    __root__: List[OutputDescription]


class VpcConfiguration(BaseModel):
    """
    Describes the parameters of a VPC used by the application.
    """

    SubnetIds: SubnetIds
    SecurityGroupIds: SecurityGroupIds


class VpcConfigurationDescription(BaseModel):
    """
    Describes the parameters of a VPC used by the application.
    """

    VpcConfigurationId: Id
    VpcId: VpcId
    SubnetIds: SubnetIds
    SecurityGroupIds: SecurityGroupIds


class ApplicationSnapshotConfiguration(BaseModel):
    """
    Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """

    SnapshotsEnabled: BooleanObject


class VpcConfigurations(BaseModel):
    __root__: List[VpcConfiguration]


class RunConfigurationDescription(BaseModel):
    """
    Describes the starting properties for a Kinesis Data Analytics application.
    """

    ApplicationRestoreConfigurationDescription: Optional[
        ApplicationRestoreConfiguration
    ] = None
    FlinkRunConfigurationDescription: Optional[FlinkRunConfiguration] = None


class ApplicationSnapshotConfigurationDescription(ApplicationSnapshotConfiguration):
    """
    Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """

    pass


class VpcConfigurationDescriptions(BaseModel):
    __root__: List[VpcConfigurationDescription]


class ApplicationSnapshotConfigurationUpdate(BaseModel):
    """
    Describes updates to whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
    """

    SnapshotsEnabledUpdate: BooleanObject


class VpcConfigurationUpdates(BaseModel):
    __root__: List[VpcConfigurationUpdate]


class ApplicationMaintenanceConfigurationDescription(BaseModel):
    """
    The details of the maintenance configuration for the application.
    """

    ApplicationMaintenanceWindowStartTime: ApplicationMaintenanceWindowStartTime
    ApplicationMaintenanceWindowEndTime: ApplicationMaintenanceWindowEndTime


class GlueDataCatalogConfiguration(BaseModel):
    """
    The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application.
    """

    DatabaseARN: DatabaseARN


class CatalogConfiguration(BaseModel):
    """
    The configuration parameters for the default AWS Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
    """

    GlueDataCatalogConfiguration: GlueDataCatalogConfiguration


class GlueDataCatalogConfigurationDescription(GlueDataCatalogConfiguration):
    """
    The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application.
    """

    pass


class CatalogConfigurationDescription(BaseModel):
    """
    The configuration parameters for the default AWS Glue database. You use this database for Apache Flink SQL queries and table API transforms that you write in a Kinesis Data Analytics Studio notebook.
    """

    GlueDataCatalogConfigurationDescription: GlueDataCatalogConfigurationDescription


class GlueDataCatalogConfigurationUpdate(BaseModel):
    """
    Updates to the configuration of the Glue Data Catalog that you use for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
    """

    DatabaseARNUpdate: Optional[DatabaseARN] = None


class CatalogConfigurationUpdate(BaseModel):
    """
    Updates to
    """

    GlueDataCatalogConfigurationUpdate: GlueDataCatalogConfigurationUpdate


class CloudWatchLoggingOptions(BaseModel):
    __root__: List[CloudWatchLoggingOption]


class S3ContentLocation(BaseModel):
    """
    For a Kinesis Data Analytics application provides a description of an Amazon S3 object, including the Amazon Resource Name (ARN) of the S3 bucket, the name of the Amazon S3 object that contains the data, and the version number of the Amazon S3 object that contains the data.
    """

    BucketARN: BucketARN
    FileKey: FileKey
    ObjectVersion: Optional[ObjectVersion] = None


class S3ApplicationCodeLocationDescription(S3ContentLocation):
    """
    Describes the location of an application's code stored in an S3 bucket.
    """

    pass


class S3ContentLocationUpdate(BaseModel):
    """
    Describes an update for the Amazon S3 code content location for an application.
    """

    BucketARNUpdate: Optional[BucketARN] = None
    FileKeyUpdate: Optional[FileKey] = None
    ObjectVersionUpdate: Optional[ObjectVersion] = None


class Tags(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=1)]


class MavenReference(BaseModel):
    """
    The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files.
    """

    GroupId: MavenGroupId
    ArtifactId: MavenArtifactId
    Version: MavenVersion


class CustomArtifactConfiguration(BaseModel):
    """
    Specifies dependency JARs, as well as JAR files that contain user-defined functions (UDF).
    """

    ArtifactType: ArtifactType
    S3ContentLocation: Optional[S3ContentLocation] = None
    MavenReference: Optional[MavenReference] = None


class CustomArtifactConfigurationDescription(BaseModel):
    """
    Specifies a dependency JAR or a JAR of user-defined functions.
    """

    ArtifactType: Optional[ArtifactType] = None
    S3ContentLocationDescription: Optional[S3ContentLocation] = None
    MavenReferenceDescription: Optional[MavenReference] = None


class CustomArtifactsConfigurationDescriptionList(BaseModel):
    __root__: Annotated[
        List[CustomArtifactConfigurationDescription], Field(max_items=50)
    ]


class CustomArtifactsConfigurationList(BaseModel):
    __root__: Annotated[List[CustomArtifactConfiguration], Field(max_items=50)]


class SnapshotDetails(BaseModel):
    """
    Provides details about a snapshot of application state.
    """

    SnapshotName: SnapshotName
    SnapshotStatus: SnapshotStatus
    ApplicationVersionId: ApplicationVersionId
    SnapshotCreationTimestamp: Optional[Timestamp] = None


class InputStartingPositionConfiguration(BaseModel):
    """
    Describes the point at which the application reads from the streaming source.
    """

    InputStartingPosition: Optional[InputStartingPosition] = None


class S3Configuration(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, provides a description of an Amazon S3 data source, including the Amazon Resource Name (ARN) of the S3 bucket and the name of the Amazon S3 object that contains the data.
    """

    BucketARN: BucketARN
    FileKey: FileKey


class ParsedInputRecords(BaseModel):
    __root__: List[ParsedInputRecord]


class ProcessedInputRecords(BaseModel):
    __root__: List[ProcessedInputRecord]


class RawInputRecords(BaseModel):
    __root__: List[RawInputRecord]


class PropertyGroups(BaseModel):
    __root__: Annotated[List[PropertyGroup], Field(max_items=50)]


class MonitoringConfiguration(BaseModel):
    """
    Describes configuration parameters for Amazon CloudWatch logging for an application. For more information about CloudWatch logging, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/java/monitoring-overview.html">Monitoring</a>.
    """

    ConfigurationType: ConfigurationType
    MetricsLevel: Optional[MetricsLevel] = None
    LogLevel: Optional[LogLevel] = None


class ParallelismConfiguration(BaseModel):
    """
    Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/dev/parallel.html">Parallel Execution</a> in the <a href="https://ci.apache.org/projects/flink/flink-docs-release-1.8/">Apache Flink Documentation</a>.
    """

    ConfigurationType: ConfigurationType
    Parallelism: Optional[Parallelism] = None
    ParallelismPerKPU: Optional[ParallelismPerKPU] = None
    AutoScalingEnabled: Optional[BooleanObject] = None


class MonitoringConfigurationDescription(BaseModel):
    """
    Describes configuration parameters for CloudWatch logging for an application.
    """

    ConfigurationType: Optional[ConfigurationType] = None
    MetricsLevel: Optional[MetricsLevel] = None
    LogLevel: Optional[LogLevel] = None


class ParallelismConfigurationDescription(BaseModel):
    """
    Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously.
    """

    ConfigurationType: Optional[ConfigurationType] = None
    Parallelism: Optional[Parallelism] = None
    ParallelismPerKPU: Optional[ParallelismPerKPU] = None
    CurrentParallelism: Optional[Parallelism] = None
    AutoScalingEnabled: Optional[BooleanObject] = None


class MonitoringConfigurationUpdate(BaseModel):
    """
    Describes updates to configuration parameters for Amazon CloudWatch logging for an application.
    """

    ConfigurationTypeUpdate: Optional[ConfigurationType] = None
    MetricsLevelUpdate: Optional[MetricsLevel] = None
    LogLevelUpdate: Optional[LogLevel] = None


class ParallelismConfigurationUpdate(BaseModel):
    """
    Describes updates to parameters for how an application executes multiple tasks simultaneously.
    """

    ConfigurationTypeUpdate: Optional[ConfigurationType] = None
    ParallelismUpdate: Optional[Parallelism] = None
    ParallelismPerKPUUpdate: Optional[ParallelismPerKPU] = None
    AutoScalingEnabledUpdate: Optional[BooleanObject] = None


class InputParallelism(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source.
    """

    Count: Optional[InputParallelismCount] = None


class RecordFormat(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream.
    """

    RecordFormatType: RecordFormatType
    MappingParameters: Optional[MappingParameters] = None


class RecordColumns(BaseModel):
    __root__: Annotated[List[RecordColumn], Field(max_items=1000, min_items=1)]


class InputSchemaUpdate(BaseModel):
    """
    Describes updates for an SQL-based Kinesis Data Analytics application's input schema.
    """

    RecordFormatUpdate: Optional[RecordFormat] = None
    RecordEncodingUpdate: Optional[RecordEncoding] = None
    RecordColumnUpdates: Optional[RecordColumns] = None


class InputUpdate(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes updates to a specific input configuration (identified by the <code>InputId</code> of an application).
    """

    InputId: Id
    NamePrefixUpdate: Optional[InAppStreamName] = None
    InputProcessingConfigurationUpdate: Optional[
        InputProcessingConfigurationUpdate
    ] = None
    KinesisStreamsInputUpdate: Optional[KinesisStreamsInputUpdate] = None
    KinesisFirehoseInputUpdate: Optional[KinesisFirehoseInputUpdate] = None
    InputSchemaUpdate: Optional[InputSchemaUpdate] = None
    InputParallelismUpdate: Optional[InputParallelismUpdate] = None


class InputUpdates(BaseModel):
    __root__: List[InputUpdate]


class SnapshotSummaries(BaseModel):
    __root__: List[SnapshotDetails]


class Outputs(BaseModel):
    __root__: List[Output]


class SqlRunConfiguration(BaseModel):
    """
    Describes the starting parameters for a SQL-based Kinesis Data Analytics application.
    """

    InputId: Id
    InputStartingPositionConfiguration: InputStartingPositionConfiguration


class AddApplicationCloudWatchLoggingOptionResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    CloudWatchLoggingOptionDescriptions: Optional[
        CloudWatchLoggingOptionDescriptions
    ] = None


class AddApplicationCloudWatchLoggingOptionRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: Optional[ApplicationVersionId] = None
    CloudWatchLoggingOption: CloudWatchLoggingOption
    ConditionalToken: Optional[ConditionalToken] = None


class AddApplicationInputProcessingConfigurationResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    InputId: Optional[Id] = None
    InputProcessingConfigurationDescription: Optional[
        InputProcessingConfigurationDescription
    ] = None


class AddApplicationInputProcessingConfigurationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    InputId: Id
    InputProcessingConfiguration: InputProcessingConfiguration


class AddApplicationOutputResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    OutputDescriptions: Optional[OutputDescriptions] = None


class AddApplicationOutputRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    Output: Output


class AddApplicationVpcConfigurationResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    VpcConfigurationDescription: Optional[VpcConfigurationDescription] = None


class AddApplicationVpcConfigurationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: Optional[ApplicationVersionId] = None
    VpcConfiguration: VpcConfiguration
    ConditionalToken: Optional[ConditionalToken] = None


class DeleteApplicationCloudWatchLoggingOptionResponse(
    AddApplicationCloudWatchLoggingOptionResponse
):
    pass


class DescribeApplicationSnapshotResponse(BaseModel):
    SnapshotDetails: SnapshotDetails


class DiscoverInputSchemaRequest(BaseModel):
    ResourceARN: Optional[ResourceARN] = None
    ServiceExecutionRole: RoleARN
    InputStartingPositionConfiguration: Optional[
        InputStartingPositionConfiguration
    ] = None
    S3Configuration: Optional[S3Configuration] = None
    InputProcessingConfiguration: Optional[InputProcessingConfiguration] = None


class ListApplicationSnapshotsResponse(BaseModel):
    SnapshotSummaries: Optional[SnapshotSummaries] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[Tags] = None


class TagResourceRequest(BaseModel):
    ResourceARN: KinesisAnalyticsARN
    Tags: Tags


class UpdateApplicationMaintenanceConfigurationResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationMaintenanceConfigurationDescription: Optional[
        ApplicationMaintenanceConfigurationDescription
    ] = None


class CodeContent(BaseModel):
    """
    Specifies either the application code, or the location of the application code, for a Flink-based Kinesis Data Analytics application.
    """

    TextContent: Optional[TextContent] = None
    ZipFileContent: Optional[ZipFileContent] = None
    S3ContentLocation: Optional[S3ContentLocation] = None


class ApplicationCodeConfiguration(BaseModel):
    """
    Describes code configuration for an application.
    """

    CodeContent: Optional[CodeContent] = None
    CodeContentType: CodeContentType


class CodeContentDescription(BaseModel):
    """
    Describes details about the code of a Kinesis Data Analytics application.
    """

    TextContent: Optional[TextContent] = None
    CodeMD5: Optional[CodeMD5] = None
    CodeSize: Optional[CodeSize] = None
    S3ApplicationCodeLocationDescription: Optional[
        S3ApplicationCodeLocationDescription
    ] = None


class ApplicationCodeConfigurationDescription(BaseModel):
    """
    Describes code configuration for an application.
    """

    CodeContentType: CodeContentType
    CodeContentDescription: Optional[CodeContentDescription] = None


class CodeContentUpdate(BaseModel):
    """
    Describes an update to the code of an application. Not supported for Apache Zeppelin.
    """

    TextContentUpdate: Optional[TextContent] = None
    ZipFileContentUpdate: Optional[ZipFileContent] = None
    S3ContentLocationUpdate: Optional[S3ContentLocationUpdate] = None


class ApplicationCodeConfigurationUpdate(BaseModel):
    """
    Describes code configuration updates for an application. This is supported for a Flink-based Kinesis Data Analytics application or a SQL-based Kinesis Data Analytics application.
    """

    CodeContentTypeUpdate: Optional[CodeContentType] = None
    CodeContentUpdate: Optional[CodeContentUpdate] = None


class FlinkApplicationConfiguration(BaseModel):
    """
    Describes configuration parameters for a Flink-based Kinesis Data Analytics application or a Studio notebook.
    """

    CheckpointConfiguration: Optional[CheckpointConfiguration] = None
    MonitoringConfiguration: Optional[MonitoringConfiguration] = None
    ParallelismConfiguration: Optional[ParallelismConfiguration] = None


class EnvironmentProperties(BaseModel):
    """
    Describes execution properties for a Flink-based Kinesis Data Analytics application.
    """

    PropertyGroups: PropertyGroups


class ZeppelinApplicationConfiguration(BaseModel):
    """
    The configuration of a Kinesis Data Analytics Studio notebook.
    """

    MonitoringConfiguration: Optional[ZeppelinMonitoringConfiguration] = None
    CatalogConfiguration: Optional[CatalogConfiguration] = None
    DeployAsApplicationConfiguration: Optional[DeployAsApplicationConfiguration] = None
    CustomArtifactsConfiguration: Optional[CustomArtifactsConfigurationList] = None


class FlinkApplicationConfigurationDescription(BaseModel):
    """
    Describes configuration parameters for a Flink-based Kinesis Data Analytics application.
    """

    CheckpointConfigurationDescription: Optional[
        CheckpointConfigurationDescription
    ] = None
    MonitoringConfigurationDescription: Optional[
        MonitoringConfigurationDescription
    ] = None
    ParallelismConfigurationDescription: Optional[
        ParallelismConfigurationDescription
    ] = None
    JobPlanDescription: Optional[JobPlanDescription] = None


class EnvironmentPropertyDescriptions(BaseModel):
    """
    Describes the execution properties for an Apache Flink runtime.
    """

    PropertyGroupDescriptions: Optional[PropertyGroups] = None


class ZeppelinApplicationConfigurationDescription(BaseModel):
    """
    The configuration of a Kinesis Data Analytics Studio notebook.
    """

    MonitoringConfigurationDescription: ZeppelinMonitoringConfigurationDescription
    CatalogConfigurationDescription: Optional[CatalogConfigurationDescription] = None
    DeployAsApplicationConfigurationDescription: Optional[
        DeployAsApplicationConfigurationDescription
    ] = None
    CustomArtifactsConfigurationDescription: Optional[
        CustomArtifactsConfigurationDescriptionList
    ] = None


class FlinkApplicationConfigurationUpdate(BaseModel):
    """
    Describes updates to the configuration parameters for a Flink-based Kinesis Data Analytics application.
    """

    CheckpointConfigurationUpdate: Optional[CheckpointConfigurationUpdate] = None
    MonitoringConfigurationUpdate: Optional[MonitoringConfigurationUpdate] = None
    ParallelismConfigurationUpdate: Optional[ParallelismConfigurationUpdate] = None


class EnvironmentPropertyUpdates(EnvironmentProperties):
    """
    Describes updates to the execution property groups for a Flink-based Kinesis Data Analytics application or a Studio notebook.
    """

    pass


class ZeppelinApplicationConfigurationUpdate(BaseModel):
    """
    Updates to the configuration of Kinesis Data Analytics Studio notebook.
    """

    MonitoringConfigurationUpdate: Optional[
        ZeppelinMonitoringConfigurationUpdate
    ] = None
    CatalogConfigurationUpdate: Optional[CatalogConfigurationUpdate] = None
    DeployAsApplicationConfigurationUpdate: Optional[
        DeployAsApplicationConfigurationUpdate
    ] = None
    CustomArtifactsConfigurationUpdate: Optional[
        CustomArtifactsConfigurationList
    ] = None


class SourceSchema(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
    """

    RecordFormat: RecordFormat
    RecordEncoding: Optional[RecordEncoding] = None
    RecordColumns: RecordColumns


class InputDescription(BaseModel):
    """
    Describes the application input configuration for a SQL-based Kinesis Data Analytics application.
    """

    InputId: Optional[Id] = None
    NamePrefix: Optional[InAppStreamName] = None
    InAppStreamNames: Optional[InAppStreamNames] = None
    InputProcessingConfigurationDescription: Optional[
        InputProcessingConfigurationDescription
    ] = None
    KinesisStreamsInputDescription: Optional[KinesisStreamsInputDescription] = None
    KinesisFirehoseInputDescription: Optional[KinesisFirehoseInputDescription] = None
    InputSchema: Optional[SourceSchema] = None
    InputParallelism: Optional[InputParallelism] = None
    InputStartingPositionConfiguration: Optional[
        InputStartingPositionConfiguration
    ] = None


class ReferenceDataSourceDescription(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the reference data source configured for an application.
    """

    ReferenceId: Id
    TableName: InAppTableName
    S3ReferenceDataSourceDescription: S3ReferenceDataSourceDescription
    ReferenceSchema: Optional[SourceSchema] = None


class ReferenceDataSourceUpdate(BaseModel):
    """
    When you update a reference data source configuration for a SQL-based Kinesis Data Analytics application, this object provides all the updated values (such as the source bucket name and object key name), the in-application table name that is created, and updated mapping information that maps the data in the Amazon S3 object to the in-application reference table that is created.
    """

    ReferenceId: Id
    TableNameUpdate: Optional[InAppTableName] = None
    S3ReferenceDataSourceUpdate: Optional[S3ReferenceDataSourceUpdate] = None
    ReferenceSchemaUpdate: Optional[SourceSchema] = None


class ReferenceDataSourceUpdates(BaseModel):
    __root__: List[ReferenceDataSourceUpdate]


class SqlRunConfigurations(BaseModel):
    __root__: List[SqlRunConfiguration]


class RunConfiguration(BaseModel):
    """
    Describes the starting parameters for an Kinesis Data Analytics application.
    """

    FlinkRunConfiguration: Optional[FlinkRunConfiguration] = None
    SqlRunConfigurations: Optional[SqlRunConfigurations] = None
    ApplicationRestoreConfiguration: Optional[ApplicationRestoreConfiguration] = None


class DiscoverInputSchemaResponse(BaseModel):
    InputSchema: Optional[SourceSchema] = None
    ParsedInputRecords: Optional[ParsedInputRecords] = None
    ProcessedInputRecords: Optional[ProcessedInputRecords] = None
    RawInputRecords: Optional[RawInputRecords] = None


class StartApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    RunConfiguration: Optional[RunConfiguration] = None


class Input(BaseModel):
    """
    When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two.
    """

    NamePrefix: InAppStreamName
    InputProcessingConfiguration: Optional[InputProcessingConfiguration] = None
    KinesisStreamsInput: Optional[KinesisStreamsInput] = None
    KinesisFirehoseInput: Optional[KinesisFirehoseInput] = None
    InputParallelism: Optional[InputParallelism] = None
    InputSchema: SourceSchema


class InputDescriptions(BaseModel):
    __root__: List[InputDescription]


class ReferenceDataSource(BaseModel):
    """
    For a SQL-based Kinesis Data Analytics application, describes the reference data source by providing the source information (Amazon S3 bucket name and object key name), the resulting in-application table name that is created, and the necessary schema to map the data elements in the Amazon S3 object to the in-application table.
    """

    TableName: InAppTableName
    S3ReferenceDataSource: Optional[S3ReferenceDataSource] = None
    ReferenceSchema: SourceSchema


class ReferenceDataSourceDescriptions(BaseModel):
    __root__: List[ReferenceDataSourceDescription]


class SqlApplicationConfigurationDescription(BaseModel):
    """
    Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.
    """

    InputDescriptions: Optional[InputDescriptions] = None
    OutputDescriptions: Optional[OutputDescriptions] = None
    ReferenceDataSourceDescriptions: Optional[ReferenceDataSourceDescriptions] = None


class ApplicationConfigurationDescription(BaseModel):
    """
    Describes details about the application code and starting parameters for a Kinesis Data Analytics application.
    """

    SqlApplicationConfigurationDescription: Optional[
        SqlApplicationConfigurationDescription
    ] = None
    ApplicationCodeConfigurationDescription: Optional[
        ApplicationCodeConfigurationDescription
    ] = None
    RunConfigurationDescription: Optional[RunConfigurationDescription] = None
    FlinkApplicationConfigurationDescription: Optional[
        FlinkApplicationConfigurationDescription
    ] = None
    EnvironmentPropertyDescriptions: Optional[EnvironmentPropertyDescriptions] = None
    ApplicationSnapshotConfigurationDescription: Optional[
        ApplicationSnapshotConfigurationDescription
    ] = None
    VpcConfigurationDescriptions: Optional[VpcConfigurationDescriptions] = None
    ZeppelinApplicationConfigurationDescription: Optional[
        ZeppelinApplicationConfigurationDescription
    ] = None


class SqlApplicationConfigurationUpdate(BaseModel):
    """
    Describes updates to the input streams, destination streams, and reference data sources for a SQL-based Kinesis Data Analytics application.
    """

    InputUpdates: Optional[InputUpdates] = None
    OutputUpdates: Optional[OutputUpdates] = None
    ReferenceDataSourceUpdates: Optional[ReferenceDataSourceUpdates] = None


class ApplicationConfigurationUpdate(BaseModel):
    """
    Describes updates to an application's configuration.
    """

    SqlApplicationConfigurationUpdate: Optional[
        SqlApplicationConfigurationUpdate
    ] = None
    ApplicationCodeConfigurationUpdate: Optional[
        ApplicationCodeConfigurationUpdate
    ] = None
    FlinkApplicationConfigurationUpdate: Optional[
        FlinkApplicationConfigurationUpdate
    ] = None
    EnvironmentPropertyUpdates: Optional[EnvironmentPropertyUpdates] = None
    ApplicationSnapshotConfigurationUpdate: Optional[
        ApplicationSnapshotConfigurationUpdate
    ] = None
    VpcConfigurationUpdates: Optional[VpcConfigurationUpdates] = None
    ZeppelinApplicationConfigurationUpdate: Optional[
        ZeppelinApplicationConfigurationUpdate
    ] = None


class ApplicationDetail(BaseModel):
    """
    Describes the application, including the application Amazon Resource Name (ARN), status, latest version, and input and output configurations.
    """

    ApplicationARN: ResourceARN
    ApplicationDescription: Optional[ApplicationDescription] = None
    ApplicationName: ApplicationName
    RuntimeEnvironment: RuntimeEnvironment
    ServiceExecutionRole: Optional[RoleARN] = None
    ApplicationStatus: ApplicationStatus
    ApplicationVersionId: ApplicationVersionId
    CreateTimestamp: Optional[Timestamp] = None
    LastUpdateTimestamp: Optional[Timestamp] = None
    ApplicationConfigurationDescription: Optional[
        ApplicationConfigurationDescription
    ] = None
    CloudWatchLoggingOptionDescriptions: Optional[
        CloudWatchLoggingOptionDescriptions
    ] = None
    ApplicationMaintenanceConfigurationDescription: Optional[
        ApplicationMaintenanceConfigurationDescription
    ] = None
    ApplicationVersionUpdatedFrom: Optional[ApplicationVersionId] = None
    ApplicationVersionRolledBackFrom: Optional[ApplicationVersionId] = None
    ConditionalToken: Optional[ConditionalToken] = None
    ApplicationVersionRolledBackTo: Optional[ApplicationVersionId] = None
    ApplicationMode: Optional[ApplicationMode] = None


class Inputs(BaseModel):
    __root__: List[Input]


class ReferenceDataSources(BaseModel):
    __root__: List[ReferenceDataSource]


class AddApplicationInputResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    InputDescriptions: Optional[InputDescriptions] = None


class AddApplicationInputRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    Input: Input


class AddApplicationReferenceDataSourceResponse(BaseModel):
    ApplicationARN: Optional[ResourceARN] = None
    ApplicationVersionId: Optional[ApplicationVersionId] = None
    ReferenceDataSourceDescriptions: Optional[ReferenceDataSourceDescriptions] = None


class AddApplicationReferenceDataSourceRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: ApplicationVersionId
    ReferenceDataSource: ReferenceDataSource


class CreateApplicationResponse(BaseModel):
    ApplicationDetail: ApplicationDetail


class DescribeApplicationResponse(CreateApplicationResponse):
    pass


class DescribeApplicationVersionResponse(BaseModel):
    ApplicationVersionDetail: Optional[ApplicationDetail] = None


class RollbackApplicationResponse(CreateApplicationResponse):
    pass


class UpdateApplicationResponse(CreateApplicationResponse):
    pass


class UpdateApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    CurrentApplicationVersionId: Optional[ApplicationVersionId] = None
    ApplicationConfigurationUpdate: Optional[ApplicationConfigurationUpdate] = None
    ServiceExecutionRoleUpdate: Optional[RoleARN] = None
    RunConfigurationUpdate: Optional[RunConfigurationUpdate] = None
    CloudWatchLoggingOptionUpdates: Optional[CloudWatchLoggingOptionUpdates] = None
    ConditionalToken: Optional[ConditionalToken] = None


class SqlApplicationConfiguration(BaseModel):
    """
    Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.
    """

    Inputs: Optional[Inputs] = None
    Outputs: Optional[Outputs] = None
    ReferenceDataSources: Optional[ReferenceDataSources] = None


class ApplicationConfiguration(BaseModel):
    """
    Specifies the creation parameters for a Kinesis Data Analytics application.
    """

    SqlApplicationConfiguration: Optional[SqlApplicationConfiguration] = None
    FlinkApplicationConfiguration: Optional[FlinkApplicationConfiguration] = None
    EnvironmentProperties: Optional[EnvironmentProperties] = None
    ApplicationCodeConfiguration: Optional[ApplicationCodeConfiguration] = None
    ApplicationSnapshotConfiguration: Optional[ApplicationSnapshotConfiguration] = None
    VpcConfigurations: Optional[VpcConfigurations] = None
    ZeppelinApplicationConfiguration: Optional[ZeppelinApplicationConfiguration] = None


class CreateApplicationRequest(BaseModel):
    ApplicationName: ApplicationName
    ApplicationDescription: Optional[ApplicationDescription] = None
    RuntimeEnvironment: RuntimeEnvironment
    ServiceExecutionRole: RoleARN
    ApplicationConfiguration: Optional[ApplicationConfiguration] = None
    CloudWatchLoggingOptions: Optional[CloudWatchLoggingOptions] = None
    Tags: Optional[Tags] = None
    ApplicationMode: Optional[ApplicationMode] = None

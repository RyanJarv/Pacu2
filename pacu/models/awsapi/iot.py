# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:43+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ResourceNotFoundException(BaseModel):
    __root__: Any


class TransferAlreadyCompletedException(ResourceNotFoundException):
    pass


class InvalidRequestException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class UnauthorizedException(ResourceNotFoundException):
    pass


class ServiceUnavailableException(ResourceNotFoundException):
    pass


class InternalFailureException(ResourceNotFoundException):
    pass


class AddThingToBillingGroupResponse(BaseModel):
    pass


class AddThingToThingGroupResponse(AddThingToBillingGroupResponse):
    pass


class TargetArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048)]


class LimitExceededException(ResourceNotFoundException):
    pass


class AttachSecurityProfileResponse(AddThingToBillingGroupResponse):
    pass


class VersionConflictException(ResourceNotFoundException):
    pass


class AttachThingPrincipalResponse(AddThingToBillingGroupResponse):
    """
    The output from the AttachThingPrincipal operation.
    """

    pass


class CancelAuditMitigationActionsTaskResponse(AddThingToBillingGroupResponse):
    pass


class CancelAuditTaskResponse(AddThingToBillingGroupResponse):
    pass


class CancelDetectMitigationActionsTaskResponse(AddThingToBillingGroupResponse):
    pass


class DetailsValue(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[^\\p{C}]+')]


class InvalidStateTransitionException(ResourceNotFoundException):
    pass


class ClearDefaultAuthorizerResponse(AddThingToBillingGroupResponse):
    pass


class ConfirmTopicRuleDestinationResponse(AddThingToBillingGroupResponse):
    pass


class InternalException(ResourceNotFoundException):
    pass


class ConflictingResourceUpdateException(ResourceNotFoundException):
    pass


class CreateAuditSuppressionResponse(AddThingToBillingGroupResponse):
    pass


class CertificateId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=64, regex='(0x)?[a-fA-F0-9]+')
    ]


class CognitoIdentityPoolId(BaseModel):
    __root__: str


class ClientId(CognitoIdentityPoolId):
    pass


class AwsAccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='[0-9]+')]


class RoleArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class RoleAliasArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class ResourceAlreadyExistsException(ResourceNotFoundException):
    pass


class KeyValue(BaseModel):
    __root__: Annotated[str, Field(max_length=5120)]


class BillingGroupDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=2028, regex='[\\p{Graph}\\x20]*')]


class DimensionStringValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class AcmCertificateArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\\d{1}:\\d{12}:certificate/[a-zA-Z0-9/-]+',
        ),
    ]


class AuthorizerName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w=,@-]+')]


class AllowAuthorizerOverride(BaseModel):
    __root__: bool


class CertificateValidationException(ResourceNotFoundException):
    pass


class ThingGroupDescription(BillingGroupDescription):
    pass


class InvalidQueryException(ResourceNotFoundException):
    pass


class AggregationTypeName(Enum):
    Statistics = 'Statistics'
    Percentiles = 'Percentiles'
    Cardinality = 'Cardinality'


class InvalidAggregationException(ResourceNotFoundException):
    pass


class IndexNotReadyException(ResourceNotFoundException):
    pass


class ExpiresInSec(BaseModel):
    __root__: Annotated[int, Field(ge=60.0, le=3600.0)]


class MaxJobExecutionsPerMin(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class InProgressTimeoutInMinutes(BaseModel):
    __root__: int


class ConflictException(ResourceNotFoundException):
    pass


class Target(CognitoIdentityPoolId):
    pass


class Protocol(Enum):
    MQTT = 'MQTT'
    HTTP = 'HTTP'


class MaximumPerMinute(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class ExpiresInSeconds(InProgressTimeoutInMinutes):
    pass


class AwsJobTimeoutInProgressTimeoutInMinutes(InProgressTimeoutInMinutes):
    pass


class Value1(CognitoIdentityPoolId):
    pass


class MalformedPolicyException(ResourceNotFoundException):
    pass


class VersionsLimitExceededException(ResourceNotFoundException):
    pass


class PayloadVersion(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=10, regex='^[0-9-]+$')]


class AuditCheckName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)'
        ),
    ]


class BehaviorMetric(CognitoIdentityPoolId):
    pass


class Attributes(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Flag(AllowAuthorizerOverride):
    pass


class ThingTypeDescription(BillingGroupDescription):
    pass


class SQL(CognitoIdentityPoolId):
    pass


class Description4(CognitoIdentityPoolId):
    pass


class IsDisabled(AllowAuthorizerOverride):
    pass


class AwsIotSqlVersion(CognitoIdentityPoolId):
    pass


class SqlParseException(ResourceNotFoundException):
    pass


class DeleteAccountAuditConfigurationResponse(AddThingToBillingGroupResponse):
    pass


class DeleteAuditSuppressionResponse(AddThingToBillingGroupResponse):
    pass


class DeleteAuthorizerResponse(AddThingToBillingGroupResponse):
    pass


class DeleteConflictException(ResourceNotFoundException):
    pass


class DeleteBillingGroupResponse(AddThingToBillingGroupResponse):
    pass


class DeleteCACertificateResponse(AddThingToBillingGroupResponse):
    """
    The output for the DeleteCACertificate operation.
    """

    pass


class CertificateStateException(ResourceNotFoundException):
    pass


class DeleteCustomMetricResponse(AddThingToBillingGroupResponse):
    pass


class DeleteDimensionResponse(AddThingToBillingGroupResponse):
    pass


class DeleteDomainConfigurationResponse(AddThingToBillingGroupResponse):
    pass


class DeleteDynamicThingGroupResponse(AddThingToBillingGroupResponse):
    pass


class DeleteMitigationActionResponse(AddThingToBillingGroupResponse):
    pass


class DeleteOTAUpdateResponse(AddThingToBillingGroupResponse):
    pass


class DeleteProvisioningTemplateResponse(AddThingToBillingGroupResponse):
    pass


class DeleteProvisioningTemplateVersionResponse(AddThingToBillingGroupResponse):
    pass


class DeleteRegistrationCodeResponse(AddThingToBillingGroupResponse):
    """
    The output for the DeleteRegistrationCode operation.
    """

    pass


class DeleteRoleAliasResponse(AddThingToBillingGroupResponse):
    pass


class DeleteScheduledAuditResponse(AddThingToBillingGroupResponse):
    pass


class DeleteSecurityProfileResponse(AddThingToBillingGroupResponse):
    pass


class DeleteStreamResponse(AddThingToBillingGroupResponse):
    pass


class DeleteThingResponse(AddThingToBillingGroupResponse):
    """
    The output of the DeleteThing operation.
    """

    pass


class DeleteThingGroupResponse(AddThingToBillingGroupResponse):
    pass


class DeleteThingTypeResponse(AddThingToBillingGroupResponse):
    """
    The output for the DeleteThingType operation.
    """

    pass


class DeleteTopicRuleDestinationResponse(AddThingToBillingGroupResponse):
    pass


class DeprecateThingTypeResponse(AddThingToBillingGroupResponse):
    """
    The output for the DeprecateThingType operation.
    """

    pass


class DetachSecurityProfileResponse(AddThingToBillingGroupResponse):
    pass


class DetachThingPrincipalResponse(AddThingToBillingGroupResponse):
    """
    The output from the DetachThingPrincipal operation.
    """

    pass


class Percent(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=100.0)]


class NotConfiguredException(ResourceNotFoundException):
    pass


class TemplateBody(CognitoIdentityPoolId):
    pass


class RegistrationCodeValidationException(ResourceNotFoundException):
    pass


class CertificateConflictException(ResourceNotFoundException):
    pass


class ResourceRegistrationFailureException(ResourceNotFoundException):
    pass


class RemoveThingFromBillingGroupResponse(AddThingToBillingGroupResponse):
    pass


class RemoveThingFromThingGroupResponse(AddThingToBillingGroupResponse):
    pass


class AwsArn(CognitoIdentityPoolId):
    pass


class LogLevel(Enum):
    DEBUG = 'DEBUG'
    INFO = 'INFO'
    ERROR = 'ERROR'
    WARN = 'WARN'
    DISABLED = 'DISABLED'


class LogTargetType(Enum):
    DEFAULT = 'DEFAULT'
    THING_GROUP = 'THING_GROUP'


class LogTargetName(CognitoIdentityPoolId):
    pass


class AuditTaskId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=40, min_length=1, regex='[a-zA-Z0-9\\-]+')
    ]


class AuditCheckToReasonCodeFilter(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TaskAlreadyExistsException(ResourceNotFoundException):
    pass


class SecurityProfileName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9:_-]+')
    ]


class BehaviorName(SecurityProfileName):
    pass


class MitigationActionName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, regex='[a-zA-Z0-9_-]+')]


class Timestamp(BaseModel):
    __root__: datetime


class StartOnDemandAuditTaskResponse(BaseModel):
    taskId: Optional[AuditTaskId] = None


class StopThingRegistrationTaskResponse(AddThingToBillingGroupResponse):
    pass


class TagResourceResponse(AddThingToBillingGroupResponse):
    pass


class PolicyName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w+=,.@-]+')]


class HttpHeaders(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class HttpQueryString(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1)]


class MqttUsername(BaseModel):
    __root__: Annotated[str, Field(max_length=65535, min_length=1)]


class MqttPassword(MqttUsername):
    pass


class MqttClientId(MqttUsername):
    pass


class ServerName(BaseModel):
    __root__: Annotated[str, Field(max_length=253, min_length=1)]


class InvalidResponseException(ResourceNotFoundException):
    pass


class TransferConflictException(ResourceNotFoundException):
    pass


class UntagResourceResponse(AddThingToBillingGroupResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class UpdateAccountAuditConfigurationResponse(AddThingToBillingGroupResponse):
    pass


class UpdateAuditSuppressionResponse(AddThingToBillingGroupResponse):
    pass


class UpdateEventConfigurationsResponse(AddThingToBillingGroupResponse):
    pass


class UpdateIndexingConfigurationResponse(AddThingToBillingGroupResponse):
    pass


class ThingIndexingMode(Enum):
    OFF = 'OFF'
    REGISTRY = 'REGISTRY'
    REGISTRY_AND_SHADOW = 'REGISTRY_AND_SHADOW'


class ThingConnectivityIndexingMode(Enum):
    OFF = 'OFF'
    STATUS = 'STATUS'


class ThingGroupIndexingMode(Enum):
    OFF = 'OFF'
    ON = 'ON'


class UpdateProvisioningTemplateResponse(AddThingToBillingGroupResponse):
    pass


class UpdateThingResponse(AddThingToBillingGroupResponse):
    """
    The output from the UpdateThing operation.
    """

    pass


class UpdateThingGroupsForThingResponse(AddThingToBillingGroupResponse):
    pass


class ThingGroupName(SecurityProfileName):
    pass


class UpdateTopicRuleDestinationResponse(AddThingToBillingGroupResponse):
    pass


class AbortAction(Enum):
    CANCEL = 'CANCEL'


class JobExecutionFailureType(Enum):
    FAILED = 'FAILED'
    REJECTED = 'REJECTED'
    TIMED_OUT = 'TIMED_OUT'
    ALL = 'ALL'


class AbortThresholdPercentage(BaseModel):
    __root__: Annotated[float, Field(le=100.0)]


class MinimumNumberOfExecutedThings(MaxJobExecutionsPerMin):
    pass


class AbortCriteria(BaseModel):
    """
    The criteria that determine when and how a job abort takes place.
    """

    failureType: JobExecutionFailureType
    action: AbortAction
    thresholdPercentage: AbortThresholdPercentage
    minNumberOfExecutedThings: MinimumNumberOfExecutedThings


class SetAsActive(AllowAuthorizerOverride):
    pass


class AcceptCertificateTransferRequest(BaseModel):
    """
    The input for the AcceptCertificateTransfer operation.
    """

    pass


class ActionType(Enum):
    PUBLISH = 'PUBLISH'
    SUBSCRIBE = 'SUBSCRIBE'
    RECEIVE = 'RECEIVE'
    CONNECT = 'CONNECT'


class ViolationId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9\\-]+')
    ]


class DeviceDefenderThingName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class BillingGroupName(SecurityProfileName):
    pass


class BillingGroupArn(CognitoIdentityPoolId):
    pass


class ThingName(SecurityProfileName):
    pass


class ThingArn(CognitoIdentityPoolId):
    pass


class AddThingToBillingGroupRequest(BaseModel):
    billingGroupName: Optional[BillingGroupName] = None
    billingGroupArn: Optional[BillingGroupArn] = None
    thingName: Optional[ThingName] = None
    thingArn: Optional[ThingArn] = None


class ThingGroupArn(CognitoIdentityPoolId):
    pass


class OverrideDynamicGroups(AllowAuthorizerOverride):
    pass


class AddThingToThingGroupRequest(BaseModel):
    thingGroupName: Optional[ThingGroupName] = None
    thingGroupArn: Optional[ThingGroupArn] = None
    thingName: Optional[ThingName] = None
    thingArn: Optional[ThingArn] = None
    overrideDynamicGroups: Optional[OverrideDynamicGroups] = None


class ThingGroupNames(BaseModel):
    __root__: Annotated[List[ThingGroupName], Field(max_items=10, min_items=1)]


class AdditionalMetricsToRetainList(BaseModel):
    __root__: List[BehaviorMetric]


class AdditionalParameterMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AggregationField(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class AggregationTypeValue(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=1, regex='[a-zA-Z0-9]+')]


class AlarmName(CognitoIdentityPoolId):
    pass


class AlertTargetArn(CognitoIdentityPoolId):
    pass


class AlertTargetType(Enum):
    """
    The type of alert target: one of "SNS".
    """

    SNS = 'SNS'


class AlertTargets(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AllowAutoRegistration(AllowAuthorizerOverride):
    pass


class ApproximateSecondsBeforeTimedOut(InProgressTimeoutInMinutes):
    pass


class AscendingOrder(AllowAuthorizerOverride):
    pass


class AssetId(CognitoIdentityPoolId):
    pass


class AssetPropertyAlias(AggregationField):
    pass


class AssetPropertyBooleanValue(CognitoIdentityPoolId):
    pass


class AssetPropertyDoubleValue(CognitoIdentityPoolId):
    pass


class AssetPropertyEntryId(CognitoIdentityPoolId):
    pass


class AssetPropertyId(CognitoIdentityPoolId):
    pass


class AssetPropertyIntegerValue(CognitoIdentityPoolId):
    pass


class AssetPropertyOffsetInNanos(CognitoIdentityPoolId):
    pass


class AssetPropertyQuality(CognitoIdentityPoolId):
    pass


class AssetPropertyStringValue(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class AssetPropertyTimeInSeconds(CognitoIdentityPoolId):
    pass


class AssetPropertyTimestamp(BaseModel):
    """
    An asset property timestamp entry containing the following information.
    """

    timeInSeconds: AssetPropertyTimeInSeconds
    offsetInNanos: Optional[AssetPropertyOffsetInNanos] = None


class AssetPropertyVariant(BaseModel):
    """
    Contains an asset property value (of a single type).
    """

    stringValue: Optional[AssetPropertyStringValue] = None
    integerValue: Optional[AssetPropertyIntegerValue] = None
    doubleValue: Optional[AssetPropertyDoubleValue] = None
    booleanValue: Optional[AssetPropertyBooleanValue] = None


class AssetPropertyValue(BaseModel):
    """
    An asset property value entry containing the following information.
    """

    value: AssetPropertyVariant
    timestamp: AssetPropertyTimestamp
    quality: Optional[AssetPropertyQuality] = None


class AssetPropertyValueList(BaseModel):
    __root__: Annotated[List[AssetPropertyValue], Field(min_items=1)]


class JobTargets(BaseModel):
    __root__: Annotated[List[TargetArn], Field(min_items=1)]


class JobId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9_-]+')]


class Comment(BaseModel):
    __root__: Annotated[str, Field(max_length=2028, regex='[^\\p{C}]+')]


class NamespaceId(JobId):
    pass


class AssociateTargetsWithJobRequest(BaseModel):
    targets: JobTargets
    comment: Optional[Comment] = None


class JobArn(CognitoIdentityPoolId):
    pass


class JobDescription(Comment):
    pass


class PolicyTarget(CognitoIdentityPoolId):
    pass


class AttachPolicyRequest(BaseModel):
    target: PolicyTarget


class Principal(CognitoIdentityPoolId):
    pass


class AttachPrincipalPolicyRequest(BaseModel):
    """
    The input for the AttachPrincipalPolicy operation.
    """

    pass


class SecurityProfileTargetArn(CognitoIdentityPoolId):
    pass


class AttachSecurityProfileRequest(BaseModel):
    pass


class AttachThingPrincipalRequest(BaseModel):
    """
    The input for the AttachThingPrincipal operation.
    """

    pass


class AttributeKey(CognitoIdentityPoolId):
    pass


class AttributeName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, regex='[a-zA-Z0-9_.,@/:#-]+')]


class AttributeValue(BaseModel):
    __root__: Annotated[str, Field(max_length=800, regex='[a-zA-Z0-9_.,@/:#-]*')]


class AttributesMap(AdditionalParameterMap):
    pass


class Enabled(AllowAuthorizerOverride):
    pass


class AuditCheckConfigurations(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AuditCheckRunStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    WAITING_FOR_DATA_COLLECTION = 'WAITING_FOR_DATA_COLLECTION'
    CANCELED = 'CANCELED'
    COMPLETED_COMPLIANT = 'COMPLETED_COMPLIANT'
    COMPLETED_NON_COMPLIANT = 'COMPLETED_NON_COMPLIANT'
    FAILED = 'FAILED'


class CheckCompliant(AllowAuthorizerOverride):
    pass


class TotalResourcesCount(InProgressTimeoutInMinutes):
    pass


class NonCompliantResourcesCount(InProgressTimeoutInMinutes):
    pass


class SuppressedNonCompliantResourcesCount(InProgressTimeoutInMinutes):
    pass


class ErrorCode(CognitoIdentityPoolId):
    pass


class ErrorMessage(TargetArn):
    pass


class AuditCheckDetails(BaseModel):
    """
    Information about the audit check.
    """

    checkRunStatus: Optional[AuditCheckRunStatus] = None
    checkCompliant: Optional[CheckCompliant] = None
    totalResourcesCount: Optional[TotalResourcesCount] = None
    nonCompliantResourcesCount: Optional[NonCompliantResourcesCount] = None
    suppressedNonCompliantResourcesCount: Optional[
        SuppressedNonCompliantResourcesCount
    ] = None
    errorCode: Optional[ErrorCode] = None
    message: Optional[ErrorMessage] = None


class AuditCheckToActionsMapping(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AuditDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, regex='[\\p{Graph}\\x20]*')]


class AuditDetails(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class FindingId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9_-]+')
    ]


class AuditFindingSeverity(Enum):
    CRITICAL = 'CRITICAL'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'


class ReasonForNonCompliance(CognitoIdentityPoolId):
    pass


class ReasonForNonComplianceCode(CognitoIdentityPoolId):
    pass


class IsSuppressed(AllowAuthorizerOverride):
    pass


class AuditFrequency(Enum):
    DAILY = 'DAILY'
    WEEKLY = 'WEEKLY'
    BIWEEKLY = 'BIWEEKLY'
    MONTHLY = 'MONTHLY'


class MitigationActionsTaskId(FindingId):
    pass


class MitigationActionId(CognitoIdentityPoolId):
    pass


class AuditMitigationActionsExecutionStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    CANCELED = 'CANCELED'
    SKIPPED = 'SKIPPED'
    PENDING = 'PENDING'


class AuditMitigationActionExecutionMetadata(BaseModel):
    """
    Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.
    """

    taskId: Optional[MitigationActionsTaskId] = None
    findingId: Optional[FindingId] = None
    actionName: Optional[MitigationActionName] = None
    actionId: Optional[MitigationActionId] = None
    status: Optional[AuditMitigationActionsExecutionStatus] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    errorCode: Optional[ErrorCode] = None
    message: Optional[ErrorMessage] = None


class AuditMitigationActionExecutionMetadataList(BaseModel):
    __root__: List[AuditMitigationActionExecutionMetadata]


class AuditMitigationActionsTaskStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    CANCELED = 'CANCELED'


class AuditMitigationActionsTaskMetadata(BaseModel):
    """
    Information about an audit mitigation actions task that is returned by <code>ListAuditMitigationActionsTasks</code>.
    """

    taskId: Optional[MitigationActionsTaskId] = None
    startTime: Optional[Timestamp] = None
    taskStatus: Optional[AuditMitigationActionsTaskStatus] = None


class AuditMitigationActionsTaskMetadataList(BaseModel):
    __root__: List[AuditMitigationActionsTaskMetadata]


class AuditMitigationActionsTaskStatistics(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AuditNotificationTargetConfigurations(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class SuppressIndefinitely(AllowAuthorizerOverride):
    pass


class AuditTaskType(Enum):
    ON_DEMAND_AUDIT_TASK = 'ON_DEMAND_AUDIT_TASK'
    SCHEDULED_AUDIT_TASK = 'SCHEDULED_AUDIT_TASK'


class AuditTaskMetadata(BaseModel):
    """
    The audits that were performed.
    """

    taskId: Optional[AuditTaskId] = None
    taskStatus: Optional[AuditMitigationActionsTaskStatus] = None
    taskType: Optional[AuditTaskType] = None


class AuditTaskMetadataList(BaseModel):
    __root__: List[AuditTaskMetadata]


class AuthDecision(Enum):
    ALLOWED = 'ALLOWED'
    EXPLICIT_DENY = 'EXPLICIT_DENY'
    IMPLICIT_DENY = 'IMPLICIT_DENY'


class AuthorizerArn(TargetArn):
    pass


class AuthorizerConfig(BaseModel):
    """
    An object that specifies the authorization service for a domain.
    """

    defaultAuthorizerName: Optional[AuthorizerName] = None
    allowAuthorizerOverride: Optional[AllowAuthorizerOverride] = None


class AuthorizerFunctionArn(TargetArn):
    pass


class TokenKeyName(FindingId):
    pass


class PublicKeyMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AuthorizerStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class DateType(Timestamp):
    pass


class BooleanKey(AllowAuthorizerOverride):
    pass


class AuthorizerDescription(BaseModel):
    """
    The authorizer description.
    """

    authorizerName: Optional[AuthorizerName] = None
    authorizerArn: Optional[AuthorizerArn] = None
    authorizerFunctionArn: Optional[AuthorizerFunctionArn] = None
    tokenKeyName: Optional[TokenKeyName] = None
    tokenSigningPublicKeys: Optional[PublicKeyMap] = None
    status: Optional[AuthorizerStatus] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    signingDisabled: Optional[BooleanKey] = None


class AuthorizerSummary(BaseModel):
    """
    The authorizer summary.
    """

    authorizerName: Optional[AuthorizerName] = None
    authorizerArn: Optional[AuthorizerArn] = None


class Authorizers(BaseModel):
    __root__: List[AuthorizerSummary]


class AutoRegistrationStatus(Enum):
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'


class Average(BaseModel):
    __root__: float


class AwsIotJobArn(CognitoIdentityPoolId):
    pass


class AwsIotJobId(CognitoIdentityPoolId):
    pass


class AwsJobAbortCriteriaAbortThresholdPercentage(AbortThresholdPercentage):
    pass


class AwsJobAbortCriteriaMinimumNumberOfExecutedThings(MaxJobExecutionsPerMin):
    pass


class AwsJobAbortCriteria(BaseModel):
    """
    The criteria that determine when and how a job abort takes place.
    """

    failureType: JobExecutionFailureType
    action: AbortAction
    thresholdPercentage: AwsJobAbortCriteriaAbortThresholdPercentage
    minNumberOfExecutedThings: AwsJobAbortCriteriaMinimumNumberOfExecutedThings


class AwsJobRolloutRatePerMinute(MaximumPerMinute):
    pass


class AwsJobRolloutIncrementFactor(Average):
    pass


class AwsJobPresignedUrlConfig(BaseModel):
    """
    Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.
    """

    expiresInSec: Optional[ExpiresInSeconds] = None


class AwsJobRateIncreaseCriteriaNumberOfThings(MaxJobExecutionsPerMin):
    pass


class AwsJobTimeoutConfig(BaseModel):
    """
    Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.
    """

    inProgressTimeoutInMinutes: Optional[AwsJobTimeoutInProgressTimeoutInMinutes] = None


class BatchMode(AllowAuthorizerOverride):
    pass


class SuppressAlerts(AllowAuthorizerOverride):
    pass


class ComparisonOperator(Enum):
    less_than = 'less-than'
    less_than_equals = 'less-than-equals'
    greater_than = 'greater-than'
    greater_than_equals = 'greater-than-equals'
    in_cidr_set = 'in-cidr-set'
    not_in_cidr_set = 'not-in-cidr-set'
    in_port_set = 'in-port-set'
    not_in_port_set = 'not-in-port-set'
    in_set = 'in-set'
    not_in_set = 'not-in-set'


class DurationSeconds(InProgressTimeoutInMinutes):
    pass


class ConsecutiveDatapointsToAlarm(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class ConsecutiveDatapointsToClear(ConsecutiveDatapointsToAlarm):
    pass


class BehaviorCriteriaType(Enum):
    STATIC = 'STATIC'
    STATISTICAL = 'STATISTICAL'
    MACHINE_LEARNING = 'MACHINE_LEARNING'


class ModelStatus(Enum):
    PENDING_BUILD = 'PENDING_BUILD'
    ACTIVE = 'ACTIVE'
    EXPIRED = 'EXPIRED'


class DataCollectionPercentage(Percent):
    pass


class BillingGroupId(ViolationId):
    pass


class CreationDate(Timestamp):
    pass


class BillingGroupMetadata(BaseModel):
    """
    Additional information about the billing group.
    """

    creationDate: Optional[CreationDate] = None


class GroupNameAndArn(BaseModel):
    """
    The name and ARN of a group.
    """

    groupName: Optional[ThingGroupName] = None
    groupArn: Optional[ThingGroupArn] = None


class BillingGroupNameAndArnList(BaseModel):
    __root__: List[GroupNameAndArn]


class BillingGroupProperties(BaseModel):
    """
    The properties of a billing group.
    """

    billingGroupDescription: Optional[BillingGroupDescription] = None


class Boolean(AllowAuthorizerOverride):
    pass


class BucketKeyValue(CognitoIdentityPoolId):
    pass


class Count(InProgressTimeoutInMinutes):
    pass


class Bucket(BaseModel):
    """
    A count of documents that meets a specific aggregation criteria.
    """

    keyValue: Optional[BucketKeyValue] = None
    count: Optional[Count] = None


class BucketName(CognitoIdentityPoolId):
    pass


class Buckets(BaseModel):
    __root__: List[Bucket]


class CertificateArn(CognitoIdentityPoolId):
    pass


class CACertificate(BaseModel):
    """
    A CA certificate.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    status: Optional[AuthorizerStatus] = None
    creationDate: Optional[DateType] = None


class CertificatePem(BaseModel):
    __root__: Annotated[
        str,
        Field(description='The PEM of a certificate.', max_length=65536, min_length=1),
    ]


class CustomerVersion(MaxJobExecutionsPerMin):
    pass


class GenerationId(CognitoIdentityPoolId):
    pass


class CertificateValidity(BaseModel):
    """
    When the certificate is valid.
    """

    notBefore: Optional[DateType] = None
    notAfter: Optional[DateType] = None


class CACertificateDescription(BaseModel):
    """
    Describes a CA certificate.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    status: Optional[AuthorizerStatus] = None
    certificatePem: Optional[CertificatePem] = None
    ownedBy: Optional[AwsAccountId] = None
    creationDate: Optional[DateType] = None
    autoRegistrationStatus: Optional[AutoRegistrationStatus] = None
    lastModifiedDate: Optional[DateType] = None
    customerVersion: Optional[CustomerVersion] = None
    generationId: Optional[GenerationId] = None
    validity: Optional[CertificateValidity] = None


class CACertificateUpdateAction(Enum):
    DEACTIVATE = 'DEACTIVATE'


class CACertificates(BaseModel):
    __root__: List[CACertificate]


class CancelAuditMitigationActionsTaskRequest(BaseModel):
    pass


class CancelAuditTaskRequest(BaseModel):
    pass


class CancelCertificateTransferRequest(BaseModel):
    """
    The input for the CancelCertificateTransfer operation.
    """

    pass


class CancelDetectMitigationActionsTaskRequest(BaseModel):
    pass


class ForceFlag(AllowAuthorizerOverride):
    pass


class ExpectedVersion(InProgressTimeoutInMinutes):
    pass


class DetailsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CancelJobExecutionRequest(BaseModel):
    expectedVersion: Optional[ExpectedVersion] = None
    statusDetails: Optional[DetailsMap] = None


class ReasonCode(BaseModel):
    __root__: Annotated[str, Field(max_length=128, regex='[\\p{Upper}\\p{Digit}_]+')]


class CancelJobRequest(BaseModel):
    reasonCode: Optional[ReasonCode] = None
    comment: Optional[Comment] = None


class CanceledChecksCount(InProgressTimeoutInMinutes):
    pass


class CanceledFindingsCount(InProgressTimeoutInMinutes):
    pass


class CanceledThings(InProgressTimeoutInMinutes):
    pass


class CannedAccessControlList(Enum):
    private = 'private'
    public_read = 'public-read'
    public_read_write = 'public-read-write'
    aws_exec_read = 'aws-exec-read'
    authenticated_read = 'authenticated-read'
    bucket_owner_read = 'bucket-owner-read'
    bucket_owner_full_control = 'bucket-owner-full-control'
    log_delivery_write = 'log-delivery-write'


class CertificateStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    REVOKED = 'REVOKED'
    PENDING_TRANSFER = 'PENDING_TRANSFER'
    REGISTER_INACTIVE = 'REGISTER_INACTIVE'
    PENDING_ACTIVATION = 'PENDING_ACTIVATION'


class CertificateMode(Enum):
    DEFAULT = 'DEFAULT'
    SNI_ONLY = 'SNI_ONLY'


class Certificate(BaseModel):
    """
    Information about a certificate.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    status: Optional[CertificateStatus] = None
    certificateMode: Optional[CertificateMode] = None
    creationDate: Optional[DateType] = None


class CertificateName(CognitoIdentityPoolId):
    pass


class CertificatePathOnDevice(CognitoIdentityPoolId):
    pass


class CertificateSigningRequest(AggregationField):
    pass


class Certificates(BaseModel):
    __root__: List[Certificate]


class ChannelName(CognitoIdentityPoolId):
    pass


class Cidr(BaseModel):
    __root__: Annotated[
        str, Field(max_length=43, min_length=2, regex='[a-fA-F0-9:\\.\\/]+')
    ]


class Cidrs(BaseModel):
    __root__: List[Cidr]


class ClearDefaultAuthorizerRequest(BaseModel):
    pass


class String(CognitoIdentityPoolId):
    pass


class ClientProperties(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ClientRequestToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9-_]+$')
    ]


class StateReason(CognitoIdentityPoolId):
    pass


class StateValue(CognitoIdentityPoolId):
    pass


class LogGroupName(CognitoIdentityPoolId):
    pass


class Code(CognitoIdentityPoolId):
    pass


class SigningJobId(CognitoIdentityPoolId):
    pass


class InlineDocument(CognitoIdentityPoolId):
    pass


class CodeSigningCertificateChain(BaseModel):
    """
    Describes the certificate chain being used when code signing a file.
    """

    certificateName: Optional[CertificateName] = None
    inlineDocument: Optional[InlineDocument] = None


class Signature1(CognitoIdentityPoolId):
    pass


class CodeSigningSignature(BaseModel):
    """
    Describes the signature for a file.
    """

    inlineDocument: Optional[Signature1] = None


class CompliantChecksCount(InProgressTimeoutInMinutes):
    pass


class ConfidenceLevel(Enum):
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class ConfirmationToken(RoleAliasArn):
    pass


class ConfirmTopicRuleDestinationRequest(BaseModel):
    pass


class ConnectivityTimestamp(InProgressTimeoutInMinutes):
    pass


class CreateCertificateFromCsrRequest(BaseModel):
    """
    The input for the CreateCertificateFromCsr operation.
    """

    certificateSigningRequest: CertificateSigningRequest


class MetricName(SecurityProfileName):
    pass


class CustomMetricDisplayName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, regex='[\\p{Graph}\\x20]*')]


class CustomMetricType(Enum):
    string_list = 'string-list'
    ip_address_list = 'ip-address-list'
    number_list = 'number-list'
    number = 'number'


class CustomMetricArn(CognitoIdentityPoolId):
    pass


class DimensionName(SecurityProfileName):
    pass


class DimensionType(Enum):
    TOPIC_FILTER = 'TOPIC_FILTER'


class DimensionStringValues(BaseModel):
    __root__: Annotated[List[DimensionStringValue], Field(max_items=100, min_items=1)]


class DimensionArn(CognitoIdentityPoolId):
    pass


class DomainConfigurationName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w.-]+')]


class DomainName(ServerName):
    pass


class ServerCertificateArns(BaseModel):
    __root__: Annotated[List[AcmCertificateArn], Field(max_items=1, min_items=0)]


class ServiceType(Enum):
    DATA = 'DATA'
    CREDENTIAL_PROVIDER = 'CREDENTIAL_PROVIDER'
    JOBS = 'JOBS'


class DomainConfigurationArn(CognitoIdentityPoolId):
    pass


class IndexName(SecurityProfileName):
    pass


class QueryString(AggregationField):
    pass


class QueryVersion(CognitoIdentityPoolId):
    pass


class ThingGroupId(ViolationId):
    pass


class FleetMetricName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9_\\-\\.]+')
    ]


class FleetMetricPeriod(BaseModel):
    __root__: Annotated[int, Field(ge=60.0, le=86400.0)]


class FleetMetricDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='[\\p{Graph}\\x20]*')]


class FleetMetricUnit(Enum):
    Seconds = 'Seconds'
    Microseconds = 'Microseconds'
    Milliseconds = 'Milliseconds'
    Bytes = 'Bytes'
    Kilobytes = 'Kilobytes'
    Megabytes = 'Megabytes'
    Gigabytes = 'Gigabytes'
    Terabytes = 'Terabytes'
    Bits = 'Bits'
    Kilobits = 'Kilobits'
    Megabits = 'Megabits'
    Gigabits = 'Gigabits'
    Terabits = 'Terabits'
    Percent = 'Percent'
    Count = 'Count'
    Bytes_Second = 'Bytes/Second'
    Kilobytes_Second = 'Kilobytes/Second'
    Megabytes_Second = 'Megabytes/Second'
    Gigabytes_Second = 'Gigabytes/Second'
    Terabytes_Second = 'Terabytes/Second'
    Bits_Second = 'Bits/Second'
    Kilobits_Second = 'Kilobits/Second'
    Megabits_Second = 'Megabits/Second'
    Gigabits_Second = 'Gigabits/Second'
    Terabits_Second = 'Terabits/Second'
    Count_Second = 'Count/Second'
    None_ = 'None'


class FleetMetricArn(CognitoIdentityPoolId):
    pass


class JobDocumentSource(BaseModel):
    __root__: Annotated[str, Field(max_length=1350, min_length=1)]


class JobDocument(BaseModel):
    __root__: Annotated[str, Field(max_length=32768)]


class PresignedUrlConfig(BaseModel):
    """
    Configuration for pre-signed S3 URLs.
    """

    roleArn: Optional[RoleArn] = None
    expiresInSec: Optional[ExpiresInSec] = None


class TargetSelection(Enum):
    CONTINUOUS = 'CONTINUOUS'
    SNAPSHOT = 'SNAPSHOT'


class TimeoutConfig(BaseModel):
    """
    Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.
    """

    inProgressTimeoutInMinutes: Optional[InProgressTimeoutInMinutes] = None


class JobTemplateArn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1, regex='^arn:[!-~]+$')]


class JobTemplateId(JobId):
    pass


class CreateKeysAndCertificateRequest(BaseModel):
    """
    <p>The input for the CreateKeysAndCertificate operation.</p> <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions">CreateKeysAndCertificateRequest</a> action.</p>
    """

    pass


class MitigationActionArn(CognitoIdentityPoolId):
    pass


class OTAUpdateId(FindingId):
    pass


class OTAUpdateDescription(Comment):
    pass


class Targets3(BaseModel):
    __root__: Annotated[List[Target], Field(min_items=1)]


class Protocols(BaseModel):
    __root__: Annotated[List[Protocol], Field(max_items=2, min_items=1)]


class OTAUpdateArn(CognitoIdentityPoolId):
    pass


class OTAUpdateStatus(Enum):
    CREATE_PENDING = 'CREATE_PENDING'
    CREATE_IN_PROGRESS = 'CREATE_IN_PROGRESS'
    CREATE_COMPLETE = 'CREATE_COMPLETE'
    CREATE_FAILED = 'CREATE_FAILED'


class PolicyDocument(CognitoIdentityPoolId):
    pass


class PolicyArn(CognitoIdentityPoolId):
    pass


class PolicyVersionId(BaseModel):
    __root__: Annotated[str, Field(regex='[0-9]+')]


class SetAsDefault(AllowAuthorizerOverride):
    pass


class CreatePolicyVersionRequest(BaseModel):
    """
    The input for the CreatePolicyVersion operation.
    """

    policyDocument: PolicyDocument


class IsDefaultVersion(AllowAuthorizerOverride):
    pass


class TemplateName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=36, min_length=1, regex='^[0-9A-Za-z_-]+$')
    ]


class CreateProvisioningClaimRequest(BaseModel):
    pass


class TemplateDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=0, regex='[^\\p{C}]*')]


class ProvisioningHook(BaseModel):
    """
    Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
    """

    payloadVersion: Optional[PayloadVersion] = None
    targetArn: TargetArn


class TemplateArn(CognitoIdentityPoolId):
    pass


class TemplateVersionId(InProgressTimeoutInMinutes):
    pass


class CreateProvisioningTemplateVersionRequest(BaseModel):
    templateBody: TemplateBody


class RoleAlias(AuthorizerName):
    pass


class CredentialDurationSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=900.0, le=43200.0)]


class DayOfMonth(BaseModel):
    __root__: Annotated[str, Field(regex='^([1-9]|[12][0-9]|3[01])$|^LAST$')]


class DayOfWeek(Enum):
    SUN = 'SUN'
    MON = 'MON'
    TUE = 'TUE'
    WED = 'WED'
    THU = 'THU'
    FRI = 'FRI'
    SAT = 'SAT'


class TargetAuditCheckNames(BaseModel):
    __root__: List[AuditCheckName]


class ScheduledAuditName(FindingId):
    pass


class ScheduledAuditArn(CognitoIdentityPoolId):
    pass


class SecurityProfileDescription(AuditDescription):
    pass


class SecurityProfileArn(CognitoIdentityPoolId):
    pass


class StreamId(FindingId):
    pass


class StreamDescription(Comment):
    pass


class StreamArn(CognitoIdentityPoolId):
    pass


class StreamVersion(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=65535.0)]


class ThingTypeName(SecurityProfileName):
    pass


class ThingId(CognitoIdentityPoolId):
    pass


class ThingTypeArn(CognitoIdentityPoolId):
    pass


class ThingTypeId(CognitoIdentityPoolId):
    pass


class RuleName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9_]+$')
    ]


class CreatedAtDate(Timestamp):
    pass


class HashAlgorithm(CognitoIdentityPoolId):
    pass


class SignatureAlgorithm(CognitoIdentityPoolId):
    pass


class DeleteScheduledAudits(AllowAuthorizerOverride):
    pass


class DeleteAccountAuditConfigurationRequest(BaseModel):
    pass


class DeleteAdditionalMetricsToRetain(AllowAuthorizerOverride):
    pass


class DeleteAlertTargets(AllowAuthorizerOverride):
    pass


class DeleteAuthorizerRequest(BaseModel):
    pass


class DeleteBehaviors(AllowAuthorizerOverride):
    pass


class OptionalVersion(InProgressTimeoutInMinutes):
    pass


class DeleteBillingGroupRequest(BaseModel):
    pass


class DeleteCACertificateRequest(BaseModel):
    """
    Input for the DeleteCACertificate operation.
    """

    pass


class ForceDelete(AllowAuthorizerOverride):
    pass


class DeleteCertificateRequest(BaseModel):
    """
    The input for the DeleteCertificate operation.
    """

    pass


class DeleteCustomMetricRequest(BaseModel):
    pass


class DeleteDimensionRequest(BaseModel):
    pass


class DeleteDomainConfigurationRequest(BaseModel):
    pass


class DeleteDynamicThingGroupRequest(BaseModel):
    pass


class DeleteFleetMetricRequest(BaseModel):
    pass


class ExecutionNumber(InProgressTimeoutInMinutes):
    pass


class DeleteJobExecutionRequest(BaseModel):
    pass


class DeleteJobRequest(BaseModel):
    pass


class DeleteJobTemplateRequest(BaseModel):
    pass


class DeleteMitigationActionRequest(BaseModel):
    pass


class DeleteStream(AllowAuthorizerOverride):
    pass


class ForceDeleteAWSJob(AllowAuthorizerOverride):
    pass


class DeleteOTAUpdateRequest(BaseModel):
    pass


class DeletePolicyRequest(BaseModel):
    """
    The input for the DeletePolicy operation.
    """

    pass


class DeletePolicyVersionRequest(BaseModel):
    """
    The input for the DeletePolicyVersion operation.
    """

    pass


class DeleteProvisioningTemplateRequest(BaseModel):
    pass


class DeleteProvisioningTemplateVersionRequest(BaseModel):
    pass


class DeleteRegistrationCodeRequest(BaseModel):
    """
    The input for the DeleteRegistrationCode operation.
    """

    pass


class DeleteRoleAliasRequest(BaseModel):
    pass


class DeleteScheduledAuditRequest(BaseModel):
    pass


class DeleteSecurityProfileRequest(BaseModel):
    pass


class DeleteStreamRequest(BaseModel):
    pass


class DeleteThingGroupRequest(BaseModel):
    pass


class DeleteThingRequest(BaseModel):
    """
    The input for the DeleteThing operation.
    """

    pass


class DeleteThingTypeRequest(BaseModel):
    """
    The input for the DeleteThingType operation.
    """

    pass


class DeleteTopicRuleDestinationRequest(BaseModel):
    pass


class DeleteTopicRuleRequest(BaseModel):
    """
    The input for the DeleteTopicRule operation.
    """

    pass


class DeleteV2LoggingLevelRequest(BaseModel):
    pass


class DeliveryStreamName(CognitoIdentityPoolId):
    pass


class UndoDeprecate(AllowAuthorizerOverride):
    pass


class DeprecateThingTypeRequest(BaseModel):
    """
    The input for the DeprecateThingType operation.
    """

    undoDeprecate: Optional[UndoDeprecate] = None


class DeprecationDate(Timestamp):
    pass


class DescribeAccountAuditConfigurationRequest(BaseModel):
    pass


class DescribeAuditFindingRequest(BaseModel):
    pass


class DescribeAuditMitigationActionsTaskRequest(BaseModel):
    pass


class DescribeAuditTaskRequest(BaseModel):
    pass


class DescribeAuthorizerRequest(BaseModel):
    pass


class DescribeBillingGroupRequest(BaseModel):
    pass


class Version(InProgressTimeoutInMinutes):
    pass


class DescribeCACertificateRequest(BaseModel):
    """
    The input for the DescribeCACertificate operation.
    """

    pass


class RegistrationConfig(BaseModel):
    """
    The registration configuration.
    """

    templateBody: Optional[TemplateBody] = None
    roleArn: Optional[RoleArn] = None


class DescribeCertificateRequest(BaseModel):
    """
    The input for the DescribeCertificate operation.
    """

    pass


class DescribeCustomMetricRequest(BaseModel):
    pass


class DescribeDefaultAuthorizerRequest(BaseModel):
    pass


class DescribeDetectMitigationActionsTaskRequest(BaseModel):
    pass


class DescribeDimensionRequest(BaseModel):
    pass


class ReservedDomainConfigurationName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w.:-]+')]


class DescribeDomainConfigurationRequest(BaseModel):
    pass


class DomainConfigurationStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class DomainType(Enum):
    ENDPOINT = 'ENDPOINT'
    AWS_MANAGED = 'AWS_MANAGED'
    CUSTOMER_MANAGED = 'CUSTOMER_MANAGED'


class EndpointType(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class DescribeEndpointRequest(BaseModel):
    """
    The input for the DescribeEndpoint operation.
    """

    pass


class EndpointAddress(CognitoIdentityPoolId):
    pass


class DescribeEventConfigurationsRequest(BaseModel):
    pass


class EventConfigurations(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LastModifiedDate(Timestamp):
    pass


class DescribeFleetMetricRequest(BaseModel):
    pass


class DescribeIndexRequest(BaseModel):
    pass


class IndexStatus(Enum):
    ACTIVE = 'ACTIVE'
    BUILDING = 'BUILDING'
    REBUILDING = 'REBUILDING'


class IndexSchema(CognitoIdentityPoolId):
    pass


class DescribeJobExecutionRequest(BaseModel):
    pass


class DescribeJobRequest(BaseModel):
    pass


class DescribeJobTemplateRequest(BaseModel):
    pass


class DescribeMitigationActionRequest(BaseModel):
    pass


class MitigationActionType(Enum):
    UPDATE_DEVICE_CERTIFICATE = 'UPDATE_DEVICE_CERTIFICATE'
    UPDATE_CA_CERTIFICATE = 'UPDATE_CA_CERTIFICATE'
    ADD_THINGS_TO_THING_GROUP = 'ADD_THINGS_TO_THING_GROUP'
    REPLACE_DEFAULT_POLICY_VERSION = 'REPLACE_DEFAULT_POLICY_VERSION'
    ENABLE_IOT_LOGGING = 'ENABLE_IOT_LOGGING'
    PUBLISH_FINDING_TO_SNS = 'PUBLISH_FINDING_TO_SNS'


class DescribeProvisioningTemplateRequest(BaseModel):
    pass


class DescribeProvisioningTemplateVersionRequest(BaseModel):
    pass


class DescribeRoleAliasRequest(BaseModel):
    pass


class RoleAliasDescription(BaseModel):
    """
    Role alias description.
    """

    roleAlias: Optional[RoleAlias] = None
    roleAliasArn: Optional[RoleAliasArn] = None
    roleArn: Optional[RoleArn] = None
    owner: Optional[AwsAccountId] = None
    credentialDurationSeconds: Optional[CredentialDurationSeconds] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None


class DescribeScheduledAuditRequest(BaseModel):
    pass


class DescribeSecurityProfileRequest(BaseModel):
    pass


class DescribeStreamRequest(BaseModel):
    pass


class DescribeThingGroupRequest(BaseModel):
    pass


class TaskId(BaseModel):
    __root__: Annotated[str, Field(max_length=40)]


class DescribeThingRegistrationTaskRequest(BaseModel):
    pass


class RegistryS3BucketName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=3, regex='[a-zA-Z0-9._-]+')
    ]


class RegistryS3KeyName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex="[a-zA-Z0-9!_.*'()-\\/]+")
    ]


class Status(Enum):
    InProgress = 'InProgress'
    Completed = 'Completed'
    Failed = 'Failed'
    Cancelled = 'Cancelled'
    Cancelling = 'Cancelling'


class Percentage(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class DescribeThingRequest(BaseModel):
    """
    The input for the DescribeThing operation.
    """

    pass


class DescribeThingTypeRequest(BaseModel):
    """
    The input for the DescribeThingType operation.
    """

    pass


class ThingTypeMetadata(BaseModel):
    """
    The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.
    """

    deprecated: Optional[Boolean] = None
    deprecationDate: Optional[DeprecationDate] = None
    creationDate: Optional[CreationDate] = None


class DetachPolicyRequest(BaseModel):
    target: PolicyTarget


class DetachPrincipalPolicyRequest(BaseModel):
    """
    The input for the DetachPrincipalPolicy operation.
    """

    pass


class DetachSecurityProfileRequest(BaseModel):
    pass


class DetachThingPrincipalRequest(BaseModel):
    """
    The input for the DetachThingPrincipal operation.
    """

    pass


class DetailsKey(SecurityProfileName):
    pass


class DetectMitigationActionExecutionStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCESSFUL = 'SUCCESSFUL'
    FAILED = 'FAILED'
    SKIPPED = 'SKIPPED'


class DetectMitigationActionExecutionErrorCode(CognitoIdentityPoolId):
    pass


class DetectMitigationActionExecution(BaseModel):
    """
    Describes which mitigation actions should be executed.
    """

    taskId: Optional[MitigationActionsTaskId] = None
    violationId: Optional[ViolationId] = None
    actionName: Optional[MitigationActionName] = None
    thingName: Optional[DeviceDefenderThingName] = None
    executionStartDate: Optional[Timestamp] = None
    executionEndDate: Optional[Timestamp] = None
    status: Optional[DetectMitigationActionExecutionStatus] = None
    errorCode: Optional[DetectMitigationActionExecutionErrorCode] = None
    message: Optional[ErrorMessage] = None


class DetectMitigationActionExecutionList(BaseModel):
    __root__: List[DetectMitigationActionExecution]


class GenericLongValue(InProgressTimeoutInMinutes):
    pass


class DetectMitigationActionsTaskStatistics(BaseModel):
    """
    The statistics of a mitigation action task.
    """

    actionsExecuted: Optional[GenericLongValue] = None
    actionsSkipped: Optional[GenericLongValue] = None
    actionsFailed: Optional[GenericLongValue] = None


class DetectMitigationActionsTaskStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCESSFUL = 'SUCCESSFUL'
    FAILED = 'FAILED'
    CANCELED = 'CANCELED'


class ViolationEventOccurrenceRange(BaseModel):
    """
    Specifies the time period of which violation events occurred between.
    """

    startTime: Timestamp
    endTime: Timestamp


class PrimitiveBoolean(AllowAuthorizerOverride):
    pass


class DetectMitigationActionsToExecuteList(BaseModel):
    __root__: Annotated[List[MitigationActionName], Field(max_items=5, min_items=1)]


class DimensionNames(BaseModel):
    __root__: List[DimensionName]


class DimensionValueOperator(Enum):
    IN = 'IN'
    NOT_IN = 'NOT_IN'


class DisableAllLogs(AllowAuthorizerOverride):
    pass


class DisableTopicRuleRequest(BaseModel):
    """
    The input for the DisableTopicRuleRequest operation.
    """

    pass


class DisconnectReason(CognitoIdentityPoolId):
    pass


class DomainConfigurationSummary(BaseModel):
    """
    <p>The summary of a domain configuration. A domain configuration specifies custom IoT-specific information about a domain. A domain configuration can be associated with an Amazon Web Services-managed domain (for example, dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain, or a default endpoint.</p> <ul> <li> <p>Data</p> </li> <li> <p>Jobs</p> </li> <li> <p>CredentialProvider</p> </li> </ul>
    """

    domainConfigurationName: Optional[ReservedDomainConfigurationName] = None
    domainConfigurationArn: Optional[DomainConfigurationArn] = None
    serviceType: Optional[ServiceType] = None


class DomainConfigurations(BaseModel):
    __root__: List[DomainConfigurationSummary]


class TableName(CognitoIdentityPoolId):
    pass


class DynamoOperation(CognitoIdentityPoolId):
    pass


class HashKeyField(CognitoIdentityPoolId):
    pass


class HashKeyValue(CognitoIdentityPoolId):
    pass


class DynamoKeyType(Enum):
    STRING = 'STRING'
    NUMBER = 'NUMBER'


class RangeKeyField(CognitoIdentityPoolId):
    pass


class RangeKeyValue(CognitoIdentityPoolId):
    pass


class PayloadField(CognitoIdentityPoolId):
    pass


class PutItemInput(BaseModel):
    """
    The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.
    """

    tableName: TableName


class EffectivePolicy(BaseModel):
    """
    The policy that has the effect on the authorization results.
    """

    policyName: Optional[PolicyName] = None
    policyArn: Optional[PolicyArn] = None
    policyDocument: Optional[PolicyDocument] = None


class EffectivePolicies(BaseModel):
    __root__: List[EffectivePolicy]


class ElasticsearchEndpoint(BaseModel):
    __root__: Annotated[str, Field(regex='https?://.*')]


class ElasticsearchIndex(CognitoIdentityPoolId):
    pass


class ElasticsearchType(CognitoIdentityPoolId):
    pass


class ElasticsearchId(CognitoIdentityPoolId):
    pass


class EnableTopicRuleRequest(BaseModel):
    """
    The input for the EnableTopicRuleRequest operation.
    """

    pass


class OTAUpdateErrorMessage(CognitoIdentityPoolId):
    pass


class ErrorInfo(BaseModel):
    """
    Error information.
    """

    code: Optional[Code] = None
    message: Optional[OTAUpdateErrorMessage] = None


class EvaluationStatistic(BaseModel):
    __root__: Annotated[
        str, Field(regex='(p0|p0\\.1|p0\\.01|p1|p10|p50|p90|p99|p99\\.9|p99\\.99|p100)')
    ]


class EventType(Enum):
    THING = 'THING'
    THING_GROUP = 'THING_GROUP'
    THING_TYPE = 'THING_TYPE'
    THING_GROUP_MEMBERSHIP = 'THING_GROUP_MEMBERSHIP'
    THING_GROUP_HIERARCHY = 'THING_GROUP_HIERARCHY'
    THING_TYPE_ASSOCIATION = 'THING_TYPE_ASSOCIATION'
    JOB = 'JOB'
    JOB_EXECUTION = 'JOB_EXECUTION'
    POLICY = 'POLICY'
    CERTIFICATE = 'CERTIFICATE'
    CA_CERTIFICATE = 'CA_CERTIFICATE'


class ExecutionNamePrefix(CognitoIdentityPoolId):
    pass


class RolloutRatePerMinute(MaximumPerMinute):
    pass


class IncrementFactor(BaseModel):
    __root__: Annotated[float, Field(ge=1.0, le=5.0)]


class FailedChecksCount(InProgressTimeoutInMinutes):
    pass


class FailedFindingsCount(InProgressTimeoutInMinutes):
    pass


class FailedThings(InProgressTimeoutInMinutes):
    pass


class FieldName(CognitoIdentityPoolId):
    pass


class FieldType(Enum):
    Number = 'Number'
    String = 'String'
    Boolean = 'Boolean'


class FieldModel(BaseModel):
    """
    Describes the name and data type at a field.
    """

    name: Optional[FieldName] = None
    type: Optional[FieldType] = None


class FileId(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=255.0)]


class Stream(BaseModel):
    """
    Describes a group of files that can be streamed.
    """

    streamId: Optional[StreamId] = None
    fileId: Optional[FileId] = None


class FileName(CognitoIdentityPoolId):
    pass


class FileType(FileId):
    pass


class FirehoseSeparator(BaseModel):
    __root__: Annotated[str, Field(regex='([\\n\\t])|(\\r\\n)|(,)')]


class FleetMetricNameAndArn(BaseModel):
    """
    The name and ARN of a fleet metric.
    """

    metricName: Optional[FleetMetricName] = None
    metricArn: Optional[FleetMetricArn] = None


class FleetMetricNameAndArnList(BaseModel):
    __root__: List[FleetMetricNameAndArn]


class Forced(AllowAuthorizerOverride):
    pass


class FunctionArn(CognitoIdentityPoolId):
    pass


class TinyMaxResults(ConsecutiveDatapointsToAlarm):
    pass


class NextToken(CognitoIdentityPoolId):
    pass


class GetBehaviorModelTrainingSummariesRequest(BaseModel):
    pass


class GetCardinalityRequest(BaseModel):
    indexName: Optional[IndexName] = None
    queryString: QueryString
    aggregationField: Optional[AggregationField] = None
    queryVersion: Optional[QueryVersion] = None


class GetEffectivePoliciesRequest(BaseModel):
    principal: Optional[Principal] = None
    cognitoIdentityPoolId: Optional[CognitoIdentityPoolId] = None


class GetIndexingConfigurationRequest(BaseModel):
    pass


class GetJobDocumentRequest(BaseModel):
    pass


class GetLoggingOptionsRequest(BaseModel):
    """
    The input for the GetLoggingOptions operation.
    """

    pass


class GetOTAUpdateRequest(BaseModel):
    pass


class PercentList(BaseModel):
    __root__: List[Percent]


class GetPercentilesRequest(BaseModel):
    indexName: Optional[IndexName] = None
    queryString: QueryString
    aggregationField: Optional[AggregationField] = None
    queryVersion: Optional[QueryVersion] = None
    percents: Optional[PercentList] = None


class GetPolicyRequest(BaseModel):
    """
    The input for the GetPolicy operation.
    """

    pass


class GetPolicyVersionRequest(BaseModel):
    """
    The input for the GetPolicyVersion operation.
    """

    pass


class GetRegistrationCodeRequest(BaseModel):
    """
    The input to the GetRegistrationCode operation.
    """

    pass


class RegistrationCode(CertificateId):
    pass


class GetStatisticsRequest(BaseModel):
    indexName: Optional[IndexName] = None
    queryString: QueryString
    aggregationField: Optional[AggregationField] = None
    queryVersion: Optional[QueryVersion] = None


class GetTopicRuleDestinationRequest(BaseModel):
    pass


class GetTopicRuleRequest(BaseModel):
    """
    The input for the GetTopicRule operation.
    """

    pass


class RuleArn(CognitoIdentityPoolId):
    pass


class GetV2LoggingOptionsRequest(BaseModel):
    pass


class HeaderKey(DimensionStringValue):
    pass


class HeaderValue(CognitoIdentityPoolId):
    pass


class Url(BaseModel):
    __root__: Annotated[str, Field(max_length=2000)]


class HttpContext(BaseModel):
    """
    Specifies the HTTP context to use for the test authorizer request.
    """

    headers: Optional[HttpHeaders] = None
    queryString: Optional[HttpQueryString] = None


class HttpHeaderName(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=1)]


class HttpHeaderValue(HttpHeaderName):
    pass


class HttpUrlDestinationProperties(BaseModel):
    """
    HTTP URL destination properties.
    """

    confirmationUrl: Optional[Url] = None


class HttpUrlDestinationSummary(HttpUrlDestinationProperties):
    """
    Information about an HTTP URL destination.
    """

    pass


class InProgressChecksCount(InProgressTimeoutInMinutes):
    pass


class InProgressThings(InProgressTimeoutInMinutes):
    pass


class IndexNamesList(BaseModel):
    __root__: List[IndexName]


class InputName(DeviceDefenderThingName):
    pass


class MessageId(EndpointType):
    pass


class IsAuthenticated(AllowAuthorizerOverride):
    pass


class JobStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    CANCELED = 'CANCELED'
    COMPLETED = 'COMPLETED'
    DELETION_IN_PROGRESS = 'DELETION_IN_PROGRESS'


class JobExecutionStatus(Enum):
    QUEUED = 'QUEUED'
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    TIMED_OUT = 'TIMED_OUT'
    REJECTED = 'REJECTED'
    REMOVED = 'REMOVED'
    CANCELED = 'CANCELED'


class JobExecutionStatusDetails(BaseModel):
    """
    Details of the job execution status.
    """

    detailsMap: Optional[DetailsMap] = None


class VersionNumber(InProgressTimeoutInMinutes):
    pass


class JobExecutionSummary(BaseModel):
    """
    The job execution summary.
    """

    status: Optional[JobExecutionStatus] = None
    queuedAt: Optional[DateType] = None
    startedAt: Optional[DateType] = None
    lastUpdatedAt: Optional[DateType] = None
    executionNumber: Optional[ExecutionNumber] = None


class JobExecutionSummaryForJob(BaseModel):
    """
    Contains a summary of information about job executions for a specific job.
    """

    thingArn: Optional[ThingArn] = None
    jobExecutionSummary: Optional[JobExecutionSummary] = None


class JobExecutionSummaryForJobList(BaseModel):
    __root__: List[JobExecutionSummaryForJob]


class JobExecutionSummaryForThing(BaseModel):
    """
    The job execution summary for a thing.
    """

    jobId: Optional[JobId] = None
    jobExecutionSummary: Optional[JobExecutionSummary] = None


class JobExecutionSummaryForThingList(BaseModel):
    __root__: List[JobExecutionSummaryForThing]


class SucceededThings(InProgressTimeoutInMinutes):
    pass


class RejectedThings(InProgressTimeoutInMinutes):
    pass


class QueuedThings(InProgressTimeoutInMinutes):
    pass


class RemovedThings(InProgressTimeoutInMinutes):
    pass


class TimedOutThings(InProgressTimeoutInMinutes):
    pass


class JobSummary(BaseModel):
    """
    The job summary.
    """

    jobArn: Optional[JobArn] = None
    jobId: Optional[JobId] = None
    thingGroupId: Optional[ThingGroupId] = None
    targetSelection: Optional[TargetSelection] = None
    status: Optional[JobStatus] = None
    createdAt: Optional[DateType] = None
    lastUpdatedAt: Optional[DateType] = None
    completedAt: Optional[DateType] = None


class JobSummaryList(BaseModel):
    __root__: List[JobSummary]


class JobTemplateSummary(BaseModel):
    """
    An object that contains information about the job template.
    """

    jobTemplateArn: Optional[JobTemplateArn] = None
    jobTemplateId: Optional[JobTemplateId] = None
    description: Optional[JobDescription] = None
    createdAt: Optional[DateType] = None


class JobTemplateSummaryList(BaseModel):
    __root__: List[JobTemplateSummary]


class JsonDocument(CognitoIdentityPoolId):
    pass


class Key(CognitoIdentityPoolId):
    pass


class KeyName(SecurityProfileName):
    pass


class PublicKey(AggregationField):
    pass


class PrivateKey(BaseModel):
    __root__: Annotated[SecretStr, Field(min_length=1)]


class StreamName(CognitoIdentityPoolId):
    pass


class PartitionKey(CognitoIdentityPoolId):
    pass


class LaserMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=250.0)]


class LastUpdatedAtDate(Timestamp):
    pass


class ListSuppressedAlerts(AllowAuthorizerOverride):
    pass


class MaxResults(LaserMaxResults):
    pass


class ListActiveViolationsRequest(BaseModel):
    pass


class Recursive(AllowAuthorizerOverride):
    pass


class Marker(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='[A-Za-z0-9+/]+={0,2}')]


class PageSize(LaserMaxResults):
    pass


class ListAttachedPoliciesRequest(BaseModel):
    pass


class ListSuppressedFindings(AllowAuthorizerOverride):
    pass


class ListAuditMitigationActionsExecutionsRequest(BaseModel):
    pass


class ListAuditMitigationActionsTasksRequest(BaseModel):
    pass


class ListAuditTasksRequest(BaseModel):
    pass


class ListAuthorizersRequest(BaseModel):
    pass


class RegistryMaxResults(LaserMaxResults):
    pass


class ListBillingGroupsRequest(BaseModel):
    pass


class ListCACertificatesRequest(BaseModel):
    """
    Input for the ListCACertificates operation.
    """

    pass


class ListCertificatesByCARequest(BaseModel):
    """
    The input to the ListCertificatesByCA operation.
    """

    pass


class ListCertificatesRequest(BaseModel):
    """
    The input for the ListCertificates operation.
    """

    pass


class ListCustomMetricsRequest(BaseModel):
    pass


class MetricNames(BaseModel):
    __root__: List[MetricName]


class ListDetectMitigationActionsExecutionsRequest(BaseModel):
    pass


class ListDetectMitigationActionsTasksRequest(BaseModel):
    pass


class ListDimensionsRequest(BaseModel):
    pass


class ListDomainConfigurationsRequest(BaseModel):
    pass


class ListFleetMetricsRequest(BaseModel):
    pass


class QueryMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=500.0)]


class ListIndicesRequest(BaseModel):
    pass


class ListJobExecutionsForJobRequest(BaseModel):
    pass


class ListJobExecutionsForThingRequest(BaseModel):
    pass


class ListJobTemplatesRequest(BaseModel):
    pass


class ListJobsRequest(BaseModel):
    pass


class ListMitigationActionsRequest(BaseModel):
    pass


class ListOTAUpdatesRequest(BaseModel):
    pass


class ListOutgoingCertificatesRequest(BaseModel):
    """
    The input to the ListOutgoingCertificates operation.
    """

    pass


class ListPoliciesRequest(BaseModel):
    """
    The input for the ListPolicies operation.
    """

    pass


class ListPolicyPrincipalsRequest(BaseModel):
    """
    The input for the ListPolicyPrincipals operation.
    """

    pass


class ListPolicyVersionsRequest(BaseModel):
    """
    The input for the ListPolicyVersions operation.
    """

    pass


class ListPrincipalPoliciesRequest(BaseModel):
    """
    The input for the ListPrincipalPolicies operation.
    """

    pass


class ListPrincipalThingsRequest(BaseModel):
    """
    The input for the ListPrincipalThings operation.
    """

    pass


class ThingNameList(BaseModel):
    __root__: List[ThingName]


class ListProvisioningTemplateVersionsRequest(BaseModel):
    pass


class ListProvisioningTemplatesRequest(BaseModel):
    pass


class ListRoleAliasesRequest(BaseModel):
    pass


class RoleAliases(BaseModel):
    __root__: List[RoleAlias]


class ListScheduledAuditsRequest(BaseModel):
    pass


class ListSecurityProfilesForTargetRequest(BaseModel):
    pass


class ListSecurityProfilesRequest(BaseModel):
    pass


class ListStreamsRequest(BaseModel):
    pass


class ResourceArn(CognitoIdentityPoolId):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ListTargetsForPolicyRequest(BaseModel):
    pass


class PolicyTargets(BaseModel):
    __root__: List[PolicyTarget]


class ListTargetsForSecurityProfileRequest(BaseModel):
    pass


class ListThingGroupsForThingRequest(BaseModel):
    pass


class ThingGroupNameAndArnList(BillingGroupNameAndArnList):
    pass


class RecursiveWithoutDefault(AllowAuthorizerOverride):
    pass


class ListThingGroupsRequest(BaseModel):
    pass


class ListThingPrincipalsRequest(BaseModel):
    """
    The input for the ListThingPrincipal operation.
    """

    pass


class ReportType(Enum):
    ERRORS = 'ERRORS'
    RESULTS = 'RESULTS'


class ListThingRegistrationTaskReportsRequest(BaseModel):
    pass


class ListThingRegistrationTasksRequest(BaseModel):
    pass


class TaskIdList(BaseModel):
    __root__: List[TaskId]


class ListThingTypesRequest(BaseModel):
    """
    The input for the ListThingTypes operation.
    """

    pass


class ListThingsInBillingGroupRequest(BaseModel):
    pass


class ListThingsInThingGroupRequest(BaseModel):
    pass


class UsePrefixAttributeValue(AllowAuthorizerOverride):
    pass


class ListThingsRequest(BaseModel):
    """
    The input for the ListThings operation.
    """

    pass


class TopicRuleDestinationMaxResults(MaximumPerMinute):
    pass


class ListTopicRuleDestinationsRequest(BaseModel):
    pass


class Topic2(CognitoIdentityPoolId):
    pass


class TopicRuleMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10000.0)]


class ListTopicRulesRequest(BaseModel):
    """
    The input for the ListTopicRules operation.
    """

    pass


class SkyfallMaxResults(LaserMaxResults):
    pass


class ListV2LoggingLevelsRequest(BaseModel):
    pass


class ListViolationEventsRequest(BaseModel):
    pass


class LogTarget(BaseModel):
    """
    A log target.
    """

    targetType: LogTargetType
    targetName: Optional[LogTargetName] = None


class LogTargetConfiguration(BaseModel):
    """
    The target configuration.
    """

    logTarget: Optional[LogTarget] = None
    logLevel: Optional[LogLevel] = None


class LoggingOptionsPayload(BaseModel):
    """
    Describes the logging options payload.
    """

    roleArn: AwsArn
    logLevel: Optional[LogLevel] = None


class MaxBuckets(TopicRuleMaxResults):
    pass


class Maximum(Average):
    pass


class Message(EndpointType):
    pass


class MessageFormat(Enum):
    RAW = 'RAW'
    JSON = 'JSON'


class UnsignedLong(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class Number(Average):
    pass


class NumberList(BaseModel):
    __root__: List[Number]


class Minimum(Average):
    pass


class MissingContextValue(CognitoIdentityPoolId):
    pass


class MitigationActionIdentifier(BaseModel):
    """
    Information that identifies a mitigation action. This information is returned by ListMitigationActions.
    """

    actionName: Optional[MitigationActionName] = None
    actionArn: Optional[MitigationActionArn] = None
    creationDate: Optional[Timestamp] = None


class MqttContext(BaseModel):
    """
    Specifies the MQTT context to use for the test authorizer request
    """

    username: Optional[MqttUsername] = None
    password: Optional[MqttPassword] = None
    clientId: Optional[MqttClientId] = None


class NonCompliantChecksCount(InProgressTimeoutInMinutes):
    pass


class ResourceType(Enum):
    DEVICE_CERTIFICATE = 'DEVICE_CERTIFICATE'
    CA_CERTIFICATE = 'CA_CERTIFICATE'
    IOT_POLICY = 'IOT_POLICY'
    COGNITO_IDENTITY_POOL = 'COGNITO_IDENTITY_POOL'
    CLIENT_ID = 'CLIENT_ID'
    ACCOUNT_SETTINGS = 'ACCOUNT_SETTINGS'
    ROLE_ALIAS = 'ROLE_ALIAS'
    IAM_ROLE = 'IAM_ROLE'


class StringMap(ClientProperties):
    pass


class NullableBoolean(AllowAuthorizerOverride):
    pass


class NumberOfThings(MaxJobExecutionsPerMin):
    pass


class OTAUpdateFileVersion(CognitoIdentityPoolId):
    pass


class OTAUpdateSummary(BaseModel):
    """
    An OTA update summary.
    """

    otaUpdateId: Optional[OTAUpdateId] = None
    otaUpdateArn: Optional[OTAUpdateArn] = None
    creationDate: Optional[DateType] = None


class OutgoingCertificate(BaseModel):
    """
    A certificate that has been transferred but not yet accepted.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    transferredTo: Optional[AwsAccountId] = None
    transferDate: Optional[DateType] = None
    transferMessage: Optional[Message] = None
    creationDate: Optional[DateType] = None


class Parameter(CognitoIdentityPoolId):
    pass


class Parameters(AdditionalParameterMap):
    pass


class PercentValue(Average):
    pass


class PercentPair(BaseModel):
    """
    Describes the percentile and percentile value.
    """

    percent: Optional[Percent] = None
    value: Optional[PercentValue] = None


class Platform(CognitoIdentityPoolId):
    pass


class Policy(BaseModel):
    """
    Describes an IoT policy.
    """

    policyName: Optional[PolicyName] = None
    policyArn: Optional[PolicyArn] = None


class PolicyDocuments(BaseModel):
    __root__: List[PolicyDocument]


class PolicyNames(BaseModel):
    __root__: List[PolicyName]


class PolicyTemplateName(Enum):
    BLANK_POLICY = 'BLANK_POLICY'


class PolicyVersion(BaseModel):
    """
    Describes a policy version.
    """

    versionId: Optional[PolicyVersionId] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None
    createDate: Optional[DateType] = None


class Port(StreamVersion):
    pass


class Prefix(CognitoIdentityPoolId):
    pass


class PrincipalArn(CognitoIdentityPoolId):
    pass


class PrincipalId(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9]+')]


class ProcessingTargetName(CognitoIdentityPoolId):
    pass


class ProvisioningTemplateSummary(BaseModel):
    """
    A summary of information about a fleet provisioning template.
    """

    templateArn: Optional[TemplateArn] = None
    templateName: Optional[TemplateName] = None
    description: Optional[TemplateDescription] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    enabled: Optional[Enabled] = None


class ProvisioningTemplateVersionSummary(BaseModel):
    """
    A summary of information about a fleet provision template version.
    """

    versionId: Optional[TemplateVersionId] = None
    creationDate: Optional[DateType] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None


class SnsTopicArn(BaseModel):
    __root__: Annotated[str, Field(max_length=350)]


class PutAssetPropertyValueEntry(BaseModel):
    """
    An asset property value entry containing the following information.
    """

    entryId: Optional[AssetPropertyEntryId] = None
    assetId: Optional[AssetId] = None
    propertyId: Optional[AssetPropertyId] = None
    propertyAlias: Optional[AssetPropertyAlias] = None
    propertyValues: AssetPropertyValueList


class Qos(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1.0)]


class QueueUrl(CognitoIdentityPoolId):
    pass


class SetAsActiveFlag(AllowAuthorizerOverride):
    pass


class RegisterCertificateRequest(BaseModel):
    """
    The input to the RegisterCertificate operation.
    """

    certificatePem: CertificatePem
    caCertificatePem: Optional[CertificatePem] = None
    status: Optional[CertificateStatus] = None


class RegisterCertificateWithoutCARequest(BaseModel):
    certificatePem: CertificatePem
    status: Optional[CertificateStatus] = None


class RegisterThingRequest(BaseModel):
    templateBody: TemplateBody
    parameters: Optional[Parameters] = None


class ResourceArns(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class RejectCertificateTransferRequest(BaseModel):
    """
    The input for the RejectCertificateTransfer operation.
    """

    rejectReason: Optional[Message] = None


class RemoveAuthorizerConfig(AllowAuthorizerOverride):
    pass


class RemoveAutoRegistration(AllowAuthorizerOverride):
    pass


class RemoveHook(AllowAuthorizerOverride):
    pass


class RemoveThingFromBillingGroupRequest(BaseModel):
    billingGroupName: Optional[BillingGroupName] = None
    billingGroupArn: Optional[BillingGroupArn] = None
    thingName: Optional[ThingName] = None
    thingArn: Optional[ThingArn] = None


class RemoveThingFromThingGroupRequest(BaseModel):
    thingGroupName: Optional[ThingGroupName] = None
    thingGroupArn: Optional[ThingGroupArn] = None
    thingName: Optional[ThingName] = None
    thingArn: Optional[ThingArn] = None


class RemoveThingType(AllowAuthorizerOverride):
    pass


class TopicPattern(CognitoIdentityPoolId):
    pass


class Resource(TargetArn):
    pass


class ResourceLogicalId(CognitoIdentityPoolId):
    pass


class S3Bucket(AggregationField):
    pass


class S3FileUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=65535)]


class S3Key(AggregationField):
    pass


class S3Version(CognitoIdentityPoolId):
    pass


class SalesforceToken(BaseModel):
    __root__: Annotated[str, Field(min_length=40)]


class SalesforceEndpoint(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2000,
            regex='https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event',
        ),
    ]


class ScheduledAuditMetadata(BaseModel):
    """
    Information about the scheduled audit.
    """

    scheduledAuditName: Optional[ScheduledAuditName] = None
    scheduledAuditArn: Optional[ScheduledAuditArn] = None
    frequency: Optional[AuditFrequency] = None
    dayOfMonth: Optional[DayOfMonth] = None
    dayOfWeek: Optional[DayOfWeek] = None


class SearchIndexRequest(BaseModel):
    indexName: Optional[IndexName] = None
    queryString: QueryString
    nextToken: Optional[NextToken] = None
    maxResults: Optional[QueryMaxResults] = None
    queryVersion: Optional[QueryVersion] = None


class Seconds(InProgressTimeoutInMinutes):
    pass


class SecurityGroupId(CognitoIdentityPoolId):
    pass


class SecurityGroupList(BaseModel):
    __root__: List[SecurityGroupId]


class SecurityProfileIdentifier(BaseModel):
    """
    Identifying information for a Device Defender security profile.
    """

    name: SecurityProfileName
    arn: SecurityProfileArn


class SecurityProfileTarget(BaseModel):
    """
    A target to which an alert is sent when a security profile behavior is violated.
    """

    arn: SecurityProfileTargetArn


class SecurityProfileTargetMapping(BaseModel):
    """
    Information about a security profile and the target associated with it.
    """

    securityProfileIdentifier: Optional[SecurityProfileIdentifier] = None
    target: Optional[SecurityProfileTarget] = None


class ServerCertificateStatus(Enum):
    INVALID = 'INVALID'
    VALID = 'VALID'


class ServerCertificateStatusDetail(CognitoIdentityPoolId):
    pass


class ServerCertificateSummary(BaseModel):
    """
    An object that contains information about a server certificate.
    """

    serverCertificateArn: Optional[AcmCertificateArn] = None
    serverCertificateStatus: Optional[ServerCertificateStatus] = None
    serverCertificateStatusDetail: Optional[ServerCertificateStatusDetail] = None


class ServiceName(CognitoIdentityPoolId):
    pass


class SetDefaultAuthorizerRequest(BaseModel):
    authorizerName: AuthorizerName


class SetDefaultPolicyVersionRequest(BaseModel):
    """
    The input for the SetDefaultPolicyVersion operation.
    """

    pass


class SetLoggingOptionsRequest(BaseModel):
    """
    The input for the SetLoggingOptions operation.
    """

    loggingOptionsPayload: LoggingOptionsPayload


class SetV2LoggingLevelRequest(BaseModel):
    logTarget: LogTarget
    logLevel: LogLevel


class SetV2LoggingOptionsRequest(BaseModel):
    roleArn: Optional[AwsArn] = None
    defaultLogLevel: Optional[LogLevel] = None
    disableAllLogs: Optional[DisableAllLogs] = None


class SigningRegion(CognitoIdentityPoolId):
    pass


class SigningProfileName(CognitoIdentityPoolId):
    pass


class SigningProfileParameter(BaseModel):
    """
    Describes the code-signing profile.
    """

    certificateArn: Optional[CertificateArn] = None
    platform: Optional[Platform] = None
    certificatePathOnDevice: Optional[CertificatePathOnDevice] = None


class SkippedFindingsCount(InProgressTimeoutInMinutes):
    pass


class UseBase64(AllowAuthorizerOverride):
    pass


class StartOnDemandAuditTaskRequest(BaseModel):
    targetCheckNames: TargetAuditCheckNames


class StartThingRegistrationTaskRequest(BaseModel):
    templateBody: TemplateBody
    inputFileBucket: RegistryS3BucketName
    inputFileKey: RegistryS3KeyName
    roleArn: RoleArn


class StateMachineName(CognitoIdentityPoolId):
    pass


class Sum(Average):
    pass


class SumOfSquares(Average):
    pass


class Variance(Average):
    pass


class StdDeviation(Average):
    pass


class StopThingRegistrationTaskRequest(BaseModel):
    pass


class StreamSummary(BaseModel):
    """
    A summary of a stream.
    """

    streamId: Optional[StreamId] = None
    streamArn: Optional[StreamArn] = None
    streamVersion: Optional[StreamVersion] = None
    description: Optional[StreamDescription] = None


class StringValue(CognitoIdentityPoolId):
    pass


class SubnetId(CognitoIdentityPoolId):
    pass


class SubnetIdList(BaseModel):
    __root__: List[SubnetId]


class SucceededFindingsCount(InProgressTimeoutInMinutes):
    pass


class TagValue(DimensionStringValue):
    pass


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class TotalChecksCount(InProgressTimeoutInMinutes):
    pass


class WaitingForDataCollectionChecksCount(InProgressTimeoutInMinutes):
    pass


class TotalFindingsCount(InProgressTimeoutInMinutes):
    pass


class Token1(BaseModel):
    __root__: Annotated[str, Field(max_length=6144, min_length=1)]


class TokenSignature(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2560, min_length=1, regex='[A-Za-z0-9+/]+={0,2}')
    ]


class TlsContext(BaseModel):
    """
    Specifies the TLS context to use for the test authorizer request.
    """

    serverName: Optional[ServerName] = None


class TestInvokeAuthorizerRequest(BaseModel):
    token: Optional[Token1] = None
    tokenSignature: Optional[TokenSignature] = None
    httpContext: Optional[HttpContext] = None
    mqttContext: Optional[MqttContext] = None
    tlsContext: Optional[TlsContext] = None


class ThingAttribute(BaseModel):
    """
    The properties of the thing, including thing name, thing type name, and a list of thing attributes.
    """

    thingName: Optional[ThingName] = None
    thingTypeName: Optional[ThingTypeName] = None
    thingArn: Optional[ThingArn] = None
    attributes: Optional[Attributes] = None
    version: Optional[Version] = None


class ThingConnectivity(BaseModel):
    """
    The connectivity status of the thing.
    """

    connected: Optional[Boolean] = None
    timestamp: Optional[ConnectivityTimestamp] = None
    disconnectReason: Optional[DisconnectReason] = None


class ThingGroupNameList(BaseModel):
    __root__: List[ThingGroupName]


class ThingDocument(BaseModel):
    """
    The thing search index document.
    """

    thingName: Optional[ThingName] = None
    thingId: Optional[ThingId] = None
    thingTypeName: Optional[ThingTypeName] = None
    thingGroupNames: Optional[ThingGroupNameList] = None
    attributes: Optional[Attributes] = None
    shadow: Optional[JsonDocument] = None
    connectivity: Optional[ThingConnectivity] = None


class ThingGroupDocument(BaseModel):
    """
    The thing group search index document.
    """

    thingGroupName: Optional[ThingGroupName] = None
    thingGroupId: Optional[ThingGroupId] = None
    thingGroupDescription: Optional[ThingGroupDescription] = None
    attributes: Optional[Attributes] = None
    parentGroupNames: Optional[ThingGroupNameList] = None


class ThingGroupList(ThingGroupNameList):
    pass


class TimestreamDatabaseName(CognitoIdentityPoolId):
    pass


class TimestreamTableName(CognitoIdentityPoolId):
    pass


class TimestreamDimensionName(CognitoIdentityPoolId):
    pass


class TimestreamDimensionValue(CognitoIdentityPoolId):
    pass


class TimestreamDimension(BaseModel):
    """
    Metadata attributes of the time series that are written in each measure record.
    """

    name: TimestreamDimensionName
    value: TimestreamDimensionValue


class TimestreamTimestampValue(CognitoIdentityPoolId):
    pass


class TimestreamTimestampUnit(CognitoIdentityPoolId):
    pass


class TopicRuleDestinationStatus(Enum):
    ENABLED = 'ENABLED'
    IN_PROGRESS = 'IN_PROGRESS'
    DISABLED = 'DISABLED'
    ERROR = 'ERROR'
    DELETING = 'DELETING'


class TopicRuleListItem(BaseModel):
    """
    Describes a rule.
    """

    ruleArn: Optional[RuleArn] = None
    ruleName: Optional[RuleName] = None
    topicPattern: Optional[TopicPattern] = None
    createdAt: Optional[CreatedAtDate] = None
    ruleDisabled: Optional[IsDisabled] = None


class TransferCertificateRequest(BaseModel):
    """
    The input for the TransferCertificate operation.
    """

    transferMessage: Optional[Message] = None


class UntagResourceRequest(BaseModel):
    resourceArn: ResourceArn
    tagKeys: TagKeyList


class UpdateAccountAuditConfigurationRequest(BaseModel):
    roleArn: Optional[RoleArn] = None
    auditNotificationTargetConfigurations: Optional[
        AuditNotificationTargetConfigurations
    ] = None
    auditCheckConfigurations: Optional[AuditCheckConfigurations] = None


class UpdateAuthorizerRequest(BaseModel):
    authorizerFunctionArn: Optional[AuthorizerFunctionArn] = None
    tokenKeyName: Optional[TokenKeyName] = None
    tokenSigningPublicKeys: Optional[PublicKeyMap] = None
    status: Optional[AuthorizerStatus] = None


class UpdateBillingGroupRequest(BaseModel):
    billingGroupProperties: BillingGroupProperties
    expectedVersion: Optional[OptionalVersion] = None


class UpdateCACertificateRequest(BaseModel):
    """
    The input to the UpdateCACertificate operation.
    """

    registrationConfig: Optional[RegistrationConfig] = None
    removeAutoRegistration: Optional[RemoveAutoRegistration] = None


class UpdateCertificateRequest(BaseModel):
    """
    The input for the UpdateCertificate operation.
    """

    pass


class UpdateCustomMetricRequest(BaseModel):
    displayName: CustomMetricDisplayName


class UpdateDimensionRequest(BaseModel):
    stringValues: DimensionStringValues


class UpdateDomainConfigurationRequest(BaseModel):
    authorizerConfig: Optional[AuthorizerConfig] = None
    domainConfigurationStatus: Optional[DomainConfigurationStatus] = None
    removeAuthorizerConfig: Optional[RemoveAuthorizerConfig] = None


class UpdateEventConfigurationsRequest(BaseModel):
    eventConfigurations: Optional[EventConfigurations] = None


class UpdateProvisioningTemplateRequest(BaseModel):
    description: Optional[TemplateDescription] = None
    enabled: Optional[Enabled] = None
    defaultVersionId: Optional[TemplateVersionId] = None
    provisioningRoleArn: Optional[RoleArn] = None
    preProvisioningHook: Optional[ProvisioningHook] = None
    removePreProvisioningHook: Optional[RemoveHook] = None


class UpdateRoleAliasRequest(BaseModel):
    roleArn: Optional[RoleArn] = None
    credentialDurationSeconds: Optional[CredentialDurationSeconds] = None


class UpdateScheduledAuditRequest(BaseModel):
    frequency: Optional[AuditFrequency] = None
    dayOfMonth: Optional[DayOfMonth] = None
    dayOfWeek: Optional[DayOfWeek] = None
    targetCheckNames: Optional[TargetAuditCheckNames] = None


class UpdateThingGroupsForThingRequest(BaseModel):
    thingName: Optional[ThingName] = None
    thingGroupsToAdd: Optional[ThingGroupList] = None
    thingGroupsToRemove: Optional[ThingGroupList] = None
    overrideDynamicGroups: Optional[OverrideDynamicGroups] = None


class UpdateTopicRuleDestinationRequest(BaseModel):
    arn: AwsArn
    status: TopicRuleDestinationStatus


class Valid(AllowAuthorizerOverride):
    pass


class ValidationError(BaseModel):
    """
    Information about an error found in a behavior specification.
    """

    errorMessage: Optional[ErrorMessage] = None


class ViolationEventType(Enum):
    in_alarm = 'in-alarm'
    alarm_cleared = 'alarm-cleared'
    alarm_invalidated = 'alarm-invalidated'


class VpcId(CognitoIdentityPoolId):
    pass


class AssociateTargetsWithJobResponse(BaseModel):
    jobArn: Optional[JobArn] = None
    jobId: Optional[JobId] = None
    description: Optional[JobDescription] = None


class CancelJobResponse(AssociateTargetsWithJobResponse):
    pass


class PolicyVersionIdentifier(BaseModel):
    """
    Information about the version of the policy associated with the resource.
    """

    policyName: Optional[PolicyName] = None
    policyVersionId: Optional[PolicyVersionId] = None


class CreateAuthorizerResponse(AuthorizerSummary):
    pass


class Tag(BaseModel):
    """
    A set of key/value pairs that are used to manage the resource.
    """

    Key: TagKey
    Value: Optional[TagValue] = None


class CreateBillingGroupResponse(BaseModel):
    billingGroupName: Optional[BillingGroupName] = None
    billingGroupArn: Optional[BillingGroupArn] = None
    billingGroupId: Optional[BillingGroupId] = None


class CreateCertificateFromCsrResponse(BaseModel):
    """
    The output from the CreateCertificateFromCsr operation.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    certificatePem: Optional[CertificatePem] = None


class CreateCustomMetricResponse(BaseModel):
    metricName: Optional[MetricName] = None
    metricArn: Optional[CustomMetricArn] = None


class CreateDimensionResponse(BaseModel):
    name: Optional[DimensionName] = None
    arn: Optional[DimensionArn] = None


class CreateDomainConfigurationResponse(BaseModel):
    domainConfigurationName: Optional[DomainConfigurationName] = None
    domainConfigurationArn: Optional[DomainConfigurationArn] = None


class CreateDynamicThingGroupResponse(BaseModel):
    thingGroupName: Optional[ThingGroupName] = None
    thingGroupArn: Optional[ThingGroupArn] = None
    thingGroupId: Optional[ThingGroupId] = None
    indexName: Optional[IndexName] = None
    queryString: Optional[QueryString] = None
    queryVersion: Optional[QueryVersion] = None


class AttributePayload(BaseModel):
    """
    The attribute payload.
    """

    attributes: Optional[Attributes] = None
    merge: Optional[Flag] = None


class CreateFleetMetricResponse(FleetMetricNameAndArn):
    pass


class AggregationTypeValues(BaseModel):
    __root__: List[AggregationTypeValue]


class CreateJobResponse(AssociateTargetsWithJobResponse):
    pass


class AbortCriteriaList(BaseModel):
    __root__: Annotated[List[AbortCriteria], Field(min_items=1)]


class CreateJobTemplateResponse(BaseModel):
    jobTemplateArn: Optional[JobTemplateArn] = None
    jobTemplateId: Optional[JobTemplateId] = None


class CreateMitigationActionResponse(BaseModel):
    actionArn: Optional[MitigationActionArn] = None
    actionId: Optional[MitigationActionId] = None


class UpdateDeviceCertificateParams(BaseModel):
    """
    Parameters to define a mitigation action that changes the state of the device certificate to inactive.
    """

    action: CACertificateUpdateAction


class UpdateCACertificateParams(UpdateDeviceCertificateParams):
    """
    Parameters to define a mitigation action that changes the state of the CA certificate to inactive.
    """

    pass


class AddThingsToThingGroupParams(BaseModel):
    """
    Parameters used when defining a mitigation action that move a set of things to a thing group.
    """

    thingGroupNames: ThingGroupNames
    overrideDynamicGroups: Optional[OverrideDynamicGroups] = None


class ReplaceDefaultPolicyVersionParams(BaseModel):
    """
    Parameters to define a mitigation action that adds a blank policy to restrict permissions.
    """

    templateName: PolicyTemplateName


class EnableIoTLoggingParams(BaseModel):
    """
    Parameters used when defining a mitigation action that enable Amazon Web Services IoT Core logging.
    """

    roleArnForLogging: RoleArn
    logLevel: LogLevel


class PublishFindingToSnsParams(BaseModel):
    """
    Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.
    """

    topicArn: SnsTopicArn


class CreateOTAUpdateResponse(BaseModel):
    otaUpdateId: Optional[OTAUpdateId] = None
    awsIotJobId: Optional[AwsIotJobId] = None
    otaUpdateArn: Optional[OTAUpdateArn] = None
    awsIotJobArn: Optional[AwsIotJobArn] = None
    otaUpdateStatus: Optional[OTAUpdateStatus] = None


class AwsJobAbortCriteriaList(BaseModel):
    __root__: Annotated[List[AwsJobAbortCriteria], Field(min_items=1)]


class CreatePolicyResponse(BaseModel):
    """
    The output from the CreatePolicy operation.
    """

    policyName: Optional[PolicyName] = None
    policyArn: Optional[PolicyArn] = None
    policyDocument: Optional[PolicyDocument] = None
    policyVersionId: Optional[PolicyVersionId] = None


class CreatePolicyVersionResponse(BaseModel):
    """
    The output of the CreatePolicyVersion operation.
    """

    policyArn: Optional[PolicyArn] = None
    policyDocument: Optional[PolicyDocument] = None
    policyVersionId: Optional[PolicyVersionId] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None


class CreateProvisioningTemplateResponse(BaseModel):
    templateArn: Optional[TemplateArn] = None
    templateName: Optional[TemplateName] = None
    defaultVersionId: Optional[TemplateVersionId] = None


class CreateProvisioningTemplateVersionResponse(BaseModel):
    templateArn: Optional[TemplateArn] = None
    templateName: Optional[TemplateName] = None
    versionId: Optional[TemplateVersionId] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None


class CreateRoleAliasResponse(BaseModel):
    roleAlias: Optional[RoleAlias] = None
    roleAliasArn: Optional[RoleAliasArn] = None


class CreateScheduledAuditResponse(BaseModel):
    scheduledAuditArn: Optional[ScheduledAuditArn] = None


class CreateSecurityProfileResponse(BaseModel):
    securityProfileName: Optional[SecurityProfileName] = None
    securityProfileArn: Optional[SecurityProfileArn] = None


class AlertTarget(BaseModel):
    """
    A structure containing the alert target ARN and the role ARN.
    """

    alertTargetArn: AlertTargetArn
    roleArn: RoleArn


class CreateStreamResponse(BaseModel):
    streamId: Optional[StreamId] = None
    streamArn: Optional[StreamArn] = None
    description: Optional[StreamDescription] = None
    streamVersion: Optional[StreamVersion] = None


class CreateThingResponse(BaseModel):
    """
    The output of the CreateThing operation.
    """

    thingName: Optional[ThingName] = None
    thingArn: Optional[ThingArn] = None
    thingId: Optional[ThingId] = None


class CreateThingGroupResponse(BaseModel):
    thingGroupName: Optional[ThingGroupName] = None
    thingGroupArn: Optional[ThingGroupArn] = None
    thingGroupId: Optional[ThingGroupId] = None


class CreateThingTypeResponse(BaseModel):
    """
    The output of the CreateThingType operation.
    """

    thingTypeName: Optional[ThingTypeName] = None
    thingTypeArn: Optional[ThingTypeArn] = None
    thingTypeId: Optional[ThingTypeId] = None


class SearchableAttributes(BaseModel):
    __root__: List[AttributeName]


class HttpUrlDestinationConfiguration(BaseModel):
    """
    HTTP URL destination configuration used by the topic rule's HTTP action.
    """

    confirmationUrl: Url


class VpcDestinationConfiguration(BaseModel):
    """
    The configuration information for a virtual private cloud (VPC) destination.
    """

    subnetIds: SubnetIdList
    securityGroups: Optional[SecurityGroupList] = None
    vpcId: VpcId
    roleArn: AwsArn


class DescribeAccountAuditConfigurationResponse(BaseModel):
    roleArn: Optional[RoleArn] = None
    auditNotificationTargetConfigurations: Optional[
        AuditNotificationTargetConfigurations
    ] = None
    auditCheckConfigurations: Optional[AuditCheckConfigurations] = None


class DescribeAuthorizerResponse(BaseModel):
    authorizerDescription: Optional[AuthorizerDescription] = None


class DescribeBillingGroupResponse(BaseModel):
    billingGroupName: Optional[BillingGroupName] = None
    billingGroupId: Optional[BillingGroupId] = None
    billingGroupArn: Optional[BillingGroupArn] = None
    version: Optional[Version] = None
    billingGroupProperties: Optional[BillingGroupProperties] = None
    billingGroupMetadata: Optional[BillingGroupMetadata] = None


class DescribeCACertificateResponse(BaseModel):
    """
    The output from the DescribeCACertificate operation.
    """

    certificateDescription: Optional[CACertificateDescription] = None
    registrationConfig: Optional[RegistrationConfig] = None


class DescribeCustomMetricResponse(BaseModel):
    metricName: Optional[MetricName] = None
    metricArn: Optional[CustomMetricArn] = None
    metricType: Optional[CustomMetricType] = None
    displayName: Optional[CustomMetricDisplayName] = None
    creationDate: Optional[Timestamp] = None
    lastModifiedDate: Optional[Timestamp] = None


class DescribeDefaultAuthorizerResponse(DescribeAuthorizerResponse):
    pass


class DescribeDimensionResponse(BaseModel):
    name: Optional[DimensionName] = None
    arn: Optional[DimensionArn] = None
    type: Optional[DimensionType] = None
    stringValues: Optional[DimensionStringValues] = None
    creationDate: Optional[Timestamp] = None
    lastModifiedDate: Optional[Timestamp] = None


class DescribeEndpointResponse(BaseModel):
    """
    The output from the DescribeEndpoint operation.
    """

    endpointAddress: Optional[EndpointAddress] = None


class DescribeEventConfigurationsResponse(BaseModel):
    eventConfigurations: Optional[EventConfigurations] = None
    creationDate: Optional[CreationDate] = None
    lastModifiedDate: Optional[LastModifiedDate] = None


class DescribeIndexResponse(BaseModel):
    indexName: Optional[IndexName] = None
    indexStatus: Optional[IndexStatus] = None
    schema_: Annotated[Optional[IndexSchema], Field(alias='schema')] = None


class DescribeProvisioningTemplateResponse(BaseModel):
    templateArn: Optional[TemplateArn] = None
    templateName: Optional[TemplateName] = None
    description: Optional[TemplateDescription] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    defaultVersionId: Optional[TemplateVersionId] = None
    templateBody: Optional[TemplateBody] = None
    enabled: Optional[Enabled] = None
    provisioningRoleArn: Optional[RoleArn] = None
    preProvisioningHook: Optional[ProvisioningHook] = None


class DescribeProvisioningTemplateVersionResponse(BaseModel):
    versionId: Optional[TemplateVersionId] = None
    creationDate: Optional[DateType] = None
    templateBody: Optional[TemplateBody] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None


class DescribeRoleAliasResponse(BaseModel):
    roleAliasDescription: Optional[RoleAliasDescription] = None


class DescribeScheduledAuditResponse(BaseModel):
    frequency: Optional[AuditFrequency] = None
    dayOfMonth: Optional[DayOfMonth] = None
    dayOfWeek: Optional[DayOfWeek] = None
    targetCheckNames: Optional[TargetAuditCheckNames] = None
    scheduledAuditName: Optional[ScheduledAuditName] = None
    scheduledAuditArn: Optional[ScheduledAuditArn] = None


class DescribeThingResponse(BaseModel):
    """
    The output from the DescribeThing operation.
    """

    defaultClientId: Optional[ClientId] = None
    thingName: Optional[ThingName] = None
    thingId: Optional[ThingId] = None
    thingArn: Optional[ThingArn] = None
    thingTypeName: Optional[ThingTypeName] = None
    attributes: Optional[Attributes] = None
    version: Optional[Version] = None
    billingGroupName: Optional[BillingGroupName] = None


class DescribeThingRegistrationTaskResponse(BaseModel):
    taskId: Optional[TaskId] = None
    creationDate: Optional[CreationDate] = None
    lastModifiedDate: Optional[LastModifiedDate] = None
    templateBody: Optional[TemplateBody] = None
    inputFileBucket: Optional[RegistryS3BucketName] = None
    inputFileKey: Optional[RegistryS3KeyName] = None
    roleArn: Optional[RoleArn] = None
    status: Optional[Status] = None
    message: Optional[ErrorMessage] = None
    successCount: Optional[Count] = None
    failureCount: Optional[Count] = None
    percentageProgress: Optional[Percentage] = None


class GetBucketsAggregationResponse(BaseModel):
    totalCount: Optional[Count] = None
    buckets: Optional[Buckets] = None


class TermsAggregation(BaseModel):
    """
    Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.
    """

    maxBuckets: Optional[MaxBuckets] = None


class GetCardinalityResponse(BaseModel):
    cardinality: Optional[Count] = None


class GetEffectivePoliciesResponse(BaseModel):
    effectivePolicies: Optional[EffectivePolicies] = None


class GetJobDocumentResponse(BaseModel):
    document: Optional[JobDocument] = None


class GetLoggingOptionsResponse(BaseModel):
    """
    The output from the GetLoggingOptions operation.
    """

    roleArn: Optional[AwsArn] = None
    logLevel: Optional[LogLevel] = None


class GetPolicyResponse(BaseModel):
    """
    The output from the GetPolicy operation.
    """

    policyName: Optional[PolicyName] = None
    policyArn: Optional[PolicyArn] = None
    policyDocument: Optional[PolicyDocument] = None
    defaultVersionId: Optional[PolicyVersionId] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    generationId: Optional[GenerationId] = None


class GetPolicyVersionResponse(BaseModel):
    """
    The output from the GetPolicyVersion operation.
    """

    policyArn: Optional[PolicyArn] = None
    policyName: Optional[PolicyName] = None
    policyDocument: Optional[PolicyDocument] = None
    policyVersionId: Optional[PolicyVersionId] = None
    isDefaultVersion: Optional[IsDefaultVersion] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    generationId: Optional[GenerationId] = None


class GetRegistrationCodeResponse(BaseModel):
    """
    The output from the GetRegistrationCode operation.
    """

    registrationCode: Optional[RegistrationCode] = None


class GetV2LoggingOptionsResponse(BaseModel):
    roleArn: Optional[AwsArn] = None
    defaultLogLevel: Optional[LogLevel] = None
    disableAllLogs: Optional[DisableAllLogs] = None


class ListAuditMitigationActionsExecutionsResponse(BaseModel):
    actionsExecutions: Optional[AuditMitigationActionExecutionMetadataList] = None
    nextToken: Optional[NextToken] = None


class ListAuditMitigationActionsTasksResponse(BaseModel):
    tasks: Optional[AuditMitigationActionsTaskMetadataList] = None
    nextToken: Optional[NextToken] = None


class ListAuditTasksResponse(BaseModel):
    tasks: Optional[AuditTaskMetadataList] = None
    nextToken: Optional[NextToken] = None


class ListAuthorizersResponse(BaseModel):
    authorizers: Optional[Authorizers] = None
    nextMarker: Optional[Marker] = None


class ListBillingGroupsResponse(BaseModel):
    billingGroups: Optional[BillingGroupNameAndArnList] = None
    nextToken: Optional[NextToken] = None


class ListCACertificatesResponse(BaseModel):
    """
    The output from the ListCACertificates operation.
    """

    certificates: Optional[CACertificates] = None
    nextMarker: Optional[Marker] = None


class ListCertificatesResponse(BaseModel):
    """
    The output of the ListCertificates operation.
    """

    certificates: Optional[Certificates] = None
    nextMarker: Optional[Marker] = None


class ListCertificatesByCAResponse(ListCertificatesResponse):
    """
    The output of the ListCertificatesByCA operation.
    """

    pass


class ListCustomMetricsResponse(BaseModel):
    metricNames: Optional[MetricNames] = None
    nextToken: Optional[NextToken] = None


class ListDetectMitigationActionsExecutionsResponse(BaseModel):
    actionsExecutions: Optional[DetectMitigationActionExecutionList] = None
    nextToken: Optional[NextToken] = None


class ListDimensionsResponse(BaseModel):
    dimensionNames: Optional[DimensionNames] = None
    nextToken: Optional[NextToken] = None


class ListDomainConfigurationsResponse(BaseModel):
    domainConfigurations: Optional[DomainConfigurations] = None
    nextMarker: Optional[Marker] = None


class ListFleetMetricsResponse(BaseModel):
    fleetMetrics: Optional[FleetMetricNameAndArnList] = None
    nextToken: Optional[NextToken] = None


class ListIndicesResponse(BaseModel):
    indexNames: Optional[IndexNamesList] = None
    nextToken: Optional[NextToken] = None


class ListJobExecutionsForJobResponse(BaseModel):
    executionSummaries: Optional[JobExecutionSummaryForJobList] = None
    nextToken: Optional[NextToken] = None


class ListJobExecutionsForThingResponse(BaseModel):
    executionSummaries: Optional[JobExecutionSummaryForThingList] = None
    nextToken: Optional[NextToken] = None


class ListJobTemplatesResponse(BaseModel):
    jobTemplates: Optional[JobTemplateSummaryList] = None
    nextToken: Optional[NextToken] = None


class ListJobsResponse(BaseModel):
    jobs: Optional[JobSummaryList] = None
    nextToken: Optional[NextToken] = None


class ListPrincipalThingsResponse(BaseModel):
    """
    The output from the ListPrincipalThings operation.
    """

    things: Optional[ThingNameList] = None
    nextToken: Optional[NextToken] = None


class ListRoleAliasesResponse(BaseModel):
    roleAliases: Optional[RoleAliases] = None
    nextMarker: Optional[Marker] = None


class ListTargetsForPolicyResponse(BaseModel):
    targets: Optional[PolicyTargets] = None
    nextMarker: Optional[Marker] = None


class ListThingGroupsResponse(BaseModel):
    thingGroups: Optional[ThingGroupNameAndArnList] = None
    nextToken: Optional[NextToken] = None


class ListThingGroupsForThingResponse(ListThingGroupsResponse):
    pass


class ListThingRegistrationTasksResponse(BaseModel):
    taskIds: Optional[TaskIdList] = None
    nextToken: Optional[NextToken] = None


class ListThingsInBillingGroupResponse(ListPrincipalThingsResponse):
    pass


class ListThingsInThingGroupResponse(ListPrincipalThingsResponse):
    pass


class RegisterCACertificateResponse(BaseModel):
    """
    The output from the RegisterCACertificateResponse operation.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None


class RegisterCertificateResponse(RegisterCACertificateResponse):
    """
    The output from the RegisterCertificate operation.
    """

    pass


class RegisterCertificateWithoutCAResponse(RegisterCACertificateResponse):
    pass


class RegisterThingResponse(BaseModel):
    certificatePem: Optional[CertificatePem] = None
    resourceArns: Optional[ResourceArns] = None


class SetDefaultAuthorizerResponse(AuthorizerSummary):
    pass


class StartAuditMitigationActionsTaskResponse(BaseModel):
    taskId: Optional[MitigationActionsTaskId] = None


class FindingIds(BaseModel):
    __root__: Annotated[List[FindingId], Field(max_items=25, min_items=1)]


class MitigationActionNameList(DetectMitigationActionsToExecuteList):
    pass


class StartDetectMitigationActionsTaskResponse(StartAuditMitigationActionsTaskResponse):
    pass


class TargetViolationIdsForDetectMitigationActions(BaseModel):
    __root__: Annotated[List[ViolationId], Field(max_items=25, min_items=1)]


class StartThingRegistrationTaskResponse(BaseModel):
    taskId: Optional[TaskId] = None


class TestInvokeAuthorizerResponse(BaseModel):
    isAuthenticated: Optional[IsAuthenticated] = None
    principalId: Optional[PrincipalId] = None
    policyDocuments: Optional[PolicyDocuments] = None
    refreshAfterInSeconds: Optional[Seconds] = None
    disconnectAfterInSeconds: Optional[Seconds] = None


class TransferCertificateResponse(BaseModel):
    """
    The output from the TransferCertificate operation.
    """

    transferredCertificateArn: Optional[CertificateArn] = None


class AuditNotificationTarget(BaseModel):
    """
    Information about the targets to which audit notifications are sent.
    """

    targetArn: Optional[TargetArn] = None
    roleArn: Optional[RoleArn] = None
    enabled: Optional[Enabled] = None


class AuditCheckConfiguration(BaseModel):
    """
    Which audit checks are enabled and disabled for this account.
    """

    enabled: Optional[Enabled] = None


class UpdateAuthorizerResponse(AuthorizerSummary):
    pass


class UpdateBillingGroupResponse(BaseModel):
    version: Optional[Version] = None


class UpdateCustomMetricResponse(DescribeCustomMetricResponse):
    pass


class UpdateDimensionResponse(DescribeDimensionResponse):
    pass


class UpdateDomainConfigurationResponse(BaseModel):
    domainConfigurationName: Optional[ReservedDomainConfigurationName] = None
    domainConfigurationArn: Optional[DomainConfigurationArn] = None


class UpdateDynamicThingGroupResponse(UpdateBillingGroupResponse):
    pass


class Configuration(BaseModel):
    """
    Configuration.
    """

    Enabled: Optional[Enabled] = None


class Fields(BaseModel):
    __root__: List[FieldModel]


class UpdateMitigationActionResponse(CreateMitigationActionResponse):
    pass


class UpdateRoleAliasResponse(CreateRoleAliasResponse):
    pass


class UpdateScheduledAuditResponse(CreateScheduledAuditResponse):
    pass


class UpdateStreamResponse(CreateStreamResponse):
    pass


class UpdateThingGroupResponse(UpdateBillingGroupResponse):
    pass


class AbortConfig(BaseModel):
    """
    The criteria that determine when and how a job abort takes place.
    """

    criteriaList: AbortCriteriaList


class DynamoDBAction(BaseModel):
    """
    <p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>"hashKeyValue": "${topic(3)}"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>"rangeKeyValue": "${timestamp()}"</code> </p>
    """

    tableName: TableName
    roleArn: AwsArn
    operation: Optional[DynamoOperation] = None
    hashKeyField: HashKeyField
    hashKeyValue: HashKeyValue
    hashKeyType: Optional[DynamoKeyType] = None
    rangeKeyField: Optional[RangeKeyField] = None
    rangeKeyValue: Optional[RangeKeyValue] = None
    rangeKeyType: Optional[DynamoKeyType] = None
    payloadField: Optional[PayloadField] = None


class DynamoDBv2Action(BaseModel):
    """
    <p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>
    """

    roleArn: AwsArn
    putItem: PutItemInput


class LambdaAction(BaseModel):
    """
    Describes an action to invoke a Lambda function.
    """

    functionArn: FunctionArn


class SnsAction(BaseModel):
    """
    Describes an action to publish to an Amazon SNS topic.
    """

    targetArn: AwsArn
    roleArn: AwsArn
    messageFormat: Optional[MessageFormat] = None


class SqsAction(BaseModel):
    """
    Describes an action to publish data to an Amazon SQS queue.
    """

    roleArn: AwsArn
    queueUrl: QueueUrl
    useBase64: Optional[UseBase64] = None


class KinesisAction(BaseModel):
    """
    Describes an action to write data to an Amazon Kinesis stream.
    """

    roleArn: AwsArn
    streamName: StreamName
    partitionKey: Optional[PartitionKey] = None


class RepublishAction(BaseModel):
    """
    Describes an action to republish to another topic.
    """

    roleArn: AwsArn
    topic: TopicPattern
    qos: Optional[Qos] = None


class S3Action(BaseModel):
    """
    Describes an action to write data to an Amazon S3 bucket.
    """

    roleArn: AwsArn
    bucketName: BucketName
    key: Key
    cannedAcl: Optional[CannedAccessControlList] = None


class FirehoseAction(BaseModel):
    """
    Describes an action that writes data to an Amazon Kinesis Firehose stream.
    """

    roleArn: AwsArn
    deliveryStreamName: DeliveryStreamName
    separator: Optional[FirehoseSeparator] = None
    batchMode: Optional[BatchMode] = None


class CloudwatchMetricAction(BaseModel):
    """
    Describes an action that captures a CloudWatch metric.
    """

    roleArn: AwsArn
    metricNamespace: String
    metricName: String
    metricValue: String
    metricUnit: String
    metricTimestamp: Optional[String] = None


class CloudwatchAlarmAction(BaseModel):
    """
    Describes an action that updates a CloudWatch alarm.
    """

    roleArn: AwsArn
    alarmName: AlarmName
    stateReason: StateReason
    stateValue: StateValue


class CloudwatchLogsAction(BaseModel):
    """
    Describes an action that sends data to CloudWatch Logs.
    """

    roleArn: AwsArn
    logGroupName: LogGroupName


class ElasticsearchAction(BaseModel):
    """
    <p>Describes an action that writes data to an Amazon Elasticsearch Service domain.</p> <note> <p>This action is deprecated. Use the <a href="https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html">OpenSearch action</a> instead.</p> </note>
    """

    roleArn: AwsArn
    endpoint: ElasticsearchEndpoint
    index: ElasticsearchIndex
    type: ElasticsearchType
    id: ElasticsearchId


class SalesforceAction(BaseModel):
    """
    Describes an action to write a message to a Salesforce IoT Cloud Input Stream.
    """

    token: SalesforceToken
    url: SalesforceEndpoint


class IotAnalyticsAction(BaseModel):
    """
    Sends message data to an IoT Analytics channel.
    """

    channelArn: Optional[AwsArn] = None
    channelName: Optional[ChannelName] = None
    batchMode: Optional[BatchMode] = None
    roleArn: Optional[AwsArn] = None


class IotEventsAction(BaseModel):
    """
    Sends an input to an IoT Events detector.
    """

    inputName: InputName
    messageId: Optional[MessageId] = None
    batchMode: Optional[BatchMode] = None
    roleArn: AwsArn


class StepFunctionsAction(BaseModel):
    """
    Starts execution of a Step Functions state machine.
    """

    executionNamePrefix: Optional[ExecutionNamePrefix] = None
    stateMachineName: StateMachineName
    roleArn: AwsArn


class KafkaAction(BaseModel):
    """
    Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.
    """

    destinationArn: AwsArn
    topic: String
    key: Optional[String] = None
    partition: Optional[String] = None
    clientProperties: ClientProperties


class OpenSearchAction(ElasticsearchAction):
    """
    Describes an action that writes data to an Amazon OpenSearch Service domain.
    """

    pass


class ViolationEventAdditionalInfo(BaseModel):
    """
    The details of a violation event.
    """

    confidenceLevel: Optional[ConfidenceLevel] = None


class AggregationType(BaseModel):
    """
    The type of aggregation queries.
    """

    name: AggregationTypeName
    values: Optional[AggregationTypeValues] = None


class Policies(BaseModel):
    __root__: List[Policy]


class Allowed(BaseModel):
    """
    Contains information that allowed the authorization.
    """

    policies: Optional[Policies] = None


class ReasonForNonComplianceCodes(BaseModel):
    __root__: Annotated[
        List[ReasonForNonComplianceCode], Field(max_items=25, min_items=1)
    ]


class TaskStatisticsForAuditCheck(BaseModel):
    """
    Provides summary counts of how many tasks for findings are in a particular state. This information is included in the response from DescribeAuditMitigationActionsTask.
    """

    totalFindingsCount: Optional[TotalFindingsCount] = None
    failedFindingsCount: Optional[FailedFindingsCount] = None
    succeededFindingsCount: Optional[SucceededFindingsCount] = None
    skippedFindingsCount: Optional[SkippedFindingsCount] = None
    canceledFindingsCount: Optional[CanceledFindingsCount] = None


class AuditMitigationActionsTaskTarget(BaseModel):
    """
    Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.
    """

    auditTaskId: Optional[AuditTaskId] = None
    findingIds: Optional[FindingIds] = None
    auditCheckToReasonCodeFilter: Optional[AuditCheckToReasonCodeFilter] = None


class ResourceIdentifier(BaseModel):
    """
    Information that identifies the noncompliant resource.
    """

    deviceCertificateId: Optional[CertificateId] = None
    caCertificateId: Optional[CertificateId] = None
    cognitoIdentityPoolId: Optional[CognitoIdentityPoolId] = None
    clientId: Optional[ClientId] = None
    policyVersionIdentifier: Optional[PolicyVersionIdentifier] = None
    account: Optional[AwsAccountId] = None
    iamRoleArn: Optional[RoleArn] = None
    roleAliasArn: Optional[RoleAliasArn] = None


class AuditSuppression(BaseModel):
    """
    Filters out specific findings of a Device Defender audit.
    """

    checkName: AuditCheckName
    resourceIdentifier: ResourceIdentifier
    expirationDate: Optional[Timestamp] = None
    suppressIndefinitely: Optional[SuppressIndefinitely] = None
    description: Optional[AuditDescription] = None


class AuditSuppressionList(BaseModel):
    __root__: List[AuditSuppression]


class Resources(BaseModel):
    __root__: List[Resource]


class MissingContextValues(BaseModel):
    __root__: List[MissingContextValue]


class AwsJobAbortConfig(BaseModel):
    """
    The criteria that determine when and how a job abort takes place.
    """

    abortCriteriaList: AwsJobAbortCriteriaList


class AwsJobRateIncreaseCriteria(BaseModel):
    """
    The criteria to initiate the increase in rate of rollout for a job.
    """

    numberOfNotifiedThings: Optional[AwsJobRateIncreaseCriteriaNumberOfThings] = None
    numberOfSucceededThings: Optional[AwsJobRateIncreaseCriteriaNumberOfThings] = None


class MetricDimension(BaseModel):
    """
    The dimension of a metric.
    """

    dimensionName: DimensionName
    operator: Optional[DimensionValueOperator] = None


class StatisticalThreshold(BaseModel):
    """
    A statistical ranking (percentile) that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
    """

    statistic: Optional[EvaluationStatistic] = None


class MachineLearningDetectionConfig(BaseModel):
    """
    The configuration of an ML Detect Security Profile.
    """

    confidenceLevel: ConfidenceLevel


class BehaviorModelTrainingSummary(BaseModel):
    """
    The summary of an ML Detect behavior model.
    """

    securityProfileName: Optional[SecurityProfileName] = None
    behaviorName: Optional[BehaviorName] = None
    trainingDataCollectionStartDate: Optional[Timestamp] = None
    modelStatus: Optional[ModelStatus] = None
    datapointsCollectionPercentage: Optional[DataCollectionPercentage] = None
    lastModelRefreshDate: Optional[Timestamp] = None


class BehaviorModelTrainingSummaries(BaseModel):
    __root__: List[BehaviorModelTrainingSummary]


class BucketsAggregationType(BaseModel):
    """
    The type of bucketed aggregation performed.
    """

    termsAggregation: Optional[TermsAggregation] = None


class TransferData(BaseModel):
    """
    Data used to transfer a certificate to an Amazon Web Services account.
    """

    transferMessage: Optional[Message] = None
    rejectReason: Optional[Message] = None
    transferDate: Optional[DateType] = None
    acceptDate: Optional[DateType] = None
    rejectDate: Optional[DateType] = None


class CertificateDescription(BaseModel):
    """
    Describes a certificate.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    caCertificateId: Optional[CertificateId] = None
    status: Optional[CertificateStatus] = None
    certificatePem: Optional[CertificatePem] = None
    ownedBy: Optional[AwsAccountId] = None
    previousOwnedBy: Optional[AwsAccountId] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    customerVersion: Optional[CustomerVersion] = None
    transferData: Optional[TransferData] = None
    generationId: Optional[GenerationId] = None
    validity: Optional[CertificateValidity] = None
    certificateMode: Optional[CertificateMode] = None


class CustomCodeSigning(BaseModel):
    """
    Describes a custom method used to code sign a file.
    """

    signature: Optional[CodeSigningSignature] = None
    certificateChain: Optional[CodeSigningCertificateChain] = None
    hashAlgorithm: Optional[HashAlgorithm] = None
    signatureAlgorithm: Optional[SignatureAlgorithm] = None


class CreateAuditSuppressionRequest(BaseModel):
    checkName: AuditCheckName
    resourceIdentifier: ResourceIdentifier
    expirationDate: Optional[Timestamp] = None
    suppressIndefinitely: Optional[SuppressIndefinitely] = None
    description: Optional[AuditDescription] = None
    clientRequestToken: ClientRequestToken


class TagList(BaseModel):
    __root__: List[Tag]


class CreateAuthorizerRequest(BaseModel):
    authorizerFunctionArn: AuthorizerFunctionArn
    tokenKeyName: Optional[TokenKeyName] = None
    tokenSigningPublicKeys: Optional[PublicKeyMap] = None
    status: Optional[AuthorizerStatus] = None
    tags: Optional[TagList] = None
    signingDisabled: Optional[BooleanKey] = None


class CreateBillingGroupRequest(BaseModel):
    billingGroupProperties: Optional[BillingGroupProperties] = None
    tags: Optional[TagList] = None


class CreateCustomMetricRequest(BaseModel):
    displayName: Optional[CustomMetricDisplayName] = None
    metricType: CustomMetricType
    tags: Optional[TagList] = None
    clientRequestToken: ClientRequestToken


class CreateDimensionRequest(BaseModel):
    type: DimensionType
    stringValues: DimensionStringValues
    tags: Optional[TagList] = None
    clientRequestToken: ClientRequestToken


class CreateDomainConfigurationRequest(BaseModel):
    domainName: Optional[DomainName] = None
    serverCertificateArns: Optional[ServerCertificateArns] = None
    validationCertificateArn: Optional[AcmCertificateArn] = None
    authorizerConfig: Optional[AuthorizerConfig] = None
    serviceType: Optional[ServiceType] = None
    tags: Optional[TagList] = None


class ThingGroupProperties(BaseModel):
    """
    Thing group properties.
    """

    thingGroupDescription: Optional[ThingGroupDescription] = None
    attributePayload: Optional[AttributePayload] = None


class CreateDynamicThingGroupRequest(BaseModel):
    thingGroupProperties: Optional[ThingGroupProperties] = None
    indexName: Optional[IndexName] = None
    queryString: QueryString
    queryVersion: Optional[QueryVersion] = None
    tags: Optional[TagList] = None


class CreateFleetMetricRequest(BaseModel):
    queryString: QueryString
    aggregationType: AggregationType
    period: FleetMetricPeriod
    aggregationField: AggregationField
    description: Optional[FleetMetricDescription] = None
    queryVersion: Optional[QueryVersion] = None
    indexName: Optional[IndexName] = None
    unit: Optional[FleetMetricUnit] = None
    tags: Optional[TagList] = None


class KeyPair(BaseModel):
    """
    Describes a key pair.
    """

    PublicKey: Optional[PublicKey] = None
    PrivateKey: Optional[PrivateKey] = None


class MitigationActionParams(BaseModel):
    """
    The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).
    """

    updateDeviceCertificateParams: Optional[UpdateDeviceCertificateParams] = None
    updateCACertificateParams: Optional[UpdateCACertificateParams] = None
    addThingsToThingGroupParams: Optional[AddThingsToThingGroupParams] = None
    replaceDefaultPolicyVersionParams: Optional[
        ReplaceDefaultPolicyVersionParams
    ] = None
    enableIoTLoggingParams: Optional[EnableIoTLoggingParams] = None
    publishFindingToSnsParams: Optional[PublishFindingToSnsParams] = None


class CreateMitigationActionRequest(BaseModel):
    roleArn: RoleArn
    actionParams: MitigationActionParams
    tags: Optional[TagList] = None


class CreatePolicyRequest(BaseModel):
    """
    The input for the CreatePolicy operation.
    """

    policyDocument: PolicyDocument
    tags: Optional[TagList] = None


class CreateProvisioningTemplateRequest(BaseModel):
    templateName: TemplateName
    description: Optional[TemplateDescription] = None
    templateBody: TemplateBody
    enabled: Optional[Enabled] = None
    provisioningRoleArn: RoleArn
    preProvisioningHook: Optional[ProvisioningHook] = None
    tags: Optional[TagList] = None


class CreateRoleAliasRequest(BaseModel):
    roleArn: RoleArn
    credentialDurationSeconds: Optional[CredentialDurationSeconds] = None
    tags: Optional[TagList] = None


class CreateScheduledAuditRequest(BaseModel):
    frequency: AuditFrequency
    dayOfMonth: Optional[DayOfMonth] = None
    dayOfWeek: Optional[DayOfWeek] = None
    targetCheckNames: TargetAuditCheckNames
    tags: Optional[TagList] = None


class CreateThingGroupRequest(BaseModel):
    parentGroupName: Optional[ThingGroupName] = None
    thingGroupProperties: Optional[ThingGroupProperties] = None
    tags: Optional[TagList] = None


class CreateThingRequest(BaseModel):
    """
    The input for the CreateThing operation.
    """

    thingTypeName: Optional[ThingTypeName] = None
    attributePayload: Optional[AttributePayload] = None
    billingGroupName: Optional[BillingGroupName] = None


class ThingTypeProperties(BaseModel):
    """
    The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.
    """

    thingTypeDescription: Optional[ThingTypeDescription] = None
    searchableAttributes: Optional[SearchableAttributes] = None


class CreateThingTypeRequest(BaseModel):
    """
    The input for the CreateThingType operation.
    """

    thingTypeProperties: Optional[ThingTypeProperties] = None
    tags: Optional[TagList] = None


class TopicRuleDestinationConfiguration(BaseModel):
    """
    Configuration of the topic rule destination.
    """

    httpUrlConfiguration: Optional[HttpUrlDestinationConfiguration] = None
    vpcConfiguration: Optional[VpcDestinationConfiguration] = None


class CreateTopicRuleDestinationRequest(BaseModel):
    destinationConfiguration: TopicRuleDestinationConfiguration


class DeleteAuditSuppressionRequest(BaseModel):
    checkName: AuditCheckName
    resourceIdentifier: ResourceIdentifier


class ImplicitDeny(Allowed):
    """
    Information that implicitly denies authorization. When policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.
    """

    pass


class ExplicitDeny(Allowed):
    """
    Information that explicitly denies authorization.
    """

    pass


class DescribeAuditSuppressionRequest(BaseModel):
    checkName: AuditCheckName
    resourceIdentifier: ResourceIdentifier


class TaskStatistics(BaseModel):
    """
    Statistics for the checks performed during the audit.
    """

    totalChecks: Optional[TotalChecksCount] = None
    inProgressChecks: Optional[InProgressChecksCount] = None
    waitingForDataCollectionChecks: Optional[WaitingForDataCollectionChecksCount] = None
    compliantChecks: Optional[CompliantChecksCount] = None
    nonCompliantChecks: Optional[NonCompliantChecksCount] = None
    failedChecks: Optional[FailedChecksCount] = None
    canceledChecks: Optional[CanceledChecksCount] = None


class ServerCertificates(BaseModel):
    __root__: List[ServerCertificateSummary]


class JobExecution(BaseModel):
    """
    The job execution object represents the execution of a job on a particular device.
    """

    jobId: Optional[JobId] = None
    status: Optional[JobExecutionStatus] = None
    forceCanceled: Optional[Forced] = None
    statusDetails: Optional[JobExecutionStatusDetails] = None
    thingArn: Optional[ThingArn] = None
    queuedAt: Optional[DateType] = None
    startedAt: Optional[DateType] = None
    lastUpdatedAt: Optional[DateType] = None
    executionNumber: Optional[ExecutionNumber] = None
    versionNumber: Optional[VersionNumber] = None
    approximateSecondsBeforeTimedOut: Optional[ApproximateSecondsBeforeTimedOut] = None


class ThingGroupMetadata(BaseModel):
    """
    Thing group metadata.
    """

    parentGroupName: Optional[ThingGroupName] = None
    rootToParentThingGroups: Optional[ThingGroupNameAndArnList] = None
    creationDate: Optional[CreationDate] = None


class S3Destination(BaseModel):
    """
    Describes the location of updated firmware in S3.
    """

    bucket: Optional[S3Bucket] = None
    prefix: Optional[Prefix] = None


class Destination(BaseModel):
    """
    Describes the location of the updated firmware.
    """

    s3Destination: Optional[S3Destination] = None


class DetectMitigationActionsTaskTarget(BaseModel):
    """
    The target of a mitigation action task.
    """

    violationIds: Optional[TargetViolationIdsForDetectMitigationActions] = None
    securityProfileName: Optional[SecurityProfileName] = None
    behaviorName: Optional[BehaviorName] = None


class RateIncreaseCriteria(BaseModel):
    """
    Allows you to define a criteria to initiate the increase in rate of rollout for a job.
    """

    numberOfNotifiedThings: Optional[NumberOfThings] = None
    numberOfSucceededThings: Optional[NumberOfThings] = None


class S3Location(BaseModel):
    """
    The S3 location.
    """

    bucket: Optional[S3Bucket] = None
    key: Optional[S3Key] = None
    version: Optional[S3Version] = None


class FileLocation(BaseModel):
    """
    The location of the OTA update.
    """

    stream: Optional[Stream] = None
    s3Location: Optional[S3Location] = None


class GetBucketsAggregationRequest(BaseModel):
    indexName: Optional[IndexName] = None
    queryString: QueryString
    aggregationField: AggregationField
    queryVersion: Optional[QueryVersion] = None
    bucketsAggregationType: BucketsAggregationType


class ThingIndexingConfiguration(BaseModel):
    """
    The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.
    """

    thingIndexingMode: ThingIndexingMode
    thingConnectivityIndexingMode: Optional[ThingConnectivityIndexingMode] = None
    managedFields: Optional[Fields] = None
    customFields: Optional[Fields] = None


class ThingGroupIndexingConfiguration(BaseModel):
    """
    Thing group indexing configuration.
    """

    thingGroupIndexingMode: ThingGroupIndexingMode
    managedFields: Optional[Fields] = None
    customFields: Optional[Fields] = None


class Percentiles(BaseModel):
    __root__: List[PercentPair]


class Statistics(BaseModel):
    """
    A map of key-value pairs for all supported statistics. Currently, only count is supported.
    """

    count: Optional[Count] = None
    average: Optional[Average] = None
    sum: Optional[Sum] = None
    minimum: Optional[Minimum] = None
    maximum: Optional[Maximum] = None
    sumOfSquares: Optional[SumOfSquares] = None
    variance: Optional[Variance] = None
    stdDeviation: Optional[StdDeviation] = None


class HttpActionHeader(BaseModel):
    """
    The HTTP action header.
    """

    key: HeaderKey
    value: HeaderValue


class HeaderList(BaseModel):
    __root__: Annotated[List[HttpActionHeader], Field(max_items=100, min_items=0)]


class SigV4Authorization(BaseModel):
    """
    For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature Version 4 signing process</a>.
    """

    signingRegion: SigningRegion
    serviceName: ServiceName
    roleArn: AwsArn


class PutAssetPropertyValueEntryList(BaseModel):
    __root__: Annotated[List[PutAssetPropertyValueEntry], Field(min_items=1)]


class ProcessingTargetNameList(BaseModel):
    __root__: List[ProcessingTargetName]


class ListAuditFindingsRequest(BaseModel):
    taskId: Optional[AuditTaskId] = None
    checkName: Optional[AuditCheckName] = None
    resourceIdentifier: Optional[ResourceIdentifier] = None
    maxResults: Optional[MaxResults] = None
    nextToken: Optional[NextToken] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    listSuppressedFindings: Optional[ListSuppressedFindings] = None


class ListAuditSuppressionsRequest(BaseModel):
    checkName: Optional[AuditCheckName] = None
    resourceIdentifier: Optional[ResourceIdentifier] = None
    ascendingOrder: Optional[AscendingOrder] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class MitigationActionIdentifierList(BaseModel):
    __root__: List[MitigationActionIdentifier]


class OTAUpdatesSummary(BaseModel):
    __root__: List[OTAUpdateSummary]


class OutgoingCertificates(BaseModel):
    __root__: List[OutgoingCertificate]


class Principals(BaseModel):
    __root__: List[PrincipalArn]


class PolicyVersions(BaseModel):
    __root__: List[PolicyVersion]


class ProvisioningTemplateVersionListing(BaseModel):
    __root__: List[ProvisioningTemplateVersionSummary]


class ProvisioningTemplateListing(BaseModel):
    __root__: List[ProvisioningTemplateSummary]


class ScheduledAuditMetadataList(BaseModel):
    __root__: List[ScheduledAuditMetadata]


class SecurityProfileTargetMappings(BaseModel):
    __root__: List[SecurityProfileTargetMapping]


class SecurityProfileIdentifiers(BaseModel):
    __root__: List[SecurityProfileIdentifier]


class StreamsSummary(BaseModel):
    __root__: List[StreamSummary]


class SecurityProfileTargets(BaseModel):
    __root__: List[SecurityProfileTarget]


class S3FileUrlList(BaseModel):
    __root__: List[S3FileUrl]


class ThingAttributeList(BaseModel):
    __root__: List[ThingAttribute]


class TopicRuleList(BaseModel):
    __root__: List[TopicRuleListItem]


class LogTargetConfigurations(BaseModel):
    __root__: List[LogTargetConfiguration]


class Ports(BaseModel):
    __root__: List[Port]


class StringList(BaseModel):
    __root__: List[StringValue]


class MitigationAction(BaseModel):
    """
    Describes which changes should be applied as part of a mitigation action.
    """

    name: Optional[MitigationActionName] = None
    id: Optional[MitigationActionId] = None
    roleArn: Optional[RoleArn] = None
    actionParams: Optional[MitigationActionParams] = None


class RegisterCACertificateRequest(BaseModel):
    """
    The input to the RegisterCACertificate operation.
    """

    caCertificate: CertificatePem
    verificationCertificate: CertificatePem
    registrationConfig: Optional[RegistrationConfig] = None
    tags: Optional[TagList] = None


class RelatedResource(BaseModel):
    """
    Information about a related resource.
    """

    resourceType: Optional[ResourceType] = None
    resourceIdentifier: Optional[ResourceIdentifier] = None
    additionalInfo: Optional[StringMap] = None


class ThingDocumentList(BaseModel):
    __root__: List[ThingDocument]


class ThingGroupDocumentList(BaseModel):
    __root__: List[ThingGroupDocument]


class StartAuditMitigationActionsTaskRequest(BaseModel):
    target: AuditMitigationActionsTaskTarget
    auditCheckToActionsMapping: AuditCheckToActionsMapping
    clientRequestToken: ClientRequestToken


class StartDetectMitigationActionsTaskRequest(BaseModel):
    target: DetectMitigationActionsTaskTarget
    actions: DetectMitigationActionsToExecuteList
    violationEventOccurrenceRange: Optional[ViolationEventOccurrenceRange] = None
    includeOnlyActiveViolations: Optional[NullableBoolean] = None
    includeSuppressedAlerts: Optional[NullableBoolean] = None
    clientRequestToken: ClientRequestToken


class TagResourceRequest(BaseModel):
    resourceArn: ResourceArn
    tags: TagList


class ThingTypeDefinition(BaseModel):
    """
    The definition of the thing type, including thing type name and description.
    """

    thingTypeName: Optional[ThingTypeName] = None
    thingTypeArn: Optional[ThingTypeArn] = None
    thingTypeProperties: Optional[ThingTypeProperties] = None
    thingTypeMetadata: Optional[ThingTypeMetadata] = None


class TimestreamDimensionList(BaseModel):
    __root__: Annotated[List[TimestreamDimension], Field(max_items=128, min_items=1)]


class TimestreamTimestamp(BaseModel):
    """
    Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value.
    """

    value: TimestreamTimestampValue
    unit: TimestreamTimestampUnit


class VpcDestinationProperties(BaseModel):
    """
    The properties of a virtual private cloud (VPC) destination.
    """

    subnetIds: Optional[SubnetIdList] = None
    securityGroups: Optional[SecurityGroupList] = None
    vpcId: Optional[VpcId] = None
    roleArn: Optional[AwsArn] = None


class VpcDestinationSummary(VpcDestinationProperties):
    """
    The summary of a virtual private cloud (VPC) destination.
    """

    pass


class UpdateAuditSuppressionRequest(BaseModel):
    checkName: AuditCheckName
    resourceIdentifier: ResourceIdentifier
    expirationDate: Optional[Timestamp] = None
    suppressIndefinitely: Optional[SuppressIndefinitely] = None
    description: Optional[AuditDescription] = None


class UpdateDynamicThingGroupRequest(BaseModel):
    thingGroupProperties: ThingGroupProperties
    expectedVersion: Optional[OptionalVersion] = None
    indexName: Optional[IndexName] = None
    queryString: Optional[QueryString] = None
    queryVersion: Optional[QueryVersion] = None


class UpdateFleetMetricRequest(BaseModel):
    queryString: Optional[QueryString] = None
    aggregationType: Optional[AggregationType] = None
    period: Optional[FleetMetricPeriod] = None
    aggregationField: Optional[AggregationField] = None
    description: Optional[FleetMetricDescription] = None
    queryVersion: Optional[QueryVersion] = None
    indexName: IndexName
    unit: Optional[FleetMetricUnit] = None
    expectedVersion: Optional[OptionalVersion] = None


class UpdateIndexingConfigurationRequest(BaseModel):
    thingIndexingConfiguration: Optional[ThingIndexingConfiguration] = None
    thingGroupIndexingConfiguration: Optional[ThingGroupIndexingConfiguration] = None


class UpdateMitigationActionRequest(BaseModel):
    roleArn: Optional[RoleArn] = None
    actionParams: Optional[MitigationActionParams] = None


class UpdateThingGroupRequest(BaseModel):
    thingGroupProperties: ThingGroupProperties
    expectedVersion: Optional[OptionalVersion] = None


class UpdateThingRequest(BaseModel):
    """
    The input for the UpdateThing operation.
    """

    thingTypeName: Optional[ThingTypeName] = None
    attributePayload: Optional[AttributePayload] = None
    expectedVersion: Optional[OptionalVersion] = None
    removeThingType: Optional[RemoveThingType] = None


class ValidationErrors(BaseModel):
    __root__: List[ValidationError]


class ExponentialRolloutRate(BaseModel):
    """
    Allows you to create an exponential rate of rollout for a job.
    """

    baseRatePerMinute: RolloutRatePerMinute
    incrementFactor: IncrementFactor
    rateIncreaseCriteria: RateIncreaseCriteria


class CreateKeysAndCertificateResponse(BaseModel):
    """
    The output of the CreateKeysAndCertificate operation.
    """

    certificateArn: Optional[CertificateArn] = None
    certificateId: Optional[CertificateId] = None
    certificatePem: Optional[CertificatePem] = None
    keyPair: Optional[KeyPair] = None


class AwsJobExponentialRolloutRate(BaseModel):
    """
    The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.
    """

    baseRatePerMinute: AwsJobRolloutRatePerMinute
    incrementFactor: AwsJobRolloutIncrementFactor
    rateIncreaseCriteria: AwsJobRateIncreaseCriteria


class CreateProvisioningClaimResponse(BaseModel):
    certificateId: Optional[CertificateId] = None
    certificatePem: Optional[CertificatePem] = None
    keyPair: Optional[KeyPair] = None
    expiration: Optional[DateType] = None


class MetricToRetain(BaseModel):
    """
    The metric you want to retain. Dimensions are optional.
    """

    metric: BehaviorMetric
    metricDimension: Optional[MetricDimension] = None


class StreamFile(BaseModel):
    """
    Represents a file to stream.
    """

    fileId: Optional[FileId] = None
    s3Location: Optional[S3Location] = None


class DescribeAuditSuppressionResponse(BaseModel):
    checkName: Optional[AuditCheckName] = None
    resourceIdentifier: Optional[ResourceIdentifier] = None
    expirationDate: Optional[Timestamp] = None
    suppressIndefinitely: Optional[SuppressIndefinitely] = None
    description: Optional[AuditDescription] = None


class DescribeAuditTaskResponse(BaseModel):
    taskStatus: Optional[AuditMitigationActionsTaskStatus] = None
    taskType: Optional[AuditTaskType] = None
    taskStartTime: Optional[Timestamp] = None
    taskStatistics: Optional[TaskStatistics] = None
    scheduledAuditName: Optional[ScheduledAuditName] = None
    auditDetails: Optional[AuditDetails] = None


class DescribeCertificateResponse(BaseModel):
    """
    The output of the DescribeCertificate operation.
    """

    certificateDescription: Optional[CertificateDescription] = None


class DescribeDomainConfigurationResponse(BaseModel):
    domainConfigurationName: Optional[ReservedDomainConfigurationName] = None
    domainConfigurationArn: Optional[DomainConfigurationArn] = None
    domainName: Optional[DomainName] = None
    serverCertificates: Optional[ServerCertificates] = None
    authorizerConfig: Optional[AuthorizerConfig] = None
    domainConfigurationStatus: Optional[DomainConfigurationStatus] = None
    serviceType: Optional[ServiceType] = None
    domainType: Optional[DomainType] = None
    lastStatusChangeDate: Optional[DateType] = None


class DescribeFleetMetricResponse(BaseModel):
    metricName: Optional[FleetMetricName] = None
    queryString: Optional[QueryString] = None
    aggregationType: Optional[AggregationType] = None
    period: Optional[FleetMetricPeriod] = None
    aggregationField: Optional[AggregationField] = None
    description: Optional[FleetMetricDescription] = None
    queryVersion: Optional[QueryVersion] = None
    indexName: Optional[IndexName] = None
    creationDate: Optional[CreationDate] = None
    lastModifiedDate: Optional[LastModifiedDate] = None
    unit: Optional[FleetMetricUnit] = None
    version: Optional[Version] = None
    metricArn: Optional[FleetMetricArn] = None


class DescribeJobExecutionResponse(BaseModel):
    execution: Optional[JobExecution] = None


class DescribeMitigationActionResponse(BaseModel):
    actionName: Optional[MitigationActionName] = None
    actionType: Optional[MitigationActionType] = None
    actionArn: Optional[MitigationActionArn] = None
    actionId: Optional[MitigationActionId] = None
    roleArn: Optional[RoleArn] = None
    actionParams: Optional[MitigationActionParams] = None
    creationDate: Optional[Timestamp] = None
    lastModifiedDate: Optional[Timestamp] = None


class DescribeThingGroupResponse(BaseModel):
    thingGroupName: Optional[ThingGroupName] = None
    thingGroupId: Optional[ThingGroupId] = None
    thingGroupArn: Optional[ThingGroupArn] = None
    version: Optional[Version] = None
    thingGroupProperties: Optional[ThingGroupProperties] = None
    thingGroupMetadata: Optional[ThingGroupMetadata] = None
    indexName: Optional[IndexName] = None
    queryString: Optional[QueryString] = None
    queryVersion: Optional[QueryVersion] = None
    status: Optional[IndexStatus] = None


class DescribeThingTypeResponse(BaseModel):
    """
    The output for the DescribeThingType operation.
    """

    thingTypeName: Optional[ThingTypeName] = None
    thingTypeId: Optional[ThingTypeId] = None
    thingTypeArn: Optional[ThingTypeArn] = None
    thingTypeProperties: Optional[ThingTypeProperties] = None
    thingTypeMetadata: Optional[ThingTypeMetadata] = None


class GetBehaviorModelTrainingSummariesResponse(BaseModel):
    summaries: Optional[BehaviorModelTrainingSummaries] = None
    nextToken: Optional[NextToken] = None


class GetIndexingConfigurationResponse(BaseModel):
    thingIndexingConfiguration: Optional[ThingIndexingConfiguration] = None
    thingGroupIndexingConfiguration: Optional[ThingGroupIndexingConfiguration] = None


class GetPercentilesResponse(BaseModel):
    percentiles: Optional[Percentiles] = None


class GetStatisticsResponse(BaseModel):
    statistics: Optional[Statistics] = None


class ListAttachedPoliciesResponse(BaseModel):
    policies: Optional[Policies] = None
    nextMarker: Optional[Marker] = None


class ListAuditSuppressionsResponse(BaseModel):
    suppressions: Optional[AuditSuppressionList] = None
    nextToken: Optional[NextToken] = None


class ListMitigationActionsResponse(BaseModel):
    actionIdentifiers: Optional[MitigationActionIdentifierList] = None
    nextToken: Optional[NextToken] = None


class ListOTAUpdatesResponse(BaseModel):
    otaUpdates: Optional[OTAUpdatesSummary] = None
    nextToken: Optional[NextToken] = None


class ListOutgoingCertificatesResponse(BaseModel):
    """
    The output from the ListOutgoingCertificates operation.
    """

    outgoingCertificates: Optional[OutgoingCertificates] = None
    nextMarker: Optional[Marker] = None


class ListPoliciesResponse(ListAttachedPoliciesResponse):
    """
    The output from the ListPolicies operation.
    """

    pass


class ListPolicyPrincipalsResponse(BaseModel):
    """
    The output from the ListPolicyPrincipals operation.
    """

    principals: Optional[Principals] = None
    nextMarker: Optional[Marker] = None


class ListPolicyVersionsResponse(BaseModel):
    """
    The output from the ListPolicyVersions operation.
    """

    policyVersions: Optional[PolicyVersions] = None


class ListPrincipalPoliciesResponse(ListAttachedPoliciesResponse):
    """
    The output from the ListPrincipalPolicies operation.
    """

    pass


class ListProvisioningTemplateVersionsResponse(BaseModel):
    versions: Optional[ProvisioningTemplateVersionListing] = None
    nextToken: Optional[NextToken] = None


class ListProvisioningTemplatesResponse(BaseModel):
    templates: Optional[ProvisioningTemplateListing] = None
    nextToken: Optional[NextToken] = None


class ListScheduledAuditsResponse(BaseModel):
    scheduledAudits: Optional[ScheduledAuditMetadataList] = None
    nextToken: Optional[NextToken] = None


class ListSecurityProfilesResponse(BaseModel):
    securityProfileIdentifiers: Optional[SecurityProfileIdentifiers] = None
    nextToken: Optional[NextToken] = None


class ListSecurityProfilesForTargetResponse(BaseModel):
    securityProfileTargetMappings: Optional[SecurityProfileTargetMappings] = None
    nextToken: Optional[NextToken] = None


class ListStreamsResponse(BaseModel):
    streams: Optional[StreamsSummary] = None
    nextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagList] = None
    nextToken: Optional[NextToken] = None


class ListTargetsForSecurityProfileResponse(BaseModel):
    securityProfileTargets: Optional[SecurityProfileTargets] = None
    nextToken: Optional[NextToken] = None


class ListThingPrincipalsResponse(BaseModel):
    """
    The output from the ListThingPrincipals operation.
    """

    principals: Optional[Principals] = None
    nextToken: Optional[NextToken] = None


class ListThingRegistrationTaskReportsResponse(BaseModel):
    resourceLinks: Optional[S3FileUrlList] = None
    reportType: Optional[ReportType] = None
    nextToken: Optional[NextToken] = None


class ListThingsResponse(BaseModel):
    """
    The output from the ListThings operation.
    """

    things: Optional[ThingAttributeList] = None
    nextToken: Optional[NextToken] = None


class ListTopicRulesResponse(BaseModel):
    """
    The output from the ListTopicRules operation.
    """

    rules: Optional[TopicRuleList] = None
    nextToken: Optional[NextToken] = None


class ListV2LoggingLevelsResponse(BaseModel):
    logTargetConfigurations: Optional[LogTargetConfigurations] = None
    nextToken: Optional[NextToken] = None


class SearchIndexResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    things: Optional[ThingDocumentList] = None
    thingGroups: Optional[ThingGroupDocumentList] = None


class AuthInfo(BaseModel):
    """
    A collection of authorization information.
    """

    actionType: Optional[ActionType] = None
    resources: Resources


class ValidateSecurityProfileBehaviorsResponse(BaseModel):
    valid: Optional[Valid] = None
    validationErrors: Optional[ValidationErrors] = None


class IotSiteWiseAction(BaseModel):
    """
    Describes an action to send data from an MQTT message that triggered the rule to IoT SiteWise asset properties.
    """

    putAssetPropertyValueEntries: PutAssetPropertyValueEntryList
    roleArn: AwsArn


class TimestreamAction(BaseModel):
    """
    The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a> topic rule action documentation.
    """

    roleArn: AwsArn
    databaseName: TimestreamDatabaseName
    tableName: TimestreamTableName
    dimensions: TimestreamDimensionList
    timestamp: Optional[TimestreamTimestamp] = None


class MetricValue1(BaseModel):
    """
    The value to be compared with the <code>metric</code>.
    """

    count: Optional[UnsignedLong] = None
    cidrs: Optional[Cidrs] = None
    ports: Optional[Ports] = None
    number: Optional[Number] = None
    numbers: Optional[NumberList] = None
    strings: Optional[StringList] = None


class AdditionalMetricsToRetainV2List(BaseModel):
    __root__: List[MetricToRetain]


class NonCompliantResource(RelatedResource):
    """
    Information about the resource that was noncompliant with the audit check.
    """

    pass


class RelatedResources(BaseModel):
    __root__: List[RelatedResource]


class AuditFinding(BaseModel):
    """
    The findings (results) of the audit.
    """

    findingId: Optional[FindingId] = None
    taskId: Optional[AuditTaskId] = None
    checkName: Optional[AuditCheckName] = None
    taskStartTime: Optional[Timestamp] = None
    findingTime: Optional[Timestamp] = None
    severity: Optional[AuditFindingSeverity] = None
    nonCompliantResource: Optional[NonCompliantResource] = None
    relatedResources: Optional[RelatedResources] = None
    reasonForNonCompliance: Optional[ReasonForNonCompliance] = None
    reasonForNonComplianceCode: Optional[ReasonForNonComplianceCode] = None
    isSuppressed: Optional[IsSuppressed] = None


class AuditFindings(BaseModel):
    __root__: List[AuditFinding]


class AuthInfos(BaseModel):
    __root__: Annotated[List[AuthInfo], Field(max_items=10, min_items=1)]


class Denied(BaseModel):
    """
    Contains information that denied the authorization.
    """

    implicitDeny: Optional[ImplicitDeny] = None
    explicitDeny: Optional[ExplicitDeny] = None


class AuthResult(BaseModel):
    """
    The authorizer result.
    """

    authInfo: Optional[AuthInfo] = None
    allowed: Optional[Allowed] = None
    denied: Optional[Denied] = None
    authDecision: Optional[AuthDecision] = None
    missingContextValues: Optional[MissingContextValues] = None


class AuthResults(BaseModel):
    __root__: List[AuthResult]


class AwsJobExecutionsRolloutConfig(BaseModel):
    """
    Configuration for the rollout of OTA updates.
    """

    maximumPerMinute: Optional[MaximumPerMinute] = None
    exponentialRate: Optional[AwsJobExponentialRolloutRate] = None


class BehaviorCriteria(BaseModel):
    """
    The criteria by which the behavior is determined to be normal.
    """

    comparisonOperator: Optional[ComparisonOperator] = None
    value: Optional[MetricValue1] = None
    durationSeconds: Optional[DurationSeconds] = None
    consecutiveDatapointsToAlarm: Optional[ConsecutiveDatapointsToAlarm] = None
    consecutiveDatapointsToClear: Optional[ConsecutiveDatapointsToClear] = None
    statisticalThreshold: Optional[StatisticalThreshold] = None
    mlDetectionConfig: Optional[MachineLearningDetectionConfig] = None


class StartSigningJobParameter(BaseModel):
    """
    Information required to start a signing job.
    """

    signingProfileParameter: Optional[SigningProfileParameter] = None
    signingProfileName: Optional[SigningProfileName] = None
    destination: Optional[Destination] = None


class CodeSigning(BaseModel):
    """
    Describes the method to use when code signing a file.
    """

    awsSignerJobId: Optional[SigningJobId] = None
    startSigningJobParameter: Optional[StartSigningJobParameter] = None
    customCodeSigning: Optional[CustomCodeSigning] = None


class JobExecutionsRolloutConfig(BaseModel):
    """
    Allows you to create a staged rollout of a job.
    """

    maximumPerMinute: Optional[MaxJobExecutionsPerMin] = None
    exponentialRate: Optional[ExponentialRolloutRate] = None


class CreateJobRequest(BaseModel):
    targets: JobTargets
    documentSource: Optional[JobDocumentSource] = None
    document: Optional[JobDocument] = None
    description: Optional[JobDescription] = None
    presignedUrlConfig: Optional[PresignedUrlConfig] = None
    targetSelection: Optional[TargetSelection] = None
    jobExecutionsRolloutConfig: Optional[JobExecutionsRolloutConfig] = None
    abortConfig: Optional[AbortConfig] = None
    timeoutConfig: Optional[TimeoutConfig] = None
    tags: Optional[TagList] = None
    namespaceId: Optional[NamespaceId] = None
    jobTemplateArn: Optional[JobTemplateArn] = None


class CreateJobTemplateRequest(BaseModel):
    jobArn: Optional[JobArn] = None
    documentSource: Optional[JobDocumentSource] = None
    document: Optional[JobDocument] = None
    description: JobDescription
    presignedUrlConfig: Optional[PresignedUrlConfig] = None
    jobExecutionsRolloutConfig: Optional[JobExecutionsRolloutConfig] = None
    abortConfig: Optional[AbortConfig] = None
    timeoutConfig: Optional[TimeoutConfig] = None
    tags: Optional[TagList] = None


class StreamFiles(BaseModel):
    __root__: Annotated[List[StreamFile], Field(max_items=50, min_items=1)]


class CreateStreamRequest(BaseModel):
    description: Optional[StreamDescription] = None
    files: StreamFiles
    roleArn: RoleArn
    tags: Optional[TagList] = None


class TopicRuleDestination(BaseModel):
    """
    A topic rule destination.
    """

    arn: Optional[AwsArn] = None
    status: Optional[TopicRuleDestinationStatus] = None
    createdAt: Optional[CreatedAtDate] = None
    lastUpdatedAt: Optional[LastUpdatedAtDate] = None
    statusReason: Optional[String] = None
    httpUrlProperties: Optional[HttpUrlDestinationProperties] = None
    vpcProperties: Optional[VpcDestinationProperties] = None


class MitigationActionList(BaseModel):
    __root__: List[MitigationAction]


class DetectMitigationActionsTaskSummary(BaseModel):
    """
    The summary of the mitigation action tasks.
    """

    taskId: Optional[MitigationActionsTaskId] = None
    taskStatus: Optional[DetectMitigationActionsTaskStatus] = None
    taskStartTime: Optional[Timestamp] = None
    taskEndTime: Optional[Timestamp] = None
    target: Optional[DetectMitigationActionsTaskTarget] = None
    violationEventOccurrenceRange: Optional[ViolationEventOccurrenceRange] = None
    onlyActiveViolationsIncluded: Optional[PrimitiveBoolean] = None
    suppressedAlertsIncluded: Optional[PrimitiveBoolean] = None
    actionsDefinition: Optional[MitigationActionList] = None
    taskStatistics: Optional[DetectMitigationActionsTaskStatistics] = None


class StreamInfo(BaseModel):
    """
    Information about a stream.
    """

    streamId: Optional[StreamId] = None
    streamArn: Optional[StreamArn] = None
    streamVersion: Optional[StreamVersion] = None
    description: Optional[StreamDescription] = None
    files: Optional[StreamFiles] = None
    createdAt: Optional[DateType] = None
    lastUpdatedAt: Optional[DateType] = None
    roleArn: Optional[RoleArn] = None


class DetectMitigationActionsTaskSummaryList(BaseModel):
    __root__: List[DetectMitigationActionsTaskSummary]


class HttpAuthorization(BaseModel):
    """
    The authorization method used to send messages.
    """

    sigv4: Optional[SigV4Authorization] = None


class JobProcessDetails(BaseModel):
    """
    The job process details.
    """

    processingTargets: Optional[ProcessingTargetNameList] = None
    numberOfCanceledThings: Optional[CanceledThings] = None
    numberOfSucceededThings: Optional[SucceededThings] = None
    numberOfFailedThings: Optional[FailedThings] = None
    numberOfRejectedThings: Optional[RejectedThings] = None
    numberOfQueuedThings: Optional[QueuedThings] = None
    numberOfInProgressThings: Optional[InProgressThings] = None
    numberOfRemovedThings: Optional[RemovedThings] = None
    numberOfTimedOutThings: Optional[TimedOutThings] = None


class ThingTypeList(BaseModel):
    __root__: List[ThingTypeDefinition]


class TestAuthorizationRequest(BaseModel):
    principal: Optional[Principal] = None
    cognitoIdentityPoolId: Optional[CognitoIdentityPoolId] = None
    authInfos: AuthInfos
    policyNamesToAdd: Optional[PolicyNames] = None
    policyNamesToSkip: Optional[PolicyNames] = None


class TopicRuleDestinationSummary(BaseModel):
    """
    Information about the topic rule destination.
    """

    arn: Optional[AwsArn] = None
    status: Optional[TopicRuleDestinationStatus] = None
    createdAt: Optional[CreatedAtDate] = None
    lastUpdatedAt: Optional[LastUpdatedAtDate] = None
    statusReason: Optional[String] = None
    httpUrlSummary: Optional[HttpUrlDestinationSummary] = None
    vpcDestinationSummary: Optional[VpcDestinationSummary] = None


class UpdateJobRequest(BaseModel):
    description: Optional[JobDescription] = None
    presignedUrlConfig: Optional[PresignedUrlConfig] = None
    jobExecutionsRolloutConfig: Optional[JobExecutionsRolloutConfig] = None
    abortConfig: Optional[AbortConfig] = None
    timeoutConfig: Optional[TimeoutConfig] = None


class UpdateStreamRequest(BaseModel):
    description: Optional[StreamDescription] = None
    files: Optional[StreamFiles] = None
    roleArn: Optional[RoleArn] = None


class OTAUpdateFile(BaseModel):
    """
    Describes a file to be associated with an OTA update.
    """

    fileName: Optional[FileName] = None
    fileType: Optional[FileType] = None
    fileVersion: Optional[OTAUpdateFileVersion] = None
    fileLocation: Optional[FileLocation] = None
    codeSigning: Optional[CodeSigning] = None
    attributes: Optional[AttributesMap] = None


class Behavior(BaseModel):
    """
    A Device Defender security profile behavior.
    """

    name: BehaviorName
    metric: Optional[BehaviorMetric] = None
    metricDimension: Optional[MetricDimension] = None
    criteria: Optional[BehaviorCriteria] = None
    suppressAlerts: Optional[SuppressAlerts] = None


class CreateTopicRuleDestinationResponse(BaseModel):
    topicRuleDestination: Optional[TopicRuleDestination] = None


class DescribeAuditFindingResponse(BaseModel):
    finding: Optional[AuditFinding] = None


class DescribeAuditMitigationActionsTaskResponse(BaseModel):
    taskStatus: Optional[AuditMitigationActionsTaskStatus] = None
    startTime: Optional[Timestamp] = None
    endTime: Optional[Timestamp] = None
    taskStatistics: Optional[AuditMitigationActionsTaskStatistics] = None
    target: Optional[AuditMitigationActionsTaskTarget] = None
    auditCheckToActionsMapping: Optional[AuditCheckToActionsMapping] = None
    actionsDefinition: Optional[MitigationActionList] = None


class DescribeDetectMitigationActionsTaskResponse(BaseModel):
    taskSummary: Optional[DetectMitigationActionsTaskSummary] = None


class DescribeJobTemplateResponse(BaseModel):
    jobTemplateArn: Optional[JobTemplateArn] = None
    jobTemplateId: Optional[JobTemplateId] = None
    description: Optional[JobDescription] = None
    documentSource: Optional[JobDocumentSource] = None
    document: Optional[JobDocument] = None
    createdAt: Optional[DateType] = None
    presignedUrlConfig: Optional[PresignedUrlConfig] = None
    jobExecutionsRolloutConfig: Optional[JobExecutionsRolloutConfig] = None
    abortConfig: Optional[AbortConfig] = None
    timeoutConfig: Optional[TimeoutConfig] = None


class DescribeStreamResponse(BaseModel):
    streamInfo: Optional[StreamInfo] = None


class GetTopicRuleDestinationResponse(CreateTopicRuleDestinationResponse):
    pass


class ListAuditFindingsResponse(BaseModel):
    findings: Optional[AuditFindings] = None
    nextToken: Optional[NextToken] = None


class ListDetectMitigationActionsTasksResponse(BaseModel):
    tasks: Optional[DetectMitigationActionsTaskSummaryList] = None
    nextToken: Optional[NextToken] = None


class ListThingTypesResponse(BaseModel):
    """
    The output for the ListThingTypes operation.
    """

    thingTypes: Optional[ThingTypeList] = None
    nextToken: Optional[NextToken] = None


class TestAuthorizationResponse(BaseModel):
    authResults: Optional[AuthResults] = None


class HttpAction(BaseModel):
    """
    Send data to an HTTPS endpoint.
    """

    url: Url
    confirmationUrl: Optional[Url] = None
    headers: Optional[HeaderList] = None
    auth: Optional[HttpAuthorization] = None


class ActiveViolation(BaseModel):
    """
    Information about an active Device Defender security profile behavior violation.
    """

    violationId: Optional[ViolationId] = None
    thingName: Optional[DeviceDefenderThingName] = None
    securityProfileName: Optional[SecurityProfileName] = None
    behavior: Optional[Behavior] = None
    lastViolationValue: Optional[MetricValue1] = None
    violationEventAdditionalInfo: Optional[ViolationEventAdditionalInfo] = None
    lastViolationTime: Optional[Timestamp] = None
    violationStartTime: Optional[Timestamp] = None


class ActiveViolations(BaseModel):
    __root__: List[ActiveViolation]


class Behaviors(BaseModel):
    __root__: Annotated[List[Behavior], Field(max_items=100)]


class OTAUpdateFiles(BaseModel):
    __root__: Annotated[List[OTAUpdateFile], Field(max_items=50, min_items=1)]


class CreateOTAUpdateRequest(BaseModel):
    description: Optional[OTAUpdateDescription] = None
    targets: Targets3
    protocols: Optional[Protocols] = None
    targetSelection: Optional[TargetSelection] = None
    awsJobExecutionsRolloutConfig: Optional[AwsJobExecutionsRolloutConfig] = None
    awsJobPresignedUrlConfig: Optional[AwsJobPresignedUrlConfig] = None
    awsJobAbortConfig: Optional[AwsJobAbortConfig] = None
    awsJobTimeoutConfig: Optional[AwsJobTimeoutConfig] = None
    files: OTAUpdateFiles
    roleArn: RoleArn
    additionalParameters: Optional[AdditionalParameterMap] = None
    tags: Optional[TagList] = None


class CreateSecurityProfileRequest(BaseModel):
    securityProfileDescription: Optional[SecurityProfileDescription] = None
    behaviors: Optional[Behaviors] = None
    alertTargets: Optional[AlertTargets] = None
    additionalMetricsToRetain: Optional[AdditionalMetricsToRetainList] = None
    additionalMetricsToRetainV2: Optional[AdditionalMetricsToRetainV2List] = None
    tags: Optional[TagList] = None


class Job(BaseModel):
    """
    The <code>Job</code> object contains details about a job.
    """

    jobArn: Optional[JobArn] = None
    jobId: Optional[JobId] = None
    targetSelection: Optional[TargetSelection] = None
    status: Optional[JobStatus] = None
    forceCanceled: Optional[Forced] = None
    reasonCode: Optional[ReasonCode] = None
    comment: Optional[Comment] = None
    targets: Optional[JobTargets] = None
    description: Optional[JobDescription] = None
    presignedUrlConfig: Optional[PresignedUrlConfig] = None
    jobExecutionsRolloutConfig: Optional[JobExecutionsRolloutConfig] = None
    abortConfig: Optional[AbortConfig] = None
    createdAt: Optional[DateType] = None
    lastUpdatedAt: Optional[DateType] = None
    completedAt: Optional[DateType] = None
    jobProcessDetails: Optional[JobProcessDetails] = None
    timeoutConfig: Optional[TimeoutConfig] = None
    namespaceId: Optional[NamespaceId] = None
    jobTemplateArn: Optional[JobTemplateArn] = None


class OTAUpdateInfo(BaseModel):
    """
    Information about an OTA update.
    """

    otaUpdateId: Optional[OTAUpdateId] = None
    otaUpdateArn: Optional[OTAUpdateArn] = None
    creationDate: Optional[DateType] = None
    lastModifiedDate: Optional[DateType] = None
    description: Optional[OTAUpdateDescription] = None
    targets: Optional[Targets3] = None
    protocols: Optional[Protocols] = None
    awsJobExecutionsRolloutConfig: Optional[AwsJobExecutionsRolloutConfig] = None
    awsJobPresignedUrlConfig: Optional[AwsJobPresignedUrlConfig] = None
    targetSelection: Optional[TargetSelection] = None
    otaUpdateFiles: Optional[OTAUpdateFiles] = None
    otaUpdateStatus: Optional[OTAUpdateStatus] = None
    awsIotJobId: Optional[AwsIotJobId] = None
    awsIotJobArn: Optional[AwsIotJobArn] = None
    errorInfo: Optional[ErrorInfo] = None
    additionalParameters: Optional[AdditionalParameterMap] = None


class TopicRuleDestinationSummaries(BaseModel):
    __root__: List[TopicRuleDestinationSummary]


class UpdateSecurityProfileRequest(BaseModel):
    securityProfileDescription: Optional[SecurityProfileDescription] = None
    behaviors: Optional[Behaviors] = None
    alertTargets: Optional[AlertTargets] = None
    additionalMetricsToRetain: Optional[AdditionalMetricsToRetainList] = None
    additionalMetricsToRetainV2: Optional[AdditionalMetricsToRetainV2List] = None
    deleteBehaviors: Optional[DeleteBehaviors] = None
    deleteAlertTargets: Optional[DeleteAlertTargets] = None
    deleteAdditionalMetricsToRetain: Optional[DeleteAdditionalMetricsToRetain] = None


class ValidateSecurityProfileBehaviorsRequest(BaseModel):
    behaviors: Behaviors


class ViolationEvent(BaseModel):
    """
    Information about a Device Defender security profile behavior violation.
    """

    violationId: Optional[ViolationId] = None
    thingName: Optional[DeviceDefenderThingName] = None
    securityProfileName: Optional[SecurityProfileName] = None
    behavior: Optional[Behavior] = None
    metricValue: Optional[MetricValue1] = None
    violationEventAdditionalInfo: Optional[ViolationEventAdditionalInfo] = None
    violationEventType: Optional[ViolationEventType] = None
    violationEventTime: Optional[Timestamp] = None


class Action(BaseModel):
    """
    Describes the actions associated with a rule.
    """

    dynamoDB: Optional[DynamoDBAction] = None
    dynamoDBv2: Optional[DynamoDBv2Action] = None
    lambda_: Annotated[Optional[LambdaAction], Field(alias='lambda')] = None
    sns: Optional[SnsAction] = None
    sqs: Optional[SqsAction] = None
    kinesis: Optional[KinesisAction] = None
    republish: Optional[RepublishAction] = None
    s3: Optional[S3Action] = None
    firehose: Optional[FirehoseAction] = None
    cloudwatchMetric: Optional[CloudwatchMetricAction] = None
    cloudwatchAlarm: Optional[CloudwatchAlarmAction] = None
    cloudwatchLogs: Optional[CloudwatchLogsAction] = None
    elasticsearch: Optional[ElasticsearchAction] = None
    salesforce: Optional[SalesforceAction] = None
    iotAnalytics: Optional[IotAnalyticsAction] = None
    iotEvents: Optional[IotEventsAction] = None
    iotSiteWise: Optional[IotSiteWiseAction] = None
    stepFunctions: Optional[StepFunctionsAction] = None
    timestream: Optional[TimestreamAction] = None
    http: Optional[HttpAction] = None
    kafka: Optional[KafkaAction] = None
    openSearch: Optional[OpenSearchAction] = None


class DescribeJobResponse(BaseModel):
    documentSource: Optional[JobDocumentSource] = None
    job: Optional[Job] = None


class DescribeSecurityProfileResponse(BaseModel):
    securityProfileName: Optional[SecurityProfileName] = None
    securityProfileArn: Optional[SecurityProfileArn] = None
    securityProfileDescription: Optional[SecurityProfileDescription] = None
    behaviors: Optional[Behaviors] = None
    alertTargets: Optional[AlertTargets] = None
    additionalMetricsToRetain: Optional[AdditionalMetricsToRetainList] = None
    additionalMetricsToRetainV2: Optional[AdditionalMetricsToRetainV2List] = None
    version: Optional[Version] = None
    creationDate: Optional[Timestamp] = None
    lastModifiedDate: Optional[Timestamp] = None


class GetOTAUpdateResponse(BaseModel):
    otaUpdateInfo: Optional[OTAUpdateInfo] = None


class ListActiveViolationsResponse(BaseModel):
    activeViolations: Optional[ActiveViolations] = None
    nextToken: Optional[NextToken] = None


class ListTopicRuleDestinationsResponse(BaseModel):
    destinationSummaries: Optional[TopicRuleDestinationSummaries] = None
    nextToken: Optional[NextToken] = None


class UpdateSecurityProfileResponse(DescribeSecurityProfileResponse):
    pass


class ViolationEvents(BaseModel):
    __root__: List[ViolationEvent]


class ActionList(BaseModel):
    __root__: Annotated[List[Action], Field(max_items=10, min_items=0)]


class ListViolationEventsResponse(BaseModel):
    violationEvents: Optional[ViolationEvents] = None
    nextToken: Optional[NextToken] = None


class TopicRulePayload(BaseModel):
    """
    Describes a rule.
    """

    sql: SQL
    description: Optional[Description4] = None
    actions: ActionList
    ruleDisabled: Optional[IsDisabled] = None
    awsIotSqlVersion: Optional[AwsIotSqlVersion] = None
    errorAction: Optional[Action] = None


class CreateTopicRuleRequest(BaseModel):
    """
    The input for the CreateTopicRule operation.
    """

    topicRulePayload: TopicRulePayload


class TopicRule(BaseModel):
    """
    Describes a rule.
    """

    ruleName: Optional[RuleName] = None
    sql: Optional[SQL] = None
    description: Optional[Description4] = None
    createdAt: Optional[CreatedAtDate] = None
    actions: Optional[ActionList] = None
    ruleDisabled: Optional[IsDisabled] = None
    awsIotSqlVersion: Optional[AwsIotSqlVersion] = None
    errorAction: Optional[Action] = None


class ReplaceTopicRuleRequest(BaseModel):
    """
    The input for the ReplaceTopicRule operation.
    """

    topicRulePayload: TopicRulePayload


class GetTopicRuleResponse(BaseModel):
    """
    The output from the GetTopicRule operation.
    """

    ruleArn: Optional[RuleArn] = None
    rule: Optional[TopicRule] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:51+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class AcceptMatchOutput(BaseModel):
    pass


class InvalidRequestException(BaseModel):
    __root__: Any


class NotFoundException(InvalidRequestException):
    pass


class InternalServiceException(InvalidRequestException):
    pass


class UnsupportedRegionException(InvalidRequestException):
    pass


class ConflictException(InvalidRequestException):
    pass


class OutOfCapacityException(InvalidRequestException):
    pass


class UnauthorizedException(InvalidRequestException):
    pass


class LimitExceededException(InvalidRequestException):
    pass


class TaggingFailedException(InvalidRequestException):
    pass


class InvalidFleetStatusException(InvalidRequestException):
    pass


class TerminalRoutingStrategyException(InvalidRequestException):
    pass


class FleetCapacityExceededException(InvalidRequestException):
    pass


class IdempotentParameterMismatchException(InvalidRequestException):
    pass


class InvalidGameSessionStatusException(InvalidRequestException):
    pass


class GameSessionFullException(InvalidRequestException):
    pass


class CreateVpcPeeringConnectionOutput(AcceptMatchOutput):
    pass


class DeleteGameSessionQueueOutput(AcceptMatchOutput):
    pass


class DeleteMatchmakingConfigurationOutput(AcceptMatchOutput):
    pass


class DeleteMatchmakingRuleSetOutput(AcceptMatchOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class DeleteVpcPeeringAuthorizationOutput(AcceptMatchOutput):
    pass


class DeleteVpcPeeringConnectionOutput(AcceptMatchOutput):
    pass


class DescribeVpcPeeringAuthorizationsInput(BaseModel):
    pass


class StopMatchmakingOutput(AcceptMatchOutput):
    pass


class TagResourceResponse(AcceptMatchOutput):
    pass


class UntagResourceResponse(AcceptMatchOutput):
    pass


class MatchmakingIdStringModel(BaseModel):
    __root__: Annotated[str, Field(max_length=128, regex='[a-zA-Z0-9-\\.]*')]


class AcceptanceType(Enum):
    ACCEPT = 'ACCEPT'
    REJECT = 'REJECT'


class AliasId8(BaseModel):
    __root__: Annotated[str, Field(regex='^alias-\\S+')]


class NonBlankAndLengthConstraintString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='.*\\S.*')]


class AliasArn(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:.*:alias\\/alias-\\S+')]


class FreeText(BaseModel):
    __root__: str


class Timestamp(BaseModel):
    __root__: datetime


class AliasIdOrArn(BaseModel):
    __root__: Annotated[str, Field(regex='^alias-\\S+|^arn:.*:alias\\/alias-\\S+')]


class AmazonResourceName(BaseModel):
    __root__: Annotated[str, Field(max_length=1011, min_length=1)]


class ArnStringModel(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[a-zA-Z0-9:/-]+')
    ]


class NonZeroAndMaxString(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class DoubleObject(BaseModel):
    __root__: float


class StringDoubleMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AutoScalingGroupArn(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class AwsCredentials(BaseModel):
    """
    Temporary access credentials used for uploading game build files to Amazon GameLift. They are valid for a limited time. If they expire before you upload your game build, get a new set by calling <a>RequestUploadCredentials</a>.
    """

    AccessKeyId: Optional[NonEmptyString] = None
    SecretAccessKey: Optional[NonEmptyString] = None
    SessionToken: Optional[NonEmptyString] = None


class BackfillMode(Enum):
    AUTOMATIC = 'AUTOMATIC'
    MANUAL = 'MANUAL'


class BalancingStrategy(Enum):
    SPOT_ONLY = 'SPOT_ONLY'
    SPOT_PREFERRED = 'SPOT_PREFERRED'
    ON_DEMAND_ONLY = 'ON_DEMAND_ONLY'


class BooleanModel(BaseModel):
    __root__: bool


class BuildId6(BaseModel):
    __root__: Annotated[str, Field(regex='^build-\\S+')]


class BuildArn(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:.*:build\\/build-\\S+')]


class BuildStatus(Enum):
    INITIALIZED = 'INITIALIZED'
    READY = 'READY'
    FAILED = 'FAILED'


class PositiveLong(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class OperatingSystem(Enum):
    WINDOWS_2012 = 'WINDOWS_2012'
    AMAZON_LINUX = 'AMAZON_LINUX'
    AMAZON_LINUX_2 = 'AMAZON_LINUX_2'


class Build(BaseModel):
    """
    <p>Properties describing a custom game build.</p> <p> <b>Related actions</b> </p> <p> <a>CreateBuild</a> | <a>ListBuilds</a> | <a>DescribeBuild</a> | <a>UpdateBuild</a> | <a>DeleteBuild</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    BuildId: Optional[BuildId6] = None
    BuildArn: Optional[BuildArn] = None
    Name: Optional[FreeText] = None
    Version: Optional[FreeText] = None
    Status: Optional[BuildStatus] = None
    SizeOnDisk: Optional[PositiveLong] = None
    OperatingSystem: Optional[OperatingSystem] = None
    CreationTime: Optional[Timestamp] = None


class BuildIdOrArn(BaseModel):
    __root__: Annotated[str, Field(regex='^build-\\S+|^arn:.*:build\\/build-\\S+')]


class BuildList(BaseModel):
    __root__: List[Build]


class CertificateType(Enum):
    DISABLED = 'DISABLED'
    GENERATED = 'GENERATED'


class CertificateConfiguration(BaseModel):
    """
    <p>Determines whether a TLS/SSL certificate is generated for a fleet. This feature must be enabled when creating the fleet. All instances in a fleet share the same certificate. The certificate can be retrieved by calling the <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-serversdk.html">GameLift Server SDK</a> operation <code>GetInstanceCertificate</code>. </p> <p>A fleet's certificate configuration is part of <a>FleetAttributes</a>.</p>
    """

    CertificateType: CertificateType


class GameServerGroupNameOrArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[a-zA-Z0-9-\\.]+|^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]+',
        ),
    ]


class GameServerId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=3, regex='[a-zA-Z0-9-\\.]+')
    ]


class GameServerData(NonBlankAndLengthConstraintString):
    pass


class ComparisonOperatorType(Enum):
    GreaterThanOrEqualToThreshold = 'GreaterThanOrEqualToThreshold'
    GreaterThanThreshold = 'GreaterThanThreshold'
    LessThanThreshold = 'LessThanThreshold'
    LessThanOrEqualToThreshold = 'LessThanOrEqualToThreshold'


class S3Location(BaseModel):
    """
    The location in Amazon S3 where build or script files are stored for access by Amazon GameLift. This location is specified in <a>CreateBuild</a>, <a>CreateScript</a>, and <a>UpdateScript</a> requests.
    """

    Bucket: Optional[NonEmptyString] = None
    Key: Optional[NonEmptyString] = None
    RoleArn: Optional[NonEmptyString] = None
    ObjectVersion: Optional[NonEmptyString] = None


class ScriptIdOrArn(BaseModel):
    __root__: Annotated[str, Field(regex='^script-\\S+|^arn:.*:script\\/script-\\S+')]


class EC2InstanceType(Enum):
    t2_micro = 't2.micro'
    t2_small = 't2.small'
    t2_medium = 't2.medium'
    t2_large = 't2.large'
    c3_large = 'c3.large'
    c3_xlarge = 'c3.xlarge'
    c3_2xlarge = 'c3.2xlarge'
    c3_4xlarge = 'c3.4xlarge'
    c3_8xlarge = 'c3.8xlarge'
    c4_large = 'c4.large'
    c4_xlarge = 'c4.xlarge'
    c4_2xlarge = 'c4.2xlarge'
    c4_4xlarge = 'c4.4xlarge'
    c4_8xlarge = 'c4.8xlarge'
    c5_large = 'c5.large'
    c5_xlarge = 'c5.xlarge'
    c5_2xlarge = 'c5.2xlarge'
    c5_4xlarge = 'c5.4xlarge'
    c5_9xlarge = 'c5.9xlarge'
    c5_12xlarge = 'c5.12xlarge'
    c5_18xlarge = 'c5.18xlarge'
    c5_24xlarge = 'c5.24xlarge'
    c5a_large = 'c5a.large'
    c5a_xlarge = 'c5a.xlarge'
    c5a_2xlarge = 'c5a.2xlarge'
    c5a_4xlarge = 'c5a.4xlarge'
    c5a_8xlarge = 'c5a.8xlarge'
    c5a_12xlarge = 'c5a.12xlarge'
    c5a_16xlarge = 'c5a.16xlarge'
    c5a_24xlarge = 'c5a.24xlarge'
    r3_large = 'r3.large'
    r3_xlarge = 'r3.xlarge'
    r3_2xlarge = 'r3.2xlarge'
    r3_4xlarge = 'r3.4xlarge'
    r3_8xlarge = 'r3.8xlarge'
    r4_large = 'r4.large'
    r4_xlarge = 'r4.xlarge'
    r4_2xlarge = 'r4.2xlarge'
    r4_4xlarge = 'r4.4xlarge'
    r4_8xlarge = 'r4.8xlarge'
    r4_16xlarge = 'r4.16xlarge'
    r5_large = 'r5.large'
    r5_xlarge = 'r5.xlarge'
    r5_2xlarge = 'r5.2xlarge'
    r5_4xlarge = 'r5.4xlarge'
    r5_8xlarge = 'r5.8xlarge'
    r5_12xlarge = 'r5.12xlarge'
    r5_16xlarge = 'r5.16xlarge'
    r5_24xlarge = 'r5.24xlarge'
    r5a_large = 'r5a.large'
    r5a_xlarge = 'r5a.xlarge'
    r5a_2xlarge = 'r5a.2xlarge'
    r5a_4xlarge = 'r5a.4xlarge'
    r5a_8xlarge = 'r5a.8xlarge'
    r5a_12xlarge = 'r5a.12xlarge'
    r5a_16xlarge = 'r5a.16xlarge'
    r5a_24xlarge = 'r5a.24xlarge'
    m3_medium = 'm3.medium'
    m3_large = 'm3.large'
    m3_xlarge = 'm3.xlarge'
    m3_2xlarge = 'm3.2xlarge'
    m4_large = 'm4.large'
    m4_xlarge = 'm4.xlarge'
    m4_2xlarge = 'm4.2xlarge'
    m4_4xlarge = 'm4.4xlarge'
    m4_10xlarge = 'm4.10xlarge'
    m5_large = 'm5.large'
    m5_xlarge = 'm5.xlarge'
    m5_2xlarge = 'm5.2xlarge'
    m5_4xlarge = 'm5.4xlarge'
    m5_8xlarge = 'm5.8xlarge'
    m5_12xlarge = 'm5.12xlarge'
    m5_16xlarge = 'm5.16xlarge'
    m5_24xlarge = 'm5.24xlarge'
    m5a_large = 'm5a.large'
    m5a_xlarge = 'm5a.xlarge'
    m5a_2xlarge = 'm5a.2xlarge'
    m5a_4xlarge = 'm5a.4xlarge'
    m5a_8xlarge = 'm5a.8xlarge'
    m5a_12xlarge = 'm5a.12xlarge'
    m5a_16xlarge = 'm5a.16xlarge'
    m5a_24xlarge = 'm5a.24xlarge'


class ProtectionPolicy(Enum):
    NoProtection = 'NoProtection'
    FullProtection = 'FullProtection'


class FleetType(Enum):
    ON_DEMAND = 'ON_DEMAND'
    SPOT = 'SPOT'


class FleetIdOrArn(BaseModel):
    __root__: Annotated[str, Field(regex='^fleet-\\S+|^arn:.*:fleet\\/fleet-\\S+')]


class FleetArn(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:.*:fleet\\/fleet-\\S+')]


class GameServerGroupName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9-\\.]+')
    ]


class IamRoleArn(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^arn:.*:role\\/[\\w+=,.@-]+')
    ]


class WholeNumber(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class PositiveInteger(PositiveLong):
    pass


class GameServerProtectionPolicy(Enum):
    NO_PROTECTION = 'NO_PROTECTION'
    FULL_PROTECTION = 'FULL_PROTECTION'


class IdStringModel(BaseModel):
    __root__: Annotated[str, Field(max_length=48, min_length=1, regex='[a-zA-Z0-9-]+')]


class LargeGameSessionData(BaseModel):
    __root__: Annotated[str, Field(max_length=262144, min_length=1)]


class LocationStringModel(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-z]+(-([a-z]+|\\d))*')
    ]


class GameSessionQueueName(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9-]+')]


class QueueCustomEventData(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0, regex='[\\s\\S]*')]


class QueueSnsArnStringModel(BaseModel):
    __root__: Annotated[
        str, Field(max_length=300, min_length=0, regex='[a-zA-Z0-9:_-]*(\\.fifo)?')
    ]


class QueueArnsList(BaseModel):
    __root__: List[ArnStringModel]


class MatchmakingRequestTimeoutInteger(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=43200.0)]


class MatchmakingAcceptanceTimeoutInteger(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=600.0)]


class MatchmakingRuleSetName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[a-zA-Z0-9-\\.]*|^arn:.*:matchmakingruleset\\/[a-zA-Z0-9-\\.]*',
        ),
    ]


class SnsArnStringModel(BaseModel):
    __root__: Annotated[
        str, Field(max_length=300, min_length=0, regex='[a-zA-Z0-9:_/-]*(.fifo)?')
    ]


class CustomEventData(AutoScalingGroupArn):
    pass


class GameSessionData(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1)]


class FlexMatchMode(Enum):
    STANDALONE = 'STANDALONE'
    WITH_QUEUE = 'WITH_QUEUE'


class RuleSetBody(BaseModel):
    __root__: Annotated[str, Field(max_length=65535, min_length=1)]


class PlayerData(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class PlayerIdList(BaseModel):
    __root__: Annotated[List[NonZeroAndMaxString], Field(max_items=25, min_items=1)]


class PlayerDataMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ZipBlob(BaseModel):
    __root__: Annotated[str, Field(max_length=5000000)]


class VpcPeeringAuthorization(BaseModel):
    """
    <p>Represents an authorization for a VPC peering connection between the VPC for an Amazon GameLift fleet and another VPC on an account you have access to. This authorization must exist and be valid for the peering connection to be established. Authorizations are valid for 24 hours after they are issued.</p> <p> <b>Related actions</b> </p> <p> <a>CreateVpcPeeringAuthorization</a> | <a>DescribeVpcPeeringAuthorizations</a> | <a>DeleteVpcPeeringAuthorization</a> | <a>CreateVpcPeeringConnection</a> | <a>DescribeVpcPeeringConnections</a> | <a>DeleteVpcPeeringConnection</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    GameLiftAwsAccountId: Optional[NonZeroAndMaxString] = None
    PeerVpcAwsAccountId: Optional[NonZeroAndMaxString] = None
    PeerVpcId: Optional[NonZeroAndMaxString] = None
    CreationTime: Optional[Timestamp] = None
    ExpirationTime: Optional[Timestamp] = None


class FleetId(BaseModel):
    __root__: Annotated[str, Field(regex='^fleet-\\S+')]


class LocationList(BaseModel):
    __root__: Annotated[List[LocationStringModel], Field(max_items=100, min_items=1)]


class GameServerGroupDeleteOption(Enum):
    SAFE_DELETE = 'SAFE_DELETE'
    FORCE_DELETE = 'FORCE_DELETE'
    RETAIN = 'RETAIN'


class GameSessionQueueNameOrArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[a-zA-Z0-9-]+|^arn:.*:gamesessionqueue\\/[a-zA-Z0-9-]+',
        ),
    ]


class MatchmakingConfigurationName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[a-zA-Z0-9-\\.]*|^arn:.*:matchmakingconfiguration\\/[a-zA-Z0-9-\\.]*',
        ),
    ]


class FleetIdOrArnList(BaseModel):
    __root__: Annotated[List[FleetIdOrArn], Field(min_items=1)]


class FleetUtilization(BaseModel):
    """
    <p>Current resource utilization statistics in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetUtilization</a> | <a>DescribeFleetLocationUtilization</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    ActiveServerProcessCount: Optional[WholeNumber] = None
    ActiveGameSessionCount: Optional[WholeNumber] = None
    CurrentPlayerSessionCount: Optional[WholeNumber] = None
    MaximumPlayerSessionCount: Optional[WholeNumber] = None
    Location: Optional[LocationStringModel] = None


class LocationUpdateStatus(Enum):
    PENDING_UPDATE = 'PENDING_UPDATE'


class FleetUtilizationList(BaseModel):
    __root__: List[FleetUtilization]


class GameSessionQueueNameOrArnList(BaseModel):
    __root__: List[GameSessionQueueNameOrArn]


class InstanceId(BaseModel):
    __root__: Annotated[str, Field(regex='[a-zA-Z0-9\\.-]+')]


class MatchmakingConfigurationNameList(BaseModel):
    __root__: List[MatchmakingConfigurationName]


class MatchmakingIdList(BaseModel):
    __root__: List[MatchmakingIdStringModel]


class MatchmakingRuleSetNameList(BaseModel):
    __root__: Annotated[List[MatchmakingRuleSetName], Field(max_items=10, min_items=1)]


class RuleSetLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class PlayerSessionId(BaseModel):
    __root__: Annotated[str, Field(regex='^psess-\\S+')]


class ScalingStatusType(Enum):
    ACTIVE = 'ACTIVE'
    UPDATE_REQUESTED = 'UPDATE_REQUESTED'
    UPDATING = 'UPDATING'
    DELETE_REQUESTED = 'DELETE_REQUESTED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    ERROR = 'ERROR'


class VpcPeeringAuthorizationList(BaseModel):
    __root__: List[VpcPeeringAuthorization]


class DesiredPlayerSession(BaseModel):
    """
    Player information for use when creating player sessions using a game session placement request with <a>StartGameSessionPlacement</a>.
    """

    PlayerId: Optional[NonZeroAndMaxString] = None
    PlayerData: Optional[PlayerData] = None


class DesiredPlayerSessionList(BaseModel):
    __root__: List[DesiredPlayerSession]


class DnsName(FreeText):
    pass


class Double(DoubleObject):
    pass


class EC2InstanceCounts(BaseModel):
    """
    <p>Resource capacity settings. Fleet capacity is measured in EC2 instances. Pending and terminating counts are non-zero when the fleet capacity is adjusting to a scaling event or if access to resources is temporarily affected.</p> <p>EC2 instance counts are part of <a>FleetCapacity</a>.</p>
    """

    DESIRED: Optional[WholeNumber] = None
    MINIMUM: Optional[WholeNumber] = None
    MAXIMUM: Optional[WholeNumber] = None
    PENDING: Optional[WholeNumber] = None
    ACTIVE: Optional[WholeNumber] = None
    IDLE: Optional[WholeNumber] = None
    TERMINATING: Optional[WholeNumber] = None


class EC2InstanceLimit(BaseModel):
    """
    <p>The GameLift service limits for an EC2 instance type and current utilization. GameLift allows AWS accounts a maximum number of instances, per instance type, per AWS Region or location, for use with GameLift. You can request an limit increase for your account by using the <b>Service limits</b> page in the GameLift console.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeEC2InstanceLimits</a> </p>
    """

    EC2InstanceType: Optional[EC2InstanceType] = None
    CurrentInstances: Optional[WholeNumber] = None
    InstanceLimit: Optional[WholeNumber] = None
    Location: Optional[LocationStringModel] = None


class EventCode(Enum):
    GENERIC_EVENT = 'GENERIC_EVENT'
    FLEET_CREATED = 'FLEET_CREATED'
    FLEET_DELETED = 'FLEET_DELETED'
    FLEET_SCALING_EVENT = 'FLEET_SCALING_EVENT'
    FLEET_STATE_DOWNLOADING = 'FLEET_STATE_DOWNLOADING'
    FLEET_STATE_VALIDATING = 'FLEET_STATE_VALIDATING'
    FLEET_STATE_BUILDING = 'FLEET_STATE_BUILDING'
    FLEET_STATE_ACTIVATING = 'FLEET_STATE_ACTIVATING'
    FLEET_STATE_ACTIVE = 'FLEET_STATE_ACTIVE'
    FLEET_STATE_ERROR = 'FLEET_STATE_ERROR'
    FLEET_INITIALIZATION_FAILED = 'FLEET_INITIALIZATION_FAILED'
    FLEET_BINARY_DOWNLOAD_FAILED = 'FLEET_BINARY_DOWNLOAD_FAILED'
    FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND = 'FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND'
    FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE = (
        'FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE'
    )
    FLEET_VALIDATION_TIMED_OUT = 'FLEET_VALIDATION_TIMED_OUT'
    FLEET_ACTIVATION_FAILED = 'FLEET_ACTIVATION_FAILED'
    FLEET_ACTIVATION_FAILED_NO_INSTANCES = 'FLEET_ACTIVATION_FAILED_NO_INSTANCES'
    FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED = (
        'FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED'
    )
    SERVER_PROCESS_INVALID_PATH = 'SERVER_PROCESS_INVALID_PATH'
    SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT = (
        'SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT'
    )
    SERVER_PROCESS_PROCESS_READY_TIMEOUT = 'SERVER_PROCESS_PROCESS_READY_TIMEOUT'
    SERVER_PROCESS_CRASHED = 'SERVER_PROCESS_CRASHED'
    SERVER_PROCESS_TERMINATED_UNHEALTHY = 'SERVER_PROCESS_TERMINATED_UNHEALTHY'
    SERVER_PROCESS_FORCE_TERMINATED = 'SERVER_PROCESS_FORCE_TERMINATED'
    SERVER_PROCESS_PROCESS_EXIT_TIMEOUT = 'SERVER_PROCESS_PROCESS_EXIT_TIMEOUT'
    GAME_SESSION_ACTIVATION_TIMEOUT = 'GAME_SESSION_ACTIVATION_TIMEOUT'
    FLEET_CREATION_EXTRACTING_BUILD = 'FLEET_CREATION_EXTRACTING_BUILD'
    FLEET_CREATION_RUNNING_INSTALLER = 'FLEET_CREATION_RUNNING_INSTALLER'
    FLEET_CREATION_VALIDATING_RUNTIME_CONFIG = (
        'FLEET_CREATION_VALIDATING_RUNTIME_CONFIG'
    )
    FLEET_VPC_PEERING_SUCCEEDED = 'FLEET_VPC_PEERING_SUCCEEDED'
    FLEET_VPC_PEERING_FAILED = 'FLEET_VPC_PEERING_FAILED'
    FLEET_VPC_PEERING_DELETED = 'FLEET_VPC_PEERING_DELETED'
    INSTANCE_INTERRUPTED = 'INSTANCE_INTERRUPTED'


class Event(BaseModel):
    """
    <p>Log entry describing an event that involves GameLift resources (such as a fleet). In addition to tracking activity, event codes and messages can provide additional information for troubleshooting and debugging problems.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetEvents</a> </p>
    """

    EventId: Optional[NonZeroAndMaxString] = None
    ResourceId: Optional[NonZeroAndMaxString] = None
    EventCode: Optional[EventCode] = None
    Message: Optional[NonEmptyString] = None
    EventTime: Optional[Timestamp] = None
    PreSignedLogUrl: Optional[NonZeroAndMaxString] = None


class FleetAction(Enum):
    AUTO_SCALING = 'AUTO_SCALING'


class FleetActionList(BaseModel):
    __root__: Annotated[List[FleetAction], Field(max_items=1, min_items=1)]


class FleetStatus(Enum):
    NEW = 'NEW'
    DOWNLOADING = 'DOWNLOADING'
    VALIDATING = 'VALIDATING'
    BUILDING = 'BUILDING'
    ACTIVATING = 'ACTIVATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    ERROR = 'ERROR'
    TERMINATED = 'TERMINATED'


class ScriptId(BaseModel):
    __root__: Annotated[str, Field(regex='^script-\\S+')]


class ScriptArn(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:.*:script\\/script-\\S+')]


class FleetIdList(BaseModel):
    __root__: Annotated[List[FleetId], Field(min_items=1)]


class Float(DoubleObject):
    pass


class GamePropertyKey(BaseModel):
    __root__: Annotated[str, Field(max_length=32)]


class GamePropertyValue(BaseModel):
    __root__: Annotated[str, Field(max_length=96)]


class GameProperty(BaseModel):
    """
    Set of key-value pairs that contain information about a game session. When included in a game session request, these properties communicate details to be used when setting up the new game session. For example, a game property might specify a game mode, level, or map. Game properties are passed to the game server process when initiating a new game session. For more information, see the <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-client-api.html#gamelift-sdk-client-api-create"> GameLift Developer Guide</a>.
    """

    Key: GamePropertyKey
    Value: GamePropertyValue


class GameServerGroupArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]*',
        ),
    ]


class GameServerInstanceId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=19, min_length=19, regex='^i-[0-9a-zA-Z]{17}$')
    ]


class GameServerConnectionInfo(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1, regex='.*\\S.*')]


class GameServerClaimStatus(Enum):
    CLAIMED = 'CLAIMED'


class GameServerUtilizationStatus(Enum):
    AVAILABLE = 'AVAILABLE'
    UTILIZED = 'UTILIZED'


class GameServerGroupStatus(Enum):
    NEW = 'NEW'
    ACTIVATING = 'ACTIVATING'
    ACTIVE = 'ACTIVE'
    DELETE_SCHEDULED = 'DELETE_SCHEDULED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    ERROR = 'ERROR'


class GameServerGroupAction(Enum):
    REPLACE_INSTANCE_TYPES = 'REPLACE_INSTANCE_TYPES'


class GameServerGroupInstanceType(Enum):
    c4_large = 'c4.large'
    c4_xlarge = 'c4.xlarge'
    c4_2xlarge = 'c4.2xlarge'
    c4_4xlarge = 'c4.4xlarge'
    c4_8xlarge = 'c4.8xlarge'
    c5_large = 'c5.large'
    c5_xlarge = 'c5.xlarge'
    c5_2xlarge = 'c5.2xlarge'
    c5_4xlarge = 'c5.4xlarge'
    c5_9xlarge = 'c5.9xlarge'
    c5_12xlarge = 'c5.12xlarge'
    c5_18xlarge = 'c5.18xlarge'
    c5_24xlarge = 'c5.24xlarge'
    c5a_large = 'c5a.large'
    c5a_xlarge = 'c5a.xlarge'
    c5a_2xlarge = 'c5a.2xlarge'
    c5a_4xlarge = 'c5a.4xlarge'
    c5a_8xlarge = 'c5a.8xlarge'
    c5a_12xlarge = 'c5a.12xlarge'
    c5a_16xlarge = 'c5a.16xlarge'
    c5a_24xlarge = 'c5a.24xlarge'
    r4_large = 'r4.large'
    r4_xlarge = 'r4.xlarge'
    r4_2xlarge = 'r4.2xlarge'
    r4_4xlarge = 'r4.4xlarge'
    r4_8xlarge = 'r4.8xlarge'
    r4_16xlarge = 'r4.16xlarge'
    r5_large = 'r5.large'
    r5_xlarge = 'r5.xlarge'
    r5_2xlarge = 'r5.2xlarge'
    r5_4xlarge = 'r5.4xlarge'
    r5_8xlarge = 'r5.8xlarge'
    r5_12xlarge = 'r5.12xlarge'
    r5_16xlarge = 'r5.16xlarge'
    r5_24xlarge = 'r5.24xlarge'
    r5a_large = 'r5a.large'
    r5a_xlarge = 'r5a.xlarge'
    r5a_2xlarge = 'r5a.2xlarge'
    r5a_4xlarge = 'r5a.4xlarge'
    r5a_8xlarge = 'r5a.8xlarge'
    r5a_12xlarge = 'r5a.12xlarge'
    r5a_16xlarge = 'r5a.16xlarge'
    r5a_24xlarge = 'r5a.24xlarge'
    m4_large = 'm4.large'
    m4_xlarge = 'm4.xlarge'
    m4_2xlarge = 'm4.2xlarge'
    m4_4xlarge = 'm4.4xlarge'
    m4_10xlarge = 'm4.10xlarge'
    m5_large = 'm5.large'
    m5_xlarge = 'm5.xlarge'
    m5_2xlarge = 'm5.2xlarge'
    m5_4xlarge = 'm5.4xlarge'
    m5_8xlarge = 'm5.8xlarge'
    m5_12xlarge = 'm5.12xlarge'
    m5_16xlarge = 'm5.16xlarge'
    m5_24xlarge = 'm5.24xlarge'
    m5a_large = 'm5a.large'
    m5a_xlarge = 'm5a.xlarge'
    m5a_2xlarge = 'm5a.2xlarge'
    m5a_4xlarge = 'm5a.4xlarge'
    m5a_8xlarge = 'm5a.8xlarge'
    m5a_12xlarge = 'm5a.12xlarge'
    m5a_16xlarge = 'm5a.16xlarge'
    m5a_24xlarge = 'm5a.24xlarge'


class GameServerHealthCheck(Enum):
    HEALTHY = 'HEALTHY'


class GameServerInstanceStatus(Enum):
    ACTIVE = 'ACTIVE'
    DRAINING = 'DRAINING'
    SPOT_TERMINATING = 'SPOT_TERMINATING'


class GameServerInstance(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p> Additional properties, including status, that describe an EC2 instance in a game server group. Instance configurations are set with game server group properties (see <code>DescribeGameServerGroup</code> and with the EC2 launch template that was used when creating the game server group. </p> <p>Retrieve game server instances for a game server group by calling <code>DescribeGameServerInstances</code>. </p> <p> <b>Related actions</b> </p> <p> <a>CreateGameServerGroup</a> | <a>ListGameServerGroups</a> | <a>DescribeGameServerGroup</a> | <a>UpdateGameServerGroup</a> | <a>DeleteGameServerGroup</a> | <a>ResumeGameServerGroup</a> | <a>SuspendGameServerGroup</a> | <a>DescribeGameServerInstances</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/reference-awssdk-fleetiq.html">All APIs by task</a> </p>
    """

    GameServerGroupName: Optional[GameServerGroupName] = None
    GameServerGroupArn: Optional[GameServerGroupArn] = None
    InstanceId: Optional[GameServerInstanceId] = None
    InstanceStatus: Optional[GameServerInstanceStatus] = None


class GameSessionStatus(Enum):
    ACTIVE = 'ACTIVE'
    ACTIVATING = 'ACTIVATING'
    TERMINATED = 'TERMINATED'
    TERMINATING = 'TERMINATING'
    ERROR = 'ERROR'


class GameSessionStatusReason(Enum):
    INTERRUPTED = 'INTERRUPTED'


class IpAddress(FreeText):
    pass


class PortNumber(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=60000.0)]


class PlayerSessionCreationPolicy(Enum):
    ACCEPT_ALL = 'ACCEPT_ALL'
    DENY_ALL = 'DENY_ALL'


class MatchmakerData(BaseModel):
    __root__: Annotated[str, Field(max_length=390000, min_length=1)]


class GameSessionActivationTimeoutSeconds(MatchmakingAcceptanceTimeoutInteger):
    pass


class StringModel(FreeText):
    pass


class GameSessionPlacementState(Enum):
    PENDING = 'PENDING'
    FULFILLED = 'FULFILLED'
    CANCELLED = 'CANCELLED'
    TIMED_OUT = 'TIMED_OUT'
    FAILED = 'FAILED'


class GameSessionQueueArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='^arn:.*:gamesessionqueue\\/[a-zA-Z0-9-]+',
        ),
    ]


class GameSessionQueueDestination(BaseModel):
    """
    <p>A fleet or alias designated in a game session queue. Queues fulfill requests for new game sessions by placing a new game session on any of the queue's destinations. </p> <p>Destinations are part of a <a>GameSessionQueue</a>.</p>
    """

    DestinationArn: Optional[ArnStringModel] = None


class InstanceStatus1(Enum):
    PENDING = 'PENDING'
    ACTIVE = 'ACTIVE'
    TERMINATING = 'TERMINATING'


class Instance(BaseModel):
    """
    <p>Represents an EC2 instance of virtual computing resources that hosts one or more game servers. In GameLift, a fleet can contain zero or more instances.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeInstances</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    InstanceId: Optional[InstanceId] = None
    IpAddress: Optional[IpAddress] = None
    DnsName: Optional[DnsName] = None
    OperatingSystem: Optional[OperatingSystem] = None
    Type: Optional[EC2InstanceType] = None
    Status: Optional[InstanceStatus1] = None
    CreationTime: Optional[Timestamp] = None
    Location: Optional[LocationStringModel] = None


class InstanceCredentials(BaseModel):
    """
    Set of credentials required to remotely access a fleet instance. Access credentials are requested by calling <a>GetInstanceAccess</a> and returned in an <a>InstanceAccess</a> object.
    """

    UserName: Optional[NonEmptyString] = None
    Secret: Optional[NonEmptyString] = None


class WeightedCapacity(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=3,
            min_length=1,
            regex='^[\\u0031-\\u0039][\\u0030-\\u0039]{0,2}$',
        ),
    ]


class InstanceDefinition(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>An allowed instance type for a <a>GameServerGroup</a>. All game server groups must have at least two instance types defined for it. GameLift FleetIQ periodically evaluates each defined instance type for viability. It then updates the Auto Scaling group with the list of viable instance types.</p>
    """

    InstanceType: GameServerGroupInstanceType
    WeightedCapacity: Optional[WeightedCapacity] = None


class Integer(BaseModel):
    __root__: int


class NonBlankString(BaseModel):
    __root__: Annotated[str, Field(regex='[^\\s]+')]


class IpProtocol(Enum):
    TCP = 'TCP'
    UDP = 'UDP'


class IpPermission(BaseModel):
    """
    <p>A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an instance in a fleet. New game sessions are assigned an IP address/port number combination, which must fall into the fleet's allowed ranges. Fleets with custom game builds must have permissions explicitly set. For Realtime Servers fleets, GameLift automatically opens two port ranges, one for TCP messaging and one for UDP.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetPortSettings</a> </p>
    """

    FromPort: PortNumber
    ToPort: PortNumber
    IpRange: NonBlankString
    Protocol: IpProtocol


class LatencyMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LaunchTemplateId(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class LaunchTemplateName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=3, regex='[a-zA-Z0-9\\(\\)\\.\\-/_]+')
    ]


class LaunchTemplateVersion(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class RoutingStrategyType(Enum):
    SIMPLE = 'SIMPLE'
    TERMINAL = 'TERMINAL'


class SortOrder(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class LocationState(BaseModel):
    """
    <p>A fleet location and its life-cycle state. A location state object might be used to describe a fleet's remote location or home Region. Life-cycle state tracks the progress of launching the first instance in a new location and preparing it for game hosting, and then removing all instances and deleting the location from the fleet.</p> <p> <b>Related actions</b> </p> <p> <a>CreateFleet</a> | <a>CreateFleetLocations</a> | <a>DeleteFleetLocations</a> </p>
    """

    Location: Optional[LocationStringModel] = None
    Status: Optional[FleetStatus] = None


class LocationAttributes(BaseModel):
    """
    <p>Represents a location in a multi-location fleet.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetLocationAttributes</a> </p>
    """

    LocationState: Optional[LocationState] = None
    StoppedActions: Optional[FleetActionList] = None
    UpdateStatus: Optional[LocationUpdateStatus] = None


class LocationConfiguration(BaseModel):
    """
    <p>A remote location where a multi-location fleet can deploy EC2 instances for game hosting. </p> <p> <b>Related actions</b> </p> <p> <a>CreateFleet</a> </p>
    """

    Location: Optional[LocationStringModel] = None


class MatchedPlayerSession(BaseModel):
    """
    <p>Represents a new player session that is created as a result of a successful FlexMatch match. A successful match automatically creates new player sessions for every player ID in the original matchmaking request. </p> <p>When players connect to the match's game session, they must include both player ID and player session ID in order to claim their assigned player slot.</p>
    """

    PlayerId: Optional[NonZeroAndMaxString] = None
    PlayerSessionId: Optional[PlayerSessionId] = None


class MatchmakingConfigurationArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Data type used for Matchmaking Configuration ARN.',
            regex='^arn:.*:matchmakingconfiguration\\/[a-zA-Z0-9-\\.]*',
        ),
    ]


class MatchmakingRuleSetArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Data type used for Matchmaking RuleSet ARN.',
            regex='^arn:.*:matchmakingruleset\\/[a-zA-Z0-9-\\.]*',
        ),
    ]


class MatchmakingConfigurationStatus(Enum):
    CANCELLED = 'CANCELLED'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    PLACING = 'PLACING'
    QUEUED = 'QUEUED'
    REQUIRES_ACCEPTANCE = 'REQUIRES_ACCEPTANCE'
    SEARCHING = 'SEARCHING'
    TIMED_OUT = 'TIMED_OUT'


class MaxConcurrentGameSessionActivations(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=2147483647.0)]


class MetricGroup(LaunchTemplateId):
    pass


class MetricName(Enum):
    ActivatingGameSessions = 'ActivatingGameSessions'
    ActiveGameSessions = 'ActiveGameSessions'
    ActiveInstances = 'ActiveInstances'
    AvailableGameSessions = 'AvailableGameSessions'
    AvailablePlayerSessions = 'AvailablePlayerSessions'
    CurrentPlayerSessions = 'CurrentPlayerSessions'
    IdleInstances = 'IdleInstances'
    PercentAvailableGameSessions = 'PercentAvailableGameSessions'
    PercentIdleInstances = 'PercentIdleInstances'
    QueueDepth = 'QueueDepth'
    WaitTime = 'WaitTime'


class NonNegativeDouble(BaseModel):
    __root__: Annotated[float, Field(ge=0.0)]


class PlacedPlayerSession(MatchedPlayerSession):
    """
    <p>Information about a player session that was created as part of a <a>StartGameSessionPlacement</a> request. This object contains only the player ID and player session ID. To retrieve full details on a player session, call <a>DescribePlayerSessions</a> with the player session ID.</p> <p> <b>Related actions</b> </p> <p> <a>CreatePlayerSession</a> | <a>CreatePlayerSessions</a> | <a>DescribePlayerSessions</a> | <a>StartGameSessionPlacement</a> | <a>DescribeGameSessionPlacement</a> | <a>StopGameSessionPlacement</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    pass


class PlayerAttributeMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Player(BaseModel):
    """
    Represents a player in matchmaking. When starting a matchmaking request, a player has a player ID, attributes, and may have latency data. Team information is added after a match has been successfully completed.
    """

    PlayerId: Optional[NonZeroAndMaxString] = None
    PlayerAttributes: Optional[PlayerAttributeMap] = None
    Team: Optional[NonZeroAndMaxString] = None
    LatencyInMs: Optional[LatencyMap] = None


class PlayerLatency(BaseModel):
    """
    Regional latency information for a player, used when requesting a new game session with <a>StartGameSessionPlacement</a>. This value indicates the amount of time lag that exists when the player is connected to a fleet in the specified Region. The relative difference between a player's latency values for multiple Regions are used to determine which fleets are best suited to place a new game session for the player.
    """

    PlayerId: Optional[NonZeroAndMaxString] = None
    RegionIdentifier: Optional[NonZeroAndMaxString] = None
    LatencyInMilliseconds: Optional[Float] = None


class PlayerLatencyPolicy(BaseModel):
    """
    <p>Sets a latency cap for individual players when placing a game session. With a latency policy in force, a game session cannot be placed in a fleet location where a player reports latency higher than the cap. Latency policies are used only with placement request that provide player latency information. Player latency policies can be stacked to gradually relax latency requirements over time. </p> <p>Latency policies are part of a <a>GameSessionQueue</a>.</p>
    """

    MaximumIndividualPlayerLatencyMilliseconds: Optional[WholeNumber] = None
    PolicyDurationSeconds: Optional[WholeNumber] = None


class PlayerSessionStatus(Enum):
    RESERVED = 'RESERVED'
    ACTIVE = 'ACTIVE'
    COMPLETED = 'COMPLETED'
    TIMEDOUT = 'TIMEDOUT'


class PolicyType(Enum):
    RuleBased = 'RuleBased'
    TargetBased = 'TargetBased'


class PriorityType(Enum):
    LATENCY = 'LATENCY'
    COST = 'COST'
    DESTINATION = 'DESTINATION'
    LOCATION = 'LOCATION'


class ScalingAdjustmentType(Enum):
    ChangeInCapacity = 'ChangeInCapacity'
    ExactCapacity = 'ExactCapacity'
    PercentChangeInCapacity = 'PercentChangeInCapacity'


class TargetConfiguration(BaseModel):
    """
    <p>Settings for a target-based scaling policy (see <a>ScalingPolicy</a>. A target-based policy tracks a particular fleet metric specifies a target value for the metric. As player usage changes, the policy triggers Amazon GameLift to adjust capacity so that the metric returns to the target value. The target configuration specifies settings as needed for the target based policy, including the target value. </p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetCapacity</a> | <a>UpdateFleetCapacity</a> | <a>DescribeEC2InstanceLimits</a> | <a>PutScalingPolicy</a> | <a>DescribeScalingPolicies</a> | <a>DeleteScalingPolicy</a> | <a>StopFleetActions</a> | <a>StartFleetActions</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    TargetValue: Double


class ScalingPolicy(BaseModel):
    """
    <p>Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetCapacity</a> | <a>UpdateFleetCapacity</a> | <a>DescribeEC2InstanceLimits</a> | <a>PutScalingPolicy</a> | <a>DescribeScalingPolicies</a> | <a>DeleteScalingPolicy</a> | <a>StopFleetActions</a> | <a>StartFleetActions</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    Name: Optional[NonZeroAndMaxString] = None
    Status: Optional[ScalingStatusType] = None
    ScalingAdjustment: Optional[Integer] = None
    ScalingAdjustmentType: Optional[ScalingAdjustmentType] = None
    ComparisonOperator: Optional[ComparisonOperatorType] = None
    Threshold: Optional[Double] = None
    EvaluationPeriods: Optional[PositiveInteger] = None
    MetricName: Optional[MetricName] = None
    PolicyType: Optional[PolicyType] = None
    TargetConfiguration: Optional[TargetConfiguration] = None
    UpdateStatus: Optional[LocationUpdateStatus] = None
    Location: Optional[LocationStringModel] = None


class ServerProcess(BaseModel):
    """
    A set of instructions for launching server processes on each instance in a fleet. Server processes run either an executable in a custom game build or a Realtime Servers script. Server process configurations are part of a fleet's <a>RuntimeConfiguration</a>.
    """

    LaunchPath: NonZeroAndMaxString
    Parameters: Optional[NonZeroAndMaxString] = None
    ConcurrentExecutions: PositiveInteger


class TagKey(LaunchTemplateVersion):
    pass


class TagValue(AutoScalingGroupArn):
    pass


class Tag(BaseModel):
    """
    <p> A label that can be assigned to a GameLift resource. </p> <p> <b>Learn more</b> </p> <p> <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging AWS Resources</a> in the <i>AWS General Reference</i> </p> <p> <a href="http://aws.amazon.com/answers/account-management/aws-tagging-strategies/"> AWS Tagging Strategies</a> </p> <p> <b>Related actions</b> </p> <p> <a>TagResource</a> | <a>UntagResource</a> | <a>ListTagsForResource</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class VpcPeeringConnectionStatus(BaseModel):
    """
    Represents status information for a VPC peering connection. Status is associated with a <a>VpcPeeringConnection</a> object. Status codes and messages are provided from EC2 (see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VpcPeeringConnectionStateReason.html">VpcPeeringConnectionStateReason</a>). Connection status information is also communicated as a fleet <a>Event</a>.
    """

    Code: Optional[NonZeroAndMaxString] = None
    Message: Optional[NonZeroAndMaxString] = None


class VpcPeeringConnection(BaseModel):
    """
    <p>Represents a peering connection between a VPC on one of your AWS accounts and the VPC for your Amazon GameLift fleets. This record may be for an active peering connection or a pending connection that has not yet been established.</p> <p> <b>Related actions</b> </p> <p> <a>CreateVpcPeeringAuthorization</a> | <a>DescribeVpcPeeringAuthorizations</a> | <a>DeleteVpcPeeringAuthorization</a> | <a>CreateVpcPeeringConnection</a> | <a>DescribeVpcPeeringConnections</a> | <a>DeleteVpcPeeringConnection</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    IpV4CidrBlock: Optional[NonZeroAndMaxString] = None
    VpcPeeringConnectionId: Optional[NonZeroAndMaxString] = None
    Status: Optional[VpcPeeringConnectionStatus] = None
    PeerVpcId: Optional[NonZeroAndMaxString] = None
    GameLiftVpcId: Optional[NonZeroAndMaxString] = None


class VpcSubnet(BaseModel):
    __root__: Annotated[
        str, Field(max_length=24, min_length=15, regex='^subnet-[0-9a-z]+$')
    ]


class ClaimGameServerInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    GameServerId: Optional[GameServerId] = None
    GameServerData: Optional[GameServerData] = None


class CreateBuildOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Build: Optional[Build] = None
    UploadCredentials: Optional[AwsCredentials] = None
    StorageLocation: Optional[S3Location] = None


class CreatePlayerSessionInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameSessionId: ArnStringModel
    PlayerId: NonZeroAndMaxString
    PlayerData: Optional[PlayerData] = None


class CreatePlayerSessionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameSessionId: ArnStringModel
    PlayerIds: PlayerIdList
    PlayerDataMap: Optional[PlayerDataMap] = None


class CreateVpcPeeringAuthorizationOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    VpcPeeringAuthorization: Optional[VpcPeeringAuthorization] = None


class CreateVpcPeeringAuthorizationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameLiftAwsAccountId: NonZeroAndMaxString
    PeerVpcId: NonZeroAndMaxString


class CreateVpcPeeringConnectionInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetId
    PeerVpcAwsAccountId: NonZeroAndMaxString
    PeerVpcId: NonZeroAndMaxString


class DeleteAliasInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    AliasId: AliasIdOrArn


class DeleteBuildInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    BuildId: BuildIdOrArn


class DeleteFleetInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn


class DeleteFleetLocationsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Locations: LocationList


class DeleteGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    DeleteOption: Optional[GameServerGroupDeleteOption] = None


class DeleteGameSessionQueueInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: GameSessionQueueNameOrArn


class DeleteMatchmakingConfigurationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: MatchmakingConfigurationName


class DeleteMatchmakingRuleSetInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: MatchmakingRuleSetName


class DeleteScalingPolicyInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: NonZeroAndMaxString
    FleetId: FleetIdOrArn


class DeleteScriptInput(BaseModel):
    ScriptId: ScriptIdOrArn


class DeleteVpcPeeringAuthorizationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameLiftAwsAccountId: NonZeroAndMaxString
    PeerVpcId: NonZeroAndMaxString


class DeleteVpcPeeringConnectionInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetId
    VpcPeeringConnectionId: NonZeroAndMaxString


class DeregisterGameServerInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    GameServerId: GameServerId


class DescribeAliasInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    AliasId: AliasIdOrArn


class DescribeBuildOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Build: Optional[Build] = None


class DescribeBuildInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    BuildId: BuildIdOrArn


class DescribeEC2InstanceLimitsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    EC2InstanceType: Optional[EC2InstanceType] = None
    Location: Optional[LocationStringModel] = None


class DescribeFleetAttributesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetIds: Optional[FleetIdOrArnList] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetCapacityInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetIds: Optional[FleetIdOrArnList] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetEventsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetLocationAttributesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Locations: Optional[LocationList] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetLocationCapacityInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Location: LocationStringModel


class DescribeFleetLocationUtilizationOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetUtilization: Optional[FleetUtilization] = None


class DescribeFleetLocationUtilizationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Location: LocationStringModel


class DescribeFleetPortSettingsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Location: Optional[LocationStringModel] = None


class DescribeFleetUtilizationOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetUtilization: Optional[FleetUtilizationList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetUtilizationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetIds: Optional[FleetIdOrArnList] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameServerInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    GameServerId: GameServerId


class DescribeGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn


class DescribeGameSessionDetailsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    GameSessionId: Optional[ArnStringModel] = None
    AliasId: Optional[AliasIdOrArn] = None
    Location: Optional[LocationStringModel] = None
    StatusFilter: Optional[NonZeroAndMaxString] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameSessionPlacementInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    PlacementId: IdStringModel


class DescribeGameSessionQueuesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Names: Optional[GameSessionQueueNameOrArnList] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameSessionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    GameSessionId: Optional[ArnStringModel] = None
    AliasId: Optional[AliasIdOrArn] = None
    Location: Optional[LocationStringModel] = None
    StatusFilter: Optional[NonZeroAndMaxString] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeInstancesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    InstanceId: Optional[InstanceId] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None
    Location: Optional[LocationStringModel] = None


class DescribeMatchmakingInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    TicketIds: MatchmakingIdList


class DescribeMatchmakingConfigurationsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Names: Optional[MatchmakingConfigurationNameList] = None
    RuleSetName: Optional[MatchmakingRuleSetName] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeMatchmakingRuleSetsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Names: Optional[MatchmakingRuleSetNameList] = None
    Limit: Optional[RuleSetLimit] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribePlayerSessionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameSessionId: Optional[ArnStringModel] = None
    PlayerId: Optional[NonZeroAndMaxString] = None
    PlayerSessionId: Optional[PlayerSessionId] = None
    PlayerSessionStatusFilter: Optional[NonZeroAndMaxString] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeRuntimeConfigurationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn


class DescribeScalingPoliciesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    StatusFilter: Optional[ScalingStatusType] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None
    Location: Optional[LocationStringModel] = None


class DescribeScriptInput(BaseModel):
    ScriptId: ScriptIdOrArn


class DescribeVpcPeeringAuthorizationsOutput(BaseModel):
    VpcPeeringAuthorizations: Optional[VpcPeeringAuthorizationList] = None


class DescribeVpcPeeringConnectionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: Optional[FleetId] = None


class GetGameSessionLogUrlOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    PreSignedUrl: Optional[NonZeroAndMaxString] = None


class GetGameSessionLogUrlInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameSessionId: ArnStringModel


class GetInstanceAccessInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    InstanceId: InstanceId


class ListAliasesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    RoutingStrategyType: Optional[RoutingStrategyType] = None
    Name: Optional[NonEmptyString] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonEmptyString] = None


class ListBuildsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Builds: Optional[BuildList] = None
    NextToken: Optional[NonEmptyString] = None


class ListBuildsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Status: Optional[BuildStatus] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonEmptyString] = None


class ListFleetsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetIds: Optional[FleetIdList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ListFleetsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    BuildId: Optional[BuildIdOrArn] = None
    ScriptId: Optional[ScriptIdOrArn] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ListGameServerGroupsInput(BaseModel):
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ListGameServersInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    SortOrder: Optional[SortOrder] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ListScriptsInput(BaseModel):
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonEmptyString] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName


class PutScalingPolicyOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Name: Optional[NonZeroAndMaxString] = None


class PutScalingPolicyInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: NonZeroAndMaxString
    FleetId: FleetIdOrArn
    ScalingAdjustment: Optional[Integer] = None
    ScalingAdjustmentType: Optional[ScalingAdjustmentType] = None
    Threshold: Optional[Double] = None
    ComparisonOperator: Optional[ComparisonOperatorType] = None
    EvaluationPeriods: Optional[PositiveInteger] = None
    MetricName: MetricName
    PolicyType: Optional[PolicyType] = None
    TargetConfiguration: Optional[TargetConfiguration] = None


class RegisterGameServerInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    GameServerId: GameServerId
    InstanceId: GameServerInstanceId
    ConnectionInfo: Optional[GameServerConnectionInfo] = None
    GameServerData: Optional[GameServerData] = None


class RequestUploadCredentialsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    UploadCredentials: Optional[AwsCredentials] = None
    StorageLocation: Optional[S3Location] = None


class RequestUploadCredentialsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    BuildId: BuildIdOrArn


class ResolveAliasOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None


class ResolveAliasInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    AliasId: AliasIdOrArn


class SearchGameSessionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    AliasId: Optional[AliasIdOrArn] = None
    Location: Optional[LocationStringModel] = None
    FilterExpression: Optional[NonZeroAndMaxString] = None
    SortExpression: Optional[NonZeroAndMaxString] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class StartFleetActionsOutput(ResolveAliasOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class StartFleetActionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Actions: FleetActionList
    Location: Optional[LocationStringModel] = None


class StopFleetActionsOutput(ResolveAliasOutput):
    """
    Represents the input for a request operation.
    """

    pass


class StopFleetActionsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Actions: FleetActionList
    Location: Optional[LocationStringModel] = None


class StopGameSessionPlacementInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    PlacementId: IdStringModel


class StopMatchmakingInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    TicketId: MatchmakingIdStringModel


class UntagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    TagKeys: TagKeyList


class UpdateBuildOutput(DescribeBuildOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateBuildInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    BuildId: BuildIdOrArn
    Name: Optional[NonZeroAndMaxString] = None
    Version: Optional[NonZeroAndMaxString] = None


class UpdateFleetAttributesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetId] = None


class UpdateFleetCapacityOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    Location: Optional[LocationStringModel] = None


class UpdateFleetCapacityInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    DesiredInstances: Optional[WholeNumber] = None
    MinSize: Optional[WholeNumber] = None
    MaxSize: Optional[WholeNumber] = None
    Location: Optional[LocationStringModel] = None


class UpdateFleetPortSettingsOutput(UpdateFleetAttributesOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateGameServerInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    GameServerId: GameServerId
    GameServerData: Optional[GameServerData] = None
    UtilizationStatus: Optional[GameServerUtilizationStatus] = None
    HealthCheck: Optional[GameServerHealthCheck] = None


class UpdateGameSessionInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    GameSessionId: ArnStringModel
    MaximumPlayerSessionCount: Optional[WholeNumber] = None
    Name: Optional[NonZeroAndMaxString] = None
    PlayerSessionCreationPolicy: Optional[PlayerSessionCreationPolicy] = None
    ProtectionPolicy: Optional[ProtectionPolicy] = None


class UpdateScriptInput(BaseModel):
    ScriptId: ScriptIdOrArn
    Name: Optional[NonZeroAndMaxString] = None
    Version: Optional[NonZeroAndMaxString] = None
    StorageLocation: Optional[S3Location] = None
    ZipFile: Optional[ZipBlob] = None


class ValidateMatchmakingRuleSetOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Valid: Optional[BooleanModel] = None


class ValidateMatchmakingRuleSetInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    RuleSetBody: RuleSetBody


class StringList(BaseModel):
    __root__: List[NonZeroAndMaxString]


class RoutingStrategy(BaseModel):
    """
    <p>The routing configuration for a fleet alias.</p> <p> <b>Related actions</b> </p> <p> <a>CreateAlias</a> | <a>ListAliases</a> | <a>DescribeAlias</a> | <a>UpdateAlias</a> | <a>DeleteAlias</a> | <a>ResolveAlias</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    Type: Optional[RoutingStrategyType] = None
    FleetId: Optional[FleetId] = None
    Message: Optional[FreeText] = None


class Alias(BaseModel):
    """
    <p>Properties that describe an alias resource.</p> <p> <b>Related actions</b> </p> <p> <a>CreateAlias</a> | <a>ListAliases</a> | <a>DescribeAlias</a> | <a>UpdateAlias</a> | <a>DeleteAlias</a> | <a>ResolveAlias</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    AliasId: Optional[AliasId8] = None
    Name: Optional[NonBlankAndLengthConstraintString] = None
    AliasArn: Optional[AliasArn] = None
    Description: Optional[FreeText] = None
    RoutingStrategy: Optional[RoutingStrategy] = None
    CreationTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class AliasList(BaseModel):
    __root__: List[Alias]


class AttributeValue(BaseModel):
    """
    Values for use in <a>Player</a> attribute key-value pairs. This object lets you specify an attribute value using any of the valid data types: string, number, string array, or data map. Each <code>AttributeValue</code> object can use only one of the available properties.
    """

    S: Optional[NonZeroAndMaxString] = None
    N: Optional[DoubleObject] = None
    SL: Optional[StringList] = None
    SDM: Optional[StringDoubleMap] = None


class GameServer(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Properties describing a game server that is running on an instance in a <a>GameServerGroup</a>. </p> <p>A game server is created by a successful call to <code>RegisterGameServer</code> and deleted by calling <code>DeregisterGameServer</code>. A game server is claimed to host a game session by calling <code>ClaimGameServer</code>. </p> <p> <b>Related actions</b> </p> <p> <a>RegisterGameServer</a> | <a>ListGameServers</a> | <a>ClaimGameServer</a> | <a>DescribeGameServer</a> | <a>UpdateGameServer</a> | <a>DeregisterGameServer</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/reference-awssdk-fleetiq.html">All APIs by task</a> </p>
    """

    GameServerGroupName: Optional[GameServerGroupName] = None
    GameServerGroupArn: Optional[GameServerGroupArn] = None
    GameServerId: Optional[GameServerId] = None
    InstanceId: Optional[GameServerInstanceId] = None
    ConnectionInfo: Optional[GameServerConnectionInfo] = None
    GameServerData: Optional[GameServerData] = None
    ClaimStatus: Optional[GameServerClaimStatus] = None
    UtilizationStatus: Optional[GameServerUtilizationStatus] = None
    RegistrationTime: Optional[Timestamp] = None
    LastClaimTime: Optional[Timestamp] = None
    LastHealthCheckTime: Optional[Timestamp] = None


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=0)]


class IpPermissionsList(BaseModel):
    __root__: Annotated[List[IpPermission], Field(max_items=50)]


class ResourceCreationLimitPolicy(BaseModel):
    """
    <p>A policy that puts limits on the number of game sessions that a player can create within a specified span of time. With this policy, you can control players' ability to consume available resources.</p> <p>The policy is evaluated when a player tries to create a new game session. On receiving a <code>CreateGameSession</code> request, GameLift checks that the player (identified by <code>CreatorId</code>) has created fewer than game session limit in the specified time period.</p> <p>The resource creation limit policy is included in <a>FleetAttributes</a>.</p>
    """

    NewGameSessionsPerCreator: Optional[WholeNumber] = None
    PolicyPeriodInMinutes: Optional[WholeNumber] = None


class MetricGroupList(BaseModel):
    __root__: Annotated[List[MetricGroup], Field(max_items=1)]


class LocationConfigurationList(BaseModel):
    __root__: Annotated[List[LocationConfiguration], Field(max_items=100, min_items=1)]


class LocationStateList(BaseModel):
    __root__: List[LocationState]


class FleetAttributes(BaseModel):
    """
    <p>Describes a GameLift fleet of game hosting resources.</p> <p> <b>Related actions</b> </p> <p> <a>CreateFleet</a> | <a>DescribeFleetAttributes</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    FleetType: Optional[FleetType] = None
    InstanceType: Optional[EC2InstanceType] = None
    Description: Optional[NonZeroAndMaxString] = None
    Name: Optional[NonZeroAndMaxString] = None
    CreationTime: Optional[Timestamp] = None
    TerminationTime: Optional[Timestamp] = None
    Status: Optional[FleetStatus] = None
    BuildId: Optional[BuildId6] = None
    BuildArn: Optional[BuildArn] = None
    ScriptId: Optional[ScriptId] = None
    ScriptArn: Optional[ScriptArn] = None
    ServerLaunchPath: Optional[NonZeroAndMaxString] = None
    ServerLaunchParameters: Optional[NonZeroAndMaxString] = None
    LogPaths: Optional[StringList] = None
    NewGameSessionProtectionPolicy: Optional[ProtectionPolicy] = None
    OperatingSystem: Optional[OperatingSystem] = None
    ResourceCreationLimitPolicy: Optional[ResourceCreationLimitPolicy] = None
    MetricGroups: Optional[MetricGroupList] = None
    StoppedActions: Optional[FleetActionList] = None
    InstanceRoleArn: Optional[NonEmptyString] = None
    CertificateConfiguration: Optional[CertificateConfiguration] = None


class LaunchTemplateSpecification(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>An EC2 launch template that contains configuration settings and game server code to be deployed to all instances in a game server group. The launch template is specified when creating a new game server group with <a>CreateGameServerGroup</a>. </p>
    """

    LaunchTemplateId: Optional[LaunchTemplateId] = None
    LaunchTemplateName: Optional[LaunchTemplateName] = None
    Version: Optional[LaunchTemplateVersion] = None


class InstanceDefinitions(BaseModel):
    __root__: Annotated[List[InstanceDefinition], Field(max_items=20, min_items=2)]


class VpcSubnets(BaseModel):
    __root__: Annotated[List[VpcSubnet], Field(max_items=20, min_items=1)]


class GamePropertyList(BaseModel):
    __root__: Annotated[List[GameProperty], Field(max_items=16)]


class GameSession(BaseModel):
    """
    <p>Properties describing a game session.</p> <p>A game session in ACTIVE status can host players. When a game session ends, its status is set to <code>TERMINATED</code>. </p> <p>Once the session ends, the game session object is retained for 30 days. This means you can reuse idempotency token values after this time. Game session logs are retained for 14 days.</p> <p> <b>Related actions</b> </p> <p> <a>CreateGameSession</a> | <a>DescribeGameSessions</a> | <a>DescribeGameSessionDetails</a> | <a>SearchGameSessions</a> | <a>UpdateGameSession</a> | <a>GetGameSessionLogUrl</a> | <a>StartGameSessionPlacement</a> | <a>DescribeGameSessionPlacement</a> | <a>StopGameSessionPlacement</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    GameSessionId: Optional[NonZeroAndMaxString] = None
    Name: Optional[NonZeroAndMaxString] = None
    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    CreationTime: Optional[Timestamp] = None
    TerminationTime: Optional[Timestamp] = None
    CurrentPlayerSessionCount: Optional[WholeNumber] = None
    MaximumPlayerSessionCount: Optional[WholeNumber] = None
    Status: Optional[GameSessionStatus] = None
    StatusReason: Optional[GameSessionStatusReason] = None
    GameProperties: Optional[GamePropertyList] = None
    IpAddress: Optional[IpAddress] = None
    DnsName: Optional[DnsName] = None
    Port: Optional[PortNumber] = None
    PlayerSessionCreationPolicy: Optional[PlayerSessionCreationPolicy] = None
    CreatorId: Optional[NonZeroAndMaxString] = None
    GameSessionData: Optional[LargeGameSessionData] = None
    MatchmakerData: Optional[MatchmakerData] = None
    Location: Optional[LocationStringModel] = None


class PlayerLatencyPolicyList(BaseModel):
    __root__: List[PlayerLatencyPolicy]


class GameSessionQueueDestinationList(BaseModel):
    __root__: List[GameSessionQueueDestination]


class FilterConfiguration(BaseModel):
    """
    <p>A list of fleet locations where a game session queue can place new game sessions. You can use a filter to temporarily turn off placements for specific locations. For queues that have multi-location fleets, you can use a filter configuration allow placement with some, but not all of these locations.</p> <p>Filter configurations are part of a <a>GameSessionQueue</a>.</p>
    """

    AllowedLocations: Optional[LocationList] = None


class MatchmakingConfiguration(BaseModel):
    """
    Guidelines for use with FlexMatch to match players into games. All matchmaking requests must specify a matchmaking configuration.
    """

    Name: Optional[MatchmakingIdStringModel] = None
    ConfigurationArn: Optional[MatchmakingConfigurationArn] = None
    Description: Optional[NonZeroAndMaxString] = None
    GameSessionQueueArns: Optional[QueueArnsList] = None
    RequestTimeoutSeconds: Optional[MatchmakingRequestTimeoutInteger] = None
    AcceptanceTimeoutSeconds: Optional[MatchmakingAcceptanceTimeoutInteger] = None
    AcceptanceRequired: Optional[BooleanModel] = None
    RuleSetName: Optional[MatchmakingIdStringModel] = None
    RuleSetArn: Optional[MatchmakingRuleSetArn] = None
    NotificationTarget: Optional[SnsArnStringModel] = None
    AdditionalPlayerCount: Optional[WholeNumber] = None
    CustomEventData: Optional[CustomEventData] = None
    CreationTime: Optional[Timestamp] = None
    GameProperties: Optional[GamePropertyList] = None
    GameSessionData: Optional[GameSessionData] = None
    BackfillMode: Optional[BackfillMode] = None
    FlexMatchMode: Optional[FlexMatchMode] = None


class MatchmakingRuleSet(BaseModel):
    """
    <p>Set of rule statements, used with FlexMatch, that determine how to build your player matches. Each rule set describes a type of group to be created and defines the parameters for acceptable player matches. Rule sets are used in <a>MatchmakingConfiguration</a> objects.</p> <p>A rule set may define the following elements for a match. For detailed information and examples showing how to construct a rule set, see <a href="https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-rulesets.html">Build a FlexMatch rule set</a>. </p> <ul> <li> <p>Teams -- Required. A rule set must define one or multiple teams for the match and set minimum and maximum team sizes. For example, a rule set might describe a 4x4 match that requires all eight slots to be filled. </p> </li> <li> <p>Player attributes -- Optional. These attributes specify a set of player characteristics to evaluate when looking for a match. Matchmaking requests that use a rule set with player attributes must provide the corresponding attribute values. For example, an attribute might specify a player's skill or level.</p> </li> <li> <p>Rules -- Optional. Rules define how to evaluate potential players for a match based on player attributes. A rule might specify minimum requirements for individual players, teams, or entire matches. For example, a rule might require each player to meet a certain skill level, each team to have at least one player in a certain role, or the match to have a minimum average skill level. or may describe an entire group--such as all teams must be evenly matched or have at least one player in a certain role. </p> </li> <li> <p>Expansions -- Optional. Expansions allow you to relax the rules after a period of time when no acceptable matches are found. This feature lets you balance getting players into games in a reasonable amount of time instead of making them wait indefinitely for the best possible match. For example, you might use an expansion to increase the maximum skill variance between players after 30 seconds.</p> </li> </ul>
    """

    RuleSetName: Optional[MatchmakingIdStringModel] = None
    RuleSetArn: Optional[MatchmakingRuleSetArn] = None
    RuleSetBody: RuleSetBody
    CreationTime: Optional[Timestamp] = None


class PlayerSession(BaseModel):
    """
    <p>Represents a player session. Player sessions are created either for a specific game session, or as part of a game session placement or matchmaking request. A player session can represents a reserved player slot in a game session (when status is <code>RESERVED</code>) or actual player activity in a game session (when status is <code>ACTIVE</code>). A player session object, including player data, is automatically passed to a game session when the player connects to the game session and is validated. After the game session ends, player sessions information is retained for 30 days and then removed.</p> <p> <b>Related actions</b> </p> <p> <a>CreatePlayerSession</a> | <a>CreatePlayerSessions</a> | <a>DescribePlayerSessions</a> | <a>StartGameSessionPlacement</a> | <a>DescribeGameSessionPlacement</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    PlayerSessionId: Optional[PlayerSessionId] = None
    PlayerId: Optional[NonZeroAndMaxString] = None
    GameSessionId: Optional[NonZeroAndMaxString] = None
    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    CreationTime: Optional[Timestamp] = None
    TerminationTime: Optional[Timestamp] = None
    Status: Optional[PlayerSessionStatus] = None
    IpAddress: Optional[IpAddress] = None
    DnsName: Optional[DnsName] = None
    Port: Optional[PortNumber] = None
    PlayerData: Optional[PlayerData] = None


class PlayerSessionList(BaseModel):
    __root__: List[PlayerSession]


class Script(BaseModel):
    """
    <p>Properties describing a Realtime script.</p> <p> <b>Related actions</b> </p> <p> <a>CreateScript</a> | <a>ListScripts</a> | <a>DescribeScript</a> | <a>UpdateScript</a> | <a>DeleteScript</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
    """

    ScriptId: Optional[ScriptId] = None
    ScriptArn: Optional[ScriptArn] = None
    Name: Optional[NonZeroAndMaxString] = None
    Version: Optional[NonZeroAndMaxString] = None
    SizeOnDisk: Optional[PositiveLong] = None
    CreationTime: Optional[Timestamp] = None
    StorageLocation: Optional[S3Location] = None


class EC2InstanceLimitList(BaseModel):
    __root__: List[EC2InstanceLimit]


class FleetAttributesList(BaseModel):
    __root__: List[FleetAttributes]


class EventList(BaseModel):
    __root__: List[Event]


class LocationAttributesList(BaseModel):
    __root__: List[LocationAttributes]


class FleetCapacity(BaseModel):
    """
    <p>Current resource capacity settings in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region. </p> <p> <b>Related actions</b> </p> <p> <a>DescribeFleetCapacity</a> | <a>DescribeFleetLocationCapacity</a> | <a>UpdateFleetCapacity</a> </p>
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    InstanceType: Optional[EC2InstanceType] = None
    InstanceCounts: Optional[EC2InstanceCounts] = None
    Location: Optional[LocationStringModel] = None


class GameServerInstanceIds(BaseModel):
    __root__: Annotated[List[GameServerInstanceId], Field(max_items=20, min_items=1)]


class GameServerInstances(BaseModel):
    __root__: List[GameServerInstance]


class GameSessionList(BaseModel):
    __root__: List[GameSession]


class InstanceList(BaseModel):
    __root__: List[Instance]


class MatchmakingConfigurationList(BaseModel):
    __root__: List[MatchmakingConfiguration]


class MatchmakingRuleSetList(BaseModel):
    __root__: List[MatchmakingRuleSet]


class ScalingPolicyList(BaseModel):
    __root__: List[ScalingPolicy]


class VpcPeeringConnectionList(BaseModel):
    __root__: List[VpcPeeringConnection]


class GameServerGroupActions(BaseModel):
    __root__: Annotated[List[GameServerGroupAction], Field(max_items=1, min_items=1)]


class TargetTrackingConfiguration(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Settings for a target-based scaling policy as part of a <a>GameServerGroupAutoScalingPolicy</a>. These settings are used to create a target-based policy that tracks the GameLift FleetIQ metric <code>"PercentUtilizedGameServers"</code> and specifies a target value for the metric. As player usage changes, the policy triggers to adjust the game server group capacity so that the metric returns to the target value. </p>
    """

    TargetValue: NonNegativeDouble


class GameServers(BaseModel):
    __root__: List[GameServer]


class MatchedPlayerSessionList(BaseModel):
    __root__: List[MatchedPlayerSession]


class GameSessionConnectionInfo(BaseModel):
    """
    Connection information for a new game session that is created in response to a <a>StartMatchmaking</a> request. Once a match is made, the FlexMatch engine creates a new game session for it. This information, including the game session endpoint and player sessions for each player in the original matchmaking request, is added to the <a>MatchmakingTicket</a>, which can be retrieved by calling <a>DescribeMatchmaking</a>.
    """

    GameSessionArn: Optional[ArnStringModel] = None
    IpAddress: Optional[StringModel] = None
    DnsName: Optional[DnsName] = None
    Port: Optional[PositiveInteger] = None
    MatchedPlayerSessions: Optional[MatchedPlayerSessionList] = None


class GameSessionDetail(BaseModel):
    """
    A game session's properties plus the protection policy currently in force.
    """

    GameSession: Optional[GameSession] = None
    ProtectionPolicy: Optional[ProtectionPolicy] = None


class PlayerLatencyList(BaseModel):
    __root__: List[PlayerLatency]


class PlacedPlayerSessionList(BaseModel):
    __root__: List[PlacedPlayerSession]


class InstanceAccess(BaseModel):
    """
    Information required to remotely connect to a fleet instance. Access is requested by calling <a>GetInstanceAccess</a>.
    """

    FleetId: Optional[FleetId] = None
    InstanceId: Optional[InstanceId] = None
    IpAddress: Optional[IpAddress] = None
    OperatingSystem: Optional[OperatingSystem] = None
    Credentials: Optional[InstanceCredentials] = None


class ScriptList(BaseModel):
    __root__: List[Script]


class PlayerList(BaseModel):
    __root__: List[Player]


class MatchmakingTicket(BaseModel):
    """
    Ticket generated to track the progress of a matchmaking request. Each ticket is uniquely identified by a ticket ID, supplied by the requester, when creating a matchmaking request with <a>StartMatchmaking</a>. Tickets can be retrieved by calling <a>DescribeMatchmaking</a> with the ticket ID.
    """

    TicketId: Optional[MatchmakingIdStringModel] = None
    ConfigurationName: Optional[MatchmakingIdStringModel] = None
    ConfigurationArn: Optional[MatchmakingConfigurationArn] = None
    Status: Optional[MatchmakingConfigurationStatus] = None
    StatusReason: Optional[StringModel] = None
    StatusMessage: Optional[StringModel] = None
    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None
    Players: Optional[PlayerList] = None
    GameSessionConnectionInfo: Optional[GameSessionConnectionInfo] = None
    EstimatedWaitTime: Optional[WholeNumber] = None


class PriorityTypeList(BaseModel):
    __root__: Annotated[List[PriorityType], Field(max_items=4, min_items=1)]


class ServerProcessList(BaseModel):
    __root__: Annotated[List[ServerProcess], Field(max_items=50, min_items=1)]


class AcceptMatchInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    TicketId: MatchmakingIdStringModel
    PlayerIds: StringList
    AcceptanceType: AcceptanceType


class ClaimGameServerOutput(BaseModel):
    GameServer: Optional[GameServer] = None


class CreateAliasOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Alias: Optional[Alias] = None


class CreateAliasInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: NonBlankAndLengthConstraintString
    Description: Optional[NonZeroAndMaxString] = None
    RoutingStrategy: RoutingStrategy
    Tags: Optional[TagList] = None


class CreateBuildInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: Optional[NonZeroAndMaxString] = None
    Version: Optional[NonZeroAndMaxString] = None
    StorageLocation: Optional[S3Location] = None
    OperatingSystem: Optional[OperatingSystem] = None
    Tags: Optional[TagList] = None


class CreateFleetOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetAttributes: Optional[FleetAttributes] = None
    LocationStates: Optional[LocationStateList] = None


class CreateFleetLocationsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    FleetArn: Optional[FleetArn] = None
    LocationStates: Optional[LocationStateList] = None


class CreateFleetLocationsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Locations: LocationConfigurationList


class CreateGameSessionOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSession: Optional[GameSession] = None


class CreateGameSessionInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    AliasId: Optional[AliasIdOrArn] = None
    MaximumPlayerSessionCount: WholeNumber
    Name: Optional[NonZeroAndMaxString] = None
    GameProperties: Optional[GamePropertyList] = None
    CreatorId: Optional[NonZeroAndMaxString] = None
    GameSessionId: Optional[IdStringModel] = None
    IdempotencyToken: Optional[IdStringModel] = None
    GameSessionData: Optional[LargeGameSessionData] = None
    Location: Optional[LocationStringModel] = None


class CreateMatchmakingConfigurationOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Configuration: Optional[MatchmakingConfiguration] = None


class CreateMatchmakingConfigurationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: MatchmakingIdStringModel
    Description: Optional[NonZeroAndMaxString] = None
    GameSessionQueueArns: Optional[QueueArnsList] = None
    RequestTimeoutSeconds: MatchmakingRequestTimeoutInteger
    AcceptanceTimeoutSeconds: Optional[MatchmakingAcceptanceTimeoutInteger] = None
    AcceptanceRequired: BooleanModel
    RuleSetName: MatchmakingRuleSetName
    NotificationTarget: Optional[SnsArnStringModel] = None
    AdditionalPlayerCount: Optional[WholeNumber] = None
    CustomEventData: Optional[CustomEventData] = None
    GameProperties: Optional[GamePropertyList] = None
    GameSessionData: Optional[GameSessionData] = None
    BackfillMode: Optional[BackfillMode] = None
    FlexMatchMode: Optional[FlexMatchMode] = None
    Tags: Optional[TagList] = None


class CreateMatchmakingRuleSetOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    RuleSet: MatchmakingRuleSet


class CreateMatchmakingRuleSetInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: MatchmakingIdStringModel
    RuleSetBody: RuleSetBody
    Tags: Optional[TagList] = None


class CreatePlayerSessionOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    PlayerSession: Optional[PlayerSession] = None


class CreatePlayerSessionsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    PlayerSessions: Optional[PlayerSessionList] = None


class CreateScriptOutput(BaseModel):
    Script: Optional[Script] = None


class CreateScriptInput(BaseModel):
    Name: Optional[NonZeroAndMaxString] = None
    Version: Optional[NonZeroAndMaxString] = None
    StorageLocation: Optional[S3Location] = None
    ZipFile: Optional[ZipBlob] = None
    Tags: Optional[TagList] = None


class DeleteFleetLocationsOutput(CreateFleetLocationsOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class DescribeAliasOutput(CreateAliasOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class DescribeEC2InstanceLimitsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    EC2InstanceLimits: Optional[EC2InstanceLimitList] = None


class DescribeFleetAttributesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetAttributes: Optional[FleetAttributesList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetEventsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Events: Optional[EventList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetLocationAttributesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetIdOrArn] = None
    FleetArn: Optional[FleetArn] = None
    LocationAttributes: Optional[LocationAttributesList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeFleetLocationCapacityOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetCapacity: Optional[FleetCapacity] = None


class DescribeFleetPortSettingsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetId: Optional[FleetId] = None
    FleetArn: Optional[FleetArn] = None
    InboundPermissions: Optional[IpPermissionsList] = None
    UpdateStatus: Optional[LocationUpdateStatus] = None
    Location: Optional[LocationStringModel] = None


class DescribeGameServerOutput(ClaimGameServerOutput):
    pass


class DescribeGameServerInstancesOutput(BaseModel):
    GameServerInstances: Optional[GameServerInstances] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameServerInstancesInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    InstanceIds: Optional[GameServerInstanceIds] = None
    Limit: Optional[PositiveInteger] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameSessionsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSessions: Optional[GameSessionList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeInstancesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Instances: Optional[InstanceList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeMatchmakingConfigurationsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Configurations: Optional[MatchmakingConfigurationList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeMatchmakingRuleSetsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    RuleSets: MatchmakingRuleSetList
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribePlayerSessionsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    PlayerSessions: Optional[PlayerSessionList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeScalingPoliciesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    ScalingPolicies: Optional[ScalingPolicyList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeScriptOutput(CreateScriptOutput):
    pass


class DescribeVpcPeeringConnectionsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    VpcPeeringConnections: Optional[VpcPeeringConnectionList] = None


class GetInstanceAccessOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    InstanceAccess: Optional[InstanceAccess] = None


class ListAliasesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    Aliases: Optional[AliasList] = None
    NextToken: Optional[NonEmptyString] = None


class ListGameServersOutput(BaseModel):
    GameServers: Optional[GameServers] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ListScriptsOutput(BaseModel):
    Scripts: Optional[ScriptList] = None
    NextToken: Optional[NonEmptyString] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class RegisterGameServerOutput(ClaimGameServerOutput):
    pass


class ResumeGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    ResumeActions: GameServerGroupActions


class SearchGameSessionsOutput(DescribeGameSessionsOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class StartGameSessionPlacementInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    PlacementId: IdStringModel
    GameSessionQueueName: GameSessionQueueNameOrArn
    GameProperties: Optional[GamePropertyList] = None
    MaximumPlayerSessionCount: WholeNumber
    GameSessionName: Optional[NonZeroAndMaxString] = None
    PlayerLatencies: Optional[PlayerLatencyList] = None
    DesiredPlayerSessions: Optional[DesiredPlayerSessionList] = None
    GameSessionData: Optional[LargeGameSessionData] = None


class StartMatchBackfillOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    MatchmakingTicket: Optional[MatchmakingTicket] = None


class StartMatchBackfillInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    TicketId: Optional[MatchmakingIdStringModel] = None
    ConfigurationName: MatchmakingConfigurationName
    GameSessionArn: Optional[ArnStringModel] = None
    Players: PlayerList


class StartMatchmakingOutput(StartMatchBackfillOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class StartMatchmakingInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    TicketId: Optional[MatchmakingIdStringModel] = None
    ConfigurationName: MatchmakingConfigurationName
    Players: PlayerList


class SuspendGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    SuspendActions: GameServerGroupActions


class TagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    Tags: TagList


class UpdateAliasOutput(CreateAliasOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateAliasInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    AliasId: AliasIdOrArn
    Name: Optional[NonBlankAndLengthConstraintString] = None
    Description: Optional[NonZeroAndMaxString] = None
    RoutingStrategy: Optional[RoutingStrategy] = None


class UpdateFleetAttributesInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    Name: Optional[NonZeroAndMaxString] = None
    Description: Optional[NonZeroAndMaxString] = None
    NewGameSessionProtectionPolicy: Optional[ProtectionPolicy] = None
    ResourceCreationLimitPolicy: Optional[ResourceCreationLimitPolicy] = None
    MetricGroups: Optional[MetricGroupList] = None


class UpdateFleetPortSettingsInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    InboundPermissionAuthorizations: Optional[IpPermissionsList] = None
    InboundPermissionRevocations: Optional[IpPermissionsList] = None


class UpdateGameServerOutput(ClaimGameServerOutput):
    pass


class UpdateGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupNameOrArn
    RoleArn: Optional[IamRoleArn] = None
    InstanceDefinitions: Optional[InstanceDefinitions] = None
    GameServerProtectionPolicy: Optional[GameServerProtectionPolicy] = None
    BalancingStrategy: Optional[BalancingStrategy] = None


class UpdateGameSessionOutput(CreateGameSessionOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateMatchmakingConfigurationOutput(CreateMatchmakingConfigurationOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateMatchmakingConfigurationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: MatchmakingConfigurationName
    Description: Optional[NonZeroAndMaxString] = None
    GameSessionQueueArns: Optional[QueueArnsList] = None
    RequestTimeoutSeconds: Optional[MatchmakingRequestTimeoutInteger] = None
    AcceptanceTimeoutSeconds: Optional[MatchmakingAcceptanceTimeoutInteger] = None
    AcceptanceRequired: Optional[BooleanModel] = None
    RuleSetName: Optional[MatchmakingRuleSetName] = None
    NotificationTarget: Optional[SnsArnStringModel] = None
    AdditionalPlayerCount: Optional[WholeNumber] = None
    CustomEventData: Optional[CustomEventData] = None
    GameProperties: Optional[GamePropertyList] = None
    GameSessionData: Optional[GameSessionData] = None
    BackfillMode: Optional[BackfillMode] = None
    FlexMatchMode: Optional[FlexMatchMode] = None


class UpdateScriptOutput(CreateScriptOutput):
    pass


class RuntimeConfiguration(BaseModel):
    """
    <p>A collection of server process configurations that describe the set of processes to run on each instance in a fleet. Server processes run either an executable in a custom game build or a Realtime Servers script. GameLift launches the configured processes, manages their life cycle, and replaces them as needed. Each instance checks regularly for an updated runtime configuration. </p> <p>A GameLift instance is limited to 50 processes running concurrently. To calculate the total number of processes in a runtime configuration, add the values of the <code>ConcurrentExecutions</code> parameter for each <a>ServerProcess</a>. Learn more about <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-multiprocess.html"> Running Multiple Processes on a Fleet</a>.</p> <p> <b>Related actions</b> </p> <p> <a>DescribeRuntimeConfiguration</a> | <a>UpdateRuntimeConfiguration</a> </p>
    """

    ServerProcesses: Optional[ServerProcessList] = None
    MaxConcurrentGameSessionActivations: Optional[
        MaxConcurrentGameSessionActivations
    ] = None
    GameSessionActivationTimeoutSeconds: Optional[
        GameSessionActivationTimeoutSeconds
    ] = None


class GameServerGroupAutoScalingPolicy(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Configuration settings for intelligent automatic scaling that uses target tracking. These settings are used to add an Auto Scaling policy when creating the corresponding Auto Scaling group with <a>CreateGameServerGroup</a>. After the Auto Scaling group is created, all updates to Auto Scaling policies, including changing this policy and adding or removing other policies, is done directly on the Auto Scaling group. </p>
    """

    EstimatedInstanceWarmup: Optional[PositiveInteger] = None
    TargetTrackingConfiguration: TargetTrackingConfiguration


class GameServerGroup(BaseModel):
    """
    <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Properties that describe a game server group resource. A game server group manages certain properties related to a corresponding EC2 Auto Scaling group. </p> <p>A game server group is created by a successful call to <code>CreateGameServerGroup</code> and deleted by calling <code>DeleteGameServerGroup</code>. Game server group activity can be temporarily suspended and resumed by calling <code>SuspendGameServerGroup</code> and <code>ResumeGameServerGroup</code>, respectively. </p> <p> <b>Related actions</b> </p> <p> <a>CreateGameServerGroup</a> | <a>ListGameServerGroups</a> | <a>DescribeGameServerGroup</a> | <a>UpdateGameServerGroup</a> | <a>DeleteGameServerGroup</a> | <a>ResumeGameServerGroup</a> | <a>SuspendGameServerGroup</a> | <a>DescribeGameServerInstances</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/reference-awssdk-fleetiq.html">All APIs by task</a> </p>
    """

    GameServerGroupName: Optional[GameServerGroupName] = None
    GameServerGroupArn: Optional[GameServerGroupArn] = None
    RoleArn: Optional[IamRoleArn] = None
    InstanceDefinitions: Optional[InstanceDefinitions] = None
    BalancingStrategy: Optional[BalancingStrategy] = None
    GameServerProtectionPolicy: Optional[GameServerProtectionPolicy] = None
    AutoScalingGroupArn: Optional[AutoScalingGroupArn] = None
    Status: Optional[GameServerGroupStatus] = None
    StatusReason: Optional[NonZeroAndMaxString] = None
    SuspendedActions: Optional[GameServerGroupActions] = None
    CreationTime: Optional[Timestamp] = None
    LastUpdatedTime: Optional[Timestamp] = None


class PriorityConfiguration(BaseModel):
    """
    <p>Custom prioritization settings for use by a game session queue when placing new game sessions with available game servers. When defined, this configuration replaces the default FleetIQ prioritization process, which is as follows:</p> <ul> <li> <p>If player latency data is included in a game session request, destinations and locations are prioritized first based on lowest average latency (1), then on lowest hosting cost (2), then on destination list order (3), and finally on location (alphabetical) (4). This approach ensures that the queue's top priority is to place game sessions where average player latency is lowest, and--if latency is the same--where the hosting cost is less, etc.</p> </li> <li> <p>If player latency data is not included, destinations and locations are prioritized first on destination list order (1), and then on location (alphabetical) (2). This approach ensures that the queue's top priority is to place game sessions on the first destination fleet listed. If that fleet has multiple locations, the game session is placed on the first location (when listed alphabetically).</p> </li> </ul> <p>Changing the priority order will affect how game sessions are placed.</p> <p>Priority configurations are part of a <a>GameSessionQueue</a>.</p>
    """

    PriorityOrder: Optional[PriorityTypeList] = None
    LocationOrder: Optional[LocationList] = None


class GameSessionQueue(BaseModel):
    """
    <p>Configuration for a game session placement mechanism that processes requests for new game sessions. A queue can be used on its own or as part of a matchmaking solution.</p> <p> <b>Related actions</b> </p> <p> <a>CreateGameSessionQueue</a> | <a>DescribeGameSessionQueues</a> | <a>UpdateGameSessionQueue</a> </p>
    """

    Name: Optional[GameSessionQueueName] = None
    GameSessionQueueArn: Optional[GameSessionQueueArn] = None
    TimeoutInSeconds: Optional[WholeNumber] = None
    PlayerLatencyPolicies: Optional[PlayerLatencyPolicyList] = None
    Destinations: Optional[GameSessionQueueDestinationList] = None
    FilterConfiguration: Optional[FilterConfiguration] = None
    PriorityConfiguration: Optional[PriorityConfiguration] = None
    CustomEventData: Optional[QueueCustomEventData] = None
    NotificationTarget: Optional[QueueSnsArnStringModel] = None


class FleetCapacityList(BaseModel):
    __root__: List[FleetCapacity]


class GameSessionDetailList(BaseModel):
    __root__: List[GameSessionDetail]


class GameSessionPlacement(BaseModel):
    """
    <p>Object that describes a <a>StartGameSessionPlacement</a> request. This object includes the full details of the original request plus the current status and start/end time stamps.</p> <p>Game session placement-related operations include:</p> <ul> <li> <p> <a>StartGameSessionPlacement</a> </p> </li> <li> <p> <a>DescribeGameSessionPlacement</a> </p> </li> <li> <p> <a>StopGameSessionPlacement</a> </p> </li> </ul>
    """

    PlacementId: Optional[IdStringModel] = None
    GameSessionQueueName: Optional[GameSessionQueueName] = None
    Status: Optional[GameSessionPlacementState] = None
    GameProperties: Optional[GamePropertyList] = None
    MaximumPlayerSessionCount: Optional[WholeNumber] = None
    GameSessionName: Optional[NonZeroAndMaxString] = None
    GameSessionId: Optional[NonZeroAndMaxString] = None
    GameSessionArn: Optional[NonZeroAndMaxString] = None
    GameSessionRegion: Optional[NonZeroAndMaxString] = None
    PlayerLatencies: Optional[PlayerLatencyList] = None
    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None
    IpAddress: Optional[IpAddress] = None
    DnsName: Optional[DnsName] = None
    Port: Optional[PortNumber] = None
    PlacedPlayerSessions: Optional[PlacedPlayerSessionList] = None
    GameSessionData: Optional[LargeGameSessionData] = None
    MatchmakerData: Optional[MatchmakerData] = None


class GameSessionQueueList(BaseModel):
    __root__: List[GameSessionQueue]


class MatchmakingTicketList(BaseModel):
    __root__: List[MatchmakingTicket]


class GameServerGroups(BaseModel):
    __root__: List[GameServerGroup]


class CreateFleetInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: NonZeroAndMaxString
    Description: Optional[NonZeroAndMaxString] = None
    BuildId: Optional[BuildIdOrArn] = None
    ScriptId: Optional[ScriptIdOrArn] = None
    ServerLaunchPath: Optional[NonZeroAndMaxString] = None
    ServerLaunchParameters: Optional[NonZeroAndMaxString] = None
    LogPaths: Optional[StringList] = None
    EC2InstanceType: EC2InstanceType
    EC2InboundPermissions: Optional[IpPermissionsList] = None
    NewGameSessionProtectionPolicy: Optional[ProtectionPolicy] = None
    RuntimeConfiguration: Optional[RuntimeConfiguration] = None
    ResourceCreationLimitPolicy: Optional[ResourceCreationLimitPolicy] = None
    MetricGroups: Optional[MetricGroupList] = None
    PeerVpcAwsAccountId: Optional[NonZeroAndMaxString] = None
    PeerVpcId: Optional[NonZeroAndMaxString] = None
    FleetType: Optional[FleetType] = None
    InstanceRoleArn: Optional[NonEmptyString] = None
    CertificateConfiguration: Optional[CertificateConfiguration] = None
    Locations: Optional[LocationConfigurationList] = None
    Tags: Optional[TagList] = None


class CreateGameServerGroupOutput(BaseModel):
    GameServerGroup: Optional[GameServerGroup] = None


class CreateGameServerGroupInput(BaseModel):
    GameServerGroupName: GameServerGroupName
    RoleArn: IamRoleArn
    MinSize: WholeNumber
    MaxSize: PositiveInteger
    LaunchTemplate: LaunchTemplateSpecification
    InstanceDefinitions: InstanceDefinitions
    AutoScalingPolicy: Optional[GameServerGroupAutoScalingPolicy] = None
    BalancingStrategy: Optional[BalancingStrategy] = None
    GameServerProtectionPolicy: Optional[GameServerProtectionPolicy] = None
    VpcSubnets: Optional[VpcSubnets] = None
    Tags: Optional[TagList] = None


class CreateGameSessionQueueOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSessionQueue: Optional[GameSessionQueue] = None


class CreateGameSessionQueueInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: GameSessionQueueName
    TimeoutInSeconds: Optional[WholeNumber] = None
    PlayerLatencyPolicies: Optional[PlayerLatencyPolicyList] = None
    Destinations: Optional[GameSessionQueueDestinationList] = None
    FilterConfiguration: Optional[FilterConfiguration] = None
    PriorityConfiguration: Optional[PriorityConfiguration] = None
    CustomEventData: Optional[QueueCustomEventData] = None
    NotificationTarget: Optional[QueueSnsArnStringModel] = None
    Tags: Optional[TagList] = None


class DeleteGameServerGroupOutput(CreateGameServerGroupOutput):
    pass


class DescribeFleetCapacityOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    FleetCapacity: Optional[FleetCapacityList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameServerGroupOutput(CreateGameServerGroupOutput):
    pass


class DescribeGameSessionDetailsOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSessionDetails: Optional[GameSessionDetailList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeGameSessionPlacementOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSessionPlacement: Optional[GameSessionPlacement] = None


class DescribeGameSessionQueuesOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    GameSessionQueues: Optional[GameSessionQueueList] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class DescribeMatchmakingOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    TicketList: Optional[MatchmakingTicketList] = None


class DescribeRuntimeConfigurationOutput(BaseModel):
    """
    Represents the returned data in response to a request operation.
    """

    RuntimeConfiguration: Optional[RuntimeConfiguration] = None


class ListGameServerGroupsOutput(BaseModel):
    GameServerGroups: Optional[GameServerGroups] = None
    NextToken: Optional[NonZeroAndMaxString] = None


class ResumeGameServerGroupOutput(CreateGameServerGroupOutput):
    pass


class StartGameSessionPlacementOutput(DescribeGameSessionPlacementOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class StopGameSessionPlacementOutput(DescribeGameSessionPlacementOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class SuspendGameServerGroupOutput(CreateGameServerGroupOutput):
    pass


class UpdateGameServerGroupOutput(CreateGameServerGroupOutput):
    pass


class UpdateGameSessionQueueOutput(CreateGameSessionQueueOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateGameSessionQueueInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    Name: GameSessionQueueNameOrArn
    TimeoutInSeconds: Optional[WholeNumber] = None
    PlayerLatencyPolicies: Optional[PlayerLatencyPolicyList] = None
    Destinations: Optional[GameSessionQueueDestinationList] = None
    FilterConfiguration: Optional[FilterConfiguration] = None
    PriorityConfiguration: Optional[PriorityConfiguration] = None
    CustomEventData: Optional[QueueCustomEventData] = None
    NotificationTarget: Optional[QueueSnsArnStringModel] = None


class UpdateRuntimeConfigurationOutput(DescribeRuntimeConfigurationOutput):
    """
    Represents the returned data in response to a request operation.
    """

    pass


class UpdateRuntimeConfigurationInput(BaseModel):
    """
    Represents the input for a request operation.
    """

    FleetId: FleetIdOrArn
    RuntimeConfiguration: RuntimeConfiguration

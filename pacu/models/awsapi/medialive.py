# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:49+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class AcceptInputDeviceTransferResponse(BaseModel):
    """
    Placeholder documentation for AcceptInputDeviceTransferResponse
    """

    pass


class BadRequestException(BaseModel):
    __root__: Any


class UnprocessableEntityException(BadRequestException):
    pass


class InternalServerErrorException(BadRequestException):
    pass


class ForbiddenException(BadRequestException):
    pass


class BadGatewayException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class GatewayTimeoutException(BadRequestException):
    pass


class TooManyRequestsException(BadRequestException):
    pass


class ConflictException(BadRequestException):
    pass


class _String(BaseModel):
    __root__: Annotated[
        str, Field(description='Placeholder documentation for __string')
    ]


class _ListOfString(BaseModel):
    """
    Placeholder documentation for __listOf__string
    """

    __root__: Annotated[
        List[_String],
        Field(description='Placeholder documentation for __listOf__string'),
    ]


class CancelInputDeviceTransferResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for CancelInputDeviceTransferResponse
    """

    pass


class CdiInputResolution(Enum):
    """
    Maximum CDI input resolution; SD is 480i and 576i up to 30 frames-per-second (fps), HD is 720p up to 60 fps / 1080i up to 30 fps, FHD is 1080p up to 60 fps, UHD is 2160p up to 60 fps

    """

    SD = 'SD'
    HD = 'HD'
    FHD = 'FHD'
    UHD = 'UHD'


class InputCodec(Enum):
    """
    codec in increasing order of complexity
    """

    MPEG2 = 'MPEG2'
    AVC = 'AVC'
    HEVC = 'HEVC'


class InputMaximumBitrate(Enum):
    """
    Maximum input bitrate in megabits per second. Bitrates up to 50 Mbps are supported currently.
    """

    MAX_10_MBPS = 'MAX_10_MBPS'
    MAX_20_MBPS = 'MAX_20_MBPS'
    MAX_50_MBPS = 'MAX_50_MBPS'


class InputResolution(Enum):
    """
    Input resolution based on lines of vertical resolution in the input; SD is less than 720 lines, HD is 720 to 1080 lines, UHD is greater than 1080 lines

    """

    SD = 'SD'
    HD = 'HD'
    UHD = 'UHD'


class InputDestinationRequest(BaseModel):
    """
    Endpoint settings for a PUSH type input.
    """

    StreamName: Optional[_String] = None


class InputDeviceSettings(BaseModel):
    """
    Settings for an input device.
    """

    Id: Optional[_String] = None


class MediaConnectFlowRequest(BaseModel):
    """
    The settings for a MediaConnect Flow.
    """

    FlowArn: Optional[_String] = None


class InputSourceRequest(BaseModel):
    """
    Settings for for a PULL type input.
    """

    PasswordParam: Optional[_String] = None
    Url: Optional[_String] = None
    Username: Optional[_String] = None


class InputWhitelistRuleCidr(BaseModel):
    """
    An IPv4 CIDR to whitelist.
    """

    Cidr: Optional[_String] = None


class _IntegerMin800Max3000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin800Max3000',
            ge=800.0,
            le=3000.0,
        ),
    ]


class _IntegerMin1000000Max100000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1000000Max100000000',
            ge=1000000.0,
            le=100000000.0,
        ),
    ]


class _IntegerMin0Max65535(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max65535',
            ge=0.0,
            le=65535.0,
        ),
    ]


class _IntegerMin0Max100000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max100000000',
            ge=0.0,
            le=100000000.0,
        ),
    ]


class PreferredChannelPipeline(Enum):
    """
        Indicates which pipeline is preferred by the multiplex for program ingest.
    If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,
    it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",
    it will not switch back to the other pipeline based on it recovering to a healthy state,
    it will only switch if the active pipeline becomes unhealthy.

    """

    CURRENTLY_ACTIVE = 'CURRENTLY_ACTIVE'
    PIPELINE_0 = 'PIPELINE_0'
    PIPELINE_1 = 'PIPELINE_1'


class DeleteInputResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for DeleteInputResponse
    """

    pass


class DeleteInputSecurityGroupResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for DeleteInputSecurityGroupResponse
    """

    pass


class DeleteScheduleResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for DeleteScheduleResponse
    """

    pass


class RejectInputDeviceTransferResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for RejectInputDeviceTransferResponse
    """

    pass


class TransferInputDeviceResponse(AcceptInputDeviceTransferResponse):
    """
    Placeholder documentation for TransferInputDeviceResponse
    """

    pass


class InputDeviceRequest(InputDeviceSettings):
    """
    Settings for an input device.
    """

    pass


class InputDeviceConfiguredInput(Enum):
    """
    The source to activate (use) from the input device.
    """

    AUTO = 'AUTO'
    HDMI = 'HDMI'
    SDI = 'SDI'


class _Integer(BaseModel):
    __root__: Annotated[
        int, Field(description='Placeholder documentation for __integer')
    ]


class AacCodingMode(Enum):
    """
    Aac Coding Mode
    """

    AD_RECEIVER_MIX = 'AD_RECEIVER_MIX'
    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_5_1 = 'CODING_MODE_5_1'


class AacInputType(Enum):
    """
    Aac Input Type
    """

    BROADCASTER_MIXED_AD = 'BROADCASTER_MIXED_AD'
    NORMAL = 'NORMAL'


class AacProfile(Enum):
    """
    Aac Profile
    """

    HEV1 = 'HEV1'
    HEV2 = 'HEV2'
    LC = 'LC'


class AacRateControlMode(Enum):
    """
    Aac Rate Control Mode
    """

    CBR = 'CBR'
    VBR = 'VBR'


class AacRawFormat(Enum):
    """
    Aac Raw Format
    """

    LATM_LOAS = 'LATM_LOAS'
    NONE = 'NONE'


class _Double(BaseModel):
    __root__: Annotated[
        float, Field(description='Placeholder documentation for __double')
    ]


class AacSpec(Enum):
    """
    Aac Spec
    """

    MPEG2 = 'MPEG2'
    MPEG4 = 'MPEG4'


class AacVbrQuality(Enum):
    """
    Aac Vbr Quality
    """

    HIGH = 'HIGH'
    LOW = 'LOW'
    MEDIUM_HIGH = 'MEDIUM_HIGH'
    MEDIUM_LOW = 'MEDIUM_LOW'


class AacSettings(BaseModel):
    """
    Aac Settings
    """

    Bitrate: Optional[_Double] = None
    CodingMode: Optional[AacCodingMode] = None
    InputType: Optional[AacInputType] = None
    Profile: Optional[AacProfile] = None
    RateControlMode: Optional[AacRateControlMode] = None
    RawFormat: Optional[AacRawFormat] = None
    SampleRate: Optional[_Double] = None
    Spec: Optional[AacSpec] = None
    VbrQuality: Optional[AacVbrQuality] = None


class Ac3BitstreamMode(Enum):
    """
    Ac3 Bitstream Mode
    """

    COMMENTARY = 'COMMENTARY'
    COMPLETE_MAIN = 'COMPLETE_MAIN'
    DIALOGUE = 'DIALOGUE'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    MUSIC_AND_EFFECTS = 'MUSIC_AND_EFFECTS'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'
    VOICE_OVER = 'VOICE_OVER'


class Ac3CodingMode(Enum):
    """
    Ac3 Coding Mode
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_1_1 = 'CODING_MODE_1_1'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2_LFE = 'CODING_MODE_3_2_LFE'


class Ac3DrcProfile(Enum):
    """
    Ac3 Drc Profile
    """

    FILM_STANDARD = 'FILM_STANDARD'
    NONE = 'NONE'


class Ac3LfeFilter(Enum):
    """
    Ac3 Lfe Filter
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class Ac3MetadataControl(Enum):
    """
    Ac3 Metadata Control
    """

    FOLLOW_INPUT = 'FOLLOW_INPUT'
    USE_CONFIGURED = 'USE_CONFIGURED'


class _IntegerMin1Max31(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max31',
            ge=1.0,
            le=31.0,
        ),
    ]


class Ac3Settings(BaseModel):
    """
    Ac3 Settings
    """

    Bitrate: Optional[_Double] = None
    BitstreamMode: Optional[Ac3BitstreamMode] = None
    CodingMode: Optional[Ac3CodingMode] = None
    Dialnorm: Optional[_IntegerMin1Max31] = None
    DrcProfile: Optional[Ac3DrcProfile] = None
    LfeFilter: Optional[Ac3LfeFilter] = None
    MetadataControl: Optional[Ac3MetadataControl] = None


class AcceptInputDeviceTransferRequest(BaseModel):
    """
    Placeholder documentation for AcceptInputDeviceTransferRequest
    """

    pass


class AfdSignaling(Enum):
    """
    Afd Signaling
    """

    AUTO = 'AUTO'
    FIXED = 'FIXED'
    NONE = 'NONE'


class _IntegerMin1Max4(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max4',
            ge=1.0,
            le=4.0,
        ),
    ]


class AncillarySourceSettings(BaseModel):
    """
    Ancillary Source Settings
    """

    SourceAncillaryChannelNumber: Optional[_IntegerMin1Max4] = None


class RawSettings(AcceptInputDeviceTransferResponse):
    """
    Raw Settings
    """

    pass


class OutputLocationRef(BaseModel):
    """
    Reference to an OutputDestination ID defined in the channel
    """

    DestinationRefId: Optional[_String] = None


class _IntegerMin1(BaseModel):
    __root__: Annotated[
        int, Field(description='Placeholder documentation for __integerMin1', ge=1.0)
    ]


class S3CannedAcl(Enum):
    """
    S3 Canned Acl
    """

    AUTHENTICATED_READ = 'AUTHENTICATED_READ'
    BUCKET_OWNER_FULL_CONTROL = 'BUCKET_OWNER_FULL_CONTROL'
    BUCKET_OWNER_READ = 'BUCKET_OWNER_READ'
    PUBLIC_READ = 'PUBLIC_READ'


class AribDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Arib Destination Settings
    """

    pass


class AribSourceSettings(AcceptInputDeviceTransferResponse):
    """
    Arib Source Settings
    """

    pass


class _IntegerMin0Max7(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max7',
            ge=0.0,
            le=7.0,
        ),
    ]


class PassThroughSettings(AcceptInputDeviceTransferResponse):
    """
    Pass Through Settings
    """

    pass


class AudioType(Enum):
    """
    Audio Type
    """

    CLEAN_EFFECTS = 'CLEAN_EFFECTS'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    UNDEFINED = 'UNDEFINED'
    VISUAL_IMPAIRED_COMMENTARY = 'VISUAL_IMPAIRED_COMMENTARY'


class _StringMin1Max35(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin1Max35',
            max_length=35,
            min_length=1,
        ),
    ]


class _StringMin1(BaseModel):
    __root__: Annotated[
        str,
        Field(description='Placeholder documentation for __stringMin1', min_length=1),
    ]


class AudioHlsRenditionSelection(BaseModel):
    """
    Audio Hls Rendition Selection
    """

    GroupId: _StringMin1
    Name: _StringMin1


class AudioLanguageSelectionPolicy(Enum):
    """
    Audio Language Selection Policy
    """

    LOOSE = 'LOOSE'
    STRICT = 'STRICT'


class AudioLanguageSelection(BaseModel):
    """
    Audio Language Selection
    """

    LanguageCode: _String
    LanguageSelectionPolicy: Optional[AudioLanguageSelectionPolicy] = None


class AudioNormalizationAlgorithm(Enum):
    """
    Audio Normalization Algorithm
    """

    ITU_1770_1 = 'ITU_1770_1'
    ITU_1770_2 = 'ITU_1770_2'


class AudioNormalizationAlgorithmControl(Enum):
    """
    Audio Normalization Algorithm Control
    """

    CORRECT_AUDIO = 'CORRECT_AUDIO'


class _DoubleMinNegative59Max0(BaseModel):
    __root__: Annotated[
        float,
        Field(description='Placeholder documentation for __doubleMinNegative59Max0'),
    ]


class AudioOnlyHlsSegmentType(Enum):
    """
    Audio Only Hls Segment Type
    """

    AAC = 'AAC'
    FMP4 = 'FMP4'


class InputLocation(BaseModel):
    """
    Input Location
    """

    PasswordParam: Optional[_String] = None
    Uri: _String
    Username: Optional[_String] = None


class AudioOnlyHlsTrackType(Enum):
    """
    Audio Only Hls Track Type
    """

    ALTERNATE_AUDIO_AUTO_SELECT = 'ALTERNATE_AUDIO_AUTO_SELECT'
    ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT = 'ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT'
    ALTERNATE_AUDIO_NOT_AUTO_SELECT = 'ALTERNATE_AUDIO_NOT_AUTO_SELECT'
    AUDIO_ONLY_VARIANT_STREAM = 'AUDIO_ONLY_VARIANT_STREAM'


class AudioOnlyHlsSettings(BaseModel):
    """
    Audio Only Hls Settings
    """

    AudioGroupId: Optional[_String] = None
    AudioOnlyImage: Optional[InputLocation] = None
    AudioTrackType: Optional[AudioOnlyHlsTrackType] = None
    SegmentType: Optional[AudioOnlyHlsSegmentType] = None


class _IntegerMin0Max8191(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max8191',
            ge=0.0,
            le=8191.0,
        ),
    ]


class AudioPidSelection(BaseModel):
    """
    Audio Pid Selection
    """

    Pid: _IntegerMin0Max8191


class _IntegerMin1000(BaseModel):
    __root__: Annotated[
        int,
        Field(description='Placeholder documentation for __integerMin1000', ge=1000.0),
    ]


class AudioSilenceFailoverSettings(BaseModel):
    """
    Placeholder documentation for AudioSilenceFailoverSettings
    """

    AudioSelectorName: _String
    AudioSilenceThresholdMsec: Optional[_IntegerMin1000] = None


class AudioTrack(BaseModel):
    """
    Audio Track
    """

    Track: _IntegerMin1


class _ListOfAudioTrack(BaseModel):
    """
    Placeholder documentation for __listOfAudioTrack
    """

    __root__: Annotated[
        List[AudioTrack],
        Field(description='Placeholder documentation for __listOfAudioTrack'),
    ]


class AuthenticationScheme(Enum):
    """
    Authentication Scheme
    """

    AKAMAI = 'AKAMAI'
    COMMON = 'COMMON'


class InputPreference(Enum):
    """
        Input preference when deciding which input to make active when a previously failed input has recovered.
    If \"EQUAL_INPUT_PREFERENCE\", then the active input will stay active as long as it is healthy.
    If \"PRIMARY_INPUT_PREFERRED\", then always switch back to the primary input when it is healthy.

    """

    EQUAL_INPUT_PREFERENCE = 'EQUAL_INPUT_PREFERENCE'
    PRIMARY_INPUT_PREFERRED = 'PRIMARY_INPUT_PREFERRED'


class BatchDeleteRequest(BaseModel):
    """
    A request to delete resources
    """

    ChannelIds: Optional[_ListOfString] = None
    InputIds: Optional[_ListOfString] = None
    InputSecurityGroupIds: Optional[_ListOfString] = None
    MultiplexIds: Optional[_ListOfString] = None


class BatchFailedResultModel(BaseModel):
    """
    Details from a failed operation
    """

    Arn: Optional[_String] = None
    Code: Optional[_String] = None
    Id: Optional[_String] = None
    Message: Optional[_String] = None


class BatchScheduleActionDeleteRequest(BaseModel):
    """
    A list of schedule actions to delete.
    """

    ActionNames: _ListOfString


class BatchStartRequest(BaseModel):
    """
    A request to start resources
    """

    ChannelIds: Optional[_ListOfString] = None
    MultiplexIds: Optional[_ListOfString] = None


class BatchStopRequest(BaseModel):
    """
    A request to stop resources
    """

    ChannelIds: Optional[_ListOfString] = None
    MultiplexIds: Optional[_ListOfString] = None


class BatchSuccessfulResultModel(BaseModel):
    """
    Details from a successful operation
    """

    Arn: Optional[_String] = None
    Id: Optional[_String] = None
    State: Optional[_String] = None


class _StringMin34Max34(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin34Max34',
            max_length=34,
            min_length=34,
        ),
    ]


class BurnInAlignment(Enum):
    """
    Burn In Alignment
    """

    CENTERED = 'CENTERED'
    LEFT = 'LEFT'
    SMART = 'SMART'


class BurnInBackgroundColor(Enum):
    """
    Burn In Background Color
    """

    BLACK = 'BLACK'
    NONE = 'NONE'
    WHITE = 'WHITE'


class _IntegerMin0Max255(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max255',
            ge=0.0,
            le=255.0,
        ),
    ]


class BurnInFontColor(Enum):
    """
    Burn In Font Color
    """

    BLACK = 'BLACK'
    BLUE = 'BLUE'
    GREEN = 'GREEN'
    RED = 'RED'
    WHITE = 'WHITE'
    YELLOW = 'YELLOW'


class _IntegerMin96Max600(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin96Max600',
            ge=96.0,
            le=600.0,
        ),
    ]


class _IntegerMin0Max10(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max10',
            ge=0.0,
            le=10.0,
        ),
    ]


class BurnInTeletextGridControl(Enum):
    """
    Burn In Teletext Grid Control
    """

    FIXED = 'FIXED'
    SCALED = 'SCALED'


class _IntegerMin0(BaseModel):
    __root__: Annotated[
        int, Field(description='Placeholder documentation for __integerMin0', ge=0.0)
    ]


class BurnInDestinationSettings(BaseModel):
    """
    Burn In Destination Settings
    """

    Alignment: Optional[BurnInAlignment] = None
    BackgroundColor: Optional[BurnInBackgroundColor] = None
    BackgroundOpacity: Optional[_IntegerMin0Max255] = None
    Font: Optional[InputLocation] = None
    FontColor: Optional[BurnInFontColor] = None
    FontOpacity: Optional[_IntegerMin0Max255] = None
    FontResolution: Optional[_IntegerMin96Max600] = None
    FontSize: Optional[_String] = None
    OutlineColor: Optional[BurnInFontColor] = None
    OutlineSize: Optional[_IntegerMin0Max10] = None
    ShadowColor: Optional[BurnInBackgroundColor] = None
    ShadowOpacity: Optional[_IntegerMin0Max255] = None
    ShadowXOffset: Optional[_Integer] = None
    ShadowYOffset: Optional[_Integer] = None
    TeletextGridControl: Optional[BurnInTeletextGridControl] = None
    XPosition: Optional[_IntegerMin0] = None
    YPosition: Optional[_IntegerMin0] = None


class CancelInputDeviceTransferRequest(BaseModel):
    """
    Placeholder documentation for CancelInputDeviceTransferRequest
    """

    pass


class EmbeddedDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Embedded Destination Settings
    """

    pass


class EmbeddedPlusScte20DestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Embedded Plus Scte20 Destination Settings
    """

    pass


class RtmpCaptionInfoDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Rtmp Caption Info Destination Settings
    """

    pass


class Scte20PlusEmbeddedDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Scte20 Plus Embedded Destination Settings
    """

    pass


class Scte27DestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Scte27 Destination Settings
    """

    pass


class SmpteTtDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Smpte Tt Destination Settings
    """

    pass


class TeletextDestinationSettings(AcceptInputDeviceTransferResponse):
    """
    Teletext Destination Settings
    """

    pass


class _StringMin3Max3(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin3Max3',
            max_length=3,
            min_length=3,
        ),
    ]


class CaptionLanguageMapping(BaseModel):
    """
    Maps a caption channel to an ISO 693-2 language code (http://www.loc.gov/standards/iso639-2), with an optional description.
    """

    CaptionChannel: _IntegerMin1Max4
    LanguageCode: _StringMin3Max3
    LanguageDescription: _StringMin1


class _DoubleMin0Max100(BaseModel):
    __root__: Annotated[
        float, Field(description='Placeholder documentation for __doubleMin0Max100')
    ]


class CaptionRectangle(BaseModel):
    """
    Caption Rectangle
    """

    Height: _DoubleMin0Max100
    LeftOffset: _DoubleMin0Max100
    TopOffset: _DoubleMin0Max100
    Width: _DoubleMin0Max100


class TeletextSourceSettings(BaseModel):
    """
    Teletext Source Settings
    """

    OutputRectangle: Optional[CaptionRectangle] = None
    PageNumber: Optional[_String] = None


class CdiInputSpecification(BaseModel):
    """
    Placeholder documentation for CdiInputSpecification
    """

    Resolution: Optional[CdiInputResolution] = None


class ChannelClass(Enum):
    """
    A standard channel has two encoding pipelines and a single pipeline channel only has one.
    """

    STANDARD = 'STANDARD'
    SINGLE_PIPELINE = 'SINGLE_PIPELINE'


class InputSpecification(BaseModel):
    """
    Placeholder documentation for InputSpecification
    """

    Codec: Optional[InputCodec] = None
    MaximumBitrate: Optional[InputMaximumBitrate] = None
    Resolution: Optional[InputResolution] = None


class LogLevel(Enum):
    """
    The log level the user wants for their channel.
    """

    ERROR = 'ERROR'
    WARNING = 'WARNING'
    INFO = 'INFO'
    DEBUG = 'DEBUG'
    DISABLED = 'DISABLED'


class ChannelState(Enum):
    """
    Placeholder documentation for ChannelState
    """

    CREATING = 'CREATING'
    CREATE_FAILED = 'CREATE_FAILED'
    IDLE = 'IDLE'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    RECOVERING = 'RECOVERING'
    STOPPING = 'STOPPING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    UPDATING = 'UPDATING'
    UPDATE_FAILED = 'UPDATE_FAILED'


class Tags(BaseModel):
    """
    Placeholder documentation for Tags
    """

    pass

    class Config:
        extra = Extra.allow


class VpcOutputSettingsDescription(BaseModel):
    """
    The properties for a private VPC Output

    """

    AvailabilityZones: Optional[_ListOfString] = None
    NetworkInterfaceIds: Optional[_ListOfString] = None
    SecurityGroupIds: Optional[_ListOfString] = None
    SubnetIds: Optional[_ListOfString] = None


class ChannelEgressEndpoint(BaseModel):
    """
    Placeholder documentation for ChannelEgressEndpoint
    """

    SourceIp: Optional[_String] = None


class ColorSpacePassthroughSettings(AcceptInputDeviceTransferResponse):
    """
    Passthrough applies no color space conversion to the output
    """

    pass


class VpcOutputSettings(BaseModel):
    """
        The properties for a private VPC Output
    When this property is specified, the output egress addresses will be created in a user specified VPC

    """

    PublicAddressAllocationIds: Optional[_ListOfString] = None
    SecurityGroupIds: Optional[_ListOfString] = None
    SubnetIds: _ListOfString


class _ListOfInputDestinationRequest(BaseModel):
    """
    Placeholder documentation for __listOfInputDestinationRequest
    """

    __root__: Annotated[
        List[InputDestinationRequest],
        Field(
            description='Placeholder documentation for __listOfInputDestinationRequest'
        ),
    ]


class _ListOfInputDeviceSettings(BaseModel):
    """
    Placeholder documentation for __listOfInputDeviceSettings
    """

    __root__: Annotated[
        List[InputDeviceSettings],
        Field(description='Placeholder documentation for __listOfInputDeviceSettings'),
    ]


class _ListOfMediaConnectFlowRequest(BaseModel):
    """
    Placeholder documentation for __listOfMediaConnectFlowRequest
    """

    __root__: Annotated[
        List[MediaConnectFlowRequest],
        Field(
            description='Placeholder documentation for __listOfMediaConnectFlowRequest'
        ),
    ]


class _ListOfInputSourceRequest(BaseModel):
    """
    Placeholder documentation for __listOfInputSourceRequest
    """

    __root__: Annotated[
        List[InputSourceRequest],
        Field(description='Placeholder documentation for __listOfInputSourceRequest'),
    ]


class InputType(Enum):
    """
    Placeholder documentation for InputType
    """

    UDP_PUSH = 'UDP_PUSH'
    RTP_PUSH = 'RTP_PUSH'
    RTMP_PUSH = 'RTMP_PUSH'
    RTMP_PULL = 'RTMP_PULL'
    URL_PULL = 'URL_PULL'
    MP4_FILE = 'MP4_FILE'
    MEDIACONNECT = 'MEDIACONNECT'
    INPUT_DEVICE = 'INPUT_DEVICE'
    AWS_CDI = 'AWS_CDI'


class InputVpcRequest(BaseModel):
    """
        Settings for a private VPC Input.
    When this property is specified, the input destination addresses will be created in a VPC rather than with public Internet addresses.
    This property requires setting the roleArn property on Input creation.
    Not compatible with the inputSecurityGroups property.

    """

    SecurityGroupIds: Optional[_ListOfString] = None
    SubnetIds: _ListOfString


class CreateInputRequest(BaseModel):
    """
    The name of the input
    """

    Destinations: Optional[_ListOfInputDestinationRequest] = None
    InputDevices: Optional[_ListOfInputDeviceSettings] = None
    InputSecurityGroups: Optional[_ListOfString] = None
    MediaConnectFlows: Optional[_ListOfMediaConnectFlowRequest] = None
    Name: Optional[_String] = None
    RequestId: Optional[_String] = None
    RoleArn: Optional[_String] = None
    Sources: Optional[_ListOfInputSourceRequest] = None
    Tags: Optional[Tags] = None
    Type: Optional[InputType] = None
    Vpc: Optional[InputVpcRequest] = None


class _ListOfInputWhitelistRuleCidr(BaseModel):
    """
    Placeholder documentation for __listOfInputWhitelistRuleCidr
    """

    __root__: Annotated[
        List[InputWhitelistRuleCidr],
        Field(
            description='Placeholder documentation for __listOfInputWhitelistRuleCidr'
        ),
    ]


class CreateInputSecurityGroupRequest(BaseModel):
    """
    The IPv4 CIDRs to whitelist for this Input Security Group
    """

    Tags: Optional[Tags] = None
    WhitelistRules: Optional[_ListOfInputWhitelistRuleCidr] = None


class MultiplexSettings(BaseModel):
    """
    Contains configuration for a Multiplex event
    """

    MaximumVideoBufferDelayMilliseconds: Optional[_IntegerMin800Max3000] = None
    TransportStreamBitrate: _IntegerMin1000000Max100000000
    TransportStreamId: _IntegerMin0Max65535
    TransportStreamReservedBitrate: Optional[_IntegerMin0Max100000000] = None


class CreateMultiplexRequest(BaseModel):
    """
    A request to create a multiplex.
    """

    AvailabilityZones: _ListOfString
    MultiplexSettings: MultiplexSettings
    Name: _String
    RequestId: _String
    Tags: Optional[Tags] = None


class CreatePartnerInputRequest(BaseModel):
    """
    A request to create a partner input
    """

    RequestId: Optional[_String] = None
    Tags: Optional[Tags] = None


class CreateTagsRequest(BaseModel):
    """
    Placeholder documentation for CreateTagsRequest
    """

    Tags: Optional[Tags] = None


class DeleteChannelRequest(BaseModel):
    """
    Placeholder documentation for DeleteChannelRequest
    """

    pass


class DeleteInputRequest(BaseModel):
    """
    Placeholder documentation for DeleteInputRequest
    """

    pass


class DeleteInputSecurityGroupRequest(BaseModel):
    """
    Placeholder documentation for DeleteInputSecurityGroupRequest
    """

    pass


class DeleteMultiplexProgramRequest(BaseModel):
    """
    Placeholder documentation for DeleteMultiplexProgramRequest
    """

    pass


class DeleteMultiplexRequest(BaseModel):
    """
    Placeholder documentation for DeleteMultiplexRequest
    """

    pass


class MultiplexState(Enum):
    """
    The current state of the multiplex.
    """

    CREATING = 'CREATING'
    CREATE_FAILED = 'CREATE_FAILED'
    IDLE = 'IDLE'
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    RECOVERING = 'RECOVERING'
    STOPPING = 'STOPPING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class DeleteReservationRequest(BaseModel):
    """
    Placeholder documentation for DeleteReservationRequest
    """

    pass


class OfferingDurationUnits(Enum):
    """
    Units for duration, e.g. 'MONTHS'
    """

    MONTHS = 'MONTHS'


class OfferingType(Enum):
    """
    Offering type, e.g. 'NO_UPFRONT'
    """

    NO_UPFRONT = 'NO_UPFRONT'


class ReservationState(Enum):
    """
    Current reservation state
    """

    ACTIVE = 'ACTIVE'
    EXPIRED = 'EXPIRED'
    CANCELED = 'CANCELED'
    DELETED = 'DELETED'


class DeleteScheduleRequest(BaseModel):
    """
    Placeholder documentation for DeleteScheduleRequest
    """

    pass


class DeleteTagsRequest(BaseModel):
    """
    Placeholder documentation for DeleteTagsRequest
    """

    pass


class DescribeChannelRequest(BaseModel):
    """
    Placeholder documentation for DescribeChannelRequest
    """

    pass


class DescribeInputDeviceRequest(BaseModel):
    """
    Placeholder documentation for DescribeInputDeviceRequest
    """

    pass


class InputDeviceConnectionState(Enum):
    """
    The state of the connection between the input device and AWS.
    """

    DISCONNECTED = 'DISCONNECTED'
    CONNECTED = 'CONNECTED'


class DeviceSettingsSyncState(Enum):
    """
    The status of the action to synchronize the device configuration. If you change the configuration of the input device (for example, the maximum bitrate), MediaLive sends the new data to the device. The device might not update itself immediately. SYNCED means the device has updated its configuration. SYNCING means that it has not updated its configuration.
    """

    SYNCED = 'SYNCED'
    SYNCING = 'SYNCING'


class DeviceUpdateStatus(Enum):
    """
    The status of software on the input device.
    """

    UP_TO_DATE = 'UP_TO_DATE'
    NOT_UP_TO_DATE = 'NOT_UP_TO_DATE'


class InputDeviceType(Enum):
    """
    The type of the input device. For an AWS Elemental Link device that outputs resolutions up to 1080, choose "HD".
    """

    HD = 'HD'


class AcceptHeader(Enum):
    """
    The HTTP Accept header. Indicates the requested type fothe thumbnail.
    """

    image_jpeg = 'image/jpeg'


class DescribeInputDeviceThumbnailRequest(BaseModel):
    """
    Placeholder documentation for DescribeInputDeviceThumbnailRequest
    """

    pass


class InputDeviceThumbnail(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The binary data for the thumbnail that the Link device has most recently sent to MediaLive.'
        ),
    ]


class _Long(BaseModel):
    __root__: Annotated[int, Field(description='Placeholder documentation for __long')]


class _Timestamp(BaseModel):
    __root__: Annotated[
        datetime, Field(description='Placeholder documentation for __timestamp')
    ]


class DescribeInputRequest(BaseModel):
    """
    Placeholder documentation for DescribeInputRequest
    """

    pass


class InputSourceType(Enum):
    """
        There are two types of input sources, static and dynamic. If an input source is dynamic you can
    change the source url of the input dynamically using an input switch action. However, the only input type
    to support a dynamic url at this time is MP4_FILE. By default all input sources are static.

    """

    STATIC = 'STATIC'
    DYNAMIC = 'DYNAMIC'


class InputState(Enum):
    """
    Placeholder documentation for InputState
    """

    CREATING = 'CREATING'
    DETACHED = 'DETACHED'
    ATTACHED = 'ATTACHED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class DescribeInputSecurityGroupRequest(BaseModel):
    """
    Placeholder documentation for DescribeInputSecurityGroupRequest
    """

    pass


class InputSecurityGroupState(Enum):
    """
    Placeholder documentation for InputSecurityGroupState
    """

    IDLE = 'IDLE'
    IN_USE = 'IN_USE'
    UPDATING = 'UPDATING'
    DELETED = 'DELETED'


class DescribeMultiplexProgramRequest(BaseModel):
    """
    Placeholder documentation for DescribeMultiplexProgramRequest
    """

    pass


class DescribeMultiplexRequest(BaseModel):
    """
    Placeholder documentation for DescribeMultiplexRequest
    """

    pass


class DescribeOfferingRequest(BaseModel):
    """
    Placeholder documentation for DescribeOfferingRequest
    """

    pass


class DescribeReservationRequest(BaseModel):
    """
    Placeholder documentation for DescribeReservationRequest
    """

    pass


class MaxResults(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for MaxResults', ge=1.0, le=1000.0
        ),
    ]


class DescribeScheduleRequest(BaseModel):
    """
    Placeholder documentation for DescribeScheduleRequest
    """

    pass


class _IntegerMin0Max65536(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max65536',
            ge=0.0,
            le=65536.0,
        ),
    ]


class _StringMin1Max256(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin1Max256',
            max_length=256,
            min_length=1,
        ),
    ]


class _IntegerMin25Max10000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin25Max10000',
            ge=25.0,
            le=10000.0,
        ),
    ]


class DvbNitSettings(BaseModel):
    """
    DVB Network Information Table (NIT)
    """

    NetworkId: _IntegerMin0Max65536
    NetworkName: _StringMin1Max256
    RepInterval: Optional[_IntegerMin25Max10000] = None


class DvbSdtOutputSdt(Enum):
    """
    Dvb Sdt Output Sdt
    """

    SDT_FOLLOW = 'SDT_FOLLOW'
    SDT_FOLLOW_IF_PRESENT = 'SDT_FOLLOW_IF_PRESENT'
    SDT_MANUAL = 'SDT_MANUAL'
    SDT_NONE = 'SDT_NONE'


class _IntegerMin25Max2000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin25Max2000',
            ge=25.0,
            le=2000.0,
        ),
    ]


class DvbSdtSettings(BaseModel):
    """
    DVB Service Description Table (SDT)
    """

    OutputSdt: Optional[DvbSdtOutputSdt] = None
    RepInterval: Optional[_IntegerMin25Max2000] = None
    ServiceName: Optional[_StringMin1Max256] = None
    ServiceProviderName: Optional[_StringMin1Max256] = None


class DvbSubOcrLanguage(Enum):
    """
    Dvb Sub Ocr Language
    """

    DEU = 'DEU'
    ENG = 'ENG'
    FRA = 'FRA'
    NLD = 'NLD'
    POR = 'POR'
    SPA = 'SPA'


class _IntegerMin1000Max30000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1000Max30000',
            ge=1000.0,
            le=30000.0,
        ),
    ]


class DvbTdtSettings(BaseModel):
    """
    DVB Time and Date Table (SDT)
    """

    RepInterval: Optional[_IntegerMin1000Max30000] = None


class Eac3AttenuationControl(Enum):
    """
    Eac3 Attenuation Control
    """

    ATTENUATE_3_DB = 'ATTENUATE_3_DB'
    NONE = 'NONE'


class Eac3BitstreamMode(Enum):
    """
    Eac3 Bitstream Mode
    """

    COMMENTARY = 'COMMENTARY'
    COMPLETE_MAIN = 'COMPLETE_MAIN'
    EMERGENCY = 'EMERGENCY'
    HEARING_IMPAIRED = 'HEARING_IMPAIRED'
    VISUALLY_IMPAIRED = 'VISUALLY_IMPAIRED'


class Eac3CodingMode(Enum):
    """
    Eac3 Coding Mode
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_3_2 = 'CODING_MODE_3_2'


class Eac3DrcLine(Enum):
    """
    Eac3 Drc Line
    """

    FILM_LIGHT = 'FILM_LIGHT'
    FILM_STANDARD = 'FILM_STANDARD'
    MUSIC_LIGHT = 'MUSIC_LIGHT'
    MUSIC_STANDARD = 'MUSIC_STANDARD'
    NONE = 'NONE'
    SPEECH = 'SPEECH'


class Eac3LfeControl(Enum):
    """
    Eac3 Lfe Control
    """

    LFE = 'LFE'
    NO_LFE = 'NO_LFE'


class Eac3PassthroughControl(Enum):
    """
    Eac3 Passthrough Control
    """

    NO_PASSTHROUGH = 'NO_PASSTHROUGH'
    WHEN_POSSIBLE = 'WHEN_POSSIBLE'


class Eac3PhaseControl(Enum):
    """
    Eac3 Phase Control
    """

    NO_SHIFT = 'NO_SHIFT'
    SHIFT_90_DEGREES = 'SHIFT_90_DEGREES'


class Eac3StereoDownmix(Enum):
    """
    Eac3 Stereo Downmix
    """

    DPL2 = 'DPL2'
    LO_RO = 'LO_RO'
    LT_RT = 'LT_RT'
    NOT_INDICATED = 'NOT_INDICATED'


class Eac3SurroundExMode(Enum):
    """
    Eac3 Surround Ex Mode
    """

    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'
    NOT_INDICATED = 'NOT_INDICATED'


class _StringMax1000(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMax1000', max_length=1000
        ),
    ]


class EbuTtDDestinationStyleControl(Enum):
    """
    Ebu Tt DDestination Style Control
    """

    EXCLUDE = 'EXCLUDE'
    INCLUDE = 'INCLUDE'


class EmbeddedConvert608To708(Enum):
    """
    Embedded Convert608 To708
    """

    DISABLED = 'DISABLED'
    UPCONVERT = 'UPCONVERT'


class EmbeddedScte20Detection(Enum):
    """
    Embedded Scte20 Detection
    """

    AUTO = 'AUTO'
    OFF = 'OFF'


class _IntegerMin1Max5(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max5',
            ge=1.0,
            le=5.0,
        ),
    ]


class FecOutputIncludeFec(Enum):
    """
    Fec Output Include Fec
    """

    COLUMN = 'COLUMN'
    COLUMN_AND_ROW = 'COLUMN_AND_ROW'


class _IntegerMin4Max20(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin4Max20',
            ge=4.0,
            le=20.0,
        ),
    ]


class _IntegerMin1Max20(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max20',
            ge=1.0,
            le=20.0,
        ),
    ]


class FecOutputSettings(BaseModel):
    """
    Fec Output Settings
    """

    ColumnDepth: Optional[_IntegerMin4Max20] = None
    IncludeFec: Optional[FecOutputIncludeFec] = None
    RowLength: Optional[_IntegerMin1Max20] = None


class FixedAfd(Enum):
    """
    Fixed Afd
    """

    AFD_0000 = 'AFD_0000'
    AFD_0010 = 'AFD_0010'
    AFD_0011 = 'AFD_0011'
    AFD_0100 = 'AFD_0100'
    AFD_1000 = 'AFD_1000'
    AFD_1001 = 'AFD_1001'
    AFD_1010 = 'AFD_1010'
    AFD_1011 = 'AFD_1011'
    AFD_1101 = 'AFD_1101'
    AFD_1110 = 'AFD_1110'
    AFD_1111 = 'AFD_1111'


class FixedModeScheduleActionStartSettings(BaseModel):
    """
    Start time for the action.
    """

    Time: _String


class Fmp4NielsenId3Behavior(Enum):
    """
    Fmp4 Nielsen Id3 Behavior
    """

    NO_PASSTHROUGH = 'NO_PASSTHROUGH'
    PASSTHROUGH = 'PASSTHROUGH'


class Fmp4HlsSettings(BaseModel):
    """
    Fmp4 Hls Settings
    """

    AudioRenditionSets: Optional[_String] = None
    NielsenId3Behavior: Optional[Fmp4NielsenId3Behavior] = None
    TimedMetadataBehavior: Optional[Fmp4NielsenId3Behavior] = None


class FollowPoint(Enum):
    """
    Follow reference point.
    """

    END = 'END'
    START = 'START'


class FollowModeScheduleActionStartSettings(BaseModel):
    """
    Settings to specify if an action follows another.
    """

    FollowPoint: FollowPoint
    ReferenceActionName: _String


class FrameCaptureS3Settings(BaseModel):
    """
    Frame Capture S3 Settings
    """

    CannedAcl: Optional[S3CannedAcl] = None


class FrameCaptureCdnSettings(BaseModel):
    """
    Frame Capture Cdn Settings
    """

    FrameCaptureS3Settings: Optional[FrameCaptureS3Settings] = None


class FrameCaptureGroupSettings(BaseModel):
    """
    Frame Capture Group Settings
    """

    Destination: OutputLocationRef
    FrameCaptureCdnSettings: Optional[FrameCaptureCdnSettings] = None


class FrameCaptureHlsSettings(AcceptInputDeviceTransferResponse):
    """
    Frame Capture Hls Settings
    """

    pass


class FrameCaptureIntervalUnit(Enum):
    """
    Frame Capture Interval Unit
    """

    MILLISECONDS = 'MILLISECONDS'
    SECONDS = 'SECONDS'


class FrameCaptureOutputSettings(BaseModel):
    """
    Frame Capture Output Settings
    """

    NameModifier: Optional[_String] = None


class _IntegerMin1Max3600000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max3600000',
            ge=1.0,
            le=3600000.0,
        ),
    ]


class FrameCaptureSettings(BaseModel):
    """
    Frame Capture Settings
    """

    CaptureInterval: Optional[_IntegerMin1Max3600000] = None
    CaptureIntervalUnits: Optional[FrameCaptureIntervalUnit] = None


class _IntegerMinNegative60Max60(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMinNegative60Max60',
            ge=-60.0,
            le=60.0,
        ),
    ]


class GlobalConfigurationInputEndAction(Enum):
    """
    Global Configuration Input End Action
    """

    NONE = 'NONE'
    SWITCH_AND_LOOP_INPUTS = 'SWITCH_AND_LOOP_INPUTS'


class GlobalConfigurationOutputLockingMode(Enum):
    """
    Global Configuration Output Locking Mode
    """

    EPOCH_LOCKING = 'EPOCH_LOCKING'
    PIPELINE_LOCKING = 'PIPELINE_LOCKING'


class GlobalConfigurationOutputTimingSource(Enum):
    """
    Global Configuration Output Timing Source
    """

    INPUT_CLOCK = 'INPUT_CLOCK'
    SYSTEM_CLOCK = 'SYSTEM_CLOCK'


class H264AdaptiveQuantization(Enum):
    """
    H264 Adaptive Quantization
    """

    AUTO = 'AUTO'
    HIGH = 'HIGH'
    HIGHER = 'HIGHER'
    LOW = 'LOW'
    MAX = 'MAX'
    MEDIUM = 'MEDIUM'
    OFF = 'OFF'


class H264ColorMetadata(Enum):
    """
    H264 Color Metadata
    """

    IGNORE = 'IGNORE'
    INSERT = 'INSERT'


class Rec601Settings(AcceptInputDeviceTransferResponse):
    """
    Rec601 Settings
    """

    pass


class Rec709Settings(AcceptInputDeviceTransferResponse):
    """
    Rec709 Settings
    """

    pass


class H264ColorSpaceSettings(BaseModel):
    """
    H264 Color Space Settings
    """

    ColorSpacePassthroughSettings: Optional[ColorSpacePassthroughSettings] = None
    Rec601Settings: Optional[Rec601Settings] = None
    Rec709Settings: Optional[Rec709Settings] = None


class H264EntropyEncoding(Enum):
    """
    H264 Entropy Encoding
    """

    CABAC = 'CABAC'
    CAVLC = 'CAVLC'


class H264FramerateControl(Enum):
    """
    H264 Framerate Control
    """

    INITIALIZE_FROM_SOURCE = 'INITIALIZE_FROM_SOURCE'
    SPECIFIED = 'SPECIFIED'


class H264GopSizeUnits(Enum):
    """
    H264 Gop Size Units
    """

    FRAMES = 'FRAMES'
    SECONDS = 'SECONDS'


class H264Level(Enum):
    """
    H264 Level
    """

    H264_LEVEL_1 = 'H264_LEVEL_1'
    H264_LEVEL_1_1 = 'H264_LEVEL_1_1'
    H264_LEVEL_1_2 = 'H264_LEVEL_1_2'
    H264_LEVEL_1_3 = 'H264_LEVEL_1_3'
    H264_LEVEL_2 = 'H264_LEVEL_2'
    H264_LEVEL_2_1 = 'H264_LEVEL_2_1'
    H264_LEVEL_2_2 = 'H264_LEVEL_2_2'
    H264_LEVEL_3 = 'H264_LEVEL_3'
    H264_LEVEL_3_1 = 'H264_LEVEL_3_1'
    H264_LEVEL_3_2 = 'H264_LEVEL_3_2'
    H264_LEVEL_4 = 'H264_LEVEL_4'
    H264_LEVEL_4_1 = 'H264_LEVEL_4_1'
    H264_LEVEL_4_2 = 'H264_LEVEL_4_2'
    H264_LEVEL_5 = 'H264_LEVEL_5'
    H264_LEVEL_5_1 = 'H264_LEVEL_5_1'
    H264_LEVEL_5_2 = 'H264_LEVEL_5_2'
    H264_LEVEL_AUTO = 'H264_LEVEL_AUTO'


class H264LookAheadRateControl(Enum):
    """
    H264 Look Ahead Rate Control
    """

    HIGH = 'HIGH'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'


class H264Profile(Enum):
    """
    H264 Profile
    """

    BASELINE = 'BASELINE'
    HIGH = 'HIGH'
    HIGH_10BIT = 'HIGH_10BIT'
    HIGH_422 = 'HIGH_422'
    HIGH_422_10BIT = 'HIGH_422_10BIT'
    MAIN = 'MAIN'


class H264QualityLevel(Enum):
    """
    H264 Quality Level
    """

    ENHANCED_QUALITY = 'ENHANCED_QUALITY'
    STANDARD_QUALITY = 'STANDARD_QUALITY'


class H264RateControlMode(Enum):
    """
    H264 Rate Control Mode
    """

    CBR = 'CBR'
    MULTIPLEX = 'MULTIPLEX'
    QVBR = 'QVBR'
    VBR = 'VBR'


class H264ScanType(Enum):
    """
    H264 Scan Type
    """

    INTERLACED = 'INTERLACED'
    PROGRESSIVE = 'PROGRESSIVE'


class _IntegerMin0Max100(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max100',
            ge=0.0,
            le=100.0,
        ),
    ]


class _IntegerMin0Max30(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max30',
            ge=0.0,
            le=30.0,
        ),
    ]


class _IntegerMin1Max6(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max6',
            ge=1.0,
            le=6.0,
        ),
    ]


class _IntegerMin1Max10(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max10',
            ge=1.0,
            le=10.0,
        ),
    ]


class _IntegerMin1Max32(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max32',
            ge=1.0,
            le=32.0,
        ),
    ]


class _IntegerMin0Max128(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max128',
            ge=0.0,
            le=128.0,
        ),
    ]


class H264SubGopLength(Enum):
    """
    H264 Sub Gop Length
    """

    DYNAMIC = 'DYNAMIC'
    FIXED = 'FIXED'


class H264Syntax(Enum):
    """
    H264 Syntax
    """

    DEFAULT = 'DEFAULT'
    RP2027 = 'RP2027'


class H264TimecodeInsertionBehavior(Enum):
    """
    H264 Timecode Insertion Behavior
    """

    DISABLED = 'DISABLED'
    PIC_TIMING_SEI = 'PIC_TIMING_SEI'


class H265AlternativeTransferFunction(Enum):
    """
    H265 Alternative Transfer Function
    """

    INSERT = 'INSERT'
    OMIT = 'OMIT'


class H265Level(Enum):
    """
    H265 Level
    """

    H265_LEVEL_1 = 'H265_LEVEL_1'
    H265_LEVEL_2 = 'H265_LEVEL_2'
    H265_LEVEL_2_1 = 'H265_LEVEL_2_1'
    H265_LEVEL_3 = 'H265_LEVEL_3'
    H265_LEVEL_3_1 = 'H265_LEVEL_3_1'
    H265_LEVEL_4 = 'H265_LEVEL_4'
    H265_LEVEL_4_1 = 'H265_LEVEL_4_1'
    H265_LEVEL_5 = 'H265_LEVEL_5'
    H265_LEVEL_5_1 = 'H265_LEVEL_5_1'
    H265_LEVEL_5_2 = 'H265_LEVEL_5_2'
    H265_LEVEL_6 = 'H265_LEVEL_6'
    H265_LEVEL_6_1 = 'H265_LEVEL_6_1'
    H265_LEVEL_6_2 = 'H265_LEVEL_6_2'
    H265_LEVEL_AUTO = 'H265_LEVEL_AUTO'


class H265Profile(Enum):
    """
    H265 Profile
    """

    MAIN = 'MAIN'
    MAIN_10BIT = 'MAIN_10BIT'


class H265RateControlMode(Enum):
    """
    H265 Rate Control Mode
    """

    CBR = 'CBR'
    MULTIPLEX = 'MULTIPLEX'
    QVBR = 'QVBR'


class _IntegerMin100000Max40000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin100000Max40000000',
            ge=100000.0,
            le=40000000.0,
        ),
    ]


class _IntegerMin100000Max80000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin100000Max80000000',
            ge=100000.0,
            le=80000000.0,
        ),
    ]


class _IntegerMin1Max3003(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max3003',
            ge=1.0,
            le=3003.0,
        ),
    ]


class _IntegerMin1Max16(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max16',
            ge=1.0,
            le=16.0,
        ),
    ]


class H265Tier(Enum):
    """
    H265 Tier
    """

    HIGH = 'HIGH'
    MAIN = 'MAIN'


class _IntegerMin0Max32768(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max32768',
            ge=0.0,
            le=32768.0,
        ),
    ]


class HlsAdMarkers(Enum):
    """
    Hls Ad Markers
    """

    ADOBE = 'ADOBE'
    ELEMENTAL = 'ELEMENTAL'
    ELEMENTAL_SCTE35 = 'ELEMENTAL_SCTE35'


class HlsAkamaiHttpTransferMode(Enum):
    """
    Hls Akamai Http Transfer Mode
    """

    CHUNKED = 'CHUNKED'
    NON_CHUNKED = 'NON_CHUNKED'


class _IntegerMin0Max600(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max600',
            ge=0.0,
            le=600.0,
        ),
    ]


class _IntegerMin0Max15(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max15',
            ge=0.0,
            le=15.0,
        ),
    ]


class HlsAkamaiSettings(BaseModel):
    """
    Hls Akamai Settings
    """

    ConnectionRetryInterval: Optional[_IntegerMin0] = None
    FilecacheDuration: Optional[_IntegerMin0Max600] = None
    HttpTransferMode: Optional[HlsAkamaiHttpTransferMode] = None
    NumRetries: Optional[_IntegerMin0] = None
    RestartDelay: Optional[_IntegerMin0Max15] = None
    Salt: Optional[_String] = None
    Token: Optional[_String] = None


class HlsBasicPutSettings(BaseModel):
    """
    Hls Basic Put Settings
    """

    ConnectionRetryInterval: Optional[_IntegerMin0] = None
    FilecacheDuration: Optional[_IntegerMin0Max600] = None
    NumRetries: Optional[_IntegerMin0] = None
    RestartDelay: Optional[_IntegerMin0Max15] = None


class HlsCaptionLanguageSetting(Enum):
    """
    Hls Caption Language Setting
    """

    INSERT = 'INSERT'
    NONE = 'NONE'
    OMIT = 'OMIT'


class HlsS3Settings(FrameCaptureS3Settings):
    """
    Hls S3 Settings
    """

    pass


class HlsCodecSpecification(Enum):
    """
    Hls Codec Specification
    """

    RFC_4281 = 'RFC_4281'
    RFC_6381 = 'RFC_6381'


class HlsDirectoryStructure(Enum):
    """
    Hls Directory Structure
    """

    SINGLE_DIRECTORY = 'SINGLE_DIRECTORY'
    SUBDIRECTORY_PER_STREAM = 'SUBDIRECTORY_PER_STREAM'


class HlsDiscontinuityTags(Enum):
    """
    Hls Discontinuity Tags
    """

    INSERT = 'INSERT'
    NEVER_INSERT = 'NEVER_INSERT'


class HlsEncryptionType(Enum):
    """
    Hls Encryption Type
    """

    AES128 = 'AES128'
    SAMPLE_AES = 'SAMPLE_AES'


class _ListOfHlsAdMarkers(BaseModel):
    """
    Placeholder documentation for __listOfHlsAdMarkers
    """

    __root__: Annotated[
        List[HlsAdMarkers],
        Field(description='Placeholder documentation for __listOfHlsAdMarkers'),
    ]


class _ListOfCaptionLanguageMapping(BaseModel):
    """
    Placeholder documentation for __listOfCaptionLanguageMapping
    """

    __root__: Annotated[
        List[CaptionLanguageMapping],
        Field(
            description='Placeholder documentation for __listOfCaptionLanguageMapping'
        ),
    ]


class _StringMin32Max32(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin32Max32',
            max_length=32,
            min_length=32,
        ),
    ]


class IFrameOnlyPlaylistType(Enum):
    """
    When set to "standard", an I-Frame only playlist will be written out for each video output in the output group. This I-Frame only playlist will contain byte range offsets pointing to the I-frame(s) in each segment.
    """

    DISABLED = 'DISABLED'
    STANDARD = 'STANDARD'


class HlsIncompleteSegmentBehavior(Enum):
    """
    Hls Incomplete Segment Behavior
    """

    AUTO = 'AUTO'
    SUPPRESS = 'SUPPRESS'


class _IntegerMin3(BaseModel):
    __root__: Annotated[
        int, Field(description='Placeholder documentation for __integerMin3', ge=3.0)
    ]


class InputLossActionForHlsOut(Enum):
    """
    Input Loss Action For Hls Out
    """

    EMIT_OUTPUT = 'EMIT_OUTPUT'
    PAUSE_OUTPUT = 'PAUSE_OUTPUT'


class HlsIvSource(Enum):
    """
    Hls Iv Source
    """

    EXPLICIT = 'EXPLICIT'
    FOLLOWS_SEGMENT_NUMBER = 'FOLLOWS_SEGMENT_NUMBER'


class HlsManifestCompression(Enum):
    """
    Hls Manifest Compression
    """

    GZIP = 'GZIP'
    NONE = 'NONE'


class HlsManifestDurationFormat(Enum):
    """
    Hls Manifest Duration Format
    """

    FLOATING_POINT = 'FLOATING_POINT'
    INTEGER = 'INTEGER'


class HlsMode(Enum):
    """
    Hls Mode
    """

    LIVE = 'LIVE'
    VOD = 'VOD'


class HlsOutputSelection(Enum):
    """
    Hls Output Selection
    """

    MANIFESTS_AND_SEGMENTS = 'MANIFESTS_AND_SEGMENTS'
    SEGMENTS_ONLY = 'SEGMENTS_ONLY'
    VARIANT_MANIFESTS_AND_SEGMENTS = 'VARIANT_MANIFESTS_AND_SEGMENTS'


class _IntegerMin0Max3600(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max3600',
            ge=0.0,
            le=3600.0,
        ),
    ]


class HlsSegmentationMode(Enum):
    """
    Hls Segmentation Mode
    """

    USE_INPUT_SEGMENTATION = 'USE_INPUT_SEGMENTATION'
    USE_SEGMENT_DURATION = 'USE_SEGMENT_DURATION'


class HlsTimedMetadataId3Frame(Enum):
    """
    Hls Timed Metadata Id3 Frame
    """

    NONE = 'NONE'
    PRIV = 'PRIV'
    TDRL = 'TDRL'


class HlsTsFileMode(Enum):
    """
    Hls Ts File Mode
    """

    SEGMENTED_FILES = 'SEGMENTED_FILES'
    SINGLE_FILE = 'SINGLE_FILE'


class HlsH265PackagingType(Enum):
    """
    Hls H265 Packaging Type
    """

    HEV1 = 'HEV1'
    HVC1 = 'HVC1'


class HlsId3SegmentTaggingScheduleActionSettings(BaseModel):
    """
    Settings for the action to insert a user-defined ID3 tag in each HLS segment
    """

    Tag: _String


class HlsScte35SourceType(Enum):
    """
    Hls Scte35 Source Type
    """

    MANIFEST = 'MANIFEST'
    SEGMENTS = 'SEGMENTS'


class HlsInputSettings(BaseModel):
    """
    Hls Input Settings
    """

    Bandwidth: Optional[_IntegerMin0] = None
    BufferSegments: Optional[_IntegerMin0] = None
    Retries: Optional[_IntegerMin0] = None
    RetryInterval: Optional[_IntegerMin0] = None
    Scte35Source: Optional[HlsScte35SourceType] = None


class HlsMediaStoreStorageClass(Enum):
    """
    Hls Media Store Storage Class
    """

    TEMPORAL = 'TEMPORAL'


class HlsTimedMetadataScheduleActionSettings(BaseModel):
    """
    Settings for the action to emit HLS metadata
    """

    Id3: _String


class HtmlMotionGraphicsSettings(AcceptInputDeviceTransferResponse):
    """
    Html Motion Graphics Settings
    """

    pass


class ImmediateModeScheduleActionStartSettings(AcceptInputDeviceTransferResponse):
    """
    Settings to configure an action so that it occurs as soon as possible.
    """

    pass


class _IntegerMinNegative60Max6(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMinNegative60Max6',
            ge=-60.0,
            le=6.0,
        ),
    ]


class InputChannelLevel(BaseModel):
    """
    Input Channel Level
    """

    Gain: _IntegerMinNegative60Max6
    InputChannel: _IntegerMin0Max15


class InputTimecodeSource(Enum):
    """
    Documentation update needed
    """

    ZEROBASED = 'ZEROBASED'
    EMBEDDED = 'EMBEDDED'


class StartTimecode(BaseModel):
    """
    Settings to identify the start of the clip.
    """

    Timecode: Optional[_String] = None


class InputDestinationVpc(BaseModel):
    """
    The properties for a VPC type input destination.
    """

    AvailabilityZone: Optional[_String] = None
    NetworkInterfaceId: Optional[_String] = None


class InputDestination(BaseModel):
    """
    The settings for a PUSH type input.
    """

    Ip: Optional[_String] = None
    Port: Optional[_String] = None
    Url: Optional[_String] = None
    Vpc: Optional[InputDestinationVpc] = None


class InputDeviceActiveInput(Enum):
    """
    The source at the input device that is currently active.
    """

    HDMI = 'HDMI'
    SDI = 'SDI'


class InputDeviceConfigurableSettings(BaseModel):
    """
    Configurable settings for the input device.
    """

    ConfiguredInput: Optional[InputDeviceConfiguredInput] = None
    MaxBitrate: Optional[_Integer] = None


class InputDeviceState(Enum):
    """
    The state of the input device.
    """

    IDLE = 'IDLE'
    STREAMING = 'STREAMING'


class InputDeviceIpScheme(Enum):
    """
    Specifies whether the input device has been configured (outside of MediaLive) to use a dynamic IP address assignment (DHCP) or a static IP address.
    """

    STATIC = 'STATIC'
    DHCP = 'DHCP'


class InputDeviceTransferType(Enum):
    """
    The type of device transfer. INCOMING for an input device that is being transferred to you, OUTGOING for an input device that you are transferring to another AWS account.
    """

    OUTGOING = 'OUTGOING'
    INCOMING = 'INCOMING'


class InputFilter(Enum):
    """
    Input Filter
    """

    AUTO = 'AUTO'
    DISABLED = 'DISABLED'
    FORCED = 'FORCED'


class InputLossActionForUdpOut(Enum):
    """
    Input Loss Action For Udp Out
    """

    DROP_PROGRAM = 'DROP_PROGRAM'
    DROP_TS = 'DROP_TS'
    EMIT_PROGRAM = 'EMIT_PROGRAM'


class _IntegerMin0Max1000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max1000000',
            ge=0.0,
            le=1000000.0,
        ),
    ]


class _StringMin6Max6(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin6Max6',
            max_length=6,
            min_length=6,
        ),
    ]


class InputLossImageType(Enum):
    """
    Input Loss Image Type
    """

    COLOR = 'COLOR'
    SLATE = 'SLATE'


class _IntegerMin100(BaseModel):
    __root__: Annotated[
        int,
        Field(description='Placeholder documentation for __integerMin100', ge=100.0),
    ]


class Smpte2038DataPreference(Enum):
    """
    Smpte2038 Data Preference
    """

    IGNORE = 'IGNORE'
    PREFER = 'PREFER'


class InputSourceEndBehavior(Enum):
    """
    Input Source End Behavior
    """

    CONTINUE = 'CONTINUE'
    LOOP = 'LOOP'


class InputSource(InputSourceRequest):
    """
    The settings for a PULL type input.
    """

    pass


class InputWhitelistRule(InputWhitelistRuleCidr):
    """
    Whitelist rule
    """

    pass


class StaticKeySettings(BaseModel):
    """
    Static Key Settings
    """

    KeyProviderServer: Optional[InputLocation] = None
    StaticKeyValue: _StringMin32Max32


class LastFrameClippingBehavior(Enum):
    """
    If you specify a StopTimecode in an input (in order to clip the file), you can specify if you want the clip to exclude (the default) or include the frame specified by the timecode.
    """

    EXCLUDE_LAST_FRAME = 'EXCLUDE_LAST_FRAME'
    INCLUDE_LAST_FRAME = 'INCLUDE_LAST_FRAME'


class ListChannelsRequest(BaseModel):
    """
    Placeholder documentation for ListChannelsRequest
    """

    pass


class ListInputDeviceTransfersRequest(BaseModel):
    """
    Placeholder documentation for ListInputDeviceTransfersRequest
    """

    pass


class ListInputDevicesRequest(BaseModel):
    """
    Placeholder documentation for ListInputDevicesRequest
    """

    pass


class ListInputSecurityGroupsRequest(BaseModel):
    """
    Placeholder documentation for ListInputSecurityGroupsRequest
    """

    pass


class ListInputsRequest(BaseModel):
    """
    Placeholder documentation for ListInputsRequest
    """

    pass


class ListMultiplexProgramsRequest(BaseModel):
    """
    Placeholder documentation for ListMultiplexProgramsRequest
    """

    pass


class ListMultiplexesRequest(BaseModel):
    """
    Placeholder documentation for ListMultiplexesRequest
    """

    pass


class ListOfferingsRequest(BaseModel):
    """
    Placeholder documentation for ListOfferingsRequest
    """

    pass


class ListReservationsRequest(BaseModel):
    """
    Placeholder documentation for ListReservationsRequest
    """

    pass


class ListTagsForResourceRequest(BaseModel):
    """
    Placeholder documentation for ListTagsForResourceRequest
    """

    pass


class M2tsAbsentInputAudioBehavior(Enum):
    """
    M2ts Absent Input Audio Behavior
    """

    DROP = 'DROP'
    ENCODE_SILENCE = 'ENCODE_SILENCE'


class M2tsAribCaptionsPidControl(Enum):
    """
    M2ts Arib Captions Pid Control
    """

    AUTO = 'AUTO'
    USE_CONFIGURED = 'USE_CONFIGURED'


class M2tsAudioBufferModel(Enum):
    """
    M2ts Audio Buffer Model
    """

    ATSC = 'ATSC'
    DVB = 'DVB'


class M2tsAudioInterval(Enum):
    """
    M2ts Audio Interval
    """

    VIDEO_AND_FIXED_INTERVALS = 'VIDEO_AND_FIXED_INTERVALS'
    VIDEO_INTERVAL = 'VIDEO_INTERVAL'


class M2tsBufferModel(Enum):
    """
    M2ts Buffer Model
    """

    MULTIPLEX = 'MULTIPLEX'
    NONE = 'NONE'


class M2tsEbifControl(Enum):
    """
    M2ts Ebif Control
    """

    NONE = 'NONE'
    PASSTHROUGH = 'PASSTHROUGH'


class M2tsEbpPlacement(Enum):
    """
    M2ts Ebp Placement
    """

    VIDEO_AND_AUDIO_PIDS = 'VIDEO_AND_AUDIO_PIDS'
    VIDEO_PID = 'VIDEO_PID'


class M2tsPcrControl(Enum):
    """
    M2ts Pcr Control
    """

    CONFIGURED_PCR_PERIOD = 'CONFIGURED_PCR_PERIOD'
    PCR_EVERY_PES_PACKET = 'PCR_EVERY_PES_PACKET'


class M2tsSegmentationMarkers(Enum):
    """
    M2ts Segmentation Markers
    """

    EBP = 'EBP'
    EBP_LEGACY = 'EBP_LEGACY'
    NONE = 'NONE'
    PSI_SEGSTART = 'PSI_SEGSTART'
    RAI_ADAPT = 'RAI_ADAPT'
    RAI_SEGSTART = 'RAI_SEGSTART'


class M2tsSegmentationStyle(Enum):
    """
    M2ts Segmentation Style
    """

    MAINTAIN_CADENCE = 'MAINTAIN_CADENCE'
    RESET_CADENCE = 'RESET_CADENCE'


class _IntegerMin0Max10000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max10000',
            ge=0.0,
            le=10000.0,
        ),
    ]


class _DoubleMin0(BaseModel):
    __root__: Annotated[
        float, Field(description='Placeholder documentation for __doubleMin0')
    ]


class _IntegerMin0Max1000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max1000',
            ge=0.0,
            le=1000.0,
        ),
    ]


class _IntegerMin0Max500(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin0Max500',
            ge=0.0,
            le=500.0,
        ),
    ]


class _DoubleMin1(BaseModel):
    __root__: Annotated[
        float, Field(description='Placeholder documentation for __doubleMin1')
    ]


class M3u8Settings(BaseModel):
    """
    Settings information for the .m3u8 container
    """

    AudioFramesPerPes: Optional[_IntegerMin0] = None
    AudioPids: Optional[_String] = None
    EcmPid: Optional[_String] = None
    NielsenId3Behavior: Optional[Fmp4NielsenId3Behavior] = None
    PatInterval: Optional[_IntegerMin0Max1000] = None
    PcrControl: Optional[M2tsPcrControl] = None
    PcrPeriod: Optional[_IntegerMin0Max500] = None
    PcrPid: Optional[_String] = None
    PmtInterval: Optional[_IntegerMin0Max1000] = None
    PmtPid: Optional[_String] = None
    ProgramNum: Optional[_IntegerMin0Max65535] = None
    Scte35Behavior: Optional[Fmp4NielsenId3Behavior] = None
    Scte35Pid: Optional[_String] = None
    TimedMetadataBehavior: Optional[Fmp4NielsenId3Behavior] = None
    TimedMetadataPid: Optional[_String] = None
    TransportStreamId: Optional[_IntegerMin0Max65535] = None
    VideoPid: Optional[_String] = None


class MediaConnectFlow(MediaConnectFlowRequest):
    """
    The settings for a MediaConnect Flow.
    """

    pass


class MediaPackageGroupSettings(BaseModel):
    """
    Media Package Group Settings
    """

    Destination: OutputLocationRef


class MediaPackageOutputDestinationSettings(BaseModel):
    """
    MediaPackage Output Destination Settings
    """

    ChannelId: Optional[_StringMin1] = None


class MediaPackageOutputSettings(AcceptInputDeviceTransferResponse):
    """
    Media Package Output Settings
    """

    pass


class _LongMin0Max86400000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __longMin0Max86400000',
            ge=0.0,
            le=86400000.0,
        ),
    ]


class MotionGraphicsActivateScheduleActionSettings(BaseModel):
    """
    Settings to specify the rendering of motion graphics into the video stream.
    """

    Duration: Optional[_LongMin0Max86400000] = None
    PasswordParam: Optional[_String] = None
    Url: Optional[_String] = None
    Username: Optional[_String] = None


class MotionGraphicsSettings(BaseModel):
    """
    Motion Graphics Settings
    """

    HtmlMotionGraphicsSettings: Optional[HtmlMotionGraphicsSettings] = None


class MotionGraphicsDeactivateScheduleActionSettings(AcceptInputDeviceTransferResponse):
    """
    Settings to specify the ending of rendering motion graphics into the video stream.
    """

    pass


class Mp2CodingMode(Enum):
    """
    Mp2 Coding Mode
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'


class Mpeg2AdaptiveQuantization(Enum):
    """
    Mpeg2 Adaptive Quantization
    """

    AUTO = 'AUTO'
    HIGH = 'HIGH'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    OFF = 'OFF'


class Mpeg2ColorSpace(Enum):
    """
    Mpeg2 Color Space
    """

    AUTO = 'AUTO'
    PASSTHROUGH = 'PASSTHROUGH'


class Mpeg2DisplayRatio(Enum):
    """
    Mpeg2 Display Ratio
    """

    DISPLAYRATIO16X9 = 'DISPLAYRATIO16X9'
    DISPLAYRATIO4X3 = 'DISPLAYRATIO4X3'


class Mpeg2TimecodeInsertionBehavior(Enum):
    """
    Mpeg2 Timecode Insertion Behavior
    """

    DISABLED = 'DISABLED'
    GOP_TIMECODE = 'GOP_TIMECODE'


class SmoothGroupAudioOnlyTimecodeControl(Enum):
    """
    Smooth Group Audio Only Timecode Control
    """

    PASSTHROUGH = 'PASSTHROUGH'
    USE_CONFIGURED_CLOCK = 'USE_CONFIGURED_CLOCK'


class SmoothGroupCertificateMode(Enum):
    """
    Smooth Group Certificate Mode
    """

    SELF_SIGNED = 'SELF_SIGNED'
    VERIFY_AUTHENTICITY = 'VERIFY_AUTHENTICITY'


class SmoothGroupEventIdMode(Enum):
    """
    Smooth Group Event Id Mode
    """

    NO_EVENT_ID = 'NO_EVENT_ID'
    USE_CONFIGURED = 'USE_CONFIGURED'
    USE_TIMESTAMP = 'USE_TIMESTAMP'


class SmoothGroupEventStopBehavior(Enum):
    """
    Smooth Group Event Stop Behavior
    """

    NONE = 'NONE'
    SEND_EOS = 'SEND_EOS'


class SmoothGroupSparseTrackType(Enum):
    """
    Smooth Group Sparse Track Type
    """

    NONE = 'NONE'
    SCTE_35 = 'SCTE_35'
    SCTE_35_WITHOUT_SEGMENTATION = 'SCTE_35_WITHOUT_SEGMENTATION'


class SmoothGroupStreamManifestBehavior(Enum):
    """
    Smooth Group Stream Manifest Behavior
    """

    DO_NOT_SEND = 'DO_NOT_SEND'
    SEND = 'SEND'


class SmoothGroupTimestampOffsetMode(Enum):
    """
    Smooth Group Timestamp Offset Mode
    """

    USE_CONFIGURED_OFFSET = 'USE_CONFIGURED_OFFSET'
    USE_EVENT_START_DATE = 'USE_EVENT_START_DATE'


class MsSmoothGroupSettings(BaseModel):
    """
    Ms Smooth Group Settings
    """

    AcquisitionPointId: Optional[_String] = None
    AudioOnlyTimecodeControl: Optional[SmoothGroupAudioOnlyTimecodeControl] = None
    CertificateMode: Optional[SmoothGroupCertificateMode] = None
    ConnectionRetryInterval: Optional[_IntegerMin0] = None
    Destination: OutputLocationRef
    EventId: Optional[_String] = None
    EventIdMode: Optional[SmoothGroupEventIdMode] = None
    EventStopBehavior: Optional[SmoothGroupEventStopBehavior] = None
    FilecacheDuration: Optional[_IntegerMin0] = None
    FragmentLength: Optional[_IntegerMin1] = None
    InputLossAction: Optional[InputLossActionForHlsOut] = None
    NumRetries: Optional[_IntegerMin0] = None
    RestartDelay: Optional[_IntegerMin0] = None
    SegmentationMode: Optional[HlsSegmentationMode] = None
    SendDelayMs: Optional[_IntegerMin0Max10000] = None
    SparseTrackType: Optional[SmoothGroupSparseTrackType] = None
    StreamManifestBehavior: Optional[SmoothGroupStreamManifestBehavior] = None
    TimestampOffset: Optional[_String] = None
    TimestampOffsetMode: Optional[SmoothGroupTimestampOffsetMode] = None


class MsSmoothOutputSettings(BaseModel):
    """
    Ms Smooth Output Settings
    """

    H265PackagingType: Optional[HlsH265PackagingType] = None
    NameModifier: Optional[_String] = None


class MultiplexGroupSettings(AcceptInputDeviceTransferResponse):
    """
    Multiplex Group Settings
    """

    pass


class MultiplexMediaConnectOutputDestinationSettings(BaseModel):
    """
    Multiplex MediaConnect output destination settings.
    """

    EntitlementArn: Optional[_StringMin1] = None


class MultiplexOutputDestination(BaseModel):
    """
    Multiplex output destination settings
    """

    MediaConnectSettings: Optional[
        MultiplexMediaConnectOutputDestinationSettings
    ] = None


class MultiplexOutputSettings(MediaPackageGroupSettings):
    """
    Multiplex Output Settings
    """

    pass


class MultiplexProgramChannelDestinationSettings(BaseModel):
    """
    Multiplex Program Input Destination Settings for outputting a Channel to a Multiplex
    """

    MultiplexId: Optional[_StringMin1] = None
    ProgramName: Optional[_StringMin1] = None


class _ListOfInteger(BaseModel):
    """
    Placeholder documentation for __listOf__integer
    """

    __root__: Annotated[
        List[_Integer],
        Field(description='Placeholder documentation for __listOf__integer'),
    ]


class MultiplexProgramPipelineDetail(BaseModel):
    """
    The current source for one of the pipelines in the multiplex.
    """

    ActiveChannelPipeline: Optional[_String] = None
    PipelineId: Optional[_String] = None


class _StringMax256(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMax256', max_length=256
        ),
    ]


class MultiplexProgramSummary(BaseModel):
    """
    Placeholder documentation for MultiplexProgramSummary
    """

    ChannelId: Optional[_String] = None
    ProgramName: Optional[_String] = None


class MultiplexSettingsSummary(BaseModel):
    """
    Contains summary configuration for a Multiplex event.
    """

    TransportStreamBitrate: Optional[_IntegerMin1000000Max100000000] = None


class _IntegerMin100000Max100000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin100000Max100000000',
            ge=100000.0,
            le=100000000.0,
        ),
    ]


class _IntegerMinNegative5Max5(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMinNegative5Max5',
            ge=-5.0,
            le=5.0,
        ),
    ]


class MultiplexStatmuxVideoSettings(BaseModel):
    """
    Statmux rate control settings
    """

    MaximumBitrate: Optional[_IntegerMin100000Max100000000] = None
    MinimumBitrate: Optional[_IntegerMin100000Max100000000] = None
    Priority: Optional[_IntegerMinNegative5Max5] = None


class MultiplexSummary(BaseModel):
    """
    Placeholder documentation for MultiplexSummary
    """

    Arn: Optional[_String] = None
    AvailabilityZones: Optional[_ListOfString] = None
    Id: Optional[_String] = None
    MultiplexSettings: Optional[MultiplexSettingsSummary] = None
    Name: Optional[_String] = None
    PipelinesRunningCount: Optional[_Integer] = None
    ProgramCount: Optional[_Integer] = None
    State: Optional[MultiplexState] = None
    Tags: Optional[Tags] = None


class NetworkInputServerValidation(Enum):
    """
    Network Input Server Validation
    """

    CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME = 'CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME'
    CHECK_CRYPTOGRAPHY_ONLY = 'CHECK_CRYPTOGRAPHY_ONLY'


class _StringMin1Max255(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Placeholder documentation for __stringMin1Max255',
            max_length=255,
            min_length=1,
        ),
    ]


class _ListOfMediaPackageOutputDestinationSettings(BaseModel):
    """
    Placeholder documentation for __listOfMediaPackageOutputDestinationSettings
    """

    __root__: Annotated[
        List[MediaPackageOutputDestinationSettings],
        Field(
            description='Placeholder documentation for __listOfMediaPackageOutputDestinationSettings'
        ),
    ]


class OutputDestinationSettings(BaseModel):
    """
    Placeholder documentation for OutputDestinationSettings
    """

    PasswordParam: Optional[_String] = None
    StreamName: Optional[_String] = None
    Url: Optional[_String] = None
    Username: Optional[_String] = None


class _StringMax32(BaseModel):
    __root__: Annotated[
        str,
        Field(description='Placeholder documentation for __stringMax32', max_length=32),
    ]


class PipelineDetail(BaseModel):
    """
    Runtime details of a pipeline when a channel is running.
    """

    ActiveInputAttachmentName: Optional[_String] = None
    ActiveInputSwitchActionName: Optional[_String] = None
    ActiveMotionGraphicsActionName: Optional[_String] = None
    ActiveMotionGraphicsUri: Optional[_String] = None
    PipelineId: Optional[_String] = None


class PipelineId2(Enum):
    """
    Pipeline ID
    """

    PIPELINE_0 = 'PIPELINE_0'
    PIPELINE_1 = 'PIPELINE_1'


class PipelinePauseStateSettings(BaseModel):
    """
    Settings for pausing a pipeline.
    """

    PipelineId: PipelineId2


class PurchaseOfferingRequest(BaseModel):
    """
    Placeholder documentation for PurchaseOfferingRequest
    """

    Count: _IntegerMin1
    Name: Optional[_String] = None
    RequestId: Optional[_String] = None
    Start: Optional[_String] = None
    Tags: Optional[Tags] = None


class RejectInputDeviceTransferRequest(BaseModel):
    """
    Placeholder documentation for RejectInputDeviceTransferRequest
    """

    pass


class _IntegerMin1Max8(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max8',
            ge=1.0,
            le=8.0,
        ),
    ]


class ReservationCodec(Enum):
    """
    Codec, 'MPEG2', 'AVC', 'HEVC', or 'AUDIO'
    """

    MPEG2 = 'MPEG2'
    AVC = 'AVC'
    HEVC = 'HEVC'
    AUDIO = 'AUDIO'
    LINK = 'LINK'


class ReservationMaximumFramerate(Enum):
    """
    Maximum framerate in frames per second (Outputs only)
    """

    MAX_30_FPS = 'MAX_30_FPS'
    MAX_60_FPS = 'MAX_60_FPS'


class ReservationResourceType(Enum):
    """
    Resource type, 'INPUT', 'OUTPUT', 'MULTIPLEX', or 'CHANNEL'
    """

    INPUT = 'INPUT'
    OUTPUT = 'OUTPUT'
    MULTIPLEX = 'MULTIPLEX'
    CHANNEL = 'CHANNEL'


class ReservationSpecialFeature(Enum):
    """
    Special features, 'ADVANCED_AUDIO' 'AUDIO_NORMALIZATION' 'MGHD' or 'MGUHD'
    """

    ADVANCED_AUDIO = 'ADVANCED_AUDIO'
    AUDIO_NORMALIZATION = 'AUDIO_NORMALIZATION'
    MGHD = 'MGHD'
    MGUHD = 'MGUHD'


class ReservationVideoQuality(Enum):
    """
    Video quality, e.g. 'STANDARD' (Outputs only)
    """

    STANDARD = 'STANDARD'
    ENHANCED = 'ENHANCED'
    PREMIUM = 'PREMIUM'


class RtmpAdMarkers(Enum):
    """
    Rtmp Ad Markers
    """

    ON_CUE_POINT_SCTE35 = 'ON_CUE_POINT_SCTE35'


class RtmpCacheFullBehavior(Enum):
    """
    Rtmp Cache Full Behavior
    """

    DISCONNECT_IMMEDIATELY = 'DISCONNECT_IMMEDIATELY'
    WAIT_FOR_SERVER = 'WAIT_FOR_SERVER'


class RtmpCaptionData(Enum):
    """
    Rtmp Caption Data
    """

    ALL = 'ALL'
    FIELD1_608 = 'FIELD1_608'
    FIELD1_AND_FIELD2_608 = 'FIELD1_AND_FIELD2_608'


class _ListOfRtmpAdMarkers(BaseModel):
    """
    Placeholder documentation for __listOfRtmpAdMarkers
    """

    __root__: Annotated[
        List[RtmpAdMarkers],
        Field(description='Placeholder documentation for __listOfRtmpAdMarkers'),
    ]


class _IntegerMin30(BaseModel):
    __root__: Annotated[
        int, Field(description='Placeholder documentation for __integerMin30', ge=30.0)
    ]


class ScheduleActionStartSettings(BaseModel):
    """
    Settings to specify when an action should occur. Only one of the options must be selected.
    """

    FixedModeScheduleActionStartSettings: Optional[
        FixedModeScheduleActionStartSettings
    ] = None
    FollowModeScheduleActionStartSettings: Optional[
        FollowModeScheduleActionStartSettings
    ] = None
    ImmediateModeScheduleActionStartSettings: Optional[
        ImmediateModeScheduleActionStartSettings
    ] = None


class StaticImageActivateScheduleActionSettings(BaseModel):
    """
    Settings for the action to activate a static image.
    """

    Duration: Optional[_IntegerMin0] = None
    FadeIn: Optional[_IntegerMin0] = None
    FadeOut: Optional[_IntegerMin0] = None
    Height: Optional[_IntegerMin1] = None
    Image: InputLocation
    ImageX: Optional[_IntegerMin0] = None
    ImageY: Optional[_IntegerMin0] = None
    Layer: Optional[_IntegerMin0Max7] = None
    Opacity: Optional[_IntegerMin0Max100] = None
    Width: Optional[_IntegerMin1] = None


class StaticImageDeactivateScheduleActionSettings(BaseModel):
    """
    Settings for the action to deactivate the image in a specific layer.
    """

    FadeOut: Optional[_IntegerMin0] = None
    Layer: Optional[_IntegerMin0Max7] = None


class Scte35AposNoRegionalBlackoutBehavior(Enum):
    """
    Scte35 Apos No Regional Blackout Behavior
    """

    FOLLOW = 'FOLLOW'
    IGNORE = 'IGNORE'


class Scte35ArchiveAllowedFlag(Enum):
    """
    Corresponds to the archive_allowed parameter. A value of ARCHIVE_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    """

    ARCHIVE_NOT_ALLOWED = 'ARCHIVE_NOT_ALLOWED'
    ARCHIVE_ALLOWED = 'ARCHIVE_ALLOWED'


class Scte35DeviceRestrictions(Enum):
    """
    Corresponds to the device_restrictions parameter in a segmentation_descriptor. If you include one of the "restriction" flags then you must include all four of them.
    """

    NONE = 'NONE'
    RESTRICT_GROUP0 = 'RESTRICT_GROUP0'
    RESTRICT_GROUP1 = 'RESTRICT_GROUP1'
    RESTRICT_GROUP2 = 'RESTRICT_GROUP2'


class Scte35NoRegionalBlackoutFlag(Enum):
    """
    Corresponds to the no_regional_blackout_flag parameter. A value of REGIONAL_BLACKOUT corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    """

    REGIONAL_BLACKOUT = 'REGIONAL_BLACKOUT'
    NO_REGIONAL_BLACKOUT = 'NO_REGIONAL_BLACKOUT'


class Scte35WebDeliveryAllowedFlag(Enum):
    """
    Corresponds to the web_delivery_allowed_flag parameter. A value of WEB_DELIVERY_NOT_ALLOWED corresponds to 0 (false) in the SCTE-35 specification. If you include one of the "restriction" flags then you must include all four of them.
    """

    WEB_DELIVERY_NOT_ALLOWED = 'WEB_DELIVERY_NOT_ALLOWED'
    WEB_DELIVERY_ALLOWED = 'WEB_DELIVERY_ALLOWED'


class Scte35DeliveryRestrictions(BaseModel):
    """
    Corresponds to SCTE-35 delivery_not_restricted_flag parameter. To declare delivery restrictions, include this element and its four "restriction" flags. To declare that there are no restrictions, omit this element.
    """

    ArchiveAllowedFlag: Scte35ArchiveAllowedFlag
    DeviceRestrictions: Scte35DeviceRestrictions
    NoRegionalBlackoutFlag: Scte35NoRegionalBlackoutFlag
    WebDeliveryAllowedFlag: Scte35WebDeliveryAllowedFlag


class _LongMin0Max4294967295(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __longMin0Max4294967295',
            ge=0.0,
            le=4294967295.0,
        ),
    ]


class Scte35SegmentationCancelIndicator(Enum):
    """
    Corresponds to SCTE-35 segmentation_event_cancel_indicator. SEGMENTATION_EVENT_NOT_CANCELED corresponds to 0 in the SCTE-35 specification and indicates that this is an insertion request. SEGMENTATION_EVENT_CANCELED corresponds to 1 in the SCTE-35 specification and indicates that this is a cancelation request, in which case complete this field and the existing event ID to cancel.
    """

    SEGMENTATION_EVENT_NOT_CANCELED = 'SEGMENTATION_EVENT_NOT_CANCELED'
    SEGMENTATION_EVENT_CANCELED = 'SEGMENTATION_EVENT_CANCELED'


class _LongMin0Max1099511627775(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __longMin0Max1099511627775',
            ge=0.0,
            le=1099511627775.0,
        ),
    ]


class _IntegerMinNegative1000Max1000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMinNegative1000Max1000',
            ge=-1000.0,
            le=1000.0,
        ),
    ]


class _LongMin0Max8589934591(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __longMin0Max8589934591',
            ge=0.0,
            le=8589934591.0,
        ),
    ]


class StartChannelRequest(BaseModel):
    """
    Placeholder documentation for StartChannelRequest
    """

    pass


class StartMultiplexRequest(BaseModel):
    """
    Placeholder documentation for StartMultiplexRequest
    """

    pass


class StopChannelRequest(BaseModel):
    """
    Placeholder documentation for StopChannelRequest
    """

    pass


class StopMultiplexRequest(BaseModel):
    """
    Placeholder documentation for StopMultiplexRequest
    """

    pass


class TemporalFilterPostFilterSharpening(Enum):
    """
    Temporal Filter Post Filter Sharpening
    """

    AUTO = 'AUTO'
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class TemporalFilterStrength(Enum):
    """
    Temporal Filter Strength
    """

    AUTO = 'AUTO'
    STRENGTH_1 = 'STRENGTH_1'
    STRENGTH_2 = 'STRENGTH_2'
    STRENGTH_3 = 'STRENGTH_3'
    STRENGTH_4 = 'STRENGTH_4'
    STRENGTH_5 = 'STRENGTH_5'
    STRENGTH_6 = 'STRENGTH_6'
    STRENGTH_7 = 'STRENGTH_7'
    STRENGTH_8 = 'STRENGTH_8'
    STRENGTH_9 = 'STRENGTH_9'
    STRENGTH_10 = 'STRENGTH_10'
    STRENGTH_11 = 'STRENGTH_11'
    STRENGTH_12 = 'STRENGTH_12'
    STRENGTH_13 = 'STRENGTH_13'
    STRENGTH_14 = 'STRENGTH_14'
    STRENGTH_15 = 'STRENGTH_15'
    STRENGTH_16 = 'STRENGTH_16'


class TimecodeConfigSource(Enum):
    """
    Timecode Config Source
    """

    EMBEDDED = 'EMBEDDED'
    SYSTEMCLOCK = 'SYSTEMCLOCK'
    ZEROBASED = 'ZEROBASED'


class _IntegerMin1Max1000000(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Placeholder documentation for __integerMin1Max1000000',
            ge=1.0,
            le=1000000.0,
        ),
    ]


class TransferInputDeviceRequest(BaseModel):
    """
    A request to transfer an input device.
    """

    TargetCustomerId: Optional[_String] = None
    TargetRegion: Optional[_String] = None
    TransferMessage: Optional[_String] = None


class TransferringInputDeviceSummary(BaseModel):
    """
    Details about the input device that is being transferred.
    """

    Id: Optional[_String] = None
    Message: Optional[_String] = None
    TargetCustomerId: Optional[_String] = None
    TransferType: Optional[InputDeviceTransferType] = None


class TtmlDestinationStyleControl(Enum):
    """
    Ttml Destination Style Control
    """

    PASSTHROUGH = 'PASSTHROUGH'
    USE_CONFIGURED = 'USE_CONFIGURED'


class UpdateInputDeviceRequest(BaseModel):
    """
    A request to update an input device.
    """

    HdDeviceSettings: Optional[InputDeviceConfigurableSettings] = None
    Name: Optional[_String] = None
    UhdDeviceSettings: Optional[InputDeviceConfigurableSettings] = None


class _ListOfInputDeviceRequest(BaseModel):
    """
    Placeholder documentation for __listOfInputDeviceRequest
    """

    __root__: Annotated[
        List[InputDeviceRequest],
        Field(description='Placeholder documentation for __listOfInputDeviceRequest'),
    ]


class UpdateInputRequest(BaseModel):
    """
    A request to update an input.
    """

    Destinations: Optional[_ListOfInputDestinationRequest] = None
    InputDevices: Optional[_ListOfInputDeviceRequest] = None
    InputSecurityGroups: Optional[_ListOfString] = None
    MediaConnectFlows: Optional[_ListOfMediaConnectFlowRequest] = None
    Name: Optional[_String] = None
    RoleArn: Optional[_String] = None
    Sources: Optional[_ListOfInputSourceRequest] = None


class UpdateInputSecurityGroupRequest(BaseModel):
    """
    The request to update some combination of the Input Security Group name and the IPv4 CIDRs the Input Security Group should allow.
    """

    Tags: Optional[Tags] = None
    WhitelistRules: Optional[_ListOfInputWhitelistRuleCidr] = None


class UpdateMultiplexRequest(BaseModel):
    """
    A request to update a multiplex.
    """

    MultiplexSettings: Optional[MultiplexSettings] = None
    Name: Optional[_String] = None


class UpdateReservationRequest(BaseModel):
    """
    Request to update a reservation
    """

    Name: Optional[_String] = None


class _DoubleMin0Max1(BaseModel):
    __root__: Annotated[
        float, Field(description='Placeholder documentation for __doubleMin0Max1')
    ]


class VideoDescriptionRespondToAfd(Enum):
    """
    Video Description Respond To Afd
    """

    NONE = 'NONE'
    PASSTHROUGH = 'PASSTHROUGH'
    RESPOND = 'RESPOND'


class VideoDescriptionScalingBehavior(Enum):
    """
    Video Description Scaling Behavior
    """

    DEFAULT = 'DEFAULT'
    STRETCH_TO_OUTPUT = 'STRETCH_TO_OUTPUT'


class VideoSelectorColorSpace(Enum):
    """
    Video Selector Color Space
    """

    FOLLOW = 'FOLLOW'
    HDR10 = 'HDR10'
    HLG_2020 = 'HLG_2020'
    REC_601 = 'REC_601'
    REC_709 = 'REC_709'


class VideoSelectorColorSpaceUsage(Enum):
    """
    Video Selector Color Space Usage
    """

    FALLBACK = 'FALLBACK'
    FORCE = 'FORCE'


class VideoSelectorPid(BaseModel):
    """
    Video Selector Pid
    """

    Pid: Optional[_IntegerMin0Max8191] = None


class VideoSelectorProgramId(BaseModel):
    """
    Video Selector Program Id
    """

    ProgramId: Optional[_IntegerMin0Max65536] = None


class WavCodingMode(Enum):
    """
    Wav Coding Mode
    """

    CODING_MODE_1_0 = 'CODING_MODE_1_0'
    CODING_MODE_2_0 = 'CODING_MODE_2_0'
    CODING_MODE_4_0 = 'CODING_MODE_4_0'
    CODING_MODE_8_0 = 'CODING_MODE_8_0'


class WebvttDestinationStyleControl(Enum):
    """
    Webvtt Destination Style Control
    """

    NO_STYLE_DATA = 'NO_STYLE_DATA'
    PASSTHROUGH = 'PASSTHROUGH'


class AvailBlanking(BaseModel):
    """
    Avail Blanking
    """

    AvailBlankingImage: Optional[InputLocation] = None
    State: Optional[Ac3LfeFilter] = None


class BlackoutSlate(BaseModel):
    """
    Blackout Slate
    """

    BlackoutSlateImage: Optional[InputLocation] = None
    NetworkEndBlackout: Optional[Ac3LfeFilter] = None
    NetworkEndBlackoutImage: Optional[InputLocation] = None
    NetworkId: Optional[_StringMin34Max34] = None
    State: Optional[Ac3LfeFilter] = None


class FeatureActivations(BaseModel):
    """
    Feature Activations
    """

    InputPrepareScheduleActions: Optional[Ac3LfeFilter] = None


class MotionGraphicsConfiguration(BaseModel):
    """
    Motion Graphics Configuration
    """

    MotionGraphicsInsertion: Optional[Ac3LfeFilter] = None
    MotionGraphicsSettings: MotionGraphicsSettings


class NielsenConfiguration(BaseModel):
    """
    Nielsen Configuration
    """

    DistributorId: Optional[_String] = None
    NielsenPcmToId3Tagging: Optional[Ac3LfeFilter] = None


class TimecodeConfig(BaseModel):
    """
    Timecode Config
    """

    Source: TimecodeConfigSource
    SyncThreshold: Optional[_IntegerMin1Max1000000] = None


class MultiplexProgramServiceDescriptor(BaseModel):
    """
    Transport stream service descriptor configuration for the Multiplex program.
    """

    ProviderName: _StringMax256
    ServiceName: _StringMax256


class MultiplexVideoSettings(BaseModel):
    """
    The video configuration for each program in a multiplex.
    """

    ConstantBitrate: Optional[_IntegerMin100000Max100000000] = None
    StatmuxSettings: Optional[MultiplexStatmuxVideoSettings] = None


class DescribeInputDeviceThumbnailResponse(BaseModel):
    """
    Placeholder documentation for DescribeInputDeviceThumbnailResponse
    """

    Body: Optional[InputDeviceThumbnail] = None


class ListTagsForResourceResponse(BaseModel):
    """
    Placeholder documentation for ListTagsForResourceResponse
    """

    Tags: Optional[Tags] = None


class ArchiveS3Settings(FrameCaptureS3Settings):
    """
    Archive S3 Settings
    """

    pass


class ArchiveCdnSettings(BaseModel):
    """
    Archive Cdn Settings
    """

    ArchiveS3Settings: Optional[ArchiveS3Settings] = None


class M2tsSettings(BaseModel):
    """
    M2ts Settings
    """

    AbsentInputAudioBehavior: Optional[M2tsAbsentInputAudioBehavior] = None
    Arib: Optional[Ac3LfeFilter] = None
    AribCaptionsPid: Optional[_String] = None
    AribCaptionsPidControl: Optional[M2tsAribCaptionsPidControl] = None
    AudioBufferModel: Optional[M2tsAudioBufferModel] = None
    AudioFramesPerPes: Optional[_IntegerMin0] = None
    AudioPids: Optional[_String] = None
    AudioStreamType: Optional[M2tsAudioBufferModel] = None
    Bitrate: Optional[_IntegerMin0] = None
    BufferModel: Optional[M2tsBufferModel] = None
    CcDescriptor: Optional[Ac3LfeFilter] = None
    DvbNitSettings: Optional[DvbNitSettings] = None
    DvbSdtSettings: Optional[DvbSdtSettings] = None
    DvbSubPids: Optional[_String] = None
    DvbTdtSettings: Optional[DvbTdtSettings] = None
    DvbTeletextPid: Optional[_String] = None
    Ebif: Optional[M2tsEbifControl] = None
    EbpAudioInterval: Optional[M2tsAudioInterval] = None
    EbpLookaheadMs: Optional[_IntegerMin0Max10000] = None
    EbpPlacement: Optional[M2tsEbpPlacement] = None
    EcmPid: Optional[_String] = None
    EsRateInPes: Optional[EbuTtDDestinationStyleControl] = None
    EtvPlatformPid: Optional[_String] = None
    EtvSignalPid: Optional[_String] = None
    FragmentTime: Optional[_DoubleMin0] = None
    Klv: Optional[M2tsEbifControl] = None
    KlvDataPids: Optional[_String] = None
    NielsenId3Behavior: Optional[Fmp4NielsenId3Behavior] = None
    NullPacketBitrate: Optional[_DoubleMin0] = None
    PatInterval: Optional[_IntegerMin0Max1000] = None
    PcrControl: Optional[M2tsPcrControl] = None
    PcrPeriod: Optional[_IntegerMin0Max500] = None
    PcrPid: Optional[_String] = None
    PmtInterval: Optional[_IntegerMin0Max1000] = None
    PmtPid: Optional[_String] = None
    ProgramNum: Optional[_IntegerMin0Max65535] = None
    RateMode: Optional[AacRateControlMode] = None
    Scte27Pids: Optional[_String] = None
    Scte35Control: Optional[M2tsEbifControl] = None
    Scte35Pid: Optional[_String] = None
    SegmentationMarkers: Optional[M2tsSegmentationMarkers] = None
    SegmentationStyle: Optional[M2tsSegmentationStyle] = None
    SegmentationTime: Optional[_DoubleMin1] = None
    TimedMetadataBehavior: Optional[Fmp4NielsenId3Behavior] = None
    TimedMetadataPid: Optional[_String] = None
    TransportStreamId: Optional[_IntegerMin0Max65535] = None
    VideoPid: Optional[_String] = None


class ArchiveContainerSettings(BaseModel):
    """
    Archive Container Settings
    """

    M2tsSettings: Optional[M2tsSettings] = None
    RawSettings: Optional[RawSettings] = None


class ArchiveGroupSettings(BaseModel):
    """
    Archive Group Settings
    """

    ArchiveCdnSettings: Optional[ArchiveCdnSettings] = None
    Destination: OutputLocationRef
    RolloverInterval: Optional[_IntegerMin1] = None


class ArchiveOutputSettings(BaseModel):
    """
    Archive Output Settings
    """

    ContainerSettings: ArchiveContainerSettings
    Extension: Optional[_String] = None
    NameModifier: Optional[_String] = None


class _ListOfInputChannelLevel(BaseModel):
    """
    Placeholder documentation for __listOfInputChannelLevel
    """

    __root__: Annotated[
        List[InputChannelLevel],
        Field(description='Placeholder documentation for __listOfInputChannelLevel'),
    ]


class AudioChannelMapping(BaseModel):
    """
    Audio Channel Mapping
    """

    InputChannelLevels: _ListOfInputChannelLevel
    OutputChannel: _IntegerMin0Max7


class Eac3Settings(BaseModel):
    """
    Eac3 Settings
    """

    AttenuationControl: Optional[Eac3AttenuationControl] = None
    Bitrate: Optional[_Double] = None
    BitstreamMode: Optional[Eac3BitstreamMode] = None
    CodingMode: Optional[Eac3CodingMode] = None
    DcFilter: Optional[Ac3LfeFilter] = None
    Dialnorm: Optional[_IntegerMin1Max31] = None
    DrcLine: Optional[Eac3DrcLine] = None
    DrcRf: Optional[Eac3DrcLine] = None
    LfeControl: Optional[Eac3LfeControl] = None
    LfeFilter: Optional[Ac3LfeFilter] = None
    LoRoCenterMixLevel: Optional[_Double] = None
    LoRoSurroundMixLevel: Optional[_Double] = None
    LtRtCenterMixLevel: Optional[_Double] = None
    LtRtSurroundMixLevel: Optional[_Double] = None
    MetadataControl: Optional[Ac3MetadataControl] = None
    PassthroughControl: Optional[Eac3PassthroughControl] = None
    PhaseControl: Optional[Eac3PhaseControl] = None
    StereoDownmix: Optional[Eac3StereoDownmix] = None
    SurroundExMode: Optional[Eac3SurroundExMode] = None
    SurroundMode: Optional[Eac3SurroundExMode] = None


class Mp2Settings(BaseModel):
    """
    Mp2 Settings
    """

    Bitrate: Optional[_Double] = None
    CodingMode: Optional[Mp2CodingMode] = None
    SampleRate: Optional[_Double] = None


class WavSettings(BaseModel):
    """
    Wav Settings
    """

    BitDepth: Optional[_Double] = None
    CodingMode: Optional[WavCodingMode] = None
    SampleRate: Optional[_Double] = None


class AudioCodecSettings(BaseModel):
    """
    Audio Codec Settings
    """

    AacSettings: Optional[AacSettings] = None
    Ac3Settings: Optional[Ac3Settings] = None
    Eac3Settings: Optional[Eac3Settings] = None
    Mp2Settings: Optional[Mp2Settings] = None
    PassThroughSettings: Optional[PassThroughSettings] = None
    WavSettings: Optional[WavSettings] = None


class AudioNormalizationSettings(BaseModel):
    """
    Audio Normalization Settings
    """

    Algorithm: Optional[AudioNormalizationAlgorithm] = None
    AlgorithmControl: Optional[AudioNormalizationAlgorithmControl] = None
    TargetLkfs: Optional[_DoubleMinNegative59Max0] = None


class AudioTrackSelection(BaseModel):
    """
    Audio Track Selection
    """

    Tracks: _ListOfAudioTrack


class Scte35SpliceInsert(BaseModel):
    """
    Scte35 Splice Insert
    """

    AdAvailOffset: Optional[_IntegerMinNegative1000Max1000] = None
    NoRegionalBlackoutFlag: Optional[Scte35AposNoRegionalBlackoutBehavior] = None
    WebDeliveryAllowedFlag: Optional[Scte35AposNoRegionalBlackoutBehavior] = None


class Scte35TimeSignalApos(Scte35SpliceInsert):
    """
    Scte35 Time Signal Apos
    """

    pass


class _ListOfBatchFailedResultModel(BaseModel):
    """
    Placeholder documentation for __listOfBatchFailedResultModel
    """

    __root__: Annotated[
        List[BatchFailedResultModel],
        Field(
            description='Placeholder documentation for __listOfBatchFailedResultModel'
        ),
    ]


class _ListOfBatchSuccessfulResultModel(BaseModel):
    """
    Placeholder documentation for __listOfBatchSuccessfulResultModel
    """

    __root__: Annotated[
        List[BatchSuccessfulResultModel],
        Field(
            description='Placeholder documentation for __listOfBatchSuccessfulResultModel'
        ),
    ]


class DvbSubDestinationSettings(BurnInDestinationSettings):
    """
    Dvb Sub Destination Settings
    """

    pass


class EbuTtDDestinationSettings(BaseModel):
    """
    Ebu Tt DDestination Settings
    """

    CopyrightHolder: Optional[_StringMax1000] = None
    FillLineGap: Optional[Ac3LfeFilter] = None
    FontFamily: Optional[_String] = None
    StyleControl: Optional[EbuTtDDestinationStyleControl] = None


class TtmlDestinationSettings(BaseModel):
    """
    Ttml Destination Settings
    """

    StyleControl: Optional[TtmlDestinationStyleControl] = None


class WebvttDestinationSettings(BaseModel):
    """
    Webvtt Destination Settings
    """

    StyleControl: Optional[WebvttDestinationStyleControl] = None


class DvbSubSourceSettings(BaseModel):
    """
    Dvb Sub Source Settings
    """

    OcrLanguage: Optional[DvbSubOcrLanguage] = None
    Pid: Optional[_IntegerMin1] = None


class EmbeddedSourceSettings(BaseModel):
    """
    Embedded Source Settings
    """

    Convert608To708: Optional[EmbeddedConvert608To708] = None
    Scte20Detection: Optional[EmbeddedScte20Detection] = None
    Source608ChannelNumber: Optional[_IntegerMin1Max4] = None
    Source608TrackNumber: Optional[_IntegerMin1Max5] = None


class Scte20SourceSettings(BaseModel):
    """
    Scte20 Source Settings
    """

    Convert608To708: Optional[EmbeddedConvert608To708] = None
    Source608ChannelNumber: Optional[_IntegerMin1Max4] = None


class Scte27SourceSettings(DvbSubSourceSettings):
    """
    Scte27 Source Settings
    """

    pass


class _ListOfChannelEgressEndpoint(BaseModel):
    """
    Placeholder documentation for __listOfChannelEgressEndpoint
    """

    __root__: Annotated[
        List[ChannelEgressEndpoint],
        Field(
            description='Placeholder documentation for __listOfChannelEgressEndpoint'
        ),
    ]


class _ListOfPipelineDetail(BaseModel):
    """
    Placeholder documentation for __listOfPipelineDetail
    """

    __root__: Annotated[
        List[PipelineDetail],
        Field(description='Placeholder documentation for __listOfPipelineDetail'),
    ]


class MultiplexProgramSettings(BaseModel):
    """
    Multiplex Program settings configuration.
    """

    PreferredChannelPipeline: Optional[PreferredChannelPipeline] = None
    ProgramNumber: _IntegerMin0Max65535
    ServiceDescriptor: Optional[MultiplexProgramServiceDescriptor] = None
    VideoSettings: Optional[MultiplexVideoSettings] = None


class CreateMultiplexProgramRequest(BaseModel):
    """
    A request to create a program in a multiplex.
    """

    MultiplexProgramSettings: MultiplexProgramSettings
    ProgramName: _String
    RequestId: _String


class MultiplexProgramPacketIdentifiersMap(BaseModel):
    """
    Packet identifiers map for a given Multiplex program.
    """

    AudioPids: Optional[_ListOfInteger] = None
    DvbSubPids: Optional[_ListOfInteger] = None
    DvbTeletextPid: Optional[_Integer] = None
    EtvPlatformPid: Optional[_Integer] = None
    EtvSignalPid: Optional[_Integer] = None
    KlvDataPids: Optional[_ListOfInteger] = None
    PcrPid: Optional[_Integer] = None
    PmtPid: Optional[_Integer] = None
    PrivateMetadataPid: Optional[_Integer] = None
    Scte27Pids: Optional[_ListOfInteger] = None
    Scte35Pid: Optional[_Integer] = None
    TimedMetadataPid: Optional[_Integer] = None
    VideoPid: Optional[_Integer] = None


class _ListOfMultiplexProgramPipelineDetail(BaseModel):
    """
    Placeholder documentation for __listOfMultiplexProgramPipelineDetail
    """

    __root__: Annotated[
        List[MultiplexProgramPipelineDetail],
        Field(
            description='Placeholder documentation for __listOfMultiplexProgramPipelineDetail'
        ),
    ]


class _ListOfMultiplexOutputDestination(BaseModel):
    """
    Placeholder documentation for __listOfMultiplexOutputDestination
    """

    __root__: Annotated[
        List[MultiplexOutputDestination],
        Field(
            description='Placeholder documentation for __listOfMultiplexOutputDestination'
        ),
    ]


class ReservationResourceSpecification(BaseModel):
    """
    Resource configuration (codec, resolution, bitrate, ...)
    """

    ChannelClass: Optional[ChannelClass] = None
    Codec: Optional[ReservationCodec] = None
    MaximumBitrate: Optional[InputMaximumBitrate] = None
    MaximumFramerate: Optional[ReservationMaximumFramerate] = None
    Resolution: Optional[CdiInputResolution] = None
    ResourceType: Optional[ReservationResourceType] = None
    SpecialFeature: Optional[ReservationSpecialFeature] = None
    VideoQuality: Optional[ReservationVideoQuality] = None


class InputDeviceHdSettings(BaseModel):
    """
    Settings that describe the active source from the input device, and the video characteristics of that source.
    """

    ActiveInput: Optional[InputDeviceActiveInput] = None
    ConfiguredInput: Optional[InputDeviceConfiguredInput] = None
    DeviceState: Optional[InputDeviceState] = None
    Framerate: Optional[_Double] = None
    Height: Optional[_Integer] = None
    MaxBitrate: Optional[_Integer] = None
    ScanType: Optional[H264ScanType] = None
    Width: Optional[_Integer] = None


class InputDeviceNetworkSettings(BaseModel):
    """
    The network settings for the input device.
    """

    DnsAddresses: Optional[_ListOfString] = None
    Gateway: Optional[_String] = None
    IpAddress: Optional[_String] = None
    IpScheme: Optional[InputDeviceIpScheme] = None
    SubnetMask: Optional[_String] = None


class InputDeviceUhdSettings(InputDeviceHdSettings):
    """
    Settings that describe the active source from the input device, and the video characteristics of that source.
    """

    pass


class _ListOfInputDestination(BaseModel):
    """
    Placeholder documentation for __listOfInputDestination
    """

    __root__: Annotated[
        List[InputDestination],
        Field(description='Placeholder documentation for __listOfInputDestination'),
    ]


class _ListOfMediaConnectFlow(BaseModel):
    """
    Placeholder documentation for __listOfMediaConnectFlow
    """

    __root__: Annotated[
        List[MediaConnectFlow],
        Field(description='Placeholder documentation for __listOfMediaConnectFlow'),
    ]


class _ListOfInputSource(BaseModel):
    """
    Placeholder documentation for __listOfInputSource
    """

    __root__: Annotated[
        List[InputSource],
        Field(description='Placeholder documentation for __listOfInputSource'),
    ]


class _ListOfInputWhitelistRule(BaseModel):
    """
    Placeholder documentation for __listOfInputWhitelistRule
    """

    __root__: Annotated[
        List[InputWhitelistRule],
        Field(description='Placeholder documentation for __listOfInputWhitelistRule'),
    ]


class InputLossFailoverSettings(BaseModel):
    """
    MediaLive will perform a failover if content is not detected in this input for the specified period.
    """

    InputLossThresholdMsec: Optional[_IntegerMin100] = None


class VideoBlackFailoverSettings(BaseModel):
    """
    Placeholder documentation for VideoBlackFailoverSettings
    """

    BlackDetectThreshold: Optional[_DoubleMin0Max1] = None
    VideoBlackThresholdMsec: Optional[_IntegerMin1000] = None


class InputLossBehavior(BaseModel):
    """
    Input Loss Behavior
    """

    BlackFrameMsec: Optional[_IntegerMin0Max1000000] = None
    InputLossImageColor: Optional[_StringMin6Max6] = None
    InputLossImageSlate: Optional[InputLocation] = None
    InputLossImageType: Optional[InputLossImageType] = None
    RepeatFrameMsec: Optional[_IntegerMin0Max1000000] = None


class TemporalFilterSettings(BaseModel):
    """
    Temporal Filter Settings
    """

    PostFilterSharpening: Optional[TemporalFilterPostFilterSharpening] = None
    Strength: Optional[TemporalFilterStrength] = None


class H264FilterSettings(BaseModel):
    """
    H264 Filter Settings
    """

    TemporalFilterSettings: Optional[TemporalFilterSettings] = None


class H264Settings(BaseModel):
    """
    H264 Settings
    """

    AdaptiveQuantization: Optional[H264AdaptiveQuantization] = None
    AfdSignaling: Optional[AfdSignaling] = None
    Bitrate: Optional[_IntegerMin1000] = None
    BufFillPct: Optional[_IntegerMin0Max100] = None
    BufSize: Optional[_IntegerMin0] = None
    ColorMetadata: Optional[H264ColorMetadata] = None
    ColorSpaceSettings: Optional[H264ColorSpaceSettings] = None
    EntropyEncoding: Optional[H264EntropyEncoding] = None
    FilterSettings: Optional[H264FilterSettings] = None
    FixedAfd: Optional[FixedAfd] = None
    FlickerAq: Optional[Ac3LfeFilter] = None
    ForceFieldPictures: Optional[Ac3LfeFilter] = None
    FramerateControl: Optional[H264FramerateControl] = None
    FramerateDenominator: Optional[_IntegerMin1] = None
    FramerateNumerator: Optional[_IntegerMin1] = None
    GopBReference: Optional[Ac3LfeFilter] = None
    GopClosedCadence: Optional[_IntegerMin0] = None
    GopNumBFrames: Optional[_IntegerMin0Max7] = None
    GopSize: Optional[_Double] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    Level: Optional[H264Level] = None
    LookAheadRateControl: Optional[H264LookAheadRateControl] = None
    MaxBitrate: Optional[_IntegerMin1000] = None
    MinIInterval: Optional[_IntegerMin0Max30] = None
    NumRefFrames: Optional[_IntegerMin1Max6] = None
    ParControl: Optional[H264FramerateControl] = None
    ParDenominator: Optional[_IntegerMin1] = None
    ParNumerator: Optional[_IntegerMin1] = None
    Profile: Optional[H264Profile] = None
    QualityLevel: Optional[H264QualityLevel] = None
    QvbrQualityLevel: Optional[_IntegerMin1Max10] = None
    RateControlMode: Optional[H264RateControlMode] = None
    ScanType: Optional[H264ScanType] = None
    SceneChangeDetect: Optional[Ac3LfeFilter] = None
    Slices: Optional[_IntegerMin1Max32] = None
    Softness: Optional[_IntegerMin0Max128] = None
    SpatialAq: Optional[Ac3LfeFilter] = None
    SubgopLength: Optional[H264SubGopLength] = None
    Syntax: Optional[H264Syntax] = None
    TemporalAq: Optional[Ac3LfeFilter] = None
    TimecodeInsertion: Optional[H264TimecodeInsertionBehavior] = None


class Hdr10Settings(BaseModel):
    """
    Hdr10 Settings
    """

    MaxCll: Optional[_IntegerMin0Max32768] = None
    MaxFall: Optional[_IntegerMin0Max32768] = None


class H265ColorSpaceSettings(BaseModel):
    """
    H265 Color Space Settings
    """

    ColorSpacePassthroughSettings: Optional[ColorSpacePassthroughSettings] = None
    Hdr10Settings: Optional[Hdr10Settings] = None
    Rec601Settings: Optional[Rec601Settings] = None
    Rec709Settings: Optional[Rec709Settings] = None


class H265FilterSettings(H264FilterSettings):
    """
    H265 Filter Settings
    """

    pass


class H265Settings(BaseModel):
    """
    H265 Settings
    """

    AdaptiveQuantization: Optional[H264AdaptiveQuantization] = None
    AfdSignaling: Optional[AfdSignaling] = None
    AlternativeTransferFunction: Optional[H265AlternativeTransferFunction] = None
    Bitrate: Optional[_IntegerMin100000Max40000000] = None
    BufSize: Optional[_IntegerMin100000Max80000000] = None
    ColorMetadata: Optional[H264ColorMetadata] = None
    ColorSpaceSettings: Optional[H265ColorSpaceSettings] = None
    FilterSettings: Optional[H265FilterSettings] = None
    FixedAfd: Optional[FixedAfd] = None
    FlickerAq: Optional[Ac3LfeFilter] = None
    FramerateDenominator: _IntegerMin1Max3003
    FramerateNumerator: _IntegerMin1
    GopClosedCadence: Optional[_IntegerMin0] = None
    GopSize: Optional[_Double] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    Level: Optional[H265Level] = None
    LookAheadRateControl: Optional[H264LookAheadRateControl] = None
    MaxBitrate: Optional[_IntegerMin100000Max40000000] = None
    MinIInterval: Optional[_IntegerMin0Max30] = None
    ParDenominator: Optional[_IntegerMin1] = None
    ParNumerator: Optional[_IntegerMin1] = None
    Profile: Optional[H265Profile] = None
    QvbrQualityLevel: Optional[_IntegerMin1Max10] = None
    RateControlMode: Optional[H265RateControlMode] = None
    ScanType: Optional[H264ScanType] = None
    SceneChangeDetect: Optional[Ac3LfeFilter] = None
    Slices: Optional[_IntegerMin1Max16] = None
    Tier: Optional[H265Tier] = None
    TimecodeInsertion: Optional[H264TimecodeInsertionBehavior] = None


class HlsMediaStoreSettings(BaseModel):
    """
    Hls Media Store Settings
    """

    ConnectionRetryInterval: Optional[_IntegerMin0] = None
    FilecacheDuration: Optional[_IntegerMin0Max600] = None
    MediaStoreStorageClass: Optional[HlsMediaStoreStorageClass] = None
    NumRetries: Optional[_IntegerMin0] = None
    RestartDelay: Optional[_IntegerMin0Max15] = None


class HlsWebdavSettings(BaseModel):
    """
    Hls Webdav Settings
    """

    ConnectionRetryInterval: Optional[_IntegerMin0] = None
    FilecacheDuration: Optional[_IntegerMin0Max600] = None
    HttpTransferMode: Optional[HlsAkamaiHttpTransferMode] = None
    NumRetries: Optional[_IntegerMin0] = None
    RestartDelay: Optional[_IntegerMin0Max15] = None


class HlsCdnSettings(BaseModel):
    """
    Hls Cdn Settings
    """

    HlsAkamaiSettings: Optional[HlsAkamaiSettings] = None
    HlsBasicPutSettings: Optional[HlsBasicPutSettings] = None
    HlsMediaStoreSettings: Optional[HlsMediaStoreSettings] = None
    HlsS3Settings: Optional[HlsS3Settings] = None
    HlsWebdavSettings: Optional[HlsWebdavSettings] = None


class KeyProviderSettings(BaseModel):
    """
    Key Provider Settings
    """

    StaticKeySettings: Optional[StaticKeySettings] = None


class HlsGroupSettings(BaseModel):
    """
    Hls Group Settings
    """

    AdMarkers: Optional[_ListOfHlsAdMarkers] = None
    BaseUrlContent: Optional[_String] = None
    BaseUrlContent1: Optional[_String] = None
    BaseUrlManifest: Optional[_String] = None
    BaseUrlManifest1: Optional[_String] = None
    CaptionLanguageMappings: Optional[_ListOfCaptionLanguageMapping] = None
    CaptionLanguageSetting: Optional[HlsCaptionLanguageSetting] = None
    ClientCache: Optional[Ac3LfeFilter] = None
    CodecSpecification: Optional[HlsCodecSpecification] = None
    ConstantIv: Optional[_StringMin32Max32] = None
    Destination: OutputLocationRef
    DirectoryStructure: Optional[HlsDirectoryStructure] = None
    DiscontinuityTags: Optional[HlsDiscontinuityTags] = None
    EncryptionType: Optional[HlsEncryptionType] = None
    HlsCdnSettings: Optional[HlsCdnSettings] = None
    HlsId3SegmentTagging: Optional[Ac3LfeFilter] = None
    IFrameOnlyPlaylists: Optional[IFrameOnlyPlaylistType] = None
    IncompleteSegmentBehavior: Optional[HlsIncompleteSegmentBehavior] = None
    IndexNSegments: Optional[_IntegerMin3] = None
    InputLossAction: Optional[InputLossActionForHlsOut] = None
    IvInManifest: Optional[EbuTtDDestinationStyleControl] = None
    IvSource: Optional[HlsIvSource] = None
    KeepSegments: Optional[_IntegerMin1] = None
    KeyFormat: Optional[_String] = None
    KeyFormatVersions: Optional[_String] = None
    KeyProviderSettings: Optional[KeyProviderSettings] = None
    ManifestCompression: Optional[HlsManifestCompression] = None
    ManifestDurationFormat: Optional[HlsManifestDurationFormat] = None
    MinSegmentLength: Optional[_IntegerMin0] = None
    Mode: Optional[HlsMode] = None
    OutputSelection: Optional[HlsOutputSelection] = None
    ProgramDateTime: Optional[EbuTtDDestinationStyleControl] = None
    ProgramDateTimePeriod: Optional[_IntegerMin0Max3600] = None
    RedundantManifest: Optional[Ac3LfeFilter] = None
    SegmentLength: Optional[_IntegerMin1] = None
    SegmentationMode: Optional[HlsSegmentationMode] = None
    SegmentsPerSubdirectory: Optional[_IntegerMin1] = None
    StreamInfResolution: Optional[EbuTtDDestinationStyleControl] = None
    TimedMetadataId3Frame: Optional[HlsTimedMetadataId3Frame] = None
    TimedMetadataId3Period: Optional[_IntegerMin0] = None
    TimestampDeltaMilliseconds: Optional[_IntegerMin0] = None
    TsFileMode: Optional[HlsTsFileMode] = None


class StandardHlsSettings(BaseModel):
    """
    Standard Hls Settings
    """

    AudioRenditionSets: Optional[_String] = None
    M3u8Settings: M3u8Settings


class StopTimecode(BaseModel):
    """
    Settings to identify the end of the clip.
    """

    LastFrameClippingBehavior: Optional[LastFrameClippingBehavior] = None
    Timecode: Optional[_String] = None


class InputClippingSettings(BaseModel):
    """
    Settings to let you create a clip of the file input, in order to set up the input to ingest only a portion of the file.
    """

    InputTimecodeSource: InputTimecodeSource
    StartTimecode: Optional[StartTimecode] = None
    StopTimecode: Optional[StopTimecode] = None


class InputDeviceSummary(BaseModel):
    """
    Details of the input device.
    """

    Arn: Optional[_String] = None
    ConnectionState: Optional[InputDeviceConnectionState] = None
    DeviceSettingsSyncState: Optional[DeviceSettingsSyncState] = None
    DeviceUpdateStatus: Optional[DeviceUpdateStatus] = None
    HdDeviceSettings: Optional[InputDeviceHdSettings] = None
    Id: Optional[_String] = None
    MacAddress: Optional[_String] = None
    Name: Optional[_String] = None
    NetworkSettings: Optional[InputDeviceNetworkSettings] = None
    SerialNumber: Optional[_String] = None
    Type: Optional[InputDeviceType] = None
    UhdDeviceSettings: Optional[InputDeviceUhdSettings] = None


class InputPrepareScheduleActionSettings(BaseModel):
    """
    Action to prepare an input for a future immediate input switch.
    """

    InputAttachmentNameReference: Optional[_String] = None
    InputClippingSettings: Optional[InputClippingSettings] = None
    UrlPath: Optional[_ListOfString] = None


class NetworkInputSettings(BaseModel):
    """
    Network source to transcode. Must be accessible to the Elemental Live node that is running the live event through a network connection.
    """

    HlsInputSettings: Optional[HlsInputSettings] = None
    ServerValidation: Optional[NetworkInputServerValidation] = None


class InputSwitchScheduleActionSettings(BaseModel):
    """
    Settings for the "switch input" action: to switch from ingesting one input to ingesting another input.
    """

    InputAttachmentNameReference: _String
    InputClippingSettings: Optional[InputClippingSettings] = None
    UrlPath: Optional[_ListOfString] = None


class _ListOfTransferringInputDeviceSummary(BaseModel):
    """
    Placeholder documentation for __listOfTransferringInputDeviceSummary
    """

    __root__: Annotated[
        List[TransferringInputDeviceSummary],
        Field(
            description='Placeholder documentation for __listOfTransferringInputDeviceSummary'
        ),
    ]


class _ListOfInputDeviceSummary(BaseModel):
    """
    Placeholder documentation for __listOfInputDeviceSummary
    """

    __root__: Annotated[
        List[InputDeviceSummary],
        Field(description='Placeholder documentation for __listOfInputDeviceSummary'),
    ]


class _ListOfMultiplexProgramSummary(BaseModel):
    """
    Placeholder documentation for __listOfMultiplexProgramSummary
    """

    __root__: Annotated[
        List[MultiplexProgramSummary],
        Field(
            description='Placeholder documentation for __listOfMultiplexProgramSummary'
        ),
    ]


class _ListOfMultiplexSummary(BaseModel):
    """
    Placeholder documentation for __listOfMultiplexSummary
    """

    __root__: Annotated[
        List[MultiplexSummary],
        Field(description='Placeholder documentation for __listOfMultiplexSummary'),
    ]


class Mpeg2FilterSettings(H264FilterSettings):
    """
    Mpeg2 Filter Settings
    """

    pass


class Mpeg2Settings(BaseModel):
    """
    Mpeg2 Settings
    """

    AdaptiveQuantization: Optional[Mpeg2AdaptiveQuantization] = None
    AfdSignaling: Optional[AfdSignaling] = None
    ColorMetadata: Optional[H264ColorMetadata] = None
    ColorSpace: Optional[Mpeg2ColorSpace] = None
    DisplayAspectRatio: Optional[Mpeg2DisplayRatio] = None
    FilterSettings: Optional[Mpeg2FilterSettings] = None
    FixedAfd: Optional[FixedAfd] = None
    FramerateDenominator: _IntegerMin1
    FramerateNumerator: _IntegerMin1
    GopClosedCadence: Optional[_IntegerMin0] = None
    GopNumBFrames: Optional[_IntegerMin0Max7] = None
    GopSize: Optional[_Double] = None
    GopSizeUnits: Optional[H264GopSizeUnits] = None
    ScanType: Optional[H264ScanType] = None
    SubgopLength: Optional[H264SubGopLength] = None
    TimecodeInsertion: Optional[Mpeg2TimecodeInsertionBehavior] = None


class Offering(BaseModel):
    """
    Reserved resources available for purchase
    """

    Arn: Optional[_String] = None
    CurrencyCode: Optional[_String] = None
    Duration: Optional[_Integer] = None
    DurationUnits: Optional[OfferingDurationUnits] = None
    FixedPrice: Optional[_Double] = None
    OfferingDescription: Optional[_String] = None
    OfferingId: Optional[_String] = None
    OfferingType: Optional[OfferingType] = None
    Region: Optional[_String] = None
    ResourceSpecification: Optional[ReservationResourceSpecification] = None
    UsagePrice: Optional[_Double] = None


class _ListOfOutputDestinationSettings(BaseModel):
    """
    Placeholder documentation for __listOfOutputDestinationSettings
    """

    __root__: Annotated[
        List[OutputDestinationSettings],
        Field(
            description='Placeholder documentation for __listOfOutputDestinationSettings'
        ),
    ]


class RtmpGroupSettings(BaseModel):
    """
    Rtmp Group Settings
    """

    AdMarkers: Optional[_ListOfRtmpAdMarkers] = None
    AuthenticationScheme: Optional[AuthenticationScheme] = None
    CacheFullBehavior: Optional[RtmpCacheFullBehavior] = None
    CacheLength: Optional[_IntegerMin30] = None
    CaptionData: Optional[RtmpCaptionData] = None
    InputLossAction: Optional[InputLossActionForHlsOut] = None
    RestartDelay: Optional[_IntegerMin0] = None


class UdpGroupSettings(BaseModel):
    """
    Udp Group Settings
    """

    InputLossAction: Optional[InputLossActionForUdpOut] = None
    TimedMetadataId3Frame: Optional[HlsTimedMetadataId3Frame] = None
    TimedMetadataId3Period: Optional[_IntegerMin0] = None


class RtmpOutputSettings(BaseModel):
    """
    Rtmp Output Settings
    """

    CertificateMode: Optional[SmoothGroupCertificateMode] = None
    ConnectionRetryInterval: Optional[_IntegerMin1] = None
    Destination: OutputLocationRef
    NumRetries: Optional[_IntegerMin0] = None


class _ListOfPipelinePauseStateSettings(BaseModel):
    """
    Placeholder documentation for __listOfPipelinePauseStateSettings
    """

    __root__: Annotated[
        List[PipelinePauseStateSettings],
        Field(
            description='Placeholder documentation for __listOfPipelinePauseStateSettings'
        ),
    ]


class PauseStateScheduleActionSettings(BaseModel):
    """
    Settings for the action to set pause state of a channel.
    """

    Pipelines: Optional[_ListOfPipelinePauseStateSettings] = None


class Reservation(BaseModel):
    """
    Reserved resources available to use
    """

    Arn: Optional[_String] = None
    Count: Optional[_Integer] = None
    CurrencyCode: Optional[_String] = None
    Duration: Optional[_Integer] = None
    DurationUnits: Optional[OfferingDurationUnits] = None
    End: Optional[_String] = None
    FixedPrice: Optional[_Double] = None
    Name: Optional[_String] = None
    OfferingDescription: Optional[_String] = None
    OfferingId: Optional[_String] = None
    OfferingType: Optional[OfferingType] = None
    Region: Optional[_String] = None
    ReservationId: Optional[_String] = None
    ResourceSpecification: Optional[ReservationResourceSpecification] = None
    Start: Optional[_String] = None
    State: Optional[ReservationState] = None
    Tags: Optional[Tags] = None
    UsagePrice: Optional[_Double] = None


class _ListOfAudioChannelMapping(BaseModel):
    """
    Placeholder documentation for __listOfAudioChannelMapping
    """

    __root__: Annotated[
        List[AudioChannelMapping],
        Field(description='Placeholder documentation for __listOfAudioChannelMapping'),
    ]


class Scte35ReturnToNetworkScheduleActionSettings(BaseModel):
    """
    Settings for a SCTE-35 return_to_network message.
    """

    SpliceEventId: _LongMin0Max4294967295


class Scte35SpliceInsertScheduleActionSettings(BaseModel):
    """
    Settings for a SCTE-35 splice_insert message.
    """

    Duration: Optional[_LongMin0Max8589934591] = None
    SpliceEventId: _LongMin0Max4294967295


class Scte35SegmentationDescriptor(BaseModel):
    """
    Corresponds to SCTE-35 segmentation_descriptor.
    """

    DeliveryRestrictions: Optional[Scte35DeliveryRestrictions] = None
    SegmentNum: Optional[_IntegerMin0Max255] = None
    SegmentationCancelIndicator: Scte35SegmentationCancelIndicator
    SegmentationDuration: Optional[_LongMin0Max1099511627775] = None
    SegmentationEventId: _LongMin0Max4294967295
    SegmentationTypeId: Optional[_IntegerMin0Max255] = None
    SegmentationUpid: Optional[_String] = None
    SegmentationUpidType: Optional[_IntegerMin0Max255] = None
    SegmentsExpected: Optional[_IntegerMin0Max255] = None
    SubSegmentNum: Optional[_IntegerMin0Max255] = None
    SubSegmentsExpected: Optional[_IntegerMin0Max255] = None


class UdpContainerSettings(BaseModel):
    """
    Udp Container Settings
    """

    M2tsSettings: Optional[M2tsSettings] = None


class UpdateMultiplexProgramRequest(BaseModel):
    """
    A request to update a program in a multiplex.
    """

    MultiplexProgramSettings: Optional[MultiplexProgramSettings] = None


class VideoCodecSettings(BaseModel):
    """
    Video Codec Settings
    """

    FrameCaptureSettings: Optional[FrameCaptureSettings] = None
    H264Settings: Optional[H264Settings] = None
    H265Settings: Optional[H265Settings] = None
    Mpeg2Settings: Optional[Mpeg2Settings] = None


class VideoDescription(BaseModel):
    """
    Video settings for this stream.
    """

    CodecSettings: Optional[VideoCodecSettings] = None
    Height: Optional[_Integer] = None
    Name: _String
    RespondToAfd: Optional[VideoDescriptionRespondToAfd] = None
    ScalingBehavior: Optional[VideoDescriptionScalingBehavior] = None
    Sharpness: Optional[_IntegerMin0Max100] = None
    Width: Optional[_Integer] = None


class VideoSelectorColorSpaceSettings(BaseModel):
    """
    Video Selector Color Space Settings
    """

    Hdr10Settings: Optional[Hdr10Settings] = None


class VideoSelectorSettings(BaseModel):
    """
    Video Selector Settings
    """

    VideoSelectorPid: Optional[VideoSelectorPid] = None
    VideoSelectorProgramId: Optional[VideoSelectorProgramId] = None


class BatchDeleteResponse(BaseModel):
    """
    Placeholder documentation for BatchDeleteResponse
    """

    Failed: Optional[_ListOfBatchFailedResultModel] = None
    Successful: Optional[_ListOfBatchSuccessfulResultModel] = None


class BatchStartResponse(BatchDeleteResponse):
    """
    Placeholder documentation for BatchStartResponse
    """

    pass


class BatchStopResponse(BatchDeleteResponse):
    """
    Placeholder documentation for BatchStopResponse
    """

    pass


class OutputDestination(BaseModel):
    """
    Placeholder documentation for OutputDestination
    """

    Id: Optional[_String] = None
    MediaPackageSettings: Optional[_ListOfMediaPackageOutputDestinationSettings] = None
    MultiplexSettings: Optional[MultiplexProgramChannelDestinationSettings] = None
    Settings: Optional[_ListOfOutputDestinationSettings] = None


class GlobalConfiguration(BaseModel):
    """
    Global Configuration
    """

    InitialAudioGain: Optional[_IntegerMinNegative60Max60] = None
    InputEndAction: Optional[GlobalConfigurationInputEndAction] = None
    InputLossBehavior: Optional[InputLossBehavior] = None
    OutputLockingMode: Optional[GlobalConfigurationOutputLockingMode] = None
    OutputTimingSource: Optional[GlobalConfigurationOutputTimingSource] = None
    SupportLowFramerateInputs: Optional[Ac3LfeFilter] = None


class _ListOfVideoDescription(BaseModel):
    """
    Placeholder documentation for __listOfVideoDescription
    """

    __root__: Annotated[
        List[VideoDescription],
        Field(description='Placeholder documentation for __listOfVideoDescription'),
    ]


class DeleteMultiplexResponse(BaseModel):
    """
    Placeholder documentation for DeleteMultiplexResponse
    """

    Arn: Optional[_String] = None
    AvailabilityZones: Optional[_ListOfString] = None
    Destinations: Optional[_ListOfMultiplexOutputDestination] = None
    Id: Optional[_String] = None
    MultiplexSettings: Optional[MultiplexSettings] = None
    Name: Optional[_String] = None
    PipelinesRunningCount: Optional[_Integer] = None
    ProgramCount: Optional[_Integer] = None
    State: Optional[MultiplexState] = None
    Tags: Optional[Tags] = None


class DeleteMultiplexProgramResponse(BaseModel):
    """
    Placeholder documentation for DeleteMultiplexProgramResponse
    """

    ChannelId: Optional[_String] = None
    MultiplexProgramSettings: Optional[MultiplexProgramSettings] = None
    PacketIdentifiersMap: Optional[MultiplexProgramPacketIdentifiersMap] = None
    PipelineDetails: Optional[_ListOfMultiplexProgramPipelineDetail] = None
    ProgramName: Optional[_String] = None


class DeleteReservationResponse(Reservation):
    """
    Placeholder documentation for DeleteReservationResponse
    """

    pass


class DescribeInputResponse(BaseModel):
    """
    Placeholder documentation for DescribeInputResponse
    """

    Arn: Optional[_String] = None
    AttachedChannels: Optional[_ListOfString] = None
    Destinations: Optional[_ListOfInputDestination] = None
    Id: Optional[_String] = None
    InputClass: Optional[ChannelClass] = None
    InputDevices: Optional[_ListOfInputDeviceSettings] = None
    InputPartnerIds: Optional[_ListOfString] = None
    InputSourceType: Optional[InputSourceType] = None
    MediaConnectFlows: Optional[_ListOfMediaConnectFlow] = None
    Name: Optional[_String] = None
    RoleArn: Optional[_String] = None
    SecurityGroups: Optional[_ListOfString] = None
    Sources: Optional[_ListOfInputSource] = None
    State: Optional[InputState] = None
    Tags: Optional[Tags] = None
    Type: Optional[InputType] = None


class DescribeInputDeviceResponse(InputDeviceSummary):
    """
    Placeholder documentation for DescribeInputDeviceResponse
    """

    pass


class DescribeInputSecurityGroupResponse(BaseModel):
    """
    Placeholder documentation for DescribeInputSecurityGroupResponse
    """

    Arn: Optional[_String] = None
    Id: Optional[_String] = None
    Inputs: Optional[_ListOfString] = None
    State: Optional[InputSecurityGroupState] = None
    Tags: Optional[Tags] = None
    WhitelistRules: Optional[_ListOfInputWhitelistRule] = None


class DescribeMultiplexResponse(DeleteMultiplexResponse):
    """
    Placeholder documentation for DescribeMultiplexResponse
    """

    pass


class DescribeMultiplexProgramResponse(DeleteMultiplexProgramResponse):
    """
    Placeholder documentation for DescribeMultiplexProgramResponse
    """

    pass


class DescribeOfferingResponse(Offering):
    """
    Placeholder documentation for DescribeOfferingResponse
    """

    pass


class DescribeReservationResponse(Reservation):
    """
    Placeholder documentation for DescribeReservationResponse
    """

    pass


class ListInputDeviceTransfersResponse(BaseModel):
    """
    Placeholder documentation for ListInputDeviceTransfersResponse
    """

    InputDeviceTransfers: Optional[_ListOfTransferringInputDeviceSummary] = None
    NextToken: Optional[_String] = None


class ListInputDevicesResponse(BaseModel):
    """
    Placeholder documentation for ListInputDevicesResponse
    """

    InputDevices: Optional[_ListOfInputDeviceSummary] = None
    NextToken: Optional[_String] = None


class ListMultiplexProgramsResponse(BaseModel):
    """
    Placeholder documentation for ListMultiplexProgramsResponse
    """

    MultiplexPrograms: Optional[_ListOfMultiplexProgramSummary] = None
    NextToken: Optional[_String] = None


class ListMultiplexesResponse(BaseModel):
    """
    Placeholder documentation for ListMultiplexesResponse
    """

    Multiplexes: Optional[_ListOfMultiplexSummary] = None
    NextToken: Optional[_String] = None


class PurchaseOfferingResponse(BaseModel):
    """
    Placeholder documentation for PurchaseOfferingResponse
    """

    Reservation: Optional[Reservation] = None


class StartMultiplexResponse(DeleteMultiplexResponse):
    """
    Placeholder documentation for StartMultiplexResponse
    """

    pass


class StopMultiplexResponse(DeleteMultiplexResponse):
    """
    Placeholder documentation for StopMultiplexResponse
    """

    pass


class UpdateInputDeviceResponse(InputDeviceSummary):
    """
    Placeholder documentation for UpdateInputDeviceResponse
    """

    pass


class UpdateReservationResponse(PurchaseOfferingResponse):
    """
    Placeholder documentation for UpdateReservationResponse
    """

    pass


class RemixSettings(BaseModel):
    """
    Remix Settings
    """

    ChannelMappings: _ListOfAudioChannelMapping
    ChannelsIn: Optional[_IntegerMin1Max16] = None
    ChannelsOut: Optional[_IntegerMin1Max8] = None


class AudioDescription(BaseModel):
    """
    Audio Description
    """

    AudioNormalizationSettings: Optional[AudioNormalizationSettings] = None
    AudioSelectorName: _String
    AudioType: Optional[AudioType] = None
    AudioTypeControl: Optional[Ac3MetadataControl] = None
    CodecSettings: Optional[AudioCodecSettings] = None
    LanguageCode: Optional[_StringMin1Max35] = None
    LanguageCodeControl: Optional[Ac3MetadataControl] = None
    Name: _String
    RemixSettings: Optional[RemixSettings] = None
    StreamName: Optional[_String] = None


class AudioSelectorSettings(BaseModel):
    """
    Audio Selector Settings
    """

    AudioHlsRenditionSelection: Optional[AudioHlsRenditionSelection] = None
    AudioLanguageSelection: Optional[AudioLanguageSelection] = None
    AudioPidSelection: Optional[AudioPidSelection] = None
    AudioTrackSelection: Optional[AudioTrackSelection] = None


class AudioSelector(BaseModel):
    """
    Audio Selector
    """

    Name: _StringMin1
    SelectorSettings: Optional[AudioSelectorSettings] = None


class AvailSettings(BaseModel):
    """
    Avail Settings
    """

    Scte35SpliceInsert: Optional[Scte35SpliceInsert] = None
    Scte35TimeSignalApos: Optional[Scte35TimeSignalApos] = None


class CaptionDestinationSettings(BaseModel):
    """
    Caption Destination Settings
    """

    AribDestinationSettings: Optional[AribDestinationSettings] = None
    BurnInDestinationSettings: Optional[BurnInDestinationSettings] = None
    DvbSubDestinationSettings: Optional[DvbSubDestinationSettings] = None
    EbuTtDDestinationSettings: Optional[EbuTtDDestinationSettings] = None
    EmbeddedDestinationSettings: Optional[EmbeddedDestinationSettings] = None
    EmbeddedPlusScte20DestinationSettings: Optional[
        EmbeddedPlusScte20DestinationSettings
    ] = None
    RtmpCaptionInfoDestinationSettings: Optional[
        RtmpCaptionInfoDestinationSettings
    ] = None
    Scte20PlusEmbeddedDestinationSettings: Optional[
        Scte20PlusEmbeddedDestinationSettings
    ] = None
    Scte27DestinationSettings: Optional[Scte27DestinationSettings] = None
    SmpteTtDestinationSettings: Optional[SmpteTtDestinationSettings] = None
    TeletextDestinationSettings: Optional[TeletextDestinationSettings] = None
    TtmlDestinationSettings: Optional[TtmlDestinationSettings] = None
    WebvttDestinationSettings: Optional[WebvttDestinationSettings] = None


class CaptionDescription(BaseModel):
    """
    Caption Description
    """

    CaptionSelectorName: _String
    DestinationSettings: Optional[CaptionDestinationSettings] = None
    LanguageCode: Optional[_String] = None
    LanguageDescription: Optional[_String] = None
    Name: _String


class CaptionSelectorSettings(BaseModel):
    """
    Caption Selector Settings
    """

    AncillarySourceSettings: Optional[AncillarySourceSettings] = None
    AribSourceSettings: Optional[AribSourceSettings] = None
    DvbSubSourceSettings: Optional[DvbSubSourceSettings] = None
    EmbeddedSourceSettings: Optional[EmbeddedSourceSettings] = None
    Scte20SourceSettings: Optional[Scte20SourceSettings] = None
    Scte27SourceSettings: Optional[Scte27SourceSettings] = None
    TeletextSourceSettings: Optional[TeletextSourceSettings] = None


class CaptionSelector(BaseModel):
    """
    Output groups for this Live Event. Output groups contain information about where streams should be distributed.
    """

    LanguageCode: Optional[_String] = None
    Name: _StringMin1
    SelectorSettings: Optional[CaptionSelectorSettings] = None


class _ListOfOutputDestination(BaseModel):
    """
    Placeholder documentation for __listOfOutputDestination
    """

    __root__: Annotated[
        List[OutputDestination],
        Field(description='Placeholder documentation for __listOfOutputDestination'),
    ]


class Input(DescribeInputResponse):
    """
    Placeholder documentation for Input
    """

    pass


class InputSecurityGroup(DescribeInputSecurityGroupResponse):
    """
    An Input Security Group
    """

    pass


class MultiplexProgram(DeleteMultiplexProgramResponse):
    """
    The multiplex program object.
    """

    pass


class Multiplex(DeleteMultiplexResponse):
    """
    The multiplex object.
    """

    pass


class FailoverConditionSettings(BaseModel):
    """
    Settings for one failover condition.
    """

    AudioSilenceSettings: Optional[AudioSilenceFailoverSettings] = None
    InputLossSettings: Optional[InputLossFailoverSettings] = None
    VideoBlackSettings: Optional[VideoBlackFailoverSettings] = None


class FailoverCondition(BaseModel):
    """
    Failover Condition settings. There can be multiple failover conditions inside AutomaticInputFailoverSettings.
    """

    FailoverConditionSettings: Optional[FailoverConditionSettings] = None


class HlsSettings(BaseModel):
    """
    Hls Settings
    """

    AudioOnlyHlsSettings: Optional[AudioOnlyHlsSettings] = None
    Fmp4HlsSettings: Optional[Fmp4HlsSettings] = None
    FrameCaptureHlsSettings: Optional[FrameCaptureHlsSettings] = None
    StandardHlsSettings: Optional[StandardHlsSettings] = None


class HlsOutputSettings(BaseModel):
    """
    Hls Output Settings
    """

    H265PackagingType: Optional[HlsH265PackagingType] = None
    HlsSettings: HlsSettings
    NameModifier: Optional[_StringMin1] = None
    SegmentModifier: Optional[_String] = None


class _ListOfAudioSelector(BaseModel):
    """
    Placeholder documentation for __listOfAudioSelector
    """

    __root__: Annotated[
        List[AudioSelector],
        Field(description='Placeholder documentation for __listOfAudioSelector'),
    ]


class _ListOfCaptionSelector(BaseModel):
    """
    Placeholder documentation for __listOfCaptionSelector
    """

    __root__: Annotated[
        List[CaptionSelector],
        Field(description='Placeholder documentation for __listOfCaptionSelector'),
    ]


class VideoSelector(BaseModel):
    """
    Specifies a particular video stream within an input source. An input may have only a single video selector.
    """

    ColorSpace: Optional[VideoSelectorColorSpace] = None
    ColorSpaceSettings: Optional[VideoSelectorColorSpaceSettings] = None
    ColorSpaceUsage: Optional[VideoSelectorColorSpaceUsage] = None
    SelectorSettings: Optional[VideoSelectorSettings] = None


class _ListOfInputSecurityGroup(BaseModel):
    """
    Placeholder documentation for __listOfInputSecurityGroup
    """

    __root__: Annotated[
        List[InputSecurityGroup],
        Field(description='Placeholder documentation for __listOfInputSecurityGroup'),
    ]


class _ListOfInput(BaseModel):
    """
    Placeholder documentation for __listOfInput
    """

    __root__: Annotated[
        List[Input], Field(description='Placeholder documentation for __listOfInput')
    ]


class _ListOfOffering(BaseModel):
    """
    Placeholder documentation for __listOfOffering
    """

    __root__: Annotated[
        List[Offering],
        Field(description='Placeholder documentation for __listOfOffering'),
    ]


class _ListOfReservation(BaseModel):
    """
    Placeholder documentation for __listOfReservation
    """

    __root__: Annotated[
        List[Reservation],
        Field(description='Placeholder documentation for __listOfReservation'),
    ]


class OutputGroupSettings(BaseModel):
    """
    Output Group Settings
    """

    ArchiveGroupSettings: Optional[ArchiveGroupSettings] = None
    FrameCaptureGroupSettings: Optional[FrameCaptureGroupSettings] = None
    HlsGroupSettings: Optional[HlsGroupSettings] = None
    MediaPackageGroupSettings: Optional[MediaPackageGroupSettings] = None
    MsSmoothGroupSettings: Optional[MsSmoothGroupSettings] = None
    MultiplexGroupSettings: Optional[MultiplexGroupSettings] = None
    RtmpGroupSettings: Optional[RtmpGroupSettings] = None
    UdpGroupSettings: Optional[UdpGroupSettings] = None


class UdpOutputSettings(BaseModel):
    """
    Udp Output Settings
    """

    BufferMsec: Optional[_IntegerMin0Max10000] = None
    ContainerSettings: UdpContainerSettings
    Destination: OutputLocationRef
    FecOutputSettings: Optional[FecOutputSettings] = None


class Scte35DescriptorSettings(BaseModel):
    """
    SCTE-35 Descriptor settings.
    """

    SegmentationDescriptorScte35DescriptorSettings: Scte35SegmentationDescriptor


class Scte35Descriptor(BaseModel):
    """
    Holds one set of SCTE-35 Descriptor Settings.
    """

    Scte35DescriptorSettings: Scte35DescriptorSettings


class _ListOfScte35Descriptor(BaseModel):
    """
    Placeholder documentation for __listOfScte35Descriptor
    """

    __root__: Annotated[
        List[Scte35Descriptor],
        Field(description='Placeholder documentation for __listOfScte35Descriptor'),
    ]


class UpdateChannelClassRequest(BaseModel):
    """
    Channel class that the channel should be updated to.
    """

    ChannelClass: ChannelClass
    Destinations: Optional[_ListOfOutputDestination] = None


class _ListOfAudioDescription(BaseModel):
    """
    Placeholder documentation for __listOfAudioDescription
    """

    __root__: Annotated[
        List[AudioDescription],
        Field(description='Placeholder documentation for __listOfAudioDescription'),
    ]


class AvailConfiguration(BaseModel):
    """
    Avail Configuration
    """

    AvailSettings: Optional[AvailSettings] = None


class _ListOfCaptionDescription(BaseModel):
    """
    Placeholder documentation for __listOfCaptionDescription
    """

    __root__: Annotated[
        List[CaptionDescription],
        Field(description='Placeholder documentation for __listOfCaptionDescription'),
    ]


class CreateInputResponse(BaseModel):
    """
    Placeholder documentation for CreateInputResponse
    """

    Input: Optional[Input] = None


class CreateInputSecurityGroupResponse(BaseModel):
    """
    Placeholder documentation for CreateInputSecurityGroupResponse
    """

    SecurityGroup: Optional[InputSecurityGroup] = None


class CreateMultiplexResponse(BaseModel):
    """
    Placeholder documentation for CreateMultiplexResponse
    """

    Multiplex: Optional[Multiplex] = None


class CreateMultiplexProgramResponse(BaseModel):
    """
    Placeholder documentation for CreateMultiplexProgramResponse
    """

    MultiplexProgram: Optional[MultiplexProgram] = None


class CreatePartnerInputResponse(CreateInputResponse):
    """
    Placeholder documentation for CreatePartnerInputResponse
    """

    pass


class ListInputSecurityGroupsResponse(BaseModel):
    """
    Placeholder documentation for ListInputSecurityGroupsResponse
    """

    InputSecurityGroups: Optional[_ListOfInputSecurityGroup] = None
    NextToken: Optional[_String] = None


class ListInputsResponse(BaseModel):
    """
    Placeholder documentation for ListInputsResponse
    """

    Inputs: Optional[_ListOfInput] = None
    NextToken: Optional[_String] = None


class ListOfferingsResponse(BaseModel):
    """
    Placeholder documentation for ListOfferingsResponse
    """

    NextToken: Optional[_String] = None
    Offerings: Optional[_ListOfOffering] = None


class ListReservationsResponse(BaseModel):
    """
    Placeholder documentation for ListReservationsResponse
    """

    NextToken: Optional[_String] = None
    Reservations: Optional[_ListOfReservation] = None


class UpdateInputResponse(CreateInputResponse):
    """
    Placeholder documentation for UpdateInputResponse
    """

    pass


class UpdateInputSecurityGroupResponse(CreateInputSecurityGroupResponse):
    """
    Placeholder documentation for UpdateInputSecurityGroupResponse
    """

    pass


class UpdateMultiplexResponse(CreateMultiplexResponse):
    """
    Placeholder documentation for UpdateMultiplexResponse
    """

    pass


class UpdateMultiplexProgramResponse(CreateMultiplexProgramResponse):
    """
    Placeholder documentation for UpdateMultiplexProgramResponse
    """

    pass


class _ListOfFailoverCondition(BaseModel):
    """
    Placeholder documentation for __listOfFailoverCondition
    """

    __root__: Annotated[
        List[FailoverCondition],
        Field(description='Placeholder documentation for __listOfFailoverCondition'),
    ]


class AutomaticInputFailoverSettings(BaseModel):
    """
    The settings for Automatic Input Failover.
    """

    ErrorClearTimeMsec: Optional[_IntegerMin1] = None
    FailoverConditions: Optional[_ListOfFailoverCondition] = None
    InputPreference: Optional[InputPreference] = None
    SecondaryInputId: _String


class InputSettings(BaseModel):
    """
    Live Event input parameters. There can be multiple inputs in a single Live Event.
    """

    AudioSelectors: Optional[_ListOfAudioSelector] = None
    CaptionSelectors: Optional[_ListOfCaptionSelector] = None
    DeblockFilter: Optional[Ac3LfeFilter] = None
    DenoiseFilter: Optional[Ac3LfeFilter] = None
    FilterStrength: Optional[_IntegerMin1Max5] = None
    InputFilter: Optional[InputFilter] = None
    NetworkInputSettings: Optional[NetworkInputSettings] = None
    Smpte2038DataPreference: Optional[Smpte2038DataPreference] = None
    SourceEndBehavior: Optional[InputSourceEndBehavior] = None
    VideoSelector: Optional[VideoSelector] = None


class OutputSettings(BaseModel):
    """
    Output Settings
    """

    ArchiveOutputSettings: Optional[ArchiveOutputSettings] = None
    FrameCaptureOutputSettings: Optional[FrameCaptureOutputSettings] = None
    HlsOutputSettings: Optional[HlsOutputSettings] = None
    MediaPackageOutputSettings: Optional[MediaPackageOutputSettings] = None
    MsSmoothOutputSettings: Optional[MsSmoothOutputSettings] = None
    MultiplexOutputSettings: Optional[MultiplexOutputSettings] = None
    RtmpOutputSettings: Optional[RtmpOutputSettings] = None
    UdpOutputSettings: Optional[UdpOutputSettings] = None


class Output(BaseModel):
    """
    Output settings. There can be multiple outputs within a group.
    """

    AudioDescriptionNames: Optional[_ListOfString] = None
    CaptionDescriptionNames: Optional[_ListOfString] = None
    OutputName: Optional[_StringMin1Max255] = None
    OutputSettings: OutputSettings
    VideoDescriptionName: Optional[_String] = None


class _ListOfOutput(BaseModel):
    """
    Placeholder documentation for __listOfOutput
    """

    __root__: Annotated[
        List[Output], Field(description='Placeholder documentation for __listOfOutput')
    ]


class OutputGroup(BaseModel):
    """
    Output groups for this Live Event. Output groups contain information about where streams should be distributed.
    """

    Name: Optional[_StringMax32] = None
    OutputGroupSettings: OutputGroupSettings
    Outputs: _ListOfOutput


class Scte35TimeSignalScheduleActionSettings(BaseModel):
    """
    Settings for a SCTE-35 time_signal.
    """

    Scte35Descriptors: _ListOfScte35Descriptor


class _ListOfOutputGroup(BaseModel):
    """
    Placeholder documentation for __listOfOutputGroup
    """

    __root__: Annotated[
        List[OutputGroup],
        Field(description='Placeholder documentation for __listOfOutputGroup'),
    ]


class InputAttachment(BaseModel):
    """
    Placeholder documentation for InputAttachment
    """

    AutomaticInputFailoverSettings: Optional[AutomaticInputFailoverSettings] = None
    InputAttachmentName: Optional[_String] = None
    InputId: Optional[_String] = None
    InputSettings: Optional[InputSettings] = None


class EncoderSettings(BaseModel):
    """
    Encoder Settings
    """

    AudioDescriptions: _ListOfAudioDescription
    AvailBlanking: Optional[AvailBlanking] = None
    AvailConfiguration: Optional[AvailConfiguration] = None
    BlackoutSlate: Optional[BlackoutSlate] = None
    CaptionDescriptions: Optional[_ListOfCaptionDescription] = None
    FeatureActivations: Optional[FeatureActivations] = None
    GlobalConfiguration: Optional[GlobalConfiguration] = None
    MotionGraphicsConfiguration: Optional[MotionGraphicsConfiguration] = None
    NielsenConfiguration: Optional[NielsenConfiguration] = None
    OutputGroups: _ListOfOutputGroup
    TimecodeConfig: TimecodeConfig
    VideoDescriptions: _ListOfVideoDescription


class _ListOfInputAttachment(BaseModel):
    """
    Placeholder documentation for __listOfInputAttachment
    """

    __root__: Annotated[
        List[InputAttachment],
        Field(description='Placeholder documentation for __listOfInputAttachment'),
    ]


class Channel(BaseModel):
    """
    Placeholder documentation for Channel
    """

    Arn: Optional[_String] = None
    CdiInputSpecification: Optional[CdiInputSpecification] = None
    ChannelClass: Optional[ChannelClass] = None
    Destinations: Optional[_ListOfOutputDestination] = None
    EgressEndpoints: Optional[_ListOfChannelEgressEndpoint] = None
    EncoderSettings: Optional[EncoderSettings] = None
    Id: Optional[_String] = None
    InputAttachments: Optional[_ListOfInputAttachment] = None
    InputSpecification: Optional[InputSpecification] = None
    LogLevel: Optional[LogLevel] = None
    Name: Optional[_String] = None
    PipelineDetails: Optional[_ListOfPipelineDetail] = None
    PipelinesRunningCount: Optional[_Integer] = None
    RoleArn: Optional[_String] = None
    State: Optional[ChannelState] = None
    Tags: Optional[Tags] = None
    Vpc: Optional[VpcOutputSettingsDescription] = None


class ChannelSummary(BaseModel):
    """
    Placeholder documentation for ChannelSummary
    """

    Arn: Optional[_String] = None
    CdiInputSpecification: Optional[CdiInputSpecification] = None
    ChannelClass: Optional[ChannelClass] = None
    Destinations: Optional[_ListOfOutputDestination] = None
    EgressEndpoints: Optional[_ListOfChannelEgressEndpoint] = None
    Id: Optional[_String] = None
    InputAttachments: Optional[_ListOfInputAttachment] = None
    InputSpecification: Optional[InputSpecification] = None
    LogLevel: Optional[LogLevel] = None
    Name: Optional[_String] = None
    PipelinesRunningCount: Optional[_Integer] = None
    RoleArn: Optional[_String] = None
    State: Optional[ChannelState] = None
    Tags: Optional[Tags] = None
    Vpc: Optional[VpcOutputSettingsDescription] = None


class CreateChannelRequest(BaseModel):
    """
    A request to create a channel
    """

    CdiInputSpecification: Optional[CdiInputSpecification] = None
    ChannelClass: Optional[ChannelClass] = None
    Destinations: Optional[_ListOfOutputDestination] = None
    EncoderSettings: Optional[EncoderSettings] = None
    InputAttachments: Optional[_ListOfInputAttachment] = None
    InputSpecification: Optional[InputSpecification] = None
    LogLevel: Optional[LogLevel] = None
    Name: Optional[_String] = None
    RequestId: Optional[_String] = None
    Reserved: Optional[_String] = None
    RoleArn: Optional[_String] = None
    Tags: Optional[Tags] = None
    Vpc: Optional[VpcOutputSettings] = None


class _ListOfChannelSummary(BaseModel):
    """
    Placeholder documentation for __listOfChannelSummary
    """

    __root__: Annotated[
        List[ChannelSummary],
        Field(description='Placeholder documentation for __listOfChannelSummary'),
    ]


class ScheduleActionSettings(BaseModel):
    """
    Holds the settings for a single schedule action.
    """

    HlsId3SegmentTaggingSettings: Optional[
        HlsId3SegmentTaggingScheduleActionSettings
    ] = None
    HlsTimedMetadataSettings: Optional[HlsTimedMetadataScheduleActionSettings] = None
    InputPrepareSettings: Optional[InputPrepareScheduleActionSettings] = None
    InputSwitchSettings: Optional[InputSwitchScheduleActionSettings] = None
    MotionGraphicsImageActivateSettings: Optional[
        MotionGraphicsActivateScheduleActionSettings
    ] = None
    MotionGraphicsImageDeactivateSettings: Optional[
        MotionGraphicsDeactivateScheduleActionSettings
    ] = None
    PauseStateSettings: Optional[PauseStateScheduleActionSettings] = None
    Scte35ReturnToNetworkSettings: Optional[
        Scte35ReturnToNetworkScheduleActionSettings
    ] = None
    Scte35SpliceInsertSettings: Optional[
        Scte35SpliceInsertScheduleActionSettings
    ] = None
    Scte35TimeSignalSettings: Optional[Scte35TimeSignalScheduleActionSettings] = None
    StaticImageActivateSettings: Optional[
        StaticImageActivateScheduleActionSettings
    ] = None
    StaticImageDeactivateSettings: Optional[
        StaticImageDeactivateScheduleActionSettings
    ] = None


class ScheduleAction(BaseModel):
    """
    Contains information on a single schedule action.
    """

    ActionName: _String
    ScheduleActionSettings: ScheduleActionSettings
    ScheduleActionStartSettings: ScheduleActionStartSettings


class UpdateChannelRequest(BaseModel):
    """
    A request to update a channel.
    """

    CdiInputSpecification: Optional[CdiInputSpecification] = None
    Destinations: Optional[_ListOfOutputDestination] = None
    EncoderSettings: Optional[EncoderSettings] = None
    InputAttachments: Optional[_ListOfInputAttachment] = None
    InputSpecification: Optional[InputSpecification] = None
    LogLevel: Optional[LogLevel] = None
    Name: Optional[_String] = None
    RoleArn: Optional[_String] = None


class _ListOfScheduleAction(BaseModel):
    """
    Placeholder documentation for __listOfScheduleAction
    """

    __root__: Annotated[
        List[ScheduleAction],
        Field(description='Placeholder documentation for __listOfScheduleAction'),
    ]


class CreateChannelResponse(BaseModel):
    """
    Placeholder documentation for CreateChannelResponse
    """

    Channel: Optional[Channel] = None


class DeleteChannelResponse(Channel):
    """
    Placeholder documentation for DeleteChannelResponse
    """

    pass


class DescribeChannelResponse(Channel):
    """
    Placeholder documentation for DescribeChannelResponse
    """

    pass


class DescribeScheduleResponse(BaseModel):
    """
    Placeholder documentation for DescribeScheduleResponse
    """

    NextToken: Optional[_String] = None
    ScheduleActions: Optional[_ListOfScheduleAction] = None


class ListChannelsResponse(BaseModel):
    """
    Placeholder documentation for ListChannelsResponse
    """

    Channels: Optional[_ListOfChannelSummary] = None
    NextToken: Optional[_String] = None


class StartChannelResponse(Channel):
    """
    Placeholder documentation for StartChannelResponse
    """

    pass


class StopChannelResponse(Channel):
    """
    Placeholder documentation for StopChannelResponse
    """

    pass


class UpdateChannelResponse(CreateChannelResponse):
    """
    Placeholder documentation for UpdateChannelResponse
    """

    pass


class UpdateChannelClassResponse(CreateChannelResponse):
    """
    Placeholder documentation for UpdateChannelClassResponse
    """

    pass


class BatchScheduleActionCreateRequest(BaseModel):
    """
    A list of schedule actions to create (in a request) or that have been created (in a response).
    """

    ScheduleActions: _ListOfScheduleAction


class BatchScheduleActionCreateResult(BatchScheduleActionCreateRequest):
    """
    List of actions that have been created in the schedule.
    """

    pass


class BatchScheduleActionDeleteResult(BatchScheduleActionCreateRequest):
    """
    List of actions that have been deleted from the schedule.
    """

    pass


class BatchUpdateScheduleRequest(BaseModel):
    """
    List of actions to create and list of actions to delete.
    """

    Creates: Optional[BatchScheduleActionCreateRequest] = None
    Deletes: Optional[BatchScheduleActionDeleteRequest] = None


class BatchUpdateScheduleResponse(BaseModel):
    """
    Placeholder documentation for BatchUpdateScheduleResponse
    """

    Creates: Optional[BatchScheduleActionCreateResult] = None
    Deletes: Optional[BatchScheduleActionDeleteResult] = None

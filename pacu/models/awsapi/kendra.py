# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ValidationException(BaseModel):
    __root__: Any


class ConflictException(ValidationException):
    pass


class ResourceNotFoundException(ValidationException):
    pass


class ThrottlingException(ValidationException):
    pass


class AccessDeniedException(ValidationException):
    pass


class InternalServerException(ValidationException):
    pass


class ServiceQuotaExceededException(ValidationException):
    pass


class ResourceAlreadyExistException(ValidationException):
    pass


class ResourceUnavailableException(ValidationException):
    pass


class ResourceInUseException(ValidationException):
    pass


class TagResourceResponse(BaseModel):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class S3ObjectKey(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class AccessControlListConfiguration(BaseModel):
    """
    Access Control List files for the documents in a data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.
    """

    KeyPath: Optional[S3ObjectKey] = None


class ColumnName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[a-zA-Z][a-zA-Z0-9_]*$')
    ]


class AclConfiguration(BaseModel):
    """
    Provides information about the column that should be used for filtering the query response by groups.
    """

    AllowedGroupsColumnName: ColumnName


class String(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class AdditionalResultAttributeValueType(Enum):
    TEXT_WITH_HIGHLIGHTS_VALUE = 'TEXT_WITH_HIGHLIGHTS_VALUE'


class AmazonResourceName(BaseModel):
    __root__: Annotated[str, Field(max_length=1011, min_length=1)]


class Host(BaseModel):
    __root__: Annotated[str, Field(max_length=253, min_length=1, regex='([^\\s]*)')]


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=65535.0)]


class SecretArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1284,
            min_length=1,
            regex='arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}',
        ),
    ]


class BasicAuthenticationConfiguration(BaseModel):
    """
    Provides the configuration information to connect to websites that require basic user authentication.
    """

    Host: Host
    Port: Port
    Credentials: SecretArn


class IndexId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=36, min_length=36, regex='[a-zA-Z0-9][a-zA-Z0-9-]*')
    ]


class DocumentId(String):
    pass


class ErrorCode(Enum):
    InternalError = 'InternalError'
    InvalidRequest = 'InvalidRequest'


class ErrorMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='^\\P{C}*$')]


class BatchDeleteDocumentResponseFailedDocument(BaseModel):
    """
    Provides information about documents that could not be removed from an index by the <code>BatchDeleteDocument</code> operation.
    """

    Id: Optional[DocumentId] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[ErrorMessage] = None


class BatchGetDocumentStatusResponseError(BaseModel):
    """
    Provides a response when the status of a document could not be retrieved.
    """

    DocumentId: Optional[DocumentId] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[ErrorMessage] = None


class RoleArn(SecretArn):
    pass


class BatchPutDocumentResponseFailedDocument(BatchDeleteDocumentResponseFailedDocument):
    """
    Provides information about a document that could not be indexed.
    """

    pass


class Blob(BaseModel):
    __root__: str


class Boolean(BaseModel):
    __root__: bool


class StorageCapacityUnit(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class QueryCapacityUnit(StorageCapacityUnit):
    pass


class CapacityUnitsConfiguration(BaseModel):
    """
    Specifies capacity units configured for your enterprise edition index. You can add and remove capacity units to tune an index to your requirements.
    """

    StorageCapacityUnits: StorageCapacityUnit
    QueryCapacityUnits: QueryCapacityUnit


class ChangeDetectingColumns(BaseModel):
    __root__: Annotated[List[ColumnName], Field(max_items=5, min_items=1)]


class ClaimRegex(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1, regex='^\\P{C}*$')]


class ResultId(BaseModel):
    __root__: Annotated[str, Field(max_length=73, min_length=1)]


class Timestamp(BaseModel):
    __root__: datetime


class ClickFeedback(BaseModel):
    """
    Gathers information about when a particular result was clicked by a user. Your application uses the <code>SubmitFeedback</code> operation to provide click information.
    """

    ResultId: ResultId
    ClickTime: Timestamp


class ClickFeedbackList(BaseModel):
    __root__: List[ClickFeedback]


class ClientTokenName(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class ConfluenceAttachmentFieldName(Enum):
    AUTHOR = 'AUTHOR'
    CONTENT_TYPE = 'CONTENT_TYPE'
    CREATED_DATE = 'CREATED_DATE'
    DISPLAY_URL = 'DISPLAY_URL'
    FILE_SIZE = 'FILE_SIZE'
    ITEM_TYPE = 'ITEM_TYPE'
    PARENT_ID = 'PARENT_ID'
    SPACE_KEY = 'SPACE_KEY'
    SPACE_NAME = 'SPACE_NAME'
    URL = 'URL'
    VERSION = 'VERSION'


class DataSourceDateFieldFormat(BaseModel):
    __root__: Annotated[
        str, Field(max_length=40, min_length=4, regex='^(?!\\s).*(?<!\\s)$')
    ]


class IndexFieldName(BaseModel):
    __root__: Annotated[str, Field(max_length=30, min_length=1, regex='^\\P{C}*$')]


class ConfluenceBlogFieldName(Enum):
    AUTHOR = 'AUTHOR'
    DISPLAY_URL = 'DISPLAY_URL'
    ITEM_TYPE = 'ITEM_TYPE'
    LABELS = 'LABELS'
    PUBLISH_DATE = 'PUBLISH_DATE'
    SPACE_KEY = 'SPACE_KEY'
    SPACE_NAME = 'SPACE_NAME'
    URL = 'URL'
    VERSION = 'VERSION'


class Url(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048, min_length=1, regex='^(https?|ftp|file):\\/\\/([^\\s]*)'
        ),
    ]


class ConfluenceVersion(Enum):
    CLOUD = 'CLOUD'
    SERVER = 'SERVER'


class ConfluencePageFieldName(Enum):
    AUTHOR = 'AUTHOR'
    CONTENT_STATUS = 'CONTENT_STATUS'
    CREATED_DATE = 'CREATED_DATE'
    DISPLAY_URL = 'DISPLAY_URL'
    ITEM_TYPE = 'ITEM_TYPE'
    LABELS = 'LABELS'
    MODIFIED_DATE = 'MODIFIED_DATE'
    PARENT_ID = 'PARENT_ID'
    SPACE_KEY = 'SPACE_KEY'
    SPACE_NAME = 'SPACE_NAME'
    URL = 'URL'
    VERSION = 'VERSION'


class ConfluenceSpaceFieldName(Enum):
    DISPLAY_URL = 'DISPLAY_URL'
    ITEM_TYPE = 'ITEM_TYPE'
    SPACE_KEY = 'SPACE_KEY'
    URL = 'URL'


class ConfluenceSpaceIdentifier(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='^\\P{C}*$')]


class DatabaseHost(BaseModel):
    __root__: Annotated[str, Field(max_length=253, min_length=1)]


class DatabasePort(Port):
    pass


class DatabaseName(ColumnName):
    pass


class TableName(ColumnName):
    pass


class ConnectionConfiguration(BaseModel):
    """
    Provides the information necessary to connect to a database.
    """

    DatabaseHost: DatabaseHost
    DatabasePort: DatabasePort
    DatabaseName: DatabaseName
    TableName: TableName
    SecretArn: SecretArn


class ContentType(Enum):
    PDF = 'PDF'
    HTML = 'HTML'
    MS_WORD = 'MS_WORD'
    PLAIN_TEXT = 'PLAIN_TEXT'
    PPT = 'PPT'


class CrawlDepth(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10.0)]


class DataSourceName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1000, min_length=1, regex='[a-zA-Z0-9][a-zA-Z0-9_-]*')
    ]


class DataSourceType(Enum):
    S3 = 'S3'
    SHAREPOINT = 'SHAREPOINT'
    DATABASE = 'DATABASE'
    SALESFORCE = 'SALESFORCE'
    ONEDRIVE = 'ONEDRIVE'
    SERVICENOW = 'SERVICENOW'
    CUSTOM = 'CUSTOM'
    CONFLUENCE = 'CONFLUENCE'
    GOOGLEDRIVE = 'GOOGLEDRIVE'
    WEBCRAWLER = 'WEBCRAWLER'
    WORKDOCS = 'WORKDOCS'


class Description(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=0, regex='^\\P{C}*$')]


class ScanSchedule(Blob):
    pass


class DataSourceId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='[a-zA-Z0-9][a-zA-Z0-9_-]*')
    ]


class FaqName(DataSourceId):
    pass


class FaqFileFormat(Enum):
    CSV = 'CSV'
    CSV_WITH_HEADER = 'CSV_WITH_HEADER'
    JSON = 'JSON'


class FaqId(DataSourceId):
    pass


class IndexName(DataSourceName):
    pass


class IndexEdition(Enum):
    DEVELOPER_EDITION = 'DEVELOPER_EDITION'
    ENTERPRISE_EDITION = 'ENTERPRISE_EDITION'


class UserContextPolicy(Enum):
    ATTRIBUTE_FILTER = 'ATTRIBUTE_FILTER'
    USER_TOKEN = 'USER_TOKEN'


class QuerySuggestionsBlockListName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[a-zA-Z0-9](-*[a-zA-Z0-9])*')
    ]


class QuerySuggestionsBlockListId(IndexId):
    pass


class ThesaurusName(DataSourceId):
    pass


class ThesaurusId(DataSourceId):
    pass


class DataSourceFieldName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[a-zA-Z][a-zA-Z0-9_.]*$')
    ]


class PrincipalName(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=1, regex='^\\P{C}*$')]


class DataSourceGroup(BaseModel):
    """
    Data source information for user context filtering.
    """

    GroupId: PrincipalName
    DataSourceId: DataSourceId


class DataSourceGroups(BaseModel):
    __root__: Annotated[List[DataSourceGroup], Field(max_items=2048, min_items=1)]


class DataSourceInclusionsExclusionsStringsMember(BaseModel):
    __root__: Annotated[str, Field(max_length=150, min_length=1)]


class DataSourceStatus(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    UPDATING = 'UPDATING'
    ACTIVE = 'ACTIVE'


class DataSourceSummary(BaseModel):
    """
    Summary information for a Amazon Kendra data source. Returned in a call to the <code>DescribeDataSource</code> operation.
    """

    Name: Optional[DataSourceName] = None
    Id: Optional[DataSourceId] = None
    Type: Optional[DataSourceType] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    Status: Optional[DataSourceStatus] = None


class DataSourceSummaryList(BaseModel):
    __root__: List[DataSourceSummary]


class DataSourceSyncJobStatus(Enum):
    FAILED = 'FAILED'
    SUCCEEDED = 'SUCCEEDED'
    SYNCING = 'SYNCING'
    INCOMPLETE = 'INCOMPLETE'
    STOPPING = 'STOPPING'
    ABORTED = 'ABORTED'
    SYNCING_INDEXING = 'SYNCING_INDEXING'


class DataSourceSyncJobId(DataSourceId):
    pass


class MetricValue(BaseModel):
    __root__: Annotated[str, Field(regex='(([1-9][0-9]*)|0)')]


class DataSourceToIndexFieldMapping(BaseModel):
    """
    Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the <code>UpdateIndex</code> operation.
    """

    DataSourceFieldName: DataSourceFieldName
    DateFieldFormat: Optional[DataSourceDateFieldFormat] = None
    IndexFieldName: IndexFieldName


class DatabaseEngineType(Enum):
    RDS_AURORA_MYSQL = 'RDS_AURORA_MYSQL'
    RDS_AURORA_POSTGRESQL = 'RDS_AURORA_POSTGRESQL'
    RDS_MYSQL = 'RDS_MYSQL'
    RDS_POSTGRESQL = 'RDS_POSTGRESQL'


class GroupId(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='^\\P{C}*$')]


class PrincipalOrderingId(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=32535158400000.0)]


class FaqStatus(Enum):
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class IndexStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    UPDATING = 'UPDATING'
    SYSTEM_UPDATING = 'SYSTEM_UPDATING'


class QuerySuggestionsBlockListStatus(Enum):
    ACTIVE = 'ACTIVE'
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    ACTIVE_BUT_UPDATE_FAILED = 'ACTIVE_BUT_UPDATE_FAILED'
    FAILED = 'FAILED'


class Integer(BaseModel):
    __root__: int


class Long(Integer):
    pass


class Mode(Enum):
    ENABLED = 'ENABLED'
    LEARN_ONLY = 'LEARN_ONLY'


class QuerySuggestionsStatus(Enum):
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'


class ObjectBoolean(Boolean):
    pass


class MinimumNumberOfQueryingUsers(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10000.0)]


class MinimumQueryCount(MinimumNumberOfQueryingUsers):
    pass


class ThesaurusStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    ACTIVE_BUT_UPDATE_FAILED = 'ACTIVE_BUT_UPDATE_FAILED'
    FAILED = 'FAILED'


class Title(Blob):
    pass


class DocumentAttributeKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=200, min_length=1, regex='[a-zA-Z0-9_][a-zA-Z0-9_-]*')
    ]


class DocumentAttributeKeyList(BaseModel):
    __root__: Annotated[List[DocumentAttributeKey], Field(max_items=100, min_items=1)]


class DocumentAttributeStringListValue(BaseModel):
    __root__: List[String]


class DocumentAttributeStringValue(String):
    pass


class DocumentAttributeValueType(Enum):
    STRING_VALUE = 'STRING_VALUE'
    STRING_LIST_VALUE = 'STRING_LIST_VALUE'
    LONG_VALUE = 'LONG_VALUE'
    DATE_VALUE = 'DATE_VALUE'


class DocumentMetadataBoolean(Boolean):
    pass


class DocumentMetadataConfigurationName(BaseModel):
    __root__: Annotated[str, Field(max_length=30, min_length=1)]


class Search(BaseModel):
    """
    Provides information about how a custom index field is used during a search.
    """

    Facetable: Optional[Boolean] = None
    Searchable: Optional[Boolean] = None
    Displayable: Optional[Boolean] = None
    Sortable: Optional[Boolean] = None


class DocumentStatus(Enum):
    NOT_FOUND = 'NOT_FOUND'
    PROCESSING = 'PROCESSING'
    INDEXED = 'INDEXED'
    UPDATED = 'UPDATED'
    FAILED = 'FAILED'
    UPDATE_FAILED = 'UPDATE_FAILED'


class Status(BaseModel):
    """
    Provides information about the status of documents submitted for indexing.
    """

    DocumentId: Optional[DocumentId] = None
    DocumentStatus: Optional[DocumentStatus] = None
    FailureCode: Optional[String] = None
    FailureReason: Optional[String] = None


class DocumentsMetadataConfiguration(BaseModel):
    """
    Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.
    """

    S3Prefix: Optional[S3ObjectKey] = None


class Duration(BaseModel):
    __root__: Annotated[str, Field(max_length=10, min_length=1, regex='[0-9]+[s]')]


class MimeType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='^\\P{C}*$')]


class ExcludeMimeTypesList(BaseModel):
    __root__: Annotated[List[MimeType], Field(max_items=30, min_items=0)]


class SharedDriveId(MimeType):
    pass


class ExcludeSharedDrivesList(BaseModel):
    __root__: Annotated[List[SharedDriveId], Field(max_items=100, min_items=0)]


class UserAccount(MimeType):
    pass


class ExcludeUserAccountsList(BaseModel):
    __root__: Annotated[List[UserAccount], Field(max_items=100, min_items=0)]


class Facet(BaseModel):
    """
    Information about a document attribute
    """

    DocumentAttributeKey: Optional[DocumentAttributeKey] = None


class FacetList(BaseModel):
    __root__: List[Facet]


class FailureReason1(ErrorMessage):
    pass


class IndexedQuestionAnswersCount(StorageCapacityUnit):
    pass


class FaqStatistics(BaseModel):
    """
    Provides statistical information about the FAQ questions and answers contained in an index.
    """

    IndexedQuestionAnswersCount: IndexedQuestionAnswersCount


class FaqSummary(BaseModel):
    """
    Provides information about a frequently asked questions and answer contained in an index.
    """

    Id: Optional[FaqId] = None
    Name: Optional[FaqName] = None
    Status: Optional[FaqStatus] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    FileFormat: Optional[FaqFileFormat] = None


class FaqSummaryItems(BaseModel):
    __root__: List[FaqSummary]


class FeedbackToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='^\\P{C}*.\\P{C}*$')
    ]


class SuggestionQueryText(BaseModel):
    __root__: Annotated[str, Field(regex='^\\P{C}*$')]


class QuerySuggestionsId(BaseModel):
    __root__: Annotated[str, Field(max_length=36, min_length=1)]


class GroupAttributeField(ClaimRegex):
    pass


class PrincipalMappingStatus(Enum):
    FAILED = 'FAILED'
    SUCCEEDED = 'SUCCEEDED'
    PROCESSING = 'PROCESSING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class GroupSummary(BaseModel):
    """
    Group summary information.
    """

    GroupId: Optional[GroupId] = None
    OrderingId: Optional[PrincipalOrderingId] = None


class Groups(BaseModel):
    __root__: Annotated[List[PrincipalName], Field(max_items=2048, min_items=1)]


class HighlightType(Enum):
    STANDARD = 'STANDARD'
    THESAURUS_SYNONYM = 'THESAURUS_SYNONYM'


class Highlight(BaseModel):
    """
    Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
    """

    BeginOffset: Integer
    EndOffset: Integer
    TopAnswer: Optional[Boolean] = None
    Type: Optional[HighlightType] = None


class HighlightList(BaseModel):
    __root__: List[Highlight]


class Importance(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class IndexConfigurationSummary(BaseModel):
    """
    A summary of information about an index.
    """

    Name: Optional[IndexName] = None
    Id: Optional[IndexId] = None
    Edition: Optional[IndexEdition] = None
    CreatedAt: Timestamp
    UpdatedAt: Timestamp
    Status: IndexStatus


class IndexConfigurationSummaryList(BaseModel):
    __root__: List[IndexConfigurationSummary]


class IndexedTextBytes(StorageCapacityUnit):
    pass


class IndexedTextDocumentsCount(StorageCapacityUnit):
    pass


class Issuer(BaseModel):
    __root__: Annotated[str, Field(max_length=65, min_length=1, regex='^\\P{C}*$')]


class JsonTokenTypeConfiguration(BaseModel):
    """
    Configuration information for the JSON token type.
    """

    UserNameAttributeField: String
    GroupAttributeField: String


class KeyLocation(Enum):
    URL = 'URL'
    SECRET_MANAGER = 'SECRET_MANAGER'


class UserNameAttributeField1(ClaimRegex):
    pass


class JwtTokenTypeConfiguration(BaseModel):
    """
    Configuration information for the JWT token type.
    """

    KeyLocation: KeyLocation
    URL: Optional[Url] = None
    SecretManagerArn: Optional[RoleArn] = None
    UserNameAttributeField: Optional[UserNameAttributeField1] = None
    GroupAttributeField: Optional[GroupAttributeField] = None
    Issuer: Optional[Issuer] = None
    ClaimRegex: Optional[ClaimRegex] = None


class KmsKeyId(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048, min_length=1)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=800, min_length=1)]


class MaxResultsIntegerForListDataSourceSyncJobsRequest(Importance):
    pass


class TimeRange(BaseModel):
    """
    Provides a range of time.
    """

    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None


class MaxResultsIntegerForListDataSourcesRequest(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class MaxResultsIntegerForListFaqsRequest(MaxResultsIntegerForListDataSourcesRequest):
    pass


class MaxResultsIntegerForListPrincipalsRequest(Importance):
    pass


class ListOfGroupSummaries(BaseModel):
    __root__: List[GroupSummary]


class MaxResultsIntegerForListIndicesRequest(
    MaxResultsIntegerForListDataSourcesRequest
):
    pass


class MaxResultsIntegerForListQuerySuggestionsBlockLists(
    MaxResultsIntegerForListDataSourcesRequest
):
    pass


class MaxResultsIntegerForListThesauriRequest(
    MaxResultsIntegerForListDataSourcesRequest
):
    pass


class MaxContentSizePerPageInMegaBytes(BaseModel):
    __root__: Annotated[float, Field(ge=1e-06, le=50.0)]


class MaxLinksPerPage(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class MaxUrlsPerMinuteCrawlRate(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=300.0)]


class MemberGroup(BaseModel):
    """
    The sub groups that belong to a group.
    """

    GroupId: GroupId
    DataSourceId: Optional[DataSourceId] = None


class UserId(GroupId):
    pass


class MemberUser(BaseModel):
    """
    The users that belong to a group.
    """

    UserId: UserId


class TenantDomain(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+[a-z]{2,}$',
        ),
    ]


class OneDriveUser(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='^(?!\\s).+@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$',
        ),
    ]


class OneDriveUserList(BaseModel):
    __root__: Annotated[List[OneDriveUser], Field(max_items=100, min_items=1)]


class Order(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class OrganizationId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=12, min_length=12, regex='d-[0-9a-fA-F]{10}')
    ]


class PrincipalType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'


class ReadAccessType(Enum):
    ALLOW = 'ALLOW'
    DENY = 'DENY'


class Principal(BaseModel):
    """
    Provides user and group information for document access filtering.
    """

    Name: PrincipalName
    Type: PrincipalType
    Access: ReadAccessType
    DataSourceId: Optional[DataSourceId] = None


class ProxyConfiguration(BaseModel):
    """
    Provides the configuration information for a web proxy to connect to website hosts.
    """

    Host: Host
    Port: Port
    Credentials: Optional[SecretArn] = None


class QueryId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=36, min_length=1, regex='[a-zA-Z0-9][a-zA-Z0-9-]*')
    ]


class QueryIdentifiersEnclosingOption(Enum):
    DOUBLE_QUOTES = 'DOUBLE_QUOTES'
    NONE = 'NONE'


class QueryText(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1, regex='^\\P{C}*$')]


class QueryResultType(Enum):
    DOCUMENT = 'DOCUMENT'
    QUESTION_ANSWER = 'QUESTION_ANSWER'
    ANSWER = 'ANSWER'


class VisitorId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[a-zA-Z0-9][a-zA-Z0-9_-]*')
    ]


class QuerySuggestionsBlockListSummary(BaseModel):
    """
    <p>Summary information on a query suggestions block list.</p> <p>This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    """

    Id: Optional[QuerySuggestionsBlockListId] = None
    Name: Optional[QuerySuggestionsBlockListName] = None
    Status: Optional[QuerySuggestionsBlockListStatus] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    ItemCount: Optional[Integer] = None


class ValueImportanceMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class RelevanceType(Enum):
    RELEVANT = 'RELEVANT'
    NOT_RELEVANT = 'NOT_RELEVANT'


class RelevanceFeedback(BaseModel):
    """
    Provides feedback on how relevant a document is to a search. Your application uses the <code>SubmitFeedback</code> operation to provide relevance information.
    """

    ResultId: ResultId
    RelevanceValue: RelevanceType


class RelevanceFeedbackList(BaseModel):
    __root__: List[RelevanceFeedback]


class S3BucketName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63, min_length=3, regex='[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]'
        ),
    ]


class SalesforceChatterFeedIncludeFilterType(Enum):
    ACTIVE_USER = 'ACTIVE_USER'
    STANDARD_USER = 'STANDARD_USER'


class SalesforceCustomKnowledgeArticleTypeName(ColumnName):
    pass


class SalesforceKnowledgeArticleState(Enum):
    DRAFT = 'DRAFT'
    PUBLISHED = 'PUBLISHED'
    ARCHIVED = 'ARCHIVED'


class SalesforceStandardObjectName(Enum):
    ACCOUNT = 'ACCOUNT'
    CAMPAIGN = 'CAMPAIGN'
    CASE = 'CASE'
    CONTACT = 'CONTACT'
    CONTRACT = 'CONTRACT'
    DOCUMENT = 'DOCUMENT'
    GROUP = 'GROUP'
    IDEA = 'IDEA'
    LEAD = 'LEAD'
    OPPORTUNITY = 'OPPORTUNITY'
    PARTNER = 'PARTNER'
    PRICEBOOK = 'PRICEBOOK'
    PRODUCT = 'PRODUCT'
    PROFILE = 'PROFILE'
    SOLUTION = 'SOLUTION'
    TASK = 'TASK'
    USER = 'USER'


class ScoreConfidence(Enum):
    """
    Enumeration for query score confidence.
    """

    VERY_HIGH = 'VERY_HIGH'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'


class VpcSecurityGroupId(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=1, regex='[-0-9a-zA-Z]+')]


class SeedUrl(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='^(https?):\\/\\/([^\\s]*)')
    ]


class SeedUrlList(BaseModel):
    __root__: Annotated[List[SeedUrl], Field(max_items=100, min_items=0)]


class WebCrawlerMode(Enum):
    HOST_ONLY = 'HOST_ONLY'
    SUBDOMAINS = 'SUBDOMAINS'
    EVERYTHING = 'EVERYTHING'


class SeedUrlConfiguration(BaseModel):
    """
    <p>Provides the configuration information of the seed or starting point URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>
    """

    SeedUrls: SeedUrlList
    WebCrawlerMode: Optional[WebCrawlerMode] = None


class ServiceNowAuthenticationType(Enum):
    HTTP_BASIC = 'HTTP_BASIC'
    OAUTH2 = 'OAUTH2'


class ServiceNowBuildVersionType(Enum):
    LONDON = 'LONDON'
    OTHERS = 'OTHERS'


class ServiceNowHostUrl(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='^(?!(^(https?|ftp|file):\\/\\/))[a-z0-9-]+(\\.service-now\\.com)$',
        ),
    ]


class ServiceNowKnowledgeArticleFilterQuery(ErrorMessage):
    pass


class SharePointVersion(Enum):
    SHAREPOINT_2013 = 'SHAREPOINT_2013'
    SHAREPOINT_2016 = 'SHAREPOINT_2016'
    SHAREPOINT_ONLINE = 'SHAREPOINT_ONLINE'


class SharePointUrlList(BaseModel):
    __root__: Annotated[List[Url], Field(max_items=100, min_items=1)]


class SiteMap(SeedUrl):
    pass


class SiteMapsList(BaseModel):
    __root__: Annotated[List[SiteMap], Field(max_items=3, min_items=0)]


class SiteMapsConfiguration(BaseModel):
    """
    <p>Provides the configuration information of the sitemap URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>
    """

    SiteMaps: SiteMapsList


class SortOrder(Enum):
    DESC = 'DESC'
    ASC = 'ASC'


class SubnetId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=200, min_length=1, regex='[\\-0-9a-zA-Z]+')
    ]


class SuggestionHighlight(BaseModel):
    """
    The text highlights for a single query suggestion.
    """

    BeginOffset: Optional[Integer] = None
    EndOffset: Optional[Integer] = None


class SuggestionHighlightList(BaseModel):
    __root__: List[SuggestionHighlight]


class SuggestionTextWithHighlights(BaseModel):
    """
    Provides text and information about where to highlight the query suggestion text.
    """

    Text: Optional[String] = None
    Highlights: Optional[SuggestionHighlightList] = None


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class ThesaurusSummary(BaseModel):
    """
    An array of summary information for one or more thesauruses.
    """

    Id: Optional[ThesaurusId] = None
    Name: Optional[ThesaurusName] = None
    Status: Optional[ThesaurusStatus] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None


class Token(BaseModel):
    __root__: Annotated[str, Field(max_length=100000, min_length=1, regex='^\\P{C}*$')]


class Urls(BaseModel):
    """
    <p>Provides the configuration information of the URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use the Amazon Kendra web crawler to index your own webpages, or webpages that you have authorization to index.</i> </p>
    """

    SeedUrlConfiguration: Optional[SeedUrlConfiguration] = None
    SiteMapsConfiguration: Optional[SiteMapsConfiguration] = None


class UserTokenConfiguration(BaseModel):
    """
    Provides configuration information for a token configuration.
    """

    JwtTokenTypeConfiguration: Optional[JwtTokenTypeConfiguration] = None
    JsonTokenTypeConfiguration: Optional[JsonTokenTypeConfiguration] = None


class ValueImportanceMapKey(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1)]


class ClearQuerySuggestionsRequest(BaseModel):
    IndexId: IndexId


class CreateDataSourceResponse(BaseModel):
    Id: DataSourceId


class CreateFaqResponse(BaseModel):
    Id: Optional[FaqId] = None


class CreateIndexResponse(BaseModel):
    Id: Optional[IndexId] = None


class CreateQuerySuggestionsBlockListResponse(BaseModel):
    Id: Optional[QuerySuggestionsBlockListId] = None


class CreateThesaurusResponse(BaseModel):
    Id: Optional[ThesaurusId] = None


class DeleteDataSourceRequest(BaseModel):
    Id: DataSourceId
    IndexId: IndexId


class DeleteFaqRequest(BaseModel):
    Id: FaqId
    IndexId: IndexId


class DeleteIndexRequest(BaseModel):
    Id: IndexId


class DeletePrincipalMappingRequest(BaseModel):
    IndexId: IndexId
    DataSourceId: Optional[DataSourceId] = None
    GroupId: GroupId
    OrderingId: Optional[PrincipalOrderingId] = None


class DeleteQuerySuggestionsBlockListRequest(BaseModel):
    IndexId: IndexId
    Id: QuerySuggestionsBlockListId


class DeleteThesaurusRequest(BaseModel):
    Id: ThesaurusId
    IndexId: IndexId


class DescribeDataSourceRequest(BaseModel):
    Id: DataSourceId
    IndexId: IndexId


class DescribeFaqRequest(BaseModel):
    Id: FaqId
    IndexId: IndexId


class DescribeIndexRequest(BaseModel):
    Id: IndexId


class DescribePrincipalMappingRequest(BaseModel):
    IndexId: IndexId
    DataSourceId: Optional[DataSourceId] = None
    GroupId: GroupId


class DescribeQuerySuggestionsBlockListRequest(BaseModel):
    IndexId: IndexId
    Id: QuerySuggestionsBlockListId


class DescribeQuerySuggestionsConfigResponse(BaseModel):
    Mode: Optional[Mode] = None
    Status: Optional[QuerySuggestionsStatus] = None
    QueryLogLookBackWindowInDays: Optional[Integer] = None
    IncludeQueriesWithoutUserInformation: Optional[ObjectBoolean] = None
    MinimumNumberOfQueryingUsers: Optional[MinimumNumberOfQueryingUsers] = None
    MinimumQueryCount: Optional[MinimumQueryCount] = None
    LastSuggestionsBuildTime: Optional[Timestamp] = None
    LastClearTime: Optional[Timestamp] = None
    TotalSuggestionsCount: Optional[Integer] = None


class DescribeQuerySuggestionsConfigRequest(BaseModel):
    IndexId: IndexId


class DescribeThesaurusRequest(BaseModel):
    Id: ThesaurusId
    IndexId: IndexId


class GetQuerySuggestionsRequest(BaseModel):
    IndexId: IndexId
    QueryText: SuggestionQueryText
    MaxSuggestionsCount: Optional[Integer] = None


class ListDataSourceSyncJobsRequest(BaseModel):
    Id: DataSourceId
    IndexId: IndexId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListDataSourceSyncJobsRequest] = None
    StartTimeFilter: Optional[TimeRange] = None
    StatusFilter: Optional[DataSourceSyncJobStatus] = None


class ListDataSourcesResponse(BaseModel):
    SummaryItems: Optional[DataSourceSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListDataSourcesRequest(BaseModel):
    IndexId: IndexId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListDataSourcesRequest] = None


class ListFaqsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FaqSummaryItems: Optional[FaqSummaryItems] = None


class ListFaqsRequest(BaseModel):
    IndexId: IndexId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListFaqsRequest] = None


class ListGroupsOlderThanOrderingIdResponse(BaseModel):
    GroupsSummaries: Optional[ListOfGroupSummaries] = None
    NextToken: Optional[NextToken] = None


class ListGroupsOlderThanOrderingIdRequest(BaseModel):
    IndexId: IndexId
    DataSourceId: Optional[DataSourceId] = None
    OrderingId: PrincipalOrderingId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListPrincipalsRequest] = None


class ListIndicesResponse(BaseModel):
    IndexConfigurationSummaryItems: Optional[IndexConfigurationSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListIndicesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListIndicesRequest] = None


class ListQuerySuggestionsBlockListsRequest(BaseModel):
    IndexId: IndexId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListQuerySuggestionsBlockLists] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName


class ListThesauriRequest(BaseModel):
    IndexId: IndexId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResultsIntegerForListThesauriRequest] = None


class StartDataSourceSyncJobResponse(BaseModel):
    ExecutionId: Optional[String] = None


class StartDataSourceSyncJobRequest(BaseModel):
    Id: DataSourceId
    IndexId: IndexId


class StopDataSourceSyncJobRequest(BaseModel):
    Id: DataSourceId
    IndexId: IndexId


class SubmitFeedbackRequest(BaseModel):
    IndexId: IndexId
    QueryId: QueryId
    ClickFeedbackItems: Optional[ClickFeedbackList] = None
    RelevanceFeedbackItems: Optional[RelevanceFeedbackList] = None


class UntagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    TagKeys: TagKeyList


class UpdateQuerySuggestionsConfigRequest(BaseModel):
    IndexId: IndexId
    Mode: Optional[Mode] = None
    QueryLogLookBackWindowInDays: Optional[Integer] = None
    IncludeQueriesWithoutUserInformation: Optional[ObjectBoolean] = None
    MinimumNumberOfQueryingUsers: Optional[MinimumNumberOfQueryingUsers] = None
    MinimumQueryCount: Optional[MinimumQueryCount] = None


class TextWithHighlights(BaseModel):
    """
    Provides text and information about where to highlight the text.
    """

    Text: Optional[String] = None
    Highlights: Optional[HighlightList] = None


class BasicAuthenticationConfigurationList(BaseModel):
    __root__: Annotated[
        List[BasicAuthenticationConfiguration], Field(max_items=10, min_items=0)
    ]


class AuthenticationConfiguration(BaseModel):
    """
    Provides the configuration information to connect to websites that require user authentication.
    """

    BasicAuthentication: Optional[BasicAuthenticationConfigurationList] = None


class DocumentIdList(BaseModel):
    __root__: Annotated[List[DocumentId], Field(max_items=10, min_items=1)]


class DataSourceSyncJobMetricTarget(BaseModel):
    """
    Maps a particular data source sync job to a particular data source.
    """

    DataSourceId: DataSourceId
    DataSourceSyncJobId: Optional[DataSourceSyncJobId] = None


class BatchDeleteDocumentResponseFailedDocuments(BaseModel):
    __root__: List[BatchDeleteDocumentResponseFailedDocument]


class BatchGetDocumentStatusResponseErrors(BaseModel):
    __root__: List[BatchGetDocumentStatusResponseError]


class DocumentStatusList(BaseModel):
    __root__: List[Status]


class BatchPutDocumentResponseFailedDocuments(BaseModel):
    __root__: List[BatchPutDocumentResponseFailedDocument]


class DataSourceToIndexFieldMappingList(BaseModel):
    __root__: Annotated[
        List[DataSourceToIndexFieldMapping], Field(max_items=100, min_items=1)
    ]


class ColumnConfiguration(BaseModel):
    """
    Provides information about how Amazon Kendra should use the columns of a database in an index.
    """

    DocumentIdColumnName: ColumnName
    DocumentDataColumnName: ColumnName
    DocumentTitleColumnName: Optional[ColumnName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    ChangeDetectingColumns: ChangeDetectingColumns


class ConfluenceAttachmentToIndexFieldMapping(BaseModel):
    """
    <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    """

    DataSourceFieldName: Optional[ConfluenceAttachmentFieldName] = None
    DateFieldFormat: Optional[DataSourceDateFieldFormat] = None
    IndexFieldName: Optional[IndexFieldName] = None


class ConfluenceBlogToIndexFieldMapping(BaseModel):
    """
    <p>Defines the mapping between a blog field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    """

    DataSourceFieldName: Optional[ConfluenceBlogFieldName] = None
    DateFieldFormat: Optional[DataSourceDateFieldFormat] = None
    IndexFieldName: Optional[IndexFieldName] = None


class DataSourceInclusionsExclusionsStrings(BaseModel):
    __root__: Annotated[
        List[DataSourceInclusionsExclusionsStringsMember],
        Field(max_items=100, min_items=0),
    ]


class ConfluencePageToIndexFieldMapping(BaseModel):
    """
    <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    """

    DataSourceFieldName: Optional[ConfluencePageFieldName] = None
    DateFieldFormat: Optional[DataSourceDateFieldFormat] = None
    IndexFieldName: Optional[IndexFieldName] = None


class ConfluenceSpaceList(BaseModel):
    __root__: Annotated[List[ConfluenceSpaceIdentifier], Field(min_items=1)]


class ConfluenceSpaceToIndexFieldMapping(BaseModel):
    """
    <p>Defines the mapping between a field in the Confluence data source to a Amazon Kendra index field.</p> <p>You must first create the index field using the <code>UpdateIndex</code> operation. </p>
    """

    DataSourceFieldName: Optional[ConfluenceSpaceFieldName] = None
    DateFieldFormat: Optional[DataSourceDateFieldFormat] = None
    IndexFieldName: Optional[IndexFieldName] = None


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=0)]


class S3Path(BaseModel):
    """
    Information required to find a specific file in an Amazon S3 bucket.
    """

    Bucket: S3BucketName
    Key: S3ObjectKey


class ServerSideEncryptionConfiguration(BaseModel):
    """
    Provides the identifier of the KMScustomer master key (CMK) used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
    """

    KmsKeyId: Optional[KmsKeyId] = None


class UserTokenConfigurationList(BaseModel):
    __root__: Annotated[List[UserTokenConfiguration], Field(max_items=1)]


class S3DataSourceConfiguration(BaseModel):
    """
    Provides configuration information for a data source to index documents in an Amazon S3 bucket.
    """

    BucketName: S3BucketName
    InclusionPrefixes: Optional[DataSourceInclusionsExclusionsStrings] = None
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    DocumentsMetadataConfiguration: Optional[DocumentsMetadataConfiguration] = None
    AccessControlListConfiguration: Optional[AccessControlListConfiguration] = None


class GoogleDriveConfiguration(BaseModel):
    """
    Provides configuration information for data sources that connect to Google Drive.
    """

    SecretArn: SecretArn
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    ExcludeMimeTypes: Optional[ExcludeMimeTypesList] = None
    ExcludeUserAccounts: Optional[ExcludeUserAccountsList] = None
    ExcludeSharedDrives: Optional[ExcludeSharedDrivesList] = None


class WebCrawlerConfiguration(BaseModel):
    """
    Provides the configuration information required for Amazon Kendra web crawler.
    """

    Urls: Urls
    CrawlDepth: Optional[CrawlDepth] = None
    MaxLinksPerPage: Optional[MaxLinksPerPage] = None
    MaxContentSizePerPageInMegaBytes: Optional[MaxContentSizePerPageInMegaBytes] = None
    MaxUrlsPerMinuteCrawlRate: Optional[MaxUrlsPerMinuteCrawlRate] = None
    UrlInclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    UrlExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ProxyConfiguration: Optional[ProxyConfiguration] = None
    AuthenticationConfiguration: Optional[AuthenticationConfiguration] = None


class WorkDocsConfiguration(BaseModel):
    """
    <p>Provides the configuration information to connect to Amazon WorkDocs as your data source.</p> <p>Amazon WorkDocs connector is available in Oregon, North Virginia, Sydney, Singapore and Ireland regions.</p>
    """

    OrganizationId: OrganizationId
    CrawlComments: Optional[Boolean] = None
    UseChangeLog: Optional[Boolean] = None
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class DataSourceSyncJobMetrics(BaseModel):
    """
    Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
    """

    DocumentsAdded: Optional[MetricValue] = None
    DocumentsModified: Optional[MetricValue] = None
    DocumentsDeleted: Optional[MetricValue] = None
    DocumentsFailed: Optional[MetricValue] = None
    DocumentsScanned: Optional[MetricValue] = None


class DataSourceSyncJob(BaseModel):
    """
    Provides information about a synchronization job.
    """

    ExecutionId: Optional[String] = None
    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None
    Status: Optional[DataSourceSyncJobStatus] = None
    ErrorMessage: Optional[ErrorMessage] = None
    ErrorCode: Optional[ErrorCode] = None
    DataSourceErrorCode: Optional[String] = None
    Metrics: Optional[DataSourceSyncJobMetrics] = None


class DataSourceSyncJobHistoryList(BaseModel):
    __root__: List[DataSourceSyncJob]


class SubnetIdList(BaseModel):
    __root__: Annotated[List[SubnetId], Field(max_items=6, min_items=1)]


class SecurityGroupIdList(BaseModel):
    __root__: Annotated[List[VpcSecurityGroupId], Field(max_items=10, min_items=1)]


class SqlConfiguration(BaseModel):
    """
    Provides information that configures Amazon Kendra to use a SQL database.
    """

    QueryIdentifiersEnclosingOption: Optional[QueryIdentifiersEnclosingOption] = None


class PrincipalList(BaseModel):
    __root__: List[Principal]


class DocumentAttributeValue(BaseModel):
    """
    The value of a custom document attribute. You can only provide one value for a custom attribute.
    """

    StringValue: Optional[DocumentAttributeStringValue] = None
    StringListValue: Optional[DocumentAttributeStringListValue] = None
    LongValue: Optional[Long] = None
    DateValue: Optional[Timestamp] = None


class DocumentAttributeValueCountPair(BaseModel):
    """
    Provides the count of documents that match a particular attribute when doing a faceted search.
    """

    DocumentAttributeValue: Optional[DocumentAttributeValue] = None
    Count: Optional[Integer] = None


class DocumentAttributeValueCountPairList(BaseModel):
    __root__: List[DocumentAttributeValueCountPair]


class Relevance(BaseModel):
    """
    Provides information for manually tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
    """

    Freshness: Optional[DocumentMetadataBoolean] = None
    Importance: Optional[Importance] = None
    Duration: Optional[Duration] = None
    RankOrder: Optional[Order] = None
    ValueImportanceMap: Optional[ValueImportanceMap] = None


class DocumentMetadataConfiguration(BaseModel):
    """
    Specifies the properties of a custom index field.
    """

    Name: DocumentMetadataConfigurationName
    Type: DocumentAttributeValueType
    Relevance: Optional[Relevance] = None
    Search: Optional[Search] = None


class DocumentRelevanceConfiguration(BaseModel):
    """
    Overrides the document relevance properties of a custom index field.
    """

    Name: DocumentMetadataConfigurationName
    Relevance: Relevance


class DocumentRelevanceOverrideConfigurationList(BaseModel):
    __root__: Annotated[
        List[DocumentRelevanceConfiguration], Field(max_items=500, min_items=0)
    ]


class FacetResult(BaseModel):
    """
    The facet values for the documents in the response.
    """

    DocumentAttributeKey: Optional[DocumentAttributeKey] = None
    DocumentAttributeValueType: Optional[DocumentAttributeValueType] = None
    DocumentAttributeValueCountPairs: Optional[
        DocumentAttributeValueCountPairList
    ] = None


class FacetResultList(BaseModel):
    __root__: List[FacetResult]


class MemberGroups(BaseModel):
    __root__: Annotated[List[MemberGroup], Field(max_items=1000, min_items=1)]


class MemberUsers(BaseModel):
    __root__: Annotated[List[MemberUser], Field(max_items=1000, min_items=1)]


class GroupMembers(BaseModel):
    """
    A list of users or sub groups that belong to a group. Users and groups are useful for filtering search results to different users based on their group's access to documents.
    """

    MemberGroups: Optional[MemberGroups] = None
    MemberUsers: Optional[MemberUsers] = None
    S3PathforGroupMembers: Optional[S3Path] = None


class GroupOrderingIdSummary(BaseModel):
    """
    Information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
    """

    Status: Optional[PrincipalMappingStatus] = None
    LastUpdatedAt: Optional[Timestamp] = None
    ReceivedAt: Optional[Timestamp] = None
    OrderingId: Optional[PrincipalOrderingId] = None
    FailureReason: Optional[FailureReason1] = None


class HierarchicalPrincipal(BaseModel):
    """
    Information to define the hierarchy for which documents users should have access to.
    """

    PrincipalList: PrincipalList


class TextDocumentStatistics(BaseModel):
    """
    Provides information about text documents indexed in an index.
    """

    IndexedTextDocumentsCount: IndexedTextDocumentsCount
    IndexedTextBytes: IndexedTextBytes


class QuerySuggestionsBlockListSummaryItems(BaseModel):
    __root__: List[QuerySuggestionsBlockListSummary]


class ThesaurusSummaryItems(BaseModel):
    __root__: List[ThesaurusSummary]


class OneDriveUsers(BaseModel):
    """
    User accounts whose documents should be indexed.
    """

    OneDriveUserList: Optional[OneDriveUserList] = None
    OneDriveUserS3Path: Optional[S3Path] = None


class SortingConfiguration(BaseModel):
    """
    <p>Specifies the document attribute to use to sort the response to a Amazon Kendra query. You can specify a single attribute for sorting. The attribute must have the <code>Sortable</code> flag set to <code>true</code>, otherwise Amazon Kendra returns an exception.</p> <p>You can sort attributes of the following types.</p> <ul> <li> <p>Date value</p> </li> <li> <p>Long value</p> </li> <li> <p>String value</p> </li> </ul> <p>You can't sort attributes of the following type.</p> <ul> <li> <p>String list value</p> </li> </ul>
    """

    DocumentAttributeKey: DocumentAttributeKey
    SortOrder: SortOrder


class UserContext(BaseModel):
    """
    <p>Provides information about the user context for a Amazon Kendra index.</p> <p>This is used for filtering search results for different users based on their access to documents.</p> <p>You provide one of the following:</p> <ul> <li> <p>User token</p> </li> <li> <p>User ID, the groups the user belongs to, and the data sources the groups can access</p> </li> </ul> <p>If you provide both, an exception is thrown.</p>
    """

    Token: Optional[Token] = None
    UserId: Optional[PrincipalName] = None
    Groups: Optional[Groups] = None
    DataSourceGroups: Optional[DataSourceGroups] = None


class ScoreAttributes(BaseModel):
    """
    Provides a relative ranking that indicates how confident Amazon Kendra is that the response matches the query.
    """

    ScoreConfidence: Optional[ScoreConfidence] = None


class SalesforceChatterFeedIncludeFilterTypes(BaseModel):
    __root__: Annotated[
        List[SalesforceChatterFeedIncludeFilterType], Field(max_items=2, min_items=1)
    ]


class SalesforceChatterFeedConfiguration(BaseModel):
    """
    Defines configuration for syncing a Salesforce chatter feed. The contents of the object comes from the Salesforce FeedItem table.
    """

    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    IncludeFilterTypes: Optional[SalesforceChatterFeedIncludeFilterTypes] = None


class SalesforceStandardObjectAttachmentConfiguration(BaseModel):
    """
    Provides configuration information for processing attachments to Salesforce standard objects.
    """

    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class SalesforceCustomKnowledgeArticleTypeConfiguration(BaseModel):
    """
    Provides configuration information for indexing Salesforce custom articles.
    """

    Name: SalesforceCustomKnowledgeArticleTypeName
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class SalesforceCustomKnowledgeArticleTypeConfigurationList(BaseModel):
    __root__: Annotated[
        List[SalesforceCustomKnowledgeArticleTypeConfiguration],
        Field(max_items=10, min_items=1),
    ]


class SalesforceKnowledgeArticleStateList(BaseModel):
    __root__: Annotated[
        List[SalesforceKnowledgeArticleState], Field(max_items=3, min_items=1)
    ]


class SalesforceStandardKnowledgeArticleTypeConfiguration(BaseModel):
    """
    Provides configuration information for standard Salesforce knowledge articles.
    """

    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class SalesforceStandardObjectConfiguration(BaseModel):
    """
    Specifies configuration information for indexing a single standard object.
    """

    Name: SalesforceStandardObjectName
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class ServiceNowKnowledgeArticleConfiguration(BaseModel):
    """
    Provides configuration information for crawling knowledge articles in the ServiceNow site.
    """

    CrawlAttachments: Optional[Boolean] = None
    IncludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None
    ExcludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    FilterQuery: Optional[ServiceNowKnowledgeArticleFilterQuery] = None


class ServiceNowServiceCatalogConfiguration(BaseModel):
    """
    Provides configuration information for crawling service catalog items in the ServiceNow site
    """

    CrawlAttachments: Optional[Boolean] = None
    IncludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None
    ExcludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None


class SuggestionValue(BaseModel):
    """
    The <code>SuggestionTextWithHighlights</code> structure information.
    """

    Text: Optional[SuggestionTextWithHighlights] = None


class Suggestion(BaseModel):
    """
    A single query suggestion.
    """

    Id: Optional[ResultId] = None
    Value: Optional[SuggestionValue] = None


class BatchDeleteDocumentResponse(BaseModel):
    FailedDocuments: Optional[BatchDeleteDocumentResponseFailedDocuments] = None


class BatchDeleteDocumentRequest(BaseModel):
    IndexId: IndexId
    DocumentIdList: DocumentIdList
    DataSourceSyncJobMetricTarget: Optional[DataSourceSyncJobMetricTarget] = None


class BatchGetDocumentStatusResponse(BaseModel):
    Errors: Optional[BatchGetDocumentStatusResponseErrors] = None
    DocumentStatusList: Optional[DocumentStatusList] = None


class BatchPutDocumentResponse(BaseModel):
    FailedDocuments: Optional[BatchPutDocumentResponseFailedDocuments] = None


class CreateFaqRequest(BaseModel):
    IndexId: IndexId
    Name: FaqName
    Description: Optional[Description] = None
    S3Path: S3Path
    RoleArn: RoleArn
    Tags: Optional[TagList] = None
    FileFormat: Optional[FaqFileFormat] = None
    ClientToken: Optional[ClientTokenName] = None


class CreateIndexRequest(BaseModel):
    Name: IndexName
    Edition: Optional[IndexEdition] = None
    RoleArn: RoleArn
    ServerSideEncryptionConfiguration: Optional[
        ServerSideEncryptionConfiguration
    ] = None
    Description: Optional[Description] = None
    ClientToken: Optional[ClientTokenName] = None
    Tags: Optional[TagList] = None
    UserTokenConfigurations: Optional[UserTokenConfigurationList] = None
    UserContextPolicy: Optional[UserContextPolicy] = None


class CreateQuerySuggestionsBlockListRequest(BaseModel):
    IndexId: IndexId
    Name: QuerySuggestionsBlockListName
    Description: Optional[Description] = None
    SourceS3Path: S3Path
    ClientToken: Optional[ClientTokenName] = None
    RoleArn: RoleArn
    Tags: Optional[TagList] = None


class CreateThesaurusRequest(BaseModel):
    IndexId: IndexId
    Name: ThesaurusName
    Description: Optional[Description] = None
    RoleArn: RoleArn
    Tags: Optional[TagList] = None
    SourceS3Path: S3Path
    ClientToken: Optional[ClientTokenName] = None


class DescribeFaqResponse(BaseModel):
    Id: Optional[FaqId] = None
    IndexId: Optional[IndexId] = None
    Name: Optional[FaqName] = None
    Description: Optional[Description] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    S3Path: Optional[S3Path] = None
    Status: Optional[FaqStatus] = None
    RoleArn: Optional[RoleArn] = None
    ErrorMessage: Optional[ErrorMessage] = None
    FileFormat: Optional[FaqFileFormat] = None


class DescribeQuerySuggestionsBlockListResponse(BaseModel):
    IndexId: Optional[IndexId] = None
    Id: Optional[QuerySuggestionsBlockListId] = None
    Name: Optional[QuerySuggestionsBlockListName] = None
    Description: Optional[Description] = None
    Status: Optional[QuerySuggestionsBlockListStatus] = None
    ErrorMessage: Optional[ErrorMessage] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    SourceS3Path: Optional[S3Path] = None
    ItemCount: Optional[Integer] = None
    FileSizeBytes: Optional[Long] = None
    RoleArn: Optional[RoleArn] = None


class DescribeThesaurusResponse(BaseModel):
    Id: Optional[ThesaurusId] = None
    IndexId: Optional[IndexId] = None
    Name: Optional[ThesaurusName] = None
    Description: Optional[Description] = None
    Status: Optional[ThesaurusStatus] = None
    ErrorMessage: Optional[ErrorMessage] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    RoleArn: Optional[RoleArn] = None
    SourceS3Path: Optional[S3Path] = None
    FileSizeBytes: Optional[Long] = None
    TermCount: Optional[Long] = None
    SynonymRuleCount: Optional[Long] = None


class ListDataSourceSyncJobsResponse(BaseModel):
    History: Optional[DataSourceSyncJobHistoryList] = None
    NextToken: Optional[NextToken] = None


class ListQuerySuggestionsBlockListsResponse(BaseModel):
    BlockListSummaryItems: Optional[QuerySuggestionsBlockListSummaryItems] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class ListThesauriResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    ThesaurusSummaryItems: Optional[ThesaurusSummaryItems] = None


class PutPrincipalMappingRequest(BaseModel):
    IndexId: IndexId
    DataSourceId: Optional[DataSourceId] = None
    GroupId: GroupId
    GroupMembers: GroupMembers
    OrderingId: Optional[PrincipalOrderingId] = None
    RoleArn: Optional[RoleArn] = None


class TagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    Tags: TagList


class UpdateQuerySuggestionsBlockListRequest(BaseModel):
    IndexId: IndexId
    Id: QuerySuggestionsBlockListId
    Name: Optional[QuerySuggestionsBlockListName] = None
    Description: Optional[Description] = None
    SourceS3Path: Optional[S3Path] = None
    RoleArn: Optional[RoleArn] = None


class UpdateThesaurusRequest(BaseModel):
    Id: ThesaurusId
    Name: Optional[ThesaurusName] = None
    IndexId: IndexId
    Description: Optional[Description] = None
    RoleArn: Optional[RoleArn] = None
    SourceS3Path: Optional[S3Path] = None


class AdditionalResultAttributeValue(BaseModel):
    """
    An attribute returned with a document from a search.
    """

    TextWithHighlightsValue: Optional[TextWithHighlights] = None


class AdditionalResultAttribute(BaseModel):
    """
    An attribute returned from an index query.
    """

    Key: String
    ValueType: AdditionalResultAttributeValueType
    Value: AdditionalResultAttributeValue


class AdditionalResultAttributeList(BaseModel):
    __root__: List[AdditionalResultAttribute]


class DocumentAttribute(BaseModel):
    """
    A custom attribute value assigned to a document.
    """

    Key: DocumentAttributeKey
    Value: DocumentAttributeValue


class ConfluenceAttachmentFieldMappingsList(BaseModel):
    __root__: Annotated[
        List[ConfluenceAttachmentToIndexFieldMapping], Field(max_items=11, min_items=1)
    ]


class ConfluenceAttachmentConfiguration(BaseModel):
    """
    Specifies the attachment settings for the Confluence data source. Attachment settings are optional, if you don't specify settings attachments, Amazon Kendra won't index them.
    """

    CrawlAttachments: Optional[Boolean] = None
    AttachmentFieldMappings: Optional[ConfluenceAttachmentFieldMappingsList] = None


class ConfluenceBlogFieldMappingsList(BaseModel):
    __root__: Annotated[
        List[ConfluenceBlogToIndexFieldMapping], Field(max_items=9, min_items=1)
    ]


class ConfluenceBlogConfiguration(BaseModel):
    """
    Specifies the blog settings for the Confluence data source. Blogs are always indexed unless filtered from the index by the <code>ExclusionPatterns</code> or <code>InclusionPatterns</code> fields in the <code>ConfluenceConfiguration</code> type.
    """

    BlogFieldMappings: Optional[ConfluenceBlogFieldMappingsList] = None


class DataSourceVpcConfiguration(BaseModel):
    """
    Provides information for connecting to an Amazon VPC.
    """

    SubnetIds: SubnetIdList
    SecurityGroupIds: SecurityGroupIdList


class ConfluencePageFieldMappingsList(BaseModel):
    __root__: Annotated[
        List[ConfluencePageToIndexFieldMapping], Field(max_items=12, min_items=1)
    ]


class ConfluenceSpaceFieldMappingsList(BaseModel):
    __root__: Annotated[
        List[ConfluenceSpaceToIndexFieldMapping], Field(max_items=4, min_items=1)
    ]


class SharePointConfiguration(BaseModel):
    """
    Provides configuration information for connecting to a Microsoft SharePoint data source.
    """

    SharePointVersion: SharePointVersion
    Urls: SharePointUrlList
    SecretArn: SecretArn
    CrawlAttachments: Optional[Boolean] = None
    UseChangeLog: Optional[Boolean] = None
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    VpcConfiguration: Optional[DataSourceVpcConfiguration] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    DocumentTitleFieldName: Optional[DataSourceFieldName] = None
    DisableLocalGroups: Optional[Boolean] = None
    SslCertificateS3Path: Optional[S3Path] = None


class DatabaseConfiguration(BaseModel):
    """
    Provides the information necessary to connect a database to an index.
    """

    DatabaseEngineType: DatabaseEngineType
    ConnectionConfiguration: ConnectionConfiguration
    VpcConfiguration: Optional[DataSourceVpcConfiguration] = None
    ColumnConfiguration: ColumnConfiguration
    AclConfiguration: Optional[AclConfiguration] = None
    SqlConfiguration: Optional[SqlConfiguration] = None


class OneDriveConfiguration(BaseModel):
    """
    Provides configuration information for data sources that connect to OneDrive.
    """

    TenantDomain: TenantDomain
    SecretArn: SecretArn
    OneDriveUsers: OneDriveUsers
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    FieldMappings: Optional[DataSourceToIndexFieldMappingList] = None
    DisableLocalGroups: Optional[Boolean] = None


class ServiceNowConfiguration(BaseModel):
    """
    Provides configuration information required to connect to a ServiceNow data source.
    """

    HostUrl: ServiceNowHostUrl
    SecretArn: SecretArn
    ServiceNowBuildVersion: ServiceNowBuildVersionType
    KnowledgeArticleConfiguration: Optional[
        ServiceNowKnowledgeArticleConfiguration
    ] = None
    ServiceCatalogConfiguration: Optional[ServiceNowServiceCatalogConfiguration] = None
    AuthenticationType: Optional[ServiceNowAuthenticationType] = None


class DocumentMetadataConfigurationList(BaseModel):
    __root__: Annotated[
        List[DocumentMetadataConfiguration], Field(max_items=500, min_items=0)
    ]


class IndexStatistics(BaseModel):
    """
    Provides information about the number of documents and the number of questions and answers in an index.
    """

    FaqStatistics: FaqStatistics
    TextDocumentStatistics: TextDocumentStatistics


class GroupOrderingIdSummaries(BaseModel):
    __root__: Annotated[List[GroupOrderingIdSummary], Field(max_items=10)]


class DocumentAttributeList(BaseModel):
    __root__: List[DocumentAttribute]


class HierarchicalPrincipalList(BaseModel):
    """
    A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.
    """

    __root__: Annotated[
        List[HierarchicalPrincipal],
        Field(
            description='A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.',
            max_items=30,
            min_items=1,
        ),
    ]


class Document(BaseModel):
    """
    A document in an index.
    """

    Id: DocumentId
    Title: Optional[Title] = None
    Blob: Optional[Blob] = None
    S3Path: Optional[S3Path] = None
    Attributes: Optional[DocumentAttributeList] = None
    AccessControlList: Optional[PrincipalList] = None
    HierarchicalAccessControlList: Optional[HierarchicalPrincipalList] = None
    ContentType: Optional[ContentType] = None


class DocumentInfo(BaseModel):
    """
    Identifies a document for which to retrieve status information
    """

    DocumentId: DocumentId
    Attributes: Optional[DocumentAttributeList] = None


class SuggestionList(BaseModel):
    __root__: List[Suggestion]


class QueryResultItem(BaseModel):
    """
    <p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>
    """

    Id: Optional[ResultId] = None
    Type: Optional[QueryResultType] = None
    AdditionalAttributes: Optional[AdditionalResultAttributeList] = None
    DocumentId: Optional[DocumentId] = None
    DocumentTitle: Optional[TextWithHighlights] = None
    DocumentExcerpt: Optional[TextWithHighlights] = None
    DocumentURI: Optional[Url] = None
    DocumentAttributes: Optional[DocumentAttributeList] = None
    ScoreAttributes: Optional[ScoreAttributes] = None
    FeedbackToken: Optional[FeedbackToken] = None


class SalesforceStandardObjectConfigurationList(BaseModel):
    __root__: Annotated[
        List[SalesforceStandardObjectConfiguration], Field(max_items=17, min_items=1)
    ]


class SalesforceKnowledgeArticleConfiguration(BaseModel):
    """
    Specifies configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both
    """

    IncludedStates: SalesforceKnowledgeArticleStateList
    StandardKnowledgeArticleTypeConfiguration: Optional[
        SalesforceStandardKnowledgeArticleTypeConfiguration
    ] = None
    CustomKnowledgeArticleTypeConfigurations: Optional[
        SalesforceCustomKnowledgeArticleTypeConfigurationList
    ] = None


class DescribeIndexResponse(BaseModel):
    Name: Optional[IndexName] = None
    Id: Optional[IndexId] = None
    Edition: Optional[IndexEdition] = None
    RoleArn: Optional[RoleArn] = None
    ServerSideEncryptionConfiguration: Optional[
        ServerSideEncryptionConfiguration
    ] = None
    Status: Optional[IndexStatus] = None
    Description: Optional[Description] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    DocumentMetadataConfigurations: Optional[DocumentMetadataConfigurationList] = None
    IndexStatistics: Optional[IndexStatistics] = None
    ErrorMessage: Optional[ErrorMessage] = None
    CapacityUnits: Optional[CapacityUnitsConfiguration] = None
    UserTokenConfigurations: Optional[UserTokenConfigurationList] = None
    UserContextPolicy: Optional[UserContextPolicy] = None


class DescribePrincipalMappingResponse(BaseModel):
    IndexId: Optional[IndexId] = None
    DataSourceId: Optional[DataSourceId] = None
    GroupId: Optional[GroupId] = None
    GroupOrderingIdSummaries: Optional[GroupOrderingIdSummaries] = None


class GetQuerySuggestionsResponse(BaseModel):
    QuerySuggestionsId: Optional[QuerySuggestionsId] = None
    Suggestions: Optional[SuggestionList] = None


class UpdateIndexRequest(BaseModel):
    Id: IndexId
    Name: Optional[IndexName] = None
    RoleArn: Optional[RoleArn] = None
    Description: Optional[Description] = None
    DocumentMetadataConfigurationUpdates: Optional[
        DocumentMetadataConfigurationList
    ] = None
    CapacityUnits: Optional[CapacityUnitsConfiguration] = None
    UserTokenConfigurations: Optional[UserTokenConfigurationList] = None
    UserContextPolicy: Optional[UserContextPolicy] = None


class DocumentInfoList(BaseModel):
    __root__: Annotated[List[DocumentInfo], Field(max_items=10, min_items=1)]


class DocumentList(BaseModel):
    __root__: Annotated[List[Document], Field(max_items=10, min_items=1)]


class ConfluenceSpaceConfiguration(BaseModel):
    """
    Specifies the configuration for indexing Confluence spaces.
    """

    CrawlPersonalSpaces: Optional[Boolean] = None
    CrawlArchivedSpaces: Optional[Boolean] = None
    IncludeSpaces: Optional[ConfluenceSpaceList] = None
    ExcludeSpaces: Optional[ConfluenceSpaceList] = None
    SpaceFieldMappings: Optional[ConfluenceSpaceFieldMappingsList] = None


class ConfluencePageConfiguration(BaseModel):
    """
    Specifies the page settings for the Confluence data source.
    """

    PageFieldMappings: Optional[ConfluencePageFieldMappingsList] = None


class ConfluenceConfiguration(BaseModel):
    """
    Provides configuration information for data sources that connect to Confluence.
    """

    ServerUrl: Url
    SecretArn: SecretArn
    Version: ConfluenceVersion
    SpaceConfiguration: Optional[ConfluenceSpaceConfiguration] = None
    PageConfiguration: Optional[ConfluencePageConfiguration] = None
    BlogConfiguration: Optional[ConfluenceBlogConfiguration] = None
    AttachmentConfiguration: Optional[ConfluenceAttachmentConfiguration] = None
    VpcConfiguration: Optional[DataSourceVpcConfiguration] = None
    InclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None
    ExclusionPatterns: Optional[DataSourceInclusionsExclusionsStrings] = None


class SalesforceConfiguration(BaseModel):
    """
    Provides configuration information for connecting to a Salesforce data source.
    """

    ServerUrl: Url
    SecretArn: SecretArn
    StandardObjectConfigurations: Optional[
        SalesforceStandardObjectConfigurationList
    ] = None
    KnowledgeArticleConfiguration: Optional[
        SalesforceKnowledgeArticleConfiguration
    ] = None
    ChatterFeedConfiguration: Optional[SalesforceChatterFeedConfiguration] = None
    CrawlAttachments: Optional[Boolean] = None
    StandardObjectAttachmentConfiguration: Optional[
        SalesforceStandardObjectAttachmentConfiguration
    ] = None
    IncludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None
    ExcludeAttachmentFilePatterns: Optional[
        DataSourceInclusionsExclusionsStrings
    ] = None


class QueryResultItemList(BaseModel):
    __root__: List[QueryResultItem]


class BatchGetDocumentStatusRequest(BaseModel):
    IndexId: IndexId
    DocumentInfoList: DocumentInfoList


class BatchPutDocumentRequest(BaseModel):
    IndexId: IndexId
    RoleArn: Optional[RoleArn] = None
    Documents: DocumentList


class QueryResult(BaseModel):
    QueryId: Optional[QueryId] = None
    ResultItems: Optional[QueryResultItemList] = None
    FacetResults: Optional[FacetResultList] = None
    TotalNumberOfResults: Optional[Integer] = None


class DataSourceConfiguration(BaseModel):
    """
    Configuration information for a Amazon Kendra data source.
    """

    S3Configuration: Optional[S3DataSourceConfiguration] = None
    SharePointConfiguration: Optional[SharePointConfiguration] = None
    DatabaseConfiguration: Optional[DatabaseConfiguration] = None
    SalesforceConfiguration: Optional[SalesforceConfiguration] = None
    OneDriveConfiguration: Optional[OneDriveConfiguration] = None
    ServiceNowConfiguration: Optional[ServiceNowConfiguration] = None
    ConfluenceConfiguration: Optional[ConfluenceConfiguration] = None
    GoogleDriveConfiguration: Optional[GoogleDriveConfiguration] = None
    WebCrawlerConfiguration: Optional[WebCrawlerConfiguration] = None
    WorkDocsConfiguration: Optional[WorkDocsConfiguration] = None


class CreateDataSourceRequest(BaseModel):
    Name: DataSourceName
    IndexId: IndexId
    Type: DataSourceType
    Configuration: Optional[DataSourceConfiguration] = None
    Description: Optional[Description] = None
    Schedule: Optional[ScanSchedule] = None
    RoleArn: Optional[RoleArn] = None
    Tags: Optional[TagList] = None
    ClientToken: Optional[ClientTokenName] = None


class DescribeDataSourceResponse(BaseModel):
    Id: Optional[DataSourceId] = None
    IndexId: Optional[IndexId] = None
    Name: Optional[DataSourceName] = None
    Type: Optional[DataSourceType] = None
    Configuration: Optional[DataSourceConfiguration] = None
    CreatedAt: Optional[Timestamp] = None
    UpdatedAt: Optional[Timestamp] = None
    Description: Optional[Description] = None
    Status: Optional[DataSourceStatus] = None
    Schedule: Optional[ScanSchedule] = None
    RoleArn: Optional[RoleArn] = None
    ErrorMessage: Optional[ErrorMessage] = None


class UpdateDataSourceRequest(BaseModel):
    Id: DataSourceId
    Name: Optional[DataSourceName] = None
    IndexId: IndexId
    Configuration: Optional[DataSourceConfiguration] = None
    Description: Optional[Description] = None
    Schedule: Optional[ScanSchedule] = None
    RoleArn: Optional[RoleArn] = None


class QueryRequest(BaseModel):
    IndexId: IndexId
    QueryText: QueryText
    AttributeFilter: Optional[AttributeFilter] = None
    Facets: Optional[FacetList] = None
    RequestedDocumentAttributes: Optional[DocumentAttributeKeyList] = None
    QueryResultTypeFilter: Optional[QueryResultType] = None
    DocumentRelevanceOverrideConfigurations: Optional[
        DocumentRelevanceOverrideConfigurationList
    ] = None
    PageNumber: Optional[Integer] = None
    PageSize: Optional[Integer] = None
    SortingConfiguration: Optional[SortingConfiguration] = None
    UserContext: Optional[UserContext] = None
    VisitorId: Optional[VisitorId] = None


class AttributeFilterList(BaseModel):
    __root__: List[AttributeFilter]


class AttributeFilter(BaseModel):
    """
    <p>Provides filtering the query results based on document attributes.</p> <p>When you use the <code>AndAllFilters</code> or <code>OrAllFilters</code>, filters you can use 2 layers under the first attribute filter. For example, you can use:</p> <p> <code>&lt;AndAllFilters&gt;</code> </p> <ol> <li> <p> <code> &lt;OrAllFilters&gt;</code> </p> </li> <li> <p> <code> &lt;EqualTo&gt;</code> </p> </li> </ol> <p>If you use more than 2 layers, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a depth of more than 2."</p> <p>If you use more than 10 attribute filters, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a length of more than 10".</p>
    """

    AndAllFilters: Optional[AttributeFilterList] = None
    OrAllFilters: Optional[AttributeFilterList] = None
    NotFilter: Optional[AttributeFilter] = None
    EqualsTo: Optional[DocumentAttribute] = None
    ContainsAll: Optional[DocumentAttribute] = None
    ContainsAny: Optional[DocumentAttribute] = None
    GreaterThan: Optional[DocumentAttribute] = None
    GreaterThanOrEquals: Optional[DocumentAttribute] = None
    LessThan: Optional[DocumentAttribute] = None
    LessThanOrEquals: Optional[DocumentAttribute] = None


QueryRequest.update_forward_refs()
AttributeFilterList.update_forward_refs()

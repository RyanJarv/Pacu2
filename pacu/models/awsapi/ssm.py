# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:46+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class AddTagsToResourceResult(BaseModel):
    pass


class InvalidResourceType(BaseModel):
    __root__: Any


class InvalidResourceId(InvalidResourceType):
    pass


class InternalServerError(InvalidResourceType):
    pass


class TooManyTagsError(InvalidResourceType):
    pass


class TooManyUpdates(InvalidResourceType):
    pass


class OpsItemNotFoundException(InvalidResourceType):
    pass


class OpsItemLimitExceededException(InvalidResourceType):
    pass


class OpsItemInvalidParameterException(InvalidResourceType):
    pass


class OpsItemRelatedItemAlreadyExistsException(InvalidResourceType):
    pass


class CancelCommandResult(AddTagsToResourceResult):
    """
    Whether or not the command was successfully canceled. There is no guarantee that a request can be canceled.
    """

    pass


class InvalidCommandId(InvalidResourceType):
    pass


class InvalidInstanceId(InvalidResourceType):
    pass


class DuplicateInstanceId(InvalidResourceType):
    pass


class DoesNotExistException(InvalidResourceType):
    pass


class AssociationAlreadyExists(InvalidResourceType):
    pass


class AssociationLimitExceeded(InvalidResourceType):
    pass


class InvalidDocument(InvalidResourceType):
    pass


class InvalidDocumentVersion(InvalidResourceType):
    pass


class UnsupportedPlatformType(InvalidResourceType):
    pass


class InvalidOutputLocation(InvalidResourceType):
    pass


class InvalidParameters(InvalidResourceType):
    pass


class InvalidTarget(InvalidResourceType):
    pass


class InvalidSchedule(InvalidResourceType):
    pass


class DocumentAlreadyExists(InvalidResourceType):
    pass


class MaxDocumentSizeExceeded(InvalidResourceType):
    pass


class InvalidDocumentContent(InvalidResourceType):
    pass


class DocumentLimitExceeded(InvalidResourceType):
    pass


class InvalidDocumentSchemaVersion(InvalidResourceType):
    pass


class IdempotentParameterMismatch(InvalidResourceType):
    pass


class ResourceLimitExceededException(InvalidResourceType):
    pass


class OpsItemAlreadyExistsException(InvalidResourceType):
    pass


class OpsMetadataAlreadyExistsException(InvalidResourceType):
    pass


class OpsMetadataTooManyUpdatesException(InvalidResourceType):
    pass


class OpsMetadataInvalidArgumentException(InvalidResourceType):
    pass


class OpsMetadataLimitExceededException(InvalidResourceType):
    pass


class CreateResourceDataSyncResult(AddTagsToResourceResult):
    pass


class ResourceDataSyncCountExceededException(InvalidResourceType):
    pass


class ResourceDataSyncAlreadyExistsException(InvalidResourceType):
    pass


class ResourceDataSyncInvalidConfigurationException(InvalidResourceType):
    pass


class DeleteActivationResult(AddTagsToResourceResult):
    pass


class InvalidActivationId(InvalidResourceType):
    pass


class InvalidActivation(InvalidResourceType):
    pass


class DeleteAssociationResult(AddTagsToResourceResult):
    pass


class AssociationDoesNotExist(InvalidResourceType):
    pass


class DeleteDocumentResult(AddTagsToResourceResult):
    pass


class InvalidDocumentOperation(InvalidResourceType):
    pass


class AssociatedInstances(InvalidResourceType):
    pass


class InvalidTypeNameException(InvalidResourceType):
    pass


class InvalidOptionException(InvalidResourceType):
    pass


class InvalidDeleteInventoryParametersException(InvalidResourceType):
    pass


class InvalidInventoryRequestException(InvalidResourceType):
    pass


class DeleteOpsMetadataResult(AddTagsToResourceResult):
    pass


class OpsMetadataNotFoundException(InvalidResourceType):
    pass


class DeleteParameterResult(AddTagsToResourceResult):
    pass


class ParameterNotFound(InvalidResourceType):
    pass


class ResourceInUseException(InvalidResourceType):
    pass


class DeleteResourceDataSyncResult(AddTagsToResourceResult):
    pass


class ResourceDataSyncNotFoundException(InvalidResourceType):
    pass


class DeregisterManagedInstanceResult(AddTagsToResourceResult):
    pass


class TargetInUseException(InvalidResourceType):
    pass


class InvalidFilter(InvalidResourceType):
    pass


class InvalidNextToken(InvalidResourceType):
    pass


class InvalidAssociationVersion(InvalidResourceType):
    pass


class AssociationExecutionDoesNotExist(InvalidResourceType):
    pass


class InvalidFilterKey(InvalidResourceType):
    pass


class InvalidFilterValue(InvalidResourceType):
    pass


class AutomationExecutionNotFoundException(InvalidResourceType):
    pass


class InvalidPermissionType(InvalidResourceType):
    pass


class UnsupportedOperatingSystem(InvalidResourceType):
    pass


class InvalidInstanceInformationFilterValue(InvalidResourceType):
    pass


class InvalidDeletionIdException(InvalidResourceType):
    pass


class InvalidFilterOption(InvalidResourceType):
    pass


class DisassociateOpsItemRelatedItemResponse(AddTagsToResourceResult):
    pass


class OpsItemRelatedItemAssociationNotFoundException(InvalidResourceType):
    pass


class InvalidDocumentType(InvalidResourceType):
    pass


class UnsupportedCalendarException(InvalidResourceType):
    pass


class InvalidPluginName(InvalidResourceType):
    pass


class InvocationDoesNotExist(InvalidResourceType):
    pass


class UnsupportedFeatureRequiredException(InvalidResourceType):
    pass


class InvalidInventoryGroupException(InvalidResourceType):
    pass


class InvalidAggregatorException(InvalidResourceType):
    pass


class InvalidResultAttributeException(InvalidResourceType):
    pass


class InvalidKeyId(InvalidResourceType):
    pass


class ParameterVersionNotFound(InvalidResourceType):
    pass


class ServiceSettingNotFound(InvalidResourceType):
    pass


class ParameterVersionLabelLimitExceeded(InvalidResourceType):
    pass


class ModifyDocumentPermissionResponse(AddTagsToResourceResult):
    pass


class DocumentPermissionLimit(InvalidResourceType):
    pass


class PutComplianceItemsResult(AddTagsToResourceResult):
    pass


class InvalidItemContentException(InvalidResourceType):
    pass


class TotalSizeLimitExceededException(InvalidResourceType):
    pass


class ItemSizeLimitExceededException(InvalidResourceType):
    pass


class ComplianceTypeCountLimitExceededException(InvalidResourceType):
    pass


class ItemContentMismatchException(InvalidResourceType):
    pass


class CustomSchemaCountLimitExceededException(InvalidResourceType):
    pass


class UnsupportedInventorySchemaVersionException(InvalidResourceType):
    pass


class UnsupportedInventoryItemContextException(InvalidResourceType):
    pass


class InvalidInventoryItemContextException(InvalidResourceType):
    pass


class SubTypeCountLimitExceededException(InvalidResourceType):
    pass


class ParameterLimitExceeded(InvalidResourceType):
    pass


class ParameterAlreadyExists(InvalidResourceType):
    pass


class HierarchyLevelLimitExceededException(InvalidResourceType):
    pass


class HierarchyTypeMismatchException(InvalidResourceType):
    pass


class InvalidAllowedPatternException(InvalidResourceType):
    pass


class ParameterMaxVersionLimitExceeded(InvalidResourceType):
    pass


class ParameterPatternMismatchException(InvalidResourceType):
    pass


class UnsupportedParameterType(InvalidResourceType):
    pass


class PoliciesLimitExceededException(InvalidResourceType):
    pass


class InvalidPolicyTypeException(InvalidResourceType):
    pass


class InvalidPolicyAttributeException(InvalidResourceType):
    pass


class IncompatiblePolicyException(InvalidResourceType):
    pass


class AlreadyExistsException(InvalidResourceType):
    pass


class FeatureNotAvailableException(InvalidResourceType):
    pass


class RemoveTagsFromResourceResult(AddTagsToResourceResult):
    pass


class SendAutomationSignalResult(AddTagsToResourceResult):
    pass


class AutomationStepNotFoundException(InvalidResourceType):
    pass


class InvalidAutomationSignalException(InvalidResourceType):
    pass


class InvalidOutputFolder(InvalidResourceType):
    pass


class InvalidRole(InvalidResourceType):
    pass


class InvalidNotificationConfig(InvalidResourceType):
    pass


class StartAssociationsOnceResult(AddTagsToResourceResult):
    pass


class InvalidAssociation(InvalidResourceType):
    pass


class AutomationDefinitionNotFoundException(InvalidResourceType):
    pass


class InvalidAutomationExecutionParametersException(InvalidResourceType):
    pass


class AutomationExecutionLimitExceededException(InvalidResourceType):
    pass


class AutomationDefinitionVersionNotFoundException(InvalidResourceType):
    pass


class AutomationDefinitionNotApprovedException(InvalidResourceType):
    pass


class TargetNotConnected(InvalidResourceType):
    pass


class StopAutomationExecutionResult(AddTagsToResourceResult):
    pass


class InvalidAutomationStatusUpdateException(InvalidResourceType):
    pass


class InvalidUpdate(InvalidResourceType):
    pass


class AssociationVersionLimitExceeded(InvalidResourceType):
    pass


class StatusUnchanged(InvalidResourceType):
    pass


class DocumentVersionLimitExceeded(InvalidResourceType):
    pass


class DuplicateDocumentContent(InvalidResourceType):
    pass


class DuplicateDocumentVersionName(InvalidResourceType):
    pass


class UpdateDocumentMetadataResponse(AddTagsToResourceResult):
    pass


class UpdateManagedInstanceRoleResult(AddTagsToResourceResult):
    pass


class UpdateOpsItemResponse(AddTagsToResourceResult):
    pass


class OpsMetadataKeyLimitExceededException(InvalidResourceType):
    pass


class UpdateResourceDataSyncResult(AddTagsToResourceResult):
    pass


class ResourceDataSyncConflictException(InvalidResourceType):
    pass


class UpdateServiceSettingResult(AddTagsToResourceResult):
    """
    The result body of the UpdateServiceSetting API operation.
    """

    pass


class Account(BaseModel):
    __root__: str


class AccountId(BaseModel):
    __root__: Annotated[str, Field(regex='\\(\\?i\\)all\\|[0-9]\\{12\\}')]


class AccountIdList(BaseModel):
    __root__: Annotated[List[AccountId], Field(max_items=20)]


class SharedDocumentVersion(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The document version shared with other accounts. You can share <code>Latest</code>, <code>Default</code> or <code>All versions</code>.',
            max_length=8,
            regex='([$]LATEST|[$]DEFAULT|[$]ALL)',
        ),
    ]


class AccountSharingInfo(BaseModel):
    """
    Information includes the Amazon Web Services account ID where the current document is shared and the version shared with that account.
    """

    AccountId: Optional[AccountId] = None
    SharedDocumentVersion: Optional[SharedDocumentVersion] = None


class AccountSharingInfoList(BaseModel):
    """
    A list of of Amazon Web Services accounts where the current document is shared and the version shared with each account.
    """

    __root__: Annotated[
        List[AccountSharingInfo],
        Field(
            description='A list of of Amazon Web Services accounts where the current document is shared and the version shared with each account.'
        ),
    ]


class Accounts(BaseModel):
    __root__: Annotated[List[Account], Field(max_items=50, min_items=1)]


class ActivationId(BaseModel):
    __root__: Annotated[
        str,
        Field(regex='^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'),
    ]


class ActivationDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class DefaultInstanceName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=0, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class IamRole(BaseModel):
    __root__: Annotated[str, Field(max_length=64)]


class RegistrationLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class RegistrationsCount(RegistrationLimit):
    pass


class ExpirationDate(BaseModel):
    __root__: datetime


class Boolean(BaseModel):
    __root__: bool


class CreatedDate4(ExpirationDate):
    pass


class ActivationCode(BaseModel):
    __root__: Annotated[str, Field(max_length=250, min_length=20)]


class ResourceTypeForTagging(Enum):
    Document = 'Document'
    ManagedInstance = 'ManagedInstance'
    MaintenanceWindow = 'MaintenanceWindow'
    Parameter = 'Parameter'
    PatchBaseline = 'PatchBaseline'
    OpsItem = 'OpsItem'
    OpsMetadata = 'OpsMetadata'


class ResourceId(Account):
    pass


class AgentErrorCode(BaseModel):
    __root__: Annotated[str, Field(max_length=10)]


class AggregatorSchemaOnly(Boolean):
    pass


class AllowedPattern(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0)]


class ApplyOnlyAtCronInterval(Boolean):
    pass


class ApproveAfterDays(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=360.0)]


class OpsItemId(BaseModel):
    __root__: Annotated[str, Field(regex='^(oi)-[0-9a-f]{12}$')]


class OpsItemRelatedItemAssociationType(Account):
    pass


class OpsItemRelatedItemAssociationResourceType(Account):
    pass


class OpsItemRelatedItemAssociationResourceUri(Account):
    pass


class OpsItemRelatedItemAssociationId(Account):
    pass


class DocumentARN(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_\\-.:/]{3,128}$')]


class InstanceId(BaseModel):
    __root__: Annotated[str, Field(regex='(^i-(\\w{8}|\\w{17})$)|(^mi-\\w{17}$)')]


class AssociationId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}'
        ),
    ]


class AssociationVersion(BaseModel):
    __root__: Annotated[str, Field(regex='([$]LATEST)|([1-9][0-9]*)')]


class DocumentVersion(BaseModel):
    __root__: Annotated[str, Field(regex='([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)')]


class DateTime(ExpirationDate):
    pass


class ScheduleExpression(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class AssociationName(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_\\-.]{3,128}$')]


class AssociationComplianceSeverity(Enum):
    CRITICAL = 'CRITICAL'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'
    UNSPECIFIED = 'UNSPECIFIED'


class AutomationTargetParameterName(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1)]


class Parameters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class MaxErrors(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=7,
            min_length=1,
            regex='^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$',
        ),
    ]


class MaxConcurrency(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=7, min_length=1, regex='^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$'
        ),
    ]


class AssociationSyncCompliance(Enum):
    AUTO = 'AUTO'
    MANUAL = 'MANUAL'


class AssociationExecutionId(AssociationId):
    pass


class StatusName(Account):
    pass


class ResourceCountByStatus(Account):
    pass


class AssociationExecution(BaseModel):
    """
    Includes information about the specified association.
    """

    AssociationId: Optional[AssociationId] = None
    AssociationVersion: Optional[AssociationVersion] = None
    ExecutionId: Optional[AssociationExecutionId] = None
    Status: Optional[StatusName] = None
    DetailedStatus: Optional[StatusName] = None
    CreatedTime: Optional[DateTime] = None
    LastExecutionDate: Optional[DateTime] = None
    ResourceCountByStatus: Optional[ResourceCountByStatus] = None


class AssociationExecutionFilterKey(Enum):
    ExecutionId = 'ExecutionId'
    Status = 'Status'
    CreatedTime = 'CreatedTime'


class AssociationExecutionFilterValue(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class AssociationFilterOperatorType(Enum):
    EQUAL = 'EQUAL'
    LESS_THAN = 'LESS_THAN'
    GREATER_THAN = 'GREATER_THAN'


class AssociationExecutionFilter(BaseModel):
    """
    Filters used in the request.
    """

    Key: AssociationExecutionFilterKey
    Value: AssociationExecutionFilterValue
    Type: AssociationFilterOperatorType


class AssociationExecutionFilterList(BaseModel):
    __root__: Annotated[List[AssociationExecutionFilter], Field(min_items=1)]


class AssociationResourceId(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class AssociationResourceType(AutomationTargetParameterName):
    pass


class AssociationExecutionTargetsFilterKey(Enum):
    Status = 'Status'
    ResourceId = 'ResourceId'
    ResourceType = 'ResourceType'


class AssociationExecutionTargetsFilterValue(AssociationExecutionFilterValue):
    pass


class AssociationExecutionTargetsFilter(BaseModel):
    """
    Filters for the association execution.
    """

    Key: AssociationExecutionTargetsFilterKey
    Value: AssociationExecutionTargetsFilterValue


class AssociationExecutionTargetsFilterList(BaseModel):
    __root__: Annotated[List[AssociationExecutionTargetsFilter], Field(min_items=1)]


class AssociationExecutionsList(BaseModel):
    __root__: List[AssociationExecution]


class AssociationFilterKey(Enum):
    InstanceId = 'InstanceId'
    Name = 'Name'
    AssociationId = 'AssociationId'
    AssociationStatusName = 'AssociationStatusName'
    LastExecutedBefore = 'LastExecutedBefore'
    LastExecutedAfter = 'LastExecutedAfter'
    AssociationName = 'AssociationName'
    ResourceGroupName = 'ResourceGroupName'


class AssociationFilterValue(AssociationExecutionFilterValue):
    pass


class AssociationFilter(BaseModel):
    """
    Describes a filter.
    """

    key: AssociationFilterKey
    value: AssociationFilterValue


class AssociationFilterList(BaseModel):
    __root__: Annotated[List[AssociationFilter], Field(min_items=1)]


class AssociationIdList(BaseModel):
    __root__: Annotated[List[AssociationId], Field(max_items=10, min_items=1)]


class AssociationStatusAggregatedCount(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AssociationStatusName(Enum):
    Pending = 'Pending'
    Success = 'Success'
    Failed = 'Failed'


class StatusMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class StatusAdditionalInfo(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class InstanceCount(BaseModel):
    __root__: int


class AttachmentName(AssociationName):
    pass


class ContentLength(InstanceCount):
    pass


class AttachmentHash(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class AttachmentHashType(Enum):
    Sha256 = 'Sha256'


class AttachmentUrl(Account):
    pass


class AttachmentContent(BaseModel):
    """
    A structure that includes attributes that describe a document attachment.
    """

    Name: Optional[AttachmentName] = None
    Size: Optional[ContentLength] = None
    Hash: Optional[AttachmentHash] = None
    HashType: Optional[AttachmentHashType] = None
    Url: Optional[AttachmentUrl] = None


class AttachmentContentList(BaseModel):
    __root__: List[AttachmentContent]


class AttachmentIdentifier(AssociationName):
    pass


class AttachmentInformation(BaseModel):
    """
    An attribute of an attachment, such as the attachment name.
    """

    Name: Optional[AttachmentName] = None


class AttachmentInformationList(BaseModel):
    __root__: List[AttachmentInformation]


class AttachmentsSourceKey(Enum):
    SourceUrl = 'SourceUrl'
    S3FileUrl = 'S3FileUrl'
    AttachmentReference = 'AttachmentReference'


class AttachmentsSourceValue(StatusMessage):
    pass


class AttributeName(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class AttributeValue(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=0)]


class AutomationActionName(BaseModel):
    __root__: Annotated[str, Field(regex='^aws:[a-zA-Z]{3,25}$')]


class AutomationExecutionId(BaseModel):
    __root__: Annotated[str, Field(max_length=36, min_length=36)]


class DocumentName(AssociationName):
    pass


class AutomationExecutionStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Waiting = 'Waiting'
    Success = 'Success'
    TimedOut = 'TimedOut'
    Cancelling = 'Cancelling'
    Cancelled = 'Cancelled'
    Failed = 'Failed'
    PendingApproval = 'PendingApproval'
    Approved = 'Approved'
    Rejected = 'Rejected'
    Scheduled = 'Scheduled'
    RunbookInProgress = 'RunbookInProgress'
    PendingChangeCalendarOverride = 'PendingChangeCalendarOverride'
    ChangeCalendarOverrideApproved = 'ChangeCalendarOverrideApproved'
    ChangeCalendarOverrideRejected = 'ChangeCalendarOverrideRejected'
    CompletedWithSuccess = 'CompletedWithSuccess'
    CompletedWithFailure = 'CompletedWithFailure'


class AutomationParameterMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class String(Account):
    pass


class ExecutionMode(Enum):
    Auto = 'Auto'
    Interactive = 'Interactive'


class AutomationParameterKey(AutomationTargetParameterName):
    pass


class AutomationSubtype(Enum):
    ChangeRequest = 'ChangeRequest'


class ChangeRequestName(StatusMessage):
    pass


class AutomationExecutionFilterKey(Enum):
    DocumentNamePrefix = 'DocumentNamePrefix'
    ExecutionStatus = 'ExecutionStatus'
    ExecutionId = 'ExecutionId'
    ParentExecutionId = 'ParentExecutionId'
    CurrentAction = 'CurrentAction'
    StartTimeBefore = 'StartTimeBefore'
    StartTimeAfter = 'StartTimeAfter'
    AutomationType = 'AutomationType'
    TagKey = 'TagKey'
    TargetResourceGroup = 'TargetResourceGroup'
    AutomationSubtype = 'AutomationSubtype'
    OpsItemId = 'OpsItemId'


class AutomationExecutionFilterValue(BaseModel):
    __root__: Annotated[str, Field(max_length=150, min_length=1)]


class AutomationType(Enum):
    CrossAccount = 'CrossAccount'
    Local = 'Local'


class AutomationParameterValue(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class BaselineDescription(StatusMessage):
    pass


class BaselineId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=20, regex='^[a-zA-Z0-9_\\-:/]{20,128}$')
    ]


class BaselineName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=3, regex='^[a-zA-Z0-9_\\-.]{3,128}$')
    ]


class OperatingSystem(Enum):
    WINDOWS = 'WINDOWS'
    AMAZON_LINUX = 'AMAZON_LINUX'
    AMAZON_LINUX_2 = 'AMAZON_LINUX_2'
    UBUNTU = 'UBUNTU'
    REDHAT_ENTERPRISE_LINUX = 'REDHAT_ENTERPRISE_LINUX'
    SUSE = 'SUSE'
    CENTOS = 'CENTOS'
    ORACLE_LINUX = 'ORACLE_LINUX'
    DEBIAN = 'DEBIAN'
    MACOS = 'MACOS'


class PatchComplianceLevel(Enum):
    CRITICAL = 'CRITICAL'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'
    INFORMATIONAL = 'INFORMATIONAL'
    UNSPECIFIED = 'UNSPECIFIED'


class PatchAction(Enum):
    ALLOW_AS_DEPENDENCY = 'ALLOW_AS_DEPENDENCY'
    BLOCK = 'BLOCK'


class BatchErrorMessage(Account):
    pass


class CalendarNameOrARN(Account):
    pass


class CalendarState(Enum):
    OPEN = 'OPEN'
    CLOSED = 'CLOSED'


class CommandId(AutomationExecutionId):
    pass


class InstanceIdList(BaseModel):
    __root__: Annotated[List[InstanceId], Field(max_items=50, min_items=0)]


class MaintenanceWindowExecutionId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$',
        ),
    ]


class ChangeDetailsValue(BaseModel):
    __root__: Annotated[str, Field(max_length=32768, min_length=1)]


class ClientToken(AttributeName):
    pass


class CloudWatchLogGroupName(AutomationParameterValue):
    pass


class CloudWatchOutputEnabled(Boolean):
    pass


class CloudWatchOutputConfig(BaseModel):
    """
    Configuration options for sending command output to Amazon CloudWatch Logs.
    """

    CloudWatchLogGroupName: Optional[CloudWatchLogGroupName] = None
    CloudWatchOutputEnabled: Optional[CloudWatchOutputEnabled] = None


class Comment(BaseModel):
    __root__: Annotated[str, Field(max_length=100)]


class CommandStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Success = 'Success'
    Cancelled = 'Cancelled'
    Failed = 'Failed'
    TimedOut = 'TimedOut'
    Cancelling = 'Cancelling'


class StatusDetails(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=0)]


class S3Region(BaseModel):
    __root__: Annotated[str, Field(max_length=20, min_length=3)]


class S3BucketName(BaseModel):
    __root__: Annotated[str, Field(max_length=63, min_length=3)]


class S3KeyPrefix(BaseModel):
    __root__: Annotated[str, Field(max_length=500)]


class TargetCount(InstanceCount):
    pass


class CompletedCount(InstanceCount):
    pass


class ErrorCount(InstanceCount):
    pass


class DeliveryTimedOutCount(InstanceCount):
    pass


class ServiceRole(Account):
    pass


class TimeoutSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=30.0, le=2592000.0)]


class CommandFilterKey(Enum):
    InvokedAfter = 'InvokedAfter'
    InvokedBefore = 'InvokedBefore'
    Status = 'Status'
    ExecutionStage = 'ExecutionStage'
    DocumentName = 'DocumentName'


class CommandFilterValue(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class CommandFilter(BaseModel):
    """
    <p>Describes a command filter.</p> <note> <p>An instance ID can't be specified when a command status is <code>Pending</code> because the command hasn't run on the instance yet.</p> </note>
    """

    key: CommandFilterKey
    value: CommandFilterValue


class CommandFilterList(BaseModel):
    __root__: Annotated[List[CommandFilter], Field(max_items=5, min_items=1)]


class InstanceTagName(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class CommandInvocationStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Delayed = 'Delayed'
    Success = 'Success'
    Cancelled = 'Cancelled'
    TimedOut = 'TimedOut'
    Failed = 'Failed'
    Cancelling = 'Cancelling'


class InvocationTraceOutput(BaseModel):
    __root__: Annotated[str, Field(max_length=2500)]


class Url(Account):
    pass


class CommandMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class CommandPluginName(BaseModel):
    __root__: Annotated[str, Field(min_length=4)]


class CommandPluginStatus(Enum):
    Pending = 'Pending'
    InProgress = 'InProgress'
    Success = 'Success'
    TimedOut = 'TimedOut'
    Cancelled = 'Cancelled'
    Failed = 'Failed'


class ResponseCode(InstanceCount):
    pass


class CommandPluginOutput(InvocationTraceOutput):
    pass


class CommandPlugin(BaseModel):
    """
    Describes plugin details.
    """

    Name: Optional[CommandPluginName] = None
    Status: Optional[CommandPluginStatus] = None
    StatusDetails: Optional[StatusDetails] = None
    ResponseCode: Optional[ResponseCode] = None
    ResponseStartDateTime: Optional[DateTime] = None
    ResponseFinishDateTime: Optional[DateTime] = None
    Output: Optional[CommandPluginOutput] = None
    StandardOutputUrl: Optional[Url] = None
    StandardErrorUrl: Optional[Url] = None
    OutputS3Region: Optional[S3Region] = None
    OutputS3BucketName: Optional[S3BucketName] = None
    OutputS3KeyPrefix: Optional[S3KeyPrefix] = None


class ComplianceExecutionId(Comment):
    pass


class ComplianceExecutionType(BaseModel):
    __root__: Annotated[str, Field(max_length=50)]


class ComplianceExecutionSummary(BaseModel):
    """
    A summary of the call execution that includes an execution ID, the type of execution (for example, <code>Command</code>), and the date/time of the execution using a datetime object that is saved in the following format: yyyy-MM-dd'T'HH:mm:ss'Z'.
    """

    ExecutionTime: DateTime
    ExecutionId: Optional[ComplianceExecutionId] = None
    ExecutionType: Optional[ComplianceExecutionType] = None


class ComplianceFilterValue(Account):
    pass


class ComplianceTypeName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+',
        ),
    ]


class ComplianceResourceType(AutomationTargetParameterName):
    pass


class ComplianceResourceId(AssociationResourceId):
    pass


class ComplianceItemId(Account):
    pass


class ComplianceItemTitle(S3KeyPrefix):
    pass


class ComplianceStatus(Enum):
    COMPLIANT = 'COMPLIANT'
    NON_COMPLIANT = 'NON_COMPLIANT'


class ComplianceItemDetails(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ComplianceItem(BaseModel):
    """
    Information about the compliance as defined by the resource type. For example, for a patch resource type, <code>Items</code> includes information about the PatchSeverity, Classification, and so on.
    """

    ComplianceType: Optional[ComplianceTypeName] = None
    ResourceType: Optional[ComplianceResourceType] = None
    ResourceId: Optional[ComplianceResourceId] = None
    Id: Optional[ComplianceItemId] = None
    Title: Optional[ComplianceItemTitle] = None
    Status: Optional[ComplianceStatus] = None
    Severity: Optional[PatchComplianceLevel] = None
    ExecutionSummary: Optional[ComplianceExecutionSummary] = None
    Details: Optional[ComplianceItemDetails] = None


class ComplianceItemContentHash(AttachmentHash):
    pass


class ComplianceItemEntry(BaseModel):
    """
    Information about a compliance item.
    """

    Id: Optional[ComplianceItemId] = None
    Title: Optional[ComplianceItemTitle] = None
    Severity: PatchComplianceLevel
    Status: ComplianceStatus
    Details: Optional[ComplianceItemDetails] = None


class ComplianceItemEntryList(BaseModel):
    __root__: Annotated[List[ComplianceItemEntry], Field(max_items=10000, min_items=0)]


class ComplianceItemList(BaseModel):
    __root__: List[ComplianceItem]


class ComplianceQueryOperatorType(Enum):
    EQUAL = 'EQUAL'
    NOT_EQUAL = 'NOT_EQUAL'
    BEGIN_WITH = 'BEGIN_WITH'
    LESS_THAN = 'LESS_THAN'
    GREATER_THAN = 'GREATER_THAN'


class ComplianceResourceIdList(BaseModel):
    __root__: Annotated[List[ComplianceResourceId], Field(min_items=1)]


class ComplianceResourceTypeList(BaseModel):
    __root__: Annotated[List[ComplianceResourceType], Field(min_items=1)]


class ComplianceStringFilterKey(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=1)]


class ComplianceStringFilterValueList(BaseModel):
    __root__: Annotated[List[ComplianceFilterValue], Field(max_items=20, min_items=1)]


class ComplianceStringFilter(BaseModel):
    """
    One or more filters. Use a filter to return a more specific list of results.
    """

    Key: Optional[ComplianceStringFilterKey] = None
    Values: Optional[ComplianceStringFilterValueList] = None
    Type: Optional[ComplianceQueryOperatorType] = None


class ComplianceStringFilterList(BaseModel):
    __root__: List[ComplianceStringFilter]


class ComplianceSummaryCount(InstanceCount):
    pass


class ComplianceUploadType(Enum):
    COMPLETE = 'COMPLETE'
    PARTIAL = 'PARTIAL'


class SeveritySummary(BaseModel):
    """
    The number of managed instances found for each patch severity level defined in the request filter.
    """

    CriticalCount: Optional[ComplianceSummaryCount] = None
    HighCount: Optional[ComplianceSummaryCount] = None
    MediumCount: Optional[ComplianceSummaryCount] = None
    LowCount: Optional[ComplianceSummaryCount] = None
    InformationalCount: Optional[ComplianceSummaryCount] = None
    UnspecifiedCount: Optional[ComplianceSummaryCount] = None


class ComputerName(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class ConnectionStatus(Enum):
    Connected = 'Connected'
    NotConnected = 'NotConnected'


class DocumentContent(AssociationExecutionFilterValue):
    pass


class DocumentDisplayName(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='^[\\w\\.\\-\\:\\/ ]*$')]


class DocumentVersionName(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_\\-.]{1,128}$')]


class DocumentType(Enum):
    Command = 'Command'
    Policy = 'Policy'
    Automation = 'Automation'
    Session = 'Session'
    Package = 'Package'
    ApplicationConfiguration = 'ApplicationConfiguration'
    ApplicationConfigurationSchema = 'ApplicationConfigurationSchema'
    DeploymentStrategy = 'DeploymentStrategy'
    ChangeCalendar = 'ChangeCalendar'
    Automation_ChangeTemplate = 'Automation.ChangeTemplate'
    ProblemAnalysis = 'ProblemAnalysis'
    ProblemAnalysisTemplate = 'ProblemAnalysisTemplate'


class DocumentFormat(Enum):
    YAML = 'YAML'
    JSON = 'JSON'
    TEXT = 'TEXT'


class TargetType(BaseModel):
    __root__: Annotated[str, Field(max_length=200, regex='^\\/[\\w\\.\\-\\:\\/]*$')]


class MaintenanceWindowName(BaselineName):
    pass


class MaintenanceWindowDescription(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=128, min_length=1)]


class MaintenanceWindowStringDateTime(Account):
    pass


class MaintenanceWindowSchedule(ScheduleExpression):
    pass


class MaintenanceWindowTimezone(Account):
    pass


class MaintenanceWindowOffset(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=6.0)]


class MaintenanceWindowDurationHours(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=24.0)]


class MaintenanceWindowCutoff(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=23.0)]


class MaintenanceWindowAllowUnassociatedTargets(Boolean):
    pass


class MaintenanceWindowId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=20, min_length=20, regex='^mw-[0-9a-f]{17}$')
    ]


class OpsItemDescription(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='[\\s\\S]*\\S[\\s\\S]*')
    ]


class OpsItemType(Account):
    pass


class OpsItemOperationalData(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class OpsItemPriority(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=5.0)]


class OpsItemSource(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='^(?!\\s*$).+')]


class OpsItemTitle(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='^(?!\\s*$).+')]


class OpsItemCategory(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='^(?!\\s*$).+')]


class OpsItemSeverity(OpsItemCategory):
    pass


class OpsMetadataResourceId(OpsItemTitle):
    pass


class MetadataMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class OpsMetadataArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1011,
            min_length=1,
            regex='arn:(aws[a-zA-Z-]*)?:ssm:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:opsmetadata\\/([a-zA-Z0-9-_\\.\\/]*)',
        ),
    ]


class ResourceDataSyncName(AttributeName):
    pass


class ResourceDataSyncType(AttributeName):
    pass


class DefaultBaseline(Boolean):
    pass


class InventoryItemTypeName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^(AWS|Custom):.*$')
    ]


class InventorySchemaDeleteOption(Enum):
    DisableSchema = 'DisableSchema'
    DeleteSchema = 'DeleteSchema'


class DryRun(Boolean):
    pass


class UUID(BaseModel):
    __root__: Annotated[
        str, Field(regex='[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')
    ]


class PSParameterName(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class ParameterNameList(BaseModel):
    __root__: Annotated[List[PSParameterName], Field(max_items=10, min_items=1)]


class ManagedInstanceId(BaseModel):
    __root__: Annotated[str, Field(regex='^mi-[0-9a-f]{17}$')]


class PatchGroup(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class MaintenanceWindowTargetId(MaintenanceWindowExecutionId):
    pass


class MaintenanceWindowTaskId(MaintenanceWindowExecutionId):
    pass


class DescribeActivationsFilterKeys(Enum):
    ActivationIds = 'ActivationIds'
    DefaultInstanceName = 'DefaultInstanceName'
    IamRole = 'IamRole'


class StringList(BaseModel):
    __root__: List[String]


class DescribeActivationsFilter(BaseModel):
    """
    Filter for the DescribeActivation API.
    """

    FilterKey: Optional[DescribeActivationsFilterKeys] = None
    FilterValues: Optional[StringList] = None


class DescribeActivationsFilterList(BaseModel):
    __root__: List[DescribeActivationsFilter]


class MaxResults(CommandMaxResults):
    pass


class NextToken(Account):
    pass


class PatchBaselineMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class DocumentPermissionType(Enum):
    Share = 'Share'


class DocumentPermissionMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=200.0)]


class EffectiveInstanceAssociationMaxResults(OpsItemPriority):
    pass


class MaxResultsEC2Compatible(BaseModel):
    __root__: Annotated[int, Field(ge=5.0, le=50.0)]


class PatchComplianceMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=10.0, le=100.0)]


class MaintenanceWindowExecutionTaskId(MaintenanceWindowExecutionId):
    pass


class MaintenanceWindowMaxResults(PatchComplianceMaxResults):
    pass


class MaintenanceWindowResourceType(Enum):
    INSTANCE = 'INSTANCE'
    RESOURCE_GROUP = 'RESOURCE_GROUP'


class MaintenanceWindowSearchMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class OpsItemMaxResults(CommandMaxResults):
    pass


class Integer(InstanceCount):
    pass


class InstancesCount(InstanceCount):
    pass


class PatchProperty(Enum):
    PRODUCT = 'PRODUCT'
    PRODUCT_FAMILY = 'PRODUCT_FAMILY'
    CLASSIFICATION = 'CLASSIFICATION'
    MSRC_SEVERITY = 'MSRC_SEVERITY'
    PRIORITY = 'PRIORITY'
    SEVERITY = 'SEVERITY'


class PatchSet(Enum):
    OS = 'OS'
    APPLICATION = 'APPLICATION'


class SessionState(Enum):
    Active = 'Active'
    History = 'History'


class SessionMaxResults(DocumentPermissionMaxResults):
    pass


class DescriptionInDocument(Account):
    pass


class DocumentAuthor(Account):
    pass


class DocumentDefaultVersionDescription(BaseModel):
    """
    A default version of a document.
    """

    Name: Optional[DocumentName] = None
    DefaultVersion: Optional[DocumentVersion] = None
    DefaultVersionName: Optional[DocumentVersionName] = None


class DocumentSha1(Account):
    pass


class DocumentHash(AttachmentHash):
    pass


class DocumentHashType(Enum):
    Sha256 = 'Sha256'
    Sha1 = 'Sha1'


class DocumentOwner(Account):
    pass


class DocumentStatus(Enum):
    """
    The status of a document.
    """

    Creating = 'Creating'
    Active = 'Active'
    Updating = 'Updating'
    Deleting = 'Deleting'
    Failed = 'Failed'


class DocumentStatusInformation(Account):
    pass


class DocumentSchemaVersion(BaseModel):
    __root__: Annotated[str, Field(regex='([0-9]+)\\.([0-9]+)')]


class ReviewStatus(Enum):
    APPROVED = 'APPROVED'
    NOT_REVIEWED = 'NOT_REVIEWED'
    PENDING = 'PENDING'
    REJECTED = 'REJECTED'


class DocumentFilterKey(Enum):
    Name = 'Name'
    Owner = 'Owner'
    PlatformTypes = 'PlatformTypes'
    DocumentType = 'DocumentType'


class DocumentFilterValue(AssociationExecutionFilterValue):
    pass


class DocumentFilter(BaseModel):
    """
    This data type is deprecated. Instead, use <a>DocumentKeyValuesFilter</a>.
    """

    key: DocumentFilterKey
    value: DocumentFilterValue


class DocumentFilterList(BaseModel):
    __root__: Annotated[List[DocumentFilter], Field(min_items=1)]


class DocumentKeyValuesFilterKey(CommandFilterValue):
    pass


class DocumentKeyValuesFilterValue(ScheduleExpression):
    pass


class DocumentMetadataEnum(Enum):
    DocumentReviews = 'DocumentReviews'


class DocumentParameterName(Account):
    pass


class DocumentParameterType(Enum):
    String = 'String'
    StringList = 'StringList'


class DocumentParameterDescrption(Account):
    pass


class DocumentParameterDefaultValue(Account):
    pass


class DocumentParameter(BaseModel):
    """
    Parameters specified in a System Manager document that run on the server when the command is run.
    """

    Name: Optional[DocumentParameterName] = None
    Type: Optional[DocumentParameterType] = None
    Description: Optional[DocumentParameterDescrption] = None
    DefaultValue: Optional[DocumentParameterDefaultValue] = None


class DocumentRequires(BaseModel):
    """
    An SSM document required by the current document.
    """

    Name: DocumentARN
    Version: Optional[DocumentVersion] = None


class DocumentReviewAction(Enum):
    SendForReview = 'SendForReview'
    UpdateReview = 'UpdateReview'
    Approve = 'Approve'
    Reject = 'Reject'


class DocumentReviewComment(OpsItemTitle):
    pass


class DocumentReviewCommentType(Enum):
    Comment = 'Comment'


class Reviewer(BaseModel):
    __root__: Annotated[str, Field(max_length=50, regex='^[a-zA-Z0-9_\\-.]{1,128}$')]


class DocumentVersionInfo(BaseModel):
    """
    Version information about the document.
    """

    Name: Optional[DocumentName] = None
    DisplayName: Optional[DocumentDisplayName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    VersionName: Optional[DocumentVersionName] = None
    CreatedDate: Optional[DateTime] = None
    IsDefaultVersion: Optional[Boolean] = None
    DocumentFormat: Optional[DocumentFormat] = None
    Status: Optional[DocumentStatus] = None
    StatusInformation: Optional[DocumentStatusInformation] = None
    ReviewStatus: Optional[ReviewStatus] = None


class DocumentVersionList(BaseModel):
    __root__: Annotated[List[DocumentVersionInfo], Field(min_items=1)]


class DocumentVersionNumber(BaseModel):
    __root__: Annotated[str, Field(regex='(^[1-9][0-9]*$)')]


class ExecutionRoleName(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[\\w+=,.@/-]+')]


class Fault(Enum):
    Client = 'Client'
    Server = 'Server'
    Unknown = 'Unknown'


class FailureDetails(BaseModel):
    """
    Information about an Automation failure.
    """

    FailureStage: Optional[String] = None
    FailureType: Optional[String] = None
    Details: Optional[AutomationParameterMap] = None


class ISO8601String(Account):
    pass


class StringDateTime(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^([\\-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d(?!:))?)?(\\17[0-5]\\d([\\.,]\\d)?)?([zZ]|([\\-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$'
        ),
    ]


class StandardOutputContent(BaseModel):
    __root__: Annotated[str, Field(max_length=24000)]


class StandardErrorContent(BaseModel):
    __root__: Annotated[str, Field(max_length=8000)]


class SessionTarget(BaseModel):
    __root__: Annotated[str, Field(max_length=400, min_length=1)]


class SnapshotId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$',
        ),
    ]


class SnapshotDownloadUrl(Account):
    pass


class Product(Account):
    pass


class GetInventorySchemaMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=50.0, le=200.0)]


class InventoryItemTypeNameFilter(StatusDetails):
    pass


class IsSubTypeSchema(Boolean):
    pass


class MaintenanceWindowExecutionTaskIdList(BaseModel):
    __root__: List[MaintenanceWindowExecutionTaskId]


class MaintenanceWindowExecutionStatus(Enum):
    PENDING = 'PENDING'
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCESS = 'SUCCESS'
    FAILED = 'FAILED'
    TIMED_OUT = 'TIMED_OUT'
    CANCELLING = 'CANCELLING'
    CANCELLED = 'CANCELLED'
    SKIPPED_OVERLAPPING = 'SKIPPED_OVERLAPPING'


class MaintenanceWindowExecutionStatusDetails(BaseModel):
    __root__: Annotated[str, Field(max_length=250, min_length=0)]


class MaintenanceWindowExecutionTaskInvocationId(MaintenanceWindowExecutionId):
    pass


class MaintenanceWindowExecutionTaskExecutionId(Account):
    pass


class MaintenanceWindowTaskType(Enum):
    RUN_COMMAND = 'RUN_COMMAND'
    AUTOMATION = 'AUTOMATION'
    STEP_FUNCTIONS = 'STEP_FUNCTIONS'
    LAMBDA = 'LAMBDA'


class MaintenanceWindowExecutionTaskInvocationParameters(BaseModel):
    __root__: SecretStr


class OwnerInformation(MaintenanceWindowDescription):
    pass


class MaintenanceWindowTaskTargetId(BaseModel):
    __root__: Annotated[str, Field(max_length=36)]


class MaintenanceWindowTaskArn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1)]


class MaintenanceWindowTaskPriority(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class MaintenanceWindowEnabled(Boolean):
    pass


class MaintenanceWindowTaskParameters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LoggingInfo(BaseModel):
    """
    <p>Information about an Amazon Simple Storage Service (Amazon S3) bucket to write instance-level logs to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>
    """

    S3BucketName: S3BucketName
    S3KeyPrefix: Optional[S3KeyPrefix] = None
    S3Region: S3Region


class GetOpsMetadataMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class GetParametersByPathMaxResults(GetOpsMetadataMaxResults):
    pass


class PatchGroupList(BaseModel):
    __root__: List[PatchGroup]


class ServiceSettingId(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class IPAddress(BaseModel):
    __root__: Annotated[str, Field(max_length=46, min_length=1)]


class IdempotencyToken(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}',
        ),
    ]


class InstallOverrideList(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='^https://.+$|^s3://([^/]+)/(.*?([^/]+))$',
        ),
    ]


class InstanceAssociationStatusAggregatedCount(AssociationStatusAggregatedCount):
    pass


class InstanceAggregatedAssociationOverview(BaseModel):
    """
    Status information about the aggregated associations.
    """

    DetailedStatus: Optional[StatusName] = None
    InstanceAssociationStatusAggregatedCount: Optional[
        InstanceAssociationStatusAggregatedCount
    ] = None


class InstanceAssociation(BaseModel):
    """
    One or more association documents on the instance.
    """

    AssociationId: Optional[AssociationId] = None
    InstanceId: Optional[InstanceId] = None
    Content: Optional[DocumentContent] = None
    AssociationVersion: Optional[AssociationVersion] = None


class InstanceAssociationExecutionSummary(AutomationParameterValue):
    pass


class S3OutputLocation(BaseModel):
    """
    An S3 bucket where you want to store the results of this request.
    """

    OutputS3Region: Optional[S3Region] = None
    OutputS3BucketName: Optional[S3BucketName] = None
    OutputS3KeyPrefix: Optional[S3KeyPrefix] = None


class S3OutputUrl(BaseModel):
    """
    A URL for the Amazon Web Services Systems Manager (Systems Manager) bucket where you want to store the results of this request.
    """

    OutputUrl: Optional[Url] = None


class InstanceAssociationOutputUrl(BaseModel):
    """
    The URL of S3 bucket where you want to store the results of this request.
    """

    S3OutputUrl: Optional[S3OutputUrl] = None


class InstanceAssociationStatusInfo(BaseModel):
    """
    Status information about the instance association.
    """

    AssociationId: Optional[AssociationId] = None
    Name: Optional[DocumentARN] = None
    DocumentVersion: Optional[DocumentVersion] = None
    AssociationVersion: Optional[AssociationVersion] = None
    InstanceId: Optional[InstanceId] = None
    ExecutionDate: Optional[DateTime] = None
    Status: Optional[StatusName] = None
    DetailedStatus: Optional[StatusName] = None
    ExecutionSummary: Optional[InstanceAssociationExecutionSummary] = None
    ErrorCode: Optional[AgentErrorCode] = None
    OutputUrl: Optional[InstanceAssociationOutputUrl] = None
    AssociationName: Optional[AssociationName] = None


class PingStatus(Enum):
    Online = 'Online'
    ConnectionLost = 'ConnectionLost'
    Inactive = 'Inactive'


class Version5(BaseModel):
    __root__: Annotated[str, Field(regex='^[0-9]{1,6}(\\.[0-9]{1,6}){2,3}$')]


class PlatformType(Enum):
    Windows = 'Windows'
    Linux = 'Linux'


class ResourceType10(Enum):
    ManagedInstance = 'ManagedInstance'
    Document = 'Document'
    EC2Instance = 'EC2Instance'


class InstanceInformation(BaseModel):
    """
    Describes a filter for a specific list of instances.
    """

    InstanceId: Optional[InstanceId] = None
    PingStatus: Optional[PingStatus] = None
    LastPingDateTime: Optional[DateTime] = None
    AgentVersion: Optional[Version5] = None
    IsLatestVersion: Optional[Boolean] = None
    PlatformType: Optional[PlatformType] = None
    PlatformName: Optional[String] = None
    PlatformVersion: Optional[String] = None
    ActivationId: Optional[ActivationId] = None
    IamRole: Optional[IamRole] = None
    RegistrationDate: Optional[DateTime] = None
    ResourceType: Optional[ResourceType10] = None
    Name: Optional[String] = None
    IPAddress: Optional[IPAddress] = None
    ComputerName: Optional[ComputerName] = None
    AssociationStatus: Optional[StatusName] = None
    LastAssociationExecutionDate: Optional[DateTime] = None
    LastSuccessfulAssociationExecutionDate: Optional[DateTime] = None
    AssociationOverview: Optional[InstanceAggregatedAssociationOverview] = None


class InstanceInformationFilterKey(Enum):
    InstanceIds = 'InstanceIds'
    AgentVersion = 'AgentVersion'
    PingStatus = 'PingStatus'
    PlatformTypes = 'PlatformTypes'
    ActivationIds = 'ActivationIds'
    IamRole = 'IamRole'
    ResourceType = 'ResourceType'
    AssociationStatus = 'AssociationStatus'


class InstanceInformationFilterValue(AssociationExecutionFilterValue):
    pass


class InstanceInformationStringFilterKey(AssociationExecutionFilterValue):
    pass


class PatchInstalledCount(InstanceCount):
    pass


class PatchInstalledOtherCount(InstanceCount):
    pass


class PatchInstalledPendingRebootCount(InstanceCount):
    pass


class PatchInstalledRejectedCount(InstanceCount):
    pass


class PatchMissingCount(InstanceCount):
    pass


class PatchFailedCount(InstanceCount):
    pass


class PatchUnreportedNotApplicableCount(InstanceCount):
    pass


class PatchNotApplicableCount(InstanceCount):
    pass


class PatchOperationType(Enum):
    Scan = 'Scan'
    Install = 'Install'


class RebootOption(Enum):
    RebootIfNeeded = 'RebootIfNeeded'
    NoReboot = 'NoReboot'


class PatchCriticalNonCompliantCount(InstanceCount):
    pass


class PatchSecurityNonCompliantCount(InstanceCount):
    pass


class PatchOtherNonCompliantCount(InstanceCount):
    pass


class InstancePatchState(BaseModel):
    """
    Defines the high-level patch compliance state for a managed instance, providing information about the number of installed, missing, not applicable, and failed patches along with metadata about the operation when this information was gathered for the instance.
    """

    InstanceId: InstanceId
    PatchGroup: PatchGroup
    BaselineId: BaselineId
    SnapshotId: Optional[SnapshotId] = None
    InstallOverrideList: Optional[InstallOverrideList] = None
    OwnerInformation: Optional[OwnerInformation] = None
    InstalledCount: Optional[PatchInstalledCount] = None
    InstalledOtherCount: Optional[PatchInstalledOtherCount] = None
    InstalledPendingRebootCount: Optional[PatchInstalledPendingRebootCount] = None
    InstalledRejectedCount: Optional[PatchInstalledRejectedCount] = None
    MissingCount: Optional[PatchMissingCount] = None
    FailedCount: Optional[PatchFailedCount] = None
    UnreportedNotApplicableCount: Optional[PatchUnreportedNotApplicableCount] = None
    NotApplicableCount: Optional[PatchNotApplicableCount] = None
    OperationStartTime: DateTime
    OperationEndTime: DateTime
    Operation: PatchOperationType
    LastNoRebootInstallOperationTime: Optional[DateTime] = None
    RebootOption: Optional[RebootOption] = None
    CriticalNonCompliantCount: Optional[PatchCriticalNonCompliantCount] = None
    SecurityNonCompliantCount: Optional[PatchSecurityNonCompliantCount] = None
    OtherNonCompliantCount: Optional[PatchOtherNonCompliantCount] = None


class InstancePatchStateFilterKey(ComplianceStringFilterKey):
    pass


class InstancePatchStateOperatorType(Enum):
    Equal = 'Equal'
    NotEqual = 'NotEqual'
    LessThan = 'LessThan'
    GreaterThan = 'GreaterThan'


class InstancePatchStateFilterValue(Account):
    pass


class InventoryAggregatorExpression(ServiceSettingId):
    pass


class InventoryAttributeDataType(Enum):
    string = 'string'
    number = 'number'


class InventoryDeletionLastStatusMessage(Account):
    pass


class InventoryDeletionLastStatusUpdateTime(ExpirationDate):
    pass


class InventoryDeletionStartTime(ExpirationDate):
    pass


class InventoryDeletionStatus(Enum):
    InProgress = 'InProgress'
    Complete = 'Complete'


class TotalCount(InstanceCount):
    pass


class RemainingCount(InstanceCount):
    pass


class InventoryItemSchemaVersion(BaseModel):
    __root__: Annotated[str, Field(regex='^([0-9]{1,6})(\\.[0-9]{1,6})$')]


class ResourceCount(InstanceCount):
    pass


class InventoryDeletionSummaryItem(BaseModel):
    """
    Either a count, remaining count, or a version number in a delete inventory summary.
    """

    Version: Optional[InventoryItemSchemaVersion] = None
    Count: Optional[ResourceCount] = None
    RemainingCount: Optional[RemainingCount] = None


class InventoryFilterKey(ComplianceStringFilterKey):
    pass


class InventoryQueryOperatorType(Enum):
    Equal = 'Equal'
    NotEqual = 'NotEqual'
    BeginWith = 'BeginWith'
    LessThan = 'LessThan'
    GreaterThan = 'GreaterThan'
    Exists = 'Exists'


class InventoryFilterValue(Account):
    pass


class InventoryGroupName(ComplianceStringFilterKey):
    pass


class InventoryItemCaptureTime(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$'
        ),
    ]


class InventoryItemContentHash(AttachmentHash):
    pass


class InventoryItemContentContext(ComplianceItemDetails):
    pass


class InventoryItemAttributeName(Account):
    pass


class InventoryItemAttribute(BaseModel):
    """
    Attributes are the entries within the inventory item content. It contains name and value.
    """

    Name: InventoryItemAttributeName
    DataType: InventoryAttributeDataType


class InventoryItemAttributeList(BaseModel):
    __root__: Annotated[List[InventoryItemAttribute], Field(max_items=50, min_items=1)]


class InventoryItemEntry(ComplianceItemDetails):
    pass


class InventoryTypeDisplayName(Account):
    pass


class InventoryItemSchema(BaseModel):
    """
    The inventory item schema definition. Users can use this to compose inventory query filters.
    """

    TypeName: InventoryItemTypeName
    Version: Optional[InventoryItemSchemaVersion] = None
    Attributes: InventoryItemAttributeList
    DisplayName: Optional[InventoryTypeDisplayName] = None


class InventoryResultEntityId(Account):
    pass


class InventoryResultItemMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class InventoryResultEntity(BaseModel):
    """
    Inventory query results.
    """

    Id: Optional[InventoryResultEntityId] = None
    Data: Optional[InventoryResultItemMap] = None


class InventoryResultItemKey(Account):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class KeyList(BaseModel):
    __root__: List[TagKey]


class PSParameterVersion(InstanceCount):
    pass


class LastResourceDataSyncMessage(Account):
    pass


class LastResourceDataSyncStatus(Enum):
    Successful = 'Successful'
    Failed = 'Failed'
    InProgress = 'InProgress'


class LastResourceDataSyncTime(ExpirationDate):
    pass


class LastSuccessfulResourceDataSyncTime(ExpirationDate):
    pass


class OpsItemEventMaxResults(CommandMaxResults):
    pass


class OpsItemRelatedItemsMaxResults(CommandMaxResults):
    pass


class ListOpsMetadataMaxResults(CommandMaxResults):
    pass


class Long(InstanceCount):
    pass


class MaintenanceWindowAutomationParameters(BaseModel):
    """
    The parameters for an <code>AUTOMATION</code> task type.
    """

    DocumentVersion: Optional[DocumentVersion] = None
    Parameters: Optional[AutomationParameterMap] = None


class MaintenanceWindowExecution(BaseModel):
    """
    Describes the information about an execution of a maintenance window.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None
    Status: Optional[MaintenanceWindowExecutionStatus] = None
    StatusDetails: Optional[MaintenanceWindowExecutionStatusDetails] = None
    StartTime: Optional[DateTime] = None
    EndTime: Optional[DateTime] = None


class MaintenanceWindowExecutionTaskIdentity(BaseModel):
    """
    Information about a task execution performed as part of a maintenance window execution.
    """

    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None
    TaskExecutionId: Optional[MaintenanceWindowExecutionTaskId] = None
    Status: Optional[MaintenanceWindowExecutionStatus] = None
    StatusDetails: Optional[MaintenanceWindowExecutionStatusDetails] = None
    StartTime: Optional[DateTime] = None
    EndTime: Optional[DateTime] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    TaskType: Optional[MaintenanceWindowTaskType] = None


class MaintenanceWindowExecutionTaskInvocationIdentity(BaseModel):
    """
    Describes the information about a task invocation for a particular target as part of a task execution performed as part of a maintenance window execution.
    """

    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None
    TaskExecutionId: Optional[MaintenanceWindowExecutionTaskId] = None
    InvocationId: Optional[MaintenanceWindowExecutionTaskInvocationId] = None
    ExecutionId: Optional[MaintenanceWindowExecutionTaskExecutionId] = None
    TaskType: Optional[MaintenanceWindowTaskType] = None
    Parameters: Optional[MaintenanceWindowExecutionTaskInvocationParameters] = None
    Status: Optional[MaintenanceWindowExecutionStatus] = None
    StatusDetails: Optional[MaintenanceWindowExecutionStatusDetails] = None
    StartTime: Optional[DateTime] = None
    EndTime: Optional[DateTime] = None
    OwnerInformation: Optional[OwnerInformation] = None
    WindowTargetId: Optional[MaintenanceWindowTaskTargetId] = None


class MaintenanceWindowFilterKey(CommandFilterValue):
    pass


class MaintenanceWindowFilterValue(ScheduleExpression):
    pass


class MaintenanceWindowIdentity(BaseModel):
    """
    Information about the maintenance window.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    Enabled: Optional[MaintenanceWindowEnabled] = None
    Duration: Optional[MaintenanceWindowDurationHours] = None
    Cutoff: Optional[MaintenanceWindowCutoff] = None
    Schedule: Optional[MaintenanceWindowSchedule] = None
    ScheduleTimezone: Optional[MaintenanceWindowTimezone] = None
    ScheduleOffset: Optional[MaintenanceWindowOffset] = None
    EndDate: Optional[MaintenanceWindowStringDateTime] = None
    StartDate: Optional[MaintenanceWindowStringDateTime] = None
    NextExecutionTime: Optional[MaintenanceWindowStringDateTime] = None


class MaintenanceWindowIdentityForTarget(BaseModel):
    """
    The maintenance window to which the specified target belongs.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    Name: Optional[MaintenanceWindowName] = None


class MaintenanceWindowLambdaClientContext(BaseModel):
    __root__: Annotated[str, Field(max_length=8000, min_length=1)]


class MaintenanceWindowLambdaQualifier(CommandFilterValue):
    pass


class MaintenanceWindowLambdaPayload(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=4096)]


class MaintenanceWindowLambdaParameters(BaseModel):
    """
    <p>The parameters for a <code>LAMBDA</code> task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda tasks, Systems Manager ignores any values specified for TaskParameters and LoggingInfo.</p> </note>
    """

    ClientContext: Optional[MaintenanceWindowLambdaClientContext] = None
    Qualifier: Optional[MaintenanceWindowLambdaQualifier] = None
    Payload: Optional[MaintenanceWindowLambdaPayload] = None


class MaintenanceWindowStepFunctionsInput(MaintenanceWindowLambdaPayload):
    pass


class MaintenanceWindowStepFunctionsName(BaseModel):
    __root__: Annotated[str, Field(max_length=80, min_length=1)]


class MaintenanceWindowStepFunctionsParameters(BaseModel):
    """
    <p>The parameters for a <code>STEP_FUNCTIONS</code> task.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step Functions tasks, Systems Manager ignores any values specified for <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>
    """

    Input: Optional[MaintenanceWindowStepFunctionsInput] = None
    Name: Optional[MaintenanceWindowStepFunctionsName] = None


class MaintenanceWindowTaskParameterName(ComputerName):
    pass


class MaintenanceWindowTaskParameterValue(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=255, min_length=1)]


class MaintenanceWindowTaskParameterValueList(BaseModel):
    __root__: List[MaintenanceWindowTaskParameterValue]


class MaintenanceWindowTaskParameterValueExpression(BaseModel):
    """
    Defines the values for a task parameter.
    """

    Values: Optional[MaintenanceWindowTaskParameterValueList] = None


class MetadataKey(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='^(?!\\s*$).+')]


class MetadataKeysToDeleteList(BaseModel):
    __root__: Annotated[List[MetadataKey], Field(max_items=10, min_items=1)]


class MetadataValueString(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1)]


class NormalStringMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class NotificationArn(Account):
    pass


class NotificationType(Enum):
    Command = 'Command'
    Invocation = 'Invocation'


class NotificationEvent(Enum):
    All = 'All'
    InProgress = 'InProgress'
    Success = 'Success'
    TimedOut = 'TimedOut'
    Cancelled = 'Cancelled'
    Failed = 'Failed'


class OpsAggregatorType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=20, min_length=1, regex='^(range|count|sum)')
    ]


class OpsDataTypeName(InventoryItemTypeName):
    pass


class OpsDataAttributeName(CommandFilterValue):
    pass


class OpsAggregatorValueMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class OpsAggregatorValue(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0)]


class OpsAggregatorValueKey(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class OpsEntityId(Account):
    pass


class OpsEntityItemMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class OpsEntity(BaseModel):
    """
    The result of the query.
    """

    Id: Optional[OpsEntityId] = None
    Data: Optional[OpsEntityItemMap] = None


class OpsEntityItemCaptureTime(InventoryItemCaptureTime):
    pass


class OpsEntityItemEntry(ComplianceItemDetails):
    pass


class OpsEntityItemKey(Account):
    pass


class OpsFilterKey(ComplianceStringFilterKey):
    pass


class OpsFilterValue(ActivationDescription):
    pass


class OpsItemStatus(Enum):
    Open = 'Open'
    InProgress = 'InProgress'
    Resolved = 'Resolved'
    Pending = 'Pending'
    TimedOut = 'TimedOut'
    Cancelling = 'Cancelling'
    Cancelled = 'Cancelled'
    Failed = 'Failed'
    CompletedWithSuccess = 'CompletedWithSuccess'
    CompletedWithFailure = 'CompletedWithFailure'
    Scheduled = 'Scheduled'
    RunbookInProgress = 'RunbookInProgress'
    PendingChangeCalendarOverride = 'PendingChangeCalendarOverride'
    ChangeCalendarOverrideApproved = 'ChangeCalendarOverrideApproved'
    ChangeCalendarOverrideRejected = 'ChangeCalendarOverrideRejected'
    PendingApproval = 'PendingApproval'
    Approved = 'Approved'
    Rejected = 'Rejected'
    Closed = 'Closed'


class OpsItemDataKey(OpsItemSource):
    pass


class OpsItemDataType(Enum):
    SearchableString = 'SearchableString'
    String = 'String'


class OpsItemDataValueString(BaseModel):
    __root__: Annotated[str, Field(regex='[\\s\\S]*\\S[\\s\\S]*')]


class OpsItemDataValue(BaseModel):
    """
    An object that defines the value of the key and its type in the OperationalData map.
    """

    Value: Optional[OpsItemDataValueString] = None
    Type: Optional[OpsItemDataType] = None


class OpsItemEventFilterKey(Enum):
    OpsItemId = 'OpsItemId'


class OpsItemEventFilterOperator(Enum):
    Equal = 'Equal'


class OpsItemEventFilterValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=15, min_length=1, regex='^(oi)-[0-9a-f]{12}$')
    ]


class OpsItemIdentity(BaseModel):
    """
    Information about the user or resource that created an OpsItem event.
    """

    Arn: Optional[String] = None


class OpsItemFilterKey(Enum):
    Status = 'Status'
    CreatedBy = 'CreatedBy'
    Source = 'Source'
    Priority = 'Priority'
    Title = 'Title'
    OpsItemId = 'OpsItemId'
    CreatedTime = 'CreatedTime'
    LastModifiedTime = 'LastModifiedTime'
    ActualStartTime = 'ActualStartTime'
    ActualEndTime = 'ActualEndTime'
    PlannedStartTime = 'PlannedStartTime'
    PlannedEndTime = 'PlannedEndTime'
    OperationalData = 'OperationalData'
    OperationalDataKey = 'OperationalDataKey'
    OperationalDataValue = 'OperationalDataValue'
    ResourceId = 'ResourceId'
    AutomationId = 'AutomationId'
    Category = 'Category'
    Severity = 'Severity'
    OpsItemType = 'OpsItemType'
    ChangeRequestByRequesterArn = 'ChangeRequestByRequesterArn'
    ChangeRequestByRequesterName = 'ChangeRequestByRequesterName'
    ChangeRequestByApproverArn = 'ChangeRequestByApproverArn'
    ChangeRequestByApproverName = 'ChangeRequestByApproverName'
    ChangeRequestByTemplate = 'ChangeRequestByTemplate'
    ChangeRequestByTargetsResourceGroup = 'ChangeRequestByTargetsResourceGroup'
    InsightByType = 'InsightByType'


class OpsItemFilterOperator(Enum):
    Equal = 'Equal'
    Contains = 'Contains'
    GreaterThan = 'GreaterThan'
    LessThan = 'LessThan'


class OpsItemFilterValue(Account):
    pass


class OpsItemNotification(OpsItemIdentity):
    """
    A notification about the OpsItem.
    """

    pass


class OpsItemOpsDataKeysList(StringList):
    pass


class OpsItemRelatedItemSummary(BaseModel):
    """
    Summary information about related-item resources for an OpsItem.
    """

    OpsItemId: Optional[OpsItemId] = None
    AssociationId: Optional[OpsItemRelatedItemAssociationId] = None
    ResourceType: Optional[OpsItemRelatedItemAssociationResourceType] = None
    AssociationType: Optional[OpsItemRelatedItemAssociationType] = None
    ResourceUri: Optional[OpsItemRelatedItemAssociationResourceUri] = None
    CreatedBy: Optional[OpsItemIdentity] = None
    CreatedTime: Optional[DateTime] = None
    LastModifiedBy: Optional[OpsItemIdentity] = None
    LastModifiedTime: Optional[DateTime] = None


class OpsItemRelatedItemsFilterKey(Enum):
    ResourceType = 'ResourceType'
    AssociationId = 'AssociationId'
    ResourceUri = 'ResourceUri'


class OpsItemRelatedItemsFilterValue(Account):
    pass


class OpsItemSummary(BaseModel):
    """
    A count of OpsItems.
    """

    CreatedBy: Optional[String] = None
    CreatedTime: Optional[DateTime] = None
    LastModifiedBy: Optional[String] = None
    LastModifiedTime: Optional[DateTime] = None
    Priority: Optional[OpsItemPriority] = None
    Source: Optional[OpsItemSource] = None
    Status: Optional[OpsItemStatus] = None
    OpsItemId: Optional[OpsItemId] = None
    Title: Optional[OpsItemTitle] = None
    OperationalData: Optional[OpsItemOperationalData] = None
    Category: Optional[OpsItemCategory] = None
    Severity: Optional[OpsItemSeverity] = None
    OpsItemType: Optional[OpsItemType] = None
    ActualStartTime: Optional[DateTime] = None
    ActualEndTime: Optional[DateTime] = None
    PlannedStartTime: Optional[DateTime] = None
    PlannedEndTime: Optional[DateTime] = None


class OpsMetadata(BaseModel):
    """
    Operational metadata for an application in Application Manager.
    """

    ResourceId: Optional[OpsMetadataResourceId] = None
    OpsMetadataArn: Optional[OpsMetadataArn] = None
    LastModifiedDate: Optional[DateTime] = None
    LastModifiedUser: Optional[String] = None
    CreationDate: Optional[DateTime] = None


class OpsMetadataFilterKey(OpsItemSource):
    pass


class OpsMetadataFilterValue(StatusMessage):
    pass


class OpsResultAttribute(BaseModel):
    """
    The OpsItem data type to return.
    """

    TypeName: OpsDataTypeName


class OutputSourceId(AutomationExecutionId):
    pass


class OutputSourceType(Account):
    pass


class PSParameterSelector(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0)]


class PSParameterValue(MaintenanceWindowExecutionTaskInvocationParameters):
    pass


class ParameterType(Enum):
    String = 'String'
    StringList = 'StringList'
    SecureString = 'SecureString'


class ParameterDataType(PSParameterSelector):
    pass


class ParameterDescription(AllowedPattern):
    pass


class ParameterKeyId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^([a-zA-Z0-9:/_-]+)$')
    ]


class ParameterTier(Enum):
    Standard = 'Standard'
    Advanced = 'Advanced'
    Intelligent_Tiering = 'Intelligent-Tiering'


class ParameterInlinePolicy(BaseModel):
    """
    One or more policies assigned to a parameter.
    """

    PolicyText: Optional[String] = None
    PolicyType: Optional[String] = None
    PolicyStatus: Optional[String] = None


class ParameterLabel(AssociationResourceId):
    pass


class ParameterName(Account):
    pass


class ParameterPolicies(MetadataValueString):
    pass


class ParameterStringFilterKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=132,
            min_length=1,
            regex='tag:.+|Name|Type|KeyId|Path|Label|Tier|DataType',
        ),
    ]


class ParameterStringQueryOption(BaseModel):
    __root__: Annotated[str, Field(max_length=10, min_length=1)]


class ParameterStringFilterValue(StatusMessage):
    pass


class ParameterValue(Account):
    pass


class ParameterValueList(BaseModel):
    __root__: List[ParameterValue]


class ParametersFilterKey(Enum):
    Name = 'Name'
    Type = 'Type'
    KeyId = 'KeyId'


class ParametersFilterValue(StatusMessage):
    pass


class PatchId(AssociationResourceId):
    pass


class PatchTitle(Account):
    pass


class PatchDescription(Account):
    pass


class PatchContentUrl(Account):
    pass


class PatchVendor(Account):
    pass


class PatchProductFamily(Account):
    pass


class PatchProduct(Account):
    pass


class PatchClassification(Account):
    pass


class PatchMsrcSeverity(Account):
    pass


class PatchKbNumber(Account):
    pass


class PatchMsrcNumber(Account):
    pass


class PatchLanguage(Account):
    pass


class PatchName(Account):
    pass


class PatchEpoch(InstanceCount):
    pass


class PatchVersion(Account):
    pass


class PatchRelease(Account):
    pass


class PatchArch(Account):
    pass


class PatchSeverity(Account):
    pass


class PatchRepository(Account):
    pass


class PatchAdvisoryId(Account):
    pass


class PatchBaselineIdentity(BaseModel):
    """
    Defines the basic information about a patch baseline.
    """

    BaselineId: Optional[BaselineId] = None
    BaselineName: Optional[BaselineName] = None
    OperatingSystem: Optional[OperatingSystem] = None
    BaselineDescription: Optional[BaselineDescription] = None
    DefaultBaseline: Optional[DefaultBaseline] = None


class PatchBugzillaId(Account):
    pass


class PatchCVEId(Account):
    pass


class PatchCVEIds(Account):
    pass


class PatchComplianceDataState(Enum):
    INSTALLED = 'INSTALLED'
    INSTALLED_OTHER = 'INSTALLED_OTHER'
    INSTALLED_PENDING_REBOOT = 'INSTALLED_PENDING_REBOOT'
    INSTALLED_REJECTED = 'INSTALLED_REJECTED'
    MISSING = 'MISSING'
    NOT_APPLICABLE = 'NOT_APPLICABLE'
    FAILED = 'FAILED'


class PatchComplianceData(BaseModel):
    """
    Information about the state of a patch on a particular instance as it relates to the patch baseline used to patch the instance.
    """

    Title: PatchTitle
    KBId: PatchKbNumber
    Classification: PatchClassification
    Severity: PatchSeverity
    State: PatchComplianceDataState
    InstalledTime: DateTime
    CVEIds: Optional[PatchCVEIds] = None


class PatchDeploymentStatus(Enum):
    APPROVED = 'APPROVED'
    PENDING_APPROVAL = 'PENDING_APPROVAL'
    EXPLICIT_APPROVED = 'EXPLICIT_APPROVED'
    EXPLICIT_REJECTED = 'EXPLICIT_REJECTED'


class PatchFilterKey(Enum):
    ARCH = 'ARCH'
    ADVISORY_ID = 'ADVISORY_ID'
    BUGZILLA_ID = 'BUGZILLA_ID'
    PATCH_SET = 'PATCH_SET'
    PRODUCT = 'PRODUCT'
    PRODUCT_FAMILY = 'PRODUCT_FAMILY'
    CLASSIFICATION = 'CLASSIFICATION'
    CVE_ID = 'CVE_ID'
    EPOCH = 'EPOCH'
    MSRC_SEVERITY = 'MSRC_SEVERITY'
    NAME = 'NAME'
    PATCH_ID = 'PATCH_ID'
    SECTION = 'SECTION'
    PRIORITY = 'PRIORITY'
    REPOSITORY = 'REPOSITORY'
    RELEASE = 'RELEASE'
    SEVERITY = 'SEVERITY'
    SECURITY = 'SECURITY'
    VERSION = 'VERSION'


class PatchFilterValue(AttributeName):
    pass


class PatchGroupPatchBaselineMapping(BaseModel):
    """
    The mapping between a patch group and the patch baseline the patch group is registered with.
    """

    PatchGroup: Optional[PatchGroup] = None
    BaselineIdentity: Optional[PatchBaselineIdentity] = None


class PatchOrchestratorFilterKey(CommandFilterValue):
    pass


class PatchOrchestratorFilterValue(ScheduleExpression):
    pass


class PatchPropertyEntry(ComplianceItemDetails):
    pass


class PatchStringDateTime(ParameterStringQueryOption):
    pass


class PatchSourceName(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_\\-.]{3,50}$')]


class PatchSourceConfiguration(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1024, min_length=1)]


class PatchSourceProduct(CommandFilterValue):
    pass


class PutInventoryMessage(Account):
    pass


class Region1(Account):
    pass


class Regions(BaseModel):
    __root__: Annotated[List[Region1], Field(max_items=50, min_items=1)]


class RelatedOpsItem(BaseModel):
    """
    An OpsItems that shares something in common with the current OpsItem. For example, related OpsItems can include OpsItems with similar error messages, impacted resources, or statuses for the impacted resource.
    """

    OpsItemId: String


class TargetParameterList(ParameterValueList):
    pass


class ResourceDataSyncAWSKMSKeyARN(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1, regex='arn:.*')]


class ResourceDataSyncOrganizationSourceType(AttributeName):
    pass


class ResourceDataSyncCreatedTime(ExpirationDate):
    pass


class ResourceDataSyncDestinationDataSharingType(AttributeName):
    pass


class ResourceDataSyncDestinationDataSharing(BaseModel):
    """
    Synchronize Amazon Web Services Systems Manager Inventory data from multiple Amazon Web Services accounts defined in Organizations to a centralized Amazon S3 bucket. Data is synchronized to individual key prefixes in the central bucket. Each key prefix represents a different Amazon Web Services account ID.
    """

    DestinationDataSharingType: Optional[
        ResourceDataSyncDestinationDataSharingType
    ] = None


class ResourceDataSyncEnableAllOpsDataSources(Boolean):
    pass


class ResourceDataSyncIncludeFutureRegions(Boolean):
    pass


class ResourceDataSyncLastModifiedTime(ExpirationDate):
    pass


class ResourceDataSyncOrganizationalUnitId(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=128, min_length=1, regex='^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$'),
    ]


class ResourceDataSyncOrganizationalUnit(BaseModel):
    """
    The Organizations organizational unit data source for the sync.
    """

    OrganizationalUnitId: Optional[ResourceDataSyncOrganizationalUnitId] = None


class ResourceDataSyncS3BucketName(PSParameterName):
    pass


class ResourceDataSyncS3Prefix(ScheduleExpression):
    pass


class ResourceDataSyncS3Format(Enum):
    JsonSerDe = 'JsonSerDe'


class ResourceDataSyncS3Region(AttributeName):
    pass


class ResourceDataSyncSourceType(AttributeName):
    pass


class ResourceDataSyncSourceRegion(AttributeName):
    pass


class ResourceDataSyncState(AttributeName):
    pass


class ResultAttribute(BaseModel):
    """
    The inventory item result attribute.
    """

    TypeName: InventoryItemTypeName


class SessionId(BaseModel):
    __root__: Annotated[str, Field(max_length=96, min_length=1)]


class TokenValue(BaseModel):
    __root__: Annotated[str, Field(max_length=300, min_length=0)]


class StreamUrl(Account):
    pass


class ReviewInformation(BaseModel):
    """
    Information about the result of a document review request.
    """

    ReviewedTime: Optional[DateTime] = None
    Status: Optional[ReviewStatus] = None
    Reviewer: Optional[Reviewer] = None


class ScheduledWindowExecution(BaseModel):
    """
    Information about a scheduled execution for a maintenance window.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    Name: Optional[MaintenanceWindowName] = None
    ExecutionTime: Optional[MaintenanceWindowStringDateTime] = None


class SignalType(Enum):
    Approve = 'Approve'
    Reject = 'Reject'
    StartStep = 'StartStep'
    StopStep = 'StopStep'
    Resume = 'Resume'


class ServiceSettingValue(MetadataValueString):
    pass


class SessionStatus(Enum):
    Connected = 'Connected'
    Connecting = 'Connecting'
    Disconnected = 'Disconnected'
    Terminated = 'Terminated'
    Terminating = 'Terminating'
    Failed = 'Failed'


class SessionOwner(ScheduleExpression):
    pass


class SessionDetails(StatusMessage):
    pass


class SessionFilterKey(Enum):
    InvokedAfter = 'InvokedAfter'
    InvokedBefore = 'InvokedBefore'
    Target = 'Target'
    Owner = 'Owner'
    Status = 'Status'
    SessionId = 'SessionId'


class SessionFilterValue(SessionTarget):
    pass


class SessionFilter(BaseModel):
    """
    Describes a filter for Session Manager information.
    """

    key: SessionFilterKey
    value: SessionFilterValue


class SessionManagerCloudWatchOutputUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=2083, min_length=1)]


class SessionManagerS3OutputUrl(SessionManagerCloudWatchOutputUrl):
    pass


class SessionManagerParameterName(ComputerName):
    pass


class SessionManagerParameterValue(BaseModel):
    __root__: Annotated[str, Field(max_length=65535, min_length=1)]


class SessionManagerParameterValueList(BaseModel):
    __root__: List[SessionManagerParameterValue]


class SessionManagerParameters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TargetLocation(BaseModel):
    """
    The combination of Amazon Web Services Regions and Amazon Web Services accounts targeted by the current Automation execution.
    """

    Accounts: Optional[Accounts] = None
    Regions: Optional[Regions] = None
    TargetLocationMaxConcurrency: Optional[MaxConcurrency] = None
    TargetLocationMaxErrors: Optional[MaxErrors] = None
    ExecutionRoleName: Optional[ExecutionRoleName] = None


class StepExecutionFilterKey(Enum):
    StartTimeBefore = 'StartTimeBefore'
    StartTimeAfter = 'StartTimeAfter'
    StepExecutionStatus = 'StepExecutionStatus'
    StepExecutionId = 'StepExecutionId'
    StepName = 'StepName'
    Action = 'Action'


class StepExecutionFilterValue(AutomationExecutionFilterValue):
    pass


class StopType(Enum):
    Complete = 'Complete'
    Cancel = 'Cancel'


class TagValue(PatchGroup):
    pass


class Tag(BaseModel):
    """
    Metadata that you assign to your Amazon Web Services resources. Tags enable you to categorize your resources in different ways, for example, by purpose, owner, or environment. In Amazon Web Services Systems Manager, you can apply tags to Systems Manager documents (SSM documents), managed instances, maintenance windows, parameters, patch baselines, OpsItems, and OpsMetadata.
    """

    Key: TagKey
    Value: TagValue


class TargetKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=163,
            min_length=1,
            regex='^[\\p{L}\\p{Z}\\p{N}_.:/=\\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name',
        ),
    ]


class TargetMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TargetMapKey(AutomationTargetParameterName):
    pass


class TargetMapValue(AutomationTargetParameterName):
    pass


class TargetValue(Account):
    pass


class ValidNextStep(SessionManagerParameterValue):
    pass


class AssociateOpsItemRelatedItemResponse(BaseModel):
    AssociationId: Optional[OpsItemRelatedItemAssociationId] = None


class AssociateOpsItemRelatedItemRequest(BaseModel):
    OpsItemId: OpsItemId
    AssociationType: OpsItemRelatedItemAssociationType
    ResourceType: OpsItemRelatedItemAssociationResourceType
    ResourceUri: OpsItemRelatedItemAssociationResourceUri


class CancelCommandRequest(BaseModel):
    """
    <p/>
    """

    CommandId: CommandId
    InstanceIds: Optional[InstanceIdList] = None


class CancelMaintenanceWindowExecutionResult(BaseModel):
    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None


class CancelMaintenanceWindowExecutionRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId


class CreateActivationResult(BaseModel):
    ActivationId: Optional[ActivationId] = None
    ActivationCode: Optional[ActivationCode] = None


class CreateMaintenanceWindowResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None


class CreateOpsItemResponse(BaseModel):
    OpsItemId: Optional[String] = None


class CreateOpsMetadataResult(BaseModel):
    OpsMetadataArn: Optional[OpsMetadataArn] = None


class CreatePatchBaselineResult(BaseModel):
    BaselineId: Optional[BaselineId] = None


class DeleteActivationRequest(BaseModel):
    ActivationId: ActivationId


class DeleteAssociationRequest(BaseModel):
    Name: Optional[DocumentARN] = None
    InstanceId: Optional[InstanceId] = None
    AssociationId: Optional[AssociationId] = None


class DeleteDocumentRequest(BaseModel):
    Name: DocumentName
    DocumentVersion: Optional[DocumentVersion] = None
    VersionName: Optional[DocumentVersionName] = None
    Force: Optional[Boolean] = None


class DeleteInventoryRequest(BaseModel):
    TypeName: InventoryItemTypeName
    SchemaDeleteOption: Optional[InventorySchemaDeleteOption] = None
    DryRun: Optional[DryRun] = None
    ClientToken: Optional[UUID] = None


class DeleteMaintenanceWindowResult(CreateMaintenanceWindowResult):
    pass


class DeleteMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId


class DeleteOpsMetadataRequest(BaseModel):
    OpsMetadataArn: OpsMetadataArn


class DeleteParameterRequest(BaseModel):
    Name: PSParameterName


class DeleteParametersResult(BaseModel):
    DeletedParameters: Optional[ParameterNameList] = None
    InvalidParameters: Optional[ParameterNameList] = None


class DeleteParametersRequest(BaseModel):
    Names: ParameterNameList


class DeletePatchBaselineResult(CreatePatchBaselineResult):
    pass


class DeletePatchBaselineRequest(BaseModel):
    BaselineId: BaselineId


class DeleteResourceDataSyncRequest(BaseModel):
    SyncName: ResourceDataSyncName
    SyncType: Optional[ResourceDataSyncType] = None


class DeregisterManagedInstanceRequest(BaseModel):
    InstanceId: ManagedInstanceId


class DeregisterPatchBaselineForPatchGroupResult(BaseModel):
    BaselineId: Optional[BaselineId] = None
    PatchGroup: Optional[PatchGroup] = None


class DeregisterPatchBaselineForPatchGroupRequest(BaseModel):
    BaselineId: BaselineId
    PatchGroup: PatchGroup


class DeregisterTargetFromMaintenanceWindowResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    WindowTargetId: Optional[MaintenanceWindowTargetId] = None


class DeregisterTargetFromMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId
    WindowTargetId: MaintenanceWindowTargetId
    Safe: Optional[Boolean] = None


class DeregisterTaskFromMaintenanceWindowResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    WindowTaskId: Optional[MaintenanceWindowTaskId] = None


class DeregisterTaskFromMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId
    WindowTaskId: MaintenanceWindowTaskId


class DescribeActivationsRequest(BaseModel):
    Filters: Optional[DescribeActivationsFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeAssociationRequest(BaseModel):
    Name: Optional[DocumentARN] = None
    InstanceId: Optional[InstanceId] = None
    AssociationId: Optional[AssociationId] = None
    AssociationVersion: Optional[AssociationVersion] = None


class DescribeAssociationExecutionTargetsRequest(BaseModel):
    AssociationId: AssociationId
    ExecutionId: AssociationExecutionId
    Filters: Optional[AssociationExecutionTargetsFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeAssociationExecutionsResult(BaseModel):
    AssociationExecutions: Optional[AssociationExecutionsList] = None
    NextToken: Optional[NextToken] = None


class DescribeAssociationExecutionsRequest(BaseModel):
    AssociationId: AssociationId
    Filters: Optional[AssociationExecutionFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeDocumentRequest(BaseModel):
    Name: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    VersionName: Optional[DocumentVersionName] = None


class DescribeDocumentPermissionResponse(BaseModel):
    AccountIds: Optional[AccountIdList] = None
    AccountSharingInfoList: Optional[AccountSharingInfoList] = None
    NextToken: Optional[NextToken] = None


class DescribeDocumentPermissionRequest(BaseModel):
    Name: DocumentName
    PermissionType: DocumentPermissionType
    MaxResults: Optional[DocumentPermissionMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeEffectiveInstanceAssociationsRequest(BaseModel):
    InstanceId: InstanceId
    MaxResults: Optional[EffectiveInstanceAssociationMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeEffectivePatchesForPatchBaselineRequest(BaseModel):
    BaselineId: BaselineId
    MaxResults: Optional[PatchBaselineMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeInstanceAssociationsStatusRequest(BaseModel):
    InstanceId: InstanceId
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeInstancePatchStatesRequest(BaseModel):
    InstanceIds: InstanceIdList
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[PatchComplianceMaxResults] = None


class DescribeInventoryDeletionsRequest(BaseModel):
    DeletionId: Optional[UUID] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class DescribePatchGroupStateResult(BaseModel):
    Instances: Optional[Integer] = None
    InstancesWithInstalledPatches: Optional[Integer] = None
    InstancesWithInstalledOtherPatches: Optional[Integer] = None
    InstancesWithInstalledPendingRebootPatches: Optional[InstancesCount] = None
    InstancesWithInstalledRejectedPatches: Optional[InstancesCount] = None
    InstancesWithMissingPatches: Optional[Integer] = None
    InstancesWithFailedPatches: Optional[Integer] = None
    InstancesWithNotApplicablePatches: Optional[Integer] = None
    InstancesWithUnreportedNotApplicablePatches: Optional[Integer] = None
    InstancesWithCriticalNonCompliantPatches: Optional[InstancesCount] = None
    InstancesWithSecurityNonCompliantPatches: Optional[InstancesCount] = None
    InstancesWithOtherNonCompliantPatches: Optional[InstancesCount] = None


class DescribePatchGroupStateRequest(BaseModel):
    PatchGroup: PatchGroup


class DescribePatchPropertiesRequest(BaseModel):
    OperatingSystem: OperatingSystem
    Property: PatchProperty
    PatchSet: Optional[PatchSet] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DisassociateOpsItemRelatedItemRequest(BaseModel):
    OpsItemId: OpsItemId
    AssociationId: OpsItemRelatedItemAssociationId


class GetAutomationExecutionRequest(BaseModel):
    AutomationExecutionId: AutomationExecutionId


class GetCalendarStateResponse(BaseModel):
    State: Optional[CalendarState] = None
    AtTime: Optional[ISO8601String] = None
    NextTransitionTime: Optional[ISO8601String] = None


class GetCommandInvocationResult(BaseModel):
    CommandId: Optional[CommandId] = None
    InstanceId: Optional[InstanceId] = None
    Comment: Optional[Comment] = None
    DocumentName: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    PluginName: Optional[CommandPluginName] = None
    ResponseCode: Optional[ResponseCode] = None
    ExecutionStartDateTime: Optional[StringDateTime] = None
    ExecutionElapsedTime: Optional[StringDateTime] = None
    ExecutionEndDateTime: Optional[StringDateTime] = None
    Status: Optional[CommandInvocationStatus] = None
    StatusDetails: Optional[StatusDetails] = None
    StandardOutputContent: Optional[StandardOutputContent] = None
    StandardOutputUrl: Optional[Url] = None
    StandardErrorContent: Optional[StandardErrorContent] = None
    StandardErrorUrl: Optional[Url] = None
    CloudWatchOutputConfig: Optional[CloudWatchOutputConfig] = None


class GetCommandInvocationRequest(BaseModel):
    CommandId: CommandId
    InstanceId: InstanceId
    PluginName: Optional[CommandPluginName] = None


class GetConnectionStatusResponse(BaseModel):
    Target: Optional[SessionTarget] = None
    Status: Optional[ConnectionStatus] = None


class GetConnectionStatusRequest(BaseModel):
    Target: SessionTarget


class GetDefaultPatchBaselineResult(BaseModel):
    BaselineId: Optional[BaselineId] = None
    OperatingSystem: Optional[OperatingSystem] = None


class GetDefaultPatchBaselineRequest(BaseModel):
    OperatingSystem: Optional[OperatingSystem] = None


class GetDeployablePatchSnapshotForInstanceResult(BaseModel):
    InstanceId: Optional[InstanceId] = None
    SnapshotId: Optional[SnapshotId] = None
    SnapshotDownloadUrl: Optional[SnapshotDownloadUrl] = None
    Product: Optional[Product] = None


class GetDocumentRequest(BaseModel):
    Name: DocumentARN
    VersionName: Optional[DocumentVersionName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    DocumentFormat: Optional[DocumentFormat] = None


class GetInventorySchemaRequest(BaseModel):
    TypeName: Optional[InventoryItemTypeNameFilter] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[GetInventorySchemaMaxResults] = None
    Aggregator: Optional[AggregatorSchemaOnly] = None
    SubType: Optional[IsSubTypeSchema] = None


class GetMaintenanceWindowResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    StartDate: Optional[MaintenanceWindowStringDateTime] = None
    EndDate: Optional[MaintenanceWindowStringDateTime] = None
    Schedule: Optional[MaintenanceWindowSchedule] = None
    ScheduleTimezone: Optional[MaintenanceWindowTimezone] = None
    ScheduleOffset: Optional[MaintenanceWindowOffset] = None
    NextExecutionTime: Optional[MaintenanceWindowStringDateTime] = None
    Duration: Optional[MaintenanceWindowDurationHours] = None
    Cutoff: Optional[MaintenanceWindowCutoff] = None
    AllowUnassociatedTargets: Optional[MaintenanceWindowAllowUnassociatedTargets] = None
    Enabled: Optional[MaintenanceWindowEnabled] = None
    CreatedDate: Optional[DateTime] = None
    ModifiedDate: Optional[DateTime] = None


class GetMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId


class GetMaintenanceWindowExecutionResult(BaseModel):
    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None
    TaskIds: Optional[MaintenanceWindowExecutionTaskIdList] = None
    Status: Optional[MaintenanceWindowExecutionStatus] = None
    StatusDetails: Optional[MaintenanceWindowExecutionStatusDetails] = None
    StartTime: Optional[DateTime] = None
    EndTime: Optional[DateTime] = None


class GetMaintenanceWindowExecutionRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId


class GetMaintenanceWindowExecutionTaskRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId
    TaskId: MaintenanceWindowExecutionTaskId


class GetMaintenanceWindowExecutionTaskInvocationResult(
    MaintenanceWindowExecutionTaskInvocationIdentity
):
    pass


class GetMaintenanceWindowExecutionTaskInvocationRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId
    TaskId: MaintenanceWindowExecutionTaskId
    InvocationId: MaintenanceWindowExecutionTaskInvocationId


class GetMaintenanceWindowTaskRequest(BaseModel):
    WindowId: MaintenanceWindowId
    WindowTaskId: MaintenanceWindowTaskId


class GetOpsItemRequest(BaseModel):
    OpsItemId: OpsItemId


class GetOpsMetadataResult(BaseModel):
    ResourceId: Optional[OpsMetadataResourceId] = None
    Metadata: Optional[MetadataMap] = None
    NextToken: Optional[NextToken] = None


class GetOpsMetadataRequest(BaseModel):
    OpsMetadataArn: OpsMetadataArn
    MaxResults: Optional[GetOpsMetadataMaxResults] = None
    NextToken: Optional[NextToken] = None


class GetParameterRequest(BaseModel):
    Name: PSParameterName
    WithDecryption: Optional[Boolean] = None


class GetParameterHistoryRequest(BaseModel):
    Name: PSParameterName
    WithDecryption: Optional[Boolean] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class GetParametersRequest(BaseModel):
    Names: ParameterNameList
    WithDecryption: Optional[Boolean] = None


class GetPatchBaselineRequest(BaseModel):
    BaselineId: BaselineId


class GetPatchBaselineForPatchGroupResult(BaseModel):
    BaselineId: Optional[BaselineId] = None
    PatchGroup: Optional[PatchGroup] = None
    OperatingSystem: Optional[OperatingSystem] = None


class GetPatchBaselineForPatchGroupRequest(BaseModel):
    PatchGroup: PatchGroup
    OperatingSystem: Optional[OperatingSystem] = None


class GetServiceSettingRequest(BaseModel):
    """
    The request body of the GetServiceSetting API operation.
    """

    SettingId: ServiceSettingId


class ListAssociationVersionsRequest(BaseModel):
    AssociationId: AssociationId
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListAssociationsRequest(BaseModel):
    AssociationFilterList: Optional[AssociationFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListCommandInvocationsRequest(BaseModel):
    CommandId: Optional[CommandId] = None
    InstanceId: Optional[InstanceId] = None
    MaxResults: Optional[CommandMaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[CommandFilterList] = None
    Details: Optional[Boolean] = None


class ListCommandsRequest(BaseModel):
    CommandId: Optional[CommandId] = None
    InstanceId: Optional[InstanceId] = None
    MaxResults: Optional[CommandMaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[CommandFilterList] = None


class ListComplianceItemsResult(BaseModel):
    ComplianceItems: Optional[ComplianceItemList] = None
    NextToken: Optional[NextToken] = None


class ListComplianceItemsRequest(BaseModel):
    Filters: Optional[ComplianceStringFilterList] = None
    ResourceIds: Optional[ComplianceResourceIdList] = None
    ResourceTypes: Optional[ComplianceResourceTypeList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListComplianceSummariesRequest(BaseModel):
    Filters: Optional[ComplianceStringFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListDocumentMetadataHistoryRequest(BaseModel):
    Name: DocumentName
    DocumentVersion: Optional[DocumentVersion] = None
    Metadata: DocumentMetadataEnum
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListDocumentVersionsResult(BaseModel):
    DocumentVersions: Optional[DocumentVersionList] = None
    NextToken: Optional[NextToken] = None


class ListDocumentVersionsRequest(BaseModel):
    Name: DocumentARN
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListResourceComplianceSummariesRequest(BaseModel):
    Filters: Optional[ComplianceStringFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListResourceDataSyncRequest(BaseModel):
    SyncType: Optional[ResourceDataSyncType] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceType: ResourceTypeForTagging
    ResourceId: ResourceId


class ModifyDocumentPermissionRequest(BaseModel):
    Name: DocumentName
    PermissionType: DocumentPermissionType
    AccountIdsToAdd: Optional[AccountIdList] = None
    AccountIdsToRemove: Optional[AccountIdList] = None
    SharedDocumentVersion: Optional[SharedDocumentVersion] = None


class PutComplianceItemsRequest(BaseModel):
    ResourceId: ComplianceResourceId
    ResourceType: ComplianceResourceType
    ComplianceType: ComplianceTypeName
    ExecutionSummary: ComplianceExecutionSummary
    Items: ComplianceItemEntryList
    ItemContentHash: Optional[ComplianceItemContentHash] = None
    UploadType: Optional[ComplianceUploadType] = None


class PutInventoryResult(BaseModel):
    Message: Optional[PutInventoryMessage] = None


class PutParameterResult(BaseModel):
    Version: Optional[PSParameterVersion] = None
    Tier: Optional[ParameterTier] = None


class RegisterDefaultPatchBaselineResult(CreatePatchBaselineResult):
    pass


class RegisterDefaultPatchBaselineRequest(BaseModel):
    BaselineId: BaselineId


class RegisterPatchBaselineForPatchGroupResult(
    DeregisterPatchBaselineForPatchGroupResult
):
    pass


class RegisterPatchBaselineForPatchGroupRequest(BaseModel):
    BaselineId: BaselineId
    PatchGroup: PatchGroup


class RegisterTargetWithMaintenanceWindowResult(BaseModel):
    WindowTargetId: Optional[MaintenanceWindowTargetId] = None


class RegisterTaskWithMaintenanceWindowResult(BaseModel):
    WindowTaskId: Optional[MaintenanceWindowTaskId] = None


class RemoveTagsFromResourceRequest(BaseModel):
    ResourceType: ResourceTypeForTagging
    ResourceId: ResourceId
    TagKeys: KeyList


class ResetServiceSettingRequest(BaseModel):
    """
    The request body of the ResetServiceSetting API operation.
    """

    SettingId: ServiceSettingId


class ResumeSessionResponse(BaseModel):
    SessionId: Optional[SessionId] = None
    TokenValue: Optional[TokenValue] = None
    StreamUrl: Optional[StreamUrl] = None


class ResumeSessionRequest(BaseModel):
    SessionId: SessionId


class SendAutomationSignalRequest(BaseModel):
    AutomationExecutionId: AutomationExecutionId
    SignalType: SignalType
    Payload: Optional[AutomationParameterMap] = None


class StartAssociationsOnceRequest(BaseModel):
    AssociationIds: AssociationIdList


class StartAutomationExecutionResult(BaseModel):
    AutomationExecutionId: Optional[AutomationExecutionId] = None


class StartChangeRequestExecutionResult(StartAutomationExecutionResult):
    pass


class StartSessionResponse(ResumeSessionResponse):
    pass


class StartSessionRequest(BaseModel):
    Target: SessionTarget
    DocumentName: Optional[DocumentARN] = None
    Parameters: Optional[SessionManagerParameters] = None


class StopAutomationExecutionRequest(BaseModel):
    AutomationExecutionId: AutomationExecutionId
    Type: Optional[StopType] = None


class TerminateSessionResponse(BaseModel):
    SessionId: Optional[SessionId] = None


class TerminateSessionRequest(BaseModel):
    SessionId: SessionId


class UpdateDocumentDefaultVersionResult(BaseModel):
    Description: Optional[DocumentDefaultVersionDescription] = None


class UpdateDocumentDefaultVersionRequest(BaseModel):
    Name: DocumentName
    DocumentVersion: DocumentVersionNumber


class UpdateMaintenanceWindowResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    StartDate: Optional[MaintenanceWindowStringDateTime] = None
    EndDate: Optional[MaintenanceWindowStringDateTime] = None
    Schedule: Optional[MaintenanceWindowSchedule] = None
    ScheduleTimezone: Optional[MaintenanceWindowTimezone] = None
    ScheduleOffset: Optional[MaintenanceWindowOffset] = None
    Duration: Optional[MaintenanceWindowDurationHours] = None
    Cutoff: Optional[MaintenanceWindowCutoff] = None
    AllowUnassociatedTargets: Optional[MaintenanceWindowAllowUnassociatedTargets] = None
    Enabled: Optional[MaintenanceWindowEnabled] = None


class UpdateMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    StartDate: Optional[MaintenanceWindowStringDateTime] = None
    EndDate: Optional[MaintenanceWindowStringDateTime] = None
    Schedule: Optional[MaintenanceWindowSchedule] = None
    ScheduleTimezone: Optional[MaintenanceWindowTimezone] = None
    ScheduleOffset: Optional[MaintenanceWindowOffset] = None
    Duration: Optional[MaintenanceWindowDurationHours] = None
    Cutoff: Optional[MaintenanceWindowCutoff] = None
    AllowUnassociatedTargets: Optional[MaintenanceWindowAllowUnassociatedTargets] = None
    Enabled: Optional[MaintenanceWindowEnabled] = None
    Replace: Optional[Boolean] = None


class UpdateManagedInstanceRoleRequest(BaseModel):
    InstanceId: ManagedInstanceId
    IamRole: IamRole


class UpdateOpsMetadataResult(CreateOpsMetadataResult):
    pass


class UpdateOpsMetadataRequest(BaseModel):
    OpsMetadataArn: OpsMetadataArn
    MetadataToUpdate: Optional[MetadataMap] = None
    KeysToDelete: Optional[MetadataKeysToDeleteList] = None


class UpdateServiceSettingRequest(BaseModel):
    """
    The request body of the UpdateServiceSetting API operation.
    """

    SettingId: ServiceSettingId
    SettingValue: ServiceSettingValue


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=1000)]


class Activation(BaseModel):
    """
    An activation registers one or more on-premises servers or virtual machines (VMs) with Amazon Web Services so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with Amazon Web Services Systems Manager is called a managed instance.
    """

    ActivationId: Optional[ActivationId] = None
    Description: Optional[ActivationDescription] = None
    DefaultInstanceName: Optional[DefaultInstanceName] = None
    IamRole: Optional[IamRole] = None
    RegistrationLimit: Optional[RegistrationLimit] = None
    RegistrationsCount: Optional[RegistrationsCount] = None
    ExpirationDate: Optional[ExpirationDate] = None
    Expired: Optional[Boolean] = None
    CreatedDate: Optional[CreatedDate4] = None
    Tags: Optional[TagList] = None


class ActivationList(BaseModel):
    __root__: List[Activation]


class AssociationOverview(BaseModel):
    """
    Information about the association.
    """

    Status: Optional[StatusName] = None
    DetailedStatus: Optional[StatusName] = None
    AssociationStatusAggregatedCount: Optional[AssociationStatusAggregatedCount] = None


class AssociationStatus(BaseModel):
    """
    Describes an association status.
    """

    Date: DateTime
    Name: AssociationStatusName
    Message: StatusMessage
    AdditionalInfo: Optional[StatusAdditionalInfo] = None


class InstanceAssociationOutputLocation(BaseModel):
    """
    <p>An S3 bucket where you want to store the results of this request.</p> <p>For the minimal permissions required to enable Amazon S3 output for an association, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc.html">Creating associations</a> in the <i>Systems Manager User Guide</i>. </p>
    """

    S3Location: Optional[S3OutputLocation] = None


class CalendarNameOrARNList(BaseModel):
    __root__: List[CalendarNameOrARN]


class TargetLocations(BaseModel):
    __root__: Annotated[List[TargetLocation], Field(max_items=100, min_items=1)]


class OutputSource(BaseModel):
    """
    Information about the source where the association execution details are stored.
    """

    OutputSourceId: Optional[OutputSourceId] = None
    OutputSourceType: Optional[OutputSourceType] = None


class AssociationExecutionTarget(BaseModel):
    """
    Includes information about the specified association execution.
    """

    AssociationId: Optional[AssociationId] = None
    AssociationVersion: Optional[AssociationVersion] = None
    ExecutionId: Optional[AssociationExecutionId] = None
    ResourceId: Optional[AssociationResourceId] = None
    ResourceType: Optional[AssociationResourceType] = None
    Status: Optional[StatusName] = None
    DetailedStatus: Optional[StatusName] = None
    LastExecutionDate: Optional[DateTime] = None
    OutputSource: Optional[OutputSource] = None


class AssociationExecutionTargetsList(BaseModel):
    __root__: List[AssociationExecutionTarget]


class AttachmentsSourceValues(BaseModel):
    __root__: Annotated[List[AttachmentsSourceValue], Field(max_items=1, min_items=1)]


class AttachmentsSource(BaseModel):
    """
    Identifying information about a document attachment, including the file name and a key-value pair that identifies the location of an attachment to a document.
    """

    Key: Optional[AttachmentsSourceKey] = None
    Values: Optional[AttachmentsSourceValues] = None
    Name: Optional[AttachmentIdentifier] = None


class AttachmentsSourceList(BaseModel):
    __root__: Annotated[List[AttachmentsSource], Field(max_items=20, min_items=0)]


class TargetMaps(BaseModel):
    __root__: Annotated[List[TargetMap], Field(max_items=300, min_items=0)]


class ResolvedTargets(BaseModel):
    """
    Information about targets that resolved during the Automation execution.
    """

    ParameterValues: Optional[TargetParameterList] = None
    Truncated: Optional[Boolean] = None


class ProgressCounters(BaseModel):
    """
    An aggregate of step execution statuses displayed in the Amazon Web Services Systems Manager console for a multi-Region and multi-account Automation execution.
    """

    TotalSteps: Optional[Integer] = None
    SuccessSteps: Optional[Integer] = None
    FailedSteps: Optional[Integer] = None
    CancelledSteps: Optional[Integer] = None
    TimedOutSteps: Optional[Integer] = None


class AutomationExecutionFilterValueList(BaseModel):
    __root__: Annotated[
        List[AutomationExecutionFilterValue], Field(max_items=10, min_items=1)
    ]


class AutomationExecutionFilter(BaseModel):
    """
    A filter used to match specific automation executions. This is used to limit the scope of Automation execution information returned.
    """

    Key: AutomationExecutionFilterKey
    Values: AutomationExecutionFilterValueList


class AutomationExecutionFilterList(BaseModel):
    __root__: Annotated[
        List[AutomationExecutionFilter], Field(max_items=10, min_items=1)
    ]


class AutomationParameterValueList(BaseModel):
    __root__: Annotated[
        List[AutomationParameterValue], Field(max_items=50, min_items=0)
    ]


class PatchIdList(BaseModel):
    __root__: Annotated[List[PatchId], Field(max_items=50, min_items=0)]


class CommandPluginList(BaseModel):
    __root__: List[CommandPlugin]


class CompliantSummary(BaseModel):
    """
    A summary of resources that are compliant. The summary is organized according to the resource count for each compliance type.
    """

    CompliantCount: Optional[ComplianceSummaryCount] = None
    SeveritySummary: Optional[SeveritySummary] = None


class NonCompliantSummary(BaseModel):
    """
    A summary of resources that aren't compliant. The summary is organized according to resource type.
    """

    NonCompliantCount: Optional[ComplianceSummaryCount] = None
    SeveritySummary: Optional[SeveritySummary] = None


class ComplianceSummaryItem(BaseModel):
    """
    A summary of compliance information by compliance type.
    """

    ComplianceType: Optional[ComplianceTypeName] = None
    CompliantSummary: Optional[CompliantSummary] = None
    NonCompliantSummary: Optional[NonCompliantSummary] = None


class ComplianceSummaryItemList(BaseModel):
    __root__: List[ComplianceSummaryItem]


class DocumentRequiresList(BaseModel):
    __root__: Annotated[List[DocumentRequires], Field(min_items=1)]


class OpsItemNotifications(BaseModel):
    __root__: List[OpsItemNotification]


class RelatedOpsItems(BaseModel):
    __root__: List[RelatedOpsItem]


class ResourceDataSyncS3Destination(BaseModel):
    """
    Information about the target S3 bucket for the resource data sync.
    """

    BucketName: ResourceDataSyncS3BucketName
    Prefix: Optional[ResourceDataSyncS3Prefix] = None
    SyncFormat: ResourceDataSyncS3Format
    Region: ResourceDataSyncS3Region
    AWSKMSKeyARN: Optional[ResourceDataSyncAWSKMSKeyARN] = None
    DestinationDataSharing: Optional[ResourceDataSyncDestinationDataSharing] = None


class InstanceAssociationList(BaseModel):
    __root__: List[InstanceAssociation]


class InstanceAssociationStatusInfos(BaseModel):
    __root__: List[InstanceAssociationStatusInfo]


class InstanceInformationList(BaseModel):
    __root__: List[InstanceInformation]


class InstancePatchStatesList(BaseModel):
    __root__: Annotated[List[InstancePatchState], Field(max_items=5, min_items=1)]


class InstancePatchStateList(BaseModel):
    __root__: List[InstancePatchState]


class PatchComplianceDataList(BaseModel):
    __root__: List[PatchComplianceData]


class MaintenanceWindowExecutionTaskInvocationIdentityList(BaseModel):
    __root__: List[MaintenanceWindowExecutionTaskInvocationIdentity]


class MaintenanceWindowExecutionTaskIdentityList(BaseModel):
    __root__: List[MaintenanceWindowExecutionTaskIdentity]


class MaintenanceWindowExecutionList(BaseModel):
    __root__: List[MaintenanceWindowExecution]


class ScheduledWindowExecutionList(BaseModel):
    __root__: List[ScheduledWindowExecution]


class MaintenanceWindowsForTargetList(BaseModel):
    __root__: List[MaintenanceWindowIdentityForTarget]


class MaintenanceWindowIdentityList(BaseModel):
    __root__: List[MaintenanceWindowIdentity]


class OpsItemSummaries(BaseModel):
    __root__: List[OpsItemSummary]


class PatchBaselineIdentityList(BaseModel):
    __root__: List[PatchBaselineIdentity]


class PatchGroupPatchBaselineMappingList(BaseModel):
    __root__: List[PatchGroupPatchBaselineMapping]


class PatchPropertiesList(BaseModel):
    __root__: List[PatchPropertyEntry]


class SessionFilterList(BaseModel):
    __root__: Annotated[List[SessionFilter], Field(max_items=6, min_items=1)]


class DocumentParameterList(BaseModel):
    __root__: List[DocumentParameter]


class PlatformTypeList(BaseModel):
    __root__: List[PlatformType]


class ReviewInformationList(BaseModel):
    __root__: Annotated[List[ReviewInformation], Field(min_items=1)]


class DocumentIdentifier(BaseModel):
    """
    Describes the name of a SSM document.
    """

    Name: Optional[DocumentARN] = None
    CreatedDate: Optional[DateTime] = None
    DisplayName: Optional[DocumentDisplayName] = None
    Owner: Optional[DocumentOwner] = None
    VersionName: Optional[DocumentVersionName] = None
    PlatformTypes: Optional[PlatformTypeList] = None
    DocumentVersion: Optional[DocumentVersion] = None
    DocumentType: Optional[DocumentType] = None
    SchemaVersion: Optional[DocumentSchemaVersion] = None
    DocumentFormat: Optional[DocumentFormat] = None
    TargetType: Optional[TargetType] = None
    Tags: Optional[TagList] = None
    Requires: Optional[DocumentRequiresList] = None
    ReviewStatus: Optional[ReviewStatus] = None
    Author: Optional[DocumentAuthor] = None


class DocumentIdentifierList(BaseModel):
    __root__: List[DocumentIdentifier]


class DocumentKeyValuesFilterValues(BaseModel):
    __root__: List[DocumentKeyValuesFilterValue]


class DocumentKeyValuesFilter(BaseModel):
    """
    <p>One or more filters. Use a filter to return a more specific list of documents.</p> <p>For keys, you can specify one or more tags that have been applied to a document. </p> <p>You can also use Amazon Web Services-provided keys, some of which have specific allowed values. These keys and their associated values are as follows:</p> <dl> <dt>DocumentType</dt> <dd> <ul> <li> <p> <code>ApplicationConfiguration</code> </p> </li> <li> <p> <code>ApplicationConfigurationSchema</code> </p> </li> <li> <p> <code>Automation</code> </p> </li> <li> <p> <code>ChangeCalendar</code> </p> </li> <li> <p> <code>Command</code> </p> </li> <li> <p> <code>DeploymentStrategy</code> </p> </li> <li> <p> <code>Package</code> </p> </li> <li> <p> <code>Policy</code> </p> </li> <li> <p> <code>Session</code> </p> </li> </ul> </dd> <dt>Owner</dt> <dd> <p>Note that only one <code>Owner</code> can be specified in a request. For example: <code>Key=Owner,Values=Self</code>.</p> <ul> <li> <p> <code>Amazon</code> </p> </li> <li> <p> <code>Private</code> </p> </li> <li> <p> <code>Public</code> </p> </li> <li> <p> <code>Self</code> </p> </li> <li> <p> <code>ThirdParty</code> </p> </li> </ul> </dd> <dt>PlatformTypes</dt> <dd> <ul> <li> <p> <code>Linux</code> </p> </li> <li> <p> <code>Windows</code> </p> </li> </ul> </dd> </dl> <p> <code>Name</code> is another Amazon Web Services-provided key. If you use <code>Name</code> as a key, you can use a name prefix to return a list of documents. For example, in the Amazon Web Services CLI, to return a list of all documents that begin with <code>Te</code>, run the following command:</p> <p> <code>aws ssm list-documents --filters Key=Name,Values=Te</code> </p> <p>You can also use the <code>TargetType</code> Amazon Web Services-provided key. For a list of valid resource type values that can be used with this key, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html">Amazon Web Services resource and property types reference</a> in the <i>CloudFormation User Guide</i>.</p> <p>If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.</p> <p>To specify a custom key-value pair, use the format <code>Key=tag:tagName,Values=valueName</code>.</p> <p>For example, if you created a key called region and are using the Amazon Web Services CLI to call the <code>list-documents</code> command: </p> <p> <code>aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self</code> </p>
    """

    Key: Optional[DocumentKeyValuesFilterKey] = None
    Values: Optional[DocumentKeyValuesFilterValues] = None


class DocumentKeyValuesFilterList(BaseModel):
    __root__: Annotated[List[DocumentKeyValuesFilter], Field(max_items=6, min_items=0)]


class DocumentReviewCommentSource(BaseModel):
    """
    Information about comments added to a document review request.
    """

    Type: Optional[DocumentReviewCommentType] = None
    Content: Optional[DocumentReviewComment] = None


class DocumentReviewCommentList(BaseModel):
    __root__: Annotated[
        List[DocumentReviewCommentSource], Field(max_items=1, min_items=0)
    ]


class DocumentReviewerResponseSource(BaseModel):
    """
    Information about a reviewer's response to a document review request.
    """

    CreateTime: Optional[DateTime] = None
    UpdatedTime: Optional[DateTime] = None
    ReviewStatus: Optional[ReviewStatus] = None
    Comment: Optional[DocumentReviewCommentList] = None
    Reviewer: Optional[Reviewer] = None


class DocumentReviews(BaseModel):
    """
    Information about a document approval review.
    """

    Action: DocumentReviewAction
    Comment: Optional[DocumentReviewCommentList] = None


class PatchStatus(BaseModel):
    """
    Information about the approval status of a patch.
    """

    DeploymentStatus: Optional[PatchDeploymentStatus] = None
    ComplianceLevel: Optional[PatchComplianceLevel] = None
    ApprovalDate: Optional[DateTime] = None


class ResultAttributeList(BaseModel):
    __root__: Annotated[List[ResultAttribute], Field(max_items=1, min_items=1)]


class InventoryResultEntityList(BaseModel):
    __root__: List[InventoryResultEntity]


class InventoryItemSchemaResultList(BaseModel):
    __root__: List[InventoryItemSchema]


class MaintenanceWindowTaskParametersList(BaseModel):
    __root__: List[MaintenanceWindowTaskParameters]


class OpsItem(BaseModel):
    """
    <p>Operations engineers and IT professionals use Amazon Web Services Systems Manager OpsCenter to view, investigate, and remediate operational work items (OpsItems) impacting the performance and health of their Amazon Web Services resources. OpsCenter is integrated with Amazon EventBridge and Amazon CloudWatch. This means you can configure these services to automatically create an OpsItem in OpsCenter when a CloudWatch alarm enters the ALARM state or when EventBridge processes an event from any Amazon Web Services service that publishes events. Configuring Amazon CloudWatch alarms and EventBridge events to automatically create OpsItems allows you to quickly diagnose and remediate issues with Amazon Web Services resources from a single console.</p> <p>To help you diagnose issues, each OpsItem includes contextually relevant information such as the name and ID of the Amazon Web Services resource that generated the OpsItem, alarm or event details, alarm history, and an alarm timeline graph. For the Amazon Web Services resource, OpsCenter aggregates information from Config, CloudTrail logs, and EventBridge, so you don't have to navigate across multiple console pages during your investigation. For more information, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">OpsCenter</a> in the <i>Amazon Web Services Systems Manager User Guide</i>. </p>
    """

    CreatedBy: Optional[String] = None
    OpsItemType: Optional[OpsItemType] = None
    CreatedTime: Optional[DateTime] = None
    Description: Optional[OpsItemDescription] = None
    LastModifiedBy: Optional[String] = None
    LastModifiedTime: Optional[DateTime] = None
    Notifications: Optional[OpsItemNotifications] = None
    Priority: Optional[OpsItemPriority] = None
    RelatedOpsItems: Optional[RelatedOpsItems] = None
    Status: Optional[OpsItemStatus] = None
    OpsItemId: Optional[OpsItemId] = None
    Version: Optional[String] = None
    Title: Optional[OpsItemTitle] = None
    Source: Optional[OpsItemSource] = None
    OperationalData: Optional[OpsItemOperationalData] = None
    Category: Optional[OpsItemCategory] = None
    Severity: Optional[OpsItemSeverity] = None
    ActualStartTime: Optional[DateTime] = None
    ActualEndTime: Optional[DateTime] = None
    PlannedStartTime: Optional[DateTime] = None
    PlannedEndTime: Optional[DateTime] = None


class OpsResultAttributeList(BaseModel):
    __root__: Annotated[List[OpsResultAttribute], Field(min_items=1)]


class OpsEntityList(BaseModel):
    __root__: List[OpsEntity]


class Parameter(BaseModel):
    """
    An Amazon Web Services Systems Manager parameter in Parameter Store.
    """

    Name: Optional[PSParameterName] = None
    Type: Optional[ParameterType] = None
    Value: Optional[PSParameterValue] = None
    Version: Optional[PSParameterVersion] = None
    Selector: Optional[PSParameterSelector] = None
    SourceResult: Optional[String] = None
    LastModifiedDate: Optional[DateTime] = None
    ARN: Optional[String] = None
    DataType: Optional[ParameterDataType] = None


class ParameterList(BaseModel):
    __root__: List[Parameter]


class ServiceSetting(BaseModel):
    """
    <p>The service setting data structure.</p> <p> <code>ServiceSetting</code> is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of "false". This means the user can't use this feature unless they change the setting to "true" and intentionally opt in for a paid feature.</p> <p>Services map a <code>SettingId</code> object to a setting value. Amazon Web Services services teams define the default value for a <code>SettingId</code>. You can't create a new <code>SettingId</code>, but you can overwrite the default value if you have the <code>ssm:UpdateServiceSetting</code> permission for the setting. Use the <a>UpdateServiceSetting</a> API operation to change the default setting. Or, use the <a>ResetServiceSetting</a> to change the value back to the original value defined by the Amazon Web Services service team.</p>
    """

    SettingId: Optional[ServiceSettingId] = None
    SettingValue: Optional[ServiceSettingValue] = None
    LastModifiedDate: Optional[DateTime] = None
    LastModifiedUser: Optional[String] = None
    ARN: Optional[String] = None
    Status: Optional[String] = None


class InstanceInformationFilterValueSet(BaseModel):
    __root__: Annotated[
        List[InstanceInformationFilterValue], Field(max_items=100, min_items=1)
    ]


class InstanceInformationFilter(BaseModel):
    """
    <p>Describes a filter for a specific list of instances. You can filter instances information by using tags. You specify tags by using a key-value mapping.</p> <p>Use this operation instead of the <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a> method. The <code>InstanceInformationFilterList</code> method is a legacy method and doesn't support tags. </p>
    """

    key: InstanceInformationFilterKey
    valueSet: InstanceInformationFilterValueSet


class InstanceInformationStringFilter(BaseModel):
    """
    The filters to describe or get information about your managed instances.
    """

    Key: InstanceInformationStringFilterKey
    Values: InstanceInformationFilterValueSet


class InstancePatchStateFilterValues(BaseModel):
    __root__: Annotated[
        List[InstancePatchStateFilterValue], Field(max_items=1, min_items=1)
    ]


class InstancePatchStateFilter(BaseModel):
    """
    <p>Defines a filter used in <a>DescribeInstancePatchStatesForPatchGroup</a> to scope down the information returned by the API.</p> <p> <b>Example</b>: To filter for all instances in a patch group having more than three patches with a <code>FailedCount</code> status, use the following for the filter:</p> <ul> <li> <p>Value for <code>Key</code>: <code>FailedCount</code> </p> </li> <li> <p>Value for <code>Type</code>: <code>GreaterThan</code> </p> </li> <li> <p>Value for <code>Values</code>: <code>3</code> </p> </li> </ul>
    """

    Key: InstancePatchStateFilterKey
    Values: InstancePatchStateFilterValues
    Type: InstancePatchStateOperatorType


class InventoryDeletionSummaryItems(BaseModel):
    __root__: List[InventoryDeletionSummaryItem]


class InventoryFilterValueList(BaseModel):
    __root__: Annotated[List[InventoryFilterValue], Field(max_items=40, min_items=1)]


class InventoryFilter(BaseModel):
    """
    One or more filters. Use a filter to return a more specific list of results.
    """

    Key: InventoryFilterKey
    Values: InventoryFilterValueList
    Type: Optional[InventoryQueryOperatorType] = None


class InventoryItemEntryList(BaseModel):
    __root__: Annotated[List[InventoryItemEntry], Field(max_items=10000, min_items=0)]


class InventoryItem(BaseModel):
    """
    Information collected from managed instances based on your inventory policy document
    """

    TypeName: InventoryItemTypeName
    SchemaVersion: InventoryItemSchemaVersion
    CaptureTime: InventoryItemCaptureTime
    ContentHash: Optional[InventoryItemContentHash] = None
    Content: Optional[InventoryItemEntryList] = None
    Context: Optional[InventoryItemContentContext] = None


class InventoryItemList(BaseModel):
    __root__: Annotated[List[InventoryItem], Field(max_items=30, min_items=1)]


class InventoryResultItem(BaseModel):
    """
    The inventory result item.
    """

    TypeName: InventoryItemTypeName
    SchemaVersion: InventoryItemSchemaVersion
    CaptureTime: Optional[InventoryItemCaptureTime] = None
    ContentHash: Optional[InventoryItemContentHash] = None
    Content: InventoryItemEntryList


class ParameterLabelList(BaseModel):
    __root__: Annotated[List[ParameterLabel], Field(max_items=10, min_items=1)]


class OpsItemRelatedItemSummaries(BaseModel):
    __root__: List[OpsItemRelatedItemSummary]


class OpsMetadataList(BaseModel):
    __root__: Annotated[List[OpsMetadata], Field(max_items=50, min_items=1)]


class MaintenanceWindowFilterValues(BaseModel):
    __root__: List[MaintenanceWindowFilterValue]


class MaintenanceWindowFilter(BaseModel):
    """
    <p>Filter used in the request. Supported filter keys depend on the API operation that includes the filter. API operations that use <code>MaintenanceWindowFilter&gt;</code> include the following:</p> <ul> <li> <p> <a>DescribeMaintenanceWindowExecutions</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindowExecutionTaskInvocations</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindowExecutionTasks</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindows</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindowTargets</a> </p> </li> <li> <p> <a>DescribeMaintenanceWindowTasks</a> </p> </li> </ul>
    """

    Key: Optional[MaintenanceWindowFilterKey] = None
    Values: Optional[MaintenanceWindowFilterValues] = None


class MetadataValue(BaseModel):
    """
    Metadata to assign to an Application Manager application.
    """

    Value: Optional[MetadataValueString] = None


class NotificationEventList(BaseModel):
    __root__: List[NotificationEvent]


class OpsEntityItemEntryList(BaseModel):
    __root__: Annotated[List[OpsEntityItemEntry], Field(max_items=10000, min_items=0)]


class OpsEntityItem(BaseModel):
    """
    The OpsData summary.
    """

    CaptureTime: Optional[OpsEntityItemCaptureTime] = None
    Content: Optional[OpsEntityItemEntryList] = None


class OpsFilterValueList(BaseModel):
    __root__: Annotated[List[OpsFilterValue], Field(max_items=40, min_items=1)]


class OpsFilter(BaseModel):
    """
    A filter for viewing OpsData summaries.
    """

    Key: OpsFilterKey
    Values: OpsFilterValueList
    Type: Optional[InventoryQueryOperatorType] = None


class OpsItemEventFilterValues(BaseModel):
    __root__: List[OpsItemEventFilterValue]


class OpsItemEventFilter(BaseModel):
    """
    Describes a filter for a specific list of OpsItem events. You can filter event information by using tags. You specify tags by using a key-value pair mapping.
    """

    Key: OpsItemEventFilterKey
    Values: OpsItemEventFilterValues
    Operator: OpsItemEventFilterOperator


class OpsItemEventSummary(BaseModel):
    """
    Summary information about an OpsItem event or that associated an OpsItem with a related item.
    """

    OpsItemId: Optional[String] = None
    EventId: Optional[String] = None
    Source: Optional[String] = None
    DetailType: Optional[String] = None
    Detail: Optional[String] = None
    CreatedBy: Optional[OpsItemIdentity] = None
    CreatedTime: Optional[DateTime] = None


class OpsItemFilterValues(BaseModel):
    __root__: List[OpsItemFilterValue]


class OpsItemFilter(BaseModel):
    """
    Describes an OpsItem filter.
    """

    Key: OpsItemFilterKey
    Values: OpsItemFilterValues
    Operator: OpsItemFilterOperator


class OpsItemRelatedItemsFilterValues(BaseModel):
    __root__: List[OpsItemRelatedItemsFilterValue]


class OpsItemRelatedItemsFilter(BaseModel):
    """
    Describes a filter for a specific list of related-item resources.
    """

    Key: OpsItemRelatedItemsFilterKey
    Values: OpsItemRelatedItemsFilterValues
    Operator: OpsItemEventFilterOperator


class OpsMetadataFilterValueList(BaseModel):
    __root__: Annotated[List[OpsMetadataFilterValue], Field(max_items=10, min_items=1)]


class OpsMetadataFilter(BaseModel):
    """
    A filter to limit the number of OpsMetadata objects displayed.
    """

    Key: OpsMetadataFilterKey
    Values: OpsMetadataFilterValueList


class ParameterPolicyList(BaseModel):
    __root__: List[ParameterInlinePolicy]


class ParameterHistory(BaseModel):
    """
    Information about parameter usage.
    """

    Name: Optional[PSParameterName] = None
    Type: Optional[ParameterType] = None
    KeyId: Optional[ParameterKeyId] = None
    LastModifiedDate: Optional[DateTime] = None
    LastModifiedUser: Optional[String] = None
    Description: Optional[ParameterDescription] = None
    Value: Optional[PSParameterValue] = None
    AllowedPattern: Optional[AllowedPattern] = None
    Version: Optional[PSParameterVersion] = None
    Labels: Optional[ParameterLabelList] = None
    Tier: Optional[ParameterTier] = None
    Policies: Optional[ParameterPolicyList] = None
    DataType: Optional[ParameterDataType] = None


class ParameterMetadata(BaseModel):
    """
    Metadata includes information like the ARN of the last user and the date/time the parameter was last used.
    """

    Name: Optional[PSParameterName] = None
    Type: Optional[ParameterType] = None
    KeyId: Optional[ParameterKeyId] = None
    LastModifiedDate: Optional[DateTime] = None
    LastModifiedUser: Optional[String] = None
    Description: Optional[ParameterDescription] = None
    AllowedPattern: Optional[AllowedPattern] = None
    Version: Optional[PSParameterVersion] = None
    Tier: Optional[ParameterTier] = None
    Policies: Optional[ParameterPolicyList] = None
    DataType: Optional[ParameterDataType] = None


class ParameterStringFilterValueList(BaseModel):
    __root__: Annotated[
        List[ParameterStringFilterValue], Field(max_items=50, min_items=1)
    ]


class ParameterStringFilter(BaseModel):
    """
    One or more filters. Use a filter to return a more specific list of results.
    """

    Key: ParameterStringFilterKey
    Option: Optional[ParameterStringQueryOption] = None
    Values: Optional[ParameterStringFilterValueList] = None


class ParametersFilterValueList(BaseModel):
    __root__: Annotated[List[ParametersFilterValue], Field(max_items=50, min_items=1)]


class ParametersFilter(BaseModel):
    """
    This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.
    """

    Key: ParametersFilterKey
    Values: ParametersFilterValueList


class PatchAdvisoryIdList(BaseModel):
    __root__: List[PatchAdvisoryId]


class PatchBugzillaIdList(BaseModel):
    __root__: List[PatchBugzillaId]


class PatchCVEIdList(BaseModel):
    __root__: List[PatchCVEId]


class PatchFilterValueList(BaseModel):
    __root__: Annotated[List[PatchFilterValue], Field(max_items=20, min_items=1)]


class PatchFilter(BaseModel):
    """
    <p> Defines which patches should be included in a patch baseline.</p> <p>A patch filter consists of a key and a set of values. The filter key is a patch property. For example, the available filter keys for <code>WINDOWS</code> are <code>PATCH_SET</code>, <code>PRODUCT</code>, <code>PRODUCT_FAMILY</code>, <code>CLASSIFICATION</code>, and <code>MSRC_SEVERITY</code>.</p> <p>The filter values define a matching criterion for the patch property indicated by the key. For example, if the filter key is <code>PRODUCT</code> and the filter values are <code>["Office 2013", "Office 2016"]</code>, then the filter accepts all patches where product name is either "Office 2013" or "Office 2016". The filter values can be exact values for the patch property given as a key, or a wildcard (*), which matches all values.</p> <p>You can view lists of valid values for the patch properties by running the <code>DescribePatchProperties</code> command. For information about which patch properties can be used with each major operating system, see <a>DescribePatchProperties</a>.</p>
    """

    Key: PatchFilterKey
    Values: PatchFilterValueList


class PatchFilterList(BaseModel):
    __root__: Annotated[List[PatchFilter], Field(max_items=4, min_items=0)]


class PatchOrchestratorFilterValues(BaseModel):
    __root__: List[PatchOrchestratorFilterValue]


class PatchOrchestratorFilter(BaseModel):
    """
    <p>Defines a filter used in Patch Manager APIs. Supported filter keys depend on the API operation that includes the filter. Patch Manager API operations that use <code>PatchOrchestratorFilter</code> include the following:</p> <ul> <li> <p> <a>DescribeAvailablePatches</a> </p> </li> <li> <p> <a>DescribeInstancePatches</a> </p> </li> <li> <p> <a>DescribePatchBaselines</a> </p> </li> <li> <p> <a>DescribePatchGroups</a> </p> </li> </ul>
    """

    Key: Optional[PatchOrchestratorFilterKey] = None
    Values: Optional[PatchOrchestratorFilterValues] = None


class PatchSourceProductList(BaseModel):
    __root__: Annotated[List[PatchSourceProduct], Field(max_items=20, min_items=1)]


class PatchSource(BaseModel):
    """
    Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
    """

    Name: PatchSourceName
    Products: PatchSourceProductList
    Configuration: PatchSourceConfiguration


class ResourceComplianceSummaryItem(BaseModel):
    """
    Compliance summary information for a specific resource.
    """

    ComplianceType: Optional[ComplianceTypeName] = None
    ResourceType: Optional[ComplianceResourceType] = None
    ResourceId: Optional[ComplianceResourceId] = None
    Status: Optional[ComplianceStatus] = None
    OverallSeverity: Optional[PatchComplianceLevel] = None
    ExecutionSummary: Optional[ComplianceExecutionSummary] = None
    CompliantSummary: Optional[CompliantSummary] = None
    NonCompliantSummary: Optional[NonCompliantSummary] = None


class ResourceDataSyncOrganizationalUnitList(BaseModel):
    __root__: Annotated[
        List[ResourceDataSyncOrganizationalUnit], Field(max_items=1000, min_items=1)
    ]


class ResourceDataSyncAwsOrganizationsSource(BaseModel):
    """
    Information about the <code>AwsOrganizationsSource</code> resource data sync source. A sync source of this type can synchronize data from Organizations or, if an Amazon Web Services organization isn't present, from multiple Amazon Web Services Regions.
    """

    OrganizationSourceType: ResourceDataSyncOrganizationSourceType
    OrganizationalUnits: Optional[ResourceDataSyncOrganizationalUnitList] = None


class ResourceDataSyncSourceRegionList(BaseModel):
    __root__: List[ResourceDataSyncSourceRegion]


class SessionManagerOutputUrl(BaseModel):
    """
    Reserved for future use.
    """

    S3OutputUrl: Optional[SessionManagerS3OutputUrl] = None
    CloudWatchOutputUrl: Optional[SessionManagerCloudWatchOutputUrl] = None


class Session(BaseModel):
    """
    Information about a Session Manager connection to an instance.
    """

    SessionId: Optional[SessionId] = None
    Target: Optional[SessionTarget] = None
    Status: Optional[SessionStatus] = None
    StartDate: Optional[DateTime] = None
    EndDate: Optional[DateTime] = None
    DocumentName: Optional[DocumentName] = None
    Owner: Optional[SessionOwner] = None
    Details: Optional[SessionDetails] = None
    OutputUrl: Optional[SessionManagerOutputUrl] = None


class ValidNextStepList(BaseModel):
    __root__: List[ValidNextStep]


class StepExecutionFilterValueList(BaseModel):
    __root__: Annotated[
        List[StepExecutionFilterValue], Field(max_items=10, min_items=1)
    ]


class StepExecutionFilter(BaseModel):
    """
    A filter to limit the amount of step execution information returned by the call.
    """

    Key: StepExecutionFilterKey
    Values: StepExecutionFilterValueList


class TargetValues(BaseModel):
    __root__: Annotated[List[TargetValue], Field(max_items=50, min_items=0)]


class Target(BaseModel):
    """
    <p>An array of search criteria that targets instances using a key-value pair that you specify.</p> <note> <p> One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html">Registering maintenance window tasks without targets</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p> </note> <p>Supported formats include the following.</p> <ul> <li> <p> <code>Key=InstanceIds,Values=<i>instance-id-1</i>,<i>instance-id-2</i>,<i>instance-id-3</i> </code> </p> </li> <li> <p> <code>Key=tag:<i>my-tag-key</i>,Values=<i>my-tag-value-1</i>,<i>my-tag-value-2</i> </code> </p> </li> <li> <p> <code>Key=tag-key,Values=<i>my-tag-key-1</i>,<i>my-tag-key-2</i> </code> </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>: <code>Key=resource-groups:Name,Values=<i>resource-group-name</i> </code> </p> </li> <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=<i>resource-type-1</i>,<i>resource-type-2</i> </code> </p> </li> <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup;Values=<i>resource-group-name</i> </code> </p> </li> </ul> <p>For example:</p> <ul> <li> <p> <code>Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE</code> </p> </li> <li> <p> <code>Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3</code> </p> </li> <li> <p> <code>Key=tag-key,Values=Name,Instance-Type,CostCenter</code> </p> </li> <li> <p> <b>Run Command and Maintenance window targets only</b>: <code>Key=resource-groups:Name,Values=ProductionResourceGroup</code> </p> <p>This example demonstrates how to target all resources in the resource group <b>ProductionResourceGroup</b> in your maintenance window.</p> </li> <li> <p> <b>Maintenance window targets only</b>: <code>Key=resource-groups:ResourceTypeFilters,Values=<i>AWS::EC2::INSTANCE</i>,<i>AWS::EC2::VPC</i> </code> </p> <p>This example demonstrates how to target only Amazon Elastic Compute Cloud (Amazon EC2) instances and VPCs in your maintenance window.</p> </li> <li> <p> <b>Automation targets only</b>: <code>Key=ResourceGroup,Values=MyResourceGroup</code> </p> </li> <li> <p> <b>State Manager association targets only</b>: <code>Key=InstanceIds,Values=<i>*</i> </code> </p> <p>This example demonstrates how to target all managed instances in the Amazon Web Services Region where the association was created.</p> </li> </ul> <p>For more information about how to send commands that target instances using <code>Key,Value</code> parameters, see <a href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting">Targeting multiple instances</a> in the <i>Amazon Web Services Systems Manager User Guide</i>.</p>
    """

    Key: Optional[TargetKey] = None
    Values: Optional[TargetValues] = None


class TargetMapValueList(BaseModel):
    __root__: Annotated[List[TargetMapValue], Field(max_items=25, min_items=0)]


class AddTagsToResourceRequest(BaseModel):
    ResourceType: ResourceTypeForTagging
    ResourceId: ResourceId
    Tags: TagList


class CreateActivationRequest(BaseModel):
    Description: Optional[ActivationDescription] = None
    DefaultInstanceName: Optional[DefaultInstanceName] = None
    IamRole: IamRole
    RegistrationLimit: Optional[RegistrationLimit] = None
    ExpirationDate: Optional[ExpirationDate] = None
    Tags: Optional[TagList] = None


class CreateDocumentRequest(BaseModel):
    Content: DocumentContent
    Requires: Optional[DocumentRequiresList] = None
    Attachments: Optional[AttachmentsSourceList] = None
    Name: DocumentName
    DisplayName: Optional[DocumentDisplayName] = None
    VersionName: Optional[DocumentVersionName] = None
    DocumentType: Optional[DocumentType] = None
    DocumentFormat: Optional[DocumentFormat] = None
    TargetType: Optional[TargetType] = None
    Tags: Optional[TagList] = None


class CreateMaintenanceWindowRequest(BaseModel):
    Name: MaintenanceWindowName
    Description: Optional[MaintenanceWindowDescription] = None
    StartDate: Optional[MaintenanceWindowStringDateTime] = None
    EndDate: Optional[MaintenanceWindowStringDateTime] = None
    Schedule: MaintenanceWindowSchedule
    ScheduleTimezone: Optional[MaintenanceWindowTimezone] = None
    ScheduleOffset: Optional[MaintenanceWindowOffset] = None
    Duration: MaintenanceWindowDurationHours
    Cutoff: MaintenanceWindowCutoff
    AllowUnassociatedTargets: MaintenanceWindowAllowUnassociatedTargets
    ClientToken: Optional[ClientToken] = None
    Tags: Optional[TagList] = None


class CreateOpsItemRequest(BaseModel):
    Description: OpsItemDescription
    OpsItemType: Optional[OpsItemType] = None
    OperationalData: Optional[OpsItemOperationalData] = None
    Notifications: Optional[OpsItemNotifications] = None
    Priority: Optional[OpsItemPriority] = None
    RelatedOpsItems: Optional[RelatedOpsItems] = None
    Source: OpsItemSource
    Title: OpsItemTitle
    Tags: Optional[TagList] = None
    Category: Optional[OpsItemCategory] = None
    Severity: Optional[OpsItemSeverity] = None
    ActualStartTime: Optional[DateTime] = None
    ActualEndTime: Optional[DateTime] = None
    PlannedStartTime: Optional[DateTime] = None
    PlannedEndTime: Optional[DateTime] = None


class CreateOpsMetadataRequest(BaseModel):
    ResourceId: OpsMetadataResourceId
    Metadata: Optional[MetadataMap] = None
    Tags: Optional[TagList] = None


class DescribeActivationsResult(BaseModel):
    ActivationList: Optional[ActivationList] = None
    NextToken: Optional[NextToken] = None


class DescribeAssociationExecutionTargetsResult(BaseModel):
    AssociationExecutionTargets: Optional[AssociationExecutionTargetsList] = None
    NextToken: Optional[NextToken] = None


class DescribeAutomationExecutionsRequest(BaseModel):
    Filters: Optional[AutomationExecutionFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeEffectiveInstanceAssociationsResult(BaseModel):
    Associations: Optional[InstanceAssociationList] = None
    NextToken: Optional[NextToken] = None


class DescribeInstanceAssociationsStatusResult(BaseModel):
    InstanceAssociationStatusInfos: Optional[InstanceAssociationStatusInfos] = None
    NextToken: Optional[NextToken] = None


class DescribeInstanceInformationResult(BaseModel):
    InstanceInformationList: Optional[InstanceInformationList] = None
    NextToken: Optional[NextToken] = None


class DescribeInstancePatchStatesResult(BaseModel):
    InstancePatchStates: Optional[InstancePatchStateList] = None
    NextToken: Optional[NextToken] = None


class DescribeInstancePatchStatesForPatchGroupResult(BaseModel):
    InstancePatchStates: Optional[InstancePatchStatesList] = None
    NextToken: Optional[NextToken] = None


class DescribeInstancePatchesResult(BaseModel):
    Patches: Optional[PatchComplianceDataList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowExecutionTaskInvocationsResult(BaseModel):
    WindowExecutionTaskInvocationIdentities: Optional[
        MaintenanceWindowExecutionTaskInvocationIdentityList
    ] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowExecutionTasksResult(BaseModel):
    WindowExecutionTaskIdentities: Optional[
        MaintenanceWindowExecutionTaskIdentityList
    ] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowExecutionsResult(BaseModel):
    WindowExecutions: Optional[MaintenanceWindowExecutionList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowScheduleResult(BaseModel):
    ScheduledWindowExecutions: Optional[ScheduledWindowExecutionList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowsResult(BaseModel):
    WindowIdentities: Optional[MaintenanceWindowIdentityList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowsForTargetResult(BaseModel):
    WindowIdentities: Optional[MaintenanceWindowsForTargetList] = None
    NextToken: Optional[NextToken] = None


class DescribeOpsItemsResponse(BaseModel):
    NextToken: Optional[String] = None
    OpsItemSummaries: Optional[OpsItemSummaries] = None


class DescribePatchBaselinesResult(BaseModel):
    BaselineIdentities: Optional[PatchBaselineIdentityList] = None
    NextToken: Optional[NextToken] = None


class DescribePatchGroupsResult(BaseModel):
    Mappings: Optional[PatchGroupPatchBaselineMappingList] = None
    NextToken: Optional[NextToken] = None


class DescribePatchPropertiesResult(BaseModel):
    Properties: Optional[PatchPropertiesList] = None
    NextToken: Optional[NextToken] = None


class DescribeSessionsRequest(BaseModel):
    State: SessionState
    MaxResults: Optional[SessionMaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[SessionFilterList] = None


class GetCalendarStateRequest(BaseModel):
    CalendarNames: CalendarNameOrARNList
    AtTime: Optional[ISO8601String] = None


class GetDocumentResult(BaseModel):
    Name: Optional[DocumentARN] = None
    CreatedDate: Optional[DateTime] = None
    DisplayName: Optional[DocumentDisplayName] = None
    VersionName: Optional[DocumentVersionName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Status: Optional[DocumentStatus] = None
    StatusInformation: Optional[DocumentStatusInformation] = None
    Content: Optional[DocumentContent] = None
    DocumentType: Optional[DocumentType] = None
    DocumentFormat: Optional[DocumentFormat] = None
    Requires: Optional[DocumentRequiresList] = None
    AttachmentsContent: Optional[AttachmentContentList] = None
    ReviewStatus: Optional[ReviewStatus] = None


class GetInventoryResult(BaseModel):
    Entities: Optional[InventoryResultEntityList] = None
    NextToken: Optional[NextToken] = None


class GetInventorySchemaResult(BaseModel):
    Schemas: Optional[InventoryItemSchemaResultList] = None
    NextToken: Optional[NextToken] = None


class GetMaintenanceWindowExecutionTaskResult(BaseModel):
    WindowExecutionId: Optional[MaintenanceWindowExecutionId] = None
    TaskExecutionId: Optional[MaintenanceWindowExecutionTaskId] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    ServiceRole: Optional[ServiceRole] = None
    Type: Optional[MaintenanceWindowTaskType] = None
    TaskParameters: Optional[MaintenanceWindowTaskParametersList] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    Status: Optional[MaintenanceWindowExecutionStatus] = None
    StatusDetails: Optional[MaintenanceWindowExecutionStatusDetails] = None
    StartTime: Optional[DateTime] = None
    EndTime: Optional[DateTime] = None


class GetOpsItemResponse(BaseModel):
    OpsItem: Optional[OpsItem] = None


class GetOpsSummaryResult(BaseModel):
    Entities: Optional[OpsEntityList] = None
    NextToken: Optional[NextToken] = None


class GetParameterResult(BaseModel):
    Parameter: Optional[Parameter] = None


class GetParametersResult(BaseModel):
    Parameters: Optional[ParameterList] = None
    InvalidParameters: Optional[ParameterNameList] = None


class GetParametersByPathResult(BaseModel):
    Parameters: Optional[ParameterList] = None
    NextToken: Optional[NextToken] = None


class GetServiceSettingResult(BaseModel):
    """
    The query result body of the GetServiceSetting API operation.
    """

    ServiceSetting: Optional[ServiceSetting] = None


class LabelParameterVersionResult(BaseModel):
    InvalidLabels: Optional[ParameterLabelList] = None
    ParameterVersion: Optional[PSParameterVersion] = None


class LabelParameterVersionRequest(BaseModel):
    Name: PSParameterName
    ParameterVersion: Optional[PSParameterVersion] = None
    Labels: ParameterLabelList


class ListComplianceSummariesResult(BaseModel):
    ComplianceSummaryItems: Optional[ComplianceSummaryItemList] = None
    NextToken: Optional[NextToken] = None


class ListDocumentsResult(BaseModel):
    DocumentIdentifiers: Optional[DocumentIdentifierList] = None
    NextToken: Optional[NextToken] = None


class ListDocumentsRequest(BaseModel):
    DocumentFilterList: Optional[DocumentFilterList] = None
    Filters: Optional[DocumentKeyValuesFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListInventoryEntriesResult(BaseModel):
    TypeName: Optional[InventoryItemTypeName] = None
    InstanceId: Optional[InstanceId] = None
    SchemaVersion: Optional[InventoryItemSchemaVersion] = None
    CaptureTime: Optional[InventoryItemCaptureTime] = None
    Entries: Optional[InventoryItemEntryList] = None
    NextToken: Optional[NextToken] = None


class ListOpsItemRelatedItemsResponse(BaseModel):
    NextToken: Optional[String] = None
    Summaries: Optional[OpsItemRelatedItemSummaries] = None


class ListOpsMetadataResult(BaseModel):
    OpsMetadataList: Optional[OpsMetadataList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResult(BaseModel):
    TagList: Optional[TagList] = None


class PutInventoryRequest(BaseModel):
    InstanceId: InstanceId
    Items: InventoryItemList


class PutParameterRequest(BaseModel):
    Name: PSParameterName
    Description: Optional[ParameterDescription] = None
    Value: PSParameterValue
    Type: Optional[ParameterType] = None
    KeyId: Optional[ParameterKeyId] = None
    Overwrite: Optional[Boolean] = None
    AllowedPattern: Optional[AllowedPattern] = None
    Tags: Optional[TagList] = None
    Tier: Optional[ParameterTier] = None
    Policies: Optional[ParameterPolicies] = None
    DataType: Optional[ParameterDataType] = None


class ResetServiceSettingResult(GetServiceSettingResult):
    """
    The result body of the ResetServiceSetting API operation.
    """

    pass


class UnlabelParameterVersionResult(BaseModel):
    RemovedLabels: Optional[ParameterLabelList] = None
    InvalidLabels: Optional[ParameterLabelList] = None


class UnlabelParameterVersionRequest(BaseModel):
    Name: PSParameterName
    ParameterVersion: PSParameterVersion
    Labels: ParameterLabelList


class UpdateAssociationStatusRequest(BaseModel):
    Name: DocumentARN
    InstanceId: InstanceId
    AssociationStatus: AssociationStatus


class UpdateDocumentRequest(BaseModel):
    Content: DocumentContent
    Attachments: Optional[AttachmentsSourceList] = None
    Name: DocumentName
    DisplayName: Optional[DocumentDisplayName] = None
    VersionName: Optional[DocumentVersionName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    DocumentFormat: Optional[DocumentFormat] = None
    TargetType: Optional[TargetType] = None


class UpdateDocumentMetadataRequest(BaseModel):
    Name: DocumentName
    DocumentVersion: Optional[DocumentVersion] = None
    DocumentReviews: DocumentReviews


class UpdateOpsItemRequest(BaseModel):
    Description: Optional[OpsItemDescription] = None
    OperationalData: Optional[OpsItemOperationalData] = None
    OperationalDataToDelete: Optional[OpsItemOpsDataKeysList] = None
    Notifications: Optional[OpsItemNotifications] = None
    Priority: Optional[OpsItemPriority] = None
    RelatedOpsItems: Optional[RelatedOpsItems] = None
    Status: Optional[OpsItemStatus] = None
    OpsItemId: OpsItemId
    Title: Optional[OpsItemTitle] = None
    Category: Optional[OpsItemCategory] = None
    Severity: Optional[OpsItemSeverity] = None
    ActualStartTime: Optional[DateTime] = None
    ActualEndTime: Optional[DateTime] = None
    PlannedStartTime: Optional[DateTime] = None
    PlannedEndTime: Optional[DateTime] = None


class Targets(BaseModel):
    __root__: Annotated[List[Target], Field(max_items=5, min_items=0)]


class Association(BaseModel):
    """
    Describes an association of a Amazon Web Services Systems Manager document (SSM document) and an instance.
    """

    Name: Optional[DocumentARN] = None
    InstanceId: Optional[InstanceId] = None
    AssociationId: Optional[AssociationId] = None
    AssociationVersion: Optional[AssociationVersion] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Targets: Optional[Targets] = None
    LastExecutionDate: Optional[DateTime] = None
    Overview: Optional[AssociationOverview] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    AssociationName: Optional[AssociationName] = None


class AssociationDescription(BaseModel):
    """
    Describes the parameters for a document.
    """

    Name: Optional[DocumentARN] = None
    InstanceId: Optional[InstanceId] = None
    AssociationVersion: Optional[AssociationVersion] = None
    Date: Optional[DateTime] = None
    LastUpdateAssociationDate: Optional[DateTime] = None
    Status: Optional[AssociationStatus] = None
    Overview: Optional[AssociationOverview] = None
    DocumentVersion: Optional[DocumentVersion] = None
    AutomationTargetParameterName: Optional[AutomationTargetParameterName] = None
    Parameters: Optional[Parameters] = None
    AssociationId: Optional[AssociationId] = None
    Targets: Optional[Targets] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    OutputLocation: Optional[InstanceAssociationOutputLocation] = None
    LastExecutionDate: Optional[DateTime] = None
    LastSuccessfulExecutionDate: Optional[DateTime] = None
    AssociationName: Optional[AssociationName] = None
    MaxErrors: Optional[MaxErrors] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    ComplianceSeverity: Optional[AssociationComplianceSeverity] = None
    SyncCompliance: Optional[AssociationSyncCompliance] = None
    ApplyOnlyAtCronInterval: Optional[ApplyOnlyAtCronInterval] = None
    CalendarNames: Optional[CalendarNameOrARNList] = None
    TargetLocations: Optional[TargetLocations] = None


class AssociationDescriptionList(BaseModel):
    __root__: List[AssociationDescription]


class AssociationList(BaseModel):
    __root__: List[Association]


class AssociationVersionInfo(BaseModel):
    """
    Information about the association version.
    """

    AssociationId: Optional[AssociationId] = None
    AssociationVersion: Optional[AssociationVersion] = None
    CreatedDate: Optional[DateTime] = None
    Name: Optional[DocumentARN] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Parameters: Optional[Parameters] = None
    Targets: Optional[Targets] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    OutputLocation: Optional[InstanceAssociationOutputLocation] = None
    AssociationName: Optional[AssociationName] = None
    MaxErrors: Optional[MaxErrors] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    ComplianceSeverity: Optional[AssociationComplianceSeverity] = None
    SyncCompliance: Optional[AssociationSyncCompliance] = None
    ApplyOnlyAtCronInterval: Optional[ApplyOnlyAtCronInterval] = None
    CalendarNames: Optional[CalendarNameOrARNList] = None
    TargetLocations: Optional[TargetLocations] = None


class AssociationVersionList(BaseModel):
    __root__: Annotated[List[AssociationVersionInfo], Field(min_items=1)]


class PatchFilterGroup(BaseModel):
    """
    A set of patch filters, typically used for approval rules.
    """

    PatchFilters: PatchFilterList


class PatchSourceList(BaseModel):
    __root__: Annotated[List[PatchSource], Field(max_items=20, min_items=0)]


class NotificationConfig(BaseModel):
    """
    Configurations for sending notifications.
    """

    NotificationArn: Optional[NotificationArn] = None
    NotificationEvents: Optional[NotificationEventList] = None
    NotificationType: Optional[NotificationType] = None


class Command(BaseModel):
    """
    Describes a command request.
    """

    CommandId: Optional[CommandId] = None
    DocumentName: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Comment: Optional[Comment] = None
    ExpiresAfter: Optional[DateTime] = None
    Parameters: Optional[Parameters] = None
    InstanceIds: Optional[InstanceIdList] = None
    Targets: Optional[Targets] = None
    RequestedDateTime: Optional[DateTime] = None
    Status: Optional[CommandStatus] = None
    StatusDetails: Optional[StatusDetails] = None
    OutputS3Region: Optional[S3Region] = None
    OutputS3BucketName: Optional[S3BucketName] = None
    OutputS3KeyPrefix: Optional[S3KeyPrefix] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    TargetCount: Optional[TargetCount] = None
    CompletedCount: Optional[CompletedCount] = None
    ErrorCount: Optional[ErrorCount] = None
    DeliveryTimedOutCount: Optional[DeliveryTimedOutCount] = None
    ServiceRole: Optional[ServiceRole] = None
    NotificationConfig: Optional[NotificationConfig] = None
    CloudWatchOutputConfig: Optional[CloudWatchOutputConfig] = None
    TimeoutSeconds: Optional[TimeoutSeconds] = None


class CommandInvocation(BaseModel):
    """
    An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you ran.
    """

    CommandId: Optional[CommandId] = None
    InstanceId: Optional[InstanceId] = None
    InstanceName: Optional[InstanceTagName] = None
    Comment: Optional[Comment] = None
    DocumentName: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    RequestedDateTime: Optional[DateTime] = None
    Status: Optional[CommandInvocationStatus] = None
    StatusDetails: Optional[StatusDetails] = None
    TraceOutput: Optional[InvocationTraceOutput] = None
    StandardOutputUrl: Optional[Url] = None
    StandardErrorUrl: Optional[Url] = None
    CommandPlugins: Optional[CommandPluginList] = None
    ServiceRole: Optional[ServiceRole] = None
    NotificationConfig: Optional[NotificationConfig] = None
    CloudWatchOutputConfig: Optional[CloudWatchOutputConfig] = None


class CommandInvocationList(BaseModel):
    __root__: List[CommandInvocation]


class CommandList(BaseModel):
    __root__: List[Command]


class CreateAssociationBatchRequestEntry(BaseModel):
    """
    Describes the association of a Amazon Web Services Systems Manager document (SSM document) and an instance.
    """

    Name: DocumentARN
    InstanceId: Optional[InstanceId] = None
    Parameters: Optional[Parameters] = None
    AutomationTargetParameterName: Optional[AutomationTargetParameterName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Targets: Optional[Targets] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    OutputLocation: Optional[InstanceAssociationOutputLocation] = None
    AssociationName: Optional[AssociationName] = None
    MaxErrors: Optional[MaxErrors] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    ComplianceSeverity: Optional[AssociationComplianceSeverity] = None
    SyncCompliance: Optional[AssociationSyncCompliance] = None
    ApplyOnlyAtCronInterval: Optional[ApplyOnlyAtCronInterval] = None
    CalendarNames: Optional[CalendarNameOrARNList] = None
    TargetLocations: Optional[TargetLocations] = None


class DocumentDescription(BaseModel):
    """
    Describes a Amazon Web Services Systems Manager document (SSM document).
    """

    Sha1: Optional[DocumentSha1] = None
    Hash: Optional[DocumentHash] = None
    HashType: Optional[DocumentHashType] = None
    Name: Optional[DocumentARN] = None
    DisplayName: Optional[DocumentDisplayName] = None
    VersionName: Optional[DocumentVersionName] = None
    Owner: Optional[DocumentOwner] = None
    CreatedDate: Optional[DateTime] = None
    Status: Optional[DocumentStatus] = None
    StatusInformation: Optional[DocumentStatusInformation] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Description: Optional[DescriptionInDocument] = None
    Parameters: Optional[DocumentParameterList] = None
    PlatformTypes: Optional[PlatformTypeList] = None
    DocumentType: Optional[DocumentType] = None
    SchemaVersion: Optional[DocumentSchemaVersion] = None
    LatestVersion: Optional[DocumentVersion] = None
    DefaultVersion: Optional[DocumentVersion] = None
    DocumentFormat: Optional[DocumentFormat] = None
    TargetType: Optional[TargetType] = None
    Tags: Optional[TagList] = None
    AttachmentsInformation: Optional[AttachmentInformationList] = None
    Requires: Optional[DocumentRequiresList] = None
    Author: Optional[DocumentAuthor] = None
    ReviewInformation: Optional[ReviewInformationList] = None
    ApprovedVersion: Optional[DocumentVersion] = None
    PendingReviewVersion: Optional[DocumentVersion] = None
    ReviewStatus: Optional[ReviewStatus] = None


class ResourceDataSyncSource(BaseModel):
    """
    Information about the source of the data included in the resource data sync.
    """

    SourceType: ResourceDataSyncSourceType
    AwsOrganizationsSource: Optional[ResourceDataSyncAwsOrganizationsSource] = None
    SourceRegions: ResourceDataSyncSourceRegionList
    IncludeFutureRegions: Optional[ResourceDataSyncIncludeFutureRegions] = None
    EnableAllOpsDataSources: Optional[ResourceDataSyncEnableAllOpsDataSources] = None


class InventoryDeletionSummary(BaseModel):
    """
    Information about the delete operation.
    """

    TotalCount: Optional[TotalCount] = None
    RemainingCount: Optional[RemainingCount] = None
    SummaryItems: Optional[InventoryDeletionSummaryItems] = None


class StepExecutionFilterList(BaseModel):
    __root__: Annotated[List[StepExecutionFilter], Field(max_items=6, min_items=1)]


class PatchOrchestratorFilterList(BaseModel):
    __root__: Annotated[List[PatchOrchestratorFilter], Field(max_items=5, min_items=0)]


class InstanceInformationFilterList(BaseModel):
    __root__: Annotated[List[InstanceInformationFilter], Field(min_items=0)]


class InstanceInformationStringFilterList(BaseModel):
    __root__: Annotated[List[InstanceInformationStringFilter], Field(min_items=0)]


class InstancePatchStateFilterList(BaseModel):
    __root__: Annotated[List[InstancePatchStateFilter], Field(max_items=4, min_items=0)]


class MaintenanceWindowFilterList(BaseModel):
    __root__: Annotated[List[MaintenanceWindowFilter], Field(max_items=5, min_items=0)]


class OpsItemFilters(BaseModel):
    __root__: List[OpsItemFilter]


class ParametersFilterList(BaseModel):
    __root__: List[ParametersFilter]


class ParameterStringFilterList(BaseModel):
    __root__: List[ParameterStringFilter]


class ParameterMetadataList(BaseModel):
    __root__: List[ParameterMetadata]


class SessionList(BaseModel):
    __root__: List[Session]


class DocumentReviewerResponseList(BaseModel):
    __root__: List[DocumentReviewerResponseSource]


class DocumentMetadataResponseInfo(BaseModel):
    """
    Details about the response to a document review request.
    """

    ReviewerResponse: Optional[DocumentReviewerResponseList] = None


class Patch(BaseModel):
    """
    Represents metadata about a patch.
    """

    Id: Optional[PatchId] = None
    ReleaseDate: Optional[DateTime] = None
    Title: Optional[PatchTitle] = None
    Description: Optional[PatchDescription] = None
    ContentUrl: Optional[PatchContentUrl] = None
    Vendor: Optional[PatchVendor] = None
    ProductFamily: Optional[PatchProductFamily] = None
    Product: Optional[PatchProduct] = None
    Classification: Optional[PatchClassification] = None
    MsrcSeverity: Optional[PatchMsrcSeverity] = None
    KbNumber: Optional[PatchKbNumber] = None
    MsrcNumber: Optional[PatchMsrcNumber] = None
    Language: Optional[PatchLanguage] = None
    AdvisoryIds: Optional[PatchAdvisoryIdList] = None
    BugzillaIds: Optional[PatchBugzillaIdList] = None
    CVEIds: Optional[PatchCVEIdList] = None
    Name: Optional[PatchName] = None
    Epoch: Optional[PatchEpoch] = None
    Version: Optional[PatchVersion] = None
    Release: Optional[PatchRelease] = None
    Arch: Optional[PatchArch] = None
    Severity: Optional[PatchSeverity] = None
    Repository: Optional[PatchRepository] = None


class EffectivePatch(BaseModel):
    """
    The <code>EffectivePatch</code> structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline. The approval state includes information about whether the patch is currently approved, due to be approved by a rule, explicitly approved, or explicitly rejected and the date the patch was or will be approved.
    """

    Patch: Optional[Patch] = None
    PatchStatus: Optional[PatchStatus] = None


class FailedCreateAssociation(BaseModel):
    """
    Describes a failed association.
    """

    Entry: Optional[CreateAssociationBatchRequestEntry] = None
    Message: Optional[BatchErrorMessage] = None
    Fault: Optional[Fault] = None


class InventoryFilterList(BaseModel):
    __root__: Annotated[List[InventoryFilter], Field(max_items=5, min_items=1)]


class OpsFilterList(BaseModel):
    __root__: Annotated[List[OpsFilter], Field(max_items=5, min_items=1)]


class ParameterHistoryList(BaseModel):
    __root__: List[ParameterHistory]


class InventoryDeletionStatusItem(BaseModel):
    """
    Status information returned by the <code>DeleteInventory</code> operation.
    """

    DeletionId: Optional[UUID] = None
    TypeName: Optional[InventoryItemTypeName] = None
    DeletionStartTime: Optional[InventoryDeletionStartTime] = None
    LastStatus: Optional[InventoryDeletionStatus] = None
    LastStatusMessage: Optional[InventoryDeletionLastStatusMessage] = None
    DeletionSummary: Optional[InventoryDeletionSummary] = None
    LastStatusUpdateTime: Optional[InventoryDeletionLastStatusUpdateTime] = None


class InventoryGroup(BaseModel):
    """
    A user-defined set of one or more filters on which to aggregate inventory data. Groups return a count of resources that match and don't match the specified criteria.
    """

    Name: InventoryGroupName
    Filters: InventoryFilterList


class OpsItemEventFilters(BaseModel):
    __root__: List[OpsItemEventFilter]


class OpsItemEventSummaries(BaseModel):
    __root__: List[OpsItemEventSummary]


class OpsItemRelatedItemsFilters(BaseModel):
    __root__: List[OpsItemRelatedItemsFilter]


class OpsMetadataFilterList(BaseModel):
    __root__: Annotated[List[OpsMetadataFilter], Field(max_items=10, min_items=0)]


class ResourceComplianceSummaryItemList(BaseModel):
    __root__: List[ResourceComplianceSummaryItem]


class MaintenanceWindowRunCommandParameters(BaseModel):
    """
    <p>The parameters for a <code>RUN_COMMAND</code> task type.</p> <p>For information about specifying and updating task parameters, see <a>RegisterTaskWithMaintenanceWindow</a> and <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code> options in the <code>TaskInvocationParameters</code> structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p> <code>TaskParameters</code> has been deprecated. To specify parameters to pass to a task when it runs, instead use the <code>Parameters</code> option in the <code>TaskInvocationParameters</code> structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For <code>RUN_COMMAND</code> tasks, Systems Manager uses specified values for <code>TaskParameters</code> and <code>LoggingInfo</code> only if no values are specified for <code>TaskInvocationParameters</code>. </p> </note>
    """

    Comment: Optional[Comment] = None
    CloudWatchOutputConfig: Optional[CloudWatchOutputConfig] = None
    DocumentHash: Optional[DocumentHash] = None
    DocumentHashType: Optional[DocumentHashType] = None
    DocumentVersion: Optional[DocumentVersion] = None
    NotificationConfig: Optional[NotificationConfig] = None
    OutputS3BucketName: Optional[S3BucketName] = None
    OutputS3KeyPrefix: Optional[S3KeyPrefix] = None
    Parameters: Optional[Parameters] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    TimeoutSeconds: Optional[TimeoutSeconds] = None


class MaintenanceWindowTarget(BaseModel):
    """
    The target registered with the maintenance window.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    WindowTargetId: Optional[MaintenanceWindowTargetId] = None
    ResourceType: Optional[MaintenanceWindowResourceType] = None
    Targets: Optional[Targets] = None
    OwnerInformation: Optional[OwnerInformation] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None


class MaintenanceWindowTask(BaseModel):
    """
    Information about a task defined for a maintenance window.
    """

    WindowId: Optional[MaintenanceWindowId] = None
    WindowTaskId: Optional[MaintenanceWindowTaskId] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    Type: Optional[MaintenanceWindowTaskType] = None
    Targets: Optional[Targets] = None
    TaskParameters: Optional[MaintenanceWindowTaskParameters] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    LoggingInfo: Optional[LoggingInfo] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None


class PatchRule(BaseModel):
    """
    Defines an approval rule for a patch baseline.
    """

    PatchFilterGroup: PatchFilterGroup
    ComplianceLevel: Optional[PatchComplianceLevel] = None
    ApproveAfterDays: Optional[ApproveAfterDays] = None
    ApproveUntilDate: Optional[PatchStringDateTime] = None
    EnableNonSecurity: Optional[Boolean] = None


class PatchRuleList(BaseModel):
    __root__: Annotated[List[PatchRule], Field(max_items=10, min_items=0)]


class ResourceDataSyncSourceWithState(BaseModel):
    """
    <p>The data type name for including resource data sync state. There are four sync states:</p> <p> <code>OrganizationNotExists</code> (Your organization doesn't exist)</p> <p> <code>NoPermissions</code> (The system can't locate the service-linked role. This role is automatically created when a user creates a resource data sync in Amazon Web Services Systems Manager Explorer.)</p> <p> <code>InvalidOrganizationalUnit</code> (You specified or selected an invalid unit in the resource data sync configuration.)</p> <p> <code>TrustedAccessDisabled</code> (You disabled Systems Manager access in the organization in Organizations.)</p>
    """

    SourceType: Optional[ResourceDataSyncSourceType] = None
    AwsOrganizationsSource: Optional[ResourceDataSyncAwsOrganizationsSource] = None
    SourceRegions: Optional[ResourceDataSyncSourceRegionList] = None
    IncludeFutureRegions: Optional[ResourceDataSyncIncludeFutureRegions] = None
    State: Optional[ResourceDataSyncState] = None
    EnableAllOpsDataSources: Optional[ResourceDataSyncEnableAllOpsDataSources] = None


class ResourceDataSyncItem(BaseModel):
    """
    Information about a resource data sync configuration, including its current status and last successful sync.
    """

    SyncName: Optional[ResourceDataSyncName] = None
    SyncType: Optional[ResourceDataSyncType] = None
    SyncSource: Optional[ResourceDataSyncSourceWithState] = None
    S3Destination: Optional[ResourceDataSyncS3Destination] = None
    LastSyncTime: Optional[LastResourceDataSyncTime] = None
    LastSuccessfulSyncTime: Optional[LastSuccessfulResourceDataSyncTime] = None
    SyncLastModifiedTime: Optional[ResourceDataSyncLastModifiedTime] = None
    LastStatus: Optional[LastResourceDataSyncStatus] = None
    SyncCreatedTime: Optional[ResourceDataSyncCreatedTime] = None
    LastSyncStatusMessage: Optional[LastResourceDataSyncMessage] = None


class Runbook(BaseModel):
    """
    <p>Information about an Automation runbook used in a runbook workflow in Change Manager.</p> <note> <p>The Automation runbooks specified for the runbook workflow can't run until all required approvals for the change request have been received.</p> </note>
    """

    DocumentName: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    Parameters: Optional[AutomationParameterMap] = None
    TargetParameterName: Optional[AutomationParameterKey] = None
    Targets: Optional[Targets] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    TargetLocations: Optional[TargetLocations] = None


class StepExecution(BaseModel):
    """
    Detailed information about an the execution state of an Automation step.
    """

    StepName: Optional[String] = None
    Action: Optional[AutomationActionName] = None
    TimeoutSeconds: Optional[Long] = None
    OnFailure: Optional[String] = None
    MaxAttempts: Optional[Integer] = None
    ExecutionStartTime: Optional[DateTime] = None
    ExecutionEndTime: Optional[DateTime] = None
    StepStatus: Optional[AutomationExecutionStatus] = None
    ResponseCode: Optional[String] = None
    Inputs: Optional[NormalStringMap] = None
    Outputs: Optional[AutomationParameterMap] = None
    Response: Optional[String] = None
    FailureMessage: Optional[String] = None
    FailureDetails: Optional[FailureDetails] = None
    StepExecutionId: Optional[String] = None
    OverriddenParameters: Optional[AutomationParameterMap] = None
    IsEnd: Optional[Boolean] = None
    NextStep: Optional[String] = None
    IsCritical: Optional[Boolean] = None
    ValidNextSteps: Optional[ValidNextStepList] = None
    Targets: Optional[Targets] = None
    TargetLocation: Optional[TargetLocation] = None


class CreateAssociationResult(BaseModel):
    AssociationDescription: Optional[AssociationDescription] = None


class CreateAssociationRequest(BaseModel):
    Name: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    InstanceId: Optional[InstanceId] = None
    Parameters: Optional[Parameters] = None
    Targets: Optional[Targets] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    OutputLocation: Optional[InstanceAssociationOutputLocation] = None
    AssociationName: Optional[AssociationName] = None
    AutomationTargetParameterName: Optional[AutomationTargetParameterName] = None
    MaxErrors: Optional[MaxErrors] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    ComplianceSeverity: Optional[AssociationComplianceSeverity] = None
    SyncCompliance: Optional[AssociationSyncCompliance] = None
    ApplyOnlyAtCronInterval: Optional[ApplyOnlyAtCronInterval] = None
    CalendarNames: Optional[CalendarNameOrARNList] = None
    TargetLocations: Optional[TargetLocations] = None


class CreateDocumentResult(BaseModel):
    DocumentDescription: Optional[DocumentDescription] = None


class CreateResourceDataSyncRequest(BaseModel):
    SyncName: ResourceDataSyncName
    S3Destination: Optional[ResourceDataSyncS3Destination] = None
    SyncType: Optional[ResourceDataSyncType] = None
    SyncSource: Optional[ResourceDataSyncSource] = None


class DeleteInventoryResult(BaseModel):
    DeletionId: Optional[UUID] = None
    TypeName: Optional[InventoryItemTypeName] = None
    DeletionSummary: Optional[InventoryDeletionSummary] = None


class DescribeAssociationResult(CreateAssociationResult):
    pass


class DescribeAutomationStepExecutionsRequest(BaseModel):
    AutomationExecutionId: AutomationExecutionId
    Filters: Optional[StepExecutionFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    ReverseOrder: Optional[Boolean] = None


class DescribeAvailablePatchesRequest(BaseModel):
    Filters: Optional[PatchOrchestratorFilterList] = None
    MaxResults: Optional[PatchBaselineMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeDocumentResult(BaseModel):
    Document: Optional[DocumentDescription] = None


class DescribeInstanceInformationRequest(BaseModel):
    InstanceInformationFilterList: Optional[InstanceInformationFilterList] = None
    Filters: Optional[InstanceInformationStringFilterList] = None
    MaxResults: Optional[MaxResultsEC2Compatible] = None
    NextToken: Optional[NextToken] = None


class DescribeInstancePatchStatesForPatchGroupRequest(BaseModel):
    PatchGroup: PatchGroup
    Filters: Optional[InstancePatchStateFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[PatchComplianceMaxResults] = None


class DescribeInstancePatchesRequest(BaseModel):
    InstanceId: InstanceId
    Filters: Optional[PatchOrchestratorFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[PatchComplianceMaxResults] = None


class DescribeMaintenanceWindowExecutionTaskInvocationsRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId
    TaskId: MaintenanceWindowExecutionTaskId
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowExecutionTasksRequest(BaseModel):
    WindowExecutionId: MaintenanceWindowExecutionId
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowExecutionsRequest(BaseModel):
    WindowId: MaintenanceWindowId
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowScheduleRequest(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    Targets: Optional[Targets] = None
    ResourceType: Optional[MaintenanceWindowResourceType] = None
    Filters: Optional[PatchOrchestratorFilterList] = None
    MaxResults: Optional[MaintenanceWindowSearchMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowTargetsRequest(BaseModel):
    WindowId: MaintenanceWindowId
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowTasksRequest(BaseModel):
    WindowId: MaintenanceWindowId
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowsRequest(BaseModel):
    Filters: Optional[MaintenanceWindowFilterList] = None
    MaxResults: Optional[MaintenanceWindowMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowsForTargetRequest(BaseModel):
    Targets: Targets
    ResourceType: MaintenanceWindowResourceType
    MaxResults: Optional[MaintenanceWindowSearchMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeOpsItemsRequest(BaseModel):
    OpsItemFilters: Optional[OpsItemFilters] = None
    MaxResults: Optional[OpsItemMaxResults] = None
    NextToken: Optional[String] = None


class DescribeParametersResult(BaseModel):
    Parameters: Optional[ParameterMetadataList] = None
    NextToken: Optional[NextToken] = None


class DescribeParametersRequest(BaseModel):
    Filters: Optional[ParametersFilterList] = None
    ParameterFilters: Optional[ParameterStringFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribePatchBaselinesRequest(BaseModel):
    Filters: Optional[PatchOrchestratorFilterList] = None
    MaxResults: Optional[PatchBaselineMaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribePatchGroupsRequest(BaseModel):
    MaxResults: Optional[PatchBaselineMaxResults] = None
    Filters: Optional[PatchOrchestratorFilterList] = None
    NextToken: Optional[NextToken] = None


class DescribeSessionsResponse(BaseModel):
    Sessions: Optional[SessionList] = None
    NextToken: Optional[NextToken] = None


class GetParameterHistoryResult(BaseModel):
    Parameters: Optional[ParameterHistoryList] = None
    NextToken: Optional[NextToken] = None


class GetParametersByPathRequest(BaseModel):
    Path: PSParameterName
    Recursive: Optional[Boolean] = None
    ParameterFilters: Optional[ParameterStringFilterList] = None
    WithDecryption: Optional[Boolean] = None
    MaxResults: Optional[GetParametersByPathMaxResults] = None
    NextToken: Optional[NextToken] = None


class ListAssociationVersionsResult(BaseModel):
    AssociationVersions: Optional[AssociationVersionList] = None
    NextToken: Optional[NextToken] = None


class ListAssociationsResult(BaseModel):
    Associations: Optional[AssociationList] = None
    NextToken: Optional[NextToken] = None


class ListCommandInvocationsResult(BaseModel):
    CommandInvocations: Optional[CommandInvocationList] = None
    NextToken: Optional[NextToken] = None


class ListCommandsResult(BaseModel):
    Commands: Optional[CommandList] = None
    NextToken: Optional[NextToken] = None


class ListDocumentMetadataHistoryResponse(BaseModel):
    Name: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    Author: Optional[DocumentAuthor] = None
    Metadata: Optional[DocumentMetadataResponseInfo] = None
    NextToken: Optional[NextToken] = None


class ListInventoryEntriesRequest(BaseModel):
    InstanceId: InstanceId
    TypeName: InventoryItemTypeName
    Filters: Optional[InventoryFilterList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListOpsItemEventsResponse(BaseModel):
    NextToken: Optional[String] = None
    Summaries: Optional[OpsItemEventSummaries] = None


class ListOpsItemEventsRequest(BaseModel):
    Filters: Optional[OpsItemEventFilters] = None
    MaxResults: Optional[OpsItemEventMaxResults] = None
    NextToken: Optional[String] = None


class ListOpsItemRelatedItemsRequest(BaseModel):
    OpsItemId: Optional[OpsItemId] = None
    Filters: Optional[OpsItemRelatedItemsFilters] = None
    MaxResults: Optional[OpsItemRelatedItemsMaxResults] = None
    NextToken: Optional[String] = None


class ListOpsMetadataRequest(BaseModel):
    Filters: Optional[OpsMetadataFilterList] = None
    MaxResults: Optional[ListOpsMetadataMaxResults] = None
    NextToken: Optional[NextToken] = None


class ListResourceComplianceSummariesResult(BaseModel):
    ResourceComplianceSummaryItems: Optional[ResourceComplianceSummaryItemList] = None
    NextToken: Optional[NextToken] = None


class RegisterTargetWithMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId
    ResourceType: MaintenanceWindowResourceType
    Targets: Targets
    OwnerInformation: Optional[OwnerInformation] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    ClientToken: Optional[ClientToken] = None


class SendCommandResult(BaseModel):
    Command: Optional[Command] = None


class SendCommandRequest(BaseModel):
    InstanceIds: Optional[InstanceIdList] = None
    Targets: Optional[Targets] = None
    DocumentName: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    DocumentHash: Optional[DocumentHash] = None
    DocumentHashType: Optional[DocumentHashType] = None
    TimeoutSeconds: Optional[TimeoutSeconds] = None
    Comment: Optional[Comment] = None
    Parameters: Optional[Parameters] = None
    OutputS3Region: Optional[S3Region] = None
    OutputS3BucketName: Optional[S3BucketName] = None
    OutputS3KeyPrefix: Optional[S3KeyPrefix] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    NotificationConfig: Optional[NotificationConfig] = None
    CloudWatchOutputConfig: Optional[CloudWatchOutputConfig] = None


class StartAutomationExecutionRequest(BaseModel):
    DocumentName: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    Parameters: Optional[AutomationParameterMap] = None
    ClientToken: Optional[IdempotencyToken] = None
    Mode: Optional[ExecutionMode] = None
    TargetParameterName: Optional[AutomationParameterKey] = None
    Targets: Optional[Targets] = None
    TargetMaps: Optional[TargetMaps] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    TargetLocations: Optional[TargetLocations] = None
    Tags: Optional[TagList] = None


class UpdateAssociationResult(CreateAssociationResult):
    pass


class UpdateAssociationRequest(BaseModel):
    AssociationId: AssociationId
    Parameters: Optional[Parameters] = None
    DocumentVersion: Optional[DocumentVersion] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    OutputLocation: Optional[InstanceAssociationOutputLocation] = None
    Name: Optional[DocumentARN] = None
    Targets: Optional[Targets] = None
    AssociationName: Optional[AssociationName] = None
    AssociationVersion: Optional[AssociationVersion] = None
    AutomationTargetParameterName: Optional[AutomationTargetParameterName] = None
    MaxErrors: Optional[MaxErrors] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    ComplianceSeverity: Optional[AssociationComplianceSeverity] = None
    SyncCompliance: Optional[AssociationSyncCompliance] = None
    ApplyOnlyAtCronInterval: Optional[ApplyOnlyAtCronInterval] = None
    CalendarNames: Optional[CalendarNameOrARNList] = None
    TargetLocations: Optional[TargetLocations] = None


class UpdateAssociationStatusResult(CreateAssociationResult):
    pass


class UpdateDocumentResult(CreateDocumentResult):
    pass


class UpdateMaintenanceWindowTargetResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    WindowTargetId: Optional[MaintenanceWindowTargetId] = None
    Targets: Optional[Targets] = None
    OwnerInformation: Optional[OwnerInformation] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None


class UpdateMaintenanceWindowTargetRequest(BaseModel):
    WindowId: MaintenanceWindowId
    WindowTargetId: MaintenanceWindowTargetId
    Targets: Optional[Targets] = None
    OwnerInformation: Optional[OwnerInformation] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    Replace: Optional[Boolean] = None


class UpdateResourceDataSyncRequest(BaseModel):
    SyncName: ResourceDataSyncName
    SyncType: ResourceDataSyncType
    SyncSource: ResourceDataSyncSource


class StepExecutionList(BaseModel):
    __root__: List[StepExecution]


class Runbooks(BaseModel):
    __root__: Annotated[List[Runbook], Field(max_items=1, min_items=1)]


class AutomationExecution(BaseModel):
    """
    Detailed information about the current state of an individual Automation execution.
    """

    AutomationExecutionId: Optional[AutomationExecutionId] = None
    DocumentName: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    ExecutionStartTime: Optional[DateTime] = None
    ExecutionEndTime: Optional[DateTime] = None
    AutomationExecutionStatus: Optional[AutomationExecutionStatus] = None
    StepExecutions: Optional[StepExecutionList] = None
    StepExecutionsTruncated: Optional[Boolean] = None
    Parameters: Optional[AutomationParameterMap] = None
    Outputs: Optional[AutomationParameterMap] = None
    FailureMessage: Optional[String] = None
    Mode: Optional[ExecutionMode] = None
    ParentAutomationExecutionId: Optional[AutomationExecutionId] = None
    ExecutedBy: Optional[String] = None
    CurrentStepName: Optional[String] = None
    CurrentAction: Optional[String] = None
    TargetParameterName: Optional[AutomationParameterKey] = None
    Targets: Optional[Targets] = None
    TargetMaps: Optional[TargetMaps] = None
    ResolvedTargets: Optional[ResolvedTargets] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    Target: Optional[String] = None
    TargetLocations: Optional[TargetLocations] = None
    ProgressCounters: Optional[ProgressCounters] = None
    AutomationSubtype: Optional[AutomationSubtype] = None
    ScheduledTime: Optional[DateTime] = None
    Runbooks: Optional[Runbooks] = None
    OpsItemId: Optional[String] = None
    AssociationId: Optional[String] = None
    ChangeRequestName: Optional[ChangeRequestName] = None


class AutomationExecutionMetadata(BaseModel):
    """
    Details about a specific Automation execution.
    """

    AutomationExecutionId: Optional[AutomationExecutionId] = None
    DocumentName: Optional[DocumentName] = None
    DocumentVersion: Optional[DocumentVersion] = None
    AutomationExecutionStatus: Optional[AutomationExecutionStatus] = None
    ExecutionStartTime: Optional[DateTime] = None
    ExecutionEndTime: Optional[DateTime] = None
    ExecutedBy: Optional[String] = None
    LogFile: Optional[String] = None
    Outputs: Optional[AutomationParameterMap] = None
    Mode: Optional[ExecutionMode] = None
    ParentAutomationExecutionId: Optional[AutomationExecutionId] = None
    CurrentStepName: Optional[String] = None
    CurrentAction: Optional[String] = None
    FailureMessage: Optional[String] = None
    TargetParameterName: Optional[AutomationParameterKey] = None
    Targets: Optional[Targets] = None
    TargetMaps: Optional[TargetMaps] = None
    ResolvedTargets: Optional[ResolvedTargets] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    Target: Optional[String] = None
    AutomationType: Optional[AutomationType] = None
    AutomationSubtype: Optional[AutomationSubtype] = None
    ScheduledTime: Optional[DateTime] = None
    Runbooks: Optional[Runbooks] = None
    OpsItemId: Optional[String] = None
    AssociationId: Optional[String] = None
    ChangeRequestName: Optional[ChangeRequestName] = None


class AutomationExecutionMetadataList(BaseModel):
    __root__: List[AutomationExecutionMetadata]


class PatchRuleGroup(BaseModel):
    """
    A set of rules defining the approval rules for a patch baseline.
    """

    PatchRules: PatchRuleList


class BaselineOverride(BaseModel):
    """
    Defines the basic information about a patch baseline override.
    """

    OperatingSystem: Optional[OperatingSystem] = None
    GlobalFilters: Optional[PatchFilterGroup] = None
    ApprovalRules: Optional[PatchRuleGroup] = None
    ApprovedPatches: Optional[PatchIdList] = None
    ApprovedPatchesComplianceLevel: Optional[PatchComplianceLevel] = None
    RejectedPatches: Optional[PatchIdList] = None
    RejectedPatchesAction: Optional[PatchAction] = None
    ApprovedPatchesEnableNonSecurity: Optional[Boolean] = None
    Sources: Optional[PatchSourceList] = None


class CreateAssociationBatchRequestEntries(BaseModel):
    __root__: Annotated[List[CreateAssociationBatchRequestEntry], Field(min_items=1)]


class FailedCreateAssociationList(BaseModel):
    __root__: List[FailedCreateAssociation]


class PatchList(BaseModel):
    __root__: List[Patch]


class EffectivePatchList(BaseModel):
    __root__: List[EffectivePatch]


class InventoryDeletionsList(BaseModel):
    __root__: List[InventoryDeletionStatusItem]


class MaintenanceWindowTargetList(BaseModel):
    __root__: List[MaintenanceWindowTarget]


class MaintenanceWindowTaskList(BaseModel):
    __root__: List[MaintenanceWindowTask]


class MaintenanceWindowTaskInvocationParameters(BaseModel):
    """
    The parameters for task execution.
    """

    RunCommand: Optional[MaintenanceWindowRunCommandParameters] = None
    Automation: Optional[MaintenanceWindowAutomationParameters] = None
    StepFunctions: Optional[MaintenanceWindowStepFunctionsParameters] = None
    Lambda: Optional[MaintenanceWindowLambdaParameters] = None


class InventoryGroupList(BaseModel):
    __root__: Annotated[List[InventoryGroup], Field(max_items=15, min_items=1)]


class ResourceDataSyncItemList(BaseModel):
    __root__: List[ResourceDataSyncItem]


class CreateAssociationBatchResult(BaseModel):
    Successful: Optional[AssociationDescriptionList] = None
    Failed: Optional[FailedCreateAssociationList] = None


class CreateAssociationBatchRequest(BaseModel):
    Entries: CreateAssociationBatchRequestEntries


class CreatePatchBaselineRequest(BaseModel):
    OperatingSystem: Optional[OperatingSystem] = None
    Name: BaselineName
    GlobalFilters: Optional[PatchFilterGroup] = None
    ApprovalRules: Optional[PatchRuleGroup] = None
    ApprovedPatches: Optional[PatchIdList] = None
    ApprovedPatchesComplianceLevel: Optional[PatchComplianceLevel] = None
    ApprovedPatchesEnableNonSecurity: Optional[Boolean] = None
    RejectedPatches: Optional[PatchIdList] = None
    RejectedPatchesAction: Optional[PatchAction] = None
    Description: Optional[BaselineDescription] = None
    Sources: Optional[PatchSourceList] = None
    ClientToken: Optional[ClientToken] = None
    Tags: Optional[TagList] = None


class DescribeAutomationExecutionsResult(BaseModel):
    AutomationExecutionMetadataList: Optional[AutomationExecutionMetadataList] = None
    NextToken: Optional[NextToken] = None


class DescribeAutomationStepExecutionsResult(BaseModel):
    StepExecutions: Optional[StepExecutionList] = None
    NextToken: Optional[NextToken] = None


class DescribeAvailablePatchesResult(BaseModel):
    Patches: Optional[PatchList] = None
    NextToken: Optional[NextToken] = None


class DescribeEffectivePatchesForPatchBaselineResult(BaseModel):
    EffectivePatches: Optional[EffectivePatchList] = None
    NextToken: Optional[NextToken] = None


class DescribeInventoryDeletionsResult(BaseModel):
    InventoryDeletions: Optional[InventoryDeletionsList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowTargetsResult(BaseModel):
    Targets: Optional[MaintenanceWindowTargetList] = None
    NextToken: Optional[NextToken] = None


class DescribeMaintenanceWindowTasksResult(BaseModel):
    Tasks: Optional[MaintenanceWindowTaskList] = None
    NextToken: Optional[NextToken] = None


class GetAutomationExecutionResult(BaseModel):
    AutomationExecution: Optional[AutomationExecution] = None


class GetDeployablePatchSnapshotForInstanceRequest(BaseModel):
    InstanceId: InstanceId
    SnapshotId: SnapshotId
    BaselineOverride: Optional[BaselineOverride] = None


class GetMaintenanceWindowTaskResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    WindowTaskId: Optional[MaintenanceWindowTaskId] = None
    Targets: Optional[Targets] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    TaskType: Optional[MaintenanceWindowTaskType] = None
    TaskParameters: Optional[MaintenanceWindowTaskParameters] = None
    TaskInvocationParameters: Optional[MaintenanceWindowTaskInvocationParameters] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    LoggingInfo: Optional[LoggingInfo] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None


class GetPatchBaselineResult(BaseModel):
    BaselineId: Optional[BaselineId] = None
    Name: Optional[BaselineName] = None
    OperatingSystem: Optional[OperatingSystem] = None
    GlobalFilters: Optional[PatchFilterGroup] = None
    ApprovalRules: Optional[PatchRuleGroup] = None
    ApprovedPatches: Optional[PatchIdList] = None
    ApprovedPatchesComplianceLevel: Optional[PatchComplianceLevel] = None
    ApprovedPatchesEnableNonSecurity: Optional[Boolean] = None
    RejectedPatches: Optional[PatchIdList] = None
    RejectedPatchesAction: Optional[PatchAction] = None
    PatchGroups: Optional[PatchGroupList] = None
    CreatedDate: Optional[DateTime] = None
    ModifiedDate: Optional[DateTime] = None
    Description: Optional[BaselineDescription] = None
    Sources: Optional[PatchSourceList] = None


class ListResourceDataSyncResult(BaseModel):
    ResourceDataSyncItems: Optional[ResourceDataSyncItemList] = None
    NextToken: Optional[NextToken] = None


class RegisterTaskWithMaintenanceWindowRequest(BaseModel):
    WindowId: MaintenanceWindowId
    Targets: Optional[Targets] = None
    TaskArn: MaintenanceWindowTaskArn
    ServiceRoleArn: Optional[ServiceRole] = None
    TaskType: MaintenanceWindowTaskType
    TaskParameters: Optional[MaintenanceWindowTaskParameters] = None
    TaskInvocationParameters: Optional[MaintenanceWindowTaskInvocationParameters] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    LoggingInfo: Optional[LoggingInfo] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    ClientToken: Optional[ClientToken] = None


class StartChangeRequestExecutionRequest(BaseModel):
    ScheduledTime: Optional[DateTime] = None
    DocumentName: DocumentARN
    DocumentVersion: Optional[DocumentVersion] = None
    Parameters: Optional[AutomationParameterMap] = None
    ChangeRequestName: Optional[ChangeRequestName] = None
    ClientToken: Optional[IdempotencyToken] = None
    Runbooks: Runbooks
    Tags: Optional[TagList] = None
    ScheduledEndTime: Optional[DateTime] = None
    ChangeDetails: Optional[ChangeDetailsValue] = None


class UpdateMaintenanceWindowTaskResult(BaseModel):
    WindowId: Optional[MaintenanceWindowId] = None
    WindowTaskId: Optional[MaintenanceWindowTaskId] = None
    Targets: Optional[Targets] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    TaskParameters: Optional[MaintenanceWindowTaskParameters] = None
    TaskInvocationParameters: Optional[MaintenanceWindowTaskInvocationParameters] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    LoggingInfo: Optional[LoggingInfo] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None


class UpdateMaintenanceWindowTaskRequest(BaseModel):
    WindowId: MaintenanceWindowId
    WindowTaskId: MaintenanceWindowTaskId
    Targets: Optional[Targets] = None
    TaskArn: Optional[MaintenanceWindowTaskArn] = None
    ServiceRoleArn: Optional[ServiceRole] = None
    TaskParameters: Optional[MaintenanceWindowTaskParameters] = None
    TaskInvocationParameters: Optional[MaintenanceWindowTaskInvocationParameters] = None
    Priority: Optional[MaintenanceWindowTaskPriority] = None
    MaxConcurrency: Optional[MaxConcurrency] = None
    MaxErrors: Optional[MaxErrors] = None
    LoggingInfo: Optional[LoggingInfo] = None
    Name: Optional[MaintenanceWindowName] = None
    Description: Optional[MaintenanceWindowDescription] = None
    Replace: Optional[Boolean] = None


class UpdatePatchBaselineResult(BaseModel):
    BaselineId: Optional[BaselineId] = None
    Name: Optional[BaselineName] = None
    OperatingSystem: Optional[OperatingSystem] = None
    GlobalFilters: Optional[PatchFilterGroup] = None
    ApprovalRules: Optional[PatchRuleGroup] = None
    ApprovedPatches: Optional[PatchIdList] = None
    ApprovedPatchesComplianceLevel: Optional[PatchComplianceLevel] = None
    ApprovedPatchesEnableNonSecurity: Optional[Boolean] = None
    RejectedPatches: Optional[PatchIdList] = None
    RejectedPatchesAction: Optional[PatchAction] = None
    CreatedDate: Optional[DateTime] = None
    ModifiedDate: Optional[DateTime] = None
    Description: Optional[BaselineDescription] = None
    Sources: Optional[PatchSourceList] = None


class UpdatePatchBaselineRequest(BaseModel):
    BaselineId: BaselineId
    Name: Optional[BaselineName] = None
    GlobalFilters: Optional[PatchFilterGroup] = None
    ApprovalRules: Optional[PatchRuleGroup] = None
    ApprovedPatches: Optional[PatchIdList] = None
    ApprovedPatchesComplianceLevel: Optional[PatchComplianceLevel] = None
    ApprovedPatchesEnableNonSecurity: Optional[Boolean] = None
    RejectedPatches: Optional[PatchIdList] = None
    RejectedPatchesAction: Optional[PatchAction] = None
    Description: Optional[BaselineDescription] = None
    Sources: Optional[PatchSourceList] = None
    Replace: Optional[Boolean] = None


class GetInventoryRequest(BaseModel):
    Filters: Optional[InventoryFilterList] = None
    Aggregators: Optional[InventoryAggregatorList] = None
    ResultAttributes: Optional[ResultAttributeList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class GetOpsSummaryRequest(BaseModel):
    SyncName: Optional[ResourceDataSyncName] = None
    Filters: Optional[OpsFilterList] = None
    Aggregators: Optional[OpsAggregatorList] = None
    ResultAttributes: Optional[OpsResultAttributeList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class InventoryAggregatorList(BaseModel):
    __root__: Annotated[List[InventoryAggregator], Field(max_items=10, min_items=1)]


class OpsAggregatorList(BaseModel):
    __root__: Annotated[List[OpsAggregator], Field(max_items=12, min_items=1)]


class InventoryAggregator(BaseModel):
    """
    Specifies the inventory type and attribute for the aggregation execution.
    """

    Expression: Optional[InventoryAggregatorExpression] = None
    Aggregators: Optional[InventoryAggregatorList] = None
    Groups: Optional[InventoryGroupList] = None


class OpsAggregator(BaseModel):
    """
    One or more aggregators for viewing counts of OpsData using different dimensions such as <code>Source</code>, <code>CreatedTime</code>, or <code>Source and CreatedTime</code>, to name a few.
    """

    AggregatorType: Optional[OpsAggregatorType] = None
    TypeName: Optional[OpsDataTypeName] = None
    AttributeName: Optional[OpsDataAttributeName] = None
    Values: Optional[OpsAggregatorValueMap] = None
    Filters: Optional[OpsFilterList] = None
    Aggregators: Optional[OpsAggregatorList] = None


GetInventoryRequest.update_forward_refs()
GetOpsSummaryRequest.update_forward_refs()
InventoryAggregatorList.update_forward_refs()
OpsAggregatorList.update_forward_refs()

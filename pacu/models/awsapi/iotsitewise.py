# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:03+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidRequestException(BaseModel):
    __root__: Any


class ResourceNotFoundException(InvalidRequestException):
    pass


class InternalFailureException(InvalidRequestException):
    pass


class LimitExceededException(InvalidRequestException):
    pass


class ThrottlingException(InvalidRequestException):
    pass


class ConflictingOperationException(InvalidRequestException):
    pass


class ID(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$',
        ),
    ]


class ServiceUnavailableException(InvalidRequestException):
    pass


class PortalResource(BaseModel):
    """
    Identifies an IoT SiteWise Monitor portal.
    """

    id: ID


class ProjectResource(PortalResource):
    """
    Identifies a specific IoT SiteWise Monitor project.
    """

    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class ResourceAlreadyExistsException(InvalidRequestException):
    pass


class ImageFileData(BaseModel):
    __root__: Annotated[str, Field(max_length=1500000, min_length=1)]


class ImageFileType(Enum):
    PNG = 'PNG'


class ARN(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1, regex='.*')]


class CreateProjectResponse(BaseModel):
    projectId: ID
    projectArn: ARN


class DeleteAccessPolicyResponse(BaseModel):
    pass


class DeleteDashboardResponse(DeleteAccessPolicyResponse):
    pass


class DeleteProjectResponse(DeleteAccessPolicyResponse):
    pass


class AggregateType(Enum):
    AVERAGE = 'AVERAGE'
    COUNT = 'COUNT'
    MAXIMUM = 'MAXIMUM'
    MINIMUM = 'MINIMUM'
    SUM = 'SUM'
    STANDARD_DEVIATION = 'STANDARD_DEVIATION'


class Quality(Enum):
    GOOD = 'GOOD'
    BAD = 'BAD'
    UNCERTAIN = 'UNCERTAIN'


class UnauthorizedException(InvalidRequestException):
    pass


class PutLoggingOptionsResponse(DeleteAccessPolicyResponse):
    pass


class LoggingLevel(Enum):
    ERROR = 'ERROR'
    INFO = 'INFO'
    OFF = 'OFF'


class CustomerManagedS3Storage(BaseModel):
    """
    Contains information about a customer managed Amazon S3 bucket.
    """

    s3ResourceArn: ARN
    roleArn: ARN


class TagResourceResponse(DeleteAccessPolicyResponse):
    pass


class TooManyTagsException(InvalidRequestException):
    pass


class UntagResourceResponse(DeleteAccessPolicyResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class UpdateAccessPolicyResponse(DeleteAccessPolicyResponse):
    pass


class UpdateDashboardResponse(DeleteAccessPolicyResponse):
    pass


class ImageFile(BaseModel):
    """
    Contains an image file.
    """

    data: ImageFileData
    type: ImageFileType


class UpdateProjectResponse(DeleteAccessPolicyResponse):
    pass


class Resource(BaseModel):
    """
    Contains an IoT SiteWise Monitor resource ID for a portal or project.
    """

    portal: Optional[PortalResource] = None
    project: Optional[ProjectResource] = None


class Permission(Enum):
    ADMINISTRATOR = 'ADMINISTRATOR'
    VIEWER = 'VIEWER'


class Timestamp(BaseModel):
    __root__: datetime


class AggregateTypes(BaseModel):
    __root__: Annotated[List[AggregateType], Field(min_items=1)]


class AggregatedDoubleValue(BaseModel):
    __root__: float


class Aggregates(BaseModel):
    """
    Contains the (pre-calculated) aggregate values for an asset property.
    """

    average: Optional[AggregatedDoubleValue] = None
    count: Optional[AggregatedDoubleValue] = None
    maximum: Optional[AggregatedDoubleValue] = None
    minimum: Optional[AggregatedDoubleValue] = None
    sum: Optional[AggregatedDoubleValue] = None
    standardDeviation: Optional[AggregatedDoubleValue] = None


class AggregatedValue(BaseModel):
    """
    Contains aggregated asset property values (for example, average, minimum, and maximum).
    """

    timestamp: Timestamp
    quality: Optional[Quality] = None
    value: Aggregates


class AggregatedValues(BaseModel):
    __root__: List[AggregatedValue]


class Alarms(BaseModel):
    """
    Contains the configuration information of an alarm created in an IoT SiteWise Monitor portal. You can use the alarm to monitor an asset property and get notified when the asset property value is outside a specified range. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/appguide/monitor-alarms.html">Monitoring with alarms</a> in the <i>IoT SiteWise Application Guide</i>.
    """

    alarmRoleArn: ARN
    notificationLambdaArn: Optional[ARN] = None


class AmazonResourceName(BaseModel):
    __root__: Annotated[str, Field(max_length=1011, min_length=1)]


class Name(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[^\\u0000-\\u001F\\u007F]+')
    ]


class Description(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='[^\\u0000-\\u001F\\u007F]+')
    ]


class AssetCompositeModel(BaseModel):
    """
    Contains information about a composite model in an asset. This object contains the asset's properties that you define in the composite model.
    """

    name: Name
    description: Optional[Description] = None
    type: Name
    properties: Annotated[
        Any,
        Field(description='The asset properties that this composite model defines.'),
    ]


class AssetCompositeModels(BaseModel):
    __root__: List[AssetCompositeModel]


class AssetErrorCode(Enum):
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'


class AssetErrorMessage(BaseModel):
    __root__: str


class AssetErrorDetails(BaseModel):
    """
    Contains error details for the requested associate project asset action.
    """

    assetId: ID
    code: AssetErrorCode
    message: AssetErrorMessage


class AssetHierarchy(BaseModel):
    """
    Describes an asset hierarchy that contains a hierarchy's name and ID.
    """

    id: Optional[ID] = None
    name: Name


class AssetHierarchies(BaseModel):
    __root__: List[AssetHierarchy]


class AssetHierarchyInfo(BaseModel):
    """
    Contains information about a parent asset and a child asset that are related through an asset hierarchy.
    """

    parentAssetId: Optional[ID] = None
    childAssetId: Optional[ID] = None


class AssetIDs(BaseModel):
    __root__: List[ID]


class PropertyDataType(Enum):
    STRING = 'STRING'
    INTEGER = 'INTEGER'
    DOUBLE = 'DOUBLE'
    BOOLEAN = 'BOOLEAN'
    STRUCT = 'STRUCT'


class PropertyUnit(Name):
    pass


class AssetModelState(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    PROPAGATING = 'PROPAGATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class PropertyAlias(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[^\\u0000-\\u001F\\u007F]+')]


class AssetPropertyAlias(Description):
    pass


class AssetRelationshipType(Enum):
    HIERARCHY = 'HIERARCHY'


class AssetState(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class ClientToken(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=36, regex='\\S{36,64}')]


class AssociateAssetsRequest(BaseModel):
    hierarchyId: ID
    childAssetId: ID
    clientToken: Optional[ClientToken] = None


class DefaultValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='[^\\u0000-\\u001F\\u007F]+')
    ]


class Attribute(BaseModel):
    """
    Contains an asset attribute property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#attributes">Attributes</a> in the <i>IoT SiteWise User Guide</i>.
    """

    defaultValue: Optional[DefaultValue] = None


class AuthMode(Enum):
    IAM = 'IAM'
    SSO = 'SSO'


class BatchAssociateProjectAssetsErrors(BaseModel):
    __root__: List[AssetErrorDetails]


class IDs(BaseModel):
    __root__: Annotated[List[ID], Field(max_items=100, min_items=1)]


class BatchAssociateProjectAssetsRequest(BaseModel):
    assetIds: IDs
    clientToken: Optional[ClientToken] = None


class BatchDisassociateProjectAssetsErrors(BatchAssociateProjectAssetsErrors):
    pass


class BatchDisassociateProjectAssetsRequest(BaseModel):
    assetIds: IDs
    clientToken: Optional[ClientToken] = None


class BatchPutAssetPropertyValueErrorCode(Enum):
    ResourceNotFoundException = 'ResourceNotFoundException'
    InvalidRequestException = 'InvalidRequestException'
    InternalFailureException = 'InternalFailureException'
    ServiceUnavailableException = 'ServiceUnavailableException'
    ThrottlingException = 'ThrottlingException'
    LimitExceededException = 'LimitExceededException'
    ConflictingOperationException = 'ConflictingOperationException'
    TimestampOutOfRangeException = 'TimestampOutOfRangeException'
    AccessDeniedException = 'AccessDeniedException'


class ErrorMessage(AssetErrorMessage):
    pass


class EntryId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9_-]+$')
    ]


class CapabilityConfiguration(BaseModel):
    __root__: Annotated[str, Field(max_length=104857600, min_length=1)]


class CapabilityNamespace(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='^[a-zA-Z]+:[a-zA-Z]+:[0-9]+$')
    ]


class CapabilitySyncStatus(Enum):
    IN_SYNC = 'IN_SYNC'
    OUT_OF_SYNC = 'OUT_OF_SYNC'
    SYNC_FAILED = 'SYNC_FAILED'
    UNKNOWN = 'UNKNOWN'


class ComputeLocation(Enum):
    EDGE = 'EDGE'
    CLOUD = 'CLOUD'


class ErrorCode(Enum):
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'


class ConfigurationErrorDetails(BaseModel):
    """
    Contains the details of an IoT SiteWise configuration error.
    """

    code: ErrorCode
    message: ErrorMessage


class ConfigurationState(Enum):
    ACTIVE = 'ACTIVE'
    UPDATE_IN_PROGRESS = 'UPDATE_IN_PROGRESS'
    UPDATE_FAILED = 'UPDATE_FAILED'


class ConfigurationStatus(BaseModel):
    """
    Contains current status information for the configuration.
    """

    state: ConfigurationState
    error: Optional[ConfigurationErrorDetails] = None


class CoreDeviceThingName(TagKey):
    pass


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateAssetRequest(BaseModel):
    assetName: Name
    assetModelId: ID
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class DashboardDefinition(BaseModel):
    __root__: Annotated[str, Field(max_length=204800, min_length=0, regex='.+')]


class CreateDashboardRequest(BaseModel):
    projectId: ID
    dashboardName: Name
    dashboardDescription: Optional[Description] = None
    dashboardDefinition: DashboardDefinition
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class Email(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='[^@]+@[^@]+')]


class CreatePortalRequest(BaseModel):
    portalName: Name
    portalDescription: Optional[Description] = None
    portalContactEmail: Email
    clientToken: Optional[ClientToken] = None
    portalLogoImageFile: Optional[ImageFile] = None
    roleArn: ARN
    tags: Optional[TagMap] = None
    portalAuthMode: Optional[AuthMode] = None
    notificationSenderEmail: Optional[Email] = None
    alarms: Optional[Alarms] = None


class Url(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^(http|https)\\://\\S+')
    ]


class SSOApplicationId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='^[!-~]*')]


class CreateProjectRequest(BaseModel):
    portalId: ID
    projectName: Name
    projectDescription: Optional[Description] = None
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class DashboardSummary(BaseModel):
    """
    Contains a dashboard summary.
    """

    id: ID
    name: Name
    description: Optional[Description] = None
    creationDate: Optional[Timestamp] = None
    lastUpdateDate: Optional[Timestamp] = None


class DashboardSummaries(BaseModel):
    __root__: List[DashboardSummary]


class DeleteAccessPolicyRequest(BaseModel):
    pass


class DeleteAssetModelRequest(BaseModel):
    pass


class DeleteAssetRequest(BaseModel):
    pass


class DeleteDashboardRequest(BaseModel):
    pass


class DeleteGatewayRequest(BaseModel):
    pass


class DeletePortalRequest(BaseModel):
    pass


class DeleteProjectRequest(BaseModel):
    pass


class DescribeAccessPolicyRequest(BaseModel):
    pass


class DescribeAssetModelRequest(BaseModel):
    pass


class DescribeAssetPropertyRequest(BaseModel):
    pass


class DescribeAssetRequest(BaseModel):
    pass


class DescribeDashboardRequest(BaseModel):
    pass


class DescribeDefaultEncryptionConfigurationRequest(BaseModel):
    pass


class EncryptionType(Enum):
    SITEWISE_DEFAULT_ENCRYPTION = 'SITEWISE_DEFAULT_ENCRYPTION'
    KMS_BASED_ENCRYPTION = 'KMS_BASED_ENCRYPTION'


class DescribeGatewayCapabilityConfigurationRequest(BaseModel):
    pass


class DescribeGatewayRequest(BaseModel):
    pass


class DescribeLoggingOptionsRequest(BaseModel):
    pass


class LoggingOptions(BaseModel):
    """
    Contains logging options.
    """

    level: LoggingLevel


class DescribePortalRequest(BaseModel):
    pass


class PortalClientId(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='^[!-~]*')]


class ImageLocation(BaseModel):
    """
    Contains an image that is uploaded to IoT SiteWise and available at a URL.
    """

    id: ID
    url: Url


class DescribeProjectRequest(BaseModel):
    pass


class DescribeStorageConfigurationRequest(BaseModel):
    pass


class StorageType(Enum):
    SITEWISE_DEFAULT_STORAGE = 'SITEWISE_DEFAULT_STORAGE'
    MULTI_LAYER_STORAGE = 'MULTI_LAYER_STORAGE'


class MultiLayerStorage(BaseModel):
    """
    Contains information about the storage destination.
    """

    customerManagedS3Storage: CustomerManagedS3Storage


class DetailedErrorCode(Enum):
    INCOMPATIBLE_COMPUTE_LOCATION = 'INCOMPATIBLE_COMPUTE_LOCATION'
    INCOMPATIBLE_FORWARDING_CONFIGURATION = 'INCOMPATIBLE_FORWARDING_CONFIGURATION'


class DetailedErrorMessage(AssetErrorMessage):
    pass


class DetailedError(BaseModel):
    """
    Contains detailed error information.
    """

    code: DetailedErrorCode
    message: DetailedErrorMessage


class DetailedErrors(BaseModel):
    __root__: List[DetailedError]


class DisassociateAssetsRequest(BaseModel):
    hierarchyId: ID
    childAssetId: ID
    clientToken: Optional[ClientToken] = None


class Expression(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class VariableName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-z][a-z0-9_]*$')
    ]


class ForwardingConfigState(Enum):
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


class ForwardingConfig(BaseModel):
    """
    The forwarding configuration for a given property.
    """

    state: ForwardingConfigState


class GatewayCapabilitySummary(BaseModel):
    """
    Contains a summary of a gateway capability configuration.
    """

    capabilityNamespace: CapabilityNamespace
    capabilitySyncStatus: CapabilitySyncStatus


class Resolution(BaseModel):
    __root__: Annotated[str, Field(max_length=2, min_length=2, regex='1m|1h|1d')]


class Qualities(BaseModel):
    __root__: Annotated[List[Quality], Field(max_items=1, min_items=1)]


class TimeOrdering(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class NextToken(BaseModel):
    __root__: Annotated[
        str, Field(max_length=4096, min_length=1, regex='[A-Za-z0-9+/=]+')
    ]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=250.0)]


class GetAssetPropertyAggregatesRequest(BaseModel):
    pass


class GetAssetPropertyValueHistoryRequest(BaseModel):
    pass


class GetAssetPropertyValueRequest(BaseModel):
    pass


class TimeInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=3.15568898644032e16)]


class OffsetInNanos(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=999999999.0)]


class IntervalInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=320000000.0)]


class MaxInterpolatedResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class InterpolationType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class IntervalWindowInSeconds(IntervalInSeconds):
    pass


class GetInterpolatedAssetPropertyValuesRequest(BaseModel):
    pass


class IdentityId(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='\\S+')]


class IdentityType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'
    IAM = 'IAM'


class Image(BaseModel):
    """
    <p>Contains an image that is one of the following:</p> <ul> <li> <p>An image file. Choose this option to upload a new image.</p> </li> <li> <p>The ID of an existing image. Choose this option to keep an existing image.</p> </li> </ul>
    """

    id: Optional[ID] = None
    file: Optional[ImageFile] = None


class Interval(BaseModel):
    __root__: Annotated[str, Field(max_length=23, min_length=2)]


class KmsKeyId(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class ResourceType(Enum):
    PORTAL = 'PORTAL'
    PROJECT = 'PROJECT'


class ListAccessPoliciesRequest(BaseModel):
    pass


class ListAssetModelsRequest(BaseModel):
    pass


class TraversalType(Enum):
    PATH_TO_ROOT = 'PATH_TO_ROOT'


class ListAssetRelationshipsRequest(BaseModel):
    pass


class ListAssetsFilter(Enum):
    ALL = 'ALL'
    TOP_LEVEL = 'TOP_LEVEL'


class ListAssetsRequest(BaseModel):
    pass


class TraversalDirection(Enum):
    PARENT = 'PARENT'
    CHILD = 'CHILD'


class ListAssociatedAssetsRequest(BaseModel):
    pass


class ListDashboardsRequest(BaseModel):
    pass


class ListGatewaysRequest(BaseModel):
    pass


class ListPortalsRequest(BaseModel):
    pass


class ListProjectAssetsRequest(BaseModel):
    pass


class ListProjectsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class Macro(Name):
    pass


class MeasurementProcessingConfig(BaseModel):
    """
    The processing configuration for the given measurement property. You can configure measurements to be kept at the edge or forwarded to the Amazon Web Services Cloud. By default, measurements are forwarded to the cloud.
    """

    forwardingConfig: ForwardingConfig


class Measurement(BaseModel):
    """
    Contains an asset measurement property. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#measurements">Measurements</a> in the <i>IoT SiteWise User Guide</i>.
    """

    processingConfig: Optional[MeasurementProcessingConfig] = None


class MetricProcessingConfig(BaseModel):
    """
    The processing configuration for the given metric property. You can configure metrics to be computed at the edge or in the Amazon Web Services Cloud. By default, metrics are forwarded to the cloud.
    """

    computeLocation: ComputeLocation


class MonitorErrorCode(Enum):
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    LIMIT_EXCEEDED = 'LIMIT_EXCEEDED'


class MonitorErrorMessage(AssetErrorMessage):
    pass


class MonitorErrorDetails(BaseModel):
    """
    Contains IoT SiteWise Monitor error details.
    """

    code: Optional[MonitorErrorCode] = None
    message: Optional[MonitorErrorMessage] = None


class Offset(BaseModel):
    __root__: Annotated[str, Field(max_length=25, min_length=2)]


class PortalState(Enum):
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    ACTIVE = 'ACTIVE'
    FAILED = 'FAILED'


class ProjectSummary(DashboardSummary):
    """
    Contains project summary information.
    """

    pass


class PropertyNotificationTopic(AssetErrorMessage):
    pass


class PropertyNotificationState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class PropertyValueBooleanValue(BaseModel):
    __root__: bool


class PropertyValueDoubleValue(AggregatedDoubleValue):
    pass


class PropertyValueIntegerValue(BaseModel):
    __root__: int


class PropertyValueStringValue(BaseModel):
    __root__: Annotated[str, Field(regex='[^\\u0000-\\u001F\\u007F]+')]


class PutDefaultEncryptionConfigurationRequest(BaseModel):
    encryptionType: EncryptionType
    kmsKeyId: Optional[KmsKeyId] = None


class PutLoggingOptionsRequest(BaseModel):
    loggingOptions: LoggingOptions


class PutStorageConfigurationRequest(BaseModel):
    storageType: StorageType
    multiLayerStorage: Optional[MultiLayerStorage] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class TransformProcessingConfig(BaseModel):
    """
    The processing configuration for the given transform property. You can configure transforms to be kept at the edge or forwarded to the Amazon Web Services Cloud. You can also configure transforms to be computed at the edge or in the cloud.
    """

    computeLocation: ComputeLocation
    forwardingConfig: Optional[ForwardingConfig] = None


class UntagResourceRequest(BaseModel):
    pass


class UpdateAssetPropertyRequest(BaseModel):
    propertyAlias: Optional[PropertyAlias] = None
    propertyNotificationState: Optional[PropertyNotificationState] = None
    clientToken: Optional[ClientToken] = None


class UpdateAssetRequest(BaseModel):
    assetName: Name
    clientToken: Optional[ClientToken] = None


class UpdateDashboardRequest(BaseModel):
    dashboardName: Name
    dashboardDescription: Optional[Description] = None
    dashboardDefinition: DashboardDefinition
    clientToken: Optional[ClientToken] = None


class UpdateGatewayCapabilityConfigurationRequest(BaseModel):
    capabilityNamespace: CapabilityNamespace
    capabilityConfiguration: CapabilityConfiguration


class UpdateGatewayRequest(BaseModel):
    gatewayName: Name


class UpdatePortalRequest(BaseModel):
    portalName: Name
    portalDescription: Optional[Description] = None
    portalContactEmail: Email
    portalLogoImage: Optional[Image] = None
    roleArn: ARN
    clientToken: Optional[ClientToken] = None
    notificationSenderEmail: Optional[Email] = None
    alarms: Optional[Alarms] = None


class UpdateProjectRequest(BaseModel):
    projectName: Name
    projectDescription: Optional[Description] = None
    clientToken: Optional[ClientToken] = None


class BatchAssociateProjectAssetsResponse(BaseModel):
    errors: Optional[BatchAssociateProjectAssetsErrors] = None


class BatchDisassociateProjectAssetsResponse(BaseModel):
    errors: Optional[BatchDisassociateProjectAssetsErrors] = None


class CreateAccessPolicyResponse(BaseModel):
    accessPolicyId: ID
    accessPolicyArn: ARN


class UserIdentity(BaseModel):
    """
    Contains information for a user identity in an access policy.
    """

    id: IdentityId


class GroupIdentity(UserIdentity):
    """
    Contains information for a group identity in an access policy.
    """

    pass


class IAMUserIdentity(BaseModel):
    """
    Contains information about an Identity and Access Management user.
    """

    arn: ARN


class IAMRoleIdentity(IAMUserIdentity):
    """
    Contains information about an Identity and Access Management role. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html">IAM roles</a> in the <i>IAM User Guide</i>.
    """

    pass


class AssetModelHierarchyDefinition(BaseModel):
    """
    Contains an asset model hierarchy used in asset model creation. An asset model hierarchy determines the kind (or type) of asset that can belong to a hierarchy.
    """

    name: Name
    childAssetModelId: ID


class AssetModelCompositeModelDefinition(BaseModel):
    """
    Contains a composite model definition in an asset model. This composite model definition is applied to all assets created from the asset model.
    """

    name: Name
    description: Optional[Description] = None
    type: Name
    properties: Annotated[
        Optional[Any],
        Field(description='The asset property definitions for this composite model.'),
    ] = None


class CreateDashboardResponse(BaseModel):
    dashboardId: ID
    dashboardArn: ARN


class CreateGatewayResponse(BaseModel):
    gatewayId: ID
    gatewayArn: ARN


class Greengrass(BaseModel):
    """
    Contains details for a gateway that runs on IoT Greengrass. To create a gateway that runs on IoT Greengrass, you must add the IoT SiteWise connector to a Greengrass group and deploy it. Your Greengrass group must also have permissions to upload data to IoT SiteWise. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/gateway-connector.html">Ingesting data using a gateway</a> in the <i>IoT SiteWise User Guide</i>.
    """

    groupArn: ARN


class GreengrassV2(BaseModel):
    """
    Contains details for a gateway that runs on IoT Greengrass V2. To create a gateway that runs on IoT Greengrass V2, you must deploy the IoT SiteWise Edge component to your gateway device. Your <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/device-service-role.html">Greengrass device role</a> must use the <code>AWSIoTSiteWiseEdgeAccess</code> policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/sw-gateways.html">Using IoT SiteWise at the edge</a> in the <i>IoT SiteWise User Guide</i>.
    """

    coreDeviceThingName: CoreDeviceThingName


class DescribeDashboardResponse(BaseModel):
    dashboardId: ID
    dashboardArn: ARN
    dashboardName: Name
    projectId: ID
    dashboardDescription: Optional[Description] = None
    dashboardDefinition: DashboardDefinition
    dashboardCreationDate: Timestamp
    dashboardLastUpdateDate: Timestamp


class DescribeDefaultEncryptionConfigurationResponse(BaseModel):
    encryptionType: EncryptionType
    kmsKeyArn: Optional[ARN] = None
    configurationStatus: ConfigurationStatus


class DescribeGatewayCapabilityConfigurationResponse(BaseModel):
    gatewayId: ID
    capabilityNamespace: CapabilityNamespace
    capabilityConfiguration: CapabilityConfiguration
    capabilitySyncStatus: CapabilitySyncStatus


class DescribeLoggingOptionsResponse(BaseModel):
    loggingOptions: LoggingOptions


class DescribeProjectResponse(BaseModel):
    projectId: ID
    projectArn: ARN
    projectName: Name
    portalId: ID
    projectDescription: Optional[Description] = None
    projectCreationDate: Timestamp
    projectLastUpdateDate: Timestamp


class DescribeStorageConfigurationResponse(BaseModel):
    storageType: StorageType
    multiLayerStorage: Optional[MultiLayerStorage] = None
    configurationStatus: ConfigurationStatus
    lastUpdateDate: Optional[Timestamp] = None


class GetAssetPropertyAggregatesResponse(BaseModel):
    aggregatedValues: AggregatedValues
    nextToken: Optional[NextToken] = None


class ListDashboardsResponse(BaseModel):
    dashboardSummaries: DashboardSummaries
    nextToken: Optional[NextToken] = None


class ListProjectAssetsResponse(BaseModel):
    assetIds: AssetIDs
    nextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class PutDefaultEncryptionConfigurationResponse(
    DescribeDefaultEncryptionConfigurationResponse
):
    pass


class PutStorageConfigurationResponse(BaseModel):
    storageType: StorageType
    multiLayerStorage: Optional[MultiLayerStorage] = None
    configurationStatus: ConfigurationStatus


class AssetModelHierarchy(BaseModel):
    """
    Describes an asset hierarchy that contains a hierarchy's name, ID, and child asset model ID that specifies the type of asset that can be in this hierarchy.
    """

    id: Optional[ID] = None
    name: Name
    childAssetModelId: ID


class AssetModelCompositeModel(AssetModelCompositeModelDefinition):
    """
    Contains information about a composite model in an asset model. This object contains the asset property definitions that you define in the composite model.
    """

    pass


class UpdateGatewayCapabilityConfigurationResponse(GatewayCapabilitySummary):
    pass


class Identity(BaseModel):
    """
    <p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can't use Amazon Web Services APIs to retrieve Amazon Web Services SSO identity IDs. You can find the Amazon Web Services SSO identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">Amazon Web Services SSO console</a>.</p> </note>
    """

    user: Optional[UserIdentity] = None
    group: Optional[GroupIdentity] = None
    iamUser: Optional[IAMUserIdentity] = None
    iamRole: Optional[IAMRoleIdentity] = None


class AssetModelCompositeModelDefinitions(BaseModel):
    __root__: List[AssetModelCompositeModelDefinition]


class AssetModelCompositeModels(BaseModel):
    __root__: List[AssetModelCompositeModel]


class AssetModelHierarchies(BaseModel):
    __root__: List[AssetModelHierarchy]


class AssetModelHierarchyDefinitions(BaseModel):
    __root__: List[AssetModelHierarchyDefinition]


class ErrorDetails(BaseModel):
    """
    Contains the details of an IoT SiteWise error.
    """

    code: ErrorCode
    message: ErrorMessage
    details: Optional[DetailedErrors] = None


class AssetModelStatus(BaseModel):
    """
    Contains current status information for an asset model. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.
    """

    state: AssetModelState
    error: Optional[ErrorDetails] = None


class AssetModelSummary(BaseModel):
    """
    Contains a summary of an asset model.
    """

    id: ID
    arn: ARN
    name: Name
    description: Description
    creationDate: Timestamp
    lastUpdateDate: Timestamp
    status: AssetModelStatus


class AssetModelSummaries(BaseModel):
    __root__: List[AssetModelSummary]


class PropertyNotification(BaseModel):
    """
    Contains asset property value notification information. When the notification state is enabled, IoT SiteWise publishes property value updates to a unique MQTT topic. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/interact-with-other-services.html">Interacting with other services</a> in the <i>IoT SiteWise User Guide</i>.
    """

    topic: PropertyNotificationTopic
    state: PropertyNotificationState


class Variant(BaseModel):
    """
    Contains an asset property value (of a single type only).
    """

    stringValue: Optional[PropertyValueStringValue] = None
    integerValue: Optional[PropertyValueIntegerValue] = None
    doubleValue: Optional[PropertyValueDoubleValue] = None
    booleanValue: Optional[PropertyValueBooleanValue] = None


class TimeInNanos(BaseModel):
    """
    Contains a timestamp with optional nanosecond granularity.
    """

    timeInSeconds: TimeInSeconds
    offsetInNanos: Optional[OffsetInNanos] = None


class AssetPropertyValue(BaseModel):
    """
    Contains asset property value information.
    """

    value: Variant
    timestamp: TimeInNanos
    quality: Optional[Quality] = None


class AssetPropertyValueHistory(BaseModel):
    __root__: List[AssetPropertyValue]


class AssetPropertyValues(AssetPropertyValueHistory):
    pass


class AssetRelationshipSummary(BaseModel):
    """
    Contains information about assets that are related to one another.
    """

    hierarchyInfo: Optional[AssetHierarchyInfo] = None
    relationshipType: AssetRelationshipType


class AssetRelationshipSummaries(BaseModel):
    __root__: List[AssetRelationshipSummary]


class AssetStatus(BaseModel):
    """
    Contains information about the current status of an asset. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-and-model-states.html">Asset and model states</a> in the <i>IoT SiteWise User Guide</i>.
    """

    state: AssetState
    error: Optional[ErrorDetails] = None


class AssetSummary(BaseModel):
    """
    Contains a summary of an asset.
    """

    id: ID
    arn: ARN
    name: Name
    assetModelId: ID
    creationDate: Timestamp
    lastUpdateDate: Timestamp
    status: AssetStatus
    hierarchies: AssetHierarchies


class AssetSummaries(BaseModel):
    __root__: List[AssetSummary]


class AssociatedAssetsSummary(AssetSummary):
    """
    Contains a summary of an associated asset.
    """

    pass


class AssociatedAssetsSummaries(BaseModel):
    __root__: List[AssociatedAssetsSummary]


class Timestamps(BaseModel):
    __root__: List[TimeInNanos]


class BatchPutAssetPropertyError(BaseModel):
    """
    Contains error information from updating a batch of asset property values.
    """

    errorCode: BatchPutAssetPropertyValueErrorCode
    errorMessage: ErrorMessage
    timestamps: Timestamps


class BatchPutAssetPropertyErrors(BaseModel):
    __root__: List[BatchPutAssetPropertyError]


class CreateAccessPolicyRequest(BaseModel):
    accessPolicyIdentity: Identity
    accessPolicyResource: Resource
    accessPolicyPermission: Permission
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class GatewayPlatform(BaseModel):
    """
    Contains a gateway's platform information.
    """

    greengrass: Optional[Greengrass] = None
    greengrassV2: Optional[GreengrassV2] = None


class CreateGatewayRequest(BaseModel):
    gatewayName: Name
    gatewayPlatform: GatewayPlatform
    tags: Optional[TagMap] = None


class PortalStatus(BaseModel):
    """
    Contains information about the current status of a portal.
    """

    state: PortalState
    error: Optional[MonitorErrorDetails] = None


class GatewayCapabilitySummaries(BaseModel):
    __root__: List[GatewayCapabilitySummary]


class VariableValue(BaseModel):
    """
    Identifies a property value used in an expression.
    """

    propertyId: Macro
    hierarchyId: Optional[Macro] = None


class ExpressionVariable(BaseModel):
    """
    Contains expression variable information.
    """

    name: VariableName
    value: VariableValue


class ExpressionVariables(BaseModel):
    __root__: List[ExpressionVariable]


class GatewaySummary(BaseModel):
    """
    Contains a summary of a gateway.
    """

    gatewayId: ID
    gatewayName: Name
    gatewayPlatform: Optional[GatewayPlatform] = None
    gatewayCapabilitySummaries: Optional[GatewayCapabilitySummaries] = None
    creationDate: Timestamp
    lastUpdateDate: Timestamp


class GatewaySummaries(BaseModel):
    __root__: List[GatewaySummary]


class InterpolatedAssetPropertyValue(BaseModel):
    """
    Contains information about an interpolated asset property value.
    """

    timestamp: TimeInNanos
    value: Variant


class ProjectSummaries(BaseModel):
    __root__: List[ProjectSummary]


class TumblingWindow(BaseModel):
    """
    <p>Contains a tumbling window, which is a repeating fixed-sized, non-overlapping, and contiguous time window. You use this window in metrics to aggregate data from properties and other assets.</p> <p>You can use <code>m</code>, <code>h</code>, <code>d</code>, and <code>w</code> when you specify an interval or offset. Note that <code>m</code> represents minutes, and <code>w</code> represents weeks. You can also use <code>s</code> to represent seconds in <code>offset</code>.</p> <p>The <code>interval</code> and <code>offset</code> parameters support the <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601 format</a>. For example, <code>PT5S</code> represents five seconds, <code>PT5M</code> represents five minutes, and <code>PT5H</code> represents five hours.</p>
    """

    interval: Interval
    offset: Optional[Offset] = None


class PortalSummary(BaseModel):
    """
    Contains a portal summary.
    """

    id: ID
    name: Name
    description: Optional[Description] = None
    startUrl: Url
    creationDate: Optional[Timestamp] = None
    lastUpdateDate: Optional[Timestamp] = None
    roleArn: Optional[ARN] = None
    status: PortalStatus


class Transform(BaseModel):
    """
    <p>Contains an asset transform property. A transform is a one-to-one mapping of a property's data points from one form to another. For example, you can use a transform to convert a Celsius data stream to Fahrenheit by applying the transformation expression to each data point of the Celsius stream. A transform can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#transforms">Transforms</a> in the <i>IoT SiteWise User Guide</i>.</p>
    """

    expression: Expression
    variables: ExpressionVariables
    processingConfig: Optional[TransformProcessingConfig] = None


class UpdateAccessPolicyRequest(BaseModel):
    accessPolicyIdentity: Identity
    accessPolicyResource: Resource
    accessPolicyPermission: Permission
    clientToken: Optional[ClientToken] = None


class PutAssetPropertyValueEntry(BaseModel):
    """
    Contains a list of value updates for an asset property in the list of asset entries consumed by the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API operation.
    """

    entryId: EntryId
    assetId: Optional[ID] = None
    propertyId: Optional[ID] = None
    propertyAlias: Optional[AssetPropertyAlias] = None
    propertyValues: AssetPropertyValues


class CreateAssetResponse(BaseModel):
    assetId: ID
    assetArn: ARN
    assetStatus: AssetStatus


class CreateAssetModelResponse(BaseModel):
    assetModelId: ID
    assetModelArn: ARN
    assetModelStatus: AssetModelStatus


class CreatePortalResponse(BaseModel):
    portalId: ID
    portalArn: ARN
    portalStartUrl: Url
    portalStatus: PortalStatus
    ssoApplicationId: SSOApplicationId


class DeleteAssetResponse(BaseModel):
    assetStatus: AssetStatus


class DeleteAssetModelResponse(BaseModel):
    assetModelStatus: AssetModelStatus


class DeletePortalResponse(BaseModel):
    portalStatus: PortalStatus


class DescribeAccessPolicyResponse(BaseModel):
    accessPolicyId: ID
    accessPolicyArn: ARN
    accessPolicyIdentity: Identity
    accessPolicyResource: Resource
    accessPolicyPermission: Permission
    accessPolicyCreationDate: Timestamp
    accessPolicyLastUpdateDate: Timestamp


class DescribeGatewayResponse(BaseModel):
    gatewayId: ID
    gatewayName: Name
    gatewayArn: ARN
    gatewayPlatform: Optional[GatewayPlatform] = None
    gatewayCapabilitySummaries: GatewayCapabilitySummaries
    creationDate: Timestamp
    lastUpdateDate: Timestamp


class DescribePortalResponse(BaseModel):
    portalId: ID
    portalArn: ARN
    portalName: Name
    portalDescription: Optional[Description] = None
    portalClientId: PortalClientId
    portalStartUrl: Url
    portalContactEmail: Email
    portalStatus: PortalStatus
    portalCreationDate: Timestamp
    portalLastUpdateDate: Timestamp
    portalLogoImageLocation: Optional[ImageLocation] = None
    roleArn: Optional[ARN] = None
    portalAuthMode: Optional[AuthMode] = None
    notificationSenderEmail: Optional[Email] = None
    alarms: Optional[Alarms] = None


class GetAssetPropertyValueResponse(BaseModel):
    propertyValue: Optional[AssetPropertyValue] = None


class GetAssetPropertyValueHistoryResponse(BaseModel):
    assetPropertyValueHistory: AssetPropertyValueHistory
    nextToken: Optional[NextToken] = None


class ListAssetModelsResponse(BaseModel):
    assetModelSummaries: AssetModelSummaries
    nextToken: Optional[NextToken] = None


class ListAssetRelationshipsResponse(BaseModel):
    assetRelationshipSummaries: AssetRelationshipSummaries
    nextToken: Optional[NextToken] = None


class ListAssetsResponse(BaseModel):
    assetSummaries: AssetSummaries
    nextToken: Optional[NextToken] = None


class ListAssociatedAssetsResponse(BaseModel):
    assetSummaries: AssociatedAssetsSummaries
    nextToken: Optional[NextToken] = None


class ListGatewaysResponse(BaseModel):
    gatewaySummaries: GatewaySummaries
    nextToken: Optional[NextToken] = None


class ListProjectsResponse(BaseModel):
    projectSummaries: ProjectSummaries
    nextToken: Optional[NextToken] = None


class UpdateAssetResponse(DeleteAssetResponse):
    pass


class UpdateAssetModelResponse(DeleteAssetModelResponse):
    pass


class UpdatePortalResponse(DeletePortalResponse):
    pass


class AccessPolicySummary(BaseModel):
    """
    Contains an access policy that defines an identity's access to an IoT SiteWise Monitor resource.
    """

    id: ID
    identity: Identity
    resource: Resource
    permission: Permission
    creationDate: Optional[Timestamp] = None
    lastUpdateDate: Optional[Timestamp] = None


class AccessPolicySummaries(BaseModel):
    __root__: List[AccessPolicySummary]


class AssetProperty1(BaseModel):
    """
    Contains asset property information.
    """

    id: ID
    name: Name
    alias: Optional[PropertyAlias] = None
    notification: Optional[PropertyNotification] = None
    dataType: PropertyDataType
    dataTypeSpec: Optional[Name] = None
    unit: Optional[PropertyUnit] = None


class AssetProperties(BaseModel):
    __root__: List[AssetProperty1]


class BatchPutAssetPropertyErrorEntry(BaseModel):
    """
    Contains error information for asset property value entries that are associated with the <a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_BatchPutAssetPropertyValue.html">BatchPutAssetPropertyValue</a> API.
    """

    entryId: EntryId
    errors: BatchPutAssetPropertyErrors


class BatchPutAssetPropertyErrorEntries(BaseModel):
    __root__: List[BatchPutAssetPropertyErrorEntry]


class PutAssetPropertyValueEntries(BaseModel):
    __root__: List[PutAssetPropertyValueEntry]


class BatchPutAssetPropertyValueRequest(BaseModel):
    entries: PutAssetPropertyValueEntries


class InterpolatedAssetPropertyValues(BaseModel):
    __root__: List[InterpolatedAssetPropertyValue]


class PortalSummaries(BaseModel):
    __root__: List[PortalSummary]


class MetricWindow(BaseModel):
    """
    Contains a time interval window used for data aggregate computations (for example, average, sum, count, and so on).
    """

    tumbling: Optional[TumblingWindow] = None


class Metric(BaseModel):
    """
    <p>Contains an asset metric property. With metrics, you can calculate aggregate functions, such as an average, maximum, or minimum, as specified through an expression. A metric maps several values to a single value (such as a sum).</p> <p>The maximum number of dependent/cascading variables used in any one metric calculation is 10. Therefore, a <i>root</i> metric can have up to 10 cascading metrics in its computational dependency tree. Additionally, a metric can only have a data type of <code>DOUBLE</code> and consume properties with data types of <code>INTEGER</code> or <code>DOUBLE</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/asset-properties.html#metrics">Metrics</a> in the <i>IoT SiteWise User Guide</i>.</p>
    """

    expression: Expression
    variables: ExpressionVariables
    window: MetricWindow
    processingConfig: Optional[MetricProcessingConfig] = None


class BatchPutAssetPropertyValueResponse(BaseModel):
    errorEntries: BatchPutAssetPropertyErrorEntries


class DescribeAssetResponse(BaseModel):
    assetId: ID
    assetArn: ARN
    assetName: Name
    assetModelId: ID
    assetProperties: AssetProperties
    assetHierarchies: AssetHierarchies
    assetCompositeModels: Optional[AssetCompositeModels] = None
    assetCreationDate: Timestamp
    assetLastUpdateDate: Timestamp
    assetStatus: AssetStatus


class GetInterpolatedAssetPropertyValuesResponse(BaseModel):
    interpolatedAssetPropertyValues: InterpolatedAssetPropertyValues
    nextToken: Optional[NextToken] = None


class ListAccessPoliciesResponse(BaseModel):
    accessPolicySummaries: AccessPolicySummaries
    nextToken: Optional[NextToken] = None


class ListPortalsResponse(BaseModel):
    portalSummaries: Optional[PortalSummaries] = None
    nextToken: Optional[NextToken] = None


class PropertyType(BaseModel):
    """
    Contains a property type, which can be one of <code>attribute</code>, <code>measurement</code>, <code>metric</code>, or <code>transform</code>.
    """

    attribute: Optional[Attribute] = None
    measurement: Optional[Measurement] = None
    transform: Optional[Transform] = None
    metric: Optional[Metric] = None


class Property(BaseModel):
    """
    Contains asset property information.
    """

    id: ID
    name: Name
    alias: Optional[PropertyAlias] = None
    notification: Optional[PropertyNotification] = None
    dataType: PropertyDataType
    unit: Optional[PropertyUnit] = None
    type: Optional[PropertyType] = None


class CompositeModelProperty(BaseModel):
    """
    Contains information about a composite model property on an asset.
    """

    name: Name
    type: Name
    assetProperty: Property


class AssetModelPropertyDefinition(BaseModel):
    """
    Contains an asset model property definition. This property definition is applied to all assets created from the asset model.
    """

    name: Name
    dataType: PropertyDataType
    dataTypeSpec: Optional[Name] = None
    unit: Optional[PropertyUnit] = None
    type: PropertyType


class DescribeAssetPropertyResponse(BaseModel):
    assetId: ID
    assetName: Name
    assetModelId: ID
    assetProperty: Optional[Property] = None
    compositeModel: Optional[CompositeModelProperty] = None


class AssetModelProperty(BaseModel):
    """
    Contains information about an asset model property.
    """

    id: Optional[ID] = None
    name: Name
    dataType: PropertyDataType
    dataTypeSpec: Optional[Name] = None
    unit: Optional[PropertyUnit] = None
    type: PropertyType


class AssetModelProperties(BaseModel):
    __root__: List[AssetModelProperty]


class AssetModelPropertyDefinitions(BaseModel):
    __root__: List[AssetModelPropertyDefinition]


class CreateAssetModelRequest(BaseModel):
    assetModelName: Name
    assetModelDescription: Optional[Description] = None
    assetModelProperties: Optional[AssetModelPropertyDefinitions] = None
    assetModelHierarchies: Optional[AssetModelHierarchyDefinitions] = None
    assetModelCompositeModels: Optional[AssetModelCompositeModelDefinitions] = None
    clientToken: Optional[ClientToken] = None
    tags: Optional[TagMap] = None


class UpdateAssetModelRequest(BaseModel):
    assetModelName: Name
    assetModelDescription: Optional[Description] = None
    assetModelProperties: Optional[AssetModelProperties] = None
    assetModelHierarchies: Optional[AssetModelHierarchies] = None
    assetModelCompositeModels: Optional[AssetModelCompositeModels] = None
    clientToken: Optional[ClientToken] = None


class DescribeAssetModelResponse(BaseModel):
    assetModelId: ID
    assetModelArn: ARN
    assetModelName: Name
    assetModelDescription: Description
    assetModelProperties: AssetModelProperties
    assetModelHierarchies: AssetModelHierarchies
    assetModelCompositeModels: Optional[AssetModelCompositeModels] = None
    assetModelCreationDate: Timestamp
    assetModelLastUpdateDate: Timestamp
    assetModelStatus: AssetModelStatus

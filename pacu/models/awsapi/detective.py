# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:47:21+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ConflictException(BaseModel):
    __root__: Any


class InternalServerException(ConflictException):
    pass


class ResourceNotFoundException(ConflictException):
    pass


class ValidationException(ConflictException):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class ServiceQuotaExceededException(ConflictException):
    pass


class AccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='^[0-9]+$')]


class TagResourceResponse(BaseModel):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class GraphArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^arn:aws[-\\w]{0,10}?:detective:[-\\w]{2,20}?:\\d{12}?:graph:[abcdef\\d]{32}?$'
        ),
    ]


class AcceptInvitationRequest(BaseModel):
    GraphArn: GraphArn


class EmailAddress(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='^.+@.+$')]


class AccountIdList(BaseModel):
    __root__: Annotated[List[AccountId], Field(max_items=50, min_items=1)]


class Boolean(BaseModel):
    __root__: bool


class ByteValue(BaseModel):
    __root__: int


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateGraphRequest(BaseModel):
    Tags: Optional[TagMap] = None


class EmailMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class DeleteGraphRequest(BaseModel):
    GraphArn: GraphArn


class DeleteMembersRequest(BaseModel):
    GraphArn: GraphArn
    AccountIds: AccountIdList


class DisassociateMembershipRequest(BaseModel):
    GraphArn: GraphArn


class GetMembersRequest(BaseModel):
    GraphArn: GraphArn
    AccountIds: AccountIdList


class Timestamp(BaseModel):
    __root__: datetime


class Graph(BaseModel):
    """
    A behavior graph in Detective.
    """

    Arn: Optional[GraphArn] = None
    CreatedTime: Optional[Timestamp] = None


class GraphList(BaseModel):
    __root__: List[Graph]


class PaginationToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class MemberResultsLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=200.0)]


class ListGraphsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[MemberResultsLimit] = None


class ListInvitationsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[MemberResultsLimit] = None


class ListMembersRequest(BaseModel):
    GraphArn: GraphArn
    NextToken: Optional[PaginationToken] = None
    MaxResults: Optional[MemberResultsLimit] = None


class ListTagsForResourceRequest(BaseModel):
    pass


class MemberStatus(Enum):
    INVITED = 'INVITED'
    VERIFICATION_IN_PROGRESS = 'VERIFICATION_IN_PROGRESS'
    VERIFICATION_FAILED = 'VERIFICATION_FAILED'
    ENABLED = 'ENABLED'
    ACCEPTED_BUT_DISABLED = 'ACCEPTED_BUT_DISABLED'


class MemberDisabledReason(Enum):
    VOLUME_TOO_HIGH = 'VOLUME_TOO_HIGH'
    VOLUME_UNKNOWN = 'VOLUME_UNKNOWN'


class Percentage(BaseModel):
    __root__: float


class MemberDetail(BaseModel):
    """
    Details about a member account that was invited to contribute to a behavior graph.
    """

    AccountId: Optional[AccountId] = None
    EmailAddress: Optional[EmailAddress] = None
    GraphArn: Optional[GraphArn] = None
    MasterId: Optional[AccountId] = None
    AdministratorId: Optional[AccountId] = None
    Status: Optional[MemberStatus] = None
    DisabledReason: Optional[MemberDisabledReason] = None
    InvitedTime: Optional[Timestamp] = None
    UpdatedTime: Optional[Timestamp] = None
    VolumeUsageInBytes: Optional[ByteValue] = None
    VolumeUsageUpdatedTime: Optional[Timestamp] = None
    PercentOfGraphUtilization: Optional[Percentage] = None
    PercentOfGraphUtilizationUpdatedTime: Optional[Timestamp] = None


class RejectInvitationRequest(BaseModel):
    GraphArn: GraphArn


class StartMonitoringMemberRequest(BaseModel):
    GraphArn: GraphArn
    AccountId: AccountId


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    Tags: TagMap


class UnprocessedReason(BaseModel):
    __root__: str


class UnprocessedAccount(BaseModel):
    """
    A member account that was included in a request but for which the request could not be processed.
    """

    AccountId: Optional[AccountId] = None
    Reason: Optional[UnprocessedReason] = None


class UntagResourceRequest(BaseModel):
    pass


class CreateGraphResponse(BaseModel):
    GraphArn: Optional[GraphArn] = None


class Account(BaseModel):
    """
    An AWS account that is the administrator account of or a member of a behavior graph.
    """

    AccountId: AccountId
    EmailAddress: EmailAddress


class ListGraphsResponse(BaseModel):
    GraphList: Optional[GraphList] = None
    NextToken: Optional[PaginationToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagMap] = None


class AccountList(BaseModel):
    __root__: Annotated[List[Account], Field(max_items=50, min_items=1)]


class CreateMembersRequest(BaseModel):
    GraphArn: GraphArn
    Message: Optional[EmailMessage] = None
    DisableEmailNotification: Optional[Boolean] = None
    Accounts: AccountList


class MemberDetailList(BaseModel):
    __root__: List[MemberDetail]


class UnprocessedAccountList(BaseModel):
    __root__: List[UnprocessedAccount]


class CreateMembersResponse(BaseModel):
    Members: Optional[MemberDetailList] = None
    UnprocessedAccounts: Optional[UnprocessedAccountList] = None


class DeleteMembersResponse(BaseModel):
    AccountIds: Optional[AccountIdList] = None
    UnprocessedAccounts: Optional[UnprocessedAccountList] = None


class GetMembersResponse(BaseModel):
    MemberDetails: Optional[MemberDetailList] = None
    UnprocessedAccounts: Optional[UnprocessedAccountList] = None


class ListInvitationsResponse(BaseModel):
    Invitations: Optional[MemberDetailList] = None
    NextToken: Optional[PaginationToken] = None


class ListMembersResponse(BaseModel):
    MemberDetails: Optional[MemberDetailList] = None
    NextToken: Optional[PaginationToken] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:48:44+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ServerException(BaseModel):
    __root__: Any


class ClientException(ServerException):
    pass


class InvalidParameterException(ServerException):
    pass


class LimitExceededException(ServerException):
    pass


class UpdateInProgressException(ServerException):
    pass


class ClusterNotFoundException(ServerException):
    pass


class UnsupportedFeatureException(ServerException):
    pass


class PlatformUnknownException(ServerException):
    pass


class PlatformTaskDefinitionIncompatibilityException(ServerException):
    pass


class AccessDeniedException(ServerException):
    pass


class ServiceNotFoundException(ServerException):
    pass


class ServiceNotActiveException(ServerException):
    pass


class TargetNotFoundException(ServerException):
    pass


class ClusterContainsContainerInstancesException(ServerException):
    pass


class ClusterContainsServicesException(ServerException):
    pass


class ClusterContainsTasksException(ServerException):
    pass


class TaskSetNotFoundException(ServerException):
    pass


class TargetNotConnectedException(ServerException):
    pass


class AttributeLimitExceededException(ServerException):
    pass


class ResourceInUseException(ServerException):
    pass


class BlockedException(ServerException):
    pass


class TagResourceResponse(BaseModel):
    pass


class ResourceNotFoundException(ServerException):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class NoUpdateAvailableException(ServerException):
    pass


class MissingVersionException(ServerException):
    pass


class AgentUpdateStatus(Enum):
    PENDING = 'PENDING'
    STAGING = 'STAGING'
    STAGED = 'STAGED'
    UPDATING = 'UPDATING'
    UPDATED = 'UPDATED'
    FAILED = 'FAILED'


class AssignPublicIp(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class String(BaseModel):
    __root__: str


class KeyValuePair(BaseModel):
    """
    A key-value pair object.
    """

    name: Optional[String] = None
    value: Optional[String] = None


class AttachmentStateChange(BaseModel):
    """
    An object representing a change in state for a task attachment.
    """

    attachmentArn: String
    status: String


class AttachmentStateChanges(BaseModel):
    __root__: List[AttachmentStateChange]


class TargetType(Enum):
    container_instance = 'container-instance'


class Attribute(BaseModel):
    """
    An attribute is a name-value pair associated with an Amazon ECS object. Attributes enable you to extend the Amazon ECS data model by adding custom metadata to your resources. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html#attributes">Attributes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    name: String
    value: Optional[String] = None
    targetType: Optional[TargetType] = None
    targetId: Optional[String] = None


class Attributes(BaseModel):
    __root__: List[Attribute]


class StringList(BaseModel):
    __root__: List[String]


class AwsVpcConfiguration(BaseModel):
    """
    An object representing the networking details for a task or service.
    """

    subnets: StringList
    securityGroups: Optional[StringList] = None
    assignPublicIp: Optional[AssignPublicIp] = None


class Boolean(BaseModel):
    __root__: bool


class BoxedBoolean(Boolean):
    pass


class BoxedInteger(BaseModel):
    __root__: int


class CapacityProviderStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class CapacityProviderUpdateStatus(Enum):
    DELETE_IN_PROGRESS = 'DELETE_IN_PROGRESS'
    DELETE_COMPLETE = 'DELETE_COMPLETE'
    DELETE_FAILED = 'DELETE_FAILED'
    UPDATE_IN_PROGRESS = 'UPDATE_IN_PROGRESS'
    UPDATE_COMPLETE = 'UPDATE_COMPLETE'
    UPDATE_FAILED = 'UPDATE_FAILED'


class CapacityProviderField(Enum):
    TAGS = 'TAGS'


class CapacityProviderFieldList(BaseModel):
    __root__: List[CapacityProviderField]


class CapacityProviderStrategyItemWeight(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000.0)]


class CapacityProviderStrategyItemBase(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100000.0)]


class Integer(BoxedInteger):
    pass


class Statistics(BaseModel):
    __root__: List[KeyValuePair]


class ClusterField(Enum):
    ATTACHMENTS = 'ATTACHMENTS'
    CONFIGURATIONS = 'CONFIGURATIONS'
    SETTINGS = 'SETTINGS'
    STATISTICS = 'STATISTICS'
    TAGS = 'TAGS'


class ClusterFieldList(BaseModel):
    __root__: List[ClusterField]


class ClusterSettingName(Enum):
    containerInsights = 'containerInsights'


class ClusterSetting(BaseModel):
    """
    The settings to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster.
    """

    name: Optional[ClusterSettingName] = None
    value: Optional[String] = None


class Compatibility(Enum):
    EC2 = 'EC2'
    FARGATE = 'FARGATE'
    EXTERNAL = 'EXTERNAL'


class CompatibilityList(BaseModel):
    __root__: List[Compatibility]


class Connectivity(Enum):
    CONNECTED = 'CONNECTED'
    DISCONNECTED = 'DISCONNECTED'


class HealthStatus(Enum):
    HEALTHY = 'HEALTHY'
    UNHEALTHY = 'UNHEALTHY'
    UNKNOWN = 'UNKNOWN'


class GpuIds(StringList):
    pass


class ContainerCondition(Enum):
    START = 'START'
    COMPLETE = 'COMPLETE'
    SUCCESS = 'SUCCESS'
    HEALTHY = 'HEALTHY'


class RepositoryCredentials(BaseModel):
    """
    The repository credentials for private registry authentication.
    """

    credentialsParameter: String


class EnvironmentVariables(Statistics):
    pass


class DockerLabelsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class HealthCheck(BaseModel):
    """
    <p>An object representing a container health check. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image (such as those specified in a parent image or from the image's Dockerfile).</p> <p>You can view the health status of both individual containers and a task with the DescribeTasks API operation or when viewing the task details in the console.</p> <p>The following describes the possible <code>healthStatus</code> values for a container:</p> <ul> <li> <p> <code>HEALTHY</code>-The container health check has passed successfully.</p> </li> <li> <p> <code>UNHEALTHY</code>-The container health check has failed.</p> </li> <li> <p> <code>UNKNOWN</code>-The container health check is being evaluated or there is no container health check defined.</p> </li> </ul> <p>The following describes the possible <code>healthStatus</code> values for a task. The container health check status of nonessential containers do not have an effect on the health status of a task.</p> <ul> <li> <p> <code>HEALTHY</code>-All essential containers within the task have passed their health checks.</p> </li> <li> <p> <code>UNHEALTHY</code>-One or more essential containers have failed their health check.</p> </li> <li> <p> <code>UNKNOWN</code>-The essential containers within the task are still having their health checks evaluated or there are no container health checks defined.</p> </li> </ul> <p>If a task is run manually, and not as part of a service, the task will continue its lifecycle regardless of its health status. For tasks that are part of a service, if the task reports as unhealthy then the task will be stopped and the service scheduler will replace it.</p> <p>The following are notes about container health check support:</p> <ul> <li> <p>Container health checks require version 1.17.0 or greater of the Amazon ECS container agent. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating the Amazon ECS Container Agent</a>.</p> </li> <li> <p>Container health checks are supported for Fargate tasks if you are using platform version 1.1.0 or greater. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html">Fargate Platform Versions</a>.</p> </li> <li> <p>Container health checks are not supported for tasks that are part of a service that is configured to use a Classic Load Balancer.</p> </li> </ul>
    """

    command: StringList
    interval: Optional[BoxedInteger] = None
    timeout: Optional[BoxedInteger] = None
    retries: Optional[BoxedInteger] = None
    startPeriod: Optional[BoxedInteger] = None


class ContainerDependency(BaseModel):
    """
    <p>The dependencies defined for container startup and shutdown. A container can contain multiple dependencies. When a dependency is defined for container startup, for container shutdown it is reversed.</p> <p>Your Amazon ECS container instances require at least version 1.26.0 of the container agent to enable container dependencies. However, we recommend using the latest container agent version. For information about checking your agent version and updating to the latest version, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-update.html">Updating the Amazon ECS Container Agent</a> in the <i>Amazon Elastic Container Service Developer Guide</i>. If you are using an Amazon ECS-optimized Linux AMI, your instance needs at least version 1.26.0-1 of the <code>ecs-init</code> package. If your container instances are launched from version <code>20190301</code> or later, then they contain the required versions of the container agent and <code>ecs-init</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon ECS-optimized Linux AMI</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <note> <p>For tasks using the Fargate launch type, this parameter requires that the task or service uses platform version 1.3.0 or later.</p> </note>
    """

    containerName: String
    condition: ContainerCondition


class Long(BoxedInteger):
    pass


class VersionInfo(BaseModel):
    """
    The Docker and Amazon ECS container agent version information about a container instance.
    """

    agentVersion: Optional[String] = None
    agentHash: Optional[String] = None
    dockerVersion: Optional[String] = None


class Timestamp(BaseModel):
    __root__: datetime


class ContainerInstanceFieldList(CapacityProviderFieldList):
    pass


class ContainerInstanceStatus(Enum):
    ACTIVE = 'ACTIVE'
    DRAINING = 'DRAINING'
    REGISTERING = 'REGISTERING'
    DEREGISTERING = 'DEREGISTERING'
    REGISTRATION_FAILED = 'REGISTRATION_FAILED'


class NetworkConfiguration(BaseModel):
    """
    An object representing the network configuration for a task or service.
    """

    awsvpcConfiguration: Optional[AwsVpcConfiguration] = None


class SchedulingStrategy(Enum):
    REPLICA = 'REPLICA'
    DAEMON = 'DAEMON'


class PropagateTags(Enum):
    TASK_DEFINITION = 'TASK_DEFINITION'
    SERVICE = 'SERVICE'


class SettingName(Enum):
    serviceLongArnFormat = 'serviceLongArnFormat'
    taskLongArnFormat = 'taskLongArnFormat'
    containerInstanceLongArnFormat = 'containerInstanceLongArnFormat'
    awsvpcTrunking = 'awsvpcTrunking'
    containerInsights = 'containerInsights'


class Setting(BaseModel):
    """
    The current account setting for a resource.
    """

    name: Optional[SettingName] = None
    value: Optional[String] = None
    principalArn: Optional[String] = None


class DeploymentRolloutState(Enum):
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    IN_PROGRESS = 'IN_PROGRESS'


class DeploymentCircuitBreaker(BaseModel):
    """
    <note> <p>The deployment circuit breaker can only be used for services using the rolling update (<code>ECS</code>) deployment type that are not behind a Classic Load Balancer.</p> </note> <p>The <b>deployment circuit breaker</b> determines whether a service deployment will fail if the service can't reach a steady state. If enabled, a service deployment will transition to a failed state and stop launching new tasks. You can also enable Amazon ECS to roll back your service to the last completed deployment after a failure. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-type-ecs.html">Rolling update</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    """

    enable: Boolean
    rollback: Boolean


class DeploymentControllerType(Enum):
    ECS = 'ECS'
    CODE_DEPLOY = 'CODE_DEPLOY'
    EXTERNAL = 'EXTERNAL'


class DesiredStatus(Enum):
    RUNNING = 'RUNNING'
    PENDING = 'PENDING'
    STOPPED = 'STOPPED'


class DeviceCgroupPermission(Enum):
    read = 'read'
    write = 'write'
    mknod = 'mknod'


class Scope(Enum):
    task = 'task'
    shared = 'shared'


class StringMap(DockerLabelsMap):
    pass


class DockerVolumeConfiguration(BaseModel):
    """
    This parameter is specified when you are using Docker volumes. Docker volumes are only supported when you are using the EC2 launch type. Windows containers only support the use of the <code>local</code> driver. To use bind mounts, specify a <code>host</code> instead.
    """

    scope: Optional[Scope] = None
    autoprovision: Optional[BoxedBoolean] = None
    driver: Optional[String] = None
    driverOpts: Optional[StringMap] = None
    labels: Optional[StringMap] = None


class Double(BaseModel):
    __root__: float


class EFSAuthorizationConfig(BaseModel):
    """
    The authorization configuration details for the Amazon EFS file system.
    """

    accessPointId: Optional[String] = None
    iam: Optional[AssignPublicIp] = None


class EFSVolumeConfiguration(BaseModel):
    """
    This parameter is specified when you are using an Amazon Elastic File System file system for task storage. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/efs-volumes.html">Amazon EFS Volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    fileSystemId: String
    rootDirectory: Optional[String] = None
    transitEncryption: Optional[AssignPublicIp] = None
    transitEncryptionPort: Optional[BoxedInteger] = None
    authorizationConfig: Optional[EFSAuthorizationConfig] = None


class EnvironmentFileType(Enum):
    s3 = 's3'


class EnvironmentFile(BaseModel):
    """
    <p>A list of files containing the environment variables to pass to a container. You can specify up to ten environment files. The file must have a <code>.env</code> file extension. Each line in an environment file should contain an environment variable in <code>VARIABLE=VALUE</code> format. Lines beginning with <code>#</code> are treated as comments and are ignored. For more information on the environment variable file syntax, see <a href="https://docs.docker.com/compose/env-file/">Declare default environment variables in file</a>.</p> <p>If there are environment variables specified using the <code>environment</code> parameter in a container definition, they take precedence over the variables contained within an environment file. If multiple environment files are specified that contain the same variable, they are processed from the top down. It is recommended to use unique variable names. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html">Specifying environment variables</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>This field is only valid for containers in Fargate tasks that use platform version <code>1.4.0</code> or later.</p>
    """

    value: String
    type: EnvironmentFileType


class EphemeralStorage(BaseModel):
    """
    <p>The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on Fargate. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html">Fargate task storage</a> in the <i>Amazon ECS User Guide for Fargate</i>.</p> <note> <p>This parameter is only supported for tasks hosted on Fargate using platform version <code>1.4.0</code> or later.</p> </note>
    """

    sizeInGiB: Integer


class ExecuteCommandLogging(Enum):
    NONE = 'NONE'
    DEFAULT = 'DEFAULT'
    OVERRIDE = 'OVERRIDE'


class ExecuteCommandLogConfiguration(BaseModel):
    """
    The log configuration for the results of the execute command actions. The logs can be sent to CloudWatch Logs or an Amazon S3 bucket.
    """

    cloudWatchLogGroupName: Optional[String] = None
    cloudWatchEncryptionEnabled: Optional[Boolean] = None
    s3BucketName: Optional[String] = None
    s3EncryptionEnabled: Optional[Boolean] = None
    s3KeyPrefix: Optional[String] = None


class FSxWindowsFileServerAuthorizationConfig(BaseModel):
    """
    <p>The authorization configuration details for Amazon FSx for Windows File Server file system. See <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_FSxWindowsFileServerVolumeConfiguration.html">FSxWindowsFileServerVolumeConfiguration</a> in the <i>Amazon Elastic Container Service API Reference</i>.</p> <p>For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon FSx for Windows File Server Volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    """

    credentialsParameter: String
    domain: String


class FSxWindowsFileServerVolumeConfiguration(BaseModel):
    """
    <p>This parameter is specified when you are using <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/what-is.html">Amazon FSx for Windows File Server</a> file system for task storage.</p> <p>For more information and the input format, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/wfsx-volumes.html">Amazon FSx for Windows File Server Volumes</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    """

    fileSystemId: String
    rootDirectory: String
    authorizationConfig: FSxWindowsFileServerAuthorizationConfig


class Failure(BaseModel):
    """
    A failed resource. For a list of common causes, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/api_failures_messages.html">API failure reasons</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    arn: Optional[String] = None
    reason: Optional[String] = None
    detail: Optional[String] = None


class FirelensConfigurationType(Enum):
    fluentd = 'fluentd'
    fluentbit = 'fluentbit'


class FirelensConfigurationOptionsMap(DockerLabelsMap):
    pass


class HostEntry(BaseModel):
    """
    Hostnames and IP address entries that are added to the <code>/etc/hosts</code> file of a container via the <code>extraHosts</code> parameter of its <a>ContainerDefinition</a>.
    """

    hostname: String
    ipAddress: String


class HostVolumeProperties(BaseModel):
    """
    Details on a container instance bind mount host volume.
    """

    sourcePath: Optional[String] = None


class InferenceAccelerator(BaseModel):
    """
    Details on a Elastic Inference accelerator. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html">Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    deviceName: String
    deviceType: String


class InferenceAcceleratorOverride(BaseModel):
    """
    Details on an Elastic Inference accelerator task override. This parameter is used to override the Elastic Inference accelerator specified in the task definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html">Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    deviceName: Optional[String] = None
    deviceType: Optional[String] = None


class InferenceAcceleratorOverrides(BaseModel):
    __root__: List[InferenceAcceleratorOverride]


class InferenceAccelerators(BaseModel):
    __root__: List[InferenceAccelerator]


class IpcMode(Enum):
    host = 'host'
    task = 'task'
    none = 'none'


class KernelCapabilities(BaseModel):
    """
    The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker. For more information on the default capabilities and the non-default available capabilities, see <a href="https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities">Runtime privilege and Linux capabilities</a> in the <i>Docker run reference</i>. For more detailed information on these Linux capabilities, see the <a href="http://man7.org/linux/man-pages/man7/capabilities.7.html">capabilities(7)</a> Linux manual page.
    """

    add: Optional[StringList] = None
    drop: Optional[StringList] = None


class Settings(BaseModel):
    __root__: List[Setting]


class TaskDefinitionFamilyStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    ALL = 'ALL'


class SortOrder(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class LoadBalancer(BaseModel):
    """
    <p>The load balancer configuration to use with a service or task set.</p> <p>For specific notes and restrictions regarding the use of load balancers with services and task sets, see the CreateService and CreateTaskSet actions.</p>
    """

    targetGroupArn: Optional[String] = None
    loadBalancerName: Optional[String] = None
    containerName: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None


class LogDriver(Enum):
    json_file = 'json-file'
    syslog = 'syslog'
    journald = 'journald'
    gelf = 'gelf'
    fluentd = 'fluentd'
    awslogs = 'awslogs'
    splunk = 'splunk'
    awsfirelens = 'awsfirelens'


class LogConfigurationOptionsMap(DockerLabelsMap):
    pass


class ManagedAgentName(Enum):
    ExecuteCommandAgent = 'ExecuteCommandAgent'


class ManagedAgent(BaseModel):
    """
    Details about the managed agent status for the container.
    """

    lastStartedAt: Optional[Timestamp] = None
    name: Optional[ManagedAgentName] = None
    reason: Optional[String] = None
    lastStatus: Optional[String] = None


class ManagedAgentStateChange(BaseModel):
    """
    An object representing a change in state for a managed agent.
    """

    containerName: String
    managedAgentName: ManagedAgentName
    status: String
    reason: Optional[String] = None


class ManagedAgentStateChanges(BaseModel):
    __root__: List[ManagedAgentStateChange]


class ManagedScalingTargetCapacity(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ManagedScalingStepSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10000.0)]


class ManagedScalingInstanceWarmupPeriod(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10000.0)]


class MountPoint(BaseModel):
    """
    Details on a volume mount point that is used in a container definition.
    """

    sourceVolume: Optional[String] = None
    containerPath: Optional[String] = None
    readOnly: Optional[BoxedBoolean] = None


class TransportProtocol(Enum):
    tcp = 'tcp'
    udp = 'udp'


class NetworkBinding(BaseModel):
    """
    Details on the network bindings between a container and its host container instance. After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.
    """

    bindIP: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None
    hostPort: Optional[BoxedInteger] = None
    protocol: Optional[TransportProtocol] = None


class NetworkInterface(BaseModel):
    """
    An object representing the elastic network interface for tasks that use the <code>awsvpc</code> network mode.
    """

    attachmentId: Optional[String] = None
    privateIpv4Address: Optional[String] = None
    ipv6Address: Optional[String] = None


class NetworkMode(Enum):
    bridge = 'bridge'
    host = 'host'
    awsvpc = 'awsvpc'
    none = 'none'


class PidMode(Enum):
    host = 'host'
    task = 'task'


class PlacementConstraintType(Enum):
    distinctInstance = 'distinctInstance'
    memberOf = 'memberOf'


class PlacementConstraint(BaseModel):
    """
    <p>An object representing a constraint on task placement. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task Placement Constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <note> <p>If you are using the Fargate launch type, task placement constraints are not supported.</p> </note>
    """

    type: Optional[PlacementConstraintType] = None
    expression: Optional[String] = None


class PlacementStrategyType(Enum):
    random = 'random'
    spread = 'spread'
    binpack = 'binpack'


class PlatformDeviceType(Enum):
    GPU = 'GPU'


class PlatformDevice(BaseModel):
    """
    The devices that are available on the container instance. The only supported device type is a GPU.
    """

    id: String
    type: PlatformDeviceType


class PlatformDevices(BaseModel):
    __root__: List[PlatformDevice]


class PortMapping(BaseModel):
    """
    <p>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition.</p> <p>If you are using containers in a task with the <code>awsvpc</code> or <code>host</code> network mode, exposed ports should be specified using <code>containerPort</code>. The <code>hostPort</code> can be left blank or it must be the same value as the <code>containerPort</code>.</p> <note> <p>You cannot expose the same container port for multiple protocols. An error will be returned if this is attempted</p> </note> <p>After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.</p>
    """

    containerPort: Optional[BoxedInteger] = None
    hostPort: Optional[BoxedInteger] = None
    protocol: Optional[TransportProtocol] = None


class ProxyConfigurationType(Enum):
    APPMESH = 'APPMESH'


class ProxyConfiguration(BaseModel):
    """
    <p>The configuration details for the App Mesh proxy.</p> <p>For tasks using the EC2 launch type, the container instances require at least version 1.26.0 of the container agent and at least version 1.26.0-1 of the <code>ecs-init</code> package to enable a proxy configuration. If your container instances are launched from the Amazon ECS-optimized AMI version <code>20190301</code> or later, then they contain the required versions of the container agent and <code>ecs-init</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html">Amazon ECS-optimized Linux AMI</a> </p>
    """

    type: Optional[ProxyConfigurationType] = None
    containerName: String
    properties: Annotated[
        Optional[Any],
        Field(
            description='<p>The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.</p> <ul> <li> <p> <code>IgnoredUID</code> - (Required) The user ID (UID) of the proxy container as defined by the <code>user</code> parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If <code>IgnoredGID</code> is specified, this field can be empty.</p> </li> <li> <p> <code>IgnoredGID</code> - (Required) The group ID (GID) of the proxy container as defined by the <code>user</code> parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If <code>IgnoredUID</code> is specified, this field can be empty.</p> </li> <li> <p> <code>AppPorts</code> - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the <code>ProxyIngressPort</code> and <code>ProxyEgressPort</code>.</p> </li> <li> <p> <code>ProxyIngressPort</code> - (Required) Specifies the port that incoming traffic to the <code>AppPorts</code> is directed to.</p> </li> <li> <p> <code>ProxyEgressPort</code> - (Required) Specifies the port that outgoing traffic from the <code>AppPorts</code> is directed to.</p> </li> <li> <p> <code>EgressIgnoredPorts</code> - (Required) The egress traffic going to the specified ports is ignored and not redirected to the <code>ProxyEgressPort</code>. It can be an empty list.</p> </li> <li> <p> <code>EgressIgnoredIPs</code> - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the <code>ProxyEgressPort</code>. It can be an empty list.</p> </li> </ul>'
        ),
    ] = None


class ProxyConfigurationProperties(Statistics):
    pass


class RequiresAttributes(Attributes):
    pass


class Resource(BaseModel):
    """
    Describes the resources available for a container instance.
    """

    name: Optional[String] = None
    type: Optional[String] = None
    doubleValue: Optional[Double] = None
    longValue: Optional[Long] = None
    integerValue: Optional[Integer] = None
    stringSetValue: Optional[StringList] = None


class ResourceType(Enum):
    GPU = 'GPU'
    InferenceAccelerator = 'InferenceAccelerator'


class ResourceRequirement(BaseModel):
    """
    The type and amount of a resource to assign to a container. The supported resource types are GPUs and Elastic Inference accelerators. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html">Working with GPUs on Amazon ECS</a> or <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-eia.html">Working with Amazon Elastic Inference on Amazon ECS</a> in the <i>Amazon Elastic Container Service Developer Guide</i>
    """

    value: String
    type: ResourceType


class ScaleUnit(Enum):
    PERCENT = 'PERCENT'


class Secret(BaseModel):
    """
    <p>An object representing the secret to expose to your container. Secrets can be exposed to a container in the following ways:</p> <ul> <li> <p>To inject sensitive data into your containers as environment variables, use the <code>secrets</code> container definition parameter.</p> </li> <li> <p>To reference sensitive information in the log configuration of a container, use the <code>secretOptions</code> container definition parameter.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data.html">Specifying Sensitive Data</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p>
    """

    name: String
    valueFrom: String


class SensitiveString(BaseModel):
    __root__: SecretStr


class ServiceEvent(BaseModel):
    """
    Details on an event associated with a service.
    """

    id: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    message: Optional[String] = None


class ServiceRegistry(BaseModel):
    """
    Details of the service registry.
    """

    registryArn: Optional[String] = None
    port: Optional[BoxedInteger] = None
    containerName: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None


class StabilityStatus(Enum):
    STEADY_STATE = 'STEADY_STATE'
    STABILIZING = 'STABILIZING'


class SystemControl(BaseModel):
    """
    <p>A list of namespaced kernel parameters to set in the container. This parameter maps to <code>Sysctls</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker Remote API</a> and the <code>--sysctl</code> option to <a href="https://docs.docker.com/engine/reference/run/#security-configuration">docker run</a>.</p> <p>It is not recommended that you specify network-related <code>systemControls</code> parameters for multiple containers in a single task that also uses either the <code>awsvpc</code> or <code>host</code> network mode for the following reasons:</p> <ul> <li> <p>For tasks that use the <code>awsvpc</code> network mode, if you set <code>systemControls</code> for any container, it applies to all containers in the task. If you set different <code>systemControls</code> for multiple containers in a single task, the container that is started last determines which <code>systemControls</code> take effect.</p> </li> <li> <p>For tasks that use the <code>host</code> network mode, the <code>systemControls</code> parameter applies to the container instance's kernel parameter as well as that of all containers of any tasks running on that container instance.</p> </li> </ul>
    """

    namespace: Optional[String] = None
    value: Optional[String] = None


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class TagValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=0, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class Tag(BaseModel):
    """
    <p>The metadata that you apply to a resource to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.</p> <p>The following basic restrictions apply to tags:</p> <ul> <li> <p>Maximum number of tags per resource - 50</p> </li> <li> <p>For each resource, each tag key must be unique, and each tag key can have only one value.</p> </li> <li> <p>Maximum key length - 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length - 256 Unicode characters in UTF-8</p> </li> <li> <p>If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.</p> </li> <li> <p>Tag keys and values are case-sensitive.</p> </li> <li> <p>Do not use <code>aws:</code>, <code>AWS:</code>, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.</p> </li> </ul>
    """

    key: Optional[TagKey] = None
    value: Optional[TagValue] = None


class TagKeys(BaseModel):
    __root__: List[TagKey]


class TaskStopCode(Enum):
    TaskFailedToStart = 'TaskFailedToStart'
    EssentialContainerExited = 'EssentialContainerExited'
    UserInitiated = 'UserInitiated'


class TaskDefinitionPlacementConstraintType(Enum):
    memberOf = 'memberOf'


class TaskDefinitionPlacementConstraint(BaseModel):
    """
    <p>An object representing a constraint on task placement in the task definition. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task placement constraints</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <note> <p>Task placement constraints are not supported for tasks run on Fargate.</p> </note>
    """

    type: Optional[TaskDefinitionPlacementConstraintType] = None
    expression: Optional[String] = None


class Tmpfs(BaseModel):
    """
    The container path, mount options, and size of the tmpfs mount.
    """

    containerPath: String
    size: Integer
    mountOptions: Optional[StringList] = None


class UlimitName(Enum):
    core = 'core'
    cpu = 'cpu'
    data = 'data'
    fsize = 'fsize'
    locks = 'locks'
    memlock = 'memlock'
    msgqueue = 'msgqueue'
    nice = 'nice'
    nofile = 'nofile'
    nproc = 'nproc'
    rss = 'rss'
    rtprio = 'rtprio'
    rttime = 'rttime'
    sigpending = 'sigpending'
    stack = 'stack'


class Ulimit(BaseModel):
    """
    <p>The <code>ulimit</code> settings to pass to the container.</p> <p>Amazon ECS tasks hosted on Fargate use the default resource limit values set by the operating system with the exception of the <code>nofile</code> resource limit parameter which Fargate overrides. The <code>nofile</code> resource limit sets a restriction on the number of open files that a container can use. The default <code>nofile</code> soft limit is <code>1024</code> and hard limit is <code>4096</code>.</p>
    """

    name: UlimitName
    softLimit: Integer
    hardLimit: Integer


class Volume(BaseModel):
    """
    A data volume used in a task definition. For tasks that use the Amazon Elastic File System (Amazon EFS), specify an <code>efsVolumeConfiguration</code>. For Windows tasks that use Amazon FSx for Windows File Server file system, specify a <code>fsxWindowsFileServerVolumeConfiguration</code>. For tasks that use a Docker volume, specify a <code>DockerVolumeConfiguration</code>. For tasks that use a bind mount host volume, specify a <code>host</code> and optional <code>sourcePath</code>. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_data_volumes.html">Using Data Volumes in Tasks</a>.
    """

    name: Optional[String] = None
    host: Optional[HostVolumeProperties] = None
    dockerVolumeConfiguration: Optional[DockerVolumeConfiguration] = None
    efsVolumeConfiguration: Optional[EFSVolumeConfiguration] = None
    fsxWindowsFileServerVolumeConfiguration: Optional[
        FSxWindowsFileServerVolumeConfiguration
    ] = None


class VolumeFrom(BaseModel):
    """
    Details on a data volume from another container in the same task definition.
    """

    sourceContainer: Optional[String] = None
    readOnly: Optional[BoxedBoolean] = None


class DeleteAccountSettingResponse(BaseModel):
    setting: Optional[Setting] = None


class DeleteAccountSettingRequest(BaseModel):
    name: SettingName
    principalArn: Optional[String] = None


class DeleteAttributesResponse(BaseModel):
    attributes: Optional[Attributes] = None


class DeleteAttributesRequest(BaseModel):
    cluster: Optional[String] = None
    attributes: Attributes


class DeleteCapacityProviderRequest(BaseModel):
    capacityProvider: String


class DeleteClusterRequest(BaseModel):
    cluster: String


class DeleteServiceRequest(BaseModel):
    cluster: Optional[String] = None
    service: String
    force: Optional[BoxedBoolean] = None


class DeleteTaskSetRequest(BaseModel):
    cluster: String
    service: String
    taskSet: String
    force: Optional[BoxedBoolean] = None


class DeregisterContainerInstanceRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: String
    force: Optional[BoxedBoolean] = None


class DeregisterTaskDefinitionRequest(BaseModel):
    taskDefinition: String


class DescribeCapacityProvidersRequest(BaseModel):
    capacityProviders: Optional[StringList] = None
    include: Optional[CapacityProviderFieldList] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None


class DescribeClustersRequest(BaseModel):
    clusters: Optional[StringList] = None
    include: Optional[ClusterFieldList] = None


class DescribeContainerInstancesRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    include: Optional[ContainerInstanceFieldList] = None


class DiscoverPollEndpointResponse(BaseModel):
    endpoint: Optional[String] = None
    telemetryEndpoint: Optional[String] = None


class DiscoverPollEndpointRequest(BaseModel):
    containerInstance: Optional[String] = None
    cluster: Optional[String] = None


class ExecuteCommandRequest(BaseModel):
    cluster: Optional[String] = None
    container: Optional[String] = None
    command: String
    interactive: Boolean
    task: String


class ListAccountSettingsResponse(BaseModel):
    settings: Optional[Settings] = None
    nextToken: Optional[String] = None


class ListAccountSettingsRequest(BaseModel):
    name: Optional[SettingName] = None
    value: Optional[String] = None
    principalArn: Optional[String] = None
    effectiveSettings: Optional[Boolean] = None
    nextToken: Optional[String] = None
    maxResults: Optional[Integer] = None


class ListAttributesResponse(BaseModel):
    attributes: Optional[Attributes] = None
    nextToken: Optional[String] = None


class ListAttributesRequest(BaseModel):
    cluster: Optional[String] = None
    targetType: TargetType
    attributeName: Optional[String] = None
    attributeValue: Optional[String] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None


class ListClustersResponse(BaseModel):
    clusterArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListClustersRequest(BaseModel):
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None


class ListContainerInstancesResponse(BaseModel):
    containerInstanceArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListContainerInstancesRequest(BaseModel):
    cluster: Optional[String] = None
    filter: Optional[String] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    status: Optional[ContainerInstanceStatus] = None


class ListServicesResponse(BaseModel):
    serviceArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListServicesRequest(BaseModel):
    cluster: Optional[String] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    launchType: Optional[Compatibility] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None


class ListTagsForResourceRequest(BaseModel):
    resourceArn: String


class ListTaskDefinitionFamiliesResponse(BaseModel):
    families: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListTaskDefinitionFamiliesRequest(BaseModel):
    familyPrefix: Optional[String] = None
    status: Optional[TaskDefinitionFamilyStatus] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None


class ListTaskDefinitionsResponse(BaseModel):
    taskDefinitionArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListTaskDefinitionsRequest(BaseModel):
    familyPrefix: Optional[String] = None
    status: Optional[CapacityProviderStatus] = None
    sort: Optional[SortOrder] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None


class ListTasksResponse(BaseModel):
    taskArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListTasksRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: Optional[String] = None
    family: Optional[String] = None
    nextToken: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    startedBy: Optional[String] = None
    serviceName: Optional[String] = None
    desiredStatus: Optional[DesiredStatus] = None
    launchType: Optional[Compatibility] = None


class PutAccountSettingResponse(DeleteAccountSettingResponse):
    pass


class PutAccountSettingRequest(BaseModel):
    name: SettingName
    value: String
    principalArn: Optional[String] = None


class PutAccountSettingDefaultResponse(DeleteAccountSettingResponse):
    pass


class PutAccountSettingDefaultRequest(BaseModel):
    name: SettingName
    value: String


class PutAttributesResponse(DeleteAttributesResponse):
    pass


class PutAttributesRequest(BaseModel):
    cluster: Optional[String] = None
    attributes: Attributes


class StopTaskRequest(BaseModel):
    cluster: Optional[String] = None
    task: String
    reason: Optional[String] = None


class SubmitAttachmentStateChangesResponse(BaseModel):
    acknowledgment: Optional[String] = None


class SubmitAttachmentStateChangesRequest(BaseModel):
    cluster: Optional[String] = None
    attachments: AttachmentStateChanges


class SubmitContainerStateChangeResponse(SubmitAttachmentStateChangesResponse):
    pass


class SubmitTaskStateChangeResponse(SubmitAttachmentStateChangesResponse):
    pass


class UntagResourceRequest(BaseModel):
    resourceArn: String
    tagKeys: TagKeys


class UpdateContainerAgentRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: String


class UpdateContainerInstancesStateRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    status: ContainerInstanceStatus


class UpdateServicePrimaryTaskSetRequest(BaseModel):
    cluster: String
    service: String
    primaryTaskSet: String


class AttachmentDetails(Statistics):
    pass


class Attachment(BaseModel):
    """
    An object representing a container instance or task attachment.
    """

    id: Optional[String] = None
    type: Optional[String] = None
    status: Optional[String] = None
    details: Optional[AttachmentDetails] = None


class Attachments2(BaseModel):
    __root__: List[Attachment]


class ManagedScaling(BaseModel):
    """
    <p>The managed scaling settings for the Auto Scaling group capacity provider.</p> <p>When managed scaling is enabled, Amazon ECS manages the scale-in and scale-out actions of the Auto Scaling group. Amazon ECS manages a target tracking scaling policy using an Amazon ECS-managed CloudWatch metric with the specified <code>targetCapacity</code> value as the target value for the metric. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/asg-capacity-providers.html#asg-capacity-providers-managed-scaling">Using Managed Scaling</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> <p>If managed scaling is disabled, the user must manage the scaling of the Auto Scaling group.</p>
    """

    status: Optional[AssignPublicIp] = None
    targetCapacity: Optional[ManagedScalingTargetCapacity] = None
    minimumScalingStepSize: Optional[ManagedScalingStepSize] = None
    maximumScalingStepSize: Optional[ManagedScalingStepSize] = None
    instanceWarmupPeriod: Optional[ManagedScalingInstanceWarmupPeriod] = None


class AutoScalingGroupProvider(BaseModel):
    """
    The details of the Auto Scaling group for the capacity provider.
    """

    autoScalingGroupArn: String
    managedScaling: Optional[ManagedScaling] = None
    managedTerminationProtection: Optional[AssignPublicIp] = None


class AutoScalingGroupProviderUpdate(BaseModel):
    """
    The details of the Auto Scaling group capacity provider to update.
    """

    managedScaling: Optional[ManagedScaling] = None
    managedTerminationProtection: Optional[AssignPublicIp] = None


class Tags(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50, min_items=0)]


class CapacityProvider(BaseModel):
    """
    The details of a capacity provider.
    """

    capacityProviderArn: Optional[String] = None
    name: Optional[String] = None
    status: Optional[CapacityProviderStatus] = None
    autoScalingGroupProvider: Optional[AutoScalingGroupProvider] = None
    updateStatus: Optional[CapacityProviderUpdateStatus] = None
    updateStatusReason: Optional[String] = None
    tags: Optional[Tags] = None


class CapacityProviderStrategyItem(BaseModel):
    """
    <p>The details of a capacity provider strategy. A capacity provider strategy can be set when using the <a>RunTask</a> or <a>CreateCluster</a> APIs or as the default capacity provider strategy for a cluster with the <a>CreateCluster</a> API.</p> <p>Only capacity providers that are already associated with a cluster and have an <code>ACTIVE</code> or <code>UPDATING</code> status can be used in a capacity provider strategy. The <a>PutClusterCapacityProviders</a> API is used to associate a capacity provider with a cluster.</p> <p>If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created. New Auto Scaling group capacity providers can be created with the <a>CreateCapacityProvider</a> API operation.</p> <p>To use a Fargate capacity provider, specify either the <code>FARGATE</code> or <code>FARGATE_SPOT</code> capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used in a capacity provider strategy.</p> <p>A capacity provider strategy may contain a maximum of 6 capacity providers.</p>
    """

    capacityProvider: String
    weight: Optional[CapacityProviderStrategyItemWeight] = None
    base: Optional[CapacityProviderStrategyItemBase] = None


class CapacityProviderStrategy(BaseModel):
    __root__: List[CapacityProviderStrategyItem]


class CapacityProviders(BaseModel):
    __root__: List[CapacityProvider]


class ClusterSettings(BaseModel):
    __root__: List[ClusterSetting]


class ExecuteCommandConfiguration(BaseModel):
    """
    The details of the execute command configuration.
    """

    kmsKeyId: Optional[String] = None
    logging: Optional[ExecuteCommandLogging] = None
    logConfiguration: Optional[ExecuteCommandLogConfiguration] = None


class NetworkBindings(BaseModel):
    __root__: List[NetworkBinding]


class NetworkInterfaces(BaseModel):
    __root__: List[NetworkInterface]


class ManagedAgents1(BaseModel):
    __root__: List[ManagedAgent]


class Container1(BaseModel):
    """
    A Docker container that is part of a task.
    """

    containerArn: Optional[String] = None
    taskArn: Optional[String] = None
    name: Optional[String] = None
    image: Optional[String] = None
    imageDigest: Optional[String] = None
    runtimeId: Optional[String] = None
    lastStatus: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    reason: Optional[String] = None
    networkBindings: Optional[NetworkBindings] = None
    networkInterfaces: Optional[NetworkInterfaces] = None
    healthStatus: Optional[HealthStatus] = None
    managedAgents: Optional[ManagedAgents1] = None
    cpu: Optional[String] = None
    memory: Optional[String] = None
    memoryReservation: Optional[String] = None
    gpuIds: Optional[GpuIds] = None


class PortMappingList(BaseModel):
    __root__: List[PortMapping]


class EnvironmentFiles(BaseModel):
    __root__: List[EnvironmentFile]


class MountPointList(BaseModel):
    __root__: List[MountPoint]


class VolumeFromList(BaseModel):
    __root__: List[VolumeFrom]


class SecretList(BaseModel):
    __root__: List[Secret]


class ContainerDependencies(BaseModel):
    __root__: List[ContainerDependency]


class HostEntryList(BaseModel):
    __root__: List[HostEntry]


class UlimitList(BaseModel):
    __root__: List[Ulimit]


class LogConfiguration1(BaseModel):
    """
    <p>The log configuration for the container. This parameter maps to <code>LogConfig</code> in the <a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate">Create a container</a> section of the <a href="https://docs.docker.com/engine/api/v1.35/">Docker Remote API</a> and the <code>--log-driver</code> option to <a href="https://docs.docker.com/engine/reference/commandline/run/"> <code>docker run</code> </a>.</p> <p>By default, containers use the same logging driver that the Docker daemon uses; however the container may use a different logging driver than the Docker daemon by specifying a log driver configuration in the container definition. For more information on the options for different supported log drivers, see <a href="https://docs.docker.com/engine/admin/logging/overview/">Configure logging drivers</a> in the Docker documentation.</p> <p>The following should be noted when specifying a log configuration for your containers:</p> <ul> <li> <p>Amazon ECS currently supports a subset of the logging drivers available to the Docker daemon (shown in the valid values below). Additional log drivers may be available in future releases of the Amazon ECS container agent.</p> </li> <li> <p>This parameter requires version 1.18 of the Docker Remote API or greater on your container instance.</p> </li> <li> <p>For tasks hosted on Amazon EC2 instances, the Amazon ECS container agent must register the available logging drivers with the <code>ECS_AVAILABLE_LOGGING_DRIVERS</code> environment variable before containers placed on that instance can use these log configuration options. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html">Amazon ECS container agent configuration</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.</p> </li> <li> <p>For tasks on Fargate, because you do not have access to the underlying infrastructure your tasks are hosted on, any additional software needed will have to be installed outside of the task. For example, the Fluentd output aggregators or a remote host running Logstash to send Gelf logs to.</p> </li> </ul>
    """

    logDriver: LogDriver
    options: Optional[LogConfigurationOptionsMap] = None
    secretOptions: Optional[SecretList] = None


class SystemControls(BaseModel):
    __root__: List[SystemControl]


class ResourceRequirements(BaseModel):
    __root__: List[ResourceRequirement]


class FirelensConfiguration(BaseModel):
    """
    The FireLens configuration for the container. This is used to specify and configure a log router for container logs. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/using_firelens.html">Custom Log Routing</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    type: FirelensConfigurationType
    options: Optional[FirelensConfigurationOptionsMap] = None


class Resources(BaseModel):
    __root__: List[Resource]


class ContainerInstance(BaseModel):
    """
    An EC2 instance that is running the Amazon ECS agent and has been registered with a cluster.
    """

    containerInstanceArn: Optional[String] = None
    ec2InstanceId: Optional[String] = None
    capacityProviderName: Optional[String] = None
    version: Optional[Long] = None
    versionInfo: Optional[VersionInfo] = None
    remainingResources: Optional[Resources] = None
    registeredResources: Optional[Resources] = None
    status: Optional[String] = None
    statusReason: Optional[String] = None
    agentConnected: Optional[Boolean] = None
    runningTasksCount: Optional[Integer] = None
    pendingTasksCount: Optional[Integer] = None
    agentUpdateStatus: Optional[AgentUpdateStatus] = None
    attributes: Optional[Attributes] = None
    registeredAt: Optional[Timestamp] = None
    attachments: Optional[Attachments2] = None
    tags: Optional[Tags] = None


class ContainerInstances(BaseModel):
    __root__: List[ContainerInstance]


class ContainerOverride(BaseModel):
    """
    The overrides that should be sent to a container. An empty container override can be passed in. An example of an empty container override would be <code>{"containerOverrides": [ ] }</code>. If a non-empty container override is specified, the <code>name</code> parameter must be included.
    """

    name: Optional[String] = None
    command: Optional[StringList] = None
    environment: Optional[EnvironmentVariables] = None
    environmentFiles: Optional[EnvironmentFiles] = None
    cpu: Optional[BoxedInteger] = None
    memory: Optional[BoxedInteger] = None
    memoryReservation: Optional[BoxedInteger] = None
    resourceRequirements: Optional[ResourceRequirements] = None


class ContainerOverrides(BaseModel):
    __root__: List[ContainerOverride]


class ContainerStateChange(BaseModel):
    """
    An object representing a change in state for a container.
    """

    containerName: Optional[String] = None
    imageDigest: Optional[String] = None
    runtimeId: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    networkBindings: Optional[NetworkBindings] = None
    reason: Optional[String] = None
    status: Optional[String] = None


class ContainerStateChanges(BaseModel):
    __root__: List[ContainerStateChange]


class Containers1(BaseModel):
    __root__: List[Container1]


class LoadBalancers(BaseModel):
    __root__: List[LoadBalancer]


class ServiceRegistries(BaseModel):
    __root__: List[ServiceRegistry]


class DeploymentConfiguration(BaseModel):
    """
    Optional deployment parameters that control how many tasks run during a deployment and the ordering of stopping and starting tasks.
    """

    deploymentCircuitBreaker: Optional[DeploymentCircuitBreaker] = None
    maximumPercent: Optional[BoxedInteger] = None
    minimumHealthyPercent: Optional[BoxedInteger] = None


class PlacementConstraints(BaseModel):
    __root__: List[PlacementConstraint]


class DeploymentController(BaseModel):
    """
    The deployment controller to use for the service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/deployment-types.html">Amazon ECS Deployment Types</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    type: DeploymentControllerType


class Scale(BaseModel):
    """
    A floating-point percentage of the desired number of tasks to place and keep running in the task set.
    """

    value: Optional[Double] = None
    unit: Optional[ScaleUnit] = None


class TaskSet(BaseModel):
    """
    Information about a set of Amazon ECS tasks in either an CodeDeploy or an <code>EXTERNAL</code> deployment. An Amazon ECS task set includes details such as the desired number of tasks, how many tasks are running, and whether the task set serves production traffic.
    """

    id: Optional[String] = None
    taskSetArn: Optional[String] = None
    serviceArn: Optional[String] = None
    clusterArn: Optional[String] = None
    startedBy: Optional[String] = None
    externalId: Optional[String] = None
    status: Optional[String] = None
    taskDefinition: Optional[String] = None
    computedDesiredCount: Optional[Integer] = None
    pendingCount: Optional[Integer] = None
    runningCount: Optional[Integer] = None
    createdAt: Optional[Timestamp] = None
    updatedAt: Optional[Timestamp] = None
    launchType: Optional[Compatibility] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    platformVersion: Optional[String] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    loadBalancers: Optional[LoadBalancers] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    scale: Optional[Scale] = None
    stabilityStatus: Optional[StabilityStatus] = None
    stabilityStatusAt: Optional[Timestamp] = None
    tags: Optional[Tags] = None


class Deployment(BaseModel):
    """
    The details of an Amazon ECS service deployment. This is used only when a service uses the <code>ECS</code> deployment controller type.
    """

    id: Optional[String] = None
    status: Optional[String] = None
    taskDefinition: Optional[String] = None
    desiredCount: Optional[Integer] = None
    pendingCount: Optional[Integer] = None
    runningCount: Optional[Integer] = None
    failedTasks: Optional[Integer] = None
    createdAt: Optional[Timestamp] = None
    updatedAt: Optional[Timestamp] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    launchType: Optional[Compatibility] = None
    platformVersion: Optional[String] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    rolloutState: Optional[DeploymentRolloutState] = None
    rolloutStateReason: Optional[String] = None


class Deployments(BaseModel):
    __root__: List[Deployment]


class Failures(BaseModel):
    __root__: List[Failure]


class ServiceFieldList(CapacityProviderFieldList):
    pass


class TaskDefinitionFieldList(CapacityProviderFieldList):
    pass


class TaskSetFieldList(CapacityProviderFieldList):
    pass


class TaskSets(BaseModel):
    __root__: List[TaskSet]


class TaskFieldList(CapacityProviderFieldList):
    pass


class DeviceCgroupPermissions(BaseModel):
    __root__: List[DeviceCgroupPermission]


class Device(BaseModel):
    """
    An object representing a container instance host device.
    """

    hostPath: String
    containerPath: Optional[String] = None
    permissions: Optional[DeviceCgroupPermissions] = None


class DevicesList(BaseModel):
    __root__: List[Device]


class Session(BaseModel):
    """
    The details of the execute command session.
    """

    sessionId: Optional[String] = None
    streamUrl: Optional[String] = None
    tokenValue: Optional[SensitiveString] = None


class TmpfsList(BaseModel):
    __root__: List[Tmpfs]


class PlacementStrategy(BaseModel):
    """
    The task placement strategy for a task or service. For more information, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task Placement Strategies</a> in the <i>Amazon Elastic Container Service Developer Guide</i>.
    """

    type: Optional[PlacementStrategyType] = None
    field: Optional[String] = None


class VolumeList(BaseModel):
    __root__: List[Volume]


class TaskDefinitionPlacementConstraints(BaseModel):
    __root__: List[TaskDefinitionPlacementConstraint]


class TaskOverride(BaseModel):
    """
    The overrides associated with a task.
    """

    containerOverrides: Optional[ContainerOverrides] = None
    cpu: Optional[String] = None
    inferenceAcceleratorOverrides: Optional[InferenceAcceleratorOverrides] = None
    executionRoleArn: Optional[String] = None
    memory: Optional[String] = None
    taskRoleArn: Optional[String] = None
    ephemeralStorage: Optional[EphemeralStorage] = None


class ServiceEvents(BaseModel):
    __root__: List[ServiceEvent]


class Task(BaseModel):
    """
    Details on a task in a cluster.
    """

    attachments: Optional[Attachments2] = None
    attributes: Optional[Attributes] = None
    availabilityZone: Optional[String] = None
    capacityProviderName: Optional[String] = None
    clusterArn: Optional[String] = None
    connectivity: Optional[Connectivity] = None
    connectivityAt: Optional[Timestamp] = None
    containerInstanceArn: Optional[String] = None
    containers: Optional[Containers1] = None
    cpu: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    desiredStatus: Optional[String] = None
    enableExecuteCommand: Optional[Boolean] = None
    executionStoppedAt: Optional[Timestamp] = None
    group: Optional[String] = None
    healthStatus: Optional[HealthStatus] = None
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    lastStatus: Optional[String] = None
    launchType: Optional[Compatibility] = None
    memory: Optional[String] = None
    overrides: Optional[TaskOverride] = None
    platformVersion: Optional[String] = None
    pullStartedAt: Optional[Timestamp] = None
    pullStoppedAt: Optional[Timestamp] = None
    startedAt: Optional[Timestamp] = None
    startedBy: Optional[String] = None
    stopCode: Optional[TaskStopCode] = None
    stoppedAt: Optional[Timestamp] = None
    stoppedReason: Optional[String] = None
    stoppingAt: Optional[Timestamp] = None
    tags: Optional[Tags] = None
    taskArn: Optional[String] = None
    taskDefinitionArn: Optional[String] = None
    version: Optional[Long] = None
    ephemeralStorage: Optional[EphemeralStorage] = None


class CreateCapacityProviderResponse(BaseModel):
    capacityProvider: Optional[CapacityProvider] = None


class CreateCapacityProviderRequest(BaseModel):
    name: String
    autoScalingGroupProvider: AutoScalingGroupProvider
    tags: Optional[Tags] = None


class CreateTaskSetResponse(BaseModel):
    taskSet: Optional[TaskSet] = None


class CreateTaskSetRequest(BaseModel):
    service: String
    cluster: String
    externalId: Optional[String] = None
    taskDefinition: String
    networkConfiguration: Optional[NetworkConfiguration] = None
    loadBalancers: Optional[LoadBalancers] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    launchType: Optional[Compatibility] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    platformVersion: Optional[String] = None
    scale: Optional[Scale] = None
    clientToken: Optional[String] = None
    tags: Optional[Tags] = None


class DeleteCapacityProviderResponse(CreateCapacityProviderResponse):
    pass


class DeleteTaskSetResponse(CreateTaskSetResponse):
    pass


class DeregisterContainerInstanceResponse(BaseModel):
    containerInstance: Optional[ContainerInstance] = None


class DescribeCapacityProvidersResponse(BaseModel):
    capacityProviders: Optional[CapacityProviders] = None
    failures: Optional[Failures] = None
    nextToken: Optional[String] = None


class DescribeContainerInstancesResponse(BaseModel):
    containerInstances: Optional[ContainerInstances] = None
    failures: Optional[Failures] = None


class DescribeServicesRequest(BaseModel):
    cluster: Optional[String] = None
    services: StringList
    include: Optional[ServiceFieldList] = None


class DescribeTaskDefinitionRequest(BaseModel):
    taskDefinition: String
    include: Optional[TaskDefinitionFieldList] = None


class DescribeTaskSetsResponse(BaseModel):
    taskSets: Optional[TaskSets] = None
    failures: Optional[Failures] = None


class DescribeTaskSetsRequest(BaseModel):
    cluster: String
    service: String
    taskSets: Optional[StringList] = None
    include: Optional[TaskSetFieldList] = None


class DescribeTasksRequest(BaseModel):
    cluster: Optional[String] = None
    tasks: StringList
    include: Optional[TaskFieldList] = None


class ExecuteCommandResponse(BaseModel):
    clusterArn: Optional[String] = None
    containerArn: Optional[String] = None
    containerName: Optional[String] = None
    interactive: Optional[Boolean] = None
    session: Optional[Session] = None
    taskArn: Optional[String] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[Tags] = None


class PutClusterCapacityProvidersRequest(BaseModel):
    cluster: String
    capacityProviders: StringList
    defaultCapacityProviderStrategy: CapacityProviderStrategy


class RegisterContainerInstanceResponse(DeregisterContainerInstanceResponse):
    pass


class RegisterContainerInstanceRequest(BaseModel):
    cluster: Optional[String] = None
    instanceIdentityDocument: Optional[String] = None
    instanceIdentityDocumentSignature: Optional[String] = None
    totalResources: Optional[Resources] = None
    versionInfo: Optional[VersionInfo] = None
    containerInstanceArn: Optional[String] = None
    attributes: Optional[Attributes] = None
    platformDevices: Optional[PlatformDevices] = None
    tags: Optional[Tags] = None


class StartTaskRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    group: Optional[String] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    overrides: Optional[TaskOverride] = None
    propagateTags: Optional[PropagateTags] = None
    referenceId: Optional[String] = None
    startedBy: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: String


class StopTaskResponse(BaseModel):
    task: Optional[Task] = None


class SubmitContainerStateChangeRequest(BaseModel):
    cluster: Optional[String] = None
    task: Optional[String] = None
    containerName: Optional[String] = None
    runtimeId: Optional[String] = None
    status: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    reason: Optional[String] = None
    networkBindings: Optional[NetworkBindings] = None


class SubmitTaskStateChangeRequest(BaseModel):
    cluster: Optional[String] = None
    task: Optional[String] = None
    status: Optional[String] = None
    reason: Optional[String] = None
    containers: Optional[ContainerStateChanges] = None
    attachments: Optional[AttachmentStateChanges] = None
    managedAgents: Optional[ManagedAgentStateChanges] = None
    pullStartedAt: Optional[Timestamp] = None
    pullStoppedAt: Optional[Timestamp] = None
    executionStoppedAt: Optional[Timestamp] = None


class TagResourceRequest(BaseModel):
    resourceArn: String
    tags: Tags


class UpdateCapacityProviderResponse(CreateCapacityProviderResponse):
    pass


class UpdateCapacityProviderRequest(BaseModel):
    name: String
    autoScalingGroupProvider: AutoScalingGroupProviderUpdate


class UpdateClusterSettingsRequest(BaseModel):
    cluster: String
    settings: ClusterSettings


class UpdateContainerAgentResponse(DeregisterContainerInstanceResponse):
    pass


class UpdateContainerInstancesStateResponse(DescribeContainerInstancesResponse):
    pass


class UpdateServicePrimaryTaskSetResponse(CreateTaskSetResponse):
    pass


class UpdateTaskSetResponse(CreateTaskSetResponse):
    pass


class UpdateTaskSetRequest(BaseModel):
    cluster: String
    service: String
    taskSet: String
    scale: Scale


class ClusterConfiguration(BaseModel):
    """
    The execute command configuration for the cluster.
    """

    executeCommandConfiguration: Optional[ExecuteCommandConfiguration] = None


class Cluster(BaseModel):
    """
    A regional grouping of one or more container instances on which you can run task requests. Each account receives a default cluster the first time you use the Amazon ECS service, but you may also create other clusters. Clusters may contain more than one instance type simultaneously.
    """

    clusterArn: Optional[String] = None
    clusterName: Optional[String] = None
    configuration: Optional[ClusterConfiguration] = None
    status: Optional[String] = None
    registeredContainerInstancesCount: Optional[Integer] = None
    runningTasksCount: Optional[Integer] = None
    pendingTasksCount: Optional[Integer] = None
    activeServicesCount: Optional[Integer] = None
    statistics: Optional[Statistics] = None
    tags: Optional[Tags] = None
    settings: Optional[ClusterSettings] = None
    capacityProviders: Optional[StringList] = None
    defaultCapacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    attachments: Optional[Attachments2] = None
    attachmentsStatus: Optional[String] = None


class Clusters(BaseModel):
    __root__: List[Cluster]


class LinuxParameters(BaseModel):
    """
    Linux-specific options that are applied to the container, such as Linux <a>KernelCapabilities</a>.
    """

    capabilities: Optional[KernelCapabilities] = None
    devices: Optional[DevicesList] = None
    initProcessEnabled: Optional[BoxedBoolean] = None
    sharedMemorySize: Optional[BoxedInteger] = None
    tmpfs: Optional[TmpfsList] = None
    maxSwap: Optional[BoxedInteger] = None
    swappiness: Optional[BoxedInteger] = None


class ContainerDefinition(BaseModel):
    """
    Container definitions are used in task definitions to describe the different containers that are launched as part of a task.
    """

    name: Optional[String] = None
    image: Optional[String] = None
    repositoryCredentials: Optional[RepositoryCredentials] = None
    cpu: Optional[Integer] = None
    memory: Optional[BoxedInteger] = None
    memoryReservation: Optional[BoxedInteger] = None
    links: Optional[StringList] = None
    portMappings: Optional[PortMappingList] = None
    essential: Optional[BoxedBoolean] = None
    entryPoint: Optional[StringList] = None
    command: Optional[StringList] = None
    environment: Optional[EnvironmentVariables] = None
    environmentFiles: Optional[EnvironmentFiles] = None
    mountPoints: Optional[MountPointList] = None
    volumesFrom: Optional[VolumeFromList] = None
    linuxParameters: Optional[LinuxParameters] = None
    secrets: Optional[SecretList] = None
    dependsOn: Optional[ContainerDependencies] = None
    startTimeout: Optional[BoxedInteger] = None
    stopTimeout: Optional[BoxedInteger] = None
    hostname: Optional[String] = None
    user: Optional[String] = None
    workingDirectory: Optional[String] = None
    disableNetworking: Optional[BoxedBoolean] = None
    privileged: Optional[BoxedBoolean] = None
    readonlyRootFilesystem: Optional[BoxedBoolean] = None
    dnsServers: Optional[StringList] = None
    dnsSearchDomains: Optional[StringList] = None
    extraHosts: Optional[HostEntryList] = None
    dockerSecurityOptions: Optional[StringList] = None
    interactive: Optional[BoxedBoolean] = None
    pseudoTerminal: Optional[BoxedBoolean] = None
    dockerLabels: Optional[DockerLabelsMap] = None
    ulimits: Optional[UlimitList] = None
    logConfiguration: Optional[LogConfiguration1] = None
    healthCheck: Optional[HealthCheck] = None
    systemControls: Optional[SystemControls] = None
    resourceRequirements: Optional[ResourceRequirements] = None
    firelensConfiguration: Optional[FirelensConfiguration] = None


class ContainerDefinitions(BaseModel):
    __root__: List[ContainerDefinition]


class PlacementStrategies(BaseModel):
    __root__: List[PlacementStrategy]


class Service(BaseModel):
    """
    Details on a service within a cluster
    """

    serviceArn: Optional[String] = None
    serviceName: Optional[String] = None
    clusterArn: Optional[String] = None
    loadBalancers: Optional[LoadBalancers] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    status: Optional[String] = None
    desiredCount: Optional[Integer] = None
    runningCount: Optional[Integer] = None
    pendingCount: Optional[Integer] = None
    launchType: Optional[Compatibility] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    platformVersion: Optional[String] = None
    taskDefinition: Optional[String] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    taskSets: Optional[TaskSets] = None
    deployments: Optional[Deployments] = None
    roleArn: Optional[String] = None
    events: Optional[ServiceEvents] = None
    createdAt: Optional[Timestamp] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None
    deploymentController: Optional[DeploymentController] = None
    tags: Optional[Tags] = None
    createdBy: Optional[String] = None
    enableECSManagedTags: Optional[Boolean] = None
    propagateTags: Optional[PropagateTags] = None
    enableExecuteCommand: Optional[Boolean] = None


class TaskDefinition(BaseModel):
    """
    The details of a task definition which describes the container and volume definitions of an Amazon Elastic Container Service task. You can specify which Docker images to use, the required resources, and other configurations related to launching the task definition through an Amazon ECS service or task.
    """

    taskDefinitionArn: Optional[String] = None
    containerDefinitions: Optional[ContainerDefinitions] = None
    family: Optional[String] = None
    taskRoleArn: Optional[String] = None
    executionRoleArn: Optional[String] = None
    networkMode: Optional[NetworkMode] = None
    revision: Optional[Integer] = None
    volumes: Optional[VolumeList] = None
    status: Optional[CapacityProviderStatus] = None
    requiresAttributes: Optional[RequiresAttributes] = None
    placementConstraints: Optional[TaskDefinitionPlacementConstraints] = None
    compatibilities: Optional[CompatibilityList] = None
    requiresCompatibilities: Optional[CompatibilityList] = None
    cpu: Optional[String] = None
    memory: Optional[String] = None
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    pidMode: Optional[PidMode] = None
    ipcMode: Optional[IpcMode] = None
    proxyConfiguration: Optional[ProxyConfiguration] = None
    registeredAt: Optional[Timestamp] = None
    deregisteredAt: Optional[Timestamp] = None
    registeredBy: Optional[String] = None
    ephemeralStorage: Optional[EphemeralStorage] = None


class Services(BaseModel):
    __root__: List[Service]


class Tasks(BaseModel):
    __root__: List[Task]


class CreateClusterResponse(BaseModel):
    cluster: Optional[Cluster] = None


class CreateClusterRequest(BaseModel):
    clusterName: Optional[String] = None
    tags: Optional[Tags] = None
    settings: Optional[ClusterSettings] = None
    configuration: Optional[ClusterConfiguration] = None
    capacityProviders: Optional[StringList] = None
    defaultCapacityProviderStrategy: Optional[CapacityProviderStrategy] = None


class CreateServiceResponse(BaseModel):
    service: Optional[Service] = None


class CreateServiceRequest(BaseModel):
    cluster: Optional[String] = None
    serviceName: String
    taskDefinition: Optional[String] = None
    loadBalancers: Optional[LoadBalancers] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    desiredCount: Optional[BoxedInteger] = None
    clientToken: Optional[String] = None
    launchType: Optional[Compatibility] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    platformVersion: Optional[String] = None
    role: Optional[String] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None
    deploymentController: Optional[DeploymentController] = None
    tags: Optional[Tags] = None
    enableECSManagedTags: Optional[Boolean] = None
    propagateTags: Optional[PropagateTags] = None
    enableExecuteCommand: Optional[Boolean] = None


class DeleteClusterResponse(CreateClusterResponse):
    pass


class DeleteServiceResponse(CreateServiceResponse):
    pass


class DeregisterTaskDefinitionResponse(BaseModel):
    taskDefinition: Optional[TaskDefinition] = None


class DescribeClustersResponse(BaseModel):
    clusters: Optional[Clusters] = None
    failures: Optional[Failures] = None


class DescribeServicesResponse(BaseModel):
    services: Optional[Services] = None
    failures: Optional[Failures] = None


class DescribeTaskDefinitionResponse(BaseModel):
    taskDefinition: Optional[TaskDefinition] = None
    tags: Optional[Tags] = None


class DescribeTasksResponse(BaseModel):
    tasks: Optional[Tasks] = None
    failures: Optional[Failures] = None


class PutClusterCapacityProvidersResponse(CreateClusterResponse):
    pass


class RegisterTaskDefinitionResponse(DescribeTaskDefinitionResponse):
    pass


class RegisterTaskDefinitionRequest(BaseModel):
    family: String
    taskRoleArn: Optional[String] = None
    executionRoleArn: Optional[String] = None
    networkMode: Optional[NetworkMode] = None
    containerDefinitions: ContainerDefinitions
    volumes: Optional[VolumeList] = None
    placementConstraints: Optional[TaskDefinitionPlacementConstraints] = None
    requiresCompatibilities: Optional[CompatibilityList] = None
    cpu: Optional[String] = None
    memory: Optional[String] = None
    tags: Optional[Tags] = None
    pidMode: Optional[PidMode] = None
    ipcMode: Optional[IpcMode] = None
    proxyConfiguration: Optional[ProxyConfiguration] = None
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    ephemeralStorage: Optional[EphemeralStorage] = None


class RunTaskResponse(DescribeTasksResponse):
    pass


class RunTaskRequest(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    cluster: Optional[String] = None
    count: Optional[BoxedInteger] = None
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    group: Optional[String] = None
    launchType: Optional[Compatibility] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    overrides: Optional[TaskOverride] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformVersion: Optional[String] = None
    propagateTags: Optional[PropagateTags] = None
    referenceId: Optional[String] = None
    startedBy: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: String


class StartTaskResponse(DescribeTasksResponse):
    pass


class UpdateClusterResponse(CreateClusterResponse):
    pass


class UpdateClusterRequest(BaseModel):
    cluster: String
    settings: Optional[ClusterSettings] = None
    configuration: Optional[ClusterConfiguration] = None


class UpdateClusterSettingsResponse(CreateClusterResponse):
    pass


class UpdateServiceResponse(CreateServiceResponse):
    pass


class UpdateServiceRequest(BaseModel):
    cluster: Optional[String] = None
    service: String
    desiredCount: Optional[BoxedInteger] = None
    taskDefinition: Optional[String] = None
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformVersion: Optional[String] = None
    forceNewDeployment: Optional[Boolean] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    enableExecuteCommand: Optional[BoxedBoolean] = None

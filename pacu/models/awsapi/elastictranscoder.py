# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:11+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class CancelJobResponse(BaseModel):
    """
    The response body contains a JSON object. If the job is successfully canceled, the value of <code>Success</code> is <code>true</code>.
    """

    pass


class ValidationException(BaseModel):
    __root__: Any


class IncompatibleVersionException(ValidationException):
    pass


class ResourceNotFoundException(ValidationException):
    pass


class ResourceInUseException(ValidationException):
    pass


class AccessDeniedException(ValidationException):
    pass


class InternalServiceException(ValidationException):
    pass


class LongKey(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class FrameRate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^auto$)|(^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)'
        ),
    ]


class Resolution(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^\\d{1,5}x\\d{1,5}$)')]


class AspectRatio(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^1:1$)|(^4:3$)|(^3:2$)|(^16:9$)')]


class Interlaced(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^true$)|(^false$)')]


class JobContainer(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^auto$)|(^3gp$)|(^asf$)|(^avi$)|(^divx$)|(^flv$)|(^mkv$)|(^mov$)|(^mp4$)|(^mpeg$)|(^mpeg-ps$)|(^mpeg-ts$)|(^mxf$)|(^ogg$)|(^ts$)|(^vob$)|(^wav$)|(^webm$)|(^mp3$)|(^m4a$)|(^aac$)'
        ),
    ]


class Key2(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class ThumbnailPattern(BaseModel):
    __root__: Annotated[str, Field(regex='(^$)|(^.*\\{count\\}.*$)')]


class Rotate(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^0$)|(^90$)|(^180$)|(^270$)')]


class Id(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{13}-\\w{6}$')]


class FloatString(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,5}(\\.\\d{0,5})?$')]


class String(BaseModel):
    __root__: str


class LimitExceededException(ValidationException):
    pass


class SnsTopic(BaseModel):
    __root__: Annotated[str, Field(regex='(^$)|(^arn:aws:sns:.*:\\w{12}:.+$)')]


class BucketName(BaseModel):
    __root__: Annotated[str, Field(regex='^(\\w|\\.|-){1,255}$')]


class StorageClass(BaseModel):
    __root__: Annotated[str, Field(regex='(^ReducedRedundancy$)|(^Standard$)')]


class VideoCodec(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^H\\.264$)|(^vp8$)|(^vp9$)|(^mpeg2$)|(^gif$)')
    ]


class CodecOptions(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class KeyframesMaxDist(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,6}$')]


class FixedGOP(BaseModel):
    __root__: Annotated[str, Field(regex='(^true$)|(^false$)')]


class VideoBitRate(BaseModel):
    __root__: Annotated[str, Field(regex='(^\\d{2,5}$)|(^auto$)')]


class MaxFrameRate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^10$)|(^15$)|(^23.97$)|(^24$)|(^25$)|(^29.97$)|(^30$)|(^50$)|(^60$)'
        ),
    ]


class DigitsOrAuto(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^\\d{2,4}$)')]


class SizingPolicy(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^Fit$)|(^Fill$)|(^Stretch$)|(^Keep$)|(^ShrinkToFit$)|(^ShrinkToFill$)'
        ),
    ]


class PaddingPolicy(BaseModel):
    __root__: Annotated[str, Field(regex='(^Pad$)|(^NoPad$)')]


class AudioCodec(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^AAC$)|(^vorbis$)|(^mp3$)|(^mp2$)|(^pcm$)|(^flac$)')
    ]


class AudioSampleRate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^auto$)|(^22050$)|(^32000$)|(^44100$)|(^48000$)|(^96000$)|(^192000$)'
        ),
    ]


class AudioBitRate(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,3}$')]


class AudioChannels(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^0$)|(^1$)|(^2$)')]


class AudioPackingMode(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^SingleTrack$)|(^OneChannelPerTrack$)|(^OneChannelPerTrackWithMosTo8Tracks$)'
        ),
    ]


class JpgOrPng(BaseModel):
    __root__: Annotated[str, Field(regex='(^jpg$)|(^png$)')]


class Digits(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,5}$')]


class ThumbnailResolution(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,5}x\\d{1,5}$')]


class DeletePipelineResponse(CancelJobResponse):
    """
    The <code>DeletePipelineResponse</code> structure.
    """

    pass


class DeletePresetResponse(CancelJobResponse):
    """
    The <code>DeletePresetResponse</code> structure.
    """

    pass


class AccessControl(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^FullControl$)|(^Read$)|(^ReadAcp$)|(^WriteAcp$)')
    ]


class AccessControls(BaseModel):
    __root__: Annotated[List[AccessControl], Field(max_items=30)]


class WatermarkKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1024,
            min_length=1,
            regex='(^.{1,1020}.jpg$)|(^.{1,1019}.jpeg$)|(^.{1,1020}.png$)',
        ),
    ]


class Ascending(FixedGOP):
    pass


class AudioBitDepth(BaseModel):
    __root__: Annotated[str, Field(regex='(^8$)|(^16$)|(^24$)|(^32$)')]


class AudioBitOrder(BaseModel):
    __root__: Annotated[str, Field(regex='(^LittleEndian$)')]


class AudioCodecProfile(BaseModel):
    __root__: Annotated[str, Field(regex='(^auto$)|(^AAC-LC$)|(^HE-AAC$)|(^HE-AACv2$)')]


class AudioSigned(BaseModel):
    __root__: Annotated[str, Field(regex='(^Unsigned$)|(^Signed$)')]


class Base64EncodedString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='^$|(^(?:[A-Za-z0-9\\+/]{4})*(?:[A-Za-z0-9\\+/]{2}==|[A-Za-z0-9\\+/]{3}=)?$)'
        ),
    ]


class CancelJobRequest(BaseModel):
    """
    The <code>CancelJobRequest</code> structure.
    """

    pass


class CaptionFormatFormat(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^mov-text$)|(^srt$)|(^scc$)|(^webvtt$)|(^dfxp$)|(^cea-708$)')
    ]


class CaptionFormatPattern(BaseModel):
    __root__: Annotated[str, Field(regex='(^$)|(^.*\\{language\\}.*$)')]


class CaptionMergePolicy(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^MergeOverride$)|(^MergeRetain$)|(^Override$)')
    ]


class TimeOffset(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^[+-]?\\d{1,5}(\\.\\d{0,3})?$)|(^[+-]?([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\\.\\d{0,3})?$)'
        ),
    ]


class Name1(BaseModel):
    __root__: Annotated[str, Field(max_length=40, min_length=1)]


class CodecOption(Key2):
    pass


class Filename(Key2):
    pass


class PlaylistFormat(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^HLSv3$)|(^HLSv4$)|(^Smooth$)|(^MPEG-DASH$)')
    ]


class OutputKeys(BaseModel):
    __root__: Annotated[List[Key2], Field(max_items=30)]


class UserMetadata(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Role(BaseModel):
    __root__: Annotated[str, Field(regex='^arn:aws:iam::\\w{12}:role/.+$')]


class KeyArn(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=0)]


class Notifications(BaseModel):
    """
    <p>The Amazon Simple Notification Service (Amazon SNS) topic or topics to notify in order to report job status.</p> <important> <p>To receive notifications, you must also subscribe to the new topic in the Amazon SNS console.</p> </important>
    """

    Progressing: Optional[SnsTopic] = None
    Completed: Optional[SnsTopic] = None
    Warning: Optional[SnsTopic] = None
    Error: Optional[SnsTopic] = None


class Description(KeyArn):
    pass


class PresetContainer(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^mp4$)|(^ts$)|(^webm$)|(^mp3$)|(^flac$)|(^oga$)|(^ogg$)|(^fmp4$)|(^mpg$)|(^flv$)|(^gif$)|(^mxf$)|(^wav$)|(^mp2$)'
        ),
    ]


class Thumbnails(BaseModel):
    """
    Thumbnails for videos.
    """

    Format: Optional[JpgOrPng] = None
    Interval: Optional[Digits] = None
    Resolution: Optional[ThumbnailResolution] = None
    AspectRatio: Optional[AspectRatio] = None
    MaxWidth: Optional[DigitsOrAuto] = None
    MaxHeight: Optional[DigitsOrAuto] = None
    SizingPolicy: Optional[SizingPolicy] = None
    PaddingPolicy: Optional[PaddingPolicy] = None


class DeletePipelineRequest(BaseModel):
    """
    The <code>DeletePipelineRequest</code> structure.
    """

    pass


class DeletePresetRequest(BaseModel):
    """
    The <code>DeletePresetRequest</code> structure.
    """

    pass


class NullableInteger(BaseModel):
    __root__: int


class NullableLong(NullableInteger):
    pass


class EncryptionMode(BaseModel):
    __root__: Annotated[
        str,
        Field(regex='(^s3$)|(^s3-aws-kms$)|(^aes-cbc-pkcs7$)|(^aes-ctr$)|(^aes-gcm$)'),
    ]


class ZeroTo255String(KeyArn):
    pass


class ExceptionMessages(BaseModel):
    __root__: List[String]


class Grantee(Key2):
    pass


class GranteeType(BaseModel):
    __root__: Annotated[str, Field(regex='(^Canonical$)|(^Email$)|(^Group$)')]


class HlsContentProtectionMethod(BaseModel):
    __root__: Annotated[str, Field(regex='(^aes-128$)')]


class ZeroTo512String(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=0)]


class KeyStoragePolicy(BaseModel):
    __root__: Annotated[str, Field(regex='(^NoStore$)|(^WithVariantPlaylists$)')]


class HorizontalAlign(BaseModel):
    __root__: Annotated[str, Field(regex='(^Left$)|(^Right$)|(^Center$)')]


class JobStatus(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^Submitted$)|(^Progressing$)|(^Complete$)|(^Canceled$)|(^Error$)'
        ),
    ]


class Timing(BaseModel):
    """
    Details about the timing of a job.
    """

    SubmitTimeMillis: Optional[NullableLong] = None
    StartTimeMillis: Optional[NullableLong] = None
    FinishTimeMillis: Optional[NullableLong] = None


class MergePolicy(BaseModel):
    __root__: Annotated[
        str, Field(regex='(^Replace$)|(^Prepend$)|(^Append$)|(^Fallback$)')
    ]


class PresetWatermarkId(Name1):
    pass


class KeyIdGuid(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$)|(^[0-9A-Fa-f]{32}$)'
        ),
    ]


class ListJobsByPipelineRequest(BaseModel):
    """
    The <code>ListJobsByPipelineRequest</code> structure.
    """

    pass


class ListJobsByStatusRequest(BaseModel):
    """
    The <code>ListJobsByStatusRequest</code> structure.
    """

    pass


class ListPipelinesRequest(BaseModel):
    """
    The <code>ListPipelineRequest</code> structure.
    """

    pass


class ListPresetsRequest(BaseModel):
    """
    The <code>ListPresetsRequest</code> structure.
    """

    pass


class NonEmptyBase64EncodedString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^(?:[A-Za-z0-9\\+/]{4})*(?:[A-Za-z0-9\\+/]{2}==|[A-Za-z0-9\\+/]{3}=)?$)'
        ),
    ]


class OneTo512String(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class Opacity(BaseModel):
    __root__: Annotated[str, Field(regex='^\\d{1,3}(\\.\\d{0,20})?$')]


class Permission(BaseModel):
    """
    The <code>Permission</code> structure.
    """

    GranteeType: Optional[GranteeType] = None
    Grantee: Optional[Grantee] = None
    Access: Optional[AccessControls] = None


class PipelineStatus(BaseModel):
    __root__: Annotated[str, Field(regex='(^Active$)|(^Paused$)')]


class PixelsOrPercent(BaseModel):
    __root__: Annotated[str, Field(regex='(^\\d{1,3}(\\.\\d{0,5})?%$)|(^\\d{1,4}?px$)')]


class PlayReadyDrmFormatString(BaseModel):
    __root__: Annotated[str, Field(regex='(^microsoft$)|(^discretix-3.0$)')]


class PresetType(BaseModel):
    __root__: Annotated[str, Field(regex='(^System$)|(^Custom$)')]


class WatermarkSizingPolicy(BaseModel):
    __root__: Annotated[str, Field(regex='(^Fit$)|(^Stretch$)|(^ShrinkToFit$)')]


class VerticalAlign(BaseModel):
    __root__: Annotated[str, Field(regex='(^Top$)|(^Bottom$)|(^Center$)')]


class Target(BaseModel):
    __root__: Annotated[str, Field(regex='(^Content$)|(^Frame$)')]


class PresetWatermark(BaseModel):
    """
    <p>Settings for the size, location, and opacity of graphics that you want Elastic Transcoder to overlay over videos that are transcoded using this preset. You can specify settings for up to four watermarks. Watermarks appear in the specified size and location, and with the specified opacity for the duration of the transcoded video.</p> <p>Watermarks can be in .png or .jpg format. If you want to display a watermark that is not rectangular, use the .png format, which supports transparency.</p> <p>When you create a job that uses this preset, you specify the .png or .jpg graphics that you want Elastic Transcoder to include in the transcoded videos. You can specify fewer graphics in the job than you specify watermark settings in the preset, which allows you to use the same preset for up to four watermarks that have different dimensions.</p>
    """

    Id: Optional[PresetWatermarkId] = None
    MaxWidth: Optional[PixelsOrPercent] = None
    MaxHeight: Optional[PixelsOrPercent] = None
    SizingPolicy: Optional[WatermarkSizingPolicy] = None
    HorizontalAlign: Optional[HorizontalAlign] = None
    HorizontalOffset: Optional[PixelsOrPercent] = None
    VerticalAlign: Optional[VerticalAlign] = None
    VerticalOffset: Optional[PixelsOrPercent] = None
    Opacity: Optional[Opacity] = None
    Target: Optional[Target] = None


class ReadJobRequest(BaseModel):
    """
    The <code>ReadJobRequest</code> structure.
    """

    pass


class ReadPipelineRequest(BaseModel):
    """
    The <code>ReadPipelineRequest</code> structure.
    """

    pass


class ReadPresetRequest(BaseModel):
    """
    The <code>ReadPresetRequest</code> structure.
    """

    pass


class SnsTopics(BaseModel):
    __root__: Annotated[List[SnsTopic], Field(max_items=30)]


class Success(FixedGOP):
    pass


class TestRoleRequest(BaseModel):
    """
    The <code>TestRoleRequest</code> structure.
    """

    Role: Role
    InputBucket: BucketName
    OutputBucket: BucketName
    Topics: SnsTopics


class Time(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^\\d{1,5}(\\.\\d{0,3})?$)|(^([0-1]?[0-9]:|2[0-3]:)?([0-5]?[0-9]:)?[0-5]?[0-9](\\.\\d{0,3})?$)'
        ),
    ]


class UpdatePipelineNotificationsRequest(BaseModel):
    """
    The <code>UpdatePipelineNotificationsRequest</code> structure.
    """

    Notifications: Notifications


class UpdatePipelineStatusRequest(BaseModel):
    """
    The <code>UpdatePipelineStatusRequest</code> structure.
    """

    Status: PipelineStatus


class Warning(BaseModel):
    """
    <p>Elastic Transcoder returns a warning if the resources used by your pipeline are not in the same region as the pipeline.</p> <p>Using resources in the same region, such as your Amazon S3 buckets, Amazon SNS notification topics, and AWS KMS key, reduces processing time and prevents cross-regional charges.</p>
    """

    Code: Optional[String] = None
    Message: Optional[String] = None


class Encryption(BaseModel):
    """
    The encryption settings, if any, that are used for decrypting your input files or encrypting your output files. If your input file is encrypted, you must specify the mode that Elastic Transcoder uses to decrypt your file, otherwise you must specify the mode you want Elastic Transcoder to use to encrypt your output files.
    """

    Mode: Optional[EncryptionMode] = None
    Key: Optional[Base64EncodedString] = None
    KeyMd5: Optional[Base64EncodedString] = None
    InitializationVector: Optional[ZeroTo255String] = None


class TimeSpan(BaseModel):
    """
    Settings that determine when a clip begins and how long it lasts.
    """

    StartTime: Optional[Time] = None
    Duration: Optional[Time] = None


class DetectedProperties(BaseModel):
    """
    The detected properties of the input file. Elastic Transcoder identifies these values from the input file.
    """

    Width: Optional[NullableInteger] = None
    Height: Optional[NullableInteger] = None
    FrameRate: Optional[FloatString] = None
    FileSize: Optional[NullableLong] = None
    DurationMillis: Optional[NullableLong] = None


class Permissions(BaseModel):
    __root__: Annotated[List[Permission], Field(max_items=30)]


class PresetWatermarks(BaseModel):
    __root__: List[PresetWatermark]


class AudioCodecOptions(BaseModel):
    """
    Options associated with your audio codec.
    """

    Profile: Optional[AudioCodecProfile] = None
    BitDepth: Optional[AudioBitDepth] = None
    BitOrder: Optional[AudioBitOrder] = None
    Signed: Optional[AudioSigned] = None


class TestRoleResponse(BaseModel):
    """
    The <code>TestRoleResponse</code> structure.
    """

    Success: Optional[Success] = None
    Messages: Optional[ExceptionMessages] = None


class Artwork1(BaseModel):
    """
    <p>The file to be used as album art. There can be multiple artworks associated with an audio file, to a maximum of 20.</p> <p>To remove artwork or leave the artwork empty, you can either set <code>Artwork</code> to null, or set the <code>Merge Policy</code> to "Replace" and use an empty <code>Artwork</code> array.</p> <p>To pass through existing artwork unchanged, set the <code>Merge Policy</code> to "Prepend", "Append", or "Fallback", and use an empty <code>Artwork</code> array.</p>
    """

    InputKey: Optional[WatermarkKey] = None
    MaxWidth: Optional[DigitsOrAuto] = None
    MaxHeight: Optional[DigitsOrAuto] = None
    SizingPolicy: Optional[SizingPolicy] = None
    PaddingPolicy: Optional[PaddingPolicy] = None
    AlbumArtFormat: Optional[JpgOrPng] = None
    Encryption: Optional[Encryption] = None


class Artworks(BaseModel):
    __root__: List[Artwork1]


class AudioParameters(BaseModel):
    """
    Parameters required for transcoding audio.
    """

    Codec: Optional[AudioCodec] = None
    SampleRate: Optional[AudioSampleRate] = None
    BitRate: Optional[AudioBitRate] = None
    Channels: Optional[AudioChannels] = None
    AudioPackingMode: Optional[AudioPackingMode] = None
    CodecOptions: Optional[AudioCodecOptions] = None


class CaptionFormat(BaseModel):
    """
    The file format of the output captions. If you leave this value blank, Elastic Transcoder returns an error.
    """

    Format: Optional[CaptionFormatFormat] = None
    Pattern: Optional[CaptionFormatPattern] = None
    Encryption: Optional[Encryption] = None


class CaptionFormats(BaseModel):
    __root__: Annotated[List[CaptionFormat], Field(max_items=4)]


class CaptionSource(BaseModel):
    """
    A source file for the input sidecar captions used during the transcoding process.
    """

    Key: Optional[LongKey] = None
    Language: Optional[Key2] = None
    TimeOffset: Optional[TimeOffset] = None
    Label: Optional[Name1] = None
    Encryption: Optional[Encryption] = None


class CaptionSources(BaseModel):
    __root__: Annotated[List[CaptionSource], Field(max_items=20)]


class Clip(BaseModel):
    """
    Settings for one clip in a composition. All jobs in a playlist must have the same clip settings.
    """

    TimeSpan: Optional[TimeSpan] = None


class HlsContentProtection(BaseModel):
    """
    The HLS content protection settings, if any, that you want Elastic Transcoder to apply to your output files.
    """

    Method: Optional[HlsContentProtectionMethod] = None
    Key: Optional[Base64EncodedString] = None
    KeyMd5: Optional[Base64EncodedString] = None
    InitializationVector: Optional[ZeroTo255String] = None
    LicenseAcquisitionUrl: Optional[ZeroTo512String] = None
    KeyStoragePolicy: Optional[KeyStoragePolicy] = None


class PlayReadyDrm(BaseModel):
    """
    <p>The PlayReady DRM settings, if any, that you want Elastic Transcoder to apply to the output files associated with this playlist.</p> <p>PlayReady DRM encrypts your media files using <code>aes-ctr</code> encryption.</p> <p>If you use DRM for an <code>HLSv3</code> playlist, your outputs must have a master playlist.</p>
    """

    Format: Optional[PlayReadyDrmFormatString] = None
    Key: Optional[NonEmptyBase64EncodedString] = None
    KeyMd5: Optional[NonEmptyBase64EncodedString] = None
    KeyId: Optional[KeyIdGuid] = None
    InitializationVector: Optional[ZeroTo255String] = None
    LicenseAcquisitionUrl: Optional[OneTo512String] = None


class PipelineOutputConfig(BaseModel):
    """
    The <code>PipelineOutputConfig</code> structure.
    """

    Bucket: Optional[BucketName] = None
    StorageClass: Optional[StorageClass] = None
    Permissions: Optional[Permissions] = None


class CreatePipelineRequest(BaseModel):
    """
    The <code>CreatePipelineRequest</code> structure.
    """

    Name: Name1
    InputBucket: BucketName
    OutputBucket: Optional[BucketName] = None
    Role: Role
    AwsKmsKeyArn: Optional[KeyArn] = None
    Notifications: Optional[Notifications] = None
    ContentConfig: Optional[PipelineOutputConfig] = None
    ThumbnailConfig: Optional[PipelineOutputConfig] = None


class Pipeline(BaseModel):
    """
    The pipeline (queue) that is used to manage jobs.
    """

    Id: Optional[Id] = None
    Arn: Optional[String] = None
    Name: Optional[Name1] = None
    Status: Optional[PipelineStatus] = None
    InputBucket: Optional[BucketName] = None
    OutputBucket: Optional[BucketName] = None
    Role: Optional[Role] = None
    AwsKmsKeyArn: Optional[KeyArn] = None
    Notifications: Optional[Notifications] = None
    ContentConfig: Optional[PipelineOutputConfig] = None
    ThumbnailConfig: Optional[PipelineOutputConfig] = None


class Warnings(BaseModel):
    __root__: List[Warning]


class VideoParameters(BaseModel):
    """
    The <code>VideoParameters</code> structure.
    """

    Codec: Optional[VideoCodec] = None
    CodecOptions: Optional[CodecOptions] = None
    KeyframesMaxDist: Optional[KeyframesMaxDist] = None
    FixedGOP: Optional[FixedGOP] = None
    BitRate: Optional[VideoBitRate] = None
    FrameRate: Optional[FrameRate] = None
    MaxFrameRate: Optional[MaxFrameRate] = None
    Resolution: Optional[Resolution] = None
    AspectRatio: Optional[AspectRatio] = None
    MaxWidth: Optional[DigitsOrAuto] = None
    MaxHeight: Optional[DigitsOrAuto] = None
    DisplayAspectRatio: Optional[AspectRatio] = None
    SizingPolicy: Optional[SizingPolicy] = None
    PaddingPolicy: Optional[PaddingPolicy] = None
    Watermarks: Optional[PresetWatermarks] = None


class CreatePresetRequest(BaseModel):
    """
    The <code>CreatePresetRequest</code> structure.
    """

    Name: Name1
    Description: Optional[Description] = None
    Container: PresetContainer
    Video: Optional[VideoParameters] = None
    Audio: Optional[AudioParameters] = None
    Thumbnails: Optional[Thumbnails] = None


class Preset(BaseModel):
    """
    Presets are templates that contain most of the settings for transcoding media files from one format to another. Elastic Transcoder includes some default presets for common formats, for example, several iPod and iPhone versions. You can also create your own presets for formats that aren't included among the default presets. You specify which preset you want to use when you create a job.
    """

    Id: Optional[Id] = None
    Arn: Optional[String] = None
    Name: Optional[Name1] = None
    Description: Optional[Description] = None
    Container: Optional[PresetContainer] = None
    Audio: Optional[AudioParameters] = None
    Video: Optional[VideoParameters] = None
    Thumbnails: Optional[Thumbnails] = None
    Type: Optional[PresetType] = None


class JobWatermark(BaseModel):
    """
    Watermarks can be in .png or .jpg format. If you want to display a watermark that is not rectangular, use the .png format, which supports transparency.
    """

    PresetWatermarkId: Optional[PresetWatermarkId] = None
    InputKey: Optional[WatermarkKey] = None
    Encryption: Optional[Encryption] = None


class Pipelines(BaseModel):
    __root__: List[Pipeline]


class Presets(BaseModel):
    __root__: List[Preset]


class Playlist(BaseModel):
    """
    Use Only for Fragmented MP4 or MPEG-TS Outputs. If you specify a preset for which the value of Container is <code>fmp4</code> (Fragmented MP4) or <code>ts</code> (MPEG-TS), Playlists contains information about the master playlists that you want Elastic Transcoder to create. We recommend that you create only one master playlist per output format. The maximum number of master playlists in a job is 30.
    """

    Name: Optional[Filename] = None
    Format: Optional[PlaylistFormat] = None
    OutputKeys: Optional[OutputKeys] = None
    HlsContentProtection: Optional[HlsContentProtection] = None
    PlayReadyDrm: Optional[PlayReadyDrm] = None
    Status: Optional[JobStatus] = None
    StatusDetail: Optional[Description] = None


class UpdatePipelineRequest(BaseModel):
    """
    The <code>UpdatePipelineRequest</code> structure.
    """

    Name: Optional[Name1] = None
    InputBucket: Optional[BucketName] = None
    Role: Optional[Role] = None
    AwsKmsKeyArn: Optional[KeyArn] = None
    Notifications: Optional[Notifications] = None
    ContentConfig: Optional[PipelineOutputConfig] = None
    ThumbnailConfig: Optional[PipelineOutputConfig] = None


class InputCaptions(BaseModel):
    """
    The captions to be created, if any.
    """

    MergePolicy: Optional[CaptionMergePolicy] = None
    CaptionSources: Optional[CaptionSources] = None


class JobInput(BaseModel):
    """
    Information about the file that you're transcoding.
    """

    Key: Optional[LongKey] = None
    FrameRate: Optional[FrameRate] = None
    Resolution: Optional[Resolution] = None
    AspectRatio: Optional[AspectRatio] = None
    Interlaced: Optional[Interlaced] = None
    Container: Optional[JobContainer] = None
    Encryption: Optional[Encryption] = None
    TimeSpan: Optional[TimeSpan] = None
    InputCaptions: Optional[InputCaptions] = None
    DetectedProperties: Optional[DetectedProperties] = None


class JobWatermarks(BaseModel):
    __root__: List[JobWatermark]


class JobAlbumArt(BaseModel):
    """
    The .jpg or .png file associated with an audio file.
    """

    MergePolicy: Optional[MergePolicy] = None
    Artwork: Optional[Artworks] = None


class Composition(BaseModel):
    __root__: List[Clip]


class Captions(BaseModel):
    """
    The captions to be created, if any.
    """

    MergePolicy: Optional[CaptionMergePolicy] = None
    CaptionSources: Optional[CaptionSources] = None
    CaptionFormats: Optional[CaptionFormats] = None


class CreateJobOutput(BaseModel):
    """
    The <code>CreateJobOutput</code> structure.
    """

    Key: Optional[Key2] = None
    ThumbnailPattern: Optional[ThumbnailPattern] = None
    ThumbnailEncryption: Optional[Encryption] = None
    Rotate: Optional[Rotate] = None
    PresetId: Optional[Id] = None
    SegmentDuration: Optional[FloatString] = None
    Watermarks: Optional[JobWatermarks] = None
    AlbumArt: Optional[JobAlbumArt] = None
    Composition: Optional[Composition] = None
    Captions: Optional[Captions] = None
    Encryption: Optional[Encryption] = None


class CreateJobPlaylist(BaseModel):
    """
    Information about the master playlist.
    """

    Name: Optional[Filename] = None
    Format: Optional[PlaylistFormat] = None
    OutputKeys: Optional[OutputKeys] = None
    HlsContentProtection: Optional[HlsContentProtection] = None
    PlayReadyDrm: Optional[PlayReadyDrm] = None


class CreatePipelineResponse(BaseModel):
    """
    When you create a pipeline, Elastic Transcoder returns the values that you specified in the request.
    """

    Pipeline: Optional[Pipeline] = None
    Warnings: Optional[Warnings] = None


class CreatePresetResponse(BaseModel):
    """
    The <code>CreatePresetResponse</code> structure.
    """

    Preset: Optional[Preset] = None
    Warning: Optional[String] = None


class ListPipelinesResponse(BaseModel):
    """
    A list of the pipelines associated with the current AWS account.
    """

    Pipelines: Optional[Pipelines] = None
    NextPageToken: Optional[Id] = None


class ListPresetsResponse(BaseModel):
    """
    The <code>ListPresetsResponse</code> structure.
    """

    Presets: Optional[Presets] = None
    NextPageToken: Optional[Id] = None


class ReadPipelineResponse(CreatePipelineResponse):
    """
    The <code>ReadPipelineResponse</code> structure.
    """

    pass


class ReadPresetResponse(BaseModel):
    """
    The <code>ReadPresetResponse</code> structure.
    """

    Preset: Optional[Preset] = None


class UpdatePipelineResponse(CreatePipelineResponse):
    """
    When you update a pipeline, Elastic Transcoder returns the values that you specified in the request.
    """

    pass


class UpdatePipelineNotificationsResponse(BaseModel):
    """
    The <code>UpdatePipelineNotificationsResponse</code> structure.
    """

    Pipeline: Optional[Pipeline] = None


class UpdatePipelineStatusResponse(UpdatePipelineNotificationsResponse):
    """
    When you update status for a pipeline, Elastic Transcoder returns the values that you specified in the request.
    """

    pass


class CreateJobOutputs(BaseModel):
    __root__: Annotated[List[CreateJobOutput], Field(max_items=30)]


class CreateJobPlaylists(BaseModel):
    __root__: Annotated[List[CreateJobPlaylist], Field(max_items=30)]


class JobInputs(BaseModel):
    __root__: Annotated[List[JobInput], Field(max_items=200)]


class CreateJobRequest(BaseModel):
    """
    The <code>CreateJobRequest</code> structure.
    """

    PipelineId: Id
    Input: Optional[JobInput] = None
    Inputs: Optional[JobInputs] = None
    Output: Optional[CreateJobOutput] = None
    Outputs: Optional[CreateJobOutputs] = None
    OutputKeyPrefix: Optional[Key2] = None
    Playlists: Optional[CreateJobPlaylists] = None
    UserMetadata: Optional[UserMetadata] = None


class JobOutput(BaseModel):
    """
    <important> <p>Outputs recommended instead.</p> </important> <p>If you specified one output for a job, information about that output. If you specified multiple outputs for a job, the <code>Output</code> object lists information about the first output. This duplicates the information that is listed for the first output in the <code>Outputs</code> object.</p>
    """

    Id: Optional[String] = None
    Key: Optional[Key2] = None
    ThumbnailPattern: Optional[ThumbnailPattern] = None
    ThumbnailEncryption: Optional[Encryption] = None
    Rotate: Optional[Rotate] = None
    PresetId: Optional[Id] = None
    SegmentDuration: Optional[FloatString] = None
    Status: Optional[JobStatus] = None
    StatusDetail: Optional[Description] = None
    Duration: Optional[NullableLong] = None
    Width: Optional[NullableInteger] = None
    Height: Optional[NullableInteger] = None
    FrameRate: Optional[FloatString] = None
    FileSize: Optional[NullableLong] = None
    DurationMillis: Optional[NullableLong] = None
    Watermarks: Optional[JobWatermarks] = None
    AlbumArt: Optional[JobAlbumArt] = None
    Composition: Optional[Composition] = None
    Captions: Optional[Captions] = None
    Encryption: Optional[Encryption] = None
    AppliedColorSpaceConversion: Optional[String] = None


class JobOutputs(BaseModel):
    __root__: List[JobOutput]


class Playlists(BaseModel):
    __root__: List[Playlist]


class Job(BaseModel):
    """
    A section of the response body that provides information about the job that is created.
    """

    Id: Optional[Id] = None
    Arn: Optional[String] = None
    PipelineId: Optional[Id] = None
    Input: Optional[JobInput] = None
    Inputs: Optional[JobInputs] = None
    Output: Optional[JobOutput] = None
    Outputs: Optional[JobOutputs] = None
    OutputKeyPrefix: Optional[Key2] = None
    Playlists: Optional[Playlists] = None
    Status: Optional[JobStatus] = None
    UserMetadata: Optional[UserMetadata] = None
    Timing: Optional[Timing] = None


class Jobs(BaseModel):
    __root__: List[Job]


class CreateJobResponse(BaseModel):
    """
    The CreateJobResponse structure.
    """

    Job: Optional[Job] = None


class ListJobsByPipelineResponse(BaseModel):
    """
    The <code>ListJobsByPipelineResponse</code> structure.
    """

    Jobs: Optional[Jobs] = None
    NextPageToken: Optional[Id] = None


class ListJobsByStatusResponse(ListJobsByPipelineResponse):
    """
    The <code>ListJobsByStatusResponse</code> structure.
    """

    pass


class ReadJobResponse(CreateJobResponse):
    """
    The <code>ReadJobResponse</code> structure.
    """

    pass

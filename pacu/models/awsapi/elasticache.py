# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:48:54+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class CacheClusterNotFoundFault(BaseModel):
    __root__: Any


class CacheParameterGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class CacheSecurityGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class CacheSubnetGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class InvalidReplicationGroupStateFault(CacheClusterNotFoundFault):
    pass


class ReplicationGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class ReservedCacheNodeNotFoundFault(CacheClusterNotFoundFault):
    pass


class SnapshotNotFoundFault(CacheClusterNotFoundFault):
    pass


class UserNotFoundFault(CacheClusterNotFoundFault):
    pass


class UserGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class TagQuotaPerResourceExceeded(CacheClusterNotFoundFault):
    pass


class InvalidARNFault(CacheClusterNotFoundFault):
    pass


class InvalidCacheSecurityGroupStateFault(CacheClusterNotFoundFault):
    pass


class AuthorizationAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class InvalidParameterValueException(CacheClusterNotFoundFault):
    pass


class InvalidParameterCombinationException(CacheClusterNotFoundFault):
    pass


class String(BaseModel):
    __root__: str


class ServiceUpdateNotFoundFault(CacheClusterNotFoundFault):
    pass


class ReplicationGroupNotUnderMigrationFault(CacheClusterNotFoundFault):
    pass


class SnapshotAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class SnapshotQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class InvalidSnapshotStateFault(CacheClusterNotFoundFault):
    pass


class CacheClusterAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class InsufficientCacheClusterCapacityFault(CacheClusterNotFoundFault):
    pass


class ClusterQuotaForCustomerExceededFault(CacheClusterNotFoundFault):
    pass


class NodeQuotaForClusterExceededFault(CacheClusterNotFoundFault):
    pass


class NodeQuotaForCustomerExceededFault(CacheClusterNotFoundFault):
    pass


class InvalidVPCNetworkStateFault(CacheClusterNotFoundFault):
    pass


class CacheParameterGroupQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class CacheParameterGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class InvalidCacheParameterGroupStateFault(CacheClusterNotFoundFault):
    pass


class CacheSecurityGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class CacheSecurityGroupQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class CacheSubnetGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class CacheSubnetGroupQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class CacheSubnetQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class InvalidSubnet(CacheClusterNotFoundFault):
    pass


class SubnetNotAllowedFault(CacheClusterNotFoundFault):
    pass


class GlobalReplicationGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class ServiceLinkedRoleNotFoundFault(CacheClusterNotFoundFault):
    pass


class UserGroupId(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[a-zA-Z][a-zA-Z0-9\\-]*')]


class InvalidCacheClusterStateFault(CacheClusterNotFoundFault):
    pass


class ReplicationGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class InvalidUserGroupStateFault(CacheClusterNotFoundFault):
    pass


class NodeGroupsPerReplicationGroupQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class GlobalReplicationGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class InvalidGlobalReplicationGroupStateFault(CacheClusterNotFoundFault):
    pass


class SnapshotFeatureNotSupportedFault(CacheClusterNotFoundFault):
    pass


class UserAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class UserQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class DuplicateUserNameFault(CacheClusterNotFoundFault):
    pass


class UserId1(UserGroupId):
    pass


class UserGroupAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class DefaultUserRequired(CacheClusterNotFoundFault):
    pass


class UserGroupQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class NoOperationFault(CacheClusterNotFoundFault):
    pass


class CacheSubnetGroupInUse(CacheClusterNotFoundFault):
    pass


class InvalidUserStateFault(CacheClusterNotFoundFault):
    pass


class DefaultUserAssociatedToUserGroupFault(CacheClusterNotFoundFault):
    pass


class ReservedCacheNodesOfferingNotFoundFault(CacheClusterNotFoundFault):
    pass


class ServiceUpdateStatus(Enum):
    available = 'available'
    cancelled = 'cancelled'
    expired = 'expired'


class TStamp(BaseModel):
    __root__: datetime


class UpdateActionStatus(Enum):
    not_applied = 'not-applied'
    waiting_to_start = 'waiting-to-start'
    in_progress = 'in-progress'
    stopping = 'stopping'
    stopped = 'stopped'
    complete = 'complete'
    scheduling = 'scheduling'
    scheduled = 'scheduled'
    not_applicable = 'not-applicable'


class InvalidKMSKeyFault(CacheClusterNotFoundFault):
    pass


class CacheParameterGroupNameMessage(BaseModel):
    """
    <p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>ModifyCacheParameterGroup</code> </p> </li> <li> <p> <code>ResetCacheParameterGroup</code> </p> </li> </ul>
    """

    CacheParameterGroupName: Optional[String] = None


class ParameterNameValue(BaseModel):
    """
    Describes a name-value pair that is used to update the value of a parameter.
    """

    ParameterName: Optional[String] = None
    ParameterValue: Optional[String] = None


class SubnetInUse(CacheClusterNotFoundFault):
    pass


class AllowedNodeGroupId(BaseModel):
    __root__: Annotated[str, Field(max_length=4, min_length=1, regex='\\d+')]


class ReservedCacheNodeAlreadyExistsFault(CacheClusterNotFoundFault):
    pass


class ReservedCacheNodeQuotaExceededFault(CacheClusterNotFoundFault):
    pass


class TagNotFoundFault(CacheClusterNotFoundFault):
    pass


class AuthorizationNotFoundFault(CacheClusterNotFoundFault):
    pass


class ReplicationGroupAlreadyUnderMigrationFault(CacheClusterNotFoundFault):
    pass


class APICallRateForCustomerExceededFault(CacheClusterNotFoundFault):
    pass


class NodeGroupNotFoundFault(CacheClusterNotFoundFault):
    pass


class TestFailoverNotAvailableFault(CacheClusterNotFoundFault):
    pass


class AZMode(Enum):
    single_az = 'single-az'
    cross_az = 'cross-az'


class AccessString1(BaseModel):
    __root__: Annotated[str, Field(regex='.*\\S.*')]


class NodeTypeList(BaseModel):
    __root__: List[String]


class AuthTokenUpdateStatus(Enum):
    SETTING = 'SETTING'
    ROTATING = 'ROTATING'


class AuthTokenUpdateStrategyType(Enum):
    SET = 'SET'
    ROTATE = 'ROTATE'
    DELETE = 'DELETE'


class AuthenticationType(Enum):
    password = 'password'
    no_password = 'no-password'


class IntegerOptional(BaseModel):
    __root__: int


class Authentication(BaseModel):
    """
    Indicates whether the user requires a password to authenticate.
    """

    Type: Optional[AuthenticationType] = None
    PasswordCount: Optional[IntegerOptional] = None


class AuthorizeCacheSecurityGroupIngressMessage(BaseModel):
    """
    Represents the input of an AuthorizeCacheSecurityGroupIngress operation.
    """

    CacheSecurityGroupName: String
    EC2SecurityGroupName: String
    EC2SecurityGroupOwnerId: String


class AutomaticFailoverStatus(Enum):
    enabled = 'enabled'
    disabled = 'disabled'
    enabling = 'enabling'
    disabling = 'disabling'


class AvailabilityZone(BaseModel):
    """
    Describes an Availability Zone in which the cluster is launched.
    """

    Name: Optional[String] = None


class AvailabilityZonesList(NodeTypeList):
    pass


class ReplicationGroupIdList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=20)]


class CacheClusterIdList(ReplicationGroupIdList):
    pass


class BatchApplyUpdateActionMessage(BaseModel):
    ReplicationGroupIds: Optional[ReplicationGroupIdList] = None
    CacheClusterIds: Optional[CacheClusterIdList] = None
    ServiceUpdateName: String


class BatchStopUpdateActionMessage(BaseModel):
    ReplicationGroupIds: Optional[ReplicationGroupIdList] = None
    CacheClusterIds: Optional[CacheClusterIdList] = None
    ServiceUpdateName: String


class Boolean(BaseModel):
    __root__: bool


class BooleanOptional(Boolean):
    pass


class NotificationConfiguration(BaseModel):
    """
    Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).
    """

    TopicArn: Optional[String] = None
    TopicStatus: Optional[String] = None


class CacheEngineVersion(BaseModel):
    """
    Provides all of the details about a particular cache engine version.
    """

    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheParameterGroupFamily: Optional[String] = None
    CacheEngineDescription: Optional[String] = None
    CacheEngineVersionDescription: Optional[String] = None


class CacheEngineVersionList(BaseModel):
    __root__: List[CacheEngineVersion]


class CacheNodeIdsList(NodeTypeList):
    pass


class ChangeType(Enum):
    immediate = 'immediate'
    requires_reboot = 'requires-reboot'


class CacheNodeTypeSpecificValue(BaseModel):
    """
    A value that applies only to a certain cache node type.
    """

    CacheNodeType: Optional[String] = None
    Value: Optional[String] = None


class NodeUpdateStatus(Enum):
    not_applied = 'not-applied'
    waiting_to_start = 'waiting-to-start'
    in_progress = 'in-progress'
    stopping = 'stopping'
    stopped = 'stopped'
    complete = 'complete'


class NodeUpdateInitiatedBy(Enum):
    system = 'system'
    customer = 'customer'


class CacheNodeUpdateStatus(BaseModel):
    """
    The status of the service update on the cache node
    """

    CacheNodeId: Optional[String] = None
    NodeUpdateStatus: Optional[NodeUpdateStatus] = None
    NodeDeletionDate: Optional[TStamp] = None
    NodeUpdateStartDate: Optional[TStamp] = None
    NodeUpdateEndDate: Optional[TStamp] = None
    NodeUpdateInitiatedBy: Optional[NodeUpdateInitiatedBy] = None
    NodeUpdateInitiatedDate: Optional[TStamp] = None
    NodeUpdateStatusModifiedDate: Optional[TStamp] = None


class CacheNodeUpdateStatusList(BaseModel):
    __root__: List[CacheNodeUpdateStatus]


class CacheParameterGroup(BaseModel):
    """
    Represents the output of a <code>CreateCacheParameterGroup</code> operation.
    """

    CacheParameterGroupName: Optional[String] = None
    CacheParameterGroupFamily: Optional[String] = None
    Description: Optional[String] = None
    IsGlobal: Optional[Boolean] = None
    ARN: Optional[String] = None


class CacheParameterGroupList(BaseModel):
    __root__: List[CacheParameterGroup]


class CacheSecurityGroupMembership(BaseModel):
    """
    Represents a cluster's status within a particular cache security group.
    """

    CacheSecurityGroupName: Optional[String] = None
    Status: Optional[String] = None


class CacheSecurityGroupNameList(NodeTypeList):
    pass


class CloudWatchLogsDestinationDetails(BaseModel):
    """
    The configuration details of the CloudWatch Logs destination.
    """

    LogGroup: Optional[String] = None


class ClusterIdList(NodeTypeList):
    pass


class CompleteMigrationMessage(BaseModel):
    ReplicationGroupId: String
    Force: Optional[Boolean] = None


class Integer(IntegerOptional):
    pass


class PreferredAvailabilityZoneList(NodeTypeList):
    pass


class PreferredOutpostArnList(NodeTypeList):
    pass


class SecurityGroupIdsList(NodeTypeList):
    pass


class SnapshotArnsList(NodeTypeList):
    pass


class OutpostMode(Enum):
    single_outpost = 'single-outpost'
    cross_outpost = 'cross-outpost'


class SubnetIdentifierList(NodeTypeList):
    pass


class CreateGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupIdSuffix: String
    GlobalReplicationGroupDescription: Optional[String] = None
    PrimaryReplicationGroupId: String


class UserGroupIdListInput(BaseModel):
    __root__: Annotated[List[UserGroupId], Field(min_items=1)]


class EngineType(BaseModel):
    __root__: Annotated[str, Field(regex='[a-zA-Z]*')]


class UserIdListInput(BaseModel):
    __root__: Annotated[List[UserId1], Field(min_items=1)]


class UserName1(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class PasswordListInput(BaseModel):
    __root__: Annotated[List[String], Field(min_items=1)]


class GlobalNodeGroupIdList(NodeTypeList):
    pass


class DecreaseNodeGroupsInGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    NodeGroupCount: Integer
    GlobalNodeGroupsToRemove: Optional[GlobalNodeGroupIdList] = None
    GlobalNodeGroupsToRetain: Optional[GlobalNodeGroupIdList] = None
    ApplyImmediately: Boolean


class RemoveReplicasList(NodeTypeList):
    pass


class DeleteCacheClusterMessage(BaseModel):
    """
    Represents the input of a <code>DeleteCacheCluster</code> operation.
    """

    CacheClusterId: String
    FinalSnapshotIdentifier: Optional[String] = None


class DeleteCacheParameterGroupMessage(BaseModel):
    """
    Represents the input of a <code>DeleteCacheParameterGroup</code> operation.
    """

    CacheParameterGroupName: String


class DeleteCacheSecurityGroupMessage(BaseModel):
    """
    Represents the input of a <code>DeleteCacheSecurityGroup</code> operation.
    """

    CacheSecurityGroupName: String


class DeleteCacheSubnetGroupMessage(BaseModel):
    """
    Represents the input of a <code>DeleteCacheSubnetGroup</code> operation.
    """

    CacheSubnetGroupName: String


class DeleteGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    RetainPrimaryReplicationGroup: Boolean


class DeleteReplicationGroupMessage(BaseModel):
    """
    Represents the input of a <code>DeleteReplicationGroup</code> operation.
    """

    ReplicationGroupId: String
    RetainPrimaryCluster: Optional[BooleanOptional] = None
    FinalSnapshotIdentifier: Optional[String] = None


class DeleteSnapshotMessage(BaseModel):
    """
    Represents the input of a <code>DeleteSnapshot</code> operation.
    """

    SnapshotName: String


class DeleteUserGroupMessage(BaseModel):
    UserGroupId: String


class DeleteUserMessage(BaseModel):
    UserId: UserId1


class DescribeCacheClustersMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheClusters</code> operation.
    """

    CacheClusterId: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None
    ShowCacheNodeInfo: Optional[BooleanOptional] = None
    ShowCacheClustersNotInReplicationGroups: Optional[BooleanOptional] = None


class DescribeCacheEngineVersionsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheEngineVersions</code> operation.
    """

    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheParameterGroupFamily: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None
    DefaultOnly: Optional[Boolean] = None


class DescribeCacheParameterGroupsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheParameterGroups</code> operation.
    """

    CacheParameterGroupName: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeCacheParametersMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheParameters</code> operation.
    """

    CacheParameterGroupName: String
    Source: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeCacheSecurityGroupsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheSecurityGroups</code> operation.
    """

    CacheSecurityGroupName: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeCacheSubnetGroupsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeCacheSubnetGroups</code> operation.
    """

    CacheSubnetGroupName: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeEngineDefaultParametersMessage(BaseModel):
    """
    Represents the input of a <code>DescribeEngineDefaultParameters</code> operation.
    """

    CacheParameterGroupFamily: String
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class SourceType(Enum):
    cache_cluster = 'cache-cluster'
    cache_parameter_group = 'cache-parameter-group'
    cache_security_group = 'cache-security-group'
    cache_subnet_group = 'cache-subnet-group'
    replication_group = 'replication-group'
    user = 'user'
    user_group = 'user-group'


class DescribeEventsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeEvents</code> operation.
    """

    SourceIdentifier: Optional[String] = None
    SourceType: Optional[SourceType] = None
    StartTime: Optional[TStamp] = None
    EndTime: Optional[TStamp] = None
    Duration: Optional[IntegerOptional] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeGlobalReplicationGroupsMessage(BaseModel):
    GlobalReplicationGroupId: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None
    ShowMemberInfo: Optional[BooleanOptional] = None


class DescribeReplicationGroupsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeReplicationGroups</code> operation.
    """

    ReplicationGroupId: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeReservedCacheNodesMessage(BaseModel):
    """
    Represents the input of a <code>DescribeReservedCacheNodes</code> operation.
    """

    ReservedCacheNodeId: Optional[String] = None
    ReservedCacheNodesOfferingId: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Duration: Optional[String] = None
    ProductDescription: Optional[String] = None
    OfferingType: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeReservedCacheNodesOfferingsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeReservedCacheNodesOfferings</code> operation.
    """

    ReservedCacheNodesOfferingId: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Duration: Optional[String] = None
    ProductDescription: Optional[String] = None
    OfferingType: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class ServiceUpdateStatusList(BaseModel):
    __root__: Annotated[List[ServiceUpdateStatus], Field(max_items=3)]


class DescribeServiceUpdatesMessage(BaseModel):
    ServiceUpdateName: Optional[String] = None
    ServiceUpdateStatus: Optional[ServiceUpdateStatusList] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeSnapshotsMessage(BaseModel):
    """
    Represents the input of a <code>DescribeSnapshotsMessage</code> operation.
    """

    ReplicationGroupId: Optional[String] = None
    CacheClusterId: Optional[String] = None
    SnapshotName: Optional[String] = None
    SnapshotSource: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ShowNodeGroupConfig: Optional[BooleanOptional] = None


class TimeRangeFilter(BaseModel):
    """
    Filters update actions from the service updates that are in available status during the time range.
    """

    StartTime: Optional[TStamp] = None
    EndTime: Optional[TStamp] = None


class UpdateActionStatusList(BaseModel):
    __root__: Annotated[List[UpdateActionStatus], Field(max_items=9)]


class DescribeUpdateActionsMessage(BaseModel):
    ServiceUpdateName: Optional[String] = None
    ReplicationGroupIds: Optional[ReplicationGroupIdList] = None
    CacheClusterIds: Optional[CacheClusterIdList] = None
    Engine: Optional[String] = None
    ServiceUpdateStatus: Optional[ServiceUpdateStatusList] = None
    ServiceUpdateTimeRange: Optional[TimeRangeFilter] = None
    UpdateActionStatus: Optional[UpdateActionStatusList] = None
    ShowNodeLevelUpdateStatus: Optional[BooleanOptional] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class DescribeUserGroupsMessage(BaseModel):
    UserGroupId: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class KinesisFirehoseDestinationDetails(BaseModel):
    """
    The configuration details of the Kinesis Data Firehose destination.
    """

    DeliveryStream: Optional[String] = None


class DestinationDetails(BaseModel):
    """
    Configuration details of either a CloudWatch Logs destination or Kinesis Data Firehose destination.
    """

    CloudWatchLogsDetails: Optional[CloudWatchLogsDestinationDetails] = None
    KinesisFirehoseDetails: Optional[KinesisFirehoseDestinationDetails] = None


class DestinationType(Enum):
    cloudwatch_logs = 'cloudwatch-logs'
    kinesis_firehose = 'kinesis-firehose'


class DisassociateGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    ReplicationGroupId: String
    ReplicationGroupRegion: String


class Double(BaseModel):
    __root__: float


class EC2SecurityGroup(BaseModel):
    """
    Provides ownership and status information for an Amazon EC2 security group.
    """

    Status: Optional[String] = None
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None


class Event(BaseModel):
    """
    Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster, adding or removing a cache node, or rebooting a node.
    """

    SourceIdentifier: Optional[String] = None
    SourceType: Optional[SourceType] = None
    Message: Optional[String] = None
    Date: Optional[TStamp] = None


class EventList(BaseModel):
    __root__: List[Event]


class FailoverGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    PrimaryRegion: String
    PrimaryReplicationGroupId: String


class FilterName(AccessString1):
    pass


class FilterValue(AccessString1):
    pass


class GlobalNodeGroup(BaseModel):
    """
    Indicates the slot configuration and global identifier for a slice group.
    """

    GlobalNodeGroupId: Optional[String] = None
    Slots: Optional[String] = None


class GlobalNodeGroupList(BaseModel):
    __root__: List[GlobalNodeGroup]


class GlobalReplicationGroupInfo(BaseModel):
    """
    The name of the Global datastore and role of this replication group in the Global datastore.
    """

    GlobalReplicationGroupId: Optional[String] = None
    GlobalReplicationGroupMemberRole: Optional[String] = None


class GlobalReplicationGroupMember(BaseModel):
    """
    A member of a Global datastore. It contains the Replication Group Id, the Amazon region and the role of the replication group.
    """

    ReplicationGroupId: Optional[String] = None
    ReplicationGroupRegion: Optional[String] = None
    Role: Optional[String] = None
    AutomaticFailover: Optional[AutomaticFailoverStatus] = None
    Status: Optional[String] = None


class KeyList(NodeTypeList):
    pass


class ListAllowedNodeTypeModificationsMessage(BaseModel):
    """
    The input parameters for the <code>ListAllowedNodeTypeModifications</code> operation.
    """

    CacheClusterId: Optional[String] = None
    ReplicationGroupId: Optional[String] = None


class ListTagsForResourceMessage(BaseModel):
    """
    The input parameters for the <code>ListTagsForResource</code> operation.
    """

    ResourceName: String


class LogType(Enum):
    slow_log = 'slow-log'


class LogFormat(Enum):
    text = 'text'
    json = 'json'


class LogDeliveryConfigurationStatus(Enum):
    active = 'active'
    enabling = 'enabling'
    modifying = 'modifying'
    disabling = 'disabling'
    error = 'error'


class LogDeliveryConfiguration(BaseModel):
    """
    Returns the destination, format and type of the logs.
    """

    LogType: Optional[LogType] = None
    DestinationType: Optional[DestinationType] = None
    DestinationDetails: Optional[DestinationDetails] = None
    LogFormat: Optional[LogFormat] = None
    Status: Optional[LogDeliveryConfigurationStatus] = None
    Message: Optional[String] = None


class ParameterNameValueList(BaseModel):
    __root__: List[ParameterNameValue]


class ModifyCacheParameterGroupMessage(BaseModel):
    """
    Represents the input of a <code>ModifyCacheParameterGroup</code> operation.
    """

    CacheParameterGroupName: String
    ParameterNameValues: ParameterNameValueList


class ModifyCacheSubnetGroupMessage(BaseModel):
    """
    Represents the input of a <code>ModifyCacheSubnetGroup</code> operation.
    """

    CacheSubnetGroupName: String
    CacheSubnetGroupDescription: Optional[String] = None
    SubnetIds: Optional[SubnetIdentifierList] = None


class ModifyGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    ApplyImmediately: Boolean
    CacheNodeType: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheParameterGroupName: Optional[String] = None
    GlobalReplicationGroupDescription: Optional[String] = None
    AutomaticFailoverEnabled: Optional[BooleanOptional] = None


class UserGroupIdList(BaseModel):
    __root__: List[UserGroupId]


class NodeGroupsToRemoveList(BaseModel):
    __root__: List[AllowedNodeGroupId]


class NodeGroupsToRetainList(NodeGroupsToRemoveList):
    pass


class ModifyUserGroupMessage(BaseModel):
    UserGroupId: String
    UserIdsToAdd: Optional[UserIdListInput] = None
    UserIdsToRemove: Optional[UserIdListInput] = None


class ModifyUserMessage(BaseModel):
    UserId: UserId1
    AccessString: Optional[AccessString1] = None
    AppendAccessString: Optional[AccessString1] = None
    Passwords: Optional[PasswordListInput] = None
    NoPasswordRequired: Optional[BooleanOptional] = None


class MultiAZStatus(Enum):
    enabled = 'enabled'
    disabled = 'disabled'


class OutpostArnsList(NodeTypeList):
    pass


class NodeGroupMemberUpdateStatus(BaseModel):
    """
    The status of the service update on the node group member
    """

    CacheClusterId: Optional[String] = None
    CacheNodeId: Optional[String] = None
    NodeUpdateStatus: Optional[NodeUpdateStatus] = None
    NodeDeletionDate: Optional[TStamp] = None
    NodeUpdateStartDate: Optional[TStamp] = None
    NodeUpdateEndDate: Optional[TStamp] = None
    NodeUpdateInitiatedBy: Optional[NodeUpdateInitiatedBy] = None
    NodeUpdateInitiatedDate: Optional[TStamp] = None
    NodeUpdateStatusModifiedDate: Optional[TStamp] = None


class NodeGroupMemberUpdateStatusList(BaseModel):
    __root__: List[NodeGroupMemberUpdateStatus]


class NodeGroupUpdateStatus(BaseModel):
    """
    The status of the service update on the node group
    """

    NodeGroupId: Optional[String] = None
    NodeGroupMemberUpdateStatus: Optional[NodeGroupMemberUpdateStatusList] = None


class NodeGroupUpdateStatusList(BaseModel):
    __root__: List[NodeGroupUpdateStatus]


class Parameter(BaseModel):
    """
    Describes an individual setting that controls some aspect of ElastiCache behavior.
    """

    ParameterName: Optional[String] = None
    ParameterValue: Optional[String] = None
    Description: Optional[String] = None
    Source: Optional[String] = None
    DataType: Optional[String] = None
    AllowedValues: Optional[String] = None
    IsModifiable: Optional[Boolean] = None
    MinimumEngineVersion: Optional[String] = None
    ChangeType: Optional[ChangeType] = None


class PendingLogDeliveryConfiguration(BaseModel):
    """
    The log delivery configurations being modified
    """

    LogType: Optional[LogType] = None
    DestinationType: Optional[DestinationType] = None
    DestinationDetails: Optional[DestinationDetails] = None
    LogFormat: Optional[LogFormat] = None


class PendingLogDeliveryConfigurationList(BaseModel):
    __root__: List[PendingLogDeliveryConfiguration]


class ProcessedUpdateAction(BaseModel):
    """
    Update action that has been processed for the corresponding apply/stop request
    """

    ReplicationGroupId: Optional[String] = None
    CacheClusterId: Optional[String] = None
    ServiceUpdateName: Optional[String] = None
    UpdateActionStatus: Optional[UpdateActionStatus] = None


class ProcessedUpdateActionList(BaseModel):
    __root__: List[ProcessedUpdateAction]


class RebalanceSlotsInGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    ApplyImmediately: Boolean


class RebootCacheClusterMessage(BaseModel):
    """
    Represents the input of a <code>RebootCacheCluster</code> operation.
    """

    CacheClusterId: String
    CacheNodeIdsToReboot: CacheNodeIdsList


class RecurringCharge(BaseModel):
    """
    Contains the specific price and frequency of a recurring charges for a reserved cache node, or for a reserved cache node offering.
    """

    RecurringChargeAmount: Optional[Double] = None
    RecurringChargeFrequency: Optional[String] = None


class RecurringChargeList(BaseModel):
    __root__: List[RecurringCharge]


class RemoveTagsFromResourceMessage(BaseModel):
    """
    Represents the input of a <code>RemoveTagsFromResource</code> operation.
    """

    ResourceName: String
    TagKeys: KeyList


class ReplicationGroupOutpostArnList(NodeTypeList):
    pass


class UserGroupsUpdateStatus(BaseModel):
    """
    The status of the user group update.
    """

    UserGroupIdsToAdd: Optional[UserGroupIdList] = None
    UserGroupIdsToRemove: Optional[UserGroupIdList] = None


class ReservedCacheNodesOffering(BaseModel):
    """
    Describes all of the attributes of a reserved cache node offering.
    """

    ReservedCacheNodesOfferingId: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    UsagePrice: Optional[Double] = None
    ProductDescription: Optional[String] = None
    OfferingType: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None


class ReservedCacheNodesOfferingList(BaseModel):
    __root__: List[ReservedCacheNodesOffering]


class ResetCacheParameterGroupMessage(BaseModel):
    """
    Represents the input of a <code>ResetCacheParameterGroup</code> operation.
    """

    CacheParameterGroupName: String
    ResetAllParameters: Optional[Boolean] = None
    ParameterNameValues: Optional[ParameterNameValueList] = None


class SlotMigration(BaseModel):
    """
    Represents the progress of an online resharding operation.
    """

    ProgressPercentage: Optional[Double] = None


class RevokeCacheSecurityGroupIngressMessage(BaseModel):
    """
    Represents the input of a <code>RevokeCacheSecurityGroupIngress</code> operation.
    """

    CacheSecurityGroupName: String
    EC2SecurityGroupName: String
    EC2SecurityGroupOwnerId: String


class SecurityGroupMembership(BaseModel):
    """
    Represents a single cache security group and its status.
    """

    SecurityGroupId: Optional[String] = None
    Status: Optional[String] = None


class ServiceUpdateSeverity(Enum):
    critical = 'critical'
    important = 'important'
    medium = 'medium'
    low = 'low'


class ServiceUpdateType(Enum):
    security_update = 'security-update'


class ServiceUpdate(BaseModel):
    """
    An update that you can apply to your Redis clusters.
    """

    ServiceUpdateName: Optional[String] = None
    ServiceUpdateReleaseDate: Optional[TStamp] = None
    ServiceUpdateEndDate: Optional[TStamp] = None
    ServiceUpdateSeverity: Optional[ServiceUpdateSeverity] = None
    ServiceUpdateRecommendedApplyByDate: Optional[TStamp] = None
    ServiceUpdateStatus: Optional[ServiceUpdateStatus] = None
    ServiceUpdateDescription: Optional[String] = None
    ServiceUpdateType: Optional[ServiceUpdateType] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    AutoUpdateAfterRecommendedApplyByDate: Optional[BooleanOptional] = None
    EstimatedUpdateTime: Optional[String] = None


class ServiceUpdateList(BaseModel):
    __root__: List[ServiceUpdate]


class SlaMet(Enum):
    yes = 'yes'
    no = 'no'
    n_a = 'n/a'


class SubnetOutpost(BaseModel):
    """
    The ID of the outpost subnet.
    """

    SubnetOutpostArn: Optional[String] = None


class Subnet(BaseModel):
    """
    Represents the subnet associated with a cluster. This parameter refers to subnets defined in Amazon Virtual Private Cloud (Amazon VPC) and used with ElastiCache.
    """

    SubnetIdentifier: Optional[String] = None
    SubnetAvailabilityZone: Optional[AvailabilityZone] = None
    SubnetOutpost: Optional[SubnetOutpost] = None


class TestFailoverMessage(BaseModel):
    ReplicationGroupId: String
    NodeGroupId: AllowedNodeGroupId


class UGReplicationGroupIdList(NodeTypeList):
    pass


class UnprocessedUpdateAction(BaseModel):
    """
    Update action that has failed to be processed for the corresponding apply/stop request
    """

    ReplicationGroupId: Optional[String] = None
    CacheClusterId: Optional[String] = None
    ServiceUpdateName: Optional[String] = None
    ErrorType: Optional[String] = None
    ErrorMessage: Optional[String] = None


class UnprocessedUpdateActionList(BaseModel):
    __root__: List[UnprocessedUpdateAction]


class UpdateAction(BaseModel):
    """
    The status of the service update for a specific replication group
    """

    ReplicationGroupId: Optional[String] = None
    CacheClusterId: Optional[String] = None
    ServiceUpdateName: Optional[String] = None
    ServiceUpdateReleaseDate: Optional[TStamp] = None
    ServiceUpdateSeverity: Optional[ServiceUpdateSeverity] = None
    ServiceUpdateStatus: Optional[ServiceUpdateStatus] = None
    ServiceUpdateRecommendedApplyByDate: Optional[TStamp] = None
    ServiceUpdateType: Optional[ServiceUpdateType] = None
    UpdateActionAvailableDate: Optional[TStamp] = None
    UpdateActionStatus: Optional[UpdateActionStatus] = None
    NodesUpdated: Optional[String] = None
    UpdateActionStatusModifiedDate: Optional[TStamp] = None
    SlaMet: Optional[SlaMet] = None
    NodeGroupUpdateStatus: Optional[NodeGroupUpdateStatusList] = None
    CacheNodeUpdateStatus: Optional[CacheNodeUpdateStatusList] = None
    EstimatedUpdateTime: Optional[String] = None
    Engine: Optional[String] = None


class UpdateActionList(BaseModel):
    __root__: List[UpdateAction]


class UserIdList(BaseModel):
    __root__: List[UserId1]


class UserGroupPendingChanges(BaseModel):
    """
    Returns the updates being applied to the user group.
    """

    UserIdsToRemove: Optional[UserIdList] = None
    UserIdsToAdd: Optional[UserIdList] = None


class Tag(BaseModel):
    """
    A tag that can be added to an ElastiCache cluster or replication group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your ElastiCache resources, with the exception of global replication group. When you add or remove tags on replication groups, those actions will be replicated to all nodes in the replication group. A tag with a null Value is permitted.
    """

    Key: Optional[String] = None
    Value: Optional[String] = None


class UpdateActionResultsMessage(BaseModel):
    ProcessedUpdateActions: Optional[ProcessedUpdateActionList] = None
    UnprocessedUpdateActions: Optional[UnprocessedUpdateActionList] = None


class LogDeliveryConfigurationRequest(BaseModel):
    """
    Specifies the destination, format and type of the logs.
    """

    LogType: Optional[LogType] = None
    DestinationType: Optional[DestinationType] = None
    DestinationDetails: Optional[DestinationDetails] = None
    LogFormat: Optional[LogFormat] = None
    Enabled: Optional[BooleanOptional] = None


class CreateCacheParameterGroupResult(BaseModel):
    CacheParameterGroup: Optional[CacheParameterGroup] = None


class NodeGroupConfiguration(BaseModel):
    """
    Node group (shard) configuration options. Each node group (shard) configuration has the following: <code>Slots</code>, <code>PrimaryAvailabilityZone</code>, <code>ReplicaAvailabilityZones</code>, <code>ReplicaCount</code>.
    """

    NodeGroupId: Optional[AllowedNodeGroupId] = None
    Slots: Optional[String] = None
    ReplicaCount: Optional[IntegerOptional] = None
    PrimaryAvailabilityZone: Optional[String] = None
    ReplicaAvailabilityZones: Optional[AvailabilityZonesList] = None
    PrimaryOutpostArn: Optional[String] = None
    ReplicaOutpostArns: Optional[OutpostArnsList] = None


class User(BaseModel):
    UserId: Optional[String] = None
    UserName: Optional[String] = None
    Status: Optional[String] = None
    Engine: Optional[EngineType] = None
    AccessString: Optional[String] = None
    UserGroupIds: Optional[UserGroupIdList] = None
    Authentication: Optional[Authentication] = None
    ARN: Optional[String] = None


class UserGroup(BaseModel):
    UserGroupId: Optional[String] = None
    Status: Optional[String] = None
    Engine: Optional[EngineType] = None
    UserIds: Optional[UserIdList] = None
    PendingChanges: Optional[UserGroupPendingChanges] = None
    ReplicationGroups: Optional[UGReplicationGroupIdList] = None
    ARN: Optional[String] = None


class ConfigureShard(BaseModel):
    """
    Node group (shard) configuration options when adding or removing replicas. Each node group (shard) configuration has the following members: NodeGroupId, NewReplicaCount, and PreferredAvailabilityZones.
    """

    NodeGroupId: AllowedNodeGroupId
    NewReplicaCount: Integer
    PreferredAvailabilityZones: Optional[PreferredAvailabilityZoneList] = None
    PreferredOutpostArns: Optional[PreferredOutpostArnList] = None


class CacheEngineVersionMessage(BaseModel):
    """
    Represents the output of a <a>DescribeCacheEngineVersions</a> operation.
    """

    Marker: Optional[String] = None
    CacheEngineVersions: Optional[CacheEngineVersionList] = None


class CacheParameterGroupsMessage(BaseModel):
    """
    Represents the output of a <code>DescribeCacheParameterGroups</code> operation.
    """

    Marker: Optional[String] = None
    CacheParameterGroups: Optional[CacheParameterGroupList] = None


class EventsMessage(BaseModel):
    """
    Represents the output of a <code>DescribeEvents</code> operation.
    """

    Marker: Optional[String] = None
    Events: Optional[EventList] = None


class ReservedCacheNodesOfferingMessage(BaseModel):
    """
    Represents the output of a <code>DescribeReservedCacheNodesOfferings</code> operation.
    """

    Marker: Optional[String] = None
    ReservedCacheNodesOfferings: Optional[ReservedCacheNodesOfferingList] = None


class ServiceUpdatesMessage(BaseModel):
    Marker: Optional[String] = None
    ServiceUpdates: Optional[ServiceUpdateList] = None


class UpdateActionsMessage(BaseModel):
    Marker: Optional[String] = None
    UpdateActions: Optional[UpdateActionList] = None


class AllowedNodeTypeModificationsMessage(BaseModel):
    """
    Represents the allowed node types you can use to modify your cluster or replication group.
    """

    ScaleUpModifications: Optional[NodeTypeList] = None
    ScaleDownModifications: Optional[NodeTypeList] = None


class ReshardingConfiguration1(BaseModel):
    """
    A list of <code>PreferredAvailabilityZones</code> objects that specifies the configuration of a node group in the resharded cluster.
    """

    NodeGroupId: Optional[AllowedNodeGroupId] = None
    PreferredAvailabilityZones: Optional[AvailabilityZonesList] = None


class CustomerNodeEndpoint(BaseModel):
    """
    The endpoint from which data should be migrated.
    """

    Address: Optional[String] = None
    Port: Optional[IntegerOptional] = None


class TagList(BaseModel):
    __root__: List[Tag]


class AddTagsToResourceMessage(BaseModel):
    """
    Represents the input of an AddTagsToResource operation.
    """

    ResourceName: String
    Tags: TagList


class Endpoint(BaseModel):
    """
    Represents the information required for client programs to connect to a cache node.
    """

    Address: Optional[String] = None
    Port: Optional[Integer] = None


class PendingModifiedValues(BaseModel):
    """
    A group of settings that are applied to the cluster in the future, or that are currently being applied.
    """

    NumCacheNodes: Optional[IntegerOptional] = None
    CacheNodeIdsToRemove: Optional[CacheNodeIdsList] = None
    EngineVersion: Optional[String] = None
    CacheNodeType: Optional[String] = None
    AuthTokenStatus: Optional[AuthTokenUpdateStatus] = None
    LogDeliveryConfigurations: Optional[PendingLogDeliveryConfigurationList] = None


class CacheSecurityGroupMembershipList(BaseModel):
    __root__: List[CacheSecurityGroupMembership]


class CacheParameterGroupStatus(BaseModel):
    """
    Status of the cache parameter group.
    """

    CacheParameterGroupName: Optional[String] = None
    ParameterApplyStatus: Optional[String] = None
    CacheNodeIdsToReboot: Optional[CacheNodeIdsList] = None


class SecurityGroupMembershipList(BaseModel):
    __root__: List[SecurityGroupMembership]


class LogDeliveryConfigurationList(BaseModel):
    __root__: List[LogDeliveryConfiguration]


class CacheNode(BaseModel):
    """
    <p>Represents an individual cache node within a cluster. Each cache node runs its own instance of the cluster's protocol-compliant caching software - either Memcached or Redis.</p> <p>The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.</p> <ul> <li> <p>General purpose:</p> <ul> <li> <p>Current generation: </p> <p> <b>M6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.m6g.large</code>, <code>cache.m6g.xlarge</code>, <code>cache.m6g.2xlarge</code>, <code>cache.m6g.4xlarge</code>, <code>cache.m6g.8xlarge</code>, <code>cache.m6g.12xlarge</code>, <code>cache.m6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>M5 node types:</b> <code>cache.m5.large</code>, <code>cache.m5.xlarge</code>, <code>cache.m5.2xlarge</code>, <code>cache.m5.4xlarge</code>, <code>cache.m5.12xlarge</code>, <code>cache.m5.24xlarge</code> </p> <p> <b>M4 node types:</b> <code>cache.m4.large</code>, <code>cache.m4.xlarge</code>, <code>cache.m4.2xlarge</code>, <code>cache.m4.4xlarge</code>, <code>cache.m4.10xlarge</code> </p> <p> <b>T3 node types:</b> <code>cache.t3.micro</code>, <code>cache.t3.small</code>, <code>cache.t3.medium</code> </p> <p> <b>T2 node types:</b> <code>cache.t2.micro</code>, <code>cache.t2.small</code>, <code>cache.t2.medium</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>T1 node types:</b> <code>cache.t1.micro</code> </p> <p> <b>M1 node types:</b> <code>cache.m1.small</code>, <code>cache.m1.medium</code>, <code>cache.m1.large</code>, <code>cache.m1.xlarge</code> </p> <p> <b>M3 node types:</b> <code>cache.m3.medium</code>, <code>cache.m3.large</code>, <code>cache.m3.xlarge</code>, <code>cache.m3.2xlarge</code> </p> </li> </ul> </li> <li> <p>Compute optimized:</p> <ul> <li> <p>Previous generation: (not recommended)</p> <p> <b>C1 node types:</b> <code>cache.c1.xlarge</code> </p> </li> </ul> </li> <li> <p>Memory optimized:</p> <ul> <li> <p>Current generation: </p> <p> <b>R6g node types</b> (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).</p> <p> <code>cache.r6g.large</code>, <code>cache.r6g.xlarge</code>, <code>cache.r6g.2xlarge</code>, <code>cache.r6g.4xlarge</code>, <code>cache.r6g.8xlarge</code>, <code>cache.r6g.12xlarge</code>, <code>cache.r6g.16xlarge</code> </p> <note> <p>For region availability, see <a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion">Supported Node Types</a> </p> </note> <p> <b>R5 node types:</b> <code>cache.r5.large</code>, <code>cache.r5.xlarge</code>, <code>cache.r5.2xlarge</code>, <code>cache.r5.4xlarge</code>, <code>cache.r5.12xlarge</code>, <code>cache.r5.24xlarge</code> </p> <p> <b>R4 node types:</b> <code>cache.r4.large</code>, <code>cache.r4.xlarge</code>, <code>cache.r4.2xlarge</code>, <code>cache.r4.4xlarge</code>, <code>cache.r4.8xlarge</code>, <code>cache.r4.16xlarge</code> </p> </li> <li> <p>Previous generation: (not recommended)</p> <p> <b>M2 node types:</b> <code>cache.m2.xlarge</code>, <code>cache.m2.2xlarge</code>, <code>cache.m2.4xlarge</code> </p> <p> <b>R3 node types:</b> <code>cache.r3.large</code>, <code>cache.r3.xlarge</code>, <code>cache.r3.2xlarge</code>, <code>cache.r3.4xlarge</code>, <code>cache.r3.8xlarge</code> </p> </li> </ul> </li> </ul> <p> <b>Additional node type info</b> </p> <ul> <li> <p>All current generation instance types are created in Amazon VPC by default.</p> </li> <li> <p>Redis append-only files (AOF) are not supported for T1 or T2 instances.</p> </li> <li> <p>Redis Multi-AZ with automatic failover is not supported on T1 instances.</p> </li> <li> <p>Redis configuration variables <code>appendonly</code> and <code>appendfsync</code> are not supported on Redis version 2.8.22 and later.</p> </li> </ul>
    """

    CacheNodeId: Optional[String] = None
    CacheNodeStatus: Optional[String] = None
    CacheNodeCreateTime: Optional[TStamp] = None
    Endpoint: Optional[Endpoint] = None
    ParameterGroupStatus: Optional[String] = None
    SourceCacheNodeId: Optional[String] = None
    CustomerAvailabilityZone: Optional[String] = None
    CustomerOutpostArn: Optional[String] = None


class CacheNodeTypeSpecificValueList(BaseModel):
    __root__: List[CacheNodeTypeSpecificValue]


class CacheNodeTypeSpecificParameter(BaseModel):
    """
    A parameter that has a different value for each cache node type it is applied to. For example, in a Redis cluster, a <code>cache.m1.large</code> cache node type would have a larger <code>maxmemory</code> value than a <code>cache.m1.small</code> type.
    """

    ParameterName: Optional[String] = None
    Description: Optional[String] = None
    Source: Optional[String] = None
    DataType: Optional[String] = None
    AllowedValues: Optional[String] = None
    IsModifiable: Optional[Boolean] = None
    MinimumEngineVersion: Optional[String] = None
    CacheNodeTypeSpecificValues: Optional[CacheNodeTypeSpecificValueList] = None
    ChangeType: Optional[ChangeType] = None


class CacheNodeTypeSpecificParametersList(BaseModel):
    __root__: List[CacheNodeTypeSpecificParameter]


class ParametersList(BaseModel):
    __root__: List[Parameter]


class EC2SecurityGroupList(BaseModel):
    __root__: List[EC2SecurityGroup]


class SubnetList(BaseModel):
    __root__: List[Subnet]


class CacheSubnetGroup(BaseModel):
    """
    <p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>CreateCacheSubnetGroup</code> </p> </li> <li> <p> <code>ModifyCacheSubnetGroup</code> </p> </li> </ul>
    """

    CacheSubnetGroupName: Optional[String] = None
    CacheSubnetGroupDescription: Optional[String] = None
    VpcId: Optional[String] = None
    Subnets: Optional[SubnetList] = None
    ARN: Optional[String] = None


class CacheSubnetGroups(BaseModel):
    __root__: List[CacheSubnetGroup]


class CopySnapshotMessage(BaseModel):
    """
    Represents the input of a <code>CopySnapshotMessage</code> operation.
    """

    SourceSnapshotName: String
    TargetSnapshotName: String
    TargetBucket: Optional[String] = None
    KmsKeyId: Optional[String] = None
    Tags: Optional[TagList] = None


class LogDeliveryConfigurationRequestList(BaseModel):
    __root__: List[LogDeliveryConfigurationRequest]


class CreateCacheClusterMessage(BaseModel):
    """
    Represents the input of a CreateCacheCluster operation.
    """

    CacheClusterId: String
    ReplicationGroupId: Optional[String] = None
    AZMode: Optional[AZMode] = None
    PreferredAvailabilityZone: Optional[String] = None
    PreferredAvailabilityZones: Optional[PreferredAvailabilityZoneList] = None
    NumCacheNodes: Optional[IntegerOptional] = None
    CacheNodeType: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheParameterGroupName: Optional[String] = None
    CacheSubnetGroupName: Optional[String] = None
    CacheSecurityGroupNames: Optional[CacheSecurityGroupNameList] = None
    SecurityGroupIds: Optional[SecurityGroupIdsList] = None
    Tags: Optional[TagList] = None
    SnapshotArns: Optional[SnapshotArnsList] = None
    SnapshotName: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    NotificationTopicArn: Optional[String] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    AuthToken: Optional[String] = None
    OutpostMode: Optional[OutpostMode] = None
    PreferredOutpostArn: Optional[String] = None
    PreferredOutpostArns: Optional[PreferredOutpostArnList] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationRequestList] = None


class CreateCacheParameterGroupMessage(BaseModel):
    """
    Represents the input of a <code>CreateCacheParameterGroup</code> operation.
    """

    CacheParameterGroupName: String
    CacheParameterGroupFamily: String
    Description: String
    Tags: Optional[TagList] = None


class CreateCacheSecurityGroupMessage(BaseModel):
    """
    Represents the input of a <code>CreateCacheSecurityGroup</code> operation.
    """

    CacheSecurityGroupName: String
    Description: String
    Tags: Optional[TagList] = None


class CreateCacheSubnetGroupMessage(BaseModel):
    """
    Represents the input of a <code>CreateCacheSubnetGroup</code> operation.
    """

    CacheSubnetGroupName: String
    CacheSubnetGroupDescription: String
    SubnetIds: SubnetIdentifierList
    Tags: Optional[TagList] = None


class NodeGroupConfigurationList(BaseModel):
    __root__: List[NodeGroupConfiguration]


class CreateReplicationGroupMessage(BaseModel):
    """
    Represents the input of a <code>CreateReplicationGroup</code> operation.
    """

    ReplicationGroupId: String
    ReplicationGroupDescription: String
    GlobalReplicationGroupId: Optional[String] = None
    PrimaryClusterId: Optional[String] = None
    AutomaticFailoverEnabled: Optional[BooleanOptional] = None
    MultiAZEnabled: Optional[BooleanOptional] = None
    NumCacheClusters: Optional[IntegerOptional] = None
    PreferredCacheClusterAZs: Optional[AvailabilityZonesList] = None
    NumNodeGroups: Optional[IntegerOptional] = None
    ReplicasPerNodeGroup: Optional[IntegerOptional] = None
    NodeGroupConfiguration: Optional[NodeGroupConfigurationList] = None
    CacheNodeType: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheParameterGroupName: Optional[String] = None
    CacheSubnetGroupName: Optional[String] = None
    CacheSecurityGroupNames: Optional[CacheSecurityGroupNameList] = None
    SecurityGroupIds: Optional[SecurityGroupIdsList] = None
    Tags: Optional[TagList] = None
    SnapshotArns: Optional[SnapshotArnsList] = None
    SnapshotName: Optional[String] = None
    PreferredMaintenanceWindow: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    NotificationTopicArn: Optional[String] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    AuthToken: Optional[String] = None
    TransitEncryptionEnabled: Optional[BooleanOptional] = None
    AtRestEncryptionEnabled: Optional[BooleanOptional] = None
    KmsKeyId: Optional[String] = None
    UserGroupIds: Optional[UserGroupIdListInput] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationRequestList] = None


class CreateSnapshotMessage(BaseModel):
    """
    Represents the input of a <code>CreateSnapshot</code> operation.
    """

    ReplicationGroupId: Optional[String] = None
    CacheClusterId: Optional[String] = None
    SnapshotName: String
    KmsKeyId: Optional[String] = None
    Tags: Optional[TagList] = None


class CreateUserGroupMessage(BaseModel):
    UserGroupId: String
    Engine: EngineType
    UserIds: Optional[UserIdListInput] = None
    Tags: Optional[TagList] = None


class CreateUserMessage(BaseModel):
    UserId: UserId1
    UserName: UserName1
    Engine: EngineType
    Passwords: Optional[PasswordListInput] = None
    AccessString: AccessString1
    NoPasswordRequired: Optional[BooleanOptional] = None
    Tags: Optional[TagList] = None


class CustomerNodeEndpointList(BaseModel):
    __root__: List[CustomerNodeEndpoint]


class ReplicaConfigurationList(BaseModel):
    __root__: List[ConfigureShard]


class DecreaseReplicaCountMessage(BaseModel):
    ReplicationGroupId: String
    NewReplicaCount: Optional[IntegerOptional] = None
    ReplicaConfiguration: Optional[ReplicaConfigurationList] = None
    ReplicasToRemove: Optional[RemoveReplicasList] = None
    ApplyImmediately: Boolean


class EngineDefaults(BaseModel):
    """
    Represents the output of a <code>DescribeEngineDefaultParameters</code> operation.
    """

    CacheParameterGroupFamily: Optional[String] = None
    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None
    CacheNodeTypeSpecificParameters: Optional[
        CacheNodeTypeSpecificParametersList
    ] = None


class UserGroupList(BaseModel):
    __root__: List[UserGroup]


class UserList(BaseModel):
    __root__: List[User]


class FilterValueList(BaseModel):
    __root__: Annotated[List[FilterValue], Field(min_items=1)]


class GlobalReplicationGroupMemberList(BaseModel):
    __root__: List[GlobalReplicationGroupMember]


class IncreaseReplicaCountMessage(BaseModel):
    ReplicationGroupId: String
    NewReplicaCount: Optional[IntegerOptional] = None
    ReplicaConfiguration: Optional[ReplicaConfigurationList] = None
    ApplyImmediately: Boolean


class ModifyCacheClusterMessage(BaseModel):
    """
    Represents the input of a <code>ModifyCacheCluster</code> operation.
    """

    CacheClusterId: String
    NumCacheNodes: Optional[IntegerOptional] = None
    CacheNodeIdsToRemove: Optional[CacheNodeIdsList] = None
    AZMode: Optional[AZMode] = None
    NewAvailabilityZones: Optional[PreferredAvailabilityZoneList] = None
    CacheSecurityGroupNames: Optional[CacheSecurityGroupNameList] = None
    SecurityGroupIds: Optional[SecurityGroupIdsList] = None
    PreferredMaintenanceWindow: Optional[String] = None
    NotificationTopicArn: Optional[String] = None
    CacheParameterGroupName: Optional[String] = None
    NotificationTopicStatus: Optional[String] = None
    ApplyImmediately: Optional[Boolean] = None
    EngineVersion: Optional[String] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    CacheNodeType: Optional[String] = None
    AuthToken: Optional[String] = None
    AuthTokenUpdateStrategy: Optional[AuthTokenUpdateStrategyType] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationRequestList] = None


class ModifyReplicationGroupMessage(BaseModel):
    """
    Represents the input of a <code>ModifyReplicationGroups</code> operation.
    """

    ReplicationGroupId: String
    ReplicationGroupDescription: Optional[String] = None
    PrimaryClusterId: Optional[String] = None
    SnapshottingClusterId: Optional[String] = None
    AutomaticFailoverEnabled: Optional[BooleanOptional] = None
    MultiAZEnabled: Optional[BooleanOptional] = None
    NodeGroupId: Optional[String] = None
    CacheSecurityGroupNames: Optional[CacheSecurityGroupNameList] = None
    SecurityGroupIds: Optional[SecurityGroupIdsList] = None
    PreferredMaintenanceWindow: Optional[String] = None
    NotificationTopicArn: Optional[String] = None
    CacheParameterGroupName: Optional[String] = None
    NotificationTopicStatus: Optional[String] = None
    ApplyImmediately: Optional[Boolean] = None
    EngineVersion: Optional[String] = None
    AutoMinorVersionUpgrade: Optional[BooleanOptional] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    CacheNodeType: Optional[String] = None
    AuthToken: Optional[String] = None
    AuthTokenUpdateStrategy: Optional[AuthTokenUpdateStrategyType] = None
    UserGroupIdsToAdd: Optional[UserGroupIdList] = None
    UserGroupIdsToRemove: Optional[UserGroupIdList] = None
    RemoveUserGroups: Optional[BooleanOptional] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationRequestList] = None


class ReshardingConfigurationList(BaseModel):
    __root__: List[ReshardingConfiguration1]


class ModifyReplicationGroupShardConfigurationMessage(BaseModel):
    """
    Represents the input for a <code>ModifyReplicationGroupShardConfiguration</code> operation.
    """

    ReplicationGroupId: String
    NodeGroupCount: Integer
    ApplyImmediately: Boolean
    ReshardingConfiguration: Optional[ReshardingConfigurationList] = None
    NodeGroupsToRemove: Optional[NodeGroupsToRemoveList] = None
    NodeGroupsToRetain: Optional[NodeGroupsToRetainList] = None


class NodeGroupMember(BaseModel):
    """
    Represents a single node within a node group (shard).
    """

    CacheClusterId: Optional[String] = None
    CacheNodeId: Optional[String] = None
    ReadEndpoint: Optional[Endpoint] = None
    PreferredAvailabilityZone: Optional[String] = None
    PreferredOutpostArn: Optional[String] = None
    CurrentRole: Optional[String] = None


class NodeSnapshot(BaseModel):
    """
    Represents an individual cache node in a snapshot of a cluster.
    """

    CacheClusterId: Optional[String] = None
    NodeGroupId: Optional[String] = None
    CacheNodeId: Optional[String] = None
    NodeGroupConfiguration: Optional[NodeGroupConfiguration] = None
    CacheSize: Optional[String] = None
    CacheNodeCreateTime: Optional[TStamp] = None
    SnapshotCreateTime: Optional[TStamp] = None


class NodeSnapshotList(BaseModel):
    __root__: List[NodeSnapshot]


class PurchaseReservedCacheNodesOfferingMessage(BaseModel):
    """
    Represents the input of a <code>PurchaseReservedCacheNodesOffering</code> operation.
    """

    ReservedCacheNodesOfferingId: String
    ReservedCacheNodeId: Optional[String] = None
    CacheNodeCount: Optional[IntegerOptional] = None
    Tags: Optional[TagList] = None


class ReservedCacheNode(BaseModel):
    """
    Represents the output of a <code>PurchaseReservedCacheNodesOffering</code> operation.
    """

    ReservedCacheNodeId: Optional[String] = None
    ReservedCacheNodesOfferingId: Optional[String] = None
    CacheNodeType: Optional[String] = None
    StartTime: Optional[TStamp] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    UsagePrice: Optional[Double] = None
    CacheNodeCount: Optional[Integer] = None
    ProductDescription: Optional[String] = None
    OfferingType: Optional[String] = None
    State: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservationARN: Optional[String] = None


class ReshardingStatus(BaseModel):
    """
    The status of an online resharding operation.
    """

    SlotMigration: Optional[SlotMigration] = None


class ReservedCacheNodeList(BaseModel):
    __root__: List[ReservedCacheNode]


class StartMigrationMessage(BaseModel):
    ReplicationGroupId: String
    CustomerNodeEndpointList: CustomerNodeEndpointList


class TagListMessage(BaseModel):
    """
    Represents the output from the <code>AddTagsToResource</code>, <code>ListTagsForResource</code>, and <code>RemoveTagsFromResource</code> operations.
    """

    TagList: Optional[TagList] = None


class CreateCacheSubnetGroupResult(BaseModel):
    CacheSubnetGroup: Optional[CacheSubnetGroup] = None


class CacheParameterGroupDetails(BaseModel):
    """
    Represents the output of a <code>DescribeCacheParameters</code> operation.
    """

    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None
    CacheNodeTypeSpecificParameters: Optional[
        CacheNodeTypeSpecificParametersList
    ] = None


class CacheSubnetGroupMessage(BaseModel):
    """
    Represents the output of a <code>DescribeCacheSubnetGroups</code> operation.
    """

    Marker: Optional[String] = None
    CacheSubnetGroups: Optional[CacheSubnetGroups] = None


class DescribeEngineDefaultParametersResult(BaseModel):
    EngineDefaults: Optional[EngineDefaults] = None


class ReservedCacheNodeMessage(BaseModel):
    """
    Represents the output of a <code>DescribeReservedCacheNodes</code> operation.
    """

    Marker: Optional[String] = None
    ReservedCacheNodes: Optional[ReservedCacheNodeList] = None


class DescribeUserGroupsResult(BaseModel):
    UserGroups: Optional[UserGroupList] = None
    Marker: Optional[String] = None


class DescribeUsersResult(BaseModel):
    Users: Optional[UserList] = None
    Marker: Optional[String] = None


class Filter(BaseModel):
    """
    Used to streamline results of a search based on the property being filtered.
    """

    Name: FilterName
    Values: FilterValueList


class RegionalConfiguration(BaseModel):
    """
    A list of the replication groups
    """

    ReplicationGroupId: String
    ReplicationGroupRegion: String
    ReshardingConfiguration: ReshardingConfigurationList


class ModifyCacheSubnetGroupResult(CreateCacheSubnetGroupResult):
    pass


class PurchaseReservedCacheNodesOfferingResult(BaseModel):
    ReservedCacheNode: Optional[ReservedCacheNode] = None


class CacheSecurityGroup(BaseModel):
    """
    <p>Represents the output of one of the following operations:</p> <ul> <li> <p> <code>AuthorizeCacheSecurityGroupIngress</code> </p> </li> <li> <p> <code>CreateCacheSecurityGroup</code> </p> </li> <li> <p> <code>RevokeCacheSecurityGroupIngress</code> </p> </li> </ul>
    """

    OwnerId: Optional[String] = None
    CacheSecurityGroupName: Optional[String] = None
    Description: Optional[String] = None
    EC2SecurityGroups: Optional[EC2SecurityGroupList] = None
    ARN: Optional[String] = None


class CacheNodeList(BaseModel):
    __root__: List[CacheNode]


class CacheCluster(BaseModel):
    """
    Contains all of the attributes of a specific cluster.
    """

    CacheClusterId: Optional[String] = None
    ConfigurationEndpoint: Optional[Endpoint] = None
    ClientDownloadLandingPage: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    CacheClusterStatus: Optional[String] = None
    NumCacheNodes: Optional[IntegerOptional] = None
    PreferredAvailabilityZone: Optional[String] = None
    PreferredOutpostArn: Optional[String] = None
    CacheClusterCreateTime: Optional[TStamp] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PendingModifiedValues: Optional[PendingModifiedValues] = None
    NotificationConfiguration: Optional[NotificationConfiguration] = None
    CacheSecurityGroups: Optional[CacheSecurityGroupMembershipList] = None
    CacheParameterGroup: Optional[CacheParameterGroupStatus] = None
    CacheSubnetGroupName: Optional[String] = None
    CacheNodes: Optional[CacheNodeList] = None
    AutoMinorVersionUpgrade: Optional[Boolean] = None
    SecurityGroups: Optional[SecurityGroupMembershipList] = None
    ReplicationGroupId: Optional[String] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    AuthTokenEnabled: Optional[BooleanOptional] = None
    AuthTokenLastModifiedDate: Optional[TStamp] = None
    TransitEncryptionEnabled: Optional[BooleanOptional] = None
    AtRestEncryptionEnabled: Optional[BooleanOptional] = None
    ARN: Optional[String] = None
    ReplicationGroupLogDeliveryEnabled: Optional[Boolean] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationList] = None


class CacheClusterList(BaseModel):
    __root__: List[CacheCluster]


class CacheSecurityGroups(BaseModel):
    __root__: List[CacheSecurityGroup]


class Snapshot(BaseModel):
    """
    Represents a copy of an entire Redis cluster as of the time when the snapshot was taken.
    """

    SnapshotName: Optional[String] = None
    ReplicationGroupId: Optional[String] = None
    ReplicationGroupDescription: Optional[String] = None
    CacheClusterId: Optional[String] = None
    SnapshotStatus: Optional[String] = None
    SnapshotSource: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    NumCacheNodes: Optional[IntegerOptional] = None
    PreferredAvailabilityZone: Optional[String] = None
    PreferredOutpostArn: Optional[String] = None
    CacheClusterCreateTime: Optional[TStamp] = None
    PreferredMaintenanceWindow: Optional[String] = None
    TopicArn: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    CacheParameterGroupName: Optional[String] = None
    CacheSubnetGroupName: Optional[String] = None
    VpcId: Optional[String] = None
    AutoMinorVersionUpgrade: Optional[Boolean] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    NumNodeGroups: Optional[IntegerOptional] = None
    AutomaticFailover: Optional[AutomaticFailoverStatus] = None
    NodeSnapshots: Optional[NodeSnapshotList] = None
    KmsKeyId: Optional[String] = None
    ARN: Optional[String] = None


class GlobalReplicationGroup(BaseModel):
    """
    <p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li> </ul>
    """

    GlobalReplicationGroupId: Optional[String] = None
    GlobalReplicationGroupDescription: Optional[String] = None
    Status: Optional[String] = None
    CacheNodeType: Optional[String] = None
    Engine: Optional[String] = None
    EngineVersion: Optional[String] = None
    Members: Optional[GlobalReplicationGroupMemberList] = None
    ClusterEnabled: Optional[BooleanOptional] = None
    GlobalNodeGroups: Optional[GlobalNodeGroupList] = None
    AuthTokenEnabled: Optional[BooleanOptional] = None
    TransitEncryptionEnabled: Optional[BooleanOptional] = None
    AtRestEncryptionEnabled: Optional[BooleanOptional] = None
    ARN: Optional[String] = None


class GlobalReplicationGroupList(BaseModel):
    __root__: List[GlobalReplicationGroup]


class SnapshotList(BaseModel):
    __root__: List[Snapshot]


class FilterList(BaseModel):
    __root__: List[Filter]


class DescribeUsersMessage(BaseModel):
    Engine: Optional[EngineType] = None
    UserId: Optional[UserId1] = None
    Filters: Optional[FilterList] = None
    MaxRecords: Optional[IntegerOptional] = None
    Marker: Optional[String] = None


class RegionalConfigurationList(BaseModel):
    __root__: List[RegionalConfiguration]


class IncreaseNodeGroupsInGlobalReplicationGroupMessage(BaseModel):
    GlobalReplicationGroupId: String
    NodeGroupCount: Integer
    RegionalConfigurations: Optional[RegionalConfigurationList] = None
    ApplyImmediately: Boolean


class NodeGroupMemberList(BaseModel):
    __root__: List[NodeGroupMember]


class NodeGroup(BaseModel):
    """
    Represents a collection of cache nodes in a replication group. One node in the node group is the read/write primary node. All the other nodes are read-only Replica nodes.
    """

    NodeGroupId: Optional[String] = None
    Status: Optional[String] = None
    PrimaryEndpoint: Optional[Endpoint] = None
    ReaderEndpoint: Optional[Endpoint] = None
    Slots: Optional[String] = None
    NodeGroupMembers: Optional[NodeGroupMemberList] = None


class NodeGroupList(BaseModel):
    __root__: List[NodeGroup]


class ReplicationGroupPendingModifiedValues(BaseModel):
    """
    The settings to be applied to the Redis replication group, either immediately or during the next maintenance window.
    """

    PrimaryClusterId: Optional[String] = None
    AutomaticFailoverStatus: Optional[MultiAZStatus] = None
    Resharding: Optional[ReshardingStatus] = None
    AuthTokenStatus: Optional[AuthTokenUpdateStatus] = None
    UserGroups: Optional[UserGroupsUpdateStatus] = None
    LogDeliveryConfigurations: Optional[PendingLogDeliveryConfigurationList] = None


class AuthorizeCacheSecurityGroupIngressResult(BaseModel):
    CacheSecurityGroup: Optional[CacheSecurityGroup] = None


class CopySnapshotResult(BaseModel):
    Snapshot: Optional[Snapshot] = None


class CreateCacheClusterResult(BaseModel):
    CacheCluster: Optional[CacheCluster] = None


class CreateCacheSecurityGroupResult(AuthorizeCacheSecurityGroupIngressResult):
    pass


class CreateGlobalReplicationGroupResult(BaseModel):
    GlobalReplicationGroup: Optional[GlobalReplicationGroup] = None


class CreateSnapshotResult(CopySnapshotResult):
    pass


class DecreaseNodeGroupsInGlobalReplicationGroupResult(
    CreateGlobalReplicationGroupResult
):
    pass


class DeleteCacheClusterResult(CreateCacheClusterResult):
    pass


class DeleteGlobalReplicationGroupResult(CreateGlobalReplicationGroupResult):
    pass


class DeleteSnapshotResult(CopySnapshotResult):
    pass


class CacheClusterMessage(BaseModel):
    """
    Represents the output of a <code>DescribeCacheClusters</code> operation.
    """

    Marker: Optional[String] = None
    CacheClusters: Optional[CacheClusterList] = None


class CacheSecurityGroupMessage(BaseModel):
    """
    Represents the output of a <code>DescribeCacheSecurityGroups</code> operation.
    """

    Marker: Optional[String] = None
    CacheSecurityGroups: Optional[CacheSecurityGroups] = None


class DescribeGlobalReplicationGroupsResult(BaseModel):
    Marker: Optional[String] = None
    GlobalReplicationGroups: Optional[GlobalReplicationGroupList] = None


class DescribeSnapshotsListMessage(BaseModel):
    """
    Represents the output of a <code>DescribeSnapshots</code> operation.
    """

    Marker: Optional[String] = None
    Snapshots: Optional[SnapshotList] = None


class DisassociateGlobalReplicationGroupResult(CreateGlobalReplicationGroupResult):
    pass


class FailoverGlobalReplicationGroupResult(CreateGlobalReplicationGroupResult):
    pass


class IncreaseNodeGroupsInGlobalReplicationGroupResult(
    CreateGlobalReplicationGroupResult
):
    pass


class ModifyCacheClusterResult(CreateCacheClusterResult):
    pass


class ModifyGlobalReplicationGroupResult(CreateGlobalReplicationGroupResult):
    pass


class RebalanceSlotsInGlobalReplicationGroupResult(CreateGlobalReplicationGroupResult):
    pass


class RebootCacheClusterResult(CreateCacheClusterResult):
    pass


class RevokeCacheSecurityGroupIngressResult(AuthorizeCacheSecurityGroupIngressResult):
    pass


class ReplicationGroup(BaseModel):
    """
    Contains all of the attributes of a specific Redis replication group.
    """

    ReplicationGroupId: Optional[String] = None
    Description: Optional[String] = None
    GlobalReplicationGroupInfo: Optional[GlobalReplicationGroupInfo] = None
    Status: Optional[String] = None
    PendingModifiedValues: Optional[ReplicationGroupPendingModifiedValues] = None
    MemberClusters: Optional[ClusterIdList] = None
    NodeGroups: Optional[NodeGroupList] = None
    SnapshottingClusterId: Optional[String] = None
    AutomaticFailover: Optional[AutomaticFailoverStatus] = None
    MultiAZ: Optional[MultiAZStatus] = None
    ConfigurationEndpoint: Optional[Endpoint] = None
    SnapshotRetentionLimit: Optional[IntegerOptional] = None
    SnapshotWindow: Optional[String] = None
    ClusterEnabled: Optional[BooleanOptional] = None
    CacheNodeType: Optional[String] = None
    AuthTokenEnabled: Optional[BooleanOptional] = None
    AuthTokenLastModifiedDate: Optional[TStamp] = None
    TransitEncryptionEnabled: Optional[BooleanOptional] = None
    AtRestEncryptionEnabled: Optional[BooleanOptional] = None
    MemberClustersOutpostArns: Optional[ReplicationGroupOutpostArnList] = None
    KmsKeyId: Optional[String] = None
    ARN: Optional[String] = None
    UserGroupIds: Optional[UserGroupIdList] = None
    LogDeliveryConfigurations: Optional[LogDeliveryConfigurationList] = None
    ReplicationGroupCreateTime: Optional[TStamp] = None


class ReplicationGroupList(BaseModel):
    __root__: List[ReplicationGroup]


class CompleteMigrationResponse(BaseModel):
    ReplicationGroup: Optional[ReplicationGroup] = None


class CreateReplicationGroupResult(CompleteMigrationResponse):
    pass


class DecreaseReplicaCountResult(CompleteMigrationResponse):
    pass


class DeleteReplicationGroupResult(CompleteMigrationResponse):
    pass


class ReplicationGroupMessage(BaseModel):
    """
    Represents the output of a <code>DescribeReplicationGroups</code> operation.
    """

    Marker: Optional[String] = None
    ReplicationGroups: Optional[ReplicationGroupList] = None


class IncreaseReplicaCountResult(CompleteMigrationResponse):
    pass


class ModifyReplicationGroupResult(CompleteMigrationResponse):
    pass


class ModifyReplicationGroupShardConfigurationResult(CompleteMigrationResponse):
    pass


class StartMigrationResponse(CompleteMigrationResponse):
    pass


class TestFailoverResult(CompleteMigrationResponse):
    pass

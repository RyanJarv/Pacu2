# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:59:37+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class AssociateDomainResponse(BaseModel):
    pass


class UnauthorizedException(BaseModel):
    __root__: Any


class InternalServerErrorException(UnauthorizedException):
    pass


class InvalidRequestException(UnauthorizedException):
    pass


class ResourceNotFoundException(UnauthorizedException):
    pass


class ResourceAlreadyExistsException(UnauthorizedException):
    pass


class TooManyRequestsException(UnauthorizedException):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class DeleteFleetResponse(AssociateDomainResponse):
    pass


class DisassociateDomainResponse(AssociateDomainResponse):
    pass


class DisassociateWebsiteAuthorizationProviderResponse(AssociateDomainResponse):
    pass


class DisassociateWebsiteCertificateAuthorityResponse(AssociateDomainResponse):
    pass


class RestoreDomainAccessResponse(AssociateDomainResponse):
    pass


class RevokeDomainAccessResponse(AssociateDomainResponse):
    pass


class SignOutUserResponse(AssociateDomainResponse):
    pass


class TagResourceResponse(AssociateDomainResponse):
    pass


class UntagResourceResponse(AssociateDomainResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class UpdateAuditStreamConfigurationResponse(AssociateDomainResponse):
    pass


class UpdateCompanyNetworkConfigurationResponse(AssociateDomainResponse):
    pass


class SubnetId(BaseModel):
    __root__: Annotated[str, Field(regex='^subnet-([0-9a-f]{8}|[0-9a-f]{17})$')]


class SecurityGroupId(BaseModel):
    __root__: Annotated[str, Field(regex='^sg-([0-9a-f]{8}|[0-9a-f]{17})$')]


class UpdateDevicePolicyConfigurationResponse(AssociateDomainResponse):
    pass


class UpdateDomainMetadataResponse(AssociateDomainResponse):
    pass


class UpdateFleetMetadataResponse(AssociateDomainResponse):
    pass


class UpdateIdentityProviderConfigurationResponse(AssociateDomainResponse):
    pass


class AcmCertificateArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=/,.@-]+)*'
        ),
    ]


class FleetArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class DomainName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=253,
            min_length=1,
            regex='^[a-zA-Z0-9]?((?!-)([A-Za-z0-9-]*[A-Za-z0-9])\\.)+[a-zA-Z0-9]+$',
        ),
    ]


class DisplayName(BaseModel):
    __root__: Annotated[str, Field(max_length=100)]


class AssociateDomainRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName
    DisplayName: Optional[DisplayName] = None
    AcmCertificateArn: AcmCertificateArn


class AuthorizationProviderType(Enum):
    SAML = 'SAML'


class AssociateWebsiteAuthorizationProviderRequest(BaseModel):
    FleetArn: FleetArn
    AuthorizationProviderType: AuthorizationProviderType
    DomainName: Optional[DomainName] = None


class Id(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class Certificate(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=8192,
            min_length=1,
            regex='-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?',
        ),
    ]


class AssociateWebsiteCertificateAuthorityRequest(BaseModel):
    FleetArn: FleetArn
    Certificate: Certificate
    DisplayName: Optional[DisplayName] = None


class AuditStreamArn(BaseModel):
    __root__: Annotated[
        str, Field(regex='^arn:aws:kinesis:.+:[0-9]{12}:stream/AmazonWorkLink-.*$')
    ]


class Boolean(BaseModel):
    __root__: bool


class CertificateChain(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32768,
            min_length=1,
            regex='(-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}\\u000D?\\u000A)*-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?',
        ),
    ]


class CompanyCode(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class FleetName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=48,
            min_length=1,
            regex='^[a-z0-9](?:[a-z0-9\\-]{0,46}[a-z0-9])?$',
        ),
    ]


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateFleetRequest(BaseModel):
    FleetName: FleetName
    DisplayName: Optional[DisplayName] = None
    OptimizeForEndUserLocation: Optional[Boolean] = None
    Tags: Optional[TagMap] = None


class DateTime(BaseModel):
    __root__: datetime


class DeleteFleetRequest(BaseModel):
    FleetArn: FleetArn


class DescribeAuditStreamConfigurationRequest(BaseModel):
    FleetArn: FleetArn


class DescribeCompanyNetworkConfigurationRequest(BaseModel):
    FleetArn: FleetArn


class VpcId(BaseModel):
    __root__: Annotated[str, Field(regex='^vpc-([0-9a-f]{8}|[0-9a-f]{17})$')]


class SubnetIds(BaseModel):
    __root__: List[SubnetId]


class SecurityGroupIds(BaseModel):
    __root__: Annotated[List[SecurityGroupId], Field(max_items=5)]


class DescribeDevicePolicyConfigurationRequest(BaseModel):
    FleetArn: FleetArn


class DescribeDeviceRequest(BaseModel):
    FleetArn: FleetArn
    DeviceId: Id


class DeviceStatus(Enum):
    ACTIVE = 'ACTIVE'
    SIGNED_OUT = 'SIGNED_OUT'


class DeviceModel(Id):
    pass


class DeviceManufacturer(Id):
    pass


class DeviceOperatingSystemName(Id):
    pass


class DeviceOperatingSystemVersion(Id):
    pass


class DevicePatchLevel(Id):
    pass


class Username(Id):
    pass


class DescribeDomainRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName


class DomainStatus(Enum):
    PENDING_VALIDATION = 'PENDING_VALIDATION'
    ASSOCIATING = 'ASSOCIATING'
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    DISASSOCIATING = 'DISASSOCIATING'
    DISASSOCIATED = 'DISASSOCIATED'
    FAILED_TO_ASSOCIATE = 'FAILED_TO_ASSOCIATE'
    FAILED_TO_DISASSOCIATE = 'FAILED_TO_DISASSOCIATE'


class DescribeFleetMetadataRequest(BaseModel):
    FleetArn: FleetArn


class FleetStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    FAILED_TO_CREATE = 'FAILED_TO_CREATE'
    FAILED_TO_DELETE = 'FAILED_TO_DELETE'


class DescribeIdentityProviderConfigurationRequest(BaseModel):
    FleetArn: FleetArn


class SamlMetadata(BaseModel):
    __root__: Annotated[str, Field(max_length=204800, min_length=1)]


class DescribeWebsiteCertificateAuthorityRequest(BaseModel):
    FleetArn: FleetArn
    WebsiteCaId: Id


class DeviceSummary(BaseModel):
    """
    The summary of devices.
    """

    DeviceId: Optional[Id] = None
    DeviceStatus: Optional[DeviceStatus] = None


class DeviceSummaryList(BaseModel):
    __root__: List[DeviceSummary]


class DisassociateDomainRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName


class DisassociateWebsiteAuthorizationProviderRequest(BaseModel):
    FleetArn: FleetArn
    AuthorizationProviderId: Id


class DisassociateWebsiteCertificateAuthorityRequest(BaseModel):
    FleetArn: FleetArn
    WebsiteCaId: Id


class DomainSummary(BaseModel):
    """
    The summary of the domain.
    """

    DomainName: DomainName
    DisplayName: Optional[DisplayName] = None
    CreatedTime: DateTime
    DomainStatus: DomainStatus


class DomainSummaryList(BaseModel):
    __root__: List[DomainSummary]


class FleetSummary(BaseModel):
    """
    The summary of the fleet.
    """

    FleetArn: Optional[FleetArn] = None
    CreatedTime: Optional[DateTime] = None
    LastUpdatedTime: Optional[DateTime] = None
    FleetName: Optional[FleetName] = None
    DisplayName: Optional[DisplayName] = None
    CompanyCode: Optional[CompanyCode] = None
    FleetStatus: Optional[FleetStatus] = None
    Tags: Optional[TagMap] = None


class FleetSummaryList(BaseModel):
    __root__: List[FleetSummary]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1, regex='[\\w\\-]+')]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class ListDevicesRequest(BaseModel):
    FleetArn: FleetArn
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListDomainsRequest(BaseModel):
    FleetArn: FleetArn
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListFleetsRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListTagsForResourceRequest(BaseModel):
    pass


class ListWebsiteAuthorizationProvidersRequest(BaseModel):
    FleetArn: FleetArn
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListWebsiteCertificateAuthoritiesRequest(BaseModel):
    FleetArn: FleetArn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class RestoreDomainAccessRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName


class RevokeDomainAccessRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName


class SignOutUserRequest(BaseModel):
    FleetArn: FleetArn
    Username: Username


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    Tags: TagMap


class UntagResourceRequest(BaseModel):
    pass


class UpdateAuditStreamConfigurationRequest(BaseModel):
    FleetArn: FleetArn
    AuditStreamArn: Optional[AuditStreamArn] = None


class UpdateCompanyNetworkConfigurationRequest(BaseModel):
    FleetArn: FleetArn
    VpcId: VpcId
    SubnetIds: SubnetIds
    SecurityGroupIds: SecurityGroupIds


class UpdateDevicePolicyConfigurationRequest(BaseModel):
    FleetArn: FleetArn
    DeviceCaCertificate: Optional[CertificateChain] = None


class UpdateDomainMetadataRequest(BaseModel):
    FleetArn: FleetArn
    DomainName: DomainName
    DisplayName: Optional[DisplayName] = None


class UpdateFleetMetadataRequest(BaseModel):
    FleetArn: FleetArn
    DisplayName: Optional[DisplayName] = None
    OptimizeForEndUserLocation: Optional[Boolean] = None


class UpdateIdentityProviderConfigurationRequest(BaseModel):
    FleetArn: FleetArn
    IdentityProviderType: AuthorizationProviderType
    IdentityProviderSamlMetadata: Optional[SamlMetadata] = None


class WebsiteAuthorizationProviderSummary(BaseModel):
    """
    The summary of the website authorization provider.
    """

    AuthorizationProviderId: Optional[Id] = None
    AuthorizationProviderType: AuthorizationProviderType
    DomainName: Optional[DomainName] = None
    CreatedTime: Optional[DateTime] = None


class WebsiteCaSummary(BaseModel):
    """
    The summary of the certificate authority (CA).
    """

    WebsiteCaId: Optional[Id] = None
    CreatedTime: Optional[DateTime] = None
    DisplayName: Optional[DisplayName] = None


class AssociateWebsiteAuthorizationProviderResponse(BaseModel):
    AuthorizationProviderId: Optional[Id] = None


class AssociateWebsiteCertificateAuthorityResponse(BaseModel):
    WebsiteCaId: Optional[Id] = None


class CreateFleetResponse(BaseModel):
    FleetArn: Optional[FleetArn] = None


class DescribeAuditStreamConfigurationResponse(BaseModel):
    AuditStreamArn: Optional[AuditStreamArn] = None


class DescribeCompanyNetworkConfigurationResponse(BaseModel):
    VpcId: Optional[VpcId] = None
    SubnetIds: Optional[SubnetIds] = None
    SecurityGroupIds: Optional[SecurityGroupIds] = None


class DescribeDeviceResponse(BaseModel):
    Status: Optional[DeviceStatus] = None
    Model: Optional[DeviceModel] = None
    Manufacturer: Optional[DeviceManufacturer] = None
    OperatingSystem: Optional[DeviceOperatingSystemName] = None
    OperatingSystemVersion: Optional[DeviceOperatingSystemVersion] = None
    PatchLevel: Optional[DevicePatchLevel] = None
    FirstAccessedTime: Optional[DateTime] = None
    LastAccessedTime: Optional[DateTime] = None
    Username: Optional[Username] = None


class DescribeDevicePolicyConfigurationResponse(BaseModel):
    DeviceCaCertificate: Optional[Certificate] = None


class DescribeDomainResponse(BaseModel):
    DomainName: Optional[DomainName] = None
    DisplayName: Optional[DisplayName] = None
    CreatedTime: Optional[DateTime] = None
    DomainStatus: Optional[DomainStatus] = None
    AcmCertificateArn: Optional[AcmCertificateArn] = None


class DescribeFleetMetadataResponse(BaseModel):
    CreatedTime: Optional[DateTime] = None
    LastUpdatedTime: Optional[DateTime] = None
    FleetName: Optional[FleetName] = None
    DisplayName: Optional[DisplayName] = None
    OptimizeForEndUserLocation: Optional[Boolean] = None
    CompanyCode: Optional[CompanyCode] = None
    FleetStatus: Optional[FleetStatus] = None
    Tags: Optional[TagMap] = None


class DescribeIdentityProviderConfigurationResponse(BaseModel):
    IdentityProviderType: Optional[AuthorizationProviderType] = None
    ServiceProviderSamlMetadata: Optional[SamlMetadata] = None
    IdentityProviderSamlMetadata: Optional[SamlMetadata] = None


class DescribeWebsiteCertificateAuthorityResponse(BaseModel):
    Certificate: Optional[Certificate] = None
    CreatedTime: Optional[DateTime] = None
    DisplayName: Optional[DisplayName] = None


class ListDevicesResponse(BaseModel):
    Devices: Optional[DeviceSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListDomainsResponse(BaseModel):
    Domains: Optional[DomainSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListFleetsResponse(BaseModel):
    FleetSummaryList: Optional[FleetSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagMap] = None


class WebsiteAuthorizationProvidersSummaryList(BaseModel):
    __root__: List[WebsiteAuthorizationProviderSummary]


class WebsiteCaSummaryList(BaseModel):
    __root__: List[WebsiteCaSummary]


class ListWebsiteAuthorizationProvidersResponse(BaseModel):
    WebsiteAuthorizationProviders: Optional[
        WebsiteAuthorizationProvidersSummaryList
    ] = None
    NextToken: Optional[NextToken] = None


class ListWebsiteCertificateAuthoritiesResponse(BaseModel):
    WebsiteCertificateAuthorities: Optional[WebsiteCaSummaryList] = None
    NextToken: Optional[NextToken] = None

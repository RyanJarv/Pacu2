# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:48:59+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class Uid(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4294967295.0)]


class Gid(Uid):
    pass


class SecondaryGids(BaseModel):
    __root__: Annotated[List[Gid], Field(max_items=16, min_items=0)]


class Path(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='^(\\/|(\\/(?!\\.)+[^$#<>;`|&?{}^*/\\n]+){1,4})$',
        ),
    ]


class BadRequest(BaseModel):
    __root__: Any


class AccessPointAlreadyExists(BadRequest):
    pass


class IncorrectFileSystemLifeCycleState(BadRequest):
    pass


class InternalServerError(BadRequest):
    pass


class FileSystemNotFound(BadRequest):
    pass


class AccessPointLimitExceeded(BadRequest):
    pass


class FileSystemAlreadyExists(BadRequest):
    pass


class FileSystemLimitExceeded(BadRequest):
    pass


class InsufficientThroughputCapacity(BadRequest):
    pass


class ThroughputLimitExceeded(BadRequest):
    pass


class UnsupportedAvailabilityZone(BadRequest):
    pass


class SecurityGroup(BaseModel):
    __root__: Annotated[
        str, Field(max_length=43, min_length=11, regex='^sg-[0-9a-f]{8,40}')
    ]


class MountTargetConflict(BadRequest):
    pass


class SubnetNotFound(BadRequest):
    pass


class NoFreeAddressesInSubnet(BadRequest):
    pass


class IpAddressInUse(BadRequest):
    pass


class NetworkInterfaceLimitExceeded(BadRequest):
    pass


class SecurityGroupLimitExceeded(BadRequest):
    pass


class SecurityGroupNotFound(BadRequest):
    pass


class AvailabilityZonesMismatch(BadRequest):
    pass


class AccessPointNotFound(BadRequest):
    pass


class FileSystemInUse(BadRequest):
    pass


class DependencyTimeout(BadRequest):
    pass


class MountTargetNotFound(BadRequest):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            min_length=1,
            regex='^(?![aA]{1}[wW]{1}[sS]{1}:)([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+)$',
        ),
    ]


class PolicyNotFound(BadRequest):
    pass


class ValidationException(BadRequest):
    pass


class IncorrectMountTargetState(BadRequest):
    pass


class Status(Enum):
    ENABLED = 'ENABLED'
    ENABLING = 'ENABLING'
    DISABLED = 'DISABLED'
    DISABLING = 'DISABLING'


class InvalidPolicyException(BadRequest):
    pass


class TooManyRequests(BadRequest):
    pass


class AccessPointArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            regex='^arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}$',
        ),
    ]


class ClientToken(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='.+')]


class Name(BaseModel):
    __root__: str


class AccessPointId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            regex='^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:access-point/fsap-[0-9a-f]{8,40}|fsap-[0-9a-f]{8,40})$',
        ),
    ]


class FileSystemId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            regex='^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:file-system/fs-[0-9a-f]{8,40}|fs-[0-9a-f]{8,40})$',
        ),
    ]


class PosixUser(BaseModel):
    """
    The full POSIX identity, including the user ID, group ID, and any secondary group IDs, on the access point that is used for all file system operations performed by NFS clients using the access point.
    """

    Uid: Uid
    Gid: Gid
    SecondaryGids: Optional[SecondaryGids] = None


class AwsAccountId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=14, regex='^(\\d{12})|(\\d{4}-\\d{4}-\\d{4})$')
    ]


class LifeCycleState(Enum):
    creating = 'creating'
    available = 'available'
    updating = 'updating'
    deleting = 'deleting'
    deleted = 'deleted'
    error = 'error'


class AvailabilityZoneId(Name):
    pass


class AvailabilityZoneName(ClientToken):
    pass


class Backup(BaseModel):
    __root__: bool


class BackupPolicy(BaseModel):
    """
    The backup policy for the file system used to create automatic daily backups. If status has a value of <code>ENABLED</code>, the file system is being automatically backed up. For more information, see <a href="https://docs.aws.amazon.com/efs/latest/ug/awsbackup.html#automatic-backups">Automatic backups</a>.
    """

    Status: Status


class BypassPolicyLockoutSafetyCheck(Backup):
    pass


class CreationToken(ClientToken):
    pass


class PerformanceMode(Enum):
    generalPurpose = 'generalPurpose'
    maxIO = 'maxIO'


class Encrypted(Backup):
    pass


class KmsKeyId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            regex='^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|mrk-[0-9a-f]{32}|alias/[a-zA-Z0-9/_-]+|(arn:aws[-a-z]*:kms:[a-z0-9-]+:\\d{12}:((key/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(key/mrk-[0-9a-f]{32})|(alias/[a-zA-Z0-9/_-]+))))$',
        ),
    ]


class ThroughputMode(Enum):
    bursting = 'bursting'
    provisioned = 'provisioned'


class ProvisionedThroughputInMibps(BaseModel):
    __root__: Annotated[float, Field(ge=1.0)]


class SubnetId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=47, min_length=15, regex='^subnet-[0-9a-f]{8,40}$')
    ]


class IpAddress(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=15,
            min_length=7,
            regex='^[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}$',
        ),
    ]


class SecurityGroups(BaseModel):
    __root__: Annotated[List[SecurityGroup], Field(max_items=100)]


class CreateMountTargetRequest(BaseModel):
    """
    <p/>
    """

    FileSystemId: FileSystemId
    SubnetId: SubnetId
    IpAddress: Optional[IpAddress] = None
    SecurityGroups: Optional[SecurityGroups] = None


class OwnerUid(Uid):
    pass


class OwnerGid(Uid):
    pass


class Permissions(BaseModel):
    __root__: Annotated[str, Field(max_length=4, min_length=3, regex='^[0-7]{3,4}$')]


class DeleteAccessPointRequest(BaseModel):
    pass


class DeleteFileSystemPolicyRequest(BaseModel):
    pass


class DeleteFileSystemRequest(BaseModel):
    """
    <p/>
    """

    pass


class MountTargetId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=45, min_length=13, regex='^fsmt-[0-9a-f]{8,40}$')
    ]


class DeleteMountTargetRequest(BaseModel):
    """
    <p/>
    """

    pass


class TagKeys(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class DeleteTagsRequest(BaseModel):
    """
    <p/>
    """

    TagKeys: TagKeys


class MaxResults(BaseModel):
    __root__: Annotated[
        int, Field(description='Max results used for pagination.', ge=1.0)
    ]


class Token(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Token used for pagination.',
            max_length=128,
            min_length=1,
            regex='.+',
        ),
    ]


class DescribeAccessPointsRequest(BaseModel):
    pass


class DescribeAccountPreferencesRequest(BaseModel):
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class DescribeBackupPolicyRequest(BaseModel):
    pass


class DescribeFileSystemPolicyRequest(BaseModel):
    pass


class MaxItems(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class Marker(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='.+')]


class DescribeFileSystemsRequest(BaseModel):
    """
    <p/>
    """

    pass


class DescribeLifecycleConfigurationRequest(BaseModel):
    pass


class DescribeMountTargetSecurityGroupsRequest(BaseModel):
    """
    <p/>
    """

    pass


class DescribeMountTargetsRequest(BaseModel):
    """
    <p/>
    """

    pass


class DescribeTagsRequest(BaseModel):
    """
    <p/>
    """

    pass


class FileSystemArn(Name):
    pass


class Timestamp(BaseModel):
    __root__: datetime


class TagValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$')
    ]


class MountTargetCount(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class FileSystemNullableSizeValue(MountTargetCount):
    pass


class Policy(BaseModel):
    __root__: Annotated[str, Field(max_length=20000, min_length=1, regex='[\\s\\S]+')]


class FileSystemSizeValue(MountTargetCount):
    pass


class TransitionToIARules(Enum):
    AFTER_7_DAYS = 'AFTER_7_DAYS'
    AFTER_14_DAYS = 'AFTER_14_DAYS'
    AFTER_30_DAYS = 'AFTER_30_DAYS'
    AFTER_60_DAYS = 'AFTER_60_DAYS'
    AFTER_90_DAYS = 'AFTER_90_DAYS'


class TransitionToPrimaryStorageClassRules(Enum):
    AFTER_1_ACCESS = 'AFTER_1_ACCESS'


class ResourceId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            regex='^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$',
        ),
    ]


class ListTagsForResourceRequest(BaseModel):
    pass


class ModifyMountTargetSecurityGroupsRequest(BaseModel):
    """
    <p/>
    """

    SecurityGroups: Optional[SecurityGroups] = None


class NetworkInterfaceId(Name):
    pass


class VpcId(Name):
    pass


class ResourceIdType(Enum):
    """
    A preference indicating a choice to use 63bit/32bit IDs for all applicable resources.
    """

    LONG_ID = 'LONG_ID'
    SHORT_ID = 'SHORT_ID'


class PutAccountPreferencesRequest(BaseModel):
    ResourceIdType: ResourceIdType


class PutBackupPolicyRequest(BaseModel):
    BackupPolicy: BackupPolicy


class PutFileSystemPolicyRequest(BaseModel):
    Policy: Policy
    BypassPolicyLockoutSafetyCheck: Optional[BypassPolicyLockoutSafetyCheck] = None


class Resource(Enum):
    """
    An EFS resource, for example a file system or a mount target.
    """

    FILE_SYSTEM = 'FILE_SYSTEM'
    MOUNT_TARGET = 'MOUNT_TARGET'


class Resources(BaseModel):
    """
    EFS resources to which a preference applies to.
    """

    __root__: Annotated[
        List[Resource],
        Field(description='EFS resources to which a preference applies to.'),
    ]


class UntagResourceRequest(BaseModel):
    pass


class UpdateFileSystemRequest(BaseModel):
    ThroughputMode: Optional[ThroughputMode] = None
    ProvisionedThroughputInMibps: Optional[ProvisionedThroughputInMibps] = None


class Tag(BaseModel):
    """
    A tag is a key-value pair. Allowed characters are letters, white space, and numbers that can be represented in UTF-8, and the following characters:<code> + - = . _ : /</code>.
    """

    Key: TagKey
    Value: TagValue


class CreationInfo(BaseModel):
    """
    <p>Required if the <code>RootDirectory</code> &gt; <code>Path</code> specified does not exist. Specifies the POSIX IDs and permissions to apply to the access point's <code>RootDirectory</code> &gt; <code>Path</code>. If the access point root directory does not exist, EFS creates it with these settings when a client connects to the access point. When specifying <code>CreationInfo</code>, you must include values for all properties. </p> <p>Amazon EFS creates a root directory only if you have provided the CreationInfo: OwnUid, OwnGID, and permissions for the directory. If you do not provide this information, Amazon EFS does not create the root directory. If the root directory does not exist, attempts to mount using the access point will fail.</p> <important> <p>If you do not provide <code>CreationInfo</code> and the specified <code>RootDirectory</code> does not exist, attempts to mount the file system using the access point will fail.</p> </important>
    """

    OwnerUid: OwnerUid
    OwnerGid: OwnerGid
    Permissions: Permissions


class MountTargetDescription(BaseModel):
    """
    Provides a description of a mount target.
    """

    OwnerId: Optional[AwsAccountId] = None
    MountTargetId: MountTargetId
    FileSystemId: FileSystemId
    SubnetId: SubnetId
    LifeCycleState: LifeCycleState
    IpAddress: Optional[IpAddress] = None
    NetworkInterfaceId: Optional[NetworkInterfaceId] = None
    AvailabilityZoneId: Optional[AvailabilityZoneId] = None
    AvailabilityZoneName: Optional[AvailabilityZoneName] = None
    VpcId: Optional[VpcId] = None


class BackupPolicyDescription(BaseModel):
    BackupPolicy: Optional[BackupPolicy] = None


class FileSystemPolicyDescription(BaseModel):
    FileSystemId: Optional[FileSystemId] = None
    Policy: Optional[Policy] = None


class DescribeMountTargetSecurityGroupsResponse(BaseModel):
    SecurityGroups: SecurityGroups


class LifecyclePolicy(BaseModel):
    """
    Describes a policy used by EFS lifecycle management to transition files to the Infrequent Access (IA) storage class.
    """

    TransitionToIA: Optional[TransitionToIARules] = None
    TransitionToPrimaryStorageClass: Optional[
        TransitionToPrimaryStorageClassRules
    ] = None


class Tags(BaseModel):
    __root__: List[Tag]


class RootDirectory(BaseModel):
    """
    Specifies the directory on the Amazon EFS file system that the access point provides access to. The access point exposes the specified file system path as the root directory of your file system to applications using the access point. NFS clients using the access point can only access data in the access point's <code>RootDirectory</code> and it's subdirectories.
    """

    Path: Optional[Path] = None
    CreationInfo: Optional[CreationInfo] = None


class CreateAccessPointRequest(BaseModel):
    ClientToken: ClientToken
    Tags: Optional[Tags] = None
    FileSystemId: FileSystemId
    PosixUser: Optional[PosixUser] = None
    RootDirectory: Optional[RootDirectory] = None


class CreateFileSystemRequest(BaseModel):
    CreationToken: CreationToken
    PerformanceMode: Optional[PerformanceMode] = None
    Encrypted: Optional[Encrypted] = None
    KmsKeyId: Optional[KmsKeyId] = None
    ThroughputMode: Optional[ThroughputMode] = None
    ProvisionedThroughputInMibps: Optional[ProvisionedThroughputInMibps] = None
    AvailabilityZoneName: Optional[AvailabilityZoneName] = None
    Backup: Optional[Backup] = None
    Tags: Optional[Tags] = None


class CreateTagsRequest(BaseModel):
    """
    <p/>
    """

    Tags: Tags


class ResourceIdPreference(BaseModel):
    """
    Describes the resource type and its ID preference for the user's Amazon Web Services account, in the current Amazon Web Services Region.
    """

    ResourceIdType: Optional[ResourceIdType] = None
    Resources: Optional[Resources] = None


class MountTargetDescriptions(BaseModel):
    __root__: List[MountTargetDescription]


class FileSystemSize(BaseModel):
    """
    The latest known metered size (in bytes) of data stored in the file system, in its <code>Value</code> field, and the time at which that size was determined in its <code>Timestamp</code> field. The value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, the value represents the actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not necessarily the exact size the file system was at any instant in time.
    """

    Value: FileSystemSizeValue
    Timestamp: Optional[Timestamp] = None
    ValueInIA: Optional[FileSystemNullableSizeValue] = None
    ValueInStandard: Optional[FileSystemNullableSizeValue] = None


class LifecyclePolicies(BaseModel):
    __root__: Annotated[List[LifecyclePolicy], Field(max_items=2)]


class PutLifecycleConfigurationRequest(BaseModel):
    LifecyclePolicies: LifecyclePolicies


class TagResourceRequest(BaseModel):
    Tags: Tags


class AccessPointDescription(BaseModel):
    """
    Provides a description of an EFS file system access point.
    """

    ClientToken: Optional[ClientToken] = None
    Name: Optional[Name] = None
    Tags: Optional[Tags] = None
    AccessPointId: Optional[AccessPointId] = None
    AccessPointArn: Optional[AccessPointArn] = None
    FileSystemId: Optional[FileSystemId] = None
    PosixUser: Optional[PosixUser] = None
    RootDirectory: Optional[RootDirectory] = None
    OwnerId: Optional[AwsAccountId] = None
    LifeCycleState: Optional[LifeCycleState] = None


class FileSystemDescription(BaseModel):
    """
    A description of the file system.
    """

    OwnerId: AwsAccountId
    CreationToken: CreationToken
    FileSystemId: FileSystemId
    FileSystemArn: Optional[FileSystemArn] = None
    CreationTime: Timestamp
    LifeCycleState: LifeCycleState
    Name: Optional[TagValue] = None
    NumberOfMountTargets: MountTargetCount
    SizeInBytes: FileSystemSize
    PerformanceMode: PerformanceMode
    Encrypted: Optional[Encrypted] = None
    KmsKeyId: Optional[KmsKeyId] = None
    ThroughputMode: Optional[ThroughputMode] = None
    ProvisionedThroughputInMibps: Optional[ProvisionedThroughputInMibps] = None
    AvailabilityZoneName: Optional[AvailabilityZoneName] = None
    AvailabilityZoneId: Optional[AvailabilityZoneId] = None
    Tags: Tags


class DescribeAccountPreferencesResponse(BaseModel):
    ResourceIdPreference: Optional[ResourceIdPreference] = None
    NextToken: Optional[Token] = None


class LifecycleConfigurationDescription(BaseModel):
    LifecyclePolicies: Optional[LifecyclePolicies] = None


class DescribeMountTargetsResponse(BaseModel):
    """
    <p/>
    """

    Marker: Optional[Marker] = None
    MountTargets: Optional[MountTargetDescriptions] = None
    NextMarker: Optional[Marker] = None


class DescribeTagsResponse(BaseModel):
    """
    <p/>
    """

    Marker: Optional[Marker] = None
    Tags: Tags
    NextMarker: Optional[Marker] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[Tags] = None
    NextToken: Optional[Token] = None


class PutAccountPreferencesResponse(BaseModel):
    ResourceIdPreference: Optional[ResourceIdPreference] = None


class AccessPointDescriptions(BaseModel):
    __root__: List[AccessPointDescription]


class FileSystemDescriptions(BaseModel):
    __root__: List[FileSystemDescription]


class DescribeAccessPointsResponse(BaseModel):
    AccessPoints: Optional[AccessPointDescriptions] = None
    NextToken: Optional[Token] = None


class DescribeFileSystemsResponse(BaseModel):
    Marker: Optional[Marker] = None
    FileSystems: Optional[FileSystemDescriptions] = None
    NextMarker: Optional[Marker] = None

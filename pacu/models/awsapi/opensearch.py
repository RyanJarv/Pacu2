# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:53:34+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ResourceNotFoundException(BaseModel):
    __root__: Any


class LimitExceededException(ResourceNotFoundException):
    pass


class DisabledOperationException(ResourceNotFoundException):
    pass


class BaseException(ResourceNotFoundException):
    pass


class ValidationException(ResourceNotFoundException):
    pass


class InternalException(ResourceNotFoundException):
    pass


class AccessDeniedException(ResourceNotFoundException):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class OpenSearchPartitionInstanceType(Enum):
    m3_medium_search = 'm3.medium.search'
    m3_large_search = 'm3.large.search'
    m3_xlarge_search = 'm3.xlarge.search'
    m3_2xlarge_search = 'm3.2xlarge.search'
    m4_large_search = 'm4.large.search'
    m4_xlarge_search = 'm4.xlarge.search'
    m4_2xlarge_search = 'm4.2xlarge.search'
    m4_4xlarge_search = 'm4.4xlarge.search'
    m4_10xlarge_search = 'm4.10xlarge.search'
    m5_large_search = 'm5.large.search'
    m5_xlarge_search = 'm5.xlarge.search'
    m5_2xlarge_search = 'm5.2xlarge.search'
    m5_4xlarge_search = 'm5.4xlarge.search'
    m5_12xlarge_search = 'm5.12xlarge.search'
    m5_24xlarge_search = 'm5.24xlarge.search'
    r5_large_search = 'r5.large.search'
    r5_xlarge_search = 'r5.xlarge.search'
    r5_2xlarge_search = 'r5.2xlarge.search'
    r5_4xlarge_search = 'r5.4xlarge.search'
    r5_12xlarge_search = 'r5.12xlarge.search'
    r5_24xlarge_search = 'r5.24xlarge.search'
    c5_large_search = 'c5.large.search'
    c5_xlarge_search = 'c5.xlarge.search'
    c5_2xlarge_search = 'c5.2xlarge.search'
    c5_4xlarge_search = 'c5.4xlarge.search'
    c5_9xlarge_search = 'c5.9xlarge.search'
    c5_18xlarge_search = 'c5.18xlarge.search'
    t3_nano_search = 't3.nano.search'
    t3_micro_search = 't3.micro.search'
    t3_small_search = 't3.small.search'
    t3_medium_search = 't3.medium.search'
    t3_large_search = 't3.large.search'
    t3_xlarge_search = 't3.xlarge.search'
    t3_2xlarge_search = 't3.2xlarge.search'
    ultrawarm1_medium_search = 'ultrawarm1.medium.search'
    ultrawarm1_large_search = 'ultrawarm1.large.search'
    ultrawarm1_xlarge_search = 'ultrawarm1.xlarge.search'
    t2_micro_search = 't2.micro.search'
    t2_small_search = 't2.small.search'
    t2_medium_search = 't2.medium.search'
    r3_large_search = 'r3.large.search'
    r3_xlarge_search = 'r3.xlarge.search'
    r3_2xlarge_search = 'r3.2xlarge.search'
    r3_4xlarge_search = 'r3.4xlarge.search'
    r3_8xlarge_search = 'r3.8xlarge.search'
    i2_xlarge_search = 'i2.xlarge.search'
    i2_2xlarge_search = 'i2.2xlarge.search'
    d2_xlarge_search = 'd2.xlarge.search'
    d2_2xlarge_search = 'd2.2xlarge.search'
    d2_4xlarge_search = 'd2.4xlarge.search'
    d2_8xlarge_search = 'd2.8xlarge.search'
    c4_large_search = 'c4.large.search'
    c4_xlarge_search = 'c4.xlarge.search'
    c4_2xlarge_search = 'c4.2xlarge.search'
    c4_4xlarge_search = 'c4.4xlarge.search'
    c4_8xlarge_search = 'c4.8xlarge.search'
    r4_large_search = 'r4.large.search'
    r4_xlarge_search = 'r4.xlarge.search'
    r4_2xlarge_search = 'r4.2xlarge.search'
    r4_4xlarge_search = 'r4.4xlarge.search'
    r4_8xlarge_search = 'r4.8xlarge.search'
    r4_16xlarge_search = 'r4.16xlarge.search'
    i3_large_search = 'i3.large.search'
    i3_xlarge_search = 'i3.xlarge.search'
    i3_2xlarge_search = 'i3.2xlarge.search'
    i3_4xlarge_search = 'i3.4xlarge.search'
    i3_8xlarge_search = 'i3.8xlarge.search'
    i3_16xlarge_search = 'i3.16xlarge.search'
    r6g_large_search = 'r6g.large.search'
    r6g_xlarge_search = 'r6g.xlarge.search'
    r6g_2xlarge_search = 'r6g.2xlarge.search'
    r6g_4xlarge_search = 'r6g.4xlarge.search'
    r6g_8xlarge_search = 'r6g.8xlarge.search'
    r6g_12xlarge_search = 'r6g.12xlarge.search'
    m6g_large_search = 'm6g.large.search'
    m6g_xlarge_search = 'm6g.xlarge.search'
    m6g_2xlarge_search = 'm6g.2xlarge.search'
    m6g_4xlarge_search = 'm6g.4xlarge.search'
    m6g_8xlarge_search = 'm6g.8xlarge.search'
    m6g_12xlarge_search = 'm6g.12xlarge.search'
    c6g_large_search = 'c6g.large.search'
    c6g_xlarge_search = 'c6g.xlarge.search'
    c6g_2xlarge_search = 'c6g.2xlarge.search'
    c6g_4xlarge_search = 'c6g.4xlarge.search'
    c6g_8xlarge_search = 'c6g.8xlarge.search'
    c6g_12xlarge_search = 'c6g.12xlarge.search'
    r6gd_large_search = 'r6gd.large.search'
    r6gd_xlarge_search = 'r6gd.xlarge.search'
    r6gd_2xlarge_search = 'r6gd.2xlarge.search'
    r6gd_4xlarge_search = 'r6gd.4xlarge.search'
    r6gd_8xlarge_search = 'r6gd.8xlarge.search'
    r6gd_12xlarge_search = 'r6gd.12xlarge.search'
    r6gd_16xlarge_search = 'r6gd.16xlarge.search'
    t4g_small_search = 't4g.small.search'
    t4g_medium_search = 't4g.medium.search'


class IntegerClass(BaseModel):
    __root__: int


class Boolean(BaseModel):
    __root__: bool


class ZoneAwarenessConfig(BaseModel):
    """
    The zone awareness configuration for the domain cluster, such as the number of availability zones.
    """

    AvailabilityZoneCount: Optional[IntegerClass] = None


class OpenSearchWarmPartitionInstanceType(Enum):
    ultrawarm1_medium_search = 'ultrawarm1.medium.search'
    ultrawarm1_large_search = 'ultrawarm1.large.search'
    ultrawarm1_xlarge_search = 'ultrawarm1.xlarge.search'


class ColdStorageOptions(BaseModel):
    """
    Specifies the configuration for cold storage options such as enabled
    """

    Enabled: Boolean


class VolumeType(Enum):
    """
    The type of EBS volume, standard, gp2, or io1. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/opensearch-createupdatedomains.html#opensearch-createdomain-configure-ebs" target="_blank">Configuring EBS-based Storage</a> for more information.
    """

    standard = 'standard'
    gp2 = 'gp2'
    io1 = 'io1'


class UserPoolId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=55, min_length=1, regex='[\\w-]+_[0-9a-zA-Z]+')
    ]


class IdentityPoolId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=55, min_length=1, regex='[\\w-]+:[0-9a-f-]+')
    ]


class RoleArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=20,
            regex='arn:(aws|aws\\-cn|aws\\-us\\-gov|aws\\-iso|aws\\-iso\\-b):iam::[0-9]+:role\\/.*',
        ),
    ]


class KmsKeyId(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=1, regex='.*')]


class String(BaseModel):
    __root__: str


class TLSSecurityPolicy(Enum):
    Policy_Min_TLS_1_0_2019_07 = 'Policy-Min-TLS-1-0-2019-07'
    Policy_Min_TLS_1_2_2019_07 = 'Policy-Min-TLS-1-2-2019-07'


class DomainNameFqdn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=255,
            min_length=1,
            regex='^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$',
        ),
    ]


class ARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The Amazon Resource Name (ARN) of the domain. See <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/index.html" target="_blank">Identifiers for IAM Entities </a> in <i>Using AWS Identity and Access Management</i> for more information. ',
            max_length=2048,
            min_length=20,
            regex='.*',
        ),
    ]


class AutoTuneDesiredState(Enum):
    """
    The Auto-Tune desired state. Valid values are ENABLED and DISABLED.
    """

    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class InvalidTypeException(ResourceNotFoundException):
    pass


class ResourceAlreadyExistsException(ResourceNotFoundException):
    pass


class S3BucketName(BaseModel):
    __root__: Annotated[str, Field(max_length=63, min_length=3)]


class S3Key(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class DomainName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The name of an domain. Domain names are unique across the domains owned by an account within an AWS region. Domain names start with a letter or number and can contain the following characters: a-z (lowercase), 0-9, and - (hyphen). ',
            max_length=28,
            min_length=3,
            regex='[a-z][a-z0-9\\-]+',
        ),
    ]


class InvalidPaginationTokenException(ResourceNotFoundException):
    pass


class RollbackOnDisable(Enum):
    """
    The rollback state while disabling Auto-Tune for the domain. Valid values are NO_ROLLBACK and DEFAULT_ROLLBACK.
    """

    NO_ROLLBACK = 'NO_ROLLBACK'
    DEFAULT_ROLLBACK = 'DEFAULT_ROLLBACK'


class OwnerId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='[0-9]+')]


class Region(BaseModel):
    __root__: Annotated[
        str, Field(max_length=30, min_length=5, regex='[a-z][a-z0-9\\-]+')
    ]


class ConnectionId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=10, regex='[a-z][a-z0-9\\-]+')
    ]


class AcceptInboundConnectionRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>AcceptInboundConnection</a> </code> operation.
    """

    pass


class PolicyDocument(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Access policy rules for a domain service endpoints. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-access-policies" target="_blank">Configuring access policies </a>. The maximum size of a policy document is 100 KB. ',
            max_length=102400,
            min_length=0,
            regex='.*',
        ),
    ]


class LimitName(String):
    pass


class AdvancedOptions(BaseModel):
    """
    <p>Exposes select native OpenSearch configuration values from <code>opensearch.yml</code>. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>
    """

    pass

    class Config:
        extra = Extra.allow


class PackageID(String):
    pass


class AssociatePackageRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>AssociatePackage</a> </code> operation.
    """

    pass


class AutoTuneType(Enum):
    """
    Specifies the Auto-Tune type. Valid value is SCHEDULED_ACTION.
    """

    SCHEDULED_ACTION = 'SCHEDULED_ACTION'


class AutoTuneDate(BaseModel):
    __root__: Annotated[
        datetime,
        Field(
            description='The timestamp of the Auto-Tune action scheduled for the domain.'
        ),
    ]


class StartAt(BaseModel):
    __root__: datetime


class AutoTuneState(Enum):
    """
    The Auto-Tune state for the domain. For valid states see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service</a>.
    """

    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    ENABLE_IN_PROGRESS = 'ENABLE_IN_PROGRESS'
    DISABLE_IN_PROGRESS = 'DISABLE_IN_PROGRESS'
    DISABLED_AND_ROLLBACK_SCHEDULED = 'DISABLED_AND_ROLLBACK_SCHEDULED'
    DISABLED_AND_ROLLBACK_IN_PROGRESS = 'DISABLED_AND_ROLLBACK_IN_PROGRESS'
    DISABLED_AND_ROLLBACK_COMPLETE = 'DISABLED_AND_ROLLBACK_COMPLETE'
    DISABLED_AND_ROLLBACK_ERROR = 'DISABLED_AND_ROLLBACK_ERROR'
    ERROR = 'ERROR'


class AutoTuneOptionsOutput(BaseModel):
    """
    The Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.
    """

    State: Optional[AutoTuneState] = None
    ErrorMessage: Optional[String] = None


class UpdateTimestamp(StartAt):
    pass


class UIntValue(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class BackendRole(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class CancelServiceSoftwareUpdateRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>CancelServiceSoftwareUpdate</a> </code> operation. Specifies the name of the domain that you wish to cancel a service software update on.
    """

    DomainName: DomainName


class CloudWatchLogsLogGroupArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='ARN of the Cloudwatch log group to publish logs to.',
            max_length=2048,
            min_length=20,
            regex='.*',
        ),
    ]


class ClusterConfig(BaseModel):
    """
    The configuration for the domain cluster, such as the type and number of instances.
    """

    InstanceType: Optional[OpenSearchPartitionInstanceType] = None
    InstanceCount: Optional[IntegerClass] = None
    DedicatedMasterEnabled: Optional[Boolean] = None
    ZoneAwarenessEnabled: Optional[Boolean] = None
    ZoneAwarenessConfig: Optional[ZoneAwarenessConfig] = None
    DedicatedMasterType: Optional[OpenSearchPartitionInstanceType] = None
    DedicatedMasterCount: Optional[IntegerClass] = None
    WarmEnabled: Optional[Boolean] = None
    WarmType: Optional[OpenSearchWarmPartitionInstanceType] = None
    WarmCount: Optional[IntegerClass] = None
    ColdStorageOptions: Optional[ColdStorageOptions] = None


class CognitoOptions(BaseModel):
    """
    Options to specify the Cognito user and identity pools for OpenSearch Dashboards authentication. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html" target="_blank">Configuring Amazon Cognito authentication for OpenSearch Dashboards</a>.
    """

    Enabled: Optional[Boolean] = None
    UserPoolId: Optional[UserPoolId] = None
    IdentityPoolId: Optional[IdentityPoolId] = None
    RoleArn: Optional[RoleArn] = None


class CommitMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=160)]


class VersionString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=18,
            min_length=14,
            regex='^Elasticsearch_[0-9]{1}\\.[0-9]{1,2}$|^OpenSearch_[0-9]{1,2}\\.[0-9]{1,2}$',
        ),
    ]


class VersionList(BaseModel):
    """
    List of supported OpenSearch versions.
    """

    __root__: Annotated[
        List[VersionString],
        Field(description='List of supported OpenSearch versions. '),
    ]


class ConnectionAlias(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=2, regex='[a-zA-Z][a-zA-Z0-9\\-\\_]+')
    ]


class ConnectionStatusMessage(String):
    pass


class EBSOptions(BaseModel):
    """
    Options to enable, disable, and specify the properties of EBS storage volumes.
    """

    EBSEnabled: Optional[Boolean] = None
    VolumeType: Optional[VolumeType] = None
    VolumeSize: Optional[IntegerClass] = None
    Iops: Optional[IntegerClass] = None


class SnapshotOptions(BaseModel):
    """
    The time, in UTC format, when the service takes a daily automated snapshot of the specified domain. Default is <code>0</code> hours.
    """

    AutomatedSnapshotStartHour: Optional[IntegerClass] = None


class EncryptionAtRestOptions(BaseModel):
    """
    Specifies encryption at rest options.
    """

    Enabled: Optional[Boolean] = None
    KmsKeyId: Optional[KmsKeyId] = None


class NodeToNodeEncryptionOptions(BaseModel):
    """
    The node-to-node encryption options.
    """

    Enabled: Optional[Boolean] = None


class LogPublishingOptions(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DomainEndpointOptions(BaseModel):
    """
    Options to configure the endpoint for the domain.
    """

    EnforceHTTPS: Optional[Boolean] = None
    TLSSecurityPolicy: Optional[TLSSecurityPolicy] = None
    CustomEndpointEnabled: Optional[Boolean] = None
    CustomEndpoint: Optional[DomainNameFqdn] = None
    CustomEndpointCertificateArn: Optional[ARN] = None


class PackageName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=28, min_length=3, regex='[a-z][a-z0-9\\-]+')
    ]


class PackageType(Enum):
    TXT_DICTIONARY = 'TXT-DICTIONARY'


class PackageDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class PackageSource(BaseModel):
    """
    The Amazon S3 location for importing the package specified as <code>S3BucketName</code> and <code>S3Key</code>
    """

    S3BucketName: Optional[S3BucketName] = None
    S3Key: Optional[S3Key] = None


class CreatePackageRequest(BaseModel):
    """
    Container for request parameters to the <code> <a>CreatePackage</a> </code> operation.
    """

    PackageName: PackageName
    PackageType: PackageType
    PackageDescription: Optional[PackageDescription] = None
    PackageSource: PackageSource


class CreatedAt(StartAt):
    pass


class DeleteDomainRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DeleteDomain</a> </code> operation. Specifies the name of the domain you want to delete.
    """

    pass


class DeleteInboundConnectionRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DeleteInboundConnection</a> </code> operation.
    """

    pass


class DeleteOutboundConnectionRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DeleteOutboundConnection</a> </code> operation.
    """

    pass


class DeletePackageRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>DeletePackage</a> </code> operation.
    """

    pass


class DeploymentCloseDateTimeStamp(StartAt):
    pass


class DeploymentStatus(Enum):
    PENDING_UPDATE = 'PENDING_UPDATE'
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    NOT_ELIGIBLE = 'NOT_ELIGIBLE'
    ELIGIBLE = 'ELIGIBLE'


class MaxResults(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description=' Set this value to limit the number of results returned. ',
            le=100.0,
        ),
    ]


class NextToken(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description=' Paginated APIs accept the NextToken input to return the next page of results and provide a NextToken output in the response, which you can use to retrieve more results. '
        ),
    ]


class DescribeDomainAutoTunesRequest(BaseModel):
    """
    Container for the parameters to the <code>DescribeDomainAutoTunes</code> operation.
    """

    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeDomainConfigRequest(BaseModel):
    """
    Container for the parameters to the <code>DescribeDomainConfig</code> operation. Specifies the domain name for which you want configuration information.
    """

    pass


class DescribeDomainRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DescribeDomain</a> </code> operation.
    """

    pass


class DomainNameList(BaseModel):
    """
    A list of domain names.
    """

    __root__: Annotated[List[DomainName], Field(description='A list of domain names.')]


class DescribeDomainsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DescribeDomains</a> </code> operation. By default, the API returns the status of all domains.
    """

    DomainNames: DomainNameList


class DescribeInstanceTypeLimitsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DescribeInstanceTypeLimits</a> </code> operation.
    """

    pass


class LimitsByRole(BaseModel):
    """
    The role of a given instance and all applicable limits. The role performed by a given OpenSearch instance can be one of the following: <ul> <li>data: If the given InstanceType is used as a data node</li> <li>master: If the given InstanceType is used as a master node</li> <li>ultra_warm: If the given InstanceType is used as a warm node</li> </ul>
    """

    pass

    class Config:
        extra = Extra.allow


class DescribePackagesFilterName(Enum):
    PackageID = 'PackageID'
    PackageName = 'PackageName'
    PackageStatus = 'PackageStatus'


class DescribePackagesFilterValue(BaseModel):
    __root__: Annotated[str, Field(regex='^[0-9a-zA-Z\\*\\.\\\\/\\?-]*$')]


class GUID(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='\\p{XDigit}{8}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{4}-\\p{XDigit}{12}',
        ),
    ]


class DescribeReservedInstanceOfferingsRequest(BaseModel):
    """
    Container for parameters to <code>DescribeReservedInstanceOfferings</code>
    """

    pass


class DescribeReservedInstancesRequest(BaseModel):
    """
    Container for parameters to <code>DescribeReservedInstances</code>
    """

    pass


class DissociatePackageRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>DissociatePackage</a> </code> operation.
    """

    pass


class DomainId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Unique identifier for the domain.', max_length=64, min_length=1
        ),
    ]


class EngineType(Enum):
    OpenSearch = 'OpenSearch'
    Elasticsearch = 'Elasticsearch'


class DomainInfo(BaseModel):
    DomainName: Optional[DomainName] = None
    EngineType: Optional[EngineType] = None


class DomainInfoList(BaseModel):
    """
    Contains the list of domain information.
    """

    __root__: Annotated[
        List[DomainInfo], Field(description='Contains the list of domain information.')
    ]


class LastUpdated(StartAt):
    pass


class DomainPackageStatus(Enum):
    ASSOCIATING = 'ASSOCIATING'
    ASSOCIATION_FAILED = 'ASSOCIATION_FAILED'
    ACTIVE = 'ACTIVE'
    DISSOCIATING = 'DISSOCIATING'
    DISSOCIATION_FAILED = 'DISSOCIATION_FAILED'


class PackageVersion(String):
    pass


class ReferencePath(String):
    pass


class ServiceUrl(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='The endpoint to which service requests are submitted. For example, <code> search-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com </code> or <code>doc-imdb-movies-oopcnjfn6ugofer3zx5iadxxca.eu-west-1.es.amazonaws.com</code>. '
        ),
    ]


class EndpointsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Double(BaseModel):
    __root__: float


class DurationValue(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description='Integer to specify the value of a maintenance schedule duration. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information. ',
            ge=1.0,
            le=24.0,
        ),
    ]


class TimeUnit(Enum):
    """
    The unit of a maintenance schedule duration. Valid value is HOUR. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    HOURS = 'HOURS'


class ErrorType(String):
    pass


class ErrorMessage(String):
    pass


class NonEmptyString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='[a-zA-Z0-9\\-\\_\\.]+')
    ]


class ValueStringList(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(min_items=1)]


class GetCompatibleVersionsRequest(BaseModel):
    """
    Container for the request parameters to <code> <a>GetCompatibleVersions</a> </code> operation.
    """

    pass


class GetPackageVersionHistoryRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>GetPackageVersionHistory</a> </code> operation.
    """

    pass


class GetUpgradeHistoryRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>GetUpgradeHistory</a> </code> operation.
    """

    pass


class GetUpgradeStatusRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>GetUpgradeStatus</a> </code> operation.
    """

    pass


class UpgradeStep(Enum):
    PRE_UPGRADE_CHECK = 'PRE_UPGRADE_CHECK'
    SNAPSHOT = 'SNAPSHOT'
    UPGRADE = 'UPGRADE'


class UpgradeStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    SUCCEEDED_WITH_ISSUES = 'SUCCEEDED_WITH_ISSUES'
    FAILED = 'FAILED'


class UpgradeName(String):
    pass


class InboundConnectionStatusCode(Enum):
    PENDING_ACCEPTANCE = 'PENDING_ACCEPTANCE'
    APPROVED = 'APPROVED'
    PROVISIONING = 'PROVISIONING'
    ACTIVE = 'ACTIVE'
    REJECTING = 'REJECTING'
    REJECTED = 'REJECTED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class InstanceCount1(BaseModel):
    __root__: Annotated[
        int, Field(description='The number of EC2 instances in the domain.', ge=1.0)
    ]


class MinimumInstanceCount(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description=' Minimum number of instances that can be instantiated for a given InstanceType. '
        ),
    ]


class MaximumInstanceCount(BaseModel):
    __root__: Annotated[
        int,
        Field(
            description=' Maximum number of instances that can be instantiated for a given InstanceType. '
        ),
    ]


class InstanceCountLimits(BaseModel):
    """
    InstanceCountLimits represents the limits on the number of instances that can be created in Amazon OpenSearch Service for a given InstanceType.
    """

    MinimumInstanceCount: Optional[MinimumInstanceCount] = None
    MaximumInstanceCount: Optional[MaximumInstanceCount] = None


class InstanceLimits(BaseModel):
    """
    InstanceLimits represents the list of instance-related attributes that are available for a given InstanceType.
    """

    InstanceCountLimits: Optional[InstanceCountLimits] = None


class InstanceRole(String):
    pass


class InstanceRoleList(BaseModel):
    __root__: List[InstanceRole]


class InstanceTypeDetails(BaseModel):
    InstanceType: Optional[OpenSearchPartitionInstanceType] = None
    EncryptionEnabled: Optional[Boolean] = None
    CognitoEnabled: Optional[Boolean] = None
    AppLogsEnabled: Optional[Boolean] = None
    AdvancedSecurityEnabled: Optional[Boolean] = None
    WarmEnabled: Optional[Boolean] = None
    InstanceRole: Optional[InstanceRoleList] = None


class InstanceTypeDetailsList(BaseModel):
    __root__: List[InstanceTypeDetails]


class Integer(IntegerClass):
    pass


class Issue(String):
    pass


class Issues(BaseModel):
    __root__: List[Issue]


class LimitValue(String):
    pass


class ListDomainNamesRequest(BaseModel):
    """
    Container for the parameters to the <code><a>ListDomainNames</a></code> operation.
    """

    pass


class ListDomainsForPackageRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>ListDomainsForPackage</a> </code> operation.
    """

    pass


class ListInstanceTypeDetailsRequest(BaseModel):
    pass


class ListPackagesForDomainRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>ListPackagesForDomain</a> </code> operation.
    """

    pass


class ListTagsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>ListTags</a> </code> operation. Specify the <code>ARN</code> of the domain that the tags you want to view are attached to.
    """

    pass


class ListVersionsRequest(BaseModel):
    """
    <p> Container for the parameters to the <code> <a>ListVersions</a> </code> operation. <p> Use <code> <a>MaxResults</a> </code> to control the maximum number of results to retrieve in a single call. </p> <p> Use <code> <a>NextToken</a> </code> in response to retrieve more results. If the received response does not contain a NextToken, there are no more results to retrieve. </p> </p>
    """

    pass


class LogType(Enum):
    """
    Type of log file. Can be one of the following: <ul> <li>INDEX_SLOW_LOGS: Index slow logs contain insert requests that took more time than configured index query log threshold to execute. </li> <li>SEARCH_SLOW_LOGS: Search slow logs contain search queries that took more time than configured search query log threshold to execute. </li> <li>ES_APPLICATION_LOGS: OpenSearch application logs contain information about errors and warnings raised during the operation of the service and can be useful for troubleshooting. </li> <li>AUDIT_LOGS: Audit logs contain records of user requests for access from the domain.</li> </ul>
    """

    INDEX_SLOW_LOGS = 'INDEX_SLOW_LOGS'
    SEARCH_SLOW_LOGS = 'SEARCH_SLOW_LOGS'
    ES_APPLICATION_LOGS = 'ES_APPLICATION_LOGS'
    AUDIT_LOGS = 'AUDIT_LOGS'


class Long(IntegerClass):
    pass


class Username(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=64, min_length=1, regex='.*')]


class Password(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=128, min_length=8, regex='.*')]


class OptionState(Enum):
    """
    <p>The state of a requested change. One of the following:</p> <ul> <li>Processing: The request change is still in progress.</li> <li>Active: The request change is processed and deployed to the domain.</li> </ul>
    """

    RequiresIndexDocuments = 'RequiresIndexDocuments'
    Processing = 'Processing'
    Active = 'Active'


class OutboundConnectionStatusCode(Enum):
    VALIDATING = 'VALIDATING'
    VALIDATION_FAILED = 'VALIDATION_FAILED'
    PENDING_ACCEPTANCE = 'PENDING_ACCEPTANCE'
    APPROVED = 'APPROVED'
    PROVISIONING = 'PROVISIONING'
    ACTIVE = 'ACTIVE'
    REJECTING = 'REJECTING'
    REJECTED = 'REJECTED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class PackageStatus(Enum):
    COPYING = 'COPYING'
    COPY_FAILED = 'COPY_FAILED'
    VALIDATING = 'VALIDATING'
    VALIDATION_FAILED = 'VALIDATION_FAILED'
    AVAILABLE = 'AVAILABLE'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    DELETE_FAILED = 'DELETE_FAILED'


class PackageVersionHistory(BaseModel):
    """
    Details of a package version.
    """

    PackageVersion: Optional[PackageVersion] = None
    CommitMessage: Optional[CommitMessage] = None
    CreatedAt: Optional[CreatedAt] = None


class ReservationToken(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=5, regex='.*')]


class PurchaseReservedInstanceOfferingRequest(BaseModel):
    """
    Container for parameters to <code>PurchaseReservedInstanceOffering</code>
    """

    ReservedInstanceOfferingId: GUID
    ReservationName: ReservationToken
    InstanceCount: Optional[InstanceCount1] = None


class RecurringCharge(BaseModel):
    """
    Contains the specific price and frequency of a recurring charges for a reserved OpenSearch instance, or for a reserved OpenSearch instance offering.
    """

    RecurringChargeAmount: Optional[Double] = None
    RecurringChargeFrequency: Optional[String] = None


class RecurringChargeList(BaseModel):
    __root__: List[RecurringCharge]


class RejectInboundConnectionRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>RejectInboundConnection</a> </code> operation.
    """

    pass


class ReservedInstancePaymentOption(Enum):
    ALL_UPFRONT = 'ALL_UPFRONT'
    PARTIAL_UPFRONT = 'PARTIAL_UPFRONT'
    NO_UPFRONT = 'NO_UPFRONT'


class ReservedInstance(BaseModel):
    """
    Details of a reserved OpenSearch instance.
    """

    ReservationName: Optional[ReservationToken] = None
    ReservedInstanceId: Optional[GUID] = None
    BillingSubscriptionId: Optional[Long] = None
    ReservedInstanceOfferingId: Optional[String] = None
    InstanceType: Optional[OpenSearchPartitionInstanceType] = None
    StartTime: Optional[UpdateTimestamp] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    UsagePrice: Optional[Double] = None
    CurrencyCode: Optional[String] = None
    InstanceCount: Optional[Integer] = None
    State: Optional[String] = None
    PaymentOption: Optional[ReservedInstancePaymentOption] = None
    RecurringCharges: Optional[RecurringChargeList] = None


class ReservedInstanceOffering(BaseModel):
    """
    Details of a reserved OpenSearch instance offering.
    """

    ReservedInstanceOfferingId: Optional[GUID] = None
    InstanceType: Optional[OpenSearchPartitionInstanceType] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    UsagePrice: Optional[Double] = None
    CurrencyCode: Optional[String] = None
    PaymentOption: Optional[ReservedInstancePaymentOption] = None
    RecurringCharges: Optional[RecurringChargeList] = None


class SAMLEntityId(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=8)]


class SAMLMetadata(BaseModel):
    __root__: Annotated[str, Field(max_length=1048576, min_length=1)]


class SAMLIdp(BaseModel):
    """
    The SAML identity povider's information.
    """

    MetadataContent: SAMLMetadata
    EntityId: SAMLEntityId


class ScheduledAutoTuneActionType(Enum):
    """
    The Auto-Tune action type. Valid values are JVM_HEAP_SIZE_TUNING, and JVM_YOUNG_GEN_TUNING.
    """

    JVM_HEAP_SIZE_TUNING = 'JVM_HEAP_SIZE_TUNING'
    JVM_YOUNG_GEN_TUNING = 'JVM_YOUNG_GEN_TUNING'


class ScheduledAutoTuneDescription(BaseModel):
    __root__: Annotated[str, Field(description='The Auto-Tune action description.')]


class ScheduledAutoTuneSeverityType(Enum):
    """
    The Auto-Tune action severity. Valid values are LOW, MEDIUM, and HIGH.
    """

    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'


class StartServiceSoftwareUpdateRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>StartServiceSoftwareUpdate</a> </code> operation. Specifies the name of the domain to schedule a service software update for.
    """

    DomainName: DomainName


class StartTimestamp(StartAt):
    pass


class StorageSubTypeName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description=' Sub-type of the given storage type. List of available sub-storage options: "instance" storageType has no storageSubType. "ebs" storageType has the following valid storageSubTypes: <ol> <li>standard</li> <li>gp2</li> <li>io1</li> </ol> See <code> <a>VolumeType</a> </code> for more information regarding each EBS storage option. '
        ),
    ]


class StorageTypeName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description=' Type of storage. List of available storage options: <ol> <li>instance</li> Built-in storage available for the instance <li>ebs</li> Elastic block storage attached to the instance </ol> '
        ),
    ]


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A string of length from 1 to 128 characters that specifies the key for a tag. Tag keys must be unique for the domain to which they're attached. ",
            max_length=128,
            min_length=1,
            regex='.*',
        ),
    ]


class TagValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="A string of length from 0 to 256 characters that specifies the value for a tag. Tag values can be null and don't have to be unique in a tag set. ",
            max_length=256,
            min_length=0,
            regex='.*',
        ),
    ]


class UpdatePackageRequest(BaseModel):
    """
    Container for request parameters to the <code> <a>UpdatePackage</a> </code> operation.
    """

    PackageID: PackageID
    PackageSource: PackageSource
    PackageDescription: Optional[PackageDescription] = None
    CommitMessage: Optional[CommitMessage] = None


class UpgradeDomainRequest(BaseModel):
    """
    Container for the request parameters to <code> <a>UpgradeDomain</a> </code> operation.
    """

    DomainName: DomainName
    TargetVersion: VersionString
    PerformCheckOnly: Optional[Boolean] = None
    AdvancedOptions: Optional[AdvancedOptions] = None


class UpgradeStepItem(BaseModel):
    """
    Represents a single step of the upgrade or upgrade eligibility check workflow.
    """

    UpgradeStep: Optional[UpgradeStep] = None
    UpgradeStepStatus: Optional[UpgradeStatus] = None
    Issues: Optional[Issues] = None
    ProgressPercent: Optional[Double] = None


class Tag(BaseModel):
    """
    A key value pair for a resource tag.
    """

    Key: TagKey
    Value: TagValue


class StringList(BaseModel):
    __root__: List[String]


class LogPublishingOption(BaseModel):
    """
    Log Publishing option that is set for a given domain. <br/>Attributes and their details: <ul> <li>CloudWatchLogsLogGroupArn: ARN of the Cloudwatch log group to publish logs to.</li> <li>Enabled: Whether the log publishing for a given log type is enabled or not.</li> </ul>
    """

    CloudWatchLogsLogGroupArn: Optional[CloudWatchLogsLogGroupArn] = None
    Enabled: Optional[Boolean] = None


class MasterUserOptions(BaseModel):
    """
    Credentials for the master user: username and password, ARN, or both.
    """

    MasterUserARN: Optional[ARN] = None
    MasterUserName: Optional[Username] = None
    MasterUserPassword: Optional[Password] = None


class SAMLOptionsInput(BaseModel):
    """
    The SAML application configuration for the domain.
    """

    Enabled: Optional[Boolean] = None
    Idp: Optional[SAMLIdp] = None
    MasterUserName: Optional[Username] = None
    MasterBackendRole: Optional[BackendRole] = None
    SubjectKey: Optional[String] = None
    RolesKey: Optional[String] = None
    SessionTimeoutMinutes: Optional[IntegerClass] = None


class AWSDomainInformation(BaseModel):
    OwnerId: Optional[OwnerId] = None
    DomainName: DomainName
    Region: Optional[Region] = None


class Filter(BaseModel):
    """
    A filter used to limit results when describing inbound or outbound cross-cluster connections. Multiple values can be specified per filter. A cross-cluster connection must match at least one of the specified values for it to be returned from an operation.
    """

    Name: Optional[NonEmptyString] = None
    Values: Optional[ValueStringList] = None


class DescribeInstanceTypeLimitsResponse(BaseModel):
    """
    Container for the parameters received from the <code> <a>DescribeInstanceTypeLimits</a> </code> operation.
    """

    LimitsByRole: Optional[LimitsByRole] = None


class GetUpgradeStatusResponse(BaseModel):
    """
    Container for the response returned by the <code> <a>GetUpgradeStatus</a> </code> operation.
    """

    UpgradeStep: Optional[UpgradeStep] = None
    StepStatus: Optional[UpgradeStatus] = None
    UpgradeName: Optional[UpgradeName] = None


class ListDomainNamesResponse(BaseModel):
    """
    The result of a <code>ListDomainNames</code> operation. Contains the names of all domains owned by this account and their respective engine types.
    """

    DomainNames: Optional[DomainInfoList] = None


class ListInstanceTypeDetailsResponse(BaseModel):
    InstanceTypeDetails: Optional[InstanceTypeDetailsList] = None
    NextToken: Optional[NextToken] = None


class ListVersionsResponse(BaseModel):
    """
    Container for the parameters for response received from the <code> <a>ListVersions</a> </code> operation.
    """

    Versions: Optional[VersionList] = None
    NextToken: Optional[NextToken] = None


class PurchaseReservedInstanceOfferingResponse(BaseModel):
    """
    Represents the output of a <code>PurchaseReservedInstanceOffering</code> operation.
    """

    ReservedInstanceId: Optional[GUID] = None
    ReservationName: Optional[ReservationToken] = None


class UpgradeDomainResponse(BaseModel):
    """
    Container for response returned by <code> <a>UpgradeDomain</a> </code> operation.
    """

    UpgradeId: Optional[String] = None
    DomainName: Optional[DomainName] = None
    TargetVersion: Optional[VersionString] = None
    PerformCheckOnly: Optional[Boolean] = None
    AdvancedOptions: Optional[AdvancedOptions] = None


class OptionStatus(BaseModel):
    """
    Provides the current status of the entity.
    """

    CreationDate: UpdateTimestamp
    UpdateDate: UpdateTimestamp
    UpdateVersion: Optional[UIntValue] = None
    State: OptionState
    PendingDeletion: Optional[Boolean] = None


class AccessPoliciesStatus(BaseModel):
    """
    The configured access rules for the domain's document and search endpoints, and the current status of those rules.
    """

    Options: PolicyDocument
    Status: OptionStatus


class TagList(BaseModel):
    """
    A list of <code>Tag</code>.
    """

    __root__: Annotated[List[Tag], Field(description='A list of <code>Tag</code>. ')]


class AddTagsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>AddTags</a> </code> operation. Specifies the tags to attach to the domain.
    """

    ARN: ARN
    TagList: TagList


class LimitValueList(BaseModel):
    __root__: List[LimitValue]


class AdditionalLimit(BaseModel):
    """
    List of limits that are specific to a given InstanceType and for each of its <code> <a>InstanceRole</a> </code> .
    """

    LimitName: Optional[LimitName] = None
    LimitValues: Optional[LimitValueList] = None


class AdditionalLimitList(BaseModel):
    __root__: List[AdditionalLimit]


class AdvancedOptionsStatus(BaseModel):
    """
    <p>Status of the advanced options for the specified domain. Currently, the following advanced options are available: </p> <ul> <li>Option to allow references to indices in an HTTP request body. Must be <code>false</code> when configuring access to individual sub-resources. By default, the value is <code>true</code>. See <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options" target="_blank">Advanced cluster parameters </a> for more information. </li> <li>Option to specify the percentage of heap space allocated to field data. By default, this setting is unbounded. </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomain-configure-advanced-options"> Advanced cluster parameters</a>. </p>
    """

    Options: AdvancedOptions
    Status: OptionStatus


class SAMLOptionsOutput(BaseModel):
    """
    Describes the SAML application configured for the domain.
    """

    Enabled: Optional[Boolean] = None
    Idp: Optional[SAMLIdp] = None
    SubjectKey: Optional[String] = None
    RolesKey: Optional[String] = None
    SessionTimeoutMinutes: Optional[IntegerClass] = None


class AdvancedSecurityOptions(BaseModel):
    """
    The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled.
    """

    Enabled: Optional[Boolean] = None
    InternalUserDatabaseEnabled: Optional[Boolean] = None
    SAMLOptions: Optional[SAMLOptionsOutput] = None


class AdvancedSecurityOptionsInput(BaseModel):
    """
    The advanced security configuration: whether advanced security is enabled, whether the internal database option is enabled, master username and password (if internal database is enabled), and master user ARN (if IAM is enabled).
    """

    Enabled: Optional[Boolean] = None
    InternalUserDatabaseEnabled: Optional[Boolean] = None
    MasterUserOptions: Optional[MasterUserOptions] = None
    SAMLOptions: Optional[SAMLOptionsInput] = None


class AdvancedSecurityOptionsStatus(BaseModel):
    """
    The status of advanced security options for the specified domain.
    """

    Options: AdvancedSecurityOptions
    Status: OptionStatus


class ScheduledAutoTuneDetails(BaseModel):
    """
    Specifies details about the scheduled Auto-Tune action. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    Date: Optional[AutoTuneDate] = None
    ActionType: Optional[ScheduledAutoTuneActionType] = None
    Action: Optional[ScheduledAutoTuneDescription] = None
    Severity: Optional[ScheduledAutoTuneSeverityType] = None


class Duration(BaseModel):
    """
    The maintenance schedule duration: duration value and duration unit. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    Value: Optional[DurationValue] = None
    Unit: Optional[TimeUnit] = None


class AutoTuneMaintenanceSchedule(BaseModel):
    """
    Specifies the Auto-Tune maintenance schedule. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    StartAt: Optional[StartAt] = None
    Duration: Optional[Duration] = None
    CronExpressionForRecurrence: Optional[String] = None


class AutoTuneStatus(BaseModel):
    """
    Provides the current Auto-Tune status for the domain.
    """

    CreationDate: UpdateTimestamp
    UpdateDate: UpdateTimestamp
    UpdateVersion: Optional[UIntValue] = None
    State: AutoTuneState
    ErrorMessage: Optional[String] = None
    PendingDeletion: Optional[Boolean] = None


class ServiceSoftwareOptions(BaseModel):
    """
    The current options of an domain service software options.
    """

    CurrentVersion: Optional[String] = None
    NewVersion: Optional[String] = None
    UpdateAvailable: Optional[Boolean] = None
    Cancellable: Optional[Boolean] = None
    UpdateStatus: Optional[DeploymentStatus] = None
    Description: Optional[String] = None
    AutomatedUpdateDate: Optional[DeploymentCloseDateTimeStamp] = None
    OptionalDeployment: Optional[Boolean] = None


class ClusterConfigStatus(BaseModel):
    """
    The configuration status for the specified domain.
    """

    Options: ClusterConfig
    Status: OptionStatus


class CognitoOptionsStatus(BaseModel):
    """
    The status of the Cognito options for the specified domain.
    """

    Options: CognitoOptions
    Status: OptionStatus


class CompatibleVersionsMap(BaseModel):
    """
    A map from an <code> <a>EngineVersion</a> </code> to a list of compatible <code> <a>EngineVersion</a> </code> s to which the domain can be upgraded.
    """

    SourceVersion: Optional[VersionString] = None
    TargetVersions: Optional[VersionList] = None


class CompatibleVersionsList(BaseModel):
    __root__: List[CompatibleVersionsMap]


class VPCOptions(BaseModel):
    """
    Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>.
    """

    SubnetIds: Optional[StringList] = None
    SecurityGroupIds: Optional[StringList] = None


class DomainInformationContainer(BaseModel):
    AWSDomainInformation: Optional[AWSDomainInformation] = None


class CreateOutboundConnectionRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>CreateOutboundConnection</a> </code> operation.
    """

    LocalDomainInfo: DomainInformationContainer
    RemoteDomainInfo: DomainInformationContainer
    ConnectionAlias: ConnectionAlias


class OutboundConnectionStatus(BaseModel):
    """
    The connection status of an outbound cross-cluster connection.
    """

    StatusCode: Optional[OutboundConnectionStatusCode] = None
    Message: Optional[ConnectionStatusMessage] = None


class OutboundConnection(BaseModel):
    """
    Specifies details about an outbound connection.
    """

    LocalDomainInfo: Optional[DomainInformationContainer] = None
    RemoteDomainInfo: Optional[DomainInformationContainer] = None
    ConnectionId: Optional[ConnectionId] = None
    ConnectionAlias: Optional[ConnectionAlias] = None
    ConnectionStatus: Optional[OutboundConnectionStatus] = None


class FilterList(BaseModel):
    __root__: List[Filter]


class DescribeInboundConnectionsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DescribeInboundConnections</a> </code> operation.
    """

    Filters: Optional[FilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class DescribeOutboundConnectionsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>DescribeOutboundConnections</a> </code> operation.
    """

    Filters: Optional[FilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class OutboundConnections(BaseModel):
    __root__: List[OutboundConnection]


class DescribePackagesFilterValues(BaseModel):
    __root__: List[DescribePackagesFilterValue]


class ReservedInstanceOfferingList(BaseModel):
    __root__: List[ReservedInstanceOffering]


class ReservedInstanceList(BaseModel):
    __root__: List[ReservedInstance]


class VersionStatus(BaseModel):
    """
    The status of the OpenSearch version options for the specified OpenSearch domain.
    """

    Options: VersionString
    Status: OptionStatus


class EBSOptionsStatus(BaseModel):
    """
    Status of the EBS options for the specified domain.
    """

    Options: EBSOptions
    Status: OptionStatus


class SnapshotOptionsStatus(BaseModel):
    """
    Status of a daily automated snapshot.
    """

    Options: SnapshotOptions
    Status: OptionStatus


class EncryptionAtRestOptionsStatus(BaseModel):
    """
    Status of the encryption At Rest options for the specified domain.
    """

    Options: EncryptionAtRestOptions
    Status: OptionStatus


class NodeToNodeEncryptionOptionsStatus(BaseModel):
    """
    Status of the node-to-node encryption options for the specified domain.
    """

    Options: NodeToNodeEncryptionOptions
    Status: OptionStatus


class LogPublishingOptionsStatus(BaseModel):
    """
    The configured log publishing options for the domain and their current status.
    """

    Options: Optional[LogPublishingOptions] = None
    Status: Optional[OptionStatus] = None


class DomainEndpointOptionsStatus(BaseModel):
    """
    The configured endpoint options for the domain and their current status.
    """

    Options: DomainEndpointOptions
    Status: OptionStatus


class ErrorDetails(BaseModel):
    ErrorType: Optional[ErrorType] = None
    ErrorMessage: Optional[ErrorMessage] = None


class VPCDerivedInfo(BaseModel):
    """
    Options to specify the subnets and security groups for the VPC endpoint. For more information, see <a href="http://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html" target="_blank"> Launching your Amazon OpenSearch Service domains using a VPC</a>.
    """

    VPCId: Optional[String] = None
    SubnetIds: Optional[StringList] = None
    AvailabilityZones: Optional[StringList] = None
    SecurityGroupIds: Optional[StringList] = None


class PackageVersionHistoryList(BaseModel):
    __root__: List[PackageVersionHistory]


class InboundConnectionStatus(BaseModel):
    """
    The connection status of an inbound cross-cluster connection.
    """

    StatusCode: Optional[InboundConnectionStatusCode] = None
    Message: Optional[ConnectionStatusMessage] = None


class RemoveTagsRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>RemoveTags</a> </code> operation. Specify the <code>ARN</code> for the domain from which you want to remove the specified <code>TagKey</code>.
    """

    ARN: ARN
    TagKeys: StringList


class StorageTypeLimit(AdditionalLimit):
    """
    Limits that are applicable for the given storage type.
    """

    pass


class UpgradeStepsList(BaseModel):
    __root__: List[UpgradeStepItem]


class UpgradeHistory(BaseModel):
    """
    History of the last 10 upgrades and upgrade eligibility checks.
    """

    UpgradeName: Optional[UpgradeName] = None
    StartTimestamp: Optional[StartTimestamp] = None
    UpgradeStatus: Optional[UpgradeStatus] = None
    StepsList: Optional[UpgradeStepsList] = None


class CancelServiceSoftwareUpdateResponse(BaseModel):
    """
    The result of a <code>CancelServiceSoftwareUpdate</code> operation. Contains the status of the update.
    """

    ServiceSoftwareOptions: Optional[ServiceSoftwareOptions] = None


class AutoTuneMaintenanceScheduleList(BaseModel):
    __root__: Annotated[List[AutoTuneMaintenanceSchedule], Field(max_items=100)]


class CreateOutboundConnectionResponse(BaseModel):
    """
    The result of a <code> <a>CreateOutboundConnection</a> </code> request. Contains the details about the newly created cross-cluster connection.
    """

    LocalDomainInfo: Optional[DomainInformationContainer] = None
    RemoteDomainInfo: Optional[DomainInformationContainer] = None
    ConnectionAlias: Optional[ConnectionAlias] = None
    ConnectionStatus: Optional[OutboundConnectionStatus] = None
    ConnectionId: Optional[ConnectionId] = None


class DeleteOutboundConnectionResponse(BaseModel):
    """
    The result of a <code> <a>DeleteOutboundConnection</a> </code> operation. Contains details about the deleted outbound connection.
    """

    Connection: Optional[OutboundConnection] = None


class DescribeOutboundConnectionsResponse(BaseModel):
    """
    The result of a <code> <a>DescribeOutboundConnections</a> </code> request. Contains the list of connections matching the filter criteria.
    """

    Connections: Optional[OutboundConnections] = None
    NextToken: Optional[NextToken] = None


class DescribePackagesFilter(BaseModel):
    """
    A filter to apply to the <code>DescribePackage</code> response.
    """

    Name: Optional[DescribePackagesFilterName] = None
    Value: Optional[DescribePackagesFilterValues] = None


class DescribeReservedInstanceOfferingsResponse(BaseModel):
    """
    Container for results from <code>DescribeReservedInstanceOfferings</code>
    """

    NextToken: Optional[NextToken] = None
    ReservedInstanceOfferings: Optional[ReservedInstanceOfferingList] = None


class DescribeReservedInstancesResponse(BaseModel):
    """
    Container for results from <code>DescribeReservedInstances</code>
    """

    NextToken: Optional[String] = None
    ReservedInstances: Optional[ReservedInstanceList] = None


class GetCompatibleVersionsResponse(BaseModel):
    """
    Container for the response returned by the <code> <a>GetCompatibleVersions</a> </code> operation.
    """

    CompatibleVersions: Optional[CompatibleVersionsList] = None


class GetPackageVersionHistoryResponse(BaseModel):
    """
    Container for response returned by <code> <a>GetPackageVersionHistory</a> </code> operation.
    """

    PackageID: Optional[PackageID] = None
    PackageVersionHistoryList: Optional[PackageVersionHistoryList] = None
    NextToken: Optional[String] = None


class ListTagsResponse(BaseModel):
    """
    The result of a <code>ListTags</code> operation. Contains tags for all requested domains.
    """

    TagList: Optional[TagList] = None


class StartServiceSoftwareUpdateResponse(CancelServiceSoftwareUpdateResponse):
    """
    The result of a <code>StartServiceSoftwareUpdate</code> operation. Contains the status of the update.
    """

    pass


class InboundConnection(BaseModel):
    """
    Details of an inbound connection.
    """

    LocalDomainInfo: Optional[DomainInformationContainer] = None
    RemoteDomainInfo: Optional[DomainInformationContainer] = None
    ConnectionId: Optional[ConnectionId] = None
    ConnectionStatus: Optional[InboundConnectionStatus] = None


class DomainPackageDetails(BaseModel):
    """
    Information on a package associated with a domain.
    """

    PackageID: Optional[PackageID] = None
    PackageName: Optional[PackageName] = None
    PackageType: Optional[PackageType] = None
    LastUpdated: Optional[LastUpdated] = None
    DomainName: Optional[DomainName] = None
    DomainPackageStatus: Optional[DomainPackageStatus] = None
    PackageVersion: Optional[PackageVersion] = None
    ReferencePath: Optional[ReferencePath] = None
    ErrorDetails: Optional[ErrorDetails] = None


class AutoTuneDetails(BaseModel):
    """
    Specifies details about the Auto-Tune action. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    ScheduledAutoTuneDetails: Optional[ScheduledAutoTuneDetails] = None


class AutoTune(BaseModel):
    """
    Specifies the Auto-Tune type and Auto-Tune action details.
    """

    AutoTuneType: Optional[AutoTuneType] = None
    AutoTuneDetails: Optional[AutoTuneDetails] = None


class AutoTuneList(BaseModel):
    __root__: List[AutoTune]


class AutoTuneOptions(BaseModel):
    """
    The Auto-Tune options: the Auto-Tune desired state for the domain, rollback state when disabling Auto-Tune options and list of maintenance schedules.
    """

    DesiredState: Optional[AutoTuneDesiredState] = None
    RollbackOnDisable: Optional[RollbackOnDisable] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None


class AutoTuneOptionsInput(BaseModel):
    """
    The Auto-Tune options: the Auto-Tune desired state for the domain and list of maintenance schedules.
    """

    DesiredState: Optional[AutoTuneDesiredState] = None
    MaintenanceSchedules: Optional[AutoTuneMaintenanceScheduleList] = None


class AutoTuneOptionsStatus(BaseModel):
    """
    The Auto-Tune status for the domain.
    """

    Options: Optional[AutoTuneOptions] = None
    Status: Optional[AutoTuneStatus] = None


class CreateDomainRequest(BaseModel):
    DomainName: DomainName
    EngineVersion: Optional[VersionString] = None
    ClusterConfig: Optional[ClusterConfig] = None
    EBSOptions: Optional[EBSOptions] = None
    AccessPolicies: Optional[PolicyDocument] = None
    SnapshotOptions: Optional[SnapshotOptions] = None
    VPCOptions: Optional[VPCOptions] = None
    CognitoOptions: Optional[CognitoOptions] = None
    EncryptionAtRestOptions: Optional[EncryptionAtRestOptions] = None
    NodeToNodeEncryptionOptions: Optional[NodeToNodeEncryptionOptions] = None
    AdvancedOptions: Optional[AdvancedOptions] = None
    LogPublishingOptions: Optional[LogPublishingOptions] = None
    DomainEndpointOptions: Optional[DomainEndpointOptions] = None
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsInput] = None
    TagList: Optional[TagList] = None
    AutoTuneOptions: Optional[AutoTuneOptionsInput] = None


class DomainStatus(BaseModel):
    """
    The current status of a domain.
    """

    DomainId: DomainId
    DomainName: DomainName
    ARN: ARN
    Created: Optional[Boolean] = None
    Deleted: Optional[Boolean] = None
    Endpoint: Optional[ServiceUrl] = None
    Endpoints: Optional[EndpointsMap] = None
    Processing: Optional[Boolean] = None
    UpgradeProcessing: Optional[Boolean] = None
    EngineVersion: Optional[VersionString] = None
    ClusterConfig: ClusterConfig
    EBSOptions: Optional[EBSOptions] = None
    AccessPolicies: Optional[PolicyDocument] = None
    SnapshotOptions: Optional[SnapshotOptions] = None
    VPCOptions: Optional[VPCDerivedInfo] = None
    CognitoOptions: Optional[CognitoOptions] = None
    EncryptionAtRestOptions: Optional[EncryptionAtRestOptions] = None
    NodeToNodeEncryptionOptions: Optional[NodeToNodeEncryptionOptions] = None
    AdvancedOptions: Optional[AdvancedOptions] = None
    LogPublishingOptions: Optional[LogPublishingOptions] = None
    ServiceSoftwareOptions: Optional[ServiceSoftwareOptions] = None
    DomainEndpointOptions: Optional[DomainEndpointOptions] = None
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptions] = None
    AutoTuneOptions: Optional[AutoTuneOptionsOutput] = None


class PackageDetails(BaseModel):
    """
    Basic information about a package.
    """

    PackageID: Optional[PackageID] = None
    PackageName: Optional[PackageName] = None
    PackageType: Optional[PackageType] = None
    PackageDescription: Optional[PackageDescription] = None
    PackageStatus: Optional[PackageStatus] = None
    CreatedAt: Optional[CreatedAt] = None
    LastUpdatedAt: Optional[LastUpdated] = None
    AvailablePackageVersion: Optional[PackageVersion] = None
    ErrorDetails: Optional[ErrorDetails] = None


class DomainStatusList(BaseModel):
    """
    A list that contains the status of each requested domain.
    """

    __root__: Annotated[
        List[DomainStatus],
        Field(description='A list that contains the status of each requested domain.'),
    ]


class InboundConnections(BaseModel):
    __root__: List[InboundConnection]


class DescribePackagesFilterList(BaseModel):
    """
    A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response.
    """

    __root__: Annotated[
        List[DescribePackagesFilter],
        Field(
            description='A list of <code>DescribePackagesFilter</code> to filter the packages included in a <code>DescribePackages</code> response. '
        ),
    ]


class DescribePackagesRequest(BaseModel):
    """
    Container for the request parameters to the <code> <a>DescribePackage</a> </code> operation.
    """

    Filters: Optional[DescribePackagesFilterList] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class PackageDetailsList(BaseModel):
    __root__: List[PackageDetails]


class VPCDerivedInfoStatus(BaseModel):
    """
    Status of the VPC options for the specified domain.
    """

    Options: VPCDerivedInfo
    Status: OptionStatus


class DomainPackageDetailsList(BaseModel):
    __root__: List[DomainPackageDetails]


class UpgradeHistoryList(BaseModel):
    __root__: List[UpgradeHistory]


class StorageTypeLimitList(BaseModel):
    __root__: List[StorageTypeLimit]


class StorageType(BaseModel):
    """
    StorageTypes represents the list of storage-related types and their attributes that are available for a given InstanceType.
    """

    StorageTypeName: Optional[StorageTypeName] = None
    StorageSubTypeName: Optional[StorageSubTypeName] = None
    StorageTypeLimits: Optional[StorageTypeLimitList] = None


class UpdateDomainConfigRequest(BaseModel):
    """
    Container for the parameters to the <code> <a>UpdateDomain</a> </code> operation. Specifies the type and number of instances in the domain cluster.
    """

    ClusterConfig: Optional[ClusterConfig] = None
    EBSOptions: Optional[EBSOptions] = None
    SnapshotOptions: Optional[SnapshotOptions] = None
    VPCOptions: Optional[VPCOptions] = None
    CognitoOptions: Optional[CognitoOptions] = None
    AdvancedOptions: Optional[AdvancedOptions] = None
    AccessPolicies: Optional[PolicyDocument] = None
    LogPublishingOptions: Optional[LogPublishingOptions] = None
    EncryptionAtRestOptions: Optional[EncryptionAtRestOptions] = None
    DomainEndpointOptions: Optional[DomainEndpointOptions] = None
    NodeToNodeEncryptionOptions: Optional[NodeToNodeEncryptionOptions] = None
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsInput] = None
    AutoTuneOptions: Optional[AutoTuneOptions] = None


class AcceptInboundConnectionResponse(BaseModel):
    """
    The result of an <code> <a>AcceptInboundConnection</a> </code> operation. Contains details about the accepted inbound connection.
    """

    Connection: Optional[InboundConnection] = None


class AssociatePackageResponse(BaseModel):
    """
    Container for the response returned by <code> <a>AssociatePackage</a> </code> operation.
    """

    DomainPackageDetails: Optional[DomainPackageDetails] = None


class CreateDomainResponse(BaseModel):
    """
    The result of a <code>CreateDomain</code> operation. Contains the status of the newly created Amazon OpenSearch Service domain.
    """

    DomainStatus: Optional[DomainStatus] = None


class CreatePackageResponse(BaseModel):
    """
    Container for the response returned by the <code> <a>CreatePackage</a> </code> operation.
    """

    PackageDetails: Optional[PackageDetails] = None


class DeleteDomainResponse(CreateDomainResponse):
    """
    The result of a <code>DeleteDomain</code> request. Contains the status of the pending deletion, or a "domain not found" error if the domain and all of its resources have been deleted.
    """

    pass


class DeleteInboundConnectionResponse(AcceptInboundConnectionResponse):
    """
    The result of a <code> <a>DeleteInboundConnection</a> </code> operation. Contains details about the deleted inbound connection.
    """

    pass


class DeletePackageResponse(CreatePackageResponse):
    """
    Container for the response parameters to the <code> <a>DeletePackage</a> </code> operation.
    """

    pass


class DescribeDomainResponse(BaseModel):
    """
    The result of a <code>DescribeDomain</code> request. Contains the status of the domain specified in the request.
    """

    DomainStatus: DomainStatus


class DescribeDomainAutoTunesResponse(BaseModel):
    """
    The result of a <code>DescribeDomainAutoTunes</code> request. See <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/auto-tune.html" target="_blank"> Auto-Tune for Amazon OpenSearch Service </a> for more information.
    """

    AutoTunes: Optional[AutoTuneList] = None
    NextToken: Optional[NextToken] = None


class DescribeDomainsResponse(BaseModel):
    """
    The result of a <code>DescribeDomains</code> request. Contains the status of the specified domains or all domains owned by the account.
    """

    DomainStatusList: DomainStatusList


class DescribeInboundConnectionsResponse(BaseModel):
    """
    The result of a <code> <a>DescribeInboundConnections</a> </code> request. Contains a list of connections matching the filter criteria.
    """

    Connections: Optional[InboundConnections] = None
    NextToken: Optional[NextToken] = None


class DescribePackagesResponse(BaseModel):
    """
    Container for the response returned by the <code> <a>DescribePackages</a> </code> operation.
    """

    PackageDetailsList: Optional[PackageDetailsList] = None
    NextToken: Optional[String] = None


class DissociatePackageResponse(AssociatePackageResponse):
    """
    Container for the response returned by <code> <a>DissociatePackage</a> </code> operation.
    """

    pass


class GetUpgradeHistoryResponse(BaseModel):
    """
    Container for the response returned by the <code> <a>GetUpgradeHistory</a> </code> operation.
    """

    UpgradeHistories: Optional[UpgradeHistoryList] = None
    NextToken: Optional[String] = None


class ListDomainsForPackageResponse(BaseModel):
    """
    Container for the response parameters to the <code> <a>ListDomainsForPackage</a> </code> operation.
    """

    DomainPackageDetailsList: Optional[DomainPackageDetailsList] = None
    NextToken: Optional[String] = None


class ListPackagesForDomainResponse(ListDomainsForPackageResponse):
    """
    Container for the response parameters to the <code> <a>ListPackagesForDomain</a> </code> operation.
    """

    pass


class RejectInboundConnectionResponse(AcceptInboundConnectionResponse):
    """
    The result of a <code> <a>RejectInboundConnection</a> </code> operation. Contains details about the rejected inbound connection.
    """

    pass


class UpdatePackageResponse(CreatePackageResponse):
    """
    Container for the response returned by the <code> <a>UpdatePackage</a> </code> operation.
    """

    pass


class DomainConfig(BaseModel):
    """
    The configuration of a domain.
    """

    EngineVersion: Optional[VersionStatus] = None
    ClusterConfig: Optional[ClusterConfigStatus] = None
    EBSOptions: Optional[EBSOptionsStatus] = None
    AccessPolicies: Optional[AccessPoliciesStatus] = None
    SnapshotOptions: Optional[SnapshotOptionsStatus] = None
    VPCOptions: Optional[VPCDerivedInfoStatus] = None
    CognitoOptions: Optional[CognitoOptionsStatus] = None
    EncryptionAtRestOptions: Optional[EncryptionAtRestOptionsStatus] = None
    NodeToNodeEncryptionOptions: Optional[NodeToNodeEncryptionOptionsStatus] = None
    AdvancedOptions: Optional[AdvancedOptionsStatus] = None
    LogPublishingOptions: Optional[LogPublishingOptionsStatus] = None
    DomainEndpointOptions: Optional[DomainEndpointOptionsStatus] = None
    AdvancedSecurityOptions: Optional[AdvancedSecurityOptionsStatus] = None
    AutoTuneOptions: Optional[AutoTuneOptionsStatus] = None


class StorageTypeList(BaseModel):
    __root__: List[StorageType]


class Limits(BaseModel):
    """
    Limits for a given InstanceType and for each of its roles. <br/> Limits contains the following: <code> <a>StorageTypes</a> </code>, <code> <a>InstanceLimits</a> </code>, and <code> <a>AdditionalLimits</a> </code>
    """

    StorageTypes: Optional[StorageTypeList] = None
    InstanceLimits: Optional[InstanceLimits] = None
    AdditionalLimits: Optional[AdditionalLimitList] = None


class DescribeDomainConfigResponse(BaseModel):
    """
    The result of a <code>DescribeDomainConfig</code> request. Contains the configuration information of the requested domain.
    """

    DomainConfig: DomainConfig


class UpdateDomainConfigResponse(DescribeDomainConfigResponse):
    """
    The result of an <code>UpdateDomain</code> request. Contains the status of the domain being updated.
    """

    pass

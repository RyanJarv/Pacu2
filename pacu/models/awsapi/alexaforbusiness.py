# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:44:43+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ApproveSkillResponse(BaseModel):
    pass


class LimitExceededException(BaseModel):
    __root__: Any


class NotFoundException(LimitExceededException):
    pass


class ConcurrentModificationException(LimitExceededException):
    pass


class AssociateContactWithAddressBookResponse(ApproveSkillResponse):
    pass


class AssociateDeviceWithNetworkProfileResponse(ApproveSkillResponse):
    pass


class DeviceNotRegisteredException(LimitExceededException):
    pass


class AssociateDeviceWithRoomResponse(ApproveSkillResponse):
    pass


class AssociateSkillGroupWithRoomResponse(ApproveSkillResponse):
    pass


class AssociateSkillWithSkillGroupResponse(ApproveSkillResponse):
    pass


class SkillNotLinkedException(LimitExceededException):
    pass


class AssociateSkillWithUsersResponse(ApproveSkillResponse):
    pass


class AlreadyExistsException(LimitExceededException):
    pass


class InvalidCertificateAuthorityException(LimitExceededException):
    pass


class InvalidServiceLinkedRoleStateException(LimitExceededException):
    pass


class ResourceInUseException(LimitExceededException):
    pass


class DeleteAddressBookResponse(ApproveSkillResponse):
    pass


class DeleteBusinessReportScheduleResponse(ApproveSkillResponse):
    pass


class DeleteConferenceProviderResponse(ApproveSkillResponse):
    pass


class DeleteContactResponse(ApproveSkillResponse):
    pass


class DeleteDeviceResponse(ApproveSkillResponse):
    pass


class DeleteDeviceUsageDataResponse(ApproveSkillResponse):
    pass


class DeleteGatewayGroupResponse(ApproveSkillResponse):
    pass


class ResourceAssociatedException(LimitExceededException):
    pass


class DeleteNetworkProfileResponse(ApproveSkillResponse):
    pass


class DeleteProfileResponse(ApproveSkillResponse):
    pass


class DeleteRoomResponse(ApproveSkillResponse):
    pass


class DeleteRoomSkillParameterResponse(ApproveSkillResponse):
    pass


class DeleteSkillAuthorizationResponse(ApproveSkillResponse):
    pass


class DeleteSkillGroupResponse(ApproveSkillResponse):
    pass


class DeleteUserResponse(ApproveSkillResponse):
    pass


class DisassociateContactFromAddressBookResponse(ApproveSkillResponse):
    pass


class DisassociateDeviceFromRoomResponse(ApproveSkillResponse):
    pass


class DisassociateSkillFromSkillGroupResponse(ApproveSkillResponse):
    pass


class DisassociateSkillFromUsersResponse(ApproveSkillResponse):
    pass


class DisassociateSkillGroupFromRoomResponse(ApproveSkillResponse):
    pass


class ForgetSmartHomeAppliancesResponse(ApproveSkillResponse):
    pass


class GetConferencePreferenceRequest(BaseModel):
    pass


class GetInvitationConfigurationRequest(BaseModel):
    pass


class InvalidSecretsManagerResourceException(LimitExceededException):
    pass


class PutConferencePreferenceResponse(ApproveSkillResponse):
    pass


class PutInvitationConfigurationResponse(ApproveSkillResponse):
    pass


class PutRoomSkillParameterResponse(ApproveSkillResponse):
    pass


class PutSkillAuthorizationResponse(ApproveSkillResponse):
    pass


class UnauthorizedException(LimitExceededException):
    pass


class InvalidDeviceException(LimitExceededException):
    pass


class RejectSkillResponse(ApproveSkillResponse):
    pass


class RevokeInvitationResponse(ApproveSkillResponse):
    pass


class SendInvitationResponse(ApproveSkillResponse):
    pass


class InvalidUserStatusException(LimitExceededException):
    pass


class StartDeviceSyncResponse(ApproveSkillResponse):
    pass


class StartSmartHomeApplianceDiscoveryResponse(ApproveSkillResponse):
    pass


class TagResourceResponse(ApproveSkillResponse):
    pass


class UntagResourceResponse(ApproveSkillResponse):
    pass


class UpdateAddressBookResponse(ApproveSkillResponse):
    pass


class NameInUseException(LimitExceededException):
    pass


class UpdateBusinessReportScheduleResponse(ApproveSkillResponse):
    pass


class UpdateConferenceProviderResponse(ApproveSkillResponse):
    pass


class UpdateContactResponse(ApproveSkillResponse):
    pass


class UpdateDeviceResponse(ApproveSkillResponse):
    pass


class UpdateGatewayResponse(ApproveSkillResponse):
    pass


class UpdateGatewayGroupResponse(ApproveSkillResponse):
    pass


class UpdateNetworkProfileResponse(ApproveSkillResponse):
    pass


class UpdateProfileResponse(ApproveSkillResponse):
    pass


class UpdateRoomResponse(ApproveSkillResponse):
    pass


class UpdateSkillGroupResponse(ApproveSkillResponse):
    pass


class Address(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=1)]


class Arn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}'
        ),
    ]


class AddressBookName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class AddressBookDescription(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=200,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class AddressBook(BaseModel):
    """
    An address book with attributes.
    """

    AddressBookArn: Optional[Arn] = None
    Name: Optional[AddressBookName] = None
    Description: Optional[AddressBookDescription] = None


class AddressBookData(AddressBook):
    """
    Information related to an address book.
    """

    pass


class AddressBookDataList(BaseModel):
    __root__: List[AddressBookData]


class AmazonId(BaseModel):
    __root__: Annotated[str, Field(regex='[a-zA-Z0-9]{1,18}')]


class ApplianceDescription(BaseModel):
    __root__: str


class ApplianceFriendlyName(ApplianceDescription):
    pass


class ApplianceManufacturerName(ApplianceDescription):
    pass


class SkillId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='(^amzn1\\.ask\\.skill\\.[0-9a-f\\-]{1,200})|(^amzn1\\.echo-sdk-ams\\.app\\.[0-9a-f\\-]{1,200})'
        ),
    ]


class Locale2(Enum):
    en_US = 'en-US'


class AudioLocation(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1200,
            min_length=0,
            regex='https://([A-Za-z0-9_.-]+)?(s3-[A-Za-z0-9-]+|s3\\.([A-Za-z0-9-])+|s3|s3.dualstack\\.([A-Za-z0-9-])+)+.amazonaws.com/.*',
        ),
    ]


class Audio(BaseModel):
    """
    <p>The audio message. There is a 1 MB limit on the audio file input and the only supported format is MP3. To convert your MP3 audio files to an Alexa-friendly, </p> <p>required codec version (MPEG version 2) and bit rate (48 kbps), you might use converter software. One option for this is a command-line tool, FFmpeg. For more information, see <a href="https://www.ffmpeg.org/">FFmpeg</a>. The following command converts the provided &lt;input-file&gt; to an MP3 file that is played in the announcement:</p> <p> <code>ffmpeg -i &lt;input-file&gt; -ac 2 -codec:a libmp3lame -b:a 48k -ar 16000 &lt;output-file.mp3&gt;</code> </p>
    """

    Locale: Locale2
    Location: AudioLocation


class AudioList(BaseModel):
    __root__: Annotated[List[Audio], Field(max_items=1)]


class Value(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class AuthorizationResult(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Boolean(BaseModel):
    __root__: bool


class BulletPoint(ApplianceDescription):
    pass


class BulletPoints(BaseModel):
    __root__: List[BulletPoint]


class BusinessReportStatus(Enum):
    RUNNING = 'RUNNING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class BusinessReportFailureCode(Enum):
    ACCESS_DENIED = 'ACCESS_DENIED'
    NO_SUCH_BUCKET = 'NO_SUCH_BUCKET'
    INTERNAL_FAILURE = 'INTERNAL_FAILURE'


class BusinessReportDeliveryTime(BaseModel):
    __root__: datetime


class BusinessReportDownloadUrl(ApplianceDescription):
    pass


class BusinessReportInterval(Enum):
    ONE_DAY = 'ONE_DAY'
    ONE_WEEK = 'ONE_WEEK'
    THIRTY_DAYS = 'THIRTY_DAYS'


class BusinessReportContentRange(BaseModel):
    """
    The content range of the report.
    """

    Interval: BusinessReportInterval


class BusinessReportFormat(Enum):
    CSV = 'CSV'
    CSV_ZIP = 'CSV_ZIP'


class Date(BaseModel):
    __root__: Annotated[
        str, Field(regex='^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$')
    ]


class BusinessReportRecurrence(BaseModel):
    """
    The recurrence of the reports.
    """

    StartDate: Optional[Date] = None


class BusinessReportS3Path(ApplianceDescription):
    pass


class CustomerS3BucketName(BaseModel):
    __root__: Annotated[str, Field(regex='[a-z0-9-\\.]{3,63}')]


class BusinessReportScheduleName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=64,
            min_length=0,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class S3KeyPrefix(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=0, regex="[A-Za-z0-9!_\\-\\.\\*'()/]*")
    ]


class CategoryId(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class CategoryName(ApplianceDescription):
    pass


class Category(BaseModel):
    """
    The skill store category that is shown. Alexa skills are assigned a specific skill category during creation, such as News, Social, and Sports.
    """

    CategoryId: Optional[CategoryId] = None
    CategoryName: Optional[CategoryName] = None


class CategoryList(BaseModel):
    __root__: List[Category]


class CertificateTime(BusinessReportDeliveryTime):
    pass


class ClientId(BaseModel):
    __root__: Annotated[str, Field(regex='^\\S\\+\\{1,256\\}$')]


class ClientRequestToken(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='A unique, user-specified identifier for the request that ensures idempotency.',
            max_length=150,
            min_length=10,
            regex='[a-zA-Z0-9][a-zA-Z0-9_-]*',
        ),
    ]


class CommsProtocol(Enum):
    SIP = 'SIP'
    SIPS = 'SIPS'
    H323 = 'H323'


class ConferencePreference(BaseModel):
    """
    The default conference provider that is used if no other scheduled meetings are detected.
    """

    DefaultConferenceProviderArn: Optional[Arn] = None


class ConferenceProviderName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=50,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class ConferenceProviderType(Enum):
    CHIME = 'CHIME'
    BLUEJEANS = 'BLUEJEANS'
    FUZE = 'FUZE'
    GOOGLE_HANGOUTS = 'GOOGLE_HANGOUTS'
    POLYCOM = 'POLYCOM'
    RINGCENTRAL = 'RINGCENTRAL'
    SKYPE_FOR_BUSINESS = 'SKYPE_FOR_BUSINESS'
    WEBEX = 'WEBEX'
    ZOOM = 'ZOOM'
    CUSTOM = 'CUSTOM'


class ConnectionStatus(Enum):
    ONLINE = 'ONLINE'
    OFFLINE = 'OFFLINE'


class ConnectionStatusUpdatedTime(BusinessReportDeliveryTime):
    pass


class ContactName(AddressBookName):
    pass


class RawPhoneNumber(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=50,
            min_length=0,
            regex='^[\\+0-9\\#\\,\\(][\\+0-9\\-\\.\\/\\(\\)\\,\\#\\s]+$',
        ),
    ]


class CountryCode(BaseModel):
    __root__: Annotated[str, Field(regex='\\d{1,3}')]


class EndOfMeetingReminderType(Enum):
    ANNOUNCEMENT_TIME_CHECK = 'ANNOUNCEMENT_TIME_CHECK'
    ANNOUNCEMENT_VARIABLE_TIME_LEFT = 'ANNOUNCEMENT_VARIABLE_TIME_LEFT'
    CHIME = 'CHIME'
    KNOCK = 'KNOCK'


class GatewayGroupName(AddressBookName):
    pass


class GatewayGroupDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=0)]


class Minutes(BaseModel):
    __root__: int


class CreateInstantBooking(BaseModel):
    """
    Creates settings for the instant booking feature that are applied to a room profile. When users start their meeting with Alexa, Alexa automatically books the room for the configured duration if the room is available.
    """

    DurationInMinutes: Minutes
    Enabled: Boolean


class CreateRequireCheckIn(BaseModel):
    """
    Creates settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released.
    """

    ReleaseAfterMinutes: Minutes
    Enabled: Boolean


class NetworkProfileName(AddressBookName):
    pass


class NetworkProfileDescription(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=200,
            min_length=0,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class NetworkSsid(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class NetworkSecurityType(Enum):
    OPEN = 'OPEN'
    WEP = 'WEP'
    WPA_PSK = 'WPA_PSK'
    WPA2_PSK = 'WPA2_PSK'
    WPA2_ENTERPRISE = 'WPA2_ENTERPRISE'


class NetworkEapMethod(Enum):
    EAP_TLS = 'EAP_TLS'


class CurrentWiFiPassword(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=128, min_length=5, regex='[\\x00-\\x7F]*')
    ]


class NextWiFiPassword(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=128, min_length=0, regex='(^$)|([\\x00-\\x7F]{5,})')
    ]


class ProfileName(AddressBookName):
    pass


class Timezone(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class DistanceUnit(Enum):
    METRIC = 'METRIC'
    IMPERIAL = 'IMPERIAL'


class TemperatureUnit(Enum):
    FAHRENHEIT = 'FAHRENHEIT'
    CELSIUS = 'CELSIUS'


class WakeWord(Enum):
    ALEXA = 'ALEXA'
    AMAZON = 'AMAZON'
    ECHO = 'ECHO'
    COMPUTER = 'COMPUTER'


class DeviceLocale(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class MaxVolumeLimit(Minutes):
    pass


class RoomName(AddressBookName):
    pass


class RoomDescription(AddressBookDescription):
    pass


class ProviderCalendarId(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=0)]


class SkillGroupName(AddressBookName):
    pass


class SkillGroupDescription(AddressBookDescription):
    pass


class UserUserId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9@_+.-]*')
    ]


class UserFirstName(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=30, min_length=0, regex="([A-Za-z\\-' 0-9._]|\\p{IsLetter})*"),
    ]


class UserLastName(UserFirstName):
    pass


class Email(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            min_length=1,
            regex='([0-9a-zA-Z]([+-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z]([-\\w]*[0-9a-zA-Z]+)*\\.)+[a-zA-Z]{2,9})',
        ),
    ]


class DeviceUsageType(Enum):
    VOICE = 'VOICE'


class RoomSkillParameterKey(DeviceLocale):
    pass


class EnrollmentId(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0)]


class DeveloperName(ApplianceDescription):
    pass


class PrivacyPolicy(ApplianceDescription):
    pass


class Url(ApplianceDescription):
    pass


class DeveloperInfo(BaseModel):
    """
    The details about the developer that published the skill.
    """

    DeveloperName: Optional[DeveloperName] = None
    PrivacyPolicy: Optional[PrivacyPolicy] = None
    Email: Optional[Email] = None
    Url: Optional[Url] = None


class DeviceSerialNumber1(BaseModel):
    __root__: Annotated[str, Field(regex='[a-zA-Z0-9]{1,200}')]


class DeviceType(DeviceSerialNumber1):
    pass


class DeviceName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=2,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class SoftwareVersion1(ApplianceDescription):
    pass


class MacAddress(ApplianceDescription):
    pass


class DeviceStatus(Enum):
    READY = 'READY'
    PENDING = 'PENDING'
    WAS_OFFLINE = 'WAS_OFFLINE'
    DEREGISTERED = 'DEREGISTERED'
    FAILED = 'FAILED'


class DeviceNetworkProfileInfo(BaseModel):
    """
    Detailed information about a device's network profile.
    """

    NetworkProfileArn: Optional[Arn] = None
    CertificateArn: Optional[Arn] = None
    CertificateExpirationTime: Optional[CertificateTime] = None


class DeviceRoomName(AddressBookName):
    pass


class DeviceDataCreatedTime(BusinessReportDeliveryTime):
    pass


class DeviceEventType(Enum):
    CONNECTION_STATUS = 'CONNECTION_STATUS'
    DEVICE_STATUS = 'DEVICE_STATUS'


class DeviceEventValue(ApplianceDescription):
    pass


class DeviceEventTime(BusinessReportDeliveryTime):
    pass


class DeviceEvent(BaseModel):
    """
    The list of device events.
    """

    Type: Optional[DeviceEventType] = None
    Value: Optional[DeviceEventValue] = None
    Timestamp: Optional[DeviceEventTime] = None


class DeviceEventList(BaseModel):
    __root__: List[DeviceEvent]


class DeviceSerialNumberForAVS(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9]{1,50}$')]


class Feature(Enum):
    BLUETOOTH = 'BLUETOOTH'
    VOLUME = 'VOLUME'
    NOTIFICATIONS = 'NOTIFICATIONS'
    LISTS = 'LISTS'
    SKILLS = 'SKILLS'
    NETWORK_PROFILE = 'NETWORK_PROFILE'
    SETTINGS = 'SETTINGS'
    ALL = 'ALL'


class DeviceStatusDetailCode(Enum):
    DEVICE_SOFTWARE_UPDATE_NEEDED = 'DEVICE_SOFTWARE_UPDATE_NEEDED'
    DEVICE_WAS_OFFLINE = 'DEVICE_WAS_OFFLINE'
    CREDENTIALS_ACCESS_FAILURE = 'CREDENTIALS_ACCESS_FAILURE'
    TLS_VERSION_MISMATCH = 'TLS_VERSION_MISMATCH'
    ASSOCIATION_REJECTION = 'ASSOCIATION_REJECTION'
    AUTHENTICATION_FAILURE = 'AUTHENTICATION_FAILURE'
    DHCP_FAILURE = 'DHCP_FAILURE'
    INTERNET_UNAVAILABLE = 'INTERNET_UNAVAILABLE'
    DNS_FAILURE = 'DNS_FAILURE'
    UNKNOWN_FAILURE = 'UNKNOWN_FAILURE'
    CERTIFICATE_ISSUING_LIMIT_EXCEEDED = 'CERTIFICATE_ISSUING_LIMIT_EXCEEDED'
    INVALID_CERTIFICATE_AUTHORITY = 'INVALID_CERTIFICATE_AUTHORITY'
    NETWORK_PROFILE_NOT_FOUND = 'NETWORK_PROFILE_NOT_FOUND'
    INVALID_PASSWORD_STATE = 'INVALID_PASSWORD_STATE'
    PASSWORD_NOT_FOUND = 'PASSWORD_NOT_FOUND'
    PASSWORD_MANAGER_ACCESS_DENIED = 'PASSWORD_MANAGER_ACCESS_DENIED'
    CERTIFICATE_AUTHORITY_ACCESS_DENIED = 'CERTIFICATE_AUTHORITY_ACCESS_DENIED'


class DeviceStatusDetail(BaseModel):
    """
    Details of a device’s status.
    """

    Feature: Optional[Feature] = None
    Code: Optional[DeviceStatusDetailCode] = None


class DeviceStatusDetails(BaseModel):
    __root__: List[DeviceStatusDetail]


class EnablementType1(Enum):
    ENABLED = 'ENABLED'
    PENDING = 'PENDING'


class EndUserLicenseAgreement(ApplianceDescription):
    pass


class Endpoint(DeviceLocale):
    pass


class EnrollmentStatus(Enum):
    INITIALIZED = 'INITIALIZED'
    PENDING = 'PENDING'
    REGISTERED = 'REGISTERED'
    DISASSOCIATING = 'DISASSOCIATING'
    DEREGISTERING = 'DEREGISTERING'


class Features(BaseModel):
    __root__: List[Feature]


class FilterKey(Address):
    pass


class FilterValue(Address):
    pass


class GatewayName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=253,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class GatewayDescription(NetworkProfileDescription):
    pass


class GatewayVersion(BaseModel):
    __root__: Annotated[str, Field(max_length=50, min_length=1)]


class Gateway(BaseModel):
    """
    The details of the gateway.
    """

    Arn: Optional[Arn] = None
    Name: Optional[GatewayName] = None
    Description: Optional[GatewayDescription] = None
    GatewayGroupArn: Optional[Arn] = None
    SoftwareVersion: Optional[GatewayVersion] = None


class GatewayGroup(BaseModel):
    """
    The details of the gateway group.
    """

    Arn: Optional[Arn] = None
    Name: Optional[GatewayGroupName] = None
    Description: Optional[GatewayGroupDescription] = None


class GatewayGroupSummary(GatewayGroup):
    """
    The summary of a gateway group.
    """

    pass


class GatewayGroupSummaries(BaseModel):
    __root__: List[GatewayGroupSummary]


class GatewaySummary(Gateway):
    """
    The summary of a gateway.
    """

    pass


class GatewaySummaries(BaseModel):
    __root__: List[GatewaySummary]


class GenericKeyword(ApplianceDescription):
    pass


class GenericKeywords(BaseModel):
    __root__: List[GenericKeyword]


class OrganizationName(AddressBookName):
    pass


class ShortSkillIdList(BaseModel):
    __root__: Annotated[List[SkillId], Field(max_items=3, min_items=0)]


class Room(BaseModel):
    """
    A room with attributes.
    """

    RoomArn: Optional[Arn] = None
    RoomName: Optional[RoomName] = None
    Description: Optional[RoomDescription] = None
    ProviderCalendarId: Optional[ProviderCalendarId] = None
    ProfileArn: Optional[Arn] = None


class SkillGroup(BaseModel):
    """
    A skill group with attributes.
    """

    SkillGroupArn: Optional[Arn] = None
    SkillGroupName: Optional[SkillGroupName] = None
    Description: Optional[SkillGroupDescription] = None


class IconUrl(ApplianceDescription):
    pass


class InstantBooking1(BaseModel):
    """
    Settings for the instant booking feature that are applied to a room profile. When users start their meeting with Alexa, Alexa automatically books the room for the configured duration if the room is available.
    """

    DurationInMinutes: Optional[Minutes] = None
    Enabled: Optional[Boolean] = None


class InvocationPhrase(ApplianceDescription):
    pass


class Key1(Value):
    pass


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1100, min_length=1)]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class SkillTypeFilter(Enum):
    PUBLIC = 'PUBLIC'
    PRIVATE = 'PRIVATE'
    ALL = 'ALL'


class SkillListMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class RequireCheckIn1(BaseModel):
    """
    Settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released.
    """

    ReleaseAfterMinutes: Optional[Minutes] = None
    Enabled: Optional[Boolean] = None


class RequirePin(Enum):
    YES = 'YES'
    NO = 'NO'
    OPTIONAL = 'OPTIONAL'


class NetworkProfileData(BaseModel):
    """
    The data associated with a network profile.
    """

    NetworkProfileArn: Optional[Arn] = None
    NetworkProfileName: Optional[NetworkProfileName] = None
    Description: Optional[NetworkProfileDescription] = None
    Ssid: Optional[NetworkSsid] = None
    SecurityType: Optional[NetworkSecurityType] = None
    EapMethod: Optional[NetworkEapMethod] = None
    CertificateAuthorityArn: Optional[Arn] = None


class NetworkProfileDataList(BaseModel):
    __root__: List[NetworkProfileData]


class NewInThisVersionBulletPoints(BulletPoints):
    pass


class OneClickIdDelay(BaseModel):
    __root__: Annotated[str, Field(max_length=2, min_length=1)]


class OneClickPinDelay(OneClickIdDelay):
    pass


class OutboundPhoneNumber(BaseModel):
    __root__: Annotated[str, Field(regex='\\d{10}')]


class PhoneNumberType(Enum):
    MOBILE = 'MOBILE'
    WORK = 'WORK'
    HOME = 'HOME'


class PhoneNumber(BaseModel):
    """
    The phone number for the contact containing the raw number and phone number type.
    """

    Number: RawPhoneNumber
    Type: PhoneNumberType


class ProductDescription(ApplianceDescription):
    pass


class ProductId(BaseModel):
    __root__: Annotated[str, Field(regex='^[a-zA-Z0-9_]{1,256}$')]


class ProfileData(BaseModel):
    """
    The data of a room profile.
    """

    ProfileArn: Optional[Arn] = None
    ProfileName: Optional[ProfileName] = None
    IsDefault: Optional[Boolean] = None
    Address: Optional[Address] = None
    Timezone: Optional[Timezone] = None
    DistanceUnit: Optional[DistanceUnit] = None
    TemperatureUnit: Optional[TemperatureUnit] = None
    WakeWord: Optional[WakeWord] = None
    Locale: Optional[DeviceLocale] = None


class ProfileDataList(BaseModel):
    __root__: List[ProfileData]


class UserCode(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class ReleaseDate(ApplianceDescription):
    pass


class UserId(BaseModel):
    __root__: Annotated[str, Field(regex='amzn1\\.[A-Za-z0-9+-\\/=.]{1,300}')]


class ReviewKey(ApplianceDescription):
    pass


class ReviewValue(ApplianceDescription):
    pass


class Reviews(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class RoomData(BaseModel):
    """
    The data of a room.
    """

    RoomArn: Optional[Arn] = None
    RoomName: Optional[RoomName] = None
    Description: Optional[RoomDescription] = None
    ProviderCalendarId: Optional[ProviderCalendarId] = None
    ProfileArn: Optional[Arn] = None
    ProfileName: Optional[ProfileName] = None


class RoomDataList(BaseModel):
    __root__: List[RoomData]


class RoomSkillParameterValue(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class Utterance(ApplianceDescription):
    pass


class SampleUtterances(BaseModel):
    __root__: List[Utterance]


class TotalCount(Minutes):
    pass


class TimeToLiveInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=3600.0)]


class ShortDescription(ApplianceDescription):
    pass


class SipUri(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(max_length=256, min_length=1, regex='^sip[s]?:([^@:]+)\\@([^@]+)$'),
    ]


class SipType(Enum):
    WORK = 'WORK'


class SipAddress(BaseModel):
    """
    The SIP address for the contact containing the URI and SIP address type.
    """

    Uri: SipUri
    Type: SipType


class SkillGroupData(SkillGroup):
    """
    The attributes of a skill group.
    """

    pass


class SkillName(AddressBookName):
    pass


class SkillStoreType(ApplianceDescription):
    pass


class Boolean1(Boolean):
    pass


class SkillType1(Enum):
    PUBLIC = 'PUBLIC'
    PRIVATE = 'PRIVATE'


class SkillSummary(BaseModel):
    """
    The summary of skills.
    """

    SkillId: Optional[SkillId] = None
    SkillName: Optional[SkillName] = None
    SupportsLinking: Optional[Boolean1] = None
    EnablementType: Optional[EnablementType1] = None
    SkillType: Optional[SkillType1] = None


class SmartHomeAppliance(BaseModel):
    """
    A smart home appliance that can connect to a central system. Any domestic device can be a smart appliance.
    """

    FriendlyName: Optional[ApplianceFriendlyName] = None
    Description: Optional[ApplianceDescription] = None
    ManufacturerName: Optional[ApplianceManufacturerName] = None


class SortKey(Address):
    pass


class SortValue(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class Sort(BaseModel):
    """
    An object representing a sort criteria.
    """

    Key: SortKey
    Value: SortValue


class SsmlValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=4096,
            min_length=0,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class Ssml(BaseModel):
    """
    The SSML message. For more information, see <a href="https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html">SSML Reference</a>.
    """

    Locale: Locale2
    Value: SsmlValue


class TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class TagValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=0, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class Tag(BaseModel):
    """
    A key-value pair that can be associated with a resource.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class TextValue(SsmlValue):
    pass


class Text(BaseModel):
    """
    The text message.
    """

    Locale: Locale2
    Value: TextValue


class TrustAnchor(BaseModel):
    __root__: Annotated[
        str,
        Field(
            regex='-{5}BEGIN CERTIFICATE-{5}\\u000D?\\u000A([A-Za-z0-9/+]{64}\\u000D?\\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\\u000D?\\u000A-{5}END CERTIFICATE-{5}(\\u000D?\\u000A)?'
        ),
    ]


class UpdateInstantBooking(InstantBooking1):
    """
    Updates settings for the instant booking feature that are applied to a room profile. If instant booking is enabled, Alexa automatically reserves a room if it is free when a user joins a meeting with Alexa.
    """

    pass


class UpdateRequireCheckIn(RequireCheckIn1):
    """
    Updates settings for the require check in feature that are applied to a room profile. Require check in allows a meeting room’s Alexa or AVS device to prompt the user to check in; otherwise, the room will be released.
    """

    pass


class UserData(BaseModel):
    """
    Information related to a user.
    """

    UserArn: Optional[Arn] = None
    FirstName: Optional[UserFirstName] = None
    LastName: Optional[UserLastName] = None
    Email: Optional[Email] = None
    EnrollmentStatus: Optional[EnrollmentStatus] = None
    EnrollmentId: Optional[EnrollmentId] = None


class ApproveSkillRequest(BaseModel):
    SkillId: SkillId


class AssociateContactWithAddressBookRequest(BaseModel):
    ContactArn: Arn
    AddressBookArn: Arn


class AssociateDeviceWithNetworkProfileRequest(BaseModel):
    DeviceArn: Arn
    NetworkProfileArn: Arn


class AssociateDeviceWithRoomRequest(BaseModel):
    DeviceArn: Optional[Arn] = None
    RoomArn: Optional[Arn] = None


class AssociateSkillGroupWithRoomRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    RoomArn: Optional[Arn] = None


class AssociateSkillWithSkillGroupRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    SkillId: SkillId


class AssociateSkillWithUsersRequest(BaseModel):
    SkillId: SkillId


class CreateAddressBookResponse(BaseModel):
    AddressBookArn: Optional[Arn] = None


class CreateBusinessReportScheduleResponse(BaseModel):
    ScheduleArn: Optional[Arn] = None


class CreateConferenceProviderResponse(BaseModel):
    ConferenceProviderArn: Optional[Arn] = None


class CreateContactResponse(BaseModel):
    ContactArn: Optional[Arn] = None


class CreateGatewayGroupResponse(BaseModel):
    GatewayGroupArn: Optional[Arn] = None


class CreateNetworkProfileResponse(BaseModel):
    NetworkProfileArn: Optional[Arn] = None


class CreateProfileResponse(BaseModel):
    ProfileArn: Optional[Arn] = None


class CreateRoomResponse(BaseModel):
    RoomArn: Optional[Arn] = None


class CreateSkillGroupResponse(BaseModel):
    SkillGroupArn: Optional[Arn] = None


class CreateUserResponse(BaseModel):
    UserArn: Optional[Arn] = None


class DeleteAddressBookRequest(BaseModel):
    AddressBookArn: Arn


class DeleteBusinessReportScheduleRequest(BaseModel):
    ScheduleArn: Arn


class DeleteConferenceProviderRequest(BaseModel):
    ConferenceProviderArn: Arn


class DeleteContactRequest(BaseModel):
    ContactArn: Arn


class DeleteDeviceRequest(BaseModel):
    DeviceArn: Arn


class DeleteDeviceUsageDataRequest(BaseModel):
    DeviceArn: Arn
    DeviceUsageType: DeviceUsageType


class DeleteGatewayGroupRequest(BaseModel):
    GatewayGroupArn: Arn


class DeleteNetworkProfileRequest(BaseModel):
    NetworkProfileArn: Arn


class DeleteProfileRequest(BaseModel):
    ProfileArn: Optional[Arn] = None


class DeleteRoomRequest(BaseModel):
    RoomArn: Optional[Arn] = None


class DeleteRoomSkillParameterRequest(BaseModel):
    RoomArn: Optional[Arn] = None
    SkillId: SkillId
    ParameterKey: RoomSkillParameterKey


class DeleteSkillAuthorizationRequest(BaseModel):
    SkillId: SkillId
    RoomArn: Optional[Arn] = None


class DeleteSkillGroupRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None


class DeleteUserRequest(BaseModel):
    UserArn: Optional[Arn] = None
    EnrollmentId: EnrollmentId


class DisassociateContactFromAddressBookRequest(BaseModel):
    ContactArn: Arn
    AddressBookArn: Arn


class DisassociateDeviceFromRoomRequest(BaseModel):
    DeviceArn: Optional[Arn] = None


class DisassociateSkillFromSkillGroupRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    SkillId: SkillId


class DisassociateSkillFromUsersRequest(BaseModel):
    SkillId: SkillId


class DisassociateSkillGroupFromRoomRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    RoomArn: Optional[Arn] = None


class ForgetSmartHomeAppliancesRequest(BaseModel):
    RoomArn: Arn


class GetAddressBookResponse(BaseModel):
    AddressBook: Optional[AddressBook] = None


class GetAddressBookRequest(BaseModel):
    AddressBookArn: Arn


class GetConferencePreferenceResponse(BaseModel):
    Preference: Optional[ConferencePreference] = None


class GetConferenceProviderRequest(BaseModel):
    ConferenceProviderArn: Arn


class GetContactRequest(BaseModel):
    ContactArn: Arn


class GetDeviceRequest(BaseModel):
    DeviceArn: Optional[Arn] = None


class GetGatewayResponse(BaseModel):
    Gateway: Optional[Gateway] = None


class GetGatewayRequest(BaseModel):
    GatewayArn: Arn


class GetGatewayGroupResponse(BaseModel):
    GatewayGroup: Optional[GatewayGroup] = None


class GetGatewayGroupRequest(BaseModel):
    GatewayGroupArn: Arn


class GetInvitationConfigurationResponse(BaseModel):
    OrganizationName: Optional[OrganizationName] = None
    ContactEmail: Optional[Email] = None
    PrivateSkillIds: Optional[ShortSkillIdList] = None


class GetNetworkProfileRequest(BaseModel):
    NetworkProfileArn: Arn


class GetProfileRequest(BaseModel):
    ProfileArn: Optional[Arn] = None


class GetRoomResponse(BaseModel):
    Room: Optional[Room] = None


class GetRoomRequest(BaseModel):
    RoomArn: Optional[Arn] = None


class GetRoomSkillParameterRequest(BaseModel):
    RoomArn: Optional[Arn] = None
    SkillId: SkillId
    ParameterKey: RoomSkillParameterKey


class GetSkillGroupResponse(BaseModel):
    SkillGroup: Optional[SkillGroup] = None


class GetSkillGroupRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None


class ListBusinessReportSchedulesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListConferenceProvidersRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListDeviceEventsResponse(BaseModel):
    DeviceEvents: Optional[DeviceEventList] = None
    NextToken: Optional[NextToken] = None


class ListDeviceEventsRequest(BaseModel):
    DeviceArn: Arn
    EventType: Optional[DeviceEventType] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListGatewayGroupsResponse(BaseModel):
    GatewayGroups: Optional[GatewayGroupSummaries] = None
    NextToken: Optional[NextToken] = None


class ListGatewayGroupsRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListGatewaysResponse(BaseModel):
    Gateways: Optional[GatewaySummaries] = None
    NextToken: Optional[NextToken] = None


class ListGatewaysRequest(BaseModel):
    GatewayGroupArn: Optional[Arn] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListSkillsRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    EnablementType: Optional[EnablementType1] = None
    SkillType: Optional[SkillTypeFilter] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[SkillListMaxResults] = None


class ListSkillsStoreCategoriesResponse(BaseModel):
    CategoryList: Optional[CategoryList] = None
    NextToken: Optional[NextToken] = None


class ListSkillsStoreCategoriesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class ListSkillsStoreSkillsByCategoryRequest(BaseModel):
    CategoryId: CategoryId
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[SkillListMaxResults] = None


class ListSmartHomeAppliancesRequest(BaseModel):
    RoomArn: Arn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListTagsRequest(BaseModel):
    Arn: Arn
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class PutConferencePreferenceRequest(BaseModel):
    ConferencePreference: ConferencePreference


class PutInvitationConfigurationRequest(BaseModel):
    OrganizationName: OrganizationName
    ContactEmail: Optional[Email] = None
    PrivateSkillIds: Optional[ShortSkillIdList] = None


class PutSkillAuthorizationRequest(BaseModel):
    AuthorizationResult: AuthorizationResult
    SkillId: SkillId
    RoomArn: Optional[Arn] = None


class RegisterAVSDeviceResponse(BaseModel):
    DeviceArn: Optional[Arn] = None


class RejectSkillRequest(BaseModel):
    SkillId: SkillId


class ResolveRoomRequest(BaseModel):
    UserId: UserId
    SkillId: SkillId


class RevokeInvitationRequest(BaseModel):
    UserArn: Optional[Arn] = None
    EnrollmentId: Optional[EnrollmentId] = None


class SearchAddressBooksResponse(BaseModel):
    AddressBooks: Optional[AddressBookDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchNetworkProfilesResponse(BaseModel):
    NetworkProfiles: Optional[NetworkProfileDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchProfilesResponse(BaseModel):
    Profiles: Optional[ProfileDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchRoomsResponse(BaseModel):
    Rooms: Optional[RoomDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SendAnnouncementResponse(BaseModel):
    AnnouncementArn: Optional[Arn] = None


class SendInvitationRequest(BaseModel):
    UserArn: Optional[Arn] = None


class StartDeviceSyncRequest(BaseModel):
    RoomArn: Optional[Arn] = None
    DeviceArn: Optional[Arn] = None
    Features: Features


class StartSmartHomeApplianceDiscoveryRequest(BaseModel):
    RoomArn: Arn


class UntagResourceRequest(BaseModel):
    Arn: Arn
    TagKeys: TagKeyList


class UpdateAddressBookRequest(BaseModel):
    AddressBookArn: Arn
    Name: Optional[AddressBookName] = None
    Description: Optional[AddressBookDescription] = None


class UpdateBusinessReportScheduleRequest(BaseModel):
    ScheduleArn: Arn
    S3BucketName: Optional[CustomerS3BucketName] = None
    S3KeyPrefix: Optional[S3KeyPrefix] = None
    Format: Optional[BusinessReportFormat] = None
    ScheduleName: Optional[BusinessReportScheduleName] = None
    Recurrence: Optional[BusinessReportRecurrence] = None


class UpdateDeviceRequest(BaseModel):
    DeviceArn: Optional[Arn] = None
    DeviceName: Optional[DeviceName] = None


class UpdateGatewayRequest(BaseModel):
    GatewayArn: Arn
    Name: Optional[GatewayName] = None
    Description: Optional[GatewayDescription] = None
    SoftwareVersion: Optional[GatewayVersion] = None


class UpdateGatewayGroupRequest(BaseModel):
    GatewayGroupArn: Arn
    Name: Optional[GatewayGroupName] = None
    Description: Optional[GatewayGroupDescription] = None


class UpdateRoomRequest(BaseModel):
    RoomArn: Optional[Arn] = None
    RoomName: Optional[RoomName] = None
    Description: Optional[RoomDescription] = None
    ProviderCalendarId: Optional[ProviderCalendarId] = None
    ProfileArn: Optional[Arn] = None


class UpdateSkillGroupRequest(BaseModel):
    SkillGroupArn: Optional[Arn] = None
    SkillGroupName: Optional[SkillGroupName] = None
    Description: Optional[SkillGroupDescription] = None


class BusinessReportS3Location(BaseModel):
    """
    The S3 location of the output reports.
    """

    Path: Optional[BusinessReportS3Path] = None
    BucketName: Optional[CustomerS3BucketName] = None


class BusinessReport(BaseModel):
    """
    Usage report with specified parameters.
    """

    Status: Optional[BusinessReportStatus] = None
    FailureCode: Optional[BusinessReportFailureCode] = None
    S3Location: Optional[BusinessReportS3Location] = None
    DeliveryTime: Optional[BusinessReportDeliveryTime] = None
    DownloadUrl: Optional[BusinessReportDownloadUrl] = None


class BusinessReportSchedule(BaseModel):
    """
    The schedule of the usage report.
    """

    ScheduleArn: Optional[Arn] = None
    ScheduleName: Optional[BusinessReportScheduleName] = None
    S3BucketName: Optional[CustomerS3BucketName] = None
    S3KeyPrefix: Optional[S3KeyPrefix] = None
    Format: Optional[BusinessReportFormat] = None
    ContentRange: Optional[BusinessReportContentRange] = None
    Recurrence: Optional[BusinessReportRecurrence] = None
    LastBusinessReport: Optional[BusinessReport] = None


class BusinessReportScheduleList(BaseModel):
    __root__: List[BusinessReportSchedule]


class IPDialIn(BaseModel):
    """
    The IP endpoint and protocol for calling.
    """

    Endpoint: Endpoint
    CommsProtocol: CommsProtocol


class PSTNDialIn(BaseModel):
    """
    The information for public switched telephone network (PSTN) conferencing.
    """

    CountryCode: CountryCode
    PhoneNumber: OutboundPhoneNumber
    OneClickIdDelay: OneClickIdDelay
    OneClickPinDelay: OneClickPinDelay


class MeetingSetting(BaseModel):
    """
    <p>The values that indicate whether a pin is always required (YES), never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will always ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never ask for a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if you have a meeting pin and if the customer responds with yes, it will ask for the meeting pin.</p> </li> </ul>
    """

    RequirePin: RequirePin


class ConferenceProvider(BaseModel):
    """
    An entity that provides a conferencing solution. Alexa for Business acts as the voice interface and mediator that connects users to their preferred conference provider. Examples of conference providers include Amazon Chime, Zoom, Cisco, and Polycom.
    """

    Arn: Optional[Arn] = None
    Name: Optional[ConferenceProviderName] = None
    Type: Optional[ConferenceProviderType] = None
    IPDialIn: Optional[IPDialIn] = None
    PSTNDialIn: Optional[PSTNDialIn] = None
    MeetingSetting: Optional[MeetingSetting] = None


class ConferenceProvidersList(BaseModel):
    __root__: List[ConferenceProvider]


class PhoneNumberList(BaseModel):
    __root__: Annotated[List[PhoneNumber], Field(max_items=3, min_items=0)]


class SipAddressList(BaseModel):
    __root__: Annotated[List[SipAddress], Field(max_items=1, min_items=0)]


class Contact(BaseModel):
    """
    A contact with attributes.
    """

    ContactArn: Optional[Arn] = None
    DisplayName: Optional[ContactName] = None
    FirstName: Optional[ContactName] = None
    LastName: Optional[ContactName] = None
    PhoneNumber: Optional[RawPhoneNumber] = None
    PhoneNumbers: Optional[PhoneNumberList] = None
    SipAddresses: Optional[SipAddressList] = None


class ContactData(Contact):
    """
    Information related to a contact.
    """

    pass


class ContactDataList(BaseModel):
    __root__: List[ContactData]


class TextList(BaseModel):
    __root__: Annotated[List[Text], Field(max_items=1)]


class SsmlList(BaseModel):
    __root__: Annotated[List[Ssml], Field(max_items=1)]


class Content(BaseModel):
    """
    The content definition. This can contain only one text, SSML, or audio list object.
    """

    TextList: Optional[TextList] = None
    SsmlList: Optional[SsmlList] = None
    AudioList: Optional[AudioList] = None


class TagList(BaseModel):
    __root__: List[Tag]


class EndOfMeetingReminderMinutesList(BaseModel):
    __root__: Annotated[List[Minutes], Field(max_items=1, min_items=1)]


class CreateEndOfMeetingReminder(BaseModel):
    """
    Creates settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.
    """

    ReminderAtMinutes: EndOfMeetingReminderMinutesList
    ReminderType: EndOfMeetingReminderType
    Enabled: Boolean


class CreateMeetingRoomConfiguration(BaseModel):
    """
    Creates meeting room settings of a room profile.
    """

    RoomUtilizationMetricsEnabled: Optional[Boolean] = None
    EndOfMeetingReminder: Optional[CreateEndOfMeetingReminder] = None
    InstantBooking: Optional[CreateInstantBooking] = None
    RequireCheckIn: Optional[CreateRequireCheckIn] = None


class TrustAnchorList(BaseModel):
    __root__: Annotated[List[TrustAnchor], Field(max_items=5, min_items=1)]


class DeviceStatusInfo(BaseModel):
    """
    Detailed information about a device's status.
    """

    DeviceStatusDetails: Optional[DeviceStatusDetails] = None
    ConnectionStatus: Optional[ConnectionStatus] = None
    ConnectionStatusUpdatedTime: Optional[ConnectionStatusUpdatedTime] = None


class Device(BaseModel):
    """
    A device with attributes.
    """

    DeviceArn: Optional[Arn] = None
    DeviceSerialNumber: Optional[DeviceSerialNumber1] = None
    DeviceType: Optional[DeviceType] = None
    DeviceName: Optional[DeviceName] = None
    SoftwareVersion: Optional[SoftwareVersion1] = None
    MacAddress: Optional[MacAddress] = None
    RoomArn: Optional[Arn] = None
    DeviceStatus: Optional[DeviceStatus] = None
    DeviceStatusInfo: Optional[DeviceStatusInfo] = None
    NetworkProfileInfo: Optional[DeviceNetworkProfileInfo] = None


class DeviceData(BaseModel):
    """
    Device attributes.
    """

    DeviceArn: Optional[Arn] = None
    DeviceSerialNumber: Optional[DeviceSerialNumber1] = None
    DeviceType: Optional[DeviceType] = None
    DeviceName: Optional[DeviceName] = None
    SoftwareVersion: Optional[SoftwareVersion1] = None
    MacAddress: Optional[MacAddress] = None
    DeviceStatus: Optional[DeviceStatus] = None
    NetworkProfileArn: Optional[Arn] = None
    NetworkProfileName: Optional[NetworkProfileName] = None
    RoomArn: Optional[Arn] = None
    RoomName: Optional[DeviceRoomName] = None
    DeviceStatusInfo: Optional[DeviceStatusInfo] = None
    CreatedTime: Optional[DeviceDataCreatedTime] = None


class DeviceDataList(BaseModel):
    __root__: List[DeviceData]


class EndOfMeetingReminder(BaseModel):
    """
    Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.
    """

    ReminderAtMinutes: Optional[EndOfMeetingReminderMinutesList] = None
    ReminderType: Optional[EndOfMeetingReminderType] = None
    Enabled: Optional[Boolean] = None


class FilterValueList(BaseModel):
    __root__: Annotated[List[FilterValue], Field(max_items=50)]


class Filter(BaseModel):
    """
    A filter name and value pair that is used to return a more specific list of results. Filters can be used to match a set of resources by various criteria.
    """

    Key: FilterKey
    Values: FilterValueList


class FilterList(BaseModel):
    __root__: Annotated[List[Filter], Field(max_items=25)]


class NetworkProfile(BaseModel):
    """
    The network profile associated with a device.
    """

    NetworkProfileArn: Optional[Arn] = None
    NetworkProfileName: Optional[NetworkProfileName] = None
    Description: Optional[NetworkProfileDescription] = None
    Ssid: Optional[NetworkSsid] = None
    SecurityType: Optional[NetworkSecurityType] = None
    EapMethod: Optional[NetworkEapMethod] = None
    CurrentPassword: Optional[CurrentWiFiPassword] = None
    NextPassword: Optional[NextWiFiPassword] = None
    CertificateAuthorityArn: Optional[Arn] = None
    TrustAnchors: Optional[TrustAnchorList] = None


class RoomSkillParameter(BaseModel):
    """
    A skill parameter associated with a room.
    """

    ParameterKey: RoomSkillParameterKey
    ParameterValue: RoomSkillParameterValue


class SkillSummaryList(BaseModel):
    __root__: List[SkillSummary]


class SmartHomeApplianceList(BaseModel):
    __root__: List[SmartHomeAppliance]


class MeetingRoomConfiguration(BaseModel):
    """
    Meeting room settings of a room profile.
    """

    RoomUtilizationMetricsEnabled: Optional[Boolean] = None
    EndOfMeetingReminder: Optional[EndOfMeetingReminder] = None
    InstantBooking: Optional[InstantBooking1] = None
    RequireCheckIn: Optional[RequireCheckIn1] = None


class RoomSkillParameters(BaseModel):
    __root__: List[RoomSkillParameter]


class SortList(BaseModel):
    __root__: Annotated[List[Sort], Field(max_items=25)]


class SkillGroupDataList(BaseModel):
    __root__: List[SkillGroupData]


class UserDataList(BaseModel):
    __root__: List[UserData]


class SkillTypes(BaseModel):
    __root__: List[SkillStoreType]


class SkillDetails(BaseModel):
    """
    Granular information about the skill.
    """

    ProductDescription: Optional[ProductDescription] = None
    InvocationPhrase: Optional[InvocationPhrase] = None
    ReleaseDate: Optional[ReleaseDate] = None
    EndUserLicenseAgreement: Optional[EndUserLicenseAgreement] = None
    GenericKeywords: Optional[GenericKeywords] = None
    BulletPoints: Optional[BulletPoints] = None
    NewInThisVersionBulletPoints: Optional[NewInThisVersionBulletPoints] = None
    SkillTypes: Optional[SkillTypes] = None
    Reviews: Optional[Reviews] = None
    DeveloperInfo: Optional[DeveloperInfo] = None


class SkillsStoreSkill(BaseModel):
    """
    The detailed information about an Alexa skill.
    """

    SkillId: Optional[SkillId] = None
    SkillName: Optional[SkillName] = None
    ShortDescription: Optional[ShortDescription] = None
    IconUrl: Optional[IconUrl] = None
    SampleUtterances: Optional[SampleUtterances] = None
    SkillDetails: Optional[SkillDetails] = None
    SupportsLinking: Optional[Boolean1] = None


class UpdateEndOfMeetingReminder(EndOfMeetingReminder):
    """
    Settings for the end of meeting reminder feature that are applied to a room profile. The end of meeting reminder enables Alexa to remind users when a meeting is ending.
    """

    pass


class UpdateMeetingRoomConfiguration(BaseModel):
    """
    Updates meeting room settings of a room profile.
    """

    RoomUtilizationMetricsEnabled: Optional[Boolean] = None
    EndOfMeetingReminder: Optional[UpdateEndOfMeetingReminder] = None
    InstantBooking: Optional[UpdateInstantBooking] = None
    RequireCheckIn: Optional[UpdateRequireCheckIn] = None


class CreateAddressBookRequest(BaseModel):
    Name: AddressBookName
    Description: Optional[AddressBookDescription] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateBusinessReportScheduleRequest(BaseModel):
    ScheduleName: Optional[BusinessReportScheduleName] = None
    S3BucketName: Optional[CustomerS3BucketName] = None
    S3KeyPrefix: Optional[S3KeyPrefix] = None
    Format: BusinessReportFormat
    ContentRange: BusinessReportContentRange
    Recurrence: Optional[BusinessReportRecurrence] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateConferenceProviderRequest(BaseModel):
    ConferenceProviderName: ConferenceProviderName
    ConferenceProviderType: ConferenceProviderType
    IPDialIn: Optional[IPDialIn] = None
    PSTNDialIn: Optional[PSTNDialIn] = None
    MeetingSetting: MeetingSetting
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateContactRequest(BaseModel):
    DisplayName: Optional[ContactName] = None
    FirstName: ContactName
    LastName: Optional[ContactName] = None
    PhoneNumber: Optional[RawPhoneNumber] = None
    PhoneNumbers: Optional[PhoneNumberList] = None
    SipAddresses: Optional[SipAddressList] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateGatewayGroupRequest(BaseModel):
    Name: GatewayGroupName
    Description: Optional[GatewayGroupDescription] = None
    ClientRequestToken: ClientRequestToken
    Tags: Optional[TagList] = None


class CreateNetworkProfileRequest(BaseModel):
    NetworkProfileName: NetworkProfileName
    Description: Optional[NetworkProfileDescription] = None
    Ssid: NetworkSsid
    SecurityType: NetworkSecurityType
    EapMethod: Optional[NetworkEapMethod] = None
    CurrentPassword: Optional[CurrentWiFiPassword] = None
    NextPassword: Optional[NextWiFiPassword] = None
    CertificateAuthorityArn: Optional[Arn] = None
    TrustAnchors: Optional[TrustAnchorList] = None
    ClientRequestToken: ClientRequestToken
    Tags: Optional[TagList] = None


class CreateProfileRequest(BaseModel):
    ProfileName: ProfileName
    Timezone: Timezone
    Address: Address
    DistanceUnit: DistanceUnit
    TemperatureUnit: TemperatureUnit
    WakeWord: WakeWord
    Locale: Optional[DeviceLocale] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    SetupModeDisabled: Optional[Boolean] = None
    MaxVolumeLimit: Optional[MaxVolumeLimit] = None
    PSTNEnabled: Optional[Boolean] = None
    DataRetentionOptIn: Optional[Boolean] = None
    MeetingRoomConfiguration: Optional[CreateMeetingRoomConfiguration] = None
    Tags: Optional[TagList] = None


class CreateRoomRequest(BaseModel):
    RoomName: RoomName
    Description: Optional[RoomDescription] = None
    ProfileArn: Optional[Arn] = None
    ProviderCalendarId: Optional[ProviderCalendarId] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateSkillGroupRequest(BaseModel):
    SkillGroupName: SkillGroupName
    Description: Optional[SkillGroupDescription] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class CreateUserRequest(BaseModel):
    UserId: UserUserId
    FirstName: Optional[UserFirstName] = None
    LastName: Optional[UserLastName] = None
    Email: Optional[Email] = None
    ClientRequestToken: Optional[ClientRequestToken] = None
    Tags: Optional[TagList] = None


class GetConferenceProviderResponse(BaseModel):
    ConferenceProvider: Optional[ConferenceProvider] = None


class GetContactResponse(BaseModel):
    Contact: Optional[Contact] = None


class GetDeviceResponse(BaseModel):
    Device: Optional[Device] = None


class GetNetworkProfileResponse(BaseModel):
    NetworkProfile: Optional[NetworkProfile] = None


class GetRoomSkillParameterResponse(BaseModel):
    RoomSkillParameter: Optional[RoomSkillParameter] = None


class ListBusinessReportSchedulesResponse(BaseModel):
    BusinessReportSchedules: Optional[BusinessReportScheduleList] = None
    NextToken: Optional[NextToken] = None


class ListConferenceProvidersResponse(BaseModel):
    ConferenceProviders: Optional[ConferenceProvidersList] = None
    NextToken: Optional[NextToken] = None


class ListSkillsResponse(BaseModel):
    SkillSummaries: Optional[SkillSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListSmartHomeAppliancesResponse(BaseModel):
    SmartHomeAppliances: Optional[SmartHomeApplianceList] = None
    NextToken: Optional[NextToken] = None


class ListTagsResponse(BaseModel):
    Tags: Optional[TagList] = None
    NextToken: Optional[NextToken] = None


class PutRoomSkillParameterRequest(BaseModel):
    RoomArn: Optional[Arn] = None
    SkillId: SkillId
    RoomSkillParameter: RoomSkillParameter


class RegisterAVSDeviceRequest(BaseModel):
    ClientId: ClientId
    UserCode: UserCode
    ProductId: ProductId
    DeviceSerialNumber: Optional[DeviceSerialNumberForAVS] = None
    AmazonId: AmazonId
    RoomArn: Optional[Arn] = None
    Tags: Optional[TagList] = None


class ResolveRoomResponse(BaseModel):
    RoomArn: Optional[Arn] = None
    RoomName: Optional[RoomName] = None
    RoomSkillParameters: Optional[RoomSkillParameters] = None


class SearchAddressBooksRequest(BaseModel):
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class SearchContactsResponse(BaseModel):
    Contacts: Optional[ContactDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchContactsRequest(BaseModel):
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None


class SearchDevicesResponse(BaseModel):
    Devices: Optional[DeviceDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchDevicesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SearchNetworkProfilesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SearchProfilesRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SearchRoomsRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SearchSkillGroupsResponse(BaseModel):
    SkillGroups: Optional[SkillGroupDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchSkillGroupsRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SearchUsersResponse(BaseModel):
    Users: Optional[UserDataList] = None
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[TotalCount] = None


class SearchUsersRequest(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    Filters: Optional[FilterList] = None
    SortCriteria: Optional[SortList] = None


class SendAnnouncementRequest(BaseModel):
    RoomFilters: FilterList
    Content: Content
    TimeToLiveInSeconds: Optional[TimeToLiveInSeconds] = None
    ClientRequestToken: ClientRequestToken


class TagResourceRequest(BaseModel):
    Arn: Arn
    Tags: TagList


class UpdateConferenceProviderRequest(BaseModel):
    ConferenceProviderArn: Arn
    ConferenceProviderType: ConferenceProviderType
    IPDialIn: Optional[IPDialIn] = None
    PSTNDialIn: Optional[PSTNDialIn] = None
    MeetingSetting: MeetingSetting


class UpdateContactRequest(BaseModel):
    ContactArn: Arn
    DisplayName: Optional[ContactName] = None
    FirstName: Optional[ContactName] = None
    LastName: Optional[ContactName] = None
    PhoneNumber: Optional[RawPhoneNumber] = None
    PhoneNumbers: Optional[PhoneNumberList] = None
    SipAddresses: Optional[SipAddressList] = None


class UpdateNetworkProfileRequest(BaseModel):
    NetworkProfileArn: Arn
    NetworkProfileName: Optional[NetworkProfileName] = None
    Description: Optional[NetworkProfileDescription] = None
    CurrentPassword: Optional[CurrentWiFiPassword] = None
    NextPassword: Optional[NextWiFiPassword] = None
    CertificateAuthorityArn: Optional[Arn] = None
    TrustAnchors: Optional[TrustAnchorList] = None


class UpdateProfileRequest(BaseModel):
    ProfileArn: Optional[Arn] = None
    ProfileName: Optional[ProfileName] = None
    IsDefault: Optional[Boolean] = None
    Timezone: Optional[Timezone] = None
    Address: Optional[Address] = None
    DistanceUnit: Optional[DistanceUnit] = None
    TemperatureUnit: Optional[TemperatureUnit] = None
    WakeWord: Optional[WakeWord] = None
    Locale: Optional[DeviceLocale] = None
    SetupModeDisabled: Optional[Boolean] = None
    MaxVolumeLimit: Optional[MaxVolumeLimit] = None
    PSTNEnabled: Optional[Boolean] = None
    DataRetentionOptIn: Optional[Boolean] = None
    MeetingRoomConfiguration: Optional[UpdateMeetingRoomConfiguration] = None


class Profile(BaseModel):
    """
    A room profile with attributes.
    """

    ProfileArn: Optional[Arn] = None
    ProfileName: Optional[ProfileName] = None
    IsDefault: Optional[Boolean] = None
    Address: Optional[Address] = None
    Timezone: Optional[Timezone] = None
    DistanceUnit: Optional[DistanceUnit] = None
    TemperatureUnit: Optional[TemperatureUnit] = None
    WakeWord: Optional[WakeWord] = None
    Locale: Optional[DeviceLocale] = None
    SetupModeDisabled: Optional[Boolean] = None
    MaxVolumeLimit: Optional[MaxVolumeLimit] = None
    PSTNEnabled: Optional[Boolean] = None
    DataRetentionOptIn: Optional[Boolean] = None
    AddressBookArn: Optional[Arn] = None
    MeetingRoomConfiguration: Optional[MeetingRoomConfiguration] = None


class SkillsStoreSkillList(BaseModel):
    __root__: List[SkillsStoreSkill]


class GetProfileResponse(BaseModel):
    Profile: Optional[Profile] = None


class ListSkillsStoreSkillsByCategoryResponse(BaseModel):
    SkillsStoreSkills: Optional[SkillsStoreSkillList] = None
    NextToken: Optional[NextToken] = None

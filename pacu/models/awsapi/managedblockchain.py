# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:08+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class NetworkMemberNameString(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=64,
            min_length=1,
            regex='^(?!-|[0-9])(?!.*-$)(?!.*?--)[a-zA-Z0-9-]+$',
        ),
    ]


class DescriptionString(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class InputTagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ArnString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1011, min_length=1, regex='^arn:.+:.+:.+:.+:.+')
    ]


class InvalidRequestException(BaseModel):
    __root__: Any


class AccessDeniedException(InvalidRequestException):
    pass


class ResourceNotFoundException(InvalidRequestException):
    pass


class ResourceAlreadyExistsException(InvalidRequestException):
    pass


class ResourceNotReadyException(InvalidRequestException):
    pass


class ThrottlingException(InvalidRequestException):
    pass


class ResourceLimitExceededException(InvalidRequestException):
    pass


class InternalServiceErrorException(InvalidRequestException):
    pass


class TooManyTagsException(InvalidRequestException):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class InstanceTypeString(BaseModel):
    __root__: str


class AvailabilityZoneString(InstanceTypeString):
    pass


class StateDBType(Enum):
    LevelDB = 'LevelDB'
    CouchDB = 'CouchDB'


class DeleteMemberOutput(BaseModel):
    pass


class DeleteNodeOutput(DeleteMemberOutput):
    pass


class RejectInvitationOutput(DeleteMemberOutput):
    pass


class IllegalActionException(InvalidRequestException):
    pass


class TagResourceResponse(DeleteMemberOutput):
    pass


class UntagResourceResponse(DeleteMemberOutput):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class UpdateMemberOutput(DeleteMemberOutput):
    pass


class UpdateNodeOutput(DeleteMemberOutput):
    pass


class VoteOnProposalOutput(DeleteMemberOutput):
    pass


class ThresholdPercentageInt(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class ProposalDurationInt(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=168.0)]


class ThresholdComparator(Enum):
    GREATER_THAN = 'GREATER_THAN'
    GREATER_THAN_OR_EQUAL_TO = 'GREATER_THAN_OR_EQUAL_TO'


class ClientRequestTokenString(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class ResourceIdString(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class NameString(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='.*\\S.*')]


class Framework(Enum):
    HYPERLEDGER_FABRIC = 'HYPERLEDGER_FABRIC'
    ETHEREUM = 'ETHEREUM'


class FrameworkVersionString(BaseModel):
    __root__: Annotated[str, Field(max_length=8, min_length=1)]


class DeleteMemberInput(BaseModel):
    pass


class DeleteNodeInput(BaseModel):
    pass


class Edition(Enum):
    STARTER = 'STARTER'
    STANDARD = 'STANDARD'


class Enabled(BaseModel):
    __root__: bool


class GetMemberInput(BaseModel):
    pass


class GetNetworkInput(BaseModel):
    pass


class GetNodeInput(BaseModel):
    pass


class GetProposalInput(BaseModel):
    pass


class Timestamp(BaseModel):
    __root__: datetime


class InvitationStatus(Enum):
    PENDING = 'PENDING'
    ACCEPTED = 'ACCEPTED'
    ACCEPTING = 'ACCEPTING'
    REJECTED = 'REJECTED'
    EXPIRED = 'EXPIRED'


class PrincipalString(InstanceTypeString):
    pass


class InviteAction(BaseModel):
    """
    <p>An action to invite a specific AWS account to create a member and join the network. The <code>InviteAction</code> is carried out when a <code>Proposal</code> is <code>APPROVED</code>.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    Principal: PrincipalString


class IsOwned(Enabled):
    pass


class ProposalListMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class PaginationToken(DescriptionString):
    pass


class ListInvitationsInput(BaseModel):
    pass


class String(InstanceTypeString):
    pass


class MemberStatus(Enum):
    CREATING = 'CREATING'
    AVAILABLE = 'AVAILABLE'
    CREATE_FAILED = 'CREATE_FAILED'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    INACCESSIBLE_ENCRYPTION_KEY = 'INACCESSIBLE_ENCRYPTION_KEY'


class MemberListMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=20.0)]


class ListMembersInput(BaseModel):
    pass


class NetworkStatus(Enum):
    CREATING = 'CREATING'
    AVAILABLE = 'AVAILABLE'
    CREATE_FAILED = 'CREATE_FAILED'
    DELETING = 'DELETING'
    DELETED = 'DELETED'


class NetworkListMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class ListNetworksInput(BaseModel):
    pass


class NodeStatus(Enum):
    CREATING = 'CREATING'
    AVAILABLE = 'AVAILABLE'
    UNHEALTHY = 'UNHEALTHY'
    CREATE_FAILED = 'CREATE_FAILED'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DELETED = 'DELETED'
    FAILED = 'FAILED'
    INACCESSIBLE_ENCRYPTION_KEY = 'INACCESSIBLE_ENCRYPTION_KEY'


class NodeListMaxResults(MemberListMaxResults):
    pass


class ListNodesInput(BaseModel):
    pass


class ListProposalVotesInput(BaseModel):
    pass


class ListProposalsInput(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class OutputTagMap(InputTagMap):
    pass


class LogConfiguration(BaseModel):
    """
    A configuration for logging events.
    """

    Enabled: Optional[Enabled] = None


class LogConfigurations(BaseModel):
    """
    A collection of log configurations.
    """

    Cloudwatch: Optional[LogConfiguration] = None


class UsernameString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=16, min_length=1, regex='^[a-zA-Z][a-zA-Z0-9]*$')
    ]


class MemberFabricAttributes(BaseModel):
    """
    Attributes of Hyperledger Fabric for a member in a Managed Blockchain network using the Hyperledger Fabric framework.
    """

    AdminUsername: Optional[UsernameString] = None
    CaEndpoint: Optional[String] = None


class PasswordString(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=32,
            min_length=8,
            regex='^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?!.*[@\'\\\\"/])[a-zA-Z0-9\\S]*$',
        ),
    ]


class MemberFabricConfiguration(BaseModel):
    """
    Configuration properties for Hyperledger Fabric for a member in a Managed Blockchain network using the Hyperledger Fabric framework.
    """

    AdminUsername: UsernameString
    AdminPassword: PasswordString


class MemberSummary(BaseModel):
    """
    <p>A summary of configuration properties for a member.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    Id: Optional[ResourceIdString] = None
    Name: Optional[NetworkMemberNameString] = None
    Description: Optional[DescriptionString] = None
    Status: Optional[MemberStatus] = None
    CreationDate: Optional[Timestamp] = None
    IsOwned: Optional[IsOwned] = None
    Arn: Optional[ArnString] = None


class NetworkEthereumAttributes(BaseModel):
    """
    Attributes of Ethereum for a network.
    """

    ChainId: Optional[String] = None


class NetworkFabricAttributes(BaseModel):
    """
    Attributes of Hyperledger Fabric for a network.
    """

    OrderingServiceEndpoint: Optional[String] = None
    Edition: Optional[Edition] = None


class NodeEthereumAttributes(BaseModel):
    """
    Attributes of an Ethereum node.
    """

    HttpEndpoint: Optional[String] = None
    WebSocketEndpoint: Optional[String] = None


class NodeFabricAttributes(BaseModel):
    """
    Attributes of Hyperledger Fabric for a peer node on a Hyperledger Fabric network on Managed Blockchain.
    """

    PeerEndpoint: Optional[String] = None
    PeerEventEndpoint: Optional[String] = None


class NodeSummary(BaseModel):
    """
    A summary of configuration properties for a node.
    """

    Id: Optional[ResourceIdString] = None
    Status: Optional[NodeStatus] = None
    CreationDate: Optional[Timestamp] = None
    AvailabilityZone: Optional[AvailabilityZoneString] = None
    InstanceType: Optional[InstanceTypeString] = None
    Arn: Optional[ArnString] = None


class ProposalStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    APPROVED = 'APPROVED'
    REJECTED = 'REJECTED'
    EXPIRED = 'EXPIRED'
    ACTION_FAILED = 'ACTION_FAILED'


class VoteCount(BaseModel):
    __root__: int


class ProposalSummary(BaseModel):
    """
    <p>Properties of a proposal.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    ProposalId: Optional[ResourceIdString] = None
    Description: Optional[DescriptionString] = None
    ProposedByMemberId: Optional[ResourceIdString] = None
    ProposedByMemberName: Optional[NetworkMemberNameString] = None
    Status: Optional[ProposalStatus] = None
    CreationDate: Optional[Timestamp] = None
    ExpirationDate: Optional[Timestamp] = None
    Arn: Optional[ArnString] = None


class RejectInvitationInput(BaseModel):
    pass


class RemoveAction(BaseModel):
    """
    <p>An action to remove a member from a Managed Blockchain network as the result of a removal proposal that is <code>APPROVED</code>. The member and all associated resources are deleted from the network.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    MemberId: ResourceIdString


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class TagResourceRequest(BaseModel):
    Tags: InputTagMap


class UntagResourceRequest(BaseModel):
    pass


class VoteValue(Enum):
    YES = 'YES'
    NO = 'NO'


class VoteOnProposalInput(BaseModel):
    VoterMemberId: ResourceIdString
    Vote: VoteValue


class CreateMemberOutput(BaseModel):
    MemberId: Optional[ResourceIdString] = None


class MemberFrameworkConfiguration(BaseModel):
    """
    Configuration properties relevant to a member for the blockchain framework that the Managed Blockchain network uses.
    """

    Fabric: Optional[MemberFabricConfiguration] = None


class CreateNetworkOutput(BaseModel):
    NetworkId: Optional[ResourceIdString] = None
    MemberId: Optional[ResourceIdString] = None


class NetworkFabricConfiguration(BaseModel):
    """
    Hyperledger Fabric configuration properties for the network.
    """

    Edition: Edition


class ApprovalThresholdPolicy(BaseModel):
    """
    <p>A policy type that defines the voting rules for the network. The rules decide if a proposal is approved. Approval may be based on criteria such as the percentage of <code>YES</code> votes and the duration of the proposal. The policy applies to all proposals and is specified when the network is created.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    ThresholdPercentage: Optional[ThresholdPercentageInt] = None
    ProposalDurationInHours: Optional[ProposalDurationInt] = None
    ThresholdComparator: Optional[ThresholdComparator] = None


class CreateNodeOutput(BaseModel):
    NodeId: Optional[ResourceIdString] = None


class CreateProposalOutput(BaseModel):
    ProposalId: Optional[ResourceIdString] = None


class InviteActionList(BaseModel):
    __root__: List[InviteAction]


class RemoveActionList(BaseModel):
    __root__: List[RemoveAction]


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[OutputTagMap] = None


class MemberFabricLogPublishingConfiguration(BaseModel):
    """
    Configuration properties for logging events associated with a member of a Managed Blockchain network using the Hyperledger Fabric framework.
    """

    CaLogs: Optional[LogConfigurations] = None


class NodeFabricLogPublishingConfiguration(BaseModel):
    """
    Configuration properties for logging events associated with a peer node owned by a member in a Managed Blockchain network.
    """

    ChaincodeLogs: Optional[LogConfigurations] = None
    PeerLogs: Optional[LogConfigurations] = None


class NetworkFrameworkConfiguration(BaseModel):
    """
    Configuration properties relevant to the network for the blockchain framework that the network uses.
    """

    Fabric: Optional[NetworkFabricConfiguration] = None


class VotingPolicy(BaseModel):
    """
    <p> The voting rules for the network to decide if a proposal is accepted </p> <p>Applies only to Hyperledger Fabric.</p>
    """

    ApprovalThresholdPolicy: Optional[ApprovalThresholdPolicy] = None


class ProposalActions(BaseModel):
    """
    <p> The actions to carry out if a proposal is <code>APPROVED</code>. </p> <p>Applies only to Hyperledger Fabric.</p>
    """

    Invitations: Optional[InviteActionList] = None
    Removals: Optional[RemoveActionList] = None


class CreateProposalInput(BaseModel):
    ClientRequestToken: ClientRequestTokenString
    MemberId: ResourceIdString
    Actions: ProposalActions
    Description: Optional[DescriptionString] = None
    Tags: Optional[InputTagMap] = None


class Proposal(BaseModel):
    """
    <p>Properties of a proposal on a Managed Blockchain network.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    ProposalId: Optional[ResourceIdString] = None
    NetworkId: Optional[ResourceIdString] = None
    Description: Optional[DescriptionString] = None
    Actions: Optional[ProposalActions] = None
    ProposedByMemberId: Optional[ResourceIdString] = None
    ProposedByMemberName: Optional[NetworkMemberNameString] = None
    Status: Optional[ProposalStatus] = None
    CreationDate: Optional[Timestamp] = None
    ExpirationDate: Optional[Timestamp] = None
    YesVoteCount: Optional[VoteCount] = None
    NoVoteCount: Optional[VoteCount] = None
    OutstandingVoteCount: Optional[VoteCount] = None
    Tags: Optional[OutputTagMap] = None
    Arn: Optional[ArnString] = None


class NetworkSummary(BaseModel):
    """
    A summary of network configuration properties.
    """

    Id: Optional[ResourceIdString] = None
    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Framework: Optional[Framework] = None
    FrameworkVersion: Optional[FrameworkVersionString] = None
    Status: Optional[NetworkStatus] = None
    CreationDate: Optional[Timestamp] = None
    Arn: Optional[ArnString] = None


class Invitation(BaseModel):
    """
    <p>An invitation to an AWS account to create a member and join the network.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    InvitationId: Optional[ResourceIdString] = None
    CreationDate: Optional[Timestamp] = None
    ExpirationDate: Optional[Timestamp] = None
    Status: Optional[InvitationStatus] = None
    NetworkSummary: Optional[NetworkSummary] = None
    Arn: Optional[ArnString] = None


class InvitationList(BaseModel):
    __root__: List[Invitation]


class MemberSummaryList(BaseModel):
    __root__: List[MemberSummary]


class NetworkSummaryList(BaseModel):
    __root__: List[NetworkSummary]


class NodeSummaryList(BaseModel):
    __root__: List[NodeSummary]


class ProposalSummaryList(BaseModel):
    __root__: List[ProposalSummary]


class MemberFrameworkAttributes(BaseModel):
    """
    Attributes relevant to a member for the blockchain framework that the Managed Blockchain network uses.
    """

    Fabric: Optional[MemberFabricAttributes] = None


class NetworkFrameworkAttributes(BaseModel):
    """
    Attributes relevant to the network for the blockchain framework that the network uses.
    """

    Fabric: Optional[NetworkFabricAttributes] = None
    Ethereum: Optional[NetworkEthereumAttributes] = None


class NodeFrameworkAttributes(BaseModel):
    """
    Attributes relevant to a node on a Managed Blockchain network for the blockchain framework that the network uses.
    """

    Fabric: Optional[NodeFabricAttributes] = None
    Ethereum: Optional[NodeEthereumAttributes] = None


class VoteSummary(BaseModel):
    """
    <p> Properties of an individual vote that a member cast for a proposal. </p> <p>Applies only to Hyperledger Fabric.</p>
    """

    Vote: Optional[VoteValue] = None
    MemberName: Optional[NetworkMemberNameString] = None
    MemberId: Optional[ResourceIdString] = None


class MemberLogPublishingConfiguration(BaseModel):
    """
    Configuration properties for logging events associated with a member of a Managed Blockchain network.
    """

    Fabric: Optional[MemberFabricLogPublishingConfiguration] = None


class NodeLogPublishingConfiguration(BaseModel):
    """
    Configuration properties for logging events associated with a peer node on a Hyperledger Fabric network on Managed Blockchain.
    """

    Fabric: Optional[NodeFabricLogPublishingConfiguration] = None


class GetProposalOutput(BaseModel):
    Proposal: Optional[Proposal] = None


class ListInvitationsOutput(BaseModel):
    Invitations: Optional[InvitationList] = None
    NextToken: Optional[PaginationToken] = None


class ListMembersOutput(BaseModel):
    Members: Optional[MemberSummaryList] = None
    NextToken: Optional[PaginationToken] = None


class ListNetworksOutput(BaseModel):
    Networks: Optional[NetworkSummaryList] = None
    NextToken: Optional[PaginationToken] = None


class ListNodesOutput(BaseModel):
    Nodes: Optional[NodeSummaryList] = None
    NextToken: Optional[PaginationToken] = None


class ListProposalsOutput(BaseModel):
    Proposals: Optional[ProposalSummaryList] = None
    NextToken: Optional[PaginationToken] = None


class MemberConfiguration(BaseModel):
    """
    <p>Configuration properties of the member.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    Name: NetworkMemberNameString
    Description: Optional[DescriptionString] = None
    FrameworkConfiguration: MemberFrameworkConfiguration
    LogPublishingConfiguration: Optional[MemberLogPublishingConfiguration] = None
    Tags: Optional[InputTagMap] = None
    KmsKeyArn: Optional[ArnString] = None


class CreateMemberInput(BaseModel):
    ClientRequestToken: ClientRequestTokenString
    InvitationId: ResourceIdString
    MemberConfiguration: MemberConfiguration


class CreateNetworkInput(BaseModel):
    ClientRequestToken: ClientRequestTokenString
    Name: NameString
    Description: Optional[DescriptionString] = None
    Framework: Framework
    FrameworkVersion: FrameworkVersionString
    FrameworkConfiguration: Optional[NetworkFrameworkConfiguration] = None
    VotingPolicy: VotingPolicy
    MemberConfiguration: MemberConfiguration
    Tags: Optional[InputTagMap] = None


class NodeConfiguration(BaseModel):
    """
    Configuration properties of a node.
    """

    InstanceType: InstanceTypeString
    AvailabilityZone: Optional[AvailabilityZoneString] = None
    LogPublishingConfiguration: Optional[NodeLogPublishingConfiguration] = None
    StateDB: Optional[StateDBType] = None


class CreateNodeInput(BaseModel):
    ClientRequestToken: ClientRequestTokenString
    MemberId: Optional[ResourceIdString] = None
    NodeConfiguration: NodeConfiguration
    Tags: Optional[InputTagMap] = None


class Member(BaseModel):
    """
    <p>Member configuration properties.</p> <p>Applies only to Hyperledger Fabric.</p>
    """

    NetworkId: Optional[ResourceIdString] = None
    Id: Optional[ResourceIdString] = None
    Name: Optional[NetworkMemberNameString] = None
    Description: Optional[DescriptionString] = None
    FrameworkAttributes: Optional[MemberFrameworkAttributes] = None
    LogPublishingConfiguration: Optional[MemberLogPublishingConfiguration] = None
    Status: Optional[MemberStatus] = None
    CreationDate: Optional[Timestamp] = None
    Tags: Optional[OutputTagMap] = None
    Arn: Optional[ArnString] = None
    KmsKeyArn: Optional[String] = None


class Network(BaseModel):
    """
    Network configuration properties.
    """

    Id: Optional[ResourceIdString] = None
    Name: Optional[NameString] = None
    Description: Optional[DescriptionString] = None
    Framework: Optional[Framework] = None
    FrameworkVersion: Optional[FrameworkVersionString] = None
    FrameworkAttributes: Optional[NetworkFrameworkAttributes] = None
    VpcEndpointServiceName: Optional[String] = None
    VotingPolicy: Optional[VotingPolicy] = None
    Status: Optional[NetworkStatus] = None
    CreationDate: Optional[Timestamp] = None
    Tags: Optional[OutputTagMap] = None
    Arn: Optional[ArnString] = None


class Node(BaseModel):
    """
    Configuration properties of a node.
    """

    NetworkId: Optional[ResourceIdString] = None
    MemberId: Optional[ResourceIdString] = None
    Id: Optional[ResourceIdString] = None
    InstanceType: Optional[InstanceTypeString] = None
    AvailabilityZone: Optional[AvailabilityZoneString] = None
    FrameworkAttributes: Optional[NodeFrameworkAttributes] = None
    LogPublishingConfiguration: Optional[NodeLogPublishingConfiguration] = None
    StateDB: Optional[StateDBType] = None
    Status: Optional[NodeStatus] = None
    CreationDate: Optional[Timestamp] = None
    Tags: Optional[OutputTagMap] = None
    Arn: Optional[ArnString] = None
    KmsKeyArn: Optional[String] = None


class ProposalVoteList(BaseModel):
    __root__: List[VoteSummary]


class UpdateMemberInput(BaseModel):
    LogPublishingConfiguration: Optional[MemberLogPublishingConfiguration] = None


class UpdateNodeInput(BaseModel):
    MemberId: Optional[ResourceIdString] = None
    LogPublishingConfiguration: Optional[NodeLogPublishingConfiguration] = None


class GetMemberOutput(BaseModel):
    Member: Optional[Member] = None


class GetNetworkOutput(BaseModel):
    Network: Optional[Network] = None


class GetNodeOutput(BaseModel):
    Node: Optional[Node] = None


class ListProposalVotesOutput(BaseModel):
    ProposalVotes: Optional[ProposalVoteList] = None
    NextToken: Optional[PaginationToken] = None

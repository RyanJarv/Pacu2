# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:51+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field, SecretStr


class ChimeArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=5,
            regex='arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}',
        ),
    ]


class ServiceFailureException(BaseModel):
    __root__: Any


class ServiceUnavailableException(ServiceFailureException):
    pass


class UnauthorizedClientException(ServiceFailureException):
    pass


class BadRequestException(ServiceFailureException):
    pass


class ForbiddenException(ServiceFailureException):
    pass


class ThrottledClientException(ServiceFailureException):
    pass


class CreateChannelResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None


class ConflictException(ServiceFailureException):
    pass


class ResourceLimitExceededException(ServiceFailureException):
    pass


class NotFoundException(ServiceFailureException):
    pass


class UpdateChannelResponse(CreateChannelResponse):
    pass


class UpdateChannelReadMarkerResponse(CreateChannelResponse):
    pass


class ChannelMembershipType(Enum):
    DEFAULT = 'DEFAULT'
    HIDDEN = 'HIDDEN'


class Timestamp(BaseModel):
    __root__: datetime


class AppInstanceUserMembershipSummary(BaseModel):
    """
    Summary of the membership details of an <code>AppInstanceUser</code>.
    """

    Type: Optional[ChannelMembershipType] = None
    ReadMarkerTimestamp: Optional[Timestamp] = None


class ErrorCode(Enum):
    BadRequest = 'BadRequest'
    Conflict = 'Conflict'
    Forbidden = 'Forbidden'
    NotFound = 'NotFound'
    PreconditionFailed = 'PreconditionFailed'
    ResourceLimitExceeded = 'ResourceLimitExceeded'
    ServiceFailure = 'ServiceFailure'
    AccessDenied = 'AccessDenied'
    ServiceUnavailable = 'ServiceUnavailable'
    Throttled = 'Throttled'
    Throttling = 'Throttling'
    Unauthorized = 'Unauthorized'
    Unprocessable = 'Unprocessable'
    VoiceConnectorGroupAssociationsExist = 'VoiceConnectorGroupAssociationsExist'
    PhoneNumberAssociationsExist = 'PhoneNumberAssociationsExist'


class String(BaseModel):
    __root__: str


class BatchCreateChannelMembershipError(BaseModel):
    """
    A list of failed member ARNs, error codes, and error messages.
    """

    MemberArn: Optional[ChimeArn] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[String] = None


class BatchCreateChannelMembershipErrors(BaseModel):
    __root__: List[BatchCreateChannelMembershipError]


class MemberArns(BaseModel):
    __root__: Annotated[List[ChimeArn], Field(max_items=100, min_items=1)]


class BatchCreateChannelMembershipRequest(BaseModel):
    Type: Optional[ChannelMembershipType] = None
    MemberArns: MemberArns


class NonEmptyResourceName(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=256,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class ChannelMode(Enum):
    UNRESTRICTED = 'UNRESTRICTED'
    RESTRICTED = 'RESTRICTED'


class ChannelPrivacy(Enum):
    PUBLIC = 'PUBLIC'
    PRIVATE = 'PRIVATE'


class Metadata(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1024, min_length=0, regex='.*')]


class ChannelSummary(BaseModel):
    """
    Summary of the details of a <code>Channel</code>.
    """

    Name: Optional[NonEmptyResourceName] = None
    ChannelArn: Optional[ChimeArn] = None
    Mode: Optional[ChannelMode] = None
    Privacy: Optional[ChannelPrivacy] = None
    Metadata: Optional[Metadata] = None
    LastMessageTimestamp: Optional[Timestamp] = None


class ChannelMembershipForAppInstanceUserSummary(BaseModel):
    """
    Summary of the channel membership details of an <code>AppInstanceUser</code>.
    """

    ChannelSummary: Optional[ChannelSummary] = None
    AppInstanceUserMembershipSummary: Optional[AppInstanceUserMembershipSummary] = None


class ChannelMembershipForAppInstanceUserSummaryList(BaseModel):
    __root__: List[ChannelMembershipForAppInstanceUserSummary]


class MessageId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[-_a-zA-Z0-9]*')
    ]


class Content(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=4096, min_length=0, regex='[\\s\\S]*')
    ]


class ChannelMessageType(Enum):
    STANDARD = 'STANDARD'
    CONTROL = 'CONTROL'


class NonNullableBoolean(BaseModel):
    __root__: bool


class ChannelMessagePersistenceType(Enum):
    PERSISTENT = 'PERSISTENT'
    NON_PERSISTENT = 'NON_PERSISTENT'


class ChannelModeratedByAppInstanceUserSummary(BaseModel):
    """
    Summary of the details of a moderated channel.
    """

    ChannelSummary: Optional[ChannelSummary] = None


class ChannelModeratedByAppInstanceUserSummaryList(BaseModel):
    __root__: List[ChannelModeratedByAppInstanceUserSummary]


class ChannelSummaryList(BaseModel):
    __root__: List[ChannelSummary]


class ClientRequestToken(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=64, min_length=2, regex='[-_a-zA-Z0-9]*')
    ]


class CreateChannelBanRequest(BaseModel):
    MemberArn: ChimeArn


class CreateChannelMembershipRequest(BaseModel):
    MemberArn: ChimeArn
    Type: ChannelMembershipType


class CreateChannelModeratorRequest(BaseModel):
    ChannelModeratorArn: ChimeArn


class DeleteChannelBanRequest(BaseModel):
    pass


class DeleteChannelMembershipRequest(BaseModel):
    pass


class DeleteChannelMessageRequest(BaseModel):
    pass


class DeleteChannelModeratorRequest(BaseModel):
    pass


class DeleteChannelRequest(BaseModel):
    pass


class DescribeChannelBanRequest(BaseModel):
    pass


class DescribeChannelMembershipForAppInstanceUserRequest(BaseModel):
    pass


class DescribeChannelMembershipRequest(BaseModel):
    pass


class DescribeChannelModeratedByAppInstanceUserRequest(BaseModel):
    pass


class DescribeChannelModeratorRequest(BaseModel):
    pass


class DescribeChannelRequest(BaseModel):
    pass


class GetChannelMessageRequest(BaseModel):
    pass


class GetMessagingSessionEndpointRequest(BaseModel):
    pass


class ResourceName(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=256,
            min_length=0,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\uFFFD\\u10000-\\u10FFFF]*',
        ),
    ]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class NextToken(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048, min_length=0, regex='.*')]


class ListChannelBansRequest(BaseModel):
    pass


class ListChannelMembershipsForAppInstanceUserRequest(BaseModel):
    pass


class ListChannelMembershipsRequest(BaseModel):
    pass


class SortOrder(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class ListChannelMessagesRequest(BaseModel):
    pass


class ListChannelModeratorsRequest(BaseModel):
    pass


class ListChannelsModeratedByAppInstanceUserRequest(BaseModel):
    pass


class ListChannelsRequest(BaseModel):
    pass


class UrlType(BaseModel):
    __root__: Annotated[str, Field(max_length=4096)]


class NonEmptyContent(BaseModel):
    __root__: Annotated[SecretStr, Field(min_length=1, regex='[\\s\\S]*')]


class RedactChannelMessageRequest(BaseModel):
    pass


class SendChannelMessageRequest(BaseModel):
    Content: NonEmptyContent
    Type: ChannelMessageType
    Persistence: ChannelMessagePersistenceType
    Metadata: Optional[Metadata] = None
    ClientRequestToken: ClientRequestToken


class TagKey(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=256, min_length=1)]


class UpdateChannelMessageRequest(BaseModel):
    Content: Optional[Content] = None
    Metadata: Optional[Metadata] = None


class UpdateChannelReadMarkerRequest(BaseModel):
    pass


class UpdateChannelRequest(BaseModel):
    Name: NonEmptyResourceName
    Mode: ChannelMode
    Metadata: Optional[Metadata] = None


class Tag(BaseModel):
    """
    Describes a tag applied to a resource.
    """

    Key: TagKey
    Value: TagValue


class DescribeChannelMembershipForAppInstanceUserResponse(BaseModel):
    ChannelMembership: Optional[ChannelMembershipForAppInstanceUserSummary] = None


class DescribeChannelModeratedByAppInstanceUserResponse(BaseModel):
    Channel: Optional[ChannelModeratedByAppInstanceUserSummary] = None


class ListChannelMembershipsForAppInstanceUserResponse(BaseModel):
    ChannelMemberships: Optional[ChannelMembershipForAppInstanceUserSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListChannelsResponse(BaseModel):
    Channels: Optional[ChannelSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListChannelsModeratedByAppInstanceUserResponse(BaseModel):
    Channels: Optional[ChannelModeratedByAppInstanceUserSummaryList] = None
    NextToken: Optional[NextToken] = None


class RedactChannelMessageResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    MessageId: Optional[MessageId] = None


class SendChannelMessageResponse(RedactChannelMessageResponse):
    pass


class UpdateChannelMessageResponse(RedactChannelMessageResponse):
    pass


class Identity(BaseModel):
    """
    The details of a user.
    """

    Arn: Optional[ChimeArn] = None
    Name: Optional[ResourceName] = None


class Members(BaseModel):
    __root__: List[Identity]


class BatchChannelMemberships(BaseModel):
    """
    The membership information, including member ARNs, the channel ARN, and membership types.
    """

    InvitedBy: Optional[Identity] = None
    Type: Optional[ChannelMembershipType] = None
    Members: Optional[Members] = None
    ChannelArn: Optional[ChimeArn] = None


class Channel(BaseModel):
    """
    The details of a channel.
    """

    Name: Optional[NonEmptyResourceName] = None
    ChannelArn: Optional[ChimeArn] = None
    Mode: Optional[ChannelMode] = None
    Privacy: Optional[ChannelPrivacy] = None
    Metadata: Optional[Metadata] = None
    CreatedBy: Optional[Identity] = None
    CreatedTimestamp: Optional[Timestamp] = None
    LastMessageTimestamp: Optional[Timestamp] = None
    LastUpdatedTimestamp: Optional[Timestamp] = None


class ChannelBan(BaseModel):
    """
    The details of a channel ban.
    """

    Member: Optional[Identity] = None
    ChannelArn: Optional[ChimeArn] = None
    CreatedTimestamp: Optional[Timestamp] = None
    CreatedBy: Optional[Identity] = None


class ChannelBanSummary(BaseModel):
    """
    Summary of the details of a <code>ChannelBan</code>.
    """

    Member: Optional[Identity] = None


class ChannelBanSummaryList(BaseModel):
    __root__: List[ChannelBanSummary]


class ChannelMembership(BaseModel):
    """
    The details of a channel member.
    """

    InvitedBy: Optional[Identity] = None
    Type: Optional[ChannelMembershipType] = None
    Member: Optional[Identity] = None
    ChannelArn: Optional[ChimeArn] = None
    CreatedTimestamp: Optional[Timestamp] = None
    LastUpdatedTimestamp: Optional[Timestamp] = None


class ChannelMembershipSummary(ChannelBanSummary):
    """
    Summary of the details of a <code>ChannelMembership</code>.
    """

    pass


class ChannelMembershipSummaryList(BaseModel):
    __root__: List[ChannelMembershipSummary]


class ChannelMessage(BaseModel):
    """
    The details of a message in a channel.
    """

    ChannelArn: Optional[ChimeArn] = None
    MessageId: Optional[MessageId] = None
    Content: Optional[Content] = None
    Metadata: Optional[Metadata] = None
    Type: Optional[ChannelMessageType] = None
    CreatedTimestamp: Optional[Timestamp] = None
    LastEditedTimestamp: Optional[Timestamp] = None
    LastUpdatedTimestamp: Optional[Timestamp] = None
    Sender: Optional[Identity] = None
    Redacted: Optional[NonNullableBoolean] = None
    Persistence: Optional[ChannelMessagePersistenceType] = None


class ChannelMessageSummary(BaseModel):
    """
    Summary of the messages in a <code>Channel</code>.
    """

    MessageId: Optional[MessageId] = None
    Content: Optional[Content] = None
    Metadata: Optional[Metadata] = None
    Type: Optional[ChannelMessageType] = None
    CreatedTimestamp: Optional[Timestamp] = None
    LastUpdatedTimestamp: Optional[Timestamp] = None
    LastEditedTimestamp: Optional[Timestamp] = None
    Sender: Optional[Identity] = None
    Redacted: Optional[NonNullableBoolean] = None


class ChannelMessageSummaryList(BaseModel):
    __root__: List[ChannelMessageSummary]


class ChannelModerator(BaseModel):
    """
    The details of a channel moderator.
    """

    Moderator: Optional[Identity] = None
    ChannelArn: Optional[ChimeArn] = None
    CreatedTimestamp: Optional[Timestamp] = None
    CreatedBy: Optional[Identity] = None


class ChannelModeratorSummary(BaseModel):
    """
    Summary of the details of a <code>ChannelModerator</code>.
    """

    Moderator: Optional[Identity] = None


class ChannelModeratorSummaryList(BaseModel):
    __root__: List[ChannelModeratorSummary]


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50, min_items=1)]


class CreateChannelRequest(BaseModel):
    AppInstanceArn: ChimeArn
    Name: NonEmptyResourceName
    Mode: Optional[ChannelMode] = None
    Privacy: Optional[ChannelPrivacy] = None
    Metadata: Optional[Metadata] = None
    ClientRequestToken: ClientRequestToken
    Tags: Optional[TagList] = None


class MessagingSessionEndpoint(BaseModel):
    """
    The websocket endpoint used to connect to Amazon Chime SDK messaging.
    """

    Url: Optional[UrlType] = None


class BatchCreateChannelMembershipResponse(BaseModel):
    BatchChannelMemberships: Optional[BatchChannelMemberships] = None
    Errors: Optional[BatchCreateChannelMembershipErrors] = None


class CreateChannelBanResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    Member: Optional[Identity] = None


class CreateChannelMembershipResponse(CreateChannelBanResponse):
    pass


class CreateChannelModeratorResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    ChannelModerator: Optional[Identity] = None


class DescribeChannelResponse(BaseModel):
    Channel: Optional[Channel] = None


class DescribeChannelBanResponse(BaseModel):
    ChannelBan: Optional[ChannelBan] = None


class DescribeChannelMembershipResponse(BaseModel):
    ChannelMembership: Optional[ChannelMembership] = None


class DescribeChannelModeratorResponse(BaseModel):
    ChannelModerator: Optional[ChannelModerator] = None


class GetChannelMessageResponse(BaseModel):
    ChannelMessage: Optional[ChannelMessage] = None


class GetMessagingSessionEndpointResponse(BaseModel):
    Endpoint: Optional[MessagingSessionEndpoint] = None


class ListChannelBansResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    NextToken: Optional[NextToken] = None
    ChannelBans: Optional[ChannelBanSummaryList] = None


class ListChannelMembershipsResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    ChannelMemberships: Optional[ChannelMembershipSummaryList] = None
    NextToken: Optional[NextToken] = None


class ListChannelMessagesResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    NextToken: Optional[NextToken] = None
    ChannelMessages: Optional[ChannelMessageSummaryList] = None


class ListChannelModeratorsResponse(BaseModel):
    ChannelArn: Optional[ChimeArn] = None
    NextToken: Optional[NextToken] = None
    ChannelModerators: Optional[ChannelModeratorSummaryList] = None

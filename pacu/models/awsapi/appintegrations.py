# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:45:03+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class Source(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^aws\\.partner\\/.*$')
    ]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class InternalServiceError(BaseModel):
    __root__: Any


class ResourceQuotaExceededException(InternalServiceError):
    pass


class DuplicateResourceException(InternalServiceError):
    pass


class ThrottlingException(InternalServiceError):
    pass


class InvalidRequestException(InternalServiceError):
    pass


class AccessDeniedException(InternalServiceError):
    pass


class DeleteEventIntegrationResponse(BaseModel):
    pass


class ResourceNotFoundException(InternalServiceError):
    pass


class TagResourceResponse(DeleteEventIntegrationResponse):
    pass


class UntagResourceResponse(DeleteEventIntegrationResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^(?!aws:)[a-zA-Z+-=._:/]+$')
    ]


class UpdateEventIntegrationResponse(DeleteEventIntegrationResponse):
    pass


class Arn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$',
        ),
    ]


class NonBlankString(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='.*\\S.*')]


class ClientAssociationMetadata(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ClientId(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1, regex='.*')]


class Name(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='^[a-zA-Z0-9\\/\\._\\-]+$')
    ]


class Description(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1, regex='.*')]


class EventFilter(BaseModel):
    """
    The event filter.
    """

    Source: Source


class EventBridgeBus(Name):
    pass


class IdempotencyToken(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='.*')]


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateEventIntegrationRequest(BaseModel):
    Name: Name
    Description: Optional[Description] = None
    EventFilter: EventFilter
    EventBridgeBus: EventBridgeBus
    ClientToken: Optional[IdempotencyToken] = None
    Tags: Optional[TagMap] = None


class DeleteEventIntegrationRequest(BaseModel):
    pass


class EventBridgeRuleName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='^[a-zA-Z0-9\\/\\._\\-]+$')
    ]


class EventIntegration(BaseModel):
    """
    The event integration.
    """

    EventIntegrationArn: Optional[Arn] = None
    Name: Optional[Name] = None
    Description: Optional[Description] = None
    EventFilter: Optional[EventFilter] = None
    EventBridgeBus: Optional[EventBridgeBus] = None
    Tags: Optional[TagMap] = None


class UUID(BaseModel):
    __root__: Annotated[
        str, Field(regex='[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')
    ]


class EventIntegrationAssociation(BaseModel):
    """
    The event integration association.
    """

    EventIntegrationAssociationArn: Optional[Arn] = None
    EventIntegrationAssociationId: Optional[UUID] = None
    EventIntegrationName: Optional[Name] = None
    ClientId: Optional[ClientId] = None
    EventBridgeRuleName: Optional[EventBridgeRuleName] = None
    ClientAssociationMetadata: Optional[ClientAssociationMetadata] = None


class EventIntegrationAssociationsList(BaseModel):
    __root__: Annotated[
        List[EventIntegrationAssociation], Field(max_items=50, min_items=1)
    ]


class EventIntegrationsList(BaseModel):
    __root__: Annotated[List[EventIntegration], Field(max_items=50, min_items=1)]


class GetEventIntegrationRequest(BaseModel):
    pass


class NextToken(Description):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class ListEventIntegrationAssociationsRequest(BaseModel):
    pass


class ListEventIntegrationsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=1)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class UntagResourceRequest(BaseModel):
    pass


class UpdateEventIntegrationRequest(BaseModel):
    Description: Optional[Description] = None


class CreateEventIntegrationResponse(BaseModel):
    EventIntegrationArn: Optional[Arn] = None


class GetEventIntegrationResponse(BaseModel):
    Name: Optional[Name] = None
    Description: Optional[Description] = None
    EventIntegrationArn: Optional[Arn] = None
    EventBridgeBus: Optional[EventBridgeBus] = None
    EventFilter: Optional[EventFilter] = None
    Tags: Optional[TagMap] = None


class ListEventIntegrationAssociationsResponse(BaseModel):
    EventIntegrationAssociations: Optional[EventIntegrationAssociationsList] = None
    NextToken: Optional[NextToken] = None


class ListEventIntegrationsResponse(BaseModel):
    EventIntegrations: Optional[EventIntegrationsList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:47:26+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class ArgumentException(BaseModel):
    __root__: Any


class NotFoundException(ArgumentException):
    pass


class LimitExceededException(ArgumentException):
    pass


class ServiceAccountException(ArgumentException):
    pass


class TagOperationException(ArgumentException):
    pass


class InternalServiceException(ArgumentException):
    pass


class DeleteDevicePoolResult(BaseModel):
    """
    Represents the result of a delete device pool request.
    """

    pass


class DeleteInstanceProfileResult(DeleteDevicePoolResult):
    pass


class DeleteNetworkProfileResult(DeleteDevicePoolResult):
    pass


class DeleteProjectResult(DeleteDevicePoolResult):
    """
    Represents the result of a delete project request.
    """

    pass


class DeleteRemoteAccessSessionResult(DeleteDevicePoolResult):
    """
    The response from the server when a request is made to delete the remote access session.
    """

    pass


class DeleteRunResult(DeleteDevicePoolResult):
    """
    Represents the result of a delete run request.
    """

    pass


class DeleteTestGridProjectResult(DeleteDevicePoolResult):
    pass


class CannotDeleteException(ArgumentException):
    pass


class DeleteUploadResult(DeleteDevicePoolResult):
    """
    Represents the result of a delete upload request.
    """

    pass


class DeleteVPCEConfigurationResult(DeleteDevicePoolResult):
    pass


class InvalidOperationException(ArgumentException):
    pass


class GetAccountSettingsRequest(BaseModel):
    """
    Represents the request sent to retrieve the account settings.
    """

    pass


class NotEligibleException(ArgumentException):
    pass


class IdempotencyException(ArgumentException):
    pass


class TagResourceResponse(DeleteDevicePoolResult):
    pass


class TooManyTagsException(ArgumentException):
    pass


class TagPolicyException(ArgumentException):
    pass


class UntagResourceResponse(DeleteDevicePoolResult):
    pass


class AWSAccountNumber(BaseModel):
    __root__: Annotated[str, Field(max_length=16, min_length=2)]


class PurchasedDevicesMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class JobTimeoutMinutes(BaseModel):
    __root__: int


class MaxSlotMap(PurchasedDevicesMap):
    pass


class SkipAppResign1(BaseModel):
    __root__: bool


class AccountsCleanup(SkipAppResign1):
    pass


class AmazonResourceName(BaseModel):
    __root__: Annotated[str, Field(max_length=1011, min_length=32, regex='^arn:.+')]


class AmazonResourceNames(BaseModel):
    __root__: List[AmazonResourceName]


class String(BaseModel):
    __root__: str


class AndroidPaths(BaseModel):
    __root__: List[String]


class AppPackagesCleanup(SkipAppResign1):
    pass


class Name(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class ArtifactType(Enum):
    UNKNOWN = 'UNKNOWN'
    SCREENSHOT = 'SCREENSHOT'
    DEVICE_LOG = 'DEVICE_LOG'
    MESSAGE_LOG = 'MESSAGE_LOG'
    VIDEO_LOG = 'VIDEO_LOG'
    RESULT_LOG = 'RESULT_LOG'
    SERVICE_LOG = 'SERVICE_LOG'
    WEBKIT_LOG = 'WEBKIT_LOG'
    INSTRUMENTATION_OUTPUT = 'INSTRUMENTATION_OUTPUT'
    EXERCISER_MONKEY_OUTPUT = 'EXERCISER_MONKEY_OUTPUT'
    CALABASH_JSON_OUTPUT = 'CALABASH_JSON_OUTPUT'
    CALABASH_PRETTY_OUTPUT = 'CALABASH_PRETTY_OUTPUT'
    CALABASH_STANDARD_OUTPUT = 'CALABASH_STANDARD_OUTPUT'
    CALABASH_JAVA_XML_OUTPUT = 'CALABASH_JAVA_XML_OUTPUT'
    AUTOMATION_OUTPUT = 'AUTOMATION_OUTPUT'
    APPIUM_SERVER_OUTPUT = 'APPIUM_SERVER_OUTPUT'
    APPIUM_JAVA_OUTPUT = 'APPIUM_JAVA_OUTPUT'
    APPIUM_JAVA_XML_OUTPUT = 'APPIUM_JAVA_XML_OUTPUT'
    APPIUM_PYTHON_OUTPUT = 'APPIUM_PYTHON_OUTPUT'
    APPIUM_PYTHON_XML_OUTPUT = 'APPIUM_PYTHON_XML_OUTPUT'
    EXPLORER_EVENT_LOG = 'EXPLORER_EVENT_LOG'
    EXPLORER_SUMMARY_LOG = 'EXPLORER_SUMMARY_LOG'
    APPLICATION_CRASH_REPORT = 'APPLICATION_CRASH_REPORT'
    XCTEST_LOG = 'XCTEST_LOG'
    VIDEO = 'VIDEO'
    CUSTOMER_ARTIFACT = 'CUSTOMER_ARTIFACT'
    CUSTOMER_ARTIFACT_LOG = 'CUSTOMER_ARTIFACT_LOG'
    TESTSPEC_OUTPUT = 'TESTSPEC_OUTPUT'


class URL(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=0)]


class Artifact(BaseModel):
    """
    Represents the output of a test. Examples of artifacts include logs and screenshots.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    type: Optional[ArtifactType] = None
    extension: Optional[String] = None
    url: Optional[URL] = None


class ArtifactCategory(Enum):
    SCREENSHOT = 'SCREENSHOT'
    FILE = 'FILE'
    LOG = 'LOG'


class Artifacts(BaseModel):
    __root__: List[Artifact]


class BillingMethod(Enum):
    METERED = 'METERED'
    UNMETERED = 'UNMETERED'


class Boolean(SkipAppResign1):
    pass


class Double(BaseModel):
    __root__: float


class CPU(BaseModel):
    """
    Represents the amount of CPU that an app is using on a physical device. Does not represent system-wide CPU usage.
    """

    frequency: Optional[String] = None
    architecture: Optional[String] = None
    clock: Optional[Double] = None


class ClientId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=0)]


class ContentType(ClientId):
    pass


class Integer(JobTimeoutMinutes):
    pass


class Counters(BaseModel):
    """
    Represents entity counters.
    """

    total: Optional[Integer] = None
    passed: Optional[Integer] = None
    failed: Optional[Integer] = None
    warned: Optional[Integer] = None
    errored: Optional[Integer] = None
    stopped: Optional[Integer] = None
    skipped: Optional[Integer] = None


class Message(BaseModel):
    __root__: Annotated[str, Field(max_length=16384, min_length=0)]


class PackageIds(AndroidPaths):
    pass


class InstanceProfile(BaseModel):
    """
    Represents the instance profile.
    """

    arn: Optional[AmazonResourceName] = None
    packageCleanup: Optional[Boolean] = None
    excludeAppPackagesFromCleanup: Optional[PackageIds] = None
    rebootAfterUse: Optional[Boolean] = None
    name: Optional[Name] = None
    description: Optional[Message] = None


class NetworkProfileType(Enum):
    CURATED = 'CURATED'
    PRIVATE = 'PRIVATE'


class Long(JobTimeoutMinutes):
    pass


class PercentInteger(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class NetworkProfile(BaseModel):
    """
    An array of settings that describes characteristics of a network profile.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    description: Optional[Message] = None
    type: Optional[NetworkProfileType] = None
    uplinkBandwidthBits: Optional[Long] = None
    downlinkBandwidthBits: Optional[Long] = None
    uplinkDelayMs: Optional[Long] = None
    downlinkDelayMs: Optional[Long] = None
    uplinkJitterMs: Optional[Long] = None
    downlinkJitterMs: Optional[Long] = None
    uplinkLossPercent: Optional[PercentInteger] = None
    downlinkLossPercent: Optional[PercentInteger] = None


class CreateRemoteAccessSessionConfiguration(BaseModel):
    """
    Configuration settings for a remote access session, including billing method.
    """

    billingMethod: Optional[BillingMethod] = None
    vpceConfigurationArns: Optional[AmazonResourceNames] = None


class SshPublicKey(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=0)]


class InteractionMode(Enum):
    INTERACTIVE = 'INTERACTIVE'
    NO_VIDEO = 'NO_VIDEO'
    VIDEO_ONLY = 'VIDEO_ONLY'


class ResourceName(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='.*\\S.*')]


class ResourceDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='.*\\S.*')]


class DeviceFarmArn(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1011, min_length=32, regex='^arn:aws:devicefarm:.+')
    ]


class TestGridUrlExpiresInSecondsInput(BaseModel):
    __root__: Annotated[int, Field(ge=60.0, le=86400.0)]


class SensitiveString(BaseModel):
    __root__: SecretStr


class DateTime(BaseModel):
    __root__: datetime


class UploadType(Enum):
    ANDROID_APP = 'ANDROID_APP'
    IOS_APP = 'IOS_APP'
    WEB_APP = 'WEB_APP'
    EXTERNAL_DATA = 'EXTERNAL_DATA'
    APPIUM_JAVA_JUNIT_TEST_PACKAGE = 'APPIUM_JAVA_JUNIT_TEST_PACKAGE'
    APPIUM_JAVA_TESTNG_TEST_PACKAGE = 'APPIUM_JAVA_TESTNG_TEST_PACKAGE'
    APPIUM_PYTHON_TEST_PACKAGE = 'APPIUM_PYTHON_TEST_PACKAGE'
    APPIUM_NODE_TEST_PACKAGE = 'APPIUM_NODE_TEST_PACKAGE'
    APPIUM_RUBY_TEST_PACKAGE = 'APPIUM_RUBY_TEST_PACKAGE'
    APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE = 'APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE'
    APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE = 'APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE'
    APPIUM_WEB_PYTHON_TEST_PACKAGE = 'APPIUM_WEB_PYTHON_TEST_PACKAGE'
    APPIUM_WEB_NODE_TEST_PACKAGE = 'APPIUM_WEB_NODE_TEST_PACKAGE'
    APPIUM_WEB_RUBY_TEST_PACKAGE = 'APPIUM_WEB_RUBY_TEST_PACKAGE'
    CALABASH_TEST_PACKAGE = 'CALABASH_TEST_PACKAGE'
    INSTRUMENTATION_TEST_PACKAGE = 'INSTRUMENTATION_TEST_PACKAGE'
    UIAUTOMATION_TEST_PACKAGE = 'UIAUTOMATION_TEST_PACKAGE'
    UIAUTOMATOR_TEST_PACKAGE = 'UIAUTOMATOR_TEST_PACKAGE'
    XCTEST_TEST_PACKAGE = 'XCTEST_TEST_PACKAGE'
    XCTEST_UI_TEST_PACKAGE = 'XCTEST_UI_TEST_PACKAGE'
    APPIUM_JAVA_JUNIT_TEST_SPEC = 'APPIUM_JAVA_JUNIT_TEST_SPEC'
    APPIUM_JAVA_TESTNG_TEST_SPEC = 'APPIUM_JAVA_TESTNG_TEST_SPEC'
    APPIUM_PYTHON_TEST_SPEC = 'APPIUM_PYTHON_TEST_SPEC'
    APPIUM_NODE_TEST_SPEC = 'APPIUM_NODE_TEST_SPEC'
    APPIUM_RUBY_TEST_SPEC = 'APPIUM_RUBY_TEST_SPEC'
    APPIUM_WEB_JAVA_JUNIT_TEST_SPEC = 'APPIUM_WEB_JAVA_JUNIT_TEST_SPEC'
    APPIUM_WEB_JAVA_TESTNG_TEST_SPEC = 'APPIUM_WEB_JAVA_TESTNG_TEST_SPEC'
    APPIUM_WEB_PYTHON_TEST_SPEC = 'APPIUM_WEB_PYTHON_TEST_SPEC'
    APPIUM_WEB_NODE_TEST_SPEC = 'APPIUM_WEB_NODE_TEST_SPEC'
    APPIUM_WEB_RUBY_TEST_SPEC = 'APPIUM_WEB_RUBY_TEST_SPEC'
    INSTRUMENTATION_TEST_SPEC = 'INSTRUMENTATION_TEST_SPEC'
    XCTEST_UI_TEST_SPEC = 'XCTEST_UI_TEST_SPEC'


class VPCEConfigurationName(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=0)]


class VPCEServiceName(URL):
    pass


class ServiceDnsName(URL):
    pass


class VPCEConfigurationDescription(URL):
    pass


class VPCEConfiguration(BaseModel):
    """
    Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.
    """

    arn: Optional[AmazonResourceName] = None
    vpceConfigurationName: Optional[VPCEConfigurationName] = None
    vpceServiceName: Optional[VPCEServiceName] = None
    serviceDnsName: Optional[ServiceDnsName] = None
    vpceConfigurationDescription: Optional[VPCEConfigurationDescription] = None


class CurrencyCode(Enum):
    USD = 'USD'


class IosPaths(AndroidPaths):
    pass


class DeviceHostPaths(AndroidPaths):
    pass


class CustomerArtifactPaths(BaseModel):
    """
    <p>A JSON object that specifies the paths where the artifacts generated by the customer's tests, on the device or in the test environment, are pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>
    """

    iosPaths: Optional[IosPaths] = None
    androidPaths: Optional[AndroidPaths] = None
    deviceHostPaths: Optional[DeviceHostPaths] = None


class DeviceFormFactor(Enum):
    PHONE = 'PHONE'
    TABLET = 'TABLET'


class DevicePlatform(Enum):
    ANDROID = 'ANDROID'
    IOS = 'IOS'


class Resolution(BaseModel):
    """
    Represents the screen resolution of a device in height and width, expressed in pixels.
    """

    width: Optional[Integer] = None
    height: Optional[Integer] = None


class DeviceAvailability(Enum):
    TEMPORARY_NOT_AVAILABLE = 'TEMPORARY_NOT_AVAILABLE'
    BUSY = 'BUSY'
    AVAILABLE = 'AVAILABLE'
    HIGHLY_AVAILABLE = 'HIGHLY_AVAILABLE'


class DeviceAttribute(Enum):
    ARN = 'ARN'
    PLATFORM = 'PLATFORM'
    FORM_FACTOR = 'FORM_FACTOR'
    MANUFACTURER = 'MANUFACTURER'
    REMOTE_ACCESS_ENABLED = 'REMOTE_ACCESS_ENABLED'
    REMOTE_DEBUG_ENABLED = 'REMOTE_DEBUG_ENABLED'
    APPIUM_VERSION = 'APPIUM_VERSION'
    INSTANCE_ARN = 'INSTANCE_ARN'
    INSTANCE_LABELS = 'INSTANCE_LABELS'
    FLEET_TYPE = 'FLEET_TYPE'
    OS_VERSION = 'OS_VERSION'
    MODEL = 'MODEL'
    AVAILABILITY = 'AVAILABILITY'


class DeviceFilterAttribute(Enum):
    ARN = 'ARN'
    PLATFORM = 'PLATFORM'
    OS_VERSION = 'OS_VERSION'
    MODEL = 'MODEL'
    AVAILABILITY = 'AVAILABILITY'
    FORM_FACTOR = 'FORM_FACTOR'
    MANUFACTURER = 'MANUFACTURER'
    REMOTE_ACCESS_ENABLED = 'REMOTE_ACCESS_ENABLED'
    REMOTE_DEBUG_ENABLED = 'REMOTE_DEBUG_ENABLED'
    INSTANCE_ARN = 'INSTANCE_ARN'
    INSTANCE_LABELS = 'INSTANCE_LABELS'
    FLEET_TYPE = 'FLEET_TYPE'


class RuleOperator(Enum):
    EQUALS = 'EQUALS'
    LESS_THAN = 'LESS_THAN'
    LESS_THAN_OR_EQUALS = 'LESS_THAN_OR_EQUALS'
    GREATER_THAN = 'GREATER_THAN'
    GREATER_THAN_OR_EQUALS = 'GREATER_THAN_OR_EQUALS'
    IN = 'IN'
    NOT_IN = 'NOT_IN'
    CONTAINS = 'CONTAINS'


class DeviceFilterValues(AndroidPaths):
    pass


class DeviceFilter(BaseModel):
    """
    <p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to <code>ScheduleRun</code>. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to <code>ListDevices</code>. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>
    """

    attribute: DeviceFilterAttribute
    operator: RuleOperator
    values: DeviceFilterValues


class DeviceFilters(BaseModel):
    __root__: List[DeviceFilter]


class InstanceLabels(AndroidPaths):
    pass


class InstanceStatus(Enum):
    IN_USE = 'IN_USE'
    PREPARING = 'PREPARING'
    AVAILABLE = 'AVAILABLE'
    NOT_AVAILABLE = 'NOT_AVAILABLE'


class DeviceInstance(BaseModel):
    """
    Represents the device instance.
    """

    arn: Optional[AmazonResourceName] = None
    deviceArn: Optional[AmazonResourceName] = None
    labels: Optional[InstanceLabels] = None
    status: Optional[InstanceStatus] = None
    udid: Optional[String] = None
    instanceProfile: Optional[InstanceProfile] = None


class DeviceMinutes(BaseModel):
    """
    Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.
    """

    total: Optional[Double] = None
    metered: Optional[Double] = None
    unmetered: Optional[Double] = None


class DeviceSelectionConfiguration(BaseModel):
    """
    Represents the device filters used in a test run and the maximum number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.
    """

    filters: DeviceFilters
    maxDevices: Integer


class DeviceSelectionResult(BaseModel):
    """
    Contains the run results requested by the device selection configuration and how many devices were returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.
    """

    filters: Optional[DeviceFilters] = None
    matchedDevicesCount: Optional[Integer] = None
    maxDevices: Optional[Integer] = None


class VideoCapture(SkipAppResign1):
    pass


class ExecutionConfiguration(BaseModel):
    """
    Represents configuration information about a test run, such as the execution timeout (in minutes).
    """

    jobTimeoutMinutes: Optional[JobTimeoutMinutes] = None
    accountsCleanup: Optional[AccountsCleanup] = None
    appPackagesCleanup: Optional[AppPackagesCleanup] = None
    videoCapture: Optional[VideoCapture] = None
    skipAppResign: Optional[SkipAppResign1] = None


class ExecutionResult(Enum):
    PENDING = 'PENDING'
    PASSED = 'PASSED'
    WARNED = 'WARNED'
    FAILED = 'FAILED'
    SKIPPED = 'SKIPPED'
    ERRORED = 'ERRORED'
    STOPPED = 'STOPPED'


class ExecutionResultCode(Enum):
    PARSING_FAILED = 'PARSING_FAILED'
    VPC_ENDPOINT_SETUP_FAILED = 'VPC_ENDPOINT_SETUP_FAILED'


class ExecutionStatus(Enum):
    PENDING = 'PENDING'
    PENDING_CONCURRENCY = 'PENDING_CONCURRENCY'
    PENDING_DEVICE = 'PENDING_DEVICE'
    PROCESSING = 'PROCESSING'
    SCHEDULING = 'SCHEDULING'
    PREPARING = 'PREPARING'
    RUNNING = 'RUNNING'
    COMPLETED = 'COMPLETED'
    STOPPING = 'STOPPING'


class Filter(SshPublicKey):
    pass


class TestType(Enum):
    BUILTIN_FUZZ = 'BUILTIN_FUZZ'
    BUILTIN_EXPLORER = 'BUILTIN_EXPLORER'
    WEB_PERFORMANCE_PROFILE = 'WEB_PERFORMANCE_PROFILE'
    APPIUM_JAVA_JUNIT = 'APPIUM_JAVA_JUNIT'
    APPIUM_JAVA_TESTNG = 'APPIUM_JAVA_TESTNG'
    APPIUM_PYTHON = 'APPIUM_PYTHON'
    APPIUM_NODE = 'APPIUM_NODE'
    APPIUM_RUBY = 'APPIUM_RUBY'
    APPIUM_WEB_JAVA_JUNIT = 'APPIUM_WEB_JAVA_JUNIT'
    APPIUM_WEB_JAVA_TESTNG = 'APPIUM_WEB_JAVA_TESTNG'
    APPIUM_WEB_PYTHON = 'APPIUM_WEB_PYTHON'
    APPIUM_WEB_NODE = 'APPIUM_WEB_NODE'
    APPIUM_WEB_RUBY = 'APPIUM_WEB_RUBY'
    CALABASH = 'CALABASH'
    INSTRUMENTATION = 'INSTRUMENTATION'
    UIAUTOMATION = 'UIAUTOMATION'
    UIAUTOMATOR = 'UIAUTOMATOR'
    XCTEST = 'XCTEST'
    XCTEST_UI = 'XCTEST_UI'
    REMOTE_ACCESS_RECORD = 'REMOTE_ACCESS_RECORD'
    REMOTE_ACCESS_REPLAY = 'REMOTE_ACCESS_REPLAY'


class PaginationToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=4)]


class OfferingStatusMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class Suite(BaseModel):
    """
    Represents a collection of one or more tests.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    type: Optional[TestType] = None
    created: Optional[DateTime] = None
    status: Optional[ExecutionStatus] = None
    result: Optional[ExecutionResult] = None
    started: Optional[DateTime] = None
    stopped: Optional[DateTime] = None
    counters: Optional[Counters] = None
    message: Optional[Message] = None
    deviceMinutes: Optional[DeviceMinutes] = None


class ResourceId(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='.*\\S.*')]


class Test(Suite):
    """
    Represents a condition that is evaluated.
    """

    pass


class HostAddress(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class IncompatibilityMessage(BaseModel):
    """
    Represents information about incompatibility.
    """

    message: Optional[Message] = None
    type: Optional[DeviceAttribute] = None


class InstanceProfiles(BaseModel):
    __root__: List[InstanceProfile]


class NetworkProfiles(BaseModel):
    __root__: List[NetworkProfile]


class Suites(BaseModel):
    __root__: List[Suite]


class MaxPageSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class TestGridSessionArtifactCategory(Enum):
    VIDEO = 'VIDEO'
    LOG = 'LOG'


class TestGridSessionStatus(Enum):
    ACTIVE = 'ACTIVE'
    CLOSED = 'CLOSED'
    ERRORED = 'ERRORED'


class Tests(BaseModel):
    __root__: List[Test]


class UniqueProblemsByExecutionResultMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class VPCEConfigurations(BaseModel):
    __root__: List[VPCEConfiguration]


class Location(BaseModel):
    """
    <p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example, 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>
    """

    latitude: Double
    longitude: Double


class Metadata(SshPublicKey):
    pass


class MonetaryAmount(BaseModel):
    """
    A number that represents the monetary amount for an offering or transaction.
    """

    amount: Optional[Double] = None
    currencyCode: Optional[CurrencyCode] = None


class NonEmptyString(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1, regex='.*\\S.*')]


class OfferingIdentifier(BaseModel):
    __root__: Annotated[str, Field(min_length=32)]


class OfferingType(Enum):
    RECURRING = 'RECURRING'


class OfferingPromotionIdentifier(BaseModel):
    __root__: Annotated[str, Field(min_length=4)]


class OfferingPromotion(BaseModel):
    """
    Represents information about an offering promotion.
    """

    id: Optional[OfferingPromotionIdentifier] = None
    description: Optional[Message] = None


class OfferingTransactionType(Enum):
    PURCHASE = 'PURCHASE'
    RENEW = 'RENEW'
    SYSTEM = 'SYSTEM'


class TransactionIdentifier(OfferingIdentifier):
    pass


class ProblemDetail(BaseModel):
    """
    Information about a problem detail.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None


class Radios(BaseModel):
    """
    Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.
    """

    wifi: Optional[Boolean] = None
    bluetooth: Optional[Boolean] = None
    nfc: Optional[Boolean] = None
    gps: Optional[Boolean] = None


class RecurringChargeFrequency(Enum):
    MONTHLY = 'MONTHLY'


class RecurringCharge(BaseModel):
    """
    Specifies whether charges for devices are recurring.
    """

    cost: Optional[MonetaryAmount] = None
    frequency: Optional[RecurringChargeFrequency] = None


class Rule(BaseModel):
    """
    Represents a condition for a device pool.
    """

    attribute: Optional[DeviceAttribute] = None
    operator: Optional[RuleOperator] = None
    value: Optional[String] = None


class SampleType(Enum):
    CPU = 'CPU'
    MEMORY = 'MEMORY'
    THREADS = 'THREADS'
    RX_RATE = 'RX_RATE'
    TX_RATE = 'TX_RATE'
    RX = 'RX'
    TX = 'TX'
    NATIVE_FRAMES = 'NATIVE_FRAMES'
    NATIVE_FPS = 'NATIVE_FPS'
    NATIVE_MIN_DRAWTIME = 'NATIVE_MIN_DRAWTIME'
    NATIVE_AVG_DRAWTIME = 'NATIVE_AVG_DRAWTIME'
    NATIVE_MAX_DRAWTIME = 'NATIVE_MAX_DRAWTIME'
    OPENGL_FRAMES = 'OPENGL_FRAMES'
    OPENGL_FPS = 'OPENGL_FPS'
    OPENGL_MIN_DRAWTIME = 'OPENGL_MIN_DRAWTIME'
    OPENGL_AVG_DRAWTIME = 'OPENGL_AVG_DRAWTIME'
    OPENGL_MAX_DRAWTIME = 'OPENGL_MAX_DRAWTIME'


class Sample(BaseModel):
    """
    Represents a sample of performance data.
    """

    arn: Optional[AmazonResourceName] = None
    type: Optional[SampleType] = None
    url: Optional[URL] = None


class TestParameters(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class SecurityGroupIds(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=5, min_items=1)]


class SensitiveURL(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048, min_length=0)]


class SubnetIds(BaseModel):
    __root__: Annotated[List[NonEmptyString], Field(max_items=8, min_items=1)]


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(Name):
    pass


class Tag(BaseModel):
    """
    The metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=150)]


class TestGridSessionAction(BaseModel):
    """
    An action taken by a <a>TestGridSession</a> browser instance.
    """

    action: Optional[String] = None
    started: Optional[DateTime] = None
    duration: Optional[Long] = None
    statusCode: Optional[String] = None
    requestMethod: Optional[String] = None


class TestGridSessionArtifactType(Enum):
    UNKNOWN = 'UNKNOWN'
    VIDEO = 'VIDEO'
    SELENIUM_LOG = 'SELENIUM_LOG'


class TestGridSessionArtifact(BaseModel):
    """
    <p>Artifacts are video and other files that are produced in the process of running a browser in an automated context. </p> <note> <p>Video elements might be broken up into multiple artifacts as they grow in size during creation. </p> </note>
    """

    filename: Optional[String] = None
    type: Optional[TestGridSessionArtifactType] = None
    url: Optional[SensitiveString] = None


class UploadStatus(Enum):
    INITIALIZED = 'INITIALIZED'
    PROCESSING = 'PROCESSING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class CreateInstanceProfileResult(BaseModel):
    instanceProfile: Optional[InstanceProfile] = None


class CreateInstanceProfileRequest(BaseModel):
    name: Name
    description: Optional[Message] = None
    packageCleanup: Optional[Boolean] = None
    excludeAppPackagesFromCleanup: Optional[PackageIds] = None
    rebootAfterUse: Optional[Boolean] = None


class CreateNetworkProfileResult(BaseModel):
    networkProfile: Optional[NetworkProfile] = None


class CreateNetworkProfileRequest(BaseModel):
    projectArn: AmazonResourceName
    name: Name
    description: Optional[Message] = None
    type: Optional[NetworkProfileType] = None
    uplinkBandwidthBits: Optional[Long] = None
    downlinkBandwidthBits: Optional[Long] = None
    uplinkDelayMs: Optional[Long] = None
    downlinkDelayMs: Optional[Long] = None
    uplinkJitterMs: Optional[Long] = None
    downlinkJitterMs: Optional[Long] = None
    uplinkLossPercent: Optional[PercentInteger] = None
    downlinkLossPercent: Optional[PercentInteger] = None


class CreateProjectRequest(BaseModel):
    """
    Represents a request to the create project operation.
    """

    name: Name
    defaultJobTimeoutMinutes: Optional[JobTimeoutMinutes] = None


class CreateRemoteAccessSessionRequest(BaseModel):
    """
    Creates and submits a request to start a remote access session.
    """

    projectArn: AmazonResourceName
    deviceArn: AmazonResourceName
    instanceArn: Optional[AmazonResourceName] = None
    sshPublicKey: Optional[SshPublicKey] = None
    remoteDebugEnabled: Optional[Boolean] = None
    remoteRecordEnabled: Optional[Boolean] = None
    remoteRecordAppArn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    clientId: Optional[ClientId] = None
    configuration: Optional[CreateRemoteAccessSessionConfiguration] = None
    interactionMode: Optional[InteractionMode] = None
    skipAppResign: Optional[Boolean] = None


class CreateTestGridUrlResult(BaseModel):
    url: Optional[SensitiveString] = None
    expires: Optional[DateTime] = None


class CreateTestGridUrlRequest(BaseModel):
    projectArn: DeviceFarmArn
    expiresInSeconds: TestGridUrlExpiresInSecondsInput


class CreateUploadRequest(BaseModel):
    """
    Represents a request to the create upload operation.
    """

    projectArn: AmazonResourceName
    name: Name
    type: UploadType
    contentType: Optional[ContentType] = None


class CreateVPCEConfigurationResult(BaseModel):
    vpceConfiguration: Optional[VPCEConfiguration] = None


class CreateVPCEConfigurationRequest(BaseModel):
    vpceConfigurationName: VPCEConfigurationName
    vpceServiceName: VPCEServiceName
    serviceDnsName: ServiceDnsName
    vpceConfigurationDescription: Optional[VPCEConfigurationDescription] = None


class DeleteDevicePoolRequest(BaseModel):
    """
    Represents a request to the delete device pool operation.
    """

    arn: AmazonResourceName


class DeleteInstanceProfileRequest(BaseModel):
    arn: AmazonResourceName


class DeleteNetworkProfileRequest(BaseModel):
    arn: AmazonResourceName


class DeleteProjectRequest(BaseModel):
    """
    Represents a request to the delete project operation.
    """

    arn: AmazonResourceName


class DeleteRemoteAccessSessionRequest(BaseModel):
    """
    Represents the request to delete the specified remote access session.
    """

    arn: AmazonResourceName


class DeleteRunRequest(BaseModel):
    """
    Represents a request to the delete run operation.
    """

    arn: AmazonResourceName


class DeleteTestGridProjectRequest(BaseModel):
    projectArn: DeviceFarmArn


class DeleteUploadRequest(BaseModel):
    """
    Represents a request to the delete upload operation.
    """

    arn: AmazonResourceName


class DeleteVPCEConfigurationRequest(BaseModel):
    arn: AmazonResourceName


class GetDeviceRequest(BaseModel):
    """
    Represents a request to the get device request.
    """

    arn: AmazonResourceName


class GetDeviceInstanceResult(BaseModel):
    deviceInstance: Optional[DeviceInstance] = None


class GetDeviceInstanceRequest(BaseModel):
    arn: AmazonResourceName


class GetDevicePoolRequest(BaseModel):
    """
    Represents a request to the get device pool operation.
    """

    arn: AmazonResourceName


class GetInstanceProfileResult(CreateInstanceProfileResult):
    pass


class GetInstanceProfileRequest(BaseModel):
    arn: AmazonResourceName


class GetJobRequest(BaseModel):
    """
    Represents a request to the get job operation.
    """

    arn: AmazonResourceName


class GetNetworkProfileResult(CreateNetworkProfileResult):
    pass


class GetNetworkProfileRequest(BaseModel):
    arn: AmazonResourceName


class GetOfferingStatusResult(BaseModel):
    """
    Returns the status result for a device offering.
    """

    current: Optional[OfferingStatusMap] = None
    nextPeriod: Optional[OfferingStatusMap] = None
    nextToken: Optional[PaginationToken] = None


class GetOfferingStatusRequest(BaseModel):
    """
    Represents the request to retrieve the offering status for the specified customer or account.
    """

    nextToken: Optional[PaginationToken] = None


class GetProjectRequest(BaseModel):
    """
    Represents a request to the get project operation.
    """

    arn: AmazonResourceName


class GetRemoteAccessSessionRequest(BaseModel):
    """
    Represents the request to get information about the specified remote access session.
    """

    arn: AmazonResourceName


class GetRunRequest(BaseModel):
    """
    Represents a request to the get run operation.
    """

    arn: AmazonResourceName


class GetSuiteResult(BaseModel):
    """
    Represents the result of a get suite request.
    """

    suite: Optional[Suite] = None


class GetSuiteRequest(BaseModel):
    """
    Represents a request to the get suite operation.
    """

    arn: AmazonResourceName


class GetTestResult(BaseModel):
    """
    Represents the result of a get test request.
    """

    test: Optional[Test] = None


class GetTestRequest(BaseModel):
    """
    Represents a request to the get test operation.
    """

    arn: AmazonResourceName


class GetTestGridProjectRequest(BaseModel):
    projectArn: DeviceFarmArn


class GetTestGridSessionRequest(BaseModel):
    projectArn: Optional[DeviceFarmArn] = None
    sessionId: Optional[ResourceId] = None
    sessionArn: Optional[DeviceFarmArn] = None


class GetUploadRequest(BaseModel):
    """
    Represents a request to the get upload operation.
    """

    arn: AmazonResourceName


class GetVPCEConfigurationResult(CreateVPCEConfigurationResult):
    pass


class GetVPCEConfigurationRequest(BaseModel):
    arn: AmazonResourceName


class InstallToRemoteAccessSessionRequest(BaseModel):
    """
    Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.
    """

    remoteAccessSessionArn: AmazonResourceName
    appArn: AmazonResourceName


class ListArtifactsResult(BaseModel):
    """
    Represents the result of a list artifacts operation.
    """

    artifacts: Optional[Artifacts] = None
    nextToken: Optional[PaginationToken] = None


class ListArtifactsRequest(BaseModel):
    """
    Represents a request to the list artifacts operation.
    """

    arn: AmazonResourceName
    type: ArtifactCategory
    nextToken: Optional[PaginationToken] = None


class ListDeviceInstancesRequest(BaseModel):
    maxResults: Optional[Integer] = None
    nextToken: Optional[PaginationToken] = None


class ListDevicePoolsRequest(BaseModel):
    """
    Represents the result of a list device pools request.
    """

    arn: AmazonResourceName
    type: Optional[NetworkProfileType] = None
    nextToken: Optional[PaginationToken] = None


class ListDevicesRequest(BaseModel):
    """
    Represents the result of a list devices request.
    """

    arn: Optional[AmazonResourceName] = None
    nextToken: Optional[PaginationToken] = None
    filters: Optional[DeviceFilters] = None


class ListInstanceProfilesResult(BaseModel):
    instanceProfiles: Optional[InstanceProfiles] = None
    nextToken: Optional[PaginationToken] = None


class ListInstanceProfilesRequest(BaseModel):
    maxResults: Optional[Integer] = None
    nextToken: Optional[PaginationToken] = None


class ListJobsRequest(BaseModel):
    """
    Represents a request to the list jobs operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListNetworkProfilesResult(BaseModel):
    networkProfiles: Optional[NetworkProfiles] = None
    nextToken: Optional[PaginationToken] = None


class ListNetworkProfilesRequest(BaseModel):
    arn: AmazonResourceName
    type: Optional[NetworkProfileType] = None
    nextToken: Optional[PaginationToken] = None


class ListOfferingPromotionsRequest(BaseModel):
    nextToken: Optional[PaginationToken] = None


class ListOfferingTransactionsRequest(BaseModel):
    """
    Represents the request to list the offering transaction history.
    """

    nextToken: Optional[PaginationToken] = None


class ListOfferingsRequest(BaseModel):
    """
    Represents the request to list all offerings.
    """

    nextToken: Optional[PaginationToken] = None


class ListProjectsRequest(BaseModel):
    """
    Represents a request to the list projects operation.
    """

    arn: Optional[AmazonResourceName] = None
    nextToken: Optional[PaginationToken] = None


class ListRemoteAccessSessionsRequest(BaseModel):
    """
    Represents the request to return information about the remote access session.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListRunsRequest(BaseModel):
    """
    Represents a request to the list runs operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListSamplesRequest(BaseModel):
    """
    Represents a request to the list samples operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListSuitesResult(BaseModel):
    """
    Represents the result of a list suites request.
    """

    suites: Optional[Suites] = None
    nextToken: Optional[PaginationToken] = None


class ListSuitesRequest(BaseModel):
    """
    Represents a request to the list suites operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: DeviceFarmArn


class ListTestGridProjectsRequest(BaseModel):
    maxResult: Optional[MaxPageSize] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionActionsRequest(BaseModel):
    sessionArn: DeviceFarmArn
    maxResult: Optional[MaxPageSize] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionArtifactsRequest(BaseModel):
    sessionArn: DeviceFarmArn
    type: Optional[TestGridSessionArtifactCategory] = None
    maxResult: Optional[MaxPageSize] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionsRequest(BaseModel):
    projectArn: DeviceFarmArn
    status: Optional[TestGridSessionStatus] = None
    creationTimeAfter: Optional[DateTime] = None
    creationTimeBefore: Optional[DateTime] = None
    endTimeAfter: Optional[DateTime] = None
    endTimeBefore: Optional[DateTime] = None
    maxResult: Optional[MaxPageSize] = None
    nextToken: Optional[PaginationToken] = None


class ListTestsResult(BaseModel):
    """
    Represents the result of a list tests request.
    """

    tests: Optional[Tests] = None
    nextToken: Optional[PaginationToken] = None


class ListTestsRequest(BaseModel):
    """
    Represents a request to the list tests operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListUniqueProblemsResult(BaseModel):
    """
    Represents the result of a list unique problems request.
    """

    uniqueProblems: Optional[UniqueProblemsByExecutionResultMap] = None
    nextToken: Optional[PaginationToken] = None


class ListUniqueProblemsRequest(BaseModel):
    """
    Represents a request to the list unique problems operation.
    """

    arn: AmazonResourceName
    nextToken: Optional[PaginationToken] = None


class ListUploadsRequest(BaseModel):
    """
    Represents a request to the list uploads operation.
    """

    arn: AmazonResourceName
    type: Optional[UploadType] = None
    nextToken: Optional[PaginationToken] = None


class ListVPCEConfigurationsResult(BaseModel):
    vpceConfigurations: Optional[VPCEConfigurations] = None
    nextToken: Optional[PaginationToken] = None


class ListVPCEConfigurationsRequest(BaseModel):
    maxResults: Optional[Integer] = None
    nextToken: Optional[PaginationToken] = None


class PurchaseOfferingRequest(BaseModel):
    """
    Represents a request for a purchase offering.
    """

    offeringId: OfferingIdentifier
    quantity: Integer
    offeringPromotionId: Optional[OfferingPromotionIdentifier] = None


class RenewOfferingRequest(BaseModel):
    """
    A request that represents an offering renewal.
    """

    offeringId: OfferingIdentifier
    quantity: Integer


class StopJobRequest(BaseModel):
    arn: AmazonResourceName


class StopRemoteAccessSessionRequest(BaseModel):
    """
    Represents the request to stop the remote access session.
    """

    arn: AmazonResourceName


class StopRunRequest(BaseModel):
    """
    Represents the request to stop a specific run.
    """

    arn: AmazonResourceName


class UntagResourceRequest(BaseModel):
    ResourceARN: DeviceFarmArn
    TagKeys: TagKeyList


class UpdateDeviceInstanceResult(GetDeviceInstanceResult):
    pass


class UpdateDeviceInstanceRequest(BaseModel):
    arn: AmazonResourceName
    profileArn: Optional[AmazonResourceName] = None
    labels: Optional[InstanceLabels] = None


class UpdateInstanceProfileResult(CreateInstanceProfileResult):
    pass


class UpdateInstanceProfileRequest(BaseModel):
    arn: AmazonResourceName
    name: Optional[Name] = None
    description: Optional[Message] = None
    packageCleanup: Optional[Boolean] = None
    excludeAppPackagesFromCleanup: Optional[PackageIds] = None
    rebootAfterUse: Optional[Boolean] = None


class UpdateNetworkProfileResult(CreateNetworkProfileResult):
    pass


class UpdateNetworkProfileRequest(BaseModel):
    arn: AmazonResourceName
    name: Optional[Name] = None
    description: Optional[Message] = None
    type: Optional[NetworkProfileType] = None
    uplinkBandwidthBits: Optional[Long] = None
    downlinkBandwidthBits: Optional[Long] = None
    uplinkDelayMs: Optional[Long] = None
    downlinkDelayMs: Optional[Long] = None
    uplinkJitterMs: Optional[Long] = None
    downlinkJitterMs: Optional[Long] = None
    uplinkLossPercent: Optional[PercentInteger] = None
    downlinkLossPercent: Optional[PercentInteger] = None


class UpdateProjectRequest(BaseModel):
    """
    Represents a request to the update project operation.
    """

    arn: AmazonResourceName
    name: Optional[Name] = None
    defaultJobTimeoutMinutes: Optional[JobTimeoutMinutes] = None


class UpdateUploadRequest(BaseModel):
    arn: AmazonResourceName
    name: Optional[Name] = None
    contentType: Optional[ContentType] = None
    editContent: Optional[Boolean] = None


class UpdateVPCEConfigurationResult(CreateVPCEConfigurationResult):
    pass


class UpdateVPCEConfigurationRequest(BaseModel):
    arn: AmazonResourceName
    vpceConfigurationName: Optional[VPCEConfigurationName] = None
    vpceServiceName: Optional[VPCEServiceName] = None
    serviceDnsName: Optional[ServiceDnsName] = None
    vpceConfigurationDescription: Optional[VPCEConfigurationDescription] = None


class TrialMinutes(BaseModel):
    """
    Represents information about free trial device minutes for an AWS account.
    """

    total: Optional[Double] = None
    remaining: Optional[Double] = None


class AccountSettings(BaseModel):
    """
    A container for account-level settings in AWS Device Farm.
    """

    awsAccountNumber: Optional[AWSAccountNumber] = None
    unmeteredDevices: Optional[PurchasedDevicesMap] = None
    unmeteredRemoteAccessDevices: Optional[PurchasedDevicesMap] = None
    maxJobTimeoutMinutes: Optional[JobTimeoutMinutes] = None
    trialMinutes: Optional[TrialMinutes] = None
    maxSlots: Optional[MaxSlotMap] = None
    defaultJobTimeoutMinutes: Optional[JobTimeoutMinutes] = None
    skipAppResign: Optional[SkipAppResign1] = None


class Rules(BaseModel):
    __root__: List[Rule]


class DevicePool(BaseModel):
    """
    Represents a collection of device types.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    description: Optional[Message] = None
    type: Optional[NetworkProfileType] = None
    rules: Optional[Rules] = None
    maxDevices: Optional[Integer] = None


class Project(BaseModel):
    """
    Represents an operating-system neutral workspace for running and managing tests.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    defaultJobTimeoutMinutes: Optional[JobTimeoutMinutes] = None
    created: Optional[DateTime] = None


class TestGridVpcConfig(BaseModel):
    """
    The VPC security groups and subnets that are attached to a project.
    """

    securityGroupIds: SecurityGroupIds
    subnetIds: SubnetIds
    vpcId: NonEmptyString


class TestGridProject(BaseModel):
    """
    A Selenium testing project. Projects are used to collect and collate sessions.
    """

    arn: Optional[DeviceFarmArn] = None
    name: Optional[String] = None
    description: Optional[String] = None
    vpcConfig: Optional[TestGridVpcConfig] = None
    created: Optional[DateTime] = None


class Upload(BaseModel):
    """
    An app or a set of one or more tests to upload or that have been uploaded.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    created: Optional[DateTime] = None
    type: Optional[UploadType] = None
    status: Optional[UploadStatus] = None
    url: Optional[SensitiveURL] = None
    metadata: Optional[Metadata] = None
    contentType: Optional[ContentType] = None
    message: Optional[Message] = None
    category: Optional[NetworkProfileType] = None


class DeviceInstances(BaseModel):
    __root__: List[DeviceInstance]


class Device(BaseModel):
    """
    Represents a device type that an app is tested against.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    manufacturer: Optional[String] = None
    model: Optional[String] = None
    modelId: Optional[String] = None
    formFactor: Optional[DeviceFormFactor] = None
    platform: Optional[DevicePlatform] = None
    os: Optional[String] = None
    cpu: Optional[CPU] = None
    resolution: Optional[Resolution] = None
    heapSize: Optional[Long] = None
    memory: Optional[Long] = None
    image: Optional[String] = None
    carrier: Optional[String] = None
    radio: Optional[String] = None
    remoteAccessEnabled: Optional[Boolean] = None
    remoteDebugEnabled: Optional[Boolean] = None
    fleetType: Optional[String] = None
    fleetName: Optional[String] = None
    instances: Optional[DeviceInstances] = None
    availability: Optional[DeviceAvailability] = None


class IncompatibilityMessages(BaseModel):
    __root__: List[IncompatibilityMessage]


class DevicePoolCompatibilityResult(BaseModel):
    """
    Represents a device pool compatibility result.
    """

    device: Optional[Device] = None
    compatible: Optional[Boolean] = None
    incompatibilityMessages: Optional[IncompatibilityMessages] = None


class DevicePoolCompatibilityResults(BaseModel):
    __root__: List[DevicePoolCompatibilityResult]


class DevicePools(BaseModel):
    __root__: List[DevicePool]


class Devices(BaseModel):
    __root__: List[Device]


class ScheduleRunTest(BaseModel):
    """
    Represents test settings. This data structure is passed in as the test parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.
    """

    type: TestType
    testPackageArn: Optional[AmazonResourceName] = None
    testSpecArn: Optional[AmazonResourceName] = None
    filter: Optional[Filter] = None
    parameters: Optional[TestParameters] = None


class ScheduleRunConfiguration(BaseModel):
    """
    Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.
    """

    extraDataPackageArn: Optional[AmazonResourceName] = None
    networkProfileArn: Optional[AmazonResourceName] = None
    locale: Optional[String] = None
    location: Optional[Location] = None
    vpceConfigurationArns: Optional[AmazonResourceNames] = None
    customerArtifactPaths: Optional[CustomerArtifactPaths] = None
    radios: Optional[Radios] = None
    auxiliaryApps: Optional[AmazonResourceNames] = None
    billingMethod: Optional[BillingMethod] = None


class Job(BaseModel):
    """
    Represents a device.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    type: Optional[TestType] = None
    created: Optional[DateTime] = None
    status: Optional[ExecutionStatus] = None
    result: Optional[ExecutionResult] = None
    started: Optional[DateTime] = None
    stopped: Optional[DateTime] = None
    counters: Optional[Counters] = None
    message: Optional[Message] = None
    device: Optional[Device] = None
    instanceArn: Optional[AmazonResourceName] = None
    deviceMinutes: Optional[DeviceMinutes] = None
    videoEndpoint: Optional[String] = None
    videoCapture: Optional[VideoCapture] = None


class Run(BaseModel):
    """
    Represents a test run on a set of devices with a given app package, test parameters, and so on.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    type: Optional[TestType] = None
    platform: Optional[DevicePlatform] = None
    created: Optional[DateTime] = None
    status: Optional[ExecutionStatus] = None
    result: Optional[ExecutionResult] = None
    started: Optional[DateTime] = None
    stopped: Optional[DateTime] = None
    counters: Optional[Counters] = None
    message: Optional[Message] = None
    totalJobs: Optional[Integer] = None
    completedJobs: Optional[Integer] = None
    billingMethod: Optional[BillingMethod] = None
    deviceMinutes: Optional[DeviceMinutes] = None
    networkProfile: Optional[NetworkProfile] = None
    parsingResultUrl: Optional[String] = None
    resultCode: Optional[ExecutionResultCode] = None
    seed: Optional[Integer] = None
    appUpload: Optional[AmazonResourceName] = None
    eventCount: Optional[Integer] = None
    jobTimeoutMinutes: Optional[JobTimeoutMinutes] = None
    devicePoolArn: Optional[AmazonResourceName] = None
    locale: Optional[String] = None
    radios: Optional[Radios] = None
    location: Optional[Location] = None
    customerArtifactPaths: Optional[CustomerArtifactPaths] = None
    webUrl: Optional[String] = None
    skipAppResign: Optional[SkipAppResign1] = None
    testSpecArn: Optional[AmazonResourceName] = None
    deviceSelectionResult: Optional[DeviceSelectionResult] = None


class TestGridSession(BaseModel):
    """
    A <a>TestGridSession</a> is a single instance of a browser launched from the URL provided by a call to <a>CreateTestGridUrl</a>.
    """

    arn: Optional[DeviceFarmArn] = None
    status: Optional[TestGridSessionStatus] = None
    created: Optional[DateTime] = None
    ended: Optional[DateTime] = None
    billingMinutes: Optional[Double] = None
    seleniumProperties: Optional[String] = None


class Jobs(BaseModel):
    __root__: List[Job]


class OfferingPromotions(BaseModel):
    __root__: List[OfferingPromotion]


class Projects(BaseModel):
    __root__: List[Project]


class Runs(BaseModel):
    __root__: List[Run]


class Samples(BaseModel):
    __root__: List[Sample]


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=150)]


class TestGridProjects(BaseModel):
    __root__: List[TestGridProject]


class TestGridSessionActions(BaseModel):
    __root__: List[TestGridSessionAction]


class TestGridSessionArtifacts(BaseModel):
    __root__: List[TestGridSessionArtifact]


class TestGridSessions(BaseModel):
    __root__: List[TestGridSession]


class Uploads(BaseModel):
    __root__: List[Upload]


class RecurringCharges(BaseModel):
    __root__: List[RecurringCharge]


class Offering(BaseModel):
    """
    Represents the metadata of a device offering.
    """

    id: Optional[OfferingIdentifier] = None
    description: Optional[Message] = None
    type: Optional[OfferingType] = None
    platform: Optional[DevicePlatform] = None
    recurringCharges: Optional[RecurringCharges] = None


class OfferingStatus(BaseModel):
    """
    The status of the offering.
    """

    type: Optional[OfferingTransactionType] = None
    offering: Optional[Offering] = None
    quantity: Optional[Integer] = None
    effectiveOn: Optional[DateTime] = None


class OfferingTransaction(BaseModel):
    """
    Represents the metadata of an offering transaction.
    """

    offeringStatus: Optional[OfferingStatus] = None
    transactionId: Optional[TransactionIdentifier] = None
    offeringPromotionId: Optional[OfferingPromotionIdentifier] = None
    createdOn: Optional[DateTime] = None
    cost: Optional[MonetaryAmount] = None


class Problem(BaseModel):
    """
    Represents a specific warning or failure.
    """

    run: Optional[ProblemDetail] = None
    job: Optional[ProblemDetail] = None
    suite: Optional[ProblemDetail] = None
    test: Optional[ProblemDetail] = None
    device: Optional[Device] = None
    result: Optional[ExecutionResult] = None
    message: Optional[Message] = None


class Problems(BaseModel):
    __root__: List[Problem]


class UniqueProblem(BaseModel):
    """
    A collection of one or more problems, grouped by their result.
    """

    message: Optional[Message] = None
    problems: Optional[Problems] = None


class UniqueProblems(BaseModel):
    __root__: List[UniqueProblem]


class CreateDevicePoolResult(BaseModel):
    """
    Represents the result of a create device pool request.
    """

    devicePool: Optional[DevicePool] = None


class CreateDevicePoolRequest(BaseModel):
    """
    Represents a request to the create device pool operation.
    """

    projectArn: AmazonResourceName
    name: Name
    description: Optional[Message] = None
    rules: Rules
    maxDevices: Optional[Integer] = None


class CreateProjectResult(BaseModel):
    """
    Represents the result of a create project request.
    """

    project: Optional[Project] = None


class CreateTestGridProjectResult(BaseModel):
    testGridProject: Optional[TestGridProject] = None


class CreateTestGridProjectRequest(BaseModel):
    name: ResourceName
    description: Optional[ResourceDescription] = None
    vpcConfig: Optional[TestGridVpcConfig] = None


class CreateUploadResult(BaseModel):
    """
    Represents the result of a create upload request.
    """

    upload: Optional[Upload] = None


class GetAccountSettingsResult(BaseModel):
    """
    Represents the account settings return values from the <code>GetAccountSettings</code> request.
    """

    accountSettings: Optional[AccountSettings] = None


class GetDeviceResult(BaseModel):
    """
    Represents the result of a get device request.
    """

    device: Optional[Device] = None


class GetDevicePoolResult(CreateDevicePoolResult):
    """
    Represents the result of a get device pool request.
    """

    pass


class GetDevicePoolCompatibilityResult(BaseModel):
    """
    Represents the result of describe device pool compatibility request.
    """

    compatibleDevices: Optional[DevicePoolCompatibilityResults] = None
    incompatibleDevices: Optional[DevicePoolCompatibilityResults] = None


class GetDevicePoolCompatibilityRequest(BaseModel):
    """
    Represents a request to the get device pool compatibility operation.
    """

    devicePoolArn: AmazonResourceName
    appArn: Optional[AmazonResourceName] = None
    testType: Optional[TestType] = None
    test: Optional[ScheduleRunTest] = None
    configuration: Optional[ScheduleRunConfiguration] = None


class GetJobResult(BaseModel):
    """
    Represents the result of a get job request.
    """

    job: Optional[Job] = None


class GetProjectResult(CreateProjectResult):
    """
    Represents the result of a get project request.
    """

    pass


class GetRunResult(BaseModel):
    """
    Represents the result of a get run request.
    """

    run: Optional[Run] = None


class GetTestGridProjectResult(CreateTestGridProjectResult):
    pass


class GetTestGridSessionResult(BaseModel):
    testGridSession: Optional[TestGridSession] = None


class GetUploadResult(CreateUploadResult):
    """
    Represents the result of a get upload request.
    """

    pass


class InstallToRemoteAccessSessionResult(BaseModel):
    """
    Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.
    """

    appUpload: Optional[Upload] = None


class ListDeviceInstancesResult(BaseModel):
    deviceInstances: Optional[DeviceInstances] = None
    nextToken: Optional[PaginationToken] = None


class ListDevicePoolsResult(BaseModel):
    """
    Represents the result of a list device pools request.
    """

    devicePools: Optional[DevicePools] = None
    nextToken: Optional[PaginationToken] = None


class ListDevicesResult(BaseModel):
    """
    Represents the result of a list devices operation.
    """

    devices: Optional[Devices] = None
    nextToken: Optional[PaginationToken] = None


class ListJobsResult(BaseModel):
    """
    Represents the result of a list jobs request.
    """

    jobs: Optional[Jobs] = None
    nextToken: Optional[PaginationToken] = None


class ListOfferingPromotionsResult(BaseModel):
    offeringPromotions: Optional[OfferingPromotions] = None
    nextToken: Optional[PaginationToken] = None


class ListProjectsResult(BaseModel):
    """
    Represents the result of a list projects request.
    """

    projects: Optional[Projects] = None
    nextToken: Optional[PaginationToken] = None


class ListRunsResult(BaseModel):
    """
    Represents the result of a list runs request.
    """

    runs: Optional[Runs] = None
    nextToken: Optional[PaginationToken] = None


class ListSamplesResult(BaseModel):
    """
    Represents the result of a list samples request.
    """

    samples: Optional[Samples] = None
    nextToken: Optional[PaginationToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class ListTestGridProjectsResult(BaseModel):
    testGridProjects: Optional[TestGridProjects] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionActionsResult(BaseModel):
    actions: Optional[TestGridSessionActions] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionArtifactsResult(BaseModel):
    artifacts: Optional[TestGridSessionArtifacts] = None
    nextToken: Optional[PaginationToken] = None


class ListTestGridSessionsResult(BaseModel):
    testGridSessions: Optional[TestGridSessions] = None
    nextToken: Optional[PaginationToken] = None


class ListUploadsResult(BaseModel):
    """
    Represents the result of a list uploads request.
    """

    uploads: Optional[Uploads] = None
    nextToken: Optional[PaginationToken] = None


class PurchaseOfferingResult(BaseModel):
    """
    The result of the purchase offering (for example, success or failure).
    """

    offeringTransaction: Optional[OfferingTransaction] = None


class RenewOfferingResult(PurchaseOfferingResult):
    """
    The result of a renewal offering.
    """

    pass


class ScheduleRunResult(GetRunResult):
    """
    Represents the result of a schedule run request.
    """

    pass


class ScheduleRunRequest(BaseModel):
    """
    Represents a request to the schedule run operation.
    """

    projectArn: AmazonResourceName
    appArn: Optional[AmazonResourceName] = None
    devicePoolArn: Optional[AmazonResourceName] = None
    deviceSelectionConfiguration: Optional[DeviceSelectionConfiguration] = None
    name: Optional[Name] = None
    test: ScheduleRunTest
    configuration: Optional[ScheduleRunConfiguration] = None
    executionConfiguration: Optional[ExecutionConfiguration] = None


class StopJobResult(GetJobResult):
    pass


class StopRunResult(GetRunResult):
    """
    Represents the results of your stop run attempt.
    """

    pass


class TagResourceRequest(BaseModel):
    ResourceARN: DeviceFarmArn
    Tags: TagList


class UpdateDevicePoolResult(CreateDevicePoolResult):
    """
    Represents the result of an update device pool request.
    """

    pass


class UpdateDevicePoolRequest(BaseModel):
    """
    Represents a request to the update device pool operation.
    """

    arn: AmazonResourceName
    name: Optional[Name] = None
    description: Optional[Message] = None
    rules: Optional[Rules] = None
    maxDevices: Optional[Integer] = None
    clearMaxDevices: Optional[Boolean] = None


class UpdateProjectResult(CreateProjectResult):
    """
    Represents the result of an update project request.
    """

    pass


class UpdateTestGridProjectResult(CreateTestGridProjectResult):
    pass


class UpdateTestGridProjectRequest(BaseModel):
    projectArn: DeviceFarmArn
    name: Optional[ResourceName] = None
    description: Optional[ResourceDescription] = None
    vpcConfig: Optional[TestGridVpcConfig] = None


class UpdateUploadResult(CreateUploadResult):
    pass


class RemoteAccessSession(BaseModel):
    """
    Represents information about the remote access session.
    """

    arn: Optional[AmazonResourceName] = None
    name: Optional[Name] = None
    created: Optional[DateTime] = None
    status: Optional[ExecutionStatus] = None
    result: Optional[ExecutionResult] = None
    message: Optional[Message] = None
    started: Optional[DateTime] = None
    stopped: Optional[DateTime] = None
    device: Optional[Device] = None
    instanceArn: Optional[AmazonResourceName] = None
    remoteDebugEnabled: Optional[Boolean] = None
    remoteRecordEnabled: Optional[Boolean] = None
    remoteRecordAppArn: Optional[AmazonResourceName] = None
    hostAddress: Optional[HostAddress] = None
    clientId: Optional[ClientId] = None
    billingMethod: Optional[BillingMethod] = None
    deviceMinutes: Optional[DeviceMinutes] = None
    endpoint: Optional[String] = None
    deviceUdid: Optional[String] = None
    interactionMode: Optional[InteractionMode] = None
    skipAppResign: Optional[SkipAppResign1] = None


class OfferingTransactions(BaseModel):
    __root__: List[OfferingTransaction]


class Offerings(BaseModel):
    __root__: List[Offering]


class RemoteAccessSessions(BaseModel):
    __root__: List[RemoteAccessSession]


class CreateRemoteAccessSessionResult(BaseModel):
    """
    Represents the server response from a request to create a remote access session.
    """

    remoteAccessSession: Optional[RemoteAccessSession] = None


class GetRemoteAccessSessionResult(CreateRemoteAccessSessionResult):
    """
    Represents the response from the server that lists detailed information about the remote access session.
    """

    pass


class ListOfferingTransactionsResult(BaseModel):
    """
    Returns the transaction log of the specified offerings.
    """

    offeringTransactions: Optional[OfferingTransactions] = None
    nextToken: Optional[PaginationToken] = None


class ListOfferingsResult(BaseModel):
    """
    Represents the return values of the list of offerings.
    """

    offerings: Optional[Offerings] = None
    nextToken: Optional[PaginationToken] = None


class ListRemoteAccessSessionsResult(BaseModel):
    """
    Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.
    """

    remoteAccessSessions: Optional[RemoteAccessSessions] = None
    nextToken: Optional[PaginationToken] = None


class StopRemoteAccessSessionResult(CreateRemoteAccessSessionResult):
    """
    Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.
    """

    pass

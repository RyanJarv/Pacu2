# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:44+00:00

from __future__ import annotations

from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class InvalidRequestException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class UnauthorizedException(ResourceNotFoundException):
    pass


class ServiceUnavailableException(ResourceNotFoundException):
    pass


class InternalFailureException(ResourceNotFoundException):
    pass


class MethodNotAllowedException(ResourceNotFoundException):
    pass


class UnsupportedDocumentEncodingException(ResourceNotFoundException):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class RequestEntityTooLargeException(ResourceNotFoundException):
    pass


class ThingName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9:_-]+')
    ]


class ShadowName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9:_-]+')
    ]


class DeleteThingShadowRequest(BaseModel):
    """
    The input for the DeleteThingShadow operation.
    """

    pass


class JsonDocument(BaseModel):
    __root__: str


class Topic(JsonDocument):
    pass


class GetRetainedMessageRequest(BaseModel):
    """
    The input for the GetRetainedMessage operation.
    """

    pass


class Payload(JsonDocument):
    pass


class Qos(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1.0)]


class Timestamp(BaseModel):
    __root__: int


class GetThingShadowRequest(BaseModel):
    """
    The input for the GetThingShadow operation.
    """

    pass


class NextToken(JsonDocument):
    pass


class PageSize(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ListNamedShadowsForThingRequest(BaseModel):
    pass


class NamedShadowList(BaseModel):
    __root__: List[ShadowName]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=200.0)]


class ListRetainedMessagesRequest(BaseModel):
    pass


class PayloadSize(Timestamp):
    pass


class Retain(BaseModel):
    __root__: bool


class PublishRequest(BaseModel):
    """
    The input for the Publish operation.
    """

    payload: Optional[Payload] = None


class RetainedMessageSummary(BaseModel):
    """
    Information about a single retained message.
    """

    topic: Optional[Topic] = None
    payloadSize: Optional[PayloadSize] = None
    qos: Optional[Qos] = None
    lastModifiedTime: Optional[Timestamp] = None


class UpdateThingShadowRequest(BaseModel):
    """
    The input for the UpdateThingShadow operation.
    """

    payload: JsonDocument


class DeleteThingShadowResponse(BaseModel):
    """
    The output from the DeleteThingShadow operation.
    """

    payload: JsonDocument


class GetRetainedMessageResponse(BaseModel):
    """
    The output from the GetRetainedMessage operation.
    """

    topic: Optional[Topic] = None
    payload: Optional[Payload] = None
    qos: Optional[Qos] = None
    lastModifiedTime: Optional[Timestamp] = None


class GetThingShadowResponse(BaseModel):
    """
    The output from the GetThingShadow operation.
    """

    payload: Optional[JsonDocument] = None


class ListNamedShadowsForThingResponse(BaseModel):
    results: Optional[NamedShadowList] = None
    nextToken: Optional[NextToken] = None
    timestamp: Optional[Timestamp] = None


class UpdateThingShadowResponse(GetThingShadowResponse):
    """
    The output from the UpdateThingShadow operation.
    """

    pass


class RetainedMessageList(BaseModel):
    __root__: List[RetainedMessageSummary]


class ListRetainedMessagesResponse(BaseModel):
    retainedTopics: Optional[RetainedMessageList] = None
    nextToken: Optional[NextToken] = None

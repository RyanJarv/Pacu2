# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:25+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class InvalidInputException(BaseModel):
    __root__: Any


class NoSuchEntityException(InvalidInputException):
    pass


class LimitExceededException(InvalidInputException):
    pass


class ServiceFailureException(InvalidInputException):
    pass


class EntityAlreadyExistsException(InvalidInputException):
    pass


class UnmodifiableEntityException(InvalidInputException):
    pass


class PolicyNotAttachableException(InvalidInputException):
    pass


class InvalidUserTypeException(InvalidInputException):
    pass


class EntityTemporarilyUnmodifiableException(InvalidInputException):
    pass


class PasswordPolicyViolationException(InvalidInputException):
    pass


class ConcurrentModificationException(InvalidInputException):
    pass


class ClientIDType(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class ThumbprintType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description="<p>Contains a thumbprint for an identity provider's server certificate.</p> <p>The identity provider's server certificate thumbprint is the hex-encoded SHA-1 hash value of the self-signed X.509 certificate. This thumbprint is used by the domain where the OpenID Connect provider makes its keys available. The thumbprint is always a 40-character string.</p>",
            max_length=40,
            min_length=40,
        ),
    ]


class MalformedPolicyDocumentException(InvalidInputException):
    pass


class ServiceNotSupportedException(InvalidInputException):
    pass


class DeleteConflictException(InvalidInputException):
    pass


class InvalidAuthenticationCodeException(InvalidInputException):
    pass


class ReportGenerationLimitExceededException(InvalidInputException):
    pass


class EntityType(Enum):
    User = 'User'
    Role = 'Role'
    Group = 'Group'
    LocalManagedPolicy = 'LocalManagedPolicy'
    AWSManagedPolicy = 'AWSManagedPolicy'


class PolicyDocumentType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=131072,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class CredentialReportNotPresentException(InvalidInputException):
    pass


class CredentialReportExpiredException(InvalidInputException):
    pass


class CredentialReportNotReadyException(InvalidInputException):
    pass


class UnrecognizedPublicKeyEncodingException(InvalidInputException):
    pass


class ServiceNamespaceType(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[\\w-]*')]


class ActionNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=3)]


class ResourceNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class PolicyEvaluationException(InvalidInputException):
    pass


class TagKeyType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=128, min_length=1, regex='[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]+'),
    ]


class UpdateRoleResponse(BaseModel):
    pass


class InvalidPublicKeyException(InvalidInputException):
    pass


class DuplicateSSHPublicKeyException(InvalidInputException):
    pass


class MalformedCertificateException(InvalidInputException):
    pass


class KeyPairMismatchException(InvalidInputException):
    pass


class InvalidCertificateException(InvalidInputException):
    pass


class DuplicateCertificateException(InvalidInputException):
    pass


class AccessAdvisorUsageGranularityType(Enum):
    SERVICE_LEVEL = 'SERVICE_LEVEL'
    ACTION_LEVEL = 'ACTION_LEVEL'


class ServiceNameType(BaseModel):
    __root__: str


class StringType(ServiceNameType):
    pass


class OrganizationsEntityPathType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=427,
            min_length=19,
            regex='^o-[0-9a-z]{10,32}\\/r-[0-9a-z]{4,32}[0-9a-z-\\/]*',
        ),
    ]


class DateType(BaseModel):
    __root__: datetime


class IntegerType(BaseModel):
    __root__: int


class AccessDetail(BaseModel):
    """
    <p>An object that contains details about when a principal in the reported Organizations entity last attempted to access an Amazon Web Services service. A principal can be an IAM user, an IAM role, or the Amazon Web Services account root user within the reported Organizations entity.</p> <p>This data type is a response element in the <a>GetOrganizationsAccessReport</a> operation.</p>
    """

    ServiceName: ServiceNameType
    ServiceNamespace: ServiceNamespaceType
    Region: Optional[StringType] = None
    EntityPath: Optional[OrganizationsEntityPathType] = None
    LastAuthenticatedTime: Optional[DateType] = None
    TotalAuthenticatedEntities: Optional[IntegerType] = None


class AccessDetails(BaseModel):
    __root__: List[AccessDetail]


class UserNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[\\w+=,.@-]+')]


class AccessKeyIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=16, regex='[\\w]+')]


class StatusType(Enum):
    Active = 'Active'
    Inactive = 'Inactive'


class AccessKeySecretType(BaseModel):
    __root__: SecretStr


class AccessKey(BaseModel):
    """
    <p>Contains information about an Amazon Web Services access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> operations. </p> <note> <p>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key.</p> </note>
    """

    UserName: UserNameType
    AccessKeyId: AccessKeyIdType
    Status: StatusType
    SecretAccessKey: AccessKeySecretType
    CreateDate: Optional[DateType] = None


class AccessKeyLastUsed(BaseModel):
    """
    <p>Contains information about the last time an Amazon Web Services access key was used since IAM began tracking this information on April 22, 2015.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> operation.</p>
    """

    LastUsedDate: DateType
    ServiceName: StringType
    Region: StringType


class AccessKeyMetadata1(BaseModel):
    """
    <p>Contains information about an Amazon Web Services access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>
    """

    UserName: Optional[UserNameType] = None
    AccessKeyId: Optional[AccessKeyIdType] = None
    Status: Optional[StatusType] = None
    CreateDate: Optional[DateType] = None


class ActionNameListType(BaseModel):
    __root__: List[ActionNameType]


class ArnType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='<p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>',
            max_length=2048,
            min_length=20,
        ),
    ]


class AddClientIDToOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    ClientID: ClientIDType


class InstanceProfileNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w+=,.@-]+')]


class RoleNameType(UserNameType):
    pass


class AddRoleToInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    RoleName: RoleNameType


class GroupNameType(InstanceProfileNameType):
    pass


class ExistingUserNameType(InstanceProfileNameType):
    pass


class AddUserToGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserName: ExistingUserNameType


class ArnListType(BaseModel):
    __root__: List[ArnType]


class AttachGroupPolicyRequest(BaseModel):
    GroupName: GroupNameType
    PolicyArn: ArnType


class AttachRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyArn: ArnType


class AttachUserPolicyRequest(BaseModel):
    UserName: UserNameType
    PolicyArn: ArnType


class PermissionsBoundaryAttachmentType(Enum):
    PermissionsBoundaryPolicy = 'PermissionsBoundaryPolicy'


class AttachedPermissionsBoundary(BaseModel):
    """
    <p>Contains information about an attached permissions boundary.</p> <p>An attached permissions boundary is a managed policy that has been attached to a user or role to set the permissions boundary.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
    """

    PermissionsBoundaryType: Optional[PermissionsBoundaryAttachmentType] = None
    PermissionsBoundaryArn: Optional[ArnType] = None


class PolicyNameType(InstanceProfileNameType):
    pass


class AttachedPolicy(BaseModel):
    """
    <p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    PolicyName: Optional[PolicyNameType] = None
    PolicyArn: Optional[ArnType] = None


class BootstrapDatum(AccessKeySecretType):
    pass


class PasswordType(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=128,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class ChangePasswordRequest(BaseModel):
    OldPassword: PasswordType
    NewPassword: PasswordType


class ColumnNumber(IntegerType):
    pass


class ContextKeyNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=5)]


class ContextKeyTypeEnum(Enum):
    string = 'string'
    stringList = 'stringList'
    numeric = 'numeric'
    numericList = 'numericList'
    boolean = 'boolean'
    booleanList = 'booleanList'
    ip = 'ip'
    ipList = 'ipList'
    binary = 'binary'
    binaryList = 'binaryList'
    date = 'date'
    dateList = 'dateList'


class ContextKeyNamesResultListType(BaseModel):
    __root__: List[ContextKeyNameType]


class ContextKeyValueType(ServiceNameType):
    pass


class CreateAccessKeyRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None


class AccountAliasType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63, min_length=3, regex='^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$'
        ),
    ]


class CreateAccountAliasRequest(BaseModel):
    AccountAlias: AccountAliasType


class PathType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=512,
            min_length=1,
            regex='(\\u002F)|(\\u002F[\\u0021-\\u007F]+\\u002F)',
        ),
    ]


class CreateGroupRequest(BaseModel):
    Path: Optional[PathType] = None
    GroupName: GroupNameType


class BooleanType(BaseModel):
    __root__: bool


class CreateLoginProfileRequest(BaseModel):
    UserName: UserNameType
    Password: PasswordType
    PasswordResetRequired: Optional[BooleanType] = None


class LoginProfile(BaseModel):
    """
    <p>Contains the user name and password create date for a user.</p> <p> This data type is used as a response element in the <a>CreateLoginProfile</a> and <a>GetLoginProfile</a> operations. </p>
    """

    UserName: UserNameType
    CreateDate: DateType
    PasswordResetRequired: Optional[BooleanType] = None


class OpenIDConnectProviderUrlType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            description='Contains a URL that specifies the endpoint for an OpenID Connect provider.',
            max_length=255,
            min_length=1,
        ),
    ]


class ClientIDListType(BaseModel):
    __root__: List[ClientIDType]


class ThumbprintListType(BaseModel):
    """
    Contains a list of thumbprints of identity provider server certificates.
    """

    __root__: Annotated[
        List[ThumbprintType],
        Field(
            description='Contains a list of thumbprints of identity provider server certificates.'
        ),
    ]


class PolicyPathType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='((/[A-Za-z0-9\\.,\\+@=_-]+)*)/')
    ]


class PolicyDescriptionType(BaseModel):
    __root__: Annotated[str, Field(max_length=1000)]


class CreatePolicyVersionRequest(BaseModel):
    PolicyArn: ArnType
    PolicyDocument: PolicyDocumentType
    SetAsDefault: Optional[BooleanType] = None


class RoleDescriptionType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1000, regex='[\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*')
    ]


class RoleMaxSessionDurationType(BaseModel):
    __root__: Annotated[int, Field(ge=3600.0, le=43200.0)]


class SAMLMetadataDocumentType(BaseModel):
    __root__: Annotated[str, Field(max_length=10000000, min_length=1000)]


class SAMLProviderNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w._-]+')]


class CustomSuffixType(UserNameType):
    pass


class CreateServiceLinkedRoleRequest(BaseModel):
    AWSServiceName: GroupNameType
    Description: Optional[RoleDescriptionType] = None
    CustomSuffix: Optional[CustomSuffixType] = None


class ServiceName2(ServiceNameType):
    pass


class CreateServiceSpecificCredentialRequest(BaseModel):
    UserName: UserNameType
    ServiceName: ServiceName2


class VirtualMFADeviceName(BaseModel):
    __root__: Annotated[str, Field(min_length=1, regex='[\\w+=,.@-]+')]


class SerialNumberType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=9, regex='[\\w+=/:,.@-]+')
    ]


class DeactivateMFADeviceRequest(BaseModel):
    UserName: ExistingUserNameType
    SerialNumber: SerialNumberType


class DeleteAccessKeyRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    AccessKeyId: AccessKeyIdType


class DeleteAccountAliasRequest(BaseModel):
    AccountAlias: AccountAliasType


class DeleteGroupPolicyRequest(BaseModel):
    GroupName: GroupNameType
    PolicyName: PolicyNameType


class DeleteGroupRequest(BaseModel):
    GroupName: GroupNameType


class DeleteInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType


class DeleteLoginProfileRequest(BaseModel):
    UserName: UserNameType


class DeleteOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType


class DeletePolicyRequest(BaseModel):
    PolicyArn: ArnType


class PolicyVersionIdType(BaseModel):
    __root__: Annotated[str, Field(regex='v[1-9][0-9]*(\\.[A-Za-z0-9-]*)?')]


class DeletePolicyVersionRequest(BaseModel):
    PolicyArn: ArnType
    VersionId: PolicyVersionIdType


class DeleteRolePermissionsBoundaryRequest(BaseModel):
    RoleName: RoleNameType


class DeleteRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyName: PolicyNameType


class DeleteRoleRequest(BaseModel):
    RoleName: RoleNameType


class DeleteSAMLProviderRequest(BaseModel):
    SAMLProviderArn: ArnType


class PublicKeyIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=20, regex='[\\w]+')]


class DeleteSSHPublicKeyRequest(BaseModel):
    UserName: UserNameType
    SSHPublicKeyId: PublicKeyIdType


class ServerCertificateNameType(InstanceProfileNameType):
    pass


class DeleteServerCertificateRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType


class DeleteServiceLinkedRoleRequest(BaseModel):
    RoleName: RoleNameType


class DeletionTaskIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=1000, min_length=1)]


class ServiceSpecificCredentialId(PublicKeyIdType):
    pass


class DeleteServiceSpecificCredentialRequest(BaseModel):
    UserName: Optional[UserNameType] = None
    ServiceSpecificCredentialId: ServiceSpecificCredentialId


class CertificateIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=24, regex='[\\w]+')]


class DeleteSigningCertificateRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    CertificateId: CertificateIdType


class DeleteUserPermissionsBoundaryRequest(BaseModel):
    UserName: UserNameType


class DeleteUserPolicyRequest(BaseModel):
    UserName: ExistingUserNameType
    PolicyName: PolicyNameType


class DeleteUserRequest(BaseModel):
    UserName: ExistingUserNameType


class DeleteVirtualMFADeviceRequest(BaseModel):
    SerialNumber: SerialNumberType


class ReasonType(PolicyDescriptionType):
    pass


class DeletionTaskStatusType(Enum):
    SUCCEEDED = 'SUCCEEDED'
    IN_PROGRESS = 'IN_PROGRESS'
    FAILED = 'FAILED'
    NOT_STARTED = 'NOT_STARTED'


class DetachGroupPolicyRequest(BaseModel):
    GroupName: GroupNameType
    PolicyArn: ArnType


class DetachRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyArn: ArnType


class DetachUserPolicyRequest(BaseModel):
    UserName: UserNameType
    PolicyArn: ArnType


class AuthenticationCodeType(BaseModel):
    __root__: Annotated[str, Field(max_length=6, min_length=6, regex='[\\d]+')]


class EnableMFADeviceRequest(BaseModel):
    UserName: ExistingUserNameType
    SerialNumber: SerialNumberType
    AuthenticationCode1: AuthenticationCodeType
    AuthenticationCode2: AuthenticationCodeType


class PolicyOwnerEntityType(Enum):
    USER = 'USER'
    ROLE = 'ROLE'
    GROUP = 'GROUP'


class IdType(AccessKeyIdType):
    pass


class ErrorDetails(BaseModel):
    """
    <p>Contains information about the reason that the operation failed.</p> <p>This data type is used as a response element in the <a>GetOrganizationsAccessReport</a>, <a>GetServiceLastAccessedDetails</a>, and <a>GetServiceLastAccessedDetailsWithEntities</a> operations.</p>
    """

    Message: StringType
    Code: StringType


class PolicyEvaluationDecisionType(Enum):
    allowed = 'allowed'
    explicitDeny = 'explicitDeny'
    implicitDeny = 'implicitDeny'


class EvalDecisionDetailsType(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class EvalDecisionSourceType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=3)]


class OrganizationsDecisionDetail(BaseModel):
    """
    Contains information about the effect that Organizations has on a policy simulation.
    """

    AllowedByOrganizations: Optional[BooleanType] = None


class PermissionsBoundaryDecisionDetail(BaseModel):
    """
    Contains information about the effect that a permissions boundary has on a policy simulation when the boundary is applied to an IAM entity.
    """

    AllowedByPermissionsBoundary: Optional[BooleanType] = None


class ReportStateType(Enum):
    STARTED = 'STARTED'
    INPROGRESS = 'INPROGRESS'
    COMPLETE = 'COMPLETE'


class ReportStateDescriptionType(ServiceNameType):
    pass


class OrganizationsPolicyIdType(BaseModel):
    __root__: Annotated[str, Field(regex='^p-[0-9a-zA-Z_]{8,128}$')]


class GenerateOrganizationsAccessReportRequest(BaseModel):
    EntityPath: OrganizationsEntityPathType
    OrganizationsPolicyId: Optional[OrganizationsPolicyIdType] = None


class JobIDType(BaseModel):
    __root__: Annotated[str, Field(max_length=36, min_length=36)]


class GenerateServiceLastAccessedDetailsRequest(BaseModel):
    Arn: ArnType
    Granularity: Optional[AccessAdvisorUsageGranularityType] = None


class GetAccessKeyLastUsedRequest(BaseModel):
    AccessKeyId: AccessKeyIdType


class EntityListType(BaseModel):
    __root__: List[EntityType]


class MaxItemsType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class MarkerType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=320, min_length=1, regex='[\\u0020-\\u00FF]+')
    ]


class GetAccountAuthorizationDetailsRequest(BaseModel):
    Filter: Optional[EntityListType] = None
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None


class ResponseMarkerType(ServiceNameType):
    pass


class SummaryMapType(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class SimulationPolicyListType(BaseModel):
    __root__: List[PolicyDocumentType]


class GetContextKeysForCustomPolicyRequest(BaseModel):
    PolicyInputList: SimulationPolicyListType


class GetContextKeysForPrincipalPolicyRequest(BaseModel):
    PolicySourceArn: ArnType
    PolicyInputList: Optional[SimulationPolicyListType] = None


class ReportContentType(ServiceNameType):
    pass


class ReportFormatType(Enum):
    text_csv = 'text/csv'


class GetGroupPolicyRequest(BaseModel):
    GroupName: GroupNameType
    PolicyName: PolicyNameType


class GetGroupRequest(BaseModel):
    GroupName: GroupNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class GetInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType


class GetLoginProfileRequest(BaseModel):
    UserName: UserNameType


class GetOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType


class SortKeyType(Enum):
    SERVICE_NAMESPACE_ASCENDING = 'SERVICE_NAMESPACE_ASCENDING'
    SERVICE_NAMESPACE_DESCENDING = 'SERVICE_NAMESPACE_DESCENDING'
    LAST_AUTHENTICATED_TIME_ASCENDING = 'LAST_AUTHENTICATED_TIME_ASCENDING'
    LAST_AUTHENTICATED_TIME_DESCENDING = 'LAST_AUTHENTICATED_TIME_DESCENDING'


class GetOrganizationsAccessReportRequest(BaseModel):
    JobId: JobIDType
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None
    SortKey: Optional[SortKeyType] = None


class JobStatusType(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'


class GetPolicyRequest(BaseModel):
    PolicyArn: ArnType


class GetPolicyVersionRequest(BaseModel):
    PolicyArn: ArnType
    VersionId: PolicyVersionIdType


class GetRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyName: PolicyNameType


class GetRoleRequest(BaseModel):
    RoleName: RoleNameType


class GetSAMLProviderRequest(BaseModel):
    SAMLProviderArn: ArnType


class EncodingType(Enum):
    SSH = 'SSH'
    PEM = 'PEM'


class GetSSHPublicKeyRequest(BaseModel):
    UserName: UserNameType
    SSHPublicKeyId: PublicKeyIdType
    Encoding: EncodingType


class GetServerCertificateRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType


class GetServiceLastAccessedDetailsRequest(BaseModel):
    JobId: JobIDType
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None


class GetServiceLastAccessedDetailsWithEntitiesRequest(BaseModel):
    JobId: JobIDType
    ServiceNamespace: ServiceNamespaceType
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None


class GetServiceLinkedRoleDeletionStatusRequest(BaseModel):
    DeletionTaskId: DeletionTaskIdType


class GetUserPolicyRequest(BaseModel):
    UserName: ExistingUserNameType
    PolicyName: PolicyNameType


class GetUserRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None


class AttachedPoliciesListType(BaseModel):
    __root__: List[AttachedPolicy]


class LineNumber(IntegerType):
    pass


class ListAccessKeysRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class AccessKeyMetadataListType(BaseModel):
    """
    <p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>
    """

    __root__: Annotated[
        List[AccessKeyMetadata1],
        Field(
            description='<p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>'
        ),
    ]


class ListAccountAliasesRequest(BaseModel):
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class AccountAliasListType(BaseModel):
    __root__: List[AccountAliasType]


class ListAttachedGroupPoliciesRequest(BaseModel):
    GroupName: GroupNameType
    PathPrefix: Optional[PolicyPathType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListAttachedRolePoliciesRequest(BaseModel):
    RoleName: RoleNameType
    PathPrefix: Optional[PolicyPathType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListAttachedUserPoliciesRequest(BaseModel):
    UserName: UserNameType
    PathPrefix: Optional[PolicyPathType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class PolicyUsageType(Enum):
    """
    <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
    """

    PermissionsPolicy = 'PermissionsPolicy'
    PermissionsBoundary = 'PermissionsBoundary'


class ListEntitiesForPolicyRequest(BaseModel):
    PolicyArn: ArnType
    EntityFilter: Optional[EntityType] = None
    PathPrefix: Optional[PathType] = None
    PolicyUsageFilter: Optional[PolicyUsageType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListGroupPoliciesRequest(BaseModel):
    GroupName: GroupNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class PolicyNameListType(BaseModel):
    """
    <p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> operation.</p>
    """

    __root__: Annotated[
        List[PolicyNameType],
        Field(
            description='<p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> operation.</p>'
        ),
    ]


class ListGroupsForUserRequest(BaseModel):
    UserName: ExistingUserNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class PathPrefixType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='\\u002F[\\u0021-\\u007F]*')
    ]


class ListGroupsRequest(BaseModel):
    PathPrefix: Optional[PathPrefixType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListInstanceProfileTagsRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListInstanceProfilesForRoleRequest(BaseModel):
    RoleName: RoleNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListInstanceProfilesRequest(BaseModel):
    PathPrefix: Optional[PathPrefixType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListMFADeviceTagsRequest(BaseModel):
    SerialNumber: SerialNumberType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListMFADevicesRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListOpenIDConnectProviderTagsRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListOpenIDConnectProvidersRequest(BaseModel):
    pass


class ServiceNamespaceListType(BaseModel):
    __root__: Annotated[List[ServiceNamespaceType], Field(max_items=200, min_items=1)]


class ListPoliciesGrantingServiceAccessRequest(BaseModel):
    Marker: Optional[MarkerType] = None
    Arn: ArnType
    ServiceNamespaces: ServiceNamespaceListType


class PolicyScopeType(Enum):
    All = 'All'
    AWS = 'AWS'
    Local = 'Local'


class ListPoliciesRequest(BaseModel):
    Scope: Optional[PolicyScopeType] = None
    OnlyAttached: Optional[BooleanType] = None
    PathPrefix: Optional[PolicyPathType] = None
    PolicyUsageFilter: Optional[PolicyUsageType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListPolicyTagsRequest(BaseModel):
    PolicyArn: ArnType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListPolicyVersionsRequest(BaseModel):
    PolicyArn: ArnType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListRolePoliciesRequest(BaseModel):
    RoleName: RoleNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListRoleTagsRequest(BaseModel):
    RoleName: RoleNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListRolesRequest(BaseModel):
    PathPrefix: Optional[PathPrefixType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListSAMLProviderTagsRequest(BaseModel):
    SAMLProviderArn: ArnType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListSAMLProvidersRequest(BaseModel):
    pass


class ListSSHPublicKeysRequest(BaseModel):
    UserName: Optional[UserNameType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListServerCertificateTagsRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListServerCertificatesRequest(BaseModel):
    PathPrefix: Optional[PathPrefixType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListServiceSpecificCredentialsRequest(BaseModel):
    UserName: Optional[UserNameType] = None
    ServiceName: Optional[ServiceName2] = None


class ListSigningCertificatesRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListUserPoliciesRequest(BaseModel):
    UserName: ExistingUserNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListUserTagsRequest(BaseModel):
    UserName: ExistingUserNameType
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class ListUsersRequest(BaseModel):
    PathPrefix: Optional[PathPrefixType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class AssignmentStatusType(Enum):
    Assigned = 'Assigned'
    Unassigned = 'Unassigned'
    Any = 'Any'


class ListVirtualMFADevicesRequest(BaseModel):
    AssignmentStatus: Optional[AssignmentStatusType] = None
    Marker: Optional[MarkerType] = None
    MaxItems: Optional[MaxItemsType] = None


class MFADevice(BaseModel):
    """
    <p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> operation.</p>
    """

    UserName: UserNameType
    SerialNumber: SerialNumberType
    EnableDate: DateType


class AttachmentCountType(IntegerType):
    pass


class OpenIDConnectProviderListEntry(BaseModel):
    """
    Contains the Amazon Resource Name (ARN) for an IAM OpenID Connect provider.
    """

    Arn: Optional[ArnType] = None


class MinimumPasswordLengthType(BaseModel):
    __root__: Annotated[int, Field(ge=6.0, le=128.0)]


class MaxPasswordAgeType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1095.0)]


class PasswordReusePreventionType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=24.0)]


class BooleanObjectType(BooleanType):
    pass


class PolicyDetail(BaseModel):
    """
    <p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
    """

    PolicyName: Optional[PolicyNameType] = None
    PolicyDocument: Optional[PolicyDocumentType] = None


class PolicyType(Enum):
    INLINE = 'INLINE'
    MANAGED = 'MANAGED'


class EntityNameType(InstanceProfileNameType):
    pass


class PolicyGrantingServiceAccess(BaseModel):
    """
    <p>Contains details about the permissions policies that are attached to the specified identity (user, group, or role).</p> <p>This data type is an element of the <a>ListPoliciesGrantingServiceAccessEntry</a> object.</p>
    """

    PolicyName: PolicyNameType
    PolicyType: PolicyType
    PolicyArn: Optional[ArnType] = None
    EntityType: Optional[PolicyOwnerEntityType] = None
    EntityName: Optional[EntityNameType] = None


class PolicyGroup(BaseModel):
    """
    <p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    GroupName: Optional[GroupNameType] = None
    GroupId: Optional[IdType] = None


class PolicyIdentifierType(ServiceNameType):
    pass


class PolicyRole(BaseModel):
    """
    <p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    RoleName: Optional[RoleNameType] = None
    RoleId: Optional[IdType] = None


class PolicySourceType(Enum):
    user = 'user'
    group = 'group'
    role = 'role'
    aws_managed = 'aws-managed'
    user_managed = 'user-managed'
    resource = 'resource'
    none = 'none'


class PolicyUser(BaseModel):
    """
    <p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    UserName: Optional[UserNameType] = None
    UserId: Optional[IdType] = None


class Position(BaseModel):
    """
    <p>Contains the row and column of a location of a <code>Statement</code> element in a policy document.</p> <p>This data type is used as a member of the <code> <a>Statement</a> </code> type.</p>
    """

    Line: Optional[LineNumber] = None
    Column: Optional[ColumnNumber] = None


class PutGroupPolicyRequest(BaseModel):
    GroupName: GroupNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class PutRolePermissionsBoundaryRequest(BaseModel):
    RoleName: RoleNameType
    PermissionsBoundary: ArnType


class PutRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class PutUserPermissionsBoundaryRequest(BaseModel):
    UserName: UserNameType
    PermissionsBoundary: ArnType


class PutUserPolicyRequest(BaseModel):
    UserName: ExistingUserNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class RegionNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=100, min_length=1)]


class RemoveClientIDFromOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    ClientID: ClientIDType


class RemoveRoleFromInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    RoleName: RoleNameType


class RemoveUserFromGroupRequest(BaseModel):
    GroupName: GroupNameType
    UserName: ExistingUserNameType


class ResetServiceSpecificCredentialRequest(BaseModel):
    UserName: Optional[UserNameType] = None
    ServiceSpecificCredentialId: ServiceSpecificCredentialId


class ResourceHandlingOptionType(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class ResourceNameListType(BaseModel):
    __root__: List[ResourceNameType]


class ResyncMFADeviceRequest(BaseModel):
    UserName: ExistingUserNameType
    SerialNumber: SerialNumberType
    AuthenticationCode1: AuthenticationCodeType
    AuthenticationCode2: AuthenticationCodeType


class RoleLastUsed(BaseModel):
    """
    <p>Contains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions where data is tracked</a> in the <i>IAM User Guide</i>.</p> <p>This data type is returned as a response element in the <a>GetRole</a> and <a>GetAccountAuthorizationDetails</a> operations.</p>
    """

    LastUsedDate: Optional[DateType] = None
    Region: Optional[StringType] = None


class RoleUsageType(BaseModel):
    """
    <p>An object that contains details about how a service-linked role is used, if that information is returned by the service.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
    """

    Region: Optional[RegionNameType] = None
    Resources: Optional[ArnListType] = None


class SAMLProviderListEntry(BaseModel):
    """
    Contains the list of SAML providers for this account.
    """

    Arn: Optional[ArnType] = None
    ValidUntil: Optional[DateType] = None
    CreateDate: Optional[DateType] = None


class PublicKeyFingerprintType(BaseModel):
    __root__: Annotated[str, Field(max_length=48, min_length=48, regex='[:\\w]+')]


class PublicKeyMaterialType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=16384,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class SSHPublicKeyMetadata(BaseModel):
    """
    <p>Contains information about an SSH public key, without the key's body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> operation.</p>
    """

    UserName: UserNameType
    SSHPublicKeyId: PublicKeyIdType
    Status: StatusType
    UploadDate: DateType


class ServerCertificateMetadata(BaseModel):
    """
    <p>Contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> operations. </p>
    """

    Path: PathType
    ServerCertificateName: ServerCertificateNameType
    ServerCertificateId: IdType
    Arn: ArnType
    UploadDate: Optional[DateType] = None
    Expiration: Optional[DateType] = None


class CertificateBodyType(PublicKeyMaterialType):
    pass


class CertificateChainType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2097152,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class ServiceUserName(BaseModel):
    __root__: Annotated[str, Field(max_length=200, min_length=17, regex='[\\w+=,.@-]+')]


class ServicePassword(AccessKeySecretType):
    pass


class ServiceSpecificCredentialMetadata(BaseModel):
    """
    Contains additional details about a service-specific credential.
    """

    UserName: UserNameType
    Status: StatusType
    ServiceUserName: ServiceUserName
    CreateDate: DateType
    ServiceSpecificCredentialId: ServiceSpecificCredentialId
    ServiceName: ServiceName2


class SetDefaultPolicyVersionRequest(BaseModel):
    PolicyArn: ArnType
    VersionId: PolicyVersionIdType


class GlobalEndpointTokenVersion(Enum):
    v1Token = 'v1Token'
    v2Token = 'v2Token'


class SetSecurityTokenServicePreferencesRequest(BaseModel):
    GlobalEndpointTokenVersion: GlobalEndpointTokenVersion


class SigningCertificate(BaseModel):
    """
    <p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> operations. </p>
    """

    UserName: UserNameType
    CertificateId: CertificateIdType
    CertificateBody: CertificateBodyType
    Status: StatusType
    UploadDate: Optional[DateType] = None


class Statement(BaseModel):
    """
    <p>Contains a reference to a <code>Statement</code> element in a policy document that determines the result of the simulation.</p> <p>This data type is used by the <code>MatchedStatements</code> member of the <code> <a>EvaluationResult</a> </code> type.</p>
    """

    SourcePolicyId: Optional[PolicyIdentifierType] = None
    SourcePolicyType: Optional[PolicySourceType] = None
    StartPosition: Optional[Position] = None
    EndPosition: Optional[Position] = None


class TagValueType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=256, min_length=0, regex='[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*'),
    ]


class TrackedActionLastAccessed(BaseModel):
    """
    <p>Contains details about the most recent attempt to access an action within the service.</p> <p>This data type is used as a response element in the <a>GetServiceLastAccessedDetails</a> operation.</p>
    """

    ActionName: Optional[StringType] = None
    LastAccessedEntity: Optional[ArnType] = None
    LastAccessedTime: Optional[DateType] = None
    LastAccessedRegion: Optional[StringType] = None


class TagKeyListType(BaseModel):
    __root__: Annotated[List[TagKeyType], Field(max_items=50)]


class UntagInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    TagKeys: TagKeyListType


class UntagMFADeviceRequest(BaseModel):
    SerialNumber: SerialNumberType
    TagKeys: TagKeyListType


class UntagOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    TagKeys: TagKeyListType


class UntagPolicyRequest(BaseModel):
    PolicyArn: ArnType
    TagKeys: TagKeyListType


class UntagRoleRequest(BaseModel):
    RoleName: RoleNameType
    TagKeys: TagKeyListType


class UntagSAMLProviderRequest(BaseModel):
    SAMLProviderArn: ArnType
    TagKeys: TagKeyListType


class UntagServerCertificateRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType
    TagKeys: TagKeyListType


class UntagUserRequest(BaseModel):
    UserName: ExistingUserNameType
    TagKeys: TagKeyListType


class UpdateAccessKeyRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    AccessKeyId: AccessKeyIdType
    Status: StatusType


class UpdateAccountPasswordPolicyRequest(BaseModel):
    MinimumPasswordLength: Optional[MinimumPasswordLengthType] = None
    RequireSymbols: Optional[BooleanType] = None
    RequireNumbers: Optional[BooleanType] = None
    RequireUppercaseCharacters: Optional[BooleanType] = None
    RequireLowercaseCharacters: Optional[BooleanType] = None
    AllowUsersToChangePassword: Optional[BooleanType] = None
    MaxPasswordAge: Optional[MaxPasswordAgeType] = None
    PasswordReusePrevention: Optional[PasswordReusePreventionType] = None
    HardExpiry: Optional[BooleanObjectType] = None


class UpdateAssumeRolePolicyRequest(BaseModel):
    RoleName: RoleNameType
    PolicyDocument: PolicyDocumentType


class UpdateGroupRequest(BaseModel):
    GroupName: GroupNameType
    NewPath: Optional[PathType] = None
    NewGroupName: Optional[GroupNameType] = None


class UpdateLoginProfileRequest(BaseModel):
    UserName: UserNameType
    Password: Optional[PasswordType] = None
    PasswordResetRequired: Optional[BooleanObjectType] = None


class UpdateOpenIDConnectProviderThumbprintRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    ThumbprintList: ThumbprintListType


class UpdateRoleDescriptionRequest(BaseModel):
    RoleName: RoleNameType
    Description: RoleDescriptionType


class UpdateRoleRequest(BaseModel):
    RoleName: RoleNameType
    Description: Optional[RoleDescriptionType] = None
    MaxSessionDuration: Optional[RoleMaxSessionDurationType] = None


class UpdateSAMLProviderRequest(BaseModel):
    SAMLMetadataDocument: SAMLMetadataDocumentType
    SAMLProviderArn: ArnType


class UpdateSSHPublicKeyRequest(BaseModel):
    UserName: UserNameType
    SSHPublicKeyId: PublicKeyIdType
    Status: StatusType


class UpdateServerCertificateRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType
    NewPath: Optional[PathType] = None
    NewServerCertificateName: Optional[ServerCertificateNameType] = None


class UpdateServiceSpecificCredentialRequest(BaseModel):
    UserName: Optional[UserNameType] = None
    ServiceSpecificCredentialId: ServiceSpecificCredentialId
    Status: StatusType


class UpdateSigningCertificateRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    CertificateId: CertificateIdType
    Status: StatusType


class UpdateUserRequest(BaseModel):
    UserName: ExistingUserNameType
    NewPath: Optional[PathType] = None
    NewUserName: Optional[UserNameType] = None


class UploadSSHPublicKeyRequest(BaseModel):
    UserName: UserNameType
    SSHPublicKeyBody: PublicKeyMaterialType


class PrivateKeyType(BaseModel):
    __root__: Annotated[
        SecretStr,
        Field(
            max_length=16384,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class UploadSigningCertificateRequest(BaseModel):
    UserName: Optional[ExistingUserNameType] = None
    CertificateBody: CertificateBodyType


class GroupNameListType(BaseModel):
    __root__: List[GroupNameType]


class SummaryKeyType(Enum):
    Users = 'Users'
    UsersQuota = 'UsersQuota'
    Groups = 'Groups'
    GroupsQuota = 'GroupsQuota'
    ServerCertificates = 'ServerCertificates'
    ServerCertificatesQuota = 'ServerCertificatesQuota'
    UserPolicySizeQuota = 'UserPolicySizeQuota'
    GroupPolicySizeQuota = 'GroupPolicySizeQuota'
    GroupsPerUserQuota = 'GroupsPerUserQuota'
    SigningCertificatesPerUserQuota = 'SigningCertificatesPerUserQuota'
    AccessKeysPerUserQuota = 'AccessKeysPerUserQuota'
    MFADevices = 'MFADevices'
    MFADevicesInUse = 'MFADevicesInUse'
    AccountMFAEnabled = 'AccountMFAEnabled'
    AccountAccessKeysPresent = 'AccountAccessKeysPresent'
    AccountSigningCertificatesPresent = 'AccountSigningCertificatesPresent'
    AttachedPoliciesPerGroupQuota = 'AttachedPoliciesPerGroupQuota'
    AttachedPoliciesPerRoleQuota = 'AttachedPoliciesPerRoleQuota'
    AttachedPoliciesPerUserQuota = 'AttachedPoliciesPerUserQuota'
    Policies = 'Policies'
    PoliciesQuota = 'PoliciesQuota'
    PolicySizeQuota = 'PolicySizeQuota'
    PolicyVersionsInUse = 'PolicyVersionsInUse'
    PolicyVersionsInUseQuota = 'PolicyVersionsInUseQuota'
    VersionsPerPolicyQuota = 'VersionsPerPolicyQuota'
    GlobalEndpointTokenVersion = 'GlobalEndpointTokenVersion'


class SummaryValueType(IntegerType):
    pass


class CreateAccessKeyResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateAccessKey</a> request.
    """

    AccessKey: AccessKey


class Tag(BaseModel):
    """
    A structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
    """

    Key: TagKeyType
    Value: TagValueType


class CreateLoginProfileResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateLoginProfile</a> request.
    """

    LoginProfile: LoginProfile


class DeleteServiceLinkedRoleResponse(BaseModel):
    DeletionTaskId: DeletionTaskIdType


class GenerateCredentialReportResponse(BaseModel):
    """
    Contains the response to a successful <a>GenerateCredentialReport</a> request.
    """

    State: Optional[ReportStateType] = None
    Description: Optional[ReportStateDescriptionType] = None


class GenerateOrganizationsAccessReportResponse(BaseModel):
    JobId: Optional[JobIDType] = None


class GenerateServiceLastAccessedDetailsResponse(
    GenerateOrganizationsAccessReportResponse
):
    pass


class GetAccessKeyLastUsedResponse(BaseModel):
    """
    Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.
    """

    UserName: Optional[ExistingUserNameType] = None
    AccessKeyLastUsed: Optional[AccessKeyLastUsed] = None


class GetAccountSummaryResponse(BaseModel):
    """
    Contains the response to a successful <a>GetAccountSummary</a> request.
    """

    SummaryMap: Optional[SummaryMapType] = None


class GetContextKeysForPolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a> or <a>GetContextKeysForCustomPolicy</a> request.
    """

    ContextKeyNames: Optional[ContextKeyNamesResultListType] = None


class GetCredentialReportResponse(BaseModel):
    """
    Contains the response to a successful <a>GetCredentialReport</a> request.
    """

    Content: Optional[ReportContentType] = None
    ReportFormat: Optional[ReportFormatType] = None
    GeneratedTime: Optional[DateType] = None


class GetGroupPolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetGroupPolicy</a> request.
    """

    GroupName: GroupNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class GetLoginProfileResponse(CreateLoginProfileResponse):
    """
    Contains the response to a successful <a>GetLoginProfile</a> request.
    """

    pass


class GetOrganizationsAccessReportResponse(BaseModel):
    JobStatus: JobStatusType
    JobCreationDate: DateType
    JobCompletionDate: Optional[DateType] = None
    NumberOfServicesAccessible: Optional[IntegerType] = None
    NumberOfServicesNotAccessed: Optional[IntegerType] = None
    AccessDetails: Optional[AccessDetails] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[MarkerType] = None
    ErrorDetails: Optional[ErrorDetails] = None


class GetRolePolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetRolePolicy</a> request.
    """

    RoleName: RoleNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class GetUserPolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetUserPolicy</a> request.
    """

    UserName: ExistingUserNameType
    PolicyName: PolicyNameType
    PolicyDocument: PolicyDocumentType


class ListAccessKeysResponse(BaseModel):
    """
    Contains the response to a successful <a>ListAccessKeys</a> request.
    """

    AccessKeyMetadata: AccessKeyMetadataListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListAccountAliasesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListAccountAliases</a> request.
    """

    AccountAliases: AccountAliasListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListAttachedGroupPoliciesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListAttachedGroupPolicies</a> request.
    """

    AttachedPolicies: Optional[AttachedPoliciesListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListAttachedRolePoliciesResponse(ListAttachedGroupPoliciesResponse):
    """
    Contains the response to a successful <a>ListAttachedRolePolicies</a> request.
    """

    pass


class ListAttachedUserPoliciesResponse(ListAttachedGroupPoliciesResponse):
    """
    Contains the response to a successful <a>ListAttachedUserPolicies</a> request.
    """

    pass


class ListGroupPoliciesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListGroupPolicies</a> request.
    """

    PolicyNames: PolicyNameListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListRolePoliciesResponse(ListGroupPoliciesResponse):
    """
    Contains the response to a successful <a>ListRolePolicies</a> request.
    """

    pass


class ListUserPoliciesResponse(ListGroupPoliciesResponse):
    """
    Contains the response to a successful <a>ListUserPolicies</a> request.
    """

    pass


class UpdateSAMLProviderResponse(BaseModel):
    """
    Contains the response to a successful <a>UpdateSAMLProvider</a> request.
    """

    SAMLProviderArn: Optional[ArnType] = None


class UploadSigningCertificateResponse(BaseModel):
    """
    Contains the response to a successful <a>UploadSigningCertificate</a> request.
    """

    Certificate: SigningCertificate


class ContextKeyValueListType(BaseModel):
    __root__: List[ContextKeyValueType]


class Group(BaseModel):
    """
    <p>Contains information about an IAM group entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateGroup</a> </p> </li> <li> <p> <a>GetGroup</a> </p> </li> <li> <p> <a>ListGroups</a> </p> </li> </ul>
    """

    Path: PathType
    GroupName: GroupNameType
    GroupId: IdType
    Arn: ArnType
    CreateDate: DateType


class TagListType(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50)]


class CreateInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    Path: Optional[PathType] = None
    Tags: Optional[TagListType] = None


class CreateOpenIDConnectProviderRequest(BaseModel):
    Url: OpenIDConnectProviderUrlType
    ClientIDList: Optional[ClientIDListType] = None
    ThumbprintList: ThumbprintListType
    Tags: Optional[TagListType] = None


class CreatePolicyRequest(BaseModel):
    PolicyName: PolicyNameType
    Path: Optional[PolicyPathType] = None
    PolicyDocument: PolicyDocumentType
    Description: Optional[PolicyDescriptionType] = None
    Tags: Optional[TagListType] = None


class Policy(BaseModel):
    """
    <p>Contains information about a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicy</a>, <a>GetPolicy</a>, and <a>ListPolicies</a> operations. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    PolicyName: Optional[PolicyNameType] = None
    PolicyId: Optional[IdType] = None
    Arn: Optional[ArnType] = None
    Path: Optional[PolicyPathType] = None
    DefaultVersionId: Optional[PolicyVersionIdType] = None
    AttachmentCount: Optional[AttachmentCountType] = None
    PermissionsBoundaryUsageCount: Optional[AttachmentCountType] = None
    IsAttachable: Optional[BooleanType] = None
    Description: Optional[PolicyDescriptionType] = None
    CreateDate: Optional[DateType] = None
    UpdateDate: Optional[DateType] = None
    Tags: Optional[TagListType] = None


class PolicyVersion(BaseModel):
    """
    <p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    Document: Optional[PolicyDocumentType] = None
    VersionId: Optional[PolicyVersionIdType] = None
    IsDefaultVersion: Optional[BooleanType] = None
    CreateDate: Optional[DateType] = None


class CreateRoleRequest(BaseModel):
    Path: Optional[PathType] = None
    RoleName: RoleNameType
    AssumeRolePolicyDocument: PolicyDocumentType
    Description: Optional[RoleDescriptionType] = None
    MaxSessionDuration: Optional[RoleMaxSessionDurationType] = None
    PermissionsBoundary: Optional[ArnType] = None
    Tags: Optional[TagListType] = None


class Role(BaseModel):
    """
    Contains information about an IAM role. This structure is returned as a response element in several API operations that interact with roles.
    """

    Path: PathType
    RoleName: RoleNameType
    RoleId: IdType
    Arn: ArnType
    CreateDate: DateType
    AssumeRolePolicyDocument: Optional[PolicyDocumentType] = None
    Description: Optional[RoleDescriptionType] = None
    MaxSessionDuration: Optional[RoleMaxSessionDurationType] = None
    PermissionsBoundary: Optional[AttachedPermissionsBoundary] = None
    Tags: Optional[TagListType] = None
    RoleLastUsed: Optional[RoleLastUsed] = None


class CreateSAMLProviderRequest(BaseModel):
    SAMLMetadataDocument: SAMLMetadataDocumentType
    Name: SAMLProviderNameType
    Tags: Optional[TagListType] = None


class ServiceSpecificCredential(BaseModel):
    """
    Contains the details of a service-specific credential.
    """

    CreateDate: DateType
    ServiceName: ServiceName2
    ServiceUserName: ServiceUserName
    ServicePassword: ServicePassword
    ServiceSpecificCredentialId: ServiceSpecificCredentialId
    UserName: UserNameType
    Status: StatusType


class CreateUserRequest(BaseModel):
    Path: Optional[PathType] = None
    UserName: UserNameType
    PermissionsBoundary: Optional[ArnType] = None
    Tags: Optional[TagListType] = None


class User(BaseModel):
    """
    <p>Contains information about an IAM user entity.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateUser</a> </p> </li> <li> <p> <a>GetUser</a> </p> </li> <li> <p> <a>ListUsers</a> </p> </li> </ul>
    """

    Path: PathType
    UserName: UserNameType
    UserId: IdType
    Arn: ArnType
    CreateDate: DateType
    PasswordLastUsed: Optional[DateType] = None
    PermissionsBoundary: Optional[AttachedPermissionsBoundary] = None
    Tags: Optional[TagListType] = None


class CreateVirtualMFADeviceRequest(BaseModel):
    Path: Optional[PathType] = None
    VirtualMFADeviceName: VirtualMFADeviceName
    Tags: Optional[TagListType] = None


class VirtualMFADevice(BaseModel):
    """
    Contains information about a virtual MFA device.
    """

    SerialNumber: SerialNumberType
    Base32StringSeed: Optional[BootstrapDatum] = None
    QRCodePNG: Optional[BootstrapDatum] = None
    User: Optional[User] = None
    EnableDate: Optional[DateType] = None
    Tags: Optional[TagListType] = None


class RoleUsageListType(BaseModel):
    __root__: List[RoleUsageType]


class DeletionTaskFailureReasonType(BaseModel):
    """
    <p>The reason that the service-linked role deletion failed.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
    """

    Reason: Optional[ReasonType] = None
    RoleUsageList: Optional[RoleUsageListType] = None


class EntityInfo(BaseModel):
    """
    <p>Contains details about the specified entity (user or role).</p> <p>This data type is an element of the <a>EntityDetails</a> object.</p>
    """

    Arn: ArnType
    Name: UserNameType
    Type: PolicyOwnerEntityType
    Id: IdType
    Path: Optional[PathType] = None


class EntityDetails(BaseModel):
    """
    <p>An object that contains details about when the IAM entities (users or roles) were last used in an attempt to access the specified Amazon Web Services service.</p> <p>This data type is a response element in the <a>GetServiceLastAccessedDetailsWithEntities</a> operation.</p>
    """

    EntityInfo: EntityInfo
    LastAuthenticated: Optional[DateType] = None


class StatementListType(BaseModel):
    __root__: List[Statement]


class PasswordPolicy(BaseModel):
    """
    <p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> operation. </p>
    """

    MinimumPasswordLength: Optional[MinimumPasswordLengthType] = None
    RequireSymbols: Optional[BooleanType] = None
    RequireNumbers: Optional[BooleanType] = None
    RequireUppercaseCharacters: Optional[BooleanType] = None
    RequireLowercaseCharacters: Optional[BooleanType] = None
    AllowUsersToChangePassword: Optional[BooleanType] = None
    ExpirePasswords: Optional[BooleanType] = None
    MaxPasswordAge: Optional[MaxPasswordAgeType] = None
    PasswordReusePrevention: Optional[PasswordReusePreventionType] = None
    HardExpiry: Optional[BooleanObjectType] = None


class UserListType(BaseModel):
    """
    <p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> operations. </p>
    """

    __root__: Annotated[
        List[User],
        Field(
            description='<p>Contains a list of users.</p> <p>This data type is used as a response element in the <a>GetGroup</a> and <a>ListUsers</a> operations. </p>'
        ),
    ]


class SSHPublicKey(BaseModel):
    """
    <p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> operations. </p>
    """

    UserName: UserNameType
    SSHPublicKeyId: PublicKeyIdType
    Fingerprint: PublicKeyFingerprintType
    SSHPublicKeyBody: PublicKeyMaterialType
    Status: StatusType
    UploadDate: Optional[DateType] = None


class ServerCertificate(BaseModel):
    """
    <p>Contains information about a server certificate.</p> <p> This data type is used as a response element in the <a>GetServerCertificate</a> operation. </p>
    """

    ServerCertificateMetadata: ServerCertificateMetadata
    CertificateBody: CertificateBodyType
    CertificateChain: Optional[CertificateChainType] = None
    Tags: Optional[TagListType] = None


class EntityDetailsListType(BaseModel):
    __root__: List[EntityDetails]


class PolicyDetailListType(BaseModel):
    __root__: List[PolicyDetail]


class GroupDetail(BaseModel):
    """
    <p>Contains information about an IAM group, including all of the group's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
    """

    Path: Optional[PathType] = None
    GroupName: Optional[GroupNameType] = None
    GroupId: Optional[IdType] = None
    Arn: Optional[ArnType] = None
    CreateDate: Optional[DateType] = None
    GroupPolicyList: Optional[PolicyDetailListType] = None
    AttachedManagedPolicies: Optional[AttachedPoliciesListType] = None


class RoleListType(BaseModel):
    """
    <p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> operation.</p>
    """

    __root__: Annotated[
        List[Role],
        Field(
            description='<p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> operation.</p>'
        ),
    ]


class PolicyGroupListType(BaseModel):
    __root__: List[PolicyGroup]


class PolicyUserListType(BaseModel):
    __root__: List[PolicyUser]


class PolicyRoleListType(BaseModel):
    __root__: List[PolicyRole]


class GroupListType(BaseModel):
    """
    <p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> operation.</p>
    """

    __root__: Annotated[
        List[Group],
        Field(
            description='<p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> operation.</p>'
        ),
    ]


class MfaDeviceListType(BaseModel):
    """
    <p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> operations. </p>
    """

    __root__: Annotated[
        List[MFADevice],
        Field(
            description='<p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> operations. </p>'
        ),
    ]


class OpenIDConnectProviderListType(BaseModel):
    """
    Contains a list of IAM OpenID Connect providers.
    """

    __root__: Annotated[
        List[OpenIDConnectProviderListEntry],
        Field(description='Contains a list of IAM OpenID Connect providers.'),
    ]


class PolicyGrantingServiceAccessListType(BaseModel):
    __root__: List[PolicyGrantingServiceAccess]


class ListPoliciesGrantingServiceAccessEntry(BaseModel):
    """
    <p>Contains details about the permissions policies that are attached to the specified identity (user, group, or role).</p> <p>This data type is used as a response element in the <a>ListPoliciesGrantingServiceAccess</a> operation.</p>
    """

    ServiceNamespace: Optional[ServiceNamespaceType] = None
    Policies: Optional[PolicyGrantingServiceAccessListType] = None


class ListPolicyGrantingServiceAccessResponseListType(BaseModel):
    __root__: List[ListPoliciesGrantingServiceAccessEntry]


class PolicyListType(BaseModel):
    __root__: List[Policy]


class PolicyDocumentVersionListType(BaseModel):
    __root__: List[PolicyVersion]


class SAMLProviderListType(BaseModel):
    __root__: List[SAMLProviderListEntry]


class SSHPublicKeyListType(BaseModel):
    __root__: List[SSHPublicKeyMetadata]


class ServerCertificateMetadataListType(BaseModel):
    __root__: List[ServerCertificateMetadata]


class ServiceSpecificCredentialsListType(BaseModel):
    __root__: List[ServiceSpecificCredentialMetadata]


class CertificateListType(BaseModel):
    """
    <p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> operation.</p>
    """

    __root__: Annotated[
        List[SigningCertificate],
        Field(
            description='<p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> operation.</p>'
        ),
    ]


class VirtualMFADeviceListType(BaseModel):
    __root__: List[VirtualMFADevice]


class ManagedPolicyDetail(BaseModel):
    """
    <p>Contains information about a managed policy, including the policy's ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
    """

    PolicyName: Optional[PolicyNameType] = None
    PolicyId: Optional[IdType] = None
    Arn: Optional[ArnType] = None
    Path: Optional[PolicyPathType] = None
    DefaultVersionId: Optional[PolicyVersionIdType] = None
    AttachmentCount: Optional[AttachmentCountType] = None
    PermissionsBoundaryUsageCount: Optional[AttachmentCountType] = None
    IsAttachable: Optional[BooleanType] = None
    Description: Optional[PolicyDescriptionType] = None
    CreateDate: Optional[DateType] = None
    UpdateDate: Optional[DateType] = None
    PolicyVersionList: Optional[PolicyDocumentVersionListType] = None


class ResourceSpecificResult(BaseModel):
    """
    <p>Contains the result of the simulation of a single API operation call on a single resource.</p> <p>This data type is used by a member of the <a>EvaluationResult</a> data type.</p>
    """

    EvalResourceName: ResourceNameType
    EvalResourceDecision: PolicyEvaluationDecisionType
    MatchedStatements: Optional[StatementListType] = None
    MissingContextValues: Optional[ContextKeyNamesResultListType] = None
    EvalDecisionDetails: Optional[EvalDecisionDetailsType] = None
    PermissionsBoundaryDecisionDetail: Optional[
        PermissionsBoundaryDecisionDetail
    ] = None


class TrackedActionsLastAccessed(BaseModel):
    __root__: List[TrackedActionLastAccessed]


class ServiceLastAccessed(BaseModel):
    """
    <p>Contains details about the most recent attempt to access the service.</p> <p>This data type is used as a response element in the <a>GetServiceLastAccessedDetails</a> operation.</p>
    """

    ServiceName: ServiceNameType
    LastAuthenticated: Optional[DateType] = None
    ServiceNamespace: ServiceNamespaceType
    LastAuthenticatedEntity: Optional[ArnType] = None
    LastAuthenticatedRegion: Optional[StringType] = None
    TotalAuthenticatedEntities: Optional[IntegerType] = None
    TrackedActionsLastAccessed: Optional[TrackedActionsLastAccessed] = None


class TagInstanceProfileRequest(BaseModel):
    InstanceProfileName: InstanceProfileNameType
    Tags: TagListType


class TagMFADeviceRequest(BaseModel):
    SerialNumber: SerialNumberType
    Tags: TagListType


class TagOpenIDConnectProviderRequest(BaseModel):
    OpenIDConnectProviderArn: ArnType
    Tags: TagListType


class TagPolicyRequest(BaseModel):
    PolicyArn: ArnType
    Tags: TagListType


class TagRoleRequest(BaseModel):
    RoleName: RoleNameType
    Tags: TagListType


class TagSAMLProviderRequest(BaseModel):
    SAMLProviderArn: ArnType
    Tags: TagListType


class TagServerCertificateRequest(BaseModel):
    ServerCertificateName: ServerCertificateNameType
    Tags: TagListType


class TagUserRequest(BaseModel):
    UserName: ExistingUserNameType
    Tags: TagListType


class UploadServerCertificateRequest(BaseModel):
    Path: Optional[PathType] = None
    ServerCertificateName: ServerCertificateNameType
    CertificateBody: CertificateBodyType
    PrivateKey: PrivateKeyType
    CertificateChain: Optional[CertificateChainType] = None
    Tags: Optional[TagListType] = None


class UserDetail(BaseModel):
    """
    <p>Contains information about an IAM user, including all the user's policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
    """

    Path: Optional[PathType] = None
    UserName: Optional[UserNameType] = None
    UserId: Optional[IdType] = None
    Arn: Optional[ArnType] = None
    CreateDate: Optional[DateType] = None
    UserPolicyList: Optional[PolicyDetailListType] = None
    GroupList: Optional[GroupNameListType] = None
    AttachedManagedPolicies: Optional[AttachedPoliciesListType] = None
    PermissionsBoundary: Optional[AttachedPermissionsBoundary] = None
    Tags: Optional[TagListType] = None


class CreateGroupResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateGroup</a> request.
    """

    Group: Group


class CreateOpenIDConnectProviderResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateOpenIDConnectProvider</a> request.
    """

    OpenIDConnectProviderArn: Optional[ArnType] = None
    Tags: Optional[TagListType] = None


class CreatePolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>CreatePolicy</a> request.
    """

    Policy: Optional[Policy] = None


class CreatePolicyVersionResponse(BaseModel):
    """
    Contains the response to a successful <a>CreatePolicyVersion</a> request.
    """

    PolicyVersion: Optional[PolicyVersion] = None


class CreateRoleResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateRole</a> request.
    """

    Role: Role


class CreateSAMLProviderResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateSAMLProvider</a> request.
    """

    SAMLProviderArn: Optional[ArnType] = None
    Tags: Optional[TagListType] = None


class CreateServiceLinkedRoleResponse(BaseModel):
    Role: Optional[Role] = None


class CreateServiceSpecificCredentialResponse(BaseModel):
    ServiceSpecificCredential: Optional[ServiceSpecificCredential] = None


class CreateUserResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateUser</a> request.
    """

    User: Optional[User] = None


class CreateVirtualMFADeviceResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateVirtualMFADevice</a> request.
    """

    VirtualMFADevice: VirtualMFADevice


class GetAccountPasswordPolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetAccountPasswordPolicy</a> request.
    """

    PasswordPolicy: PasswordPolicy


class GetGroupResponse(BaseModel):
    """
    Contains the response to a successful <a>GetGroup</a> request.
    """

    Group: Group
    Users: UserListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class GetOpenIDConnectProviderResponse(BaseModel):
    """
    Contains the response to a successful <a>GetOpenIDConnectProvider</a> request.
    """

    Url: Optional[OpenIDConnectProviderUrlType] = None
    ClientIDList: Optional[ClientIDListType] = None
    ThumbprintList: Optional[ThumbprintListType] = None
    CreateDate: Optional[DateType] = None
    Tags: Optional[TagListType] = None


class GetPolicyResponse(CreatePolicyResponse):
    """
    Contains the response to a successful <a>GetPolicy</a> request.
    """

    pass


class GetPolicyVersionResponse(CreatePolicyVersionResponse):
    """
    Contains the response to a successful <a>GetPolicyVersion</a> request.
    """

    pass


class GetRoleResponse(CreateRoleResponse):
    """
    Contains the response to a successful <a>GetRole</a> request.
    """

    pass


class GetSAMLProviderResponse(BaseModel):
    """
    Contains the response to a successful <a>GetSAMLProvider</a> request.
    """

    SAMLMetadataDocument: Optional[SAMLMetadataDocumentType] = None
    CreateDate: Optional[DateType] = None
    ValidUntil: Optional[DateType] = None
    Tags: Optional[TagListType] = None


class GetSSHPublicKeyResponse(BaseModel):
    """
    Contains the response to a successful <a>GetSSHPublicKey</a> request.
    """

    SSHPublicKey: Optional[SSHPublicKey] = None


class GetServerCertificateResponse(BaseModel):
    """
    Contains the response to a successful <a>GetServerCertificate</a> request.
    """

    ServerCertificate: ServerCertificate


class GetServiceLastAccessedDetailsWithEntitiesResponse(BaseModel):
    JobStatus: JobStatusType
    JobCreationDate: DateType
    JobCompletionDate: DateType
    EntityDetailsList: EntityDetailsListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None
    Error: Optional[ErrorDetails] = None


class GetServiceLinkedRoleDeletionStatusResponse(BaseModel):
    Status: DeletionTaskStatusType
    Reason: Optional[DeletionTaskFailureReasonType] = None


class GetUserResponse(BaseModel):
    """
    Contains the response to a successful <a>GetUser</a> request.
    """

    User: User


class ListEntitiesForPolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>ListEntitiesForPolicy</a> request.
    """

    PolicyGroups: Optional[PolicyGroupListType] = None
    PolicyUsers: Optional[PolicyUserListType] = None
    PolicyRoles: Optional[PolicyRoleListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListGroupsResponse(BaseModel):
    """
    Contains the response to a successful <a>ListGroups</a> request.
    """

    Groups: GroupListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListGroupsForUserResponse(ListGroupsResponse):
    """
    Contains the response to a successful <a>ListGroupsForUser</a> request.
    """

    pass


class ListInstanceProfileTagsResponse(BaseModel):
    Tags: TagListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListMFADeviceTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListMFADevicesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListMFADevices</a> request.
    """

    MFADevices: MfaDeviceListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListOpenIDConnectProviderTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListOpenIDConnectProvidersResponse(BaseModel):
    """
    Contains the response to a successful <a>ListOpenIDConnectProviders</a> request.
    """

    OpenIDConnectProviderList: Optional[OpenIDConnectProviderListType] = None


class ListPoliciesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListPolicies</a> request.
    """

    Policies: Optional[PolicyListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListPoliciesGrantingServiceAccessResponse(BaseModel):
    PoliciesGrantingServiceAccess: ListPolicyGrantingServiceAccessResponseListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListPolicyTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListPolicyVersionsResponse(BaseModel):
    """
    Contains the response to a successful <a>ListPolicyVersions</a> request.
    """

    Versions: Optional[PolicyDocumentVersionListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListRoleTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListRolesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListRoles</a> request.
    """

    Roles: RoleListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListSAMLProviderTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListSAMLProvidersResponse(BaseModel):
    """
    Contains the response to a successful <a>ListSAMLProviders</a> request.
    """

    SAMLProviderList: Optional[SAMLProviderListType] = None


class ListSSHPublicKeysResponse(BaseModel):
    """
    Contains the response to a successful <a>ListSSHPublicKeys</a> request.
    """

    SSHPublicKeys: Optional[SSHPublicKeyListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListServerCertificateTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListServerCertificatesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListServerCertificates</a> request.
    """

    ServerCertificateMetadataList: ServerCertificateMetadataListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListServiceSpecificCredentialsResponse(BaseModel):
    ServiceSpecificCredentials: Optional[ServiceSpecificCredentialsListType] = None


class ListSigningCertificatesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListSigningCertificates</a> request.
    """

    Certificates: CertificateListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListUserTagsResponse(ListInstanceProfileTagsResponse):
    pass


class ListUsersResponse(BaseModel):
    """
    Contains the response to a successful <a>ListUsers</a> request.
    """

    Users: UserListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListVirtualMFADevicesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListVirtualMFADevices</a> request.
    """

    VirtualMFADevices: VirtualMFADeviceListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ResetServiceSpecificCredentialResponse(CreateServiceSpecificCredentialResponse):
    pass


class ContextEntry(BaseModel):
    """
    <p>Contains information about a condition context key. It includes the name of the key and specifies the value (or values, if the context key supports multiple values) to use in the simulation. This information is used when evaluating the <code>Condition</code> elements of the input policies.</p> <p>This data type is used as an input parameter to <a>SimulateCustomPolicy</a> and <a>SimulatePrincipalPolicy</a>.</p>
    """

    ContextKeyName: Optional[ContextKeyNameType] = None
    ContextKeyValues: Optional[ContextKeyValueListType] = None
    ContextKeyType: Optional[ContextKeyTypeEnum] = None


class UpdateRoleDescriptionResponse(CreateServiceLinkedRoleResponse):
    pass


class UploadSSHPublicKeyResponse(GetSSHPublicKeyResponse):
    """
    Contains the response to a successful <a>UploadSSHPublicKey</a> request.
    """

    pass


class UploadServerCertificateResponse(BaseModel):
    """
    Contains the response to a successful <a>UploadServerCertificate</a> request.
    """

    ServerCertificateMetadata: Optional[ServerCertificateMetadata] = None
    Tags: Optional[TagListType] = None


class ContextEntryListType(BaseModel):
    __root__: List[ContextEntry]


class InstanceProfile(BaseModel):
    """
    <p>Contains information about an instance profile.</p> <p>This data type is used as a response element in the following operations:</p> <ul> <li> <p> <a>CreateInstanceProfile</a> </p> </li> <li> <p> <a>GetInstanceProfile</a> </p> </li> <li> <p> <a>ListInstanceProfiles</a> </p> </li> <li> <p> <a>ListInstanceProfilesForRole</a> </p> </li> </ul>
    """

    Path: PathType
    InstanceProfileName: InstanceProfileNameType
    InstanceProfileId: IdType
    Arn: ArnType
    CreateDate: DateType
    Roles: RoleListType
    Tags: Optional[TagListType] = None


class ResourceSpecificResultListType(BaseModel):
    __root__: List[ResourceSpecificResult]


class EvaluationResult(BaseModel):
    """
    <p>Contains the results of a simulation.</p> <p>This data type is used by the return parameter of <code> <a>SimulateCustomPolicy</a> </code> and <code> <a>SimulatePrincipalPolicy</a> </code>.</p>
    """

    EvalActionName: ActionNameType
    EvalResourceName: Optional[ResourceNameType] = None
    EvalDecision: PolicyEvaluationDecisionType
    MatchedStatements: Optional[StatementListType] = None
    MissingContextValues: Optional[ContextKeyNamesResultListType] = None
    OrganizationsDecisionDetail: Optional[OrganizationsDecisionDetail] = None
    PermissionsBoundaryDecisionDetail: Optional[
        PermissionsBoundaryDecisionDetail
    ] = None
    EvalDecisionDetails: Optional[EvalDecisionDetailsType] = None
    ResourceSpecificResults: Optional[ResourceSpecificResultListType] = None


class EvaluationResultsListType(BaseModel):
    __root__: List[EvaluationResult]


class UserDetailListType(BaseModel):
    __root__: List[UserDetail]


class GroupDetailListType(BaseModel):
    __root__: List[GroupDetail]


class ManagedPolicyDetailListType(BaseModel):
    __root__: List[ManagedPolicyDetail]


class ServicesLastAccessed(BaseModel):
    __root__: List[ServiceLastAccessed]


class InstanceProfileListType(BaseModel):
    """
    Contains a list of instance profiles.
    """

    __root__: Annotated[
        List[InstanceProfile],
        Field(description='Contains a list of instance profiles.'),
    ]


class RoleDetail(BaseModel):
    """
    <p>Contains information about an IAM role, including all of the role's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
    """

    Path: Optional[PathType] = None
    RoleName: Optional[RoleNameType] = None
    RoleId: Optional[IdType] = None
    Arn: Optional[ArnType] = None
    CreateDate: Optional[DateType] = None
    AssumeRolePolicyDocument: Optional[PolicyDocumentType] = None
    InstanceProfileList: Optional[InstanceProfileListType] = None
    RolePolicyList: Optional[PolicyDetailListType] = None
    AttachedManagedPolicies: Optional[AttachedPoliciesListType] = None
    PermissionsBoundary: Optional[AttachedPermissionsBoundary] = None
    Tags: Optional[TagListType] = None
    RoleLastUsed: Optional[RoleLastUsed] = None


class SimulateCustomPolicyRequest(BaseModel):
    PolicyInputList: SimulationPolicyListType
    PermissionsBoundaryPolicyInputList: Optional[SimulationPolicyListType] = None
    ActionNames: ActionNameListType
    ResourceArns: Optional[ResourceNameListType] = None
    ResourcePolicy: Optional[PolicyDocumentType] = None
    ResourceOwner: Optional[ResourceNameType] = None
    CallerArn: Optional[ResourceNameType] = None
    ContextEntries: Optional[ContextEntryListType] = None
    ResourceHandlingOption: Optional[ResourceHandlingOptionType] = None
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None


class SimulatePrincipalPolicyRequest(BaseModel):
    PolicySourceArn: ArnType
    PolicyInputList: Optional[SimulationPolicyListType] = None
    PermissionsBoundaryPolicyInputList: Optional[SimulationPolicyListType] = None
    ActionNames: ActionNameListType
    ResourceArns: Optional[ResourceNameListType] = None
    ResourcePolicy: Optional[PolicyDocumentType] = None
    ResourceOwner: Optional[ResourceNameType] = None
    CallerArn: Optional[ResourceNameType] = None
    ContextEntries: Optional[ContextEntryListType] = None
    ResourceHandlingOption: Optional[ResourceHandlingOptionType] = None
    MaxItems: Optional[MaxItemsType] = None
    Marker: Optional[MarkerType] = None


class CreateInstanceProfileResponse(BaseModel):
    """
    Contains the response to a successful <a>CreateInstanceProfile</a> request.
    """

    InstanceProfile: InstanceProfile


class GetInstanceProfileResponse(CreateInstanceProfileResponse):
    """
    Contains the response to a successful <a>GetInstanceProfile</a> request.
    """

    pass


class GetServiceLastAccessedDetailsResponse(BaseModel):
    JobStatus: JobStatusType
    JobType: Optional[AccessAdvisorUsageGranularityType] = None
    JobCreationDate: DateType
    ServicesLastAccessed: ServicesLastAccessed
    JobCompletionDate: DateType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None
    Error: Optional[ErrorDetails] = None


class ListInstanceProfilesResponse(BaseModel):
    """
    Contains the response to a successful <a>ListInstanceProfiles</a> request.
    """

    InstanceProfiles: InstanceProfileListType
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class ListInstanceProfilesForRoleResponse(ListInstanceProfilesResponse):
    """
    Contains the response to a successful <a>ListInstanceProfilesForRole</a> request.
    """

    pass


class SimulatePolicyResponse(BaseModel):
    """
    Contains the response to a successful <a>SimulatePrincipalPolicy</a> or <a>SimulateCustomPolicy</a> request.
    """

    EvaluationResults: Optional[EvaluationResultsListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None


class RoleDetailListType(BaseModel):
    __root__: List[RoleDetail]


class GetAccountAuthorizationDetailsResponse(BaseModel):
    """
    Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request.
    """

    UserDetailList: Optional[UserDetailListType] = None
    GroupDetailList: Optional[GroupDetailListType] = None
    RoleDetailList: Optional[RoleDetailListType] = None
    Policies: Optional[ManagedPolicyDetailListType] = None
    IsTruncated: Optional[BooleanType] = None
    Marker: Optional[ResponseMarkerType] = None

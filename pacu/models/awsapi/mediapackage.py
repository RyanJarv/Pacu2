# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:51+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class UnprocessableEntityException(BaseModel):
    __root__: Any


class InternalServerErrorException(UnprocessableEntityException):
    pass


class ForbiddenException(UnprocessableEntityException):
    pass


class NotFoundException(UnprocessableEntityException):
    pass


class ServiceUnavailableException(UnprocessableEntityException):
    pass


class TooManyRequestsException(UnprocessableEntityException):
    pass


class _Integer(BaseModel):
    __root__: int


class AdsOnDeliveryRestrictions(Enum):
    """
        This setting allows the delivery restriction flags on SCTE-35 segmentation descriptors to
    determine whether a message signals an ad.  Choosing "NONE" means no SCTE-35 messages become
    ads.  Choosing "RESTRICTED" means SCTE-35 messages of the types specified in AdTriggers that
    contain delivery restrictions will be treated as ads.  Choosing "UNRESTRICTED" means SCTE-35
    messages of the types specified in AdTriggers that do not contain delivery restrictions will
    be treated as ads.  Choosing "BOTH" means all SCTE-35 messages of the types specified in
    AdTriggers will be treated as ads.  Note that Splice Insert messages do not have these flags
    and are always treated as ads if specified in AdTriggers.

    """

    NONE = 'NONE'
    RESTRICTED = 'RESTRICTED'
    UNRESTRICTED = 'UNRESTRICTED'
    BOTH = 'BOTH'


class ManifestLayout(Enum):
    FULL = 'FULL'
    COMPACT = 'COMPACT'


class Profile(Enum):
    NONE = 'NONE'
    HBBTV_1_5 = 'HBBTV_1_5'


class SegmentTemplateFormat(Enum):
    NUMBER_WITH_TIMELINE = 'NUMBER_WITH_TIMELINE'
    TIME_WITH_TIMELINE = 'TIME_WITH_TIMELINE'
    NUMBER_WITH_DURATION = 'NUMBER_WITH_DURATION'


class UtcTiming(Enum):
    NONE = 'NONE'
    HTTP_HEAD = 'HTTP-HEAD'
    HTTP_ISO = 'HTTP-ISO'


class AdMarkers(Enum):
    NONE = 'NONE'
    SCTE35_ENHANCED = 'SCTE35_ENHANCED'
    PASSTHROUGH = 'PASSTHROUGH'
    DATERANGE = 'DATERANGE'


class _Boolean(BaseModel):
    __root__: bool


class PlaylistType(Enum):
    NONE = 'NONE'
    EVENT = 'EVENT'
    VOD = 'VOD'


class DeleteChannelResponse(BaseModel):
    pass


class DeleteOriginEndpointResponse(DeleteChannelResponse):
    pass


class _AdTriggersElement(Enum):
    SPLICE_INSERT = 'SPLICE_INSERT'
    BREAK = 'BREAK'
    PROVIDER_ADVERTISEMENT = 'PROVIDER_ADVERTISEMENT'
    DISTRIBUTOR_ADVERTISEMENT = 'DISTRIBUTOR_ADVERTISEMENT'
    PROVIDER_PLACEMENT_OPPORTUNITY = 'PROVIDER_PLACEMENT_OPPORTUNITY'
    DISTRIBUTOR_PLACEMENT_OPPORTUNITY = 'DISTRIBUTOR_PLACEMENT_OPPORTUNITY'
    PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY = 'PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY'
    DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY = (
        'DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY'
    )


class Authorization(BaseModel):
    """
    CDN Authorization credentials
    """

    CdnIdentifierSecret: _String
    SecretsRoleArn: _String


class EgressAccessLogs(BaseModel):
    """
    Configure egress access logging.
    """

    LogGroupName: Optional[_String] = None


class IngressAccessLogs(EgressAccessLogs):
    """
    Configure ingress access logging.
    """

    pass


class Tags(BaseModel):
    """
    A collection of tags associated with a resource
    """

    pass

    class Config:
        extra = Extra.allow


class ConfigureLogsRequest(BaseModel):
    """
    the option to configure log subscription.
    """

    EgressAccessLogs: Optional[EgressAccessLogs] = None
    IngressAccessLogs: Optional[IngressAccessLogs] = None


class CreateChannelRequest(BaseModel):
    """
    A new Channel configuration.
    """

    Description: Optional[_String] = None
    Id: _String
    Tags: Optional[Tags] = None


class S3Destination(BaseModel):
    """
    Configuration parameters for where in an S3 bucket to place the harvested content

    """

    BucketName: _String
    ManifestKey: _String
    RoleArn: _String


class CreateHarvestJobRequest(BaseModel):
    """
    Configuration parameters used to create a new HarvestJob.
    """

    EndTime: _String
    Id: _String
    OriginEndpointId: _String
    S3Destination: S3Destination
    StartTime: _String


class Status(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class Origination(Enum):
    ALLOW = 'ALLOW'
    DENY = 'DENY'


class _ListOfString(BaseModel):
    __root__: List[_String]


class DeleteChannelRequest(BaseModel):
    pass


class DeleteOriginEndpointRequest(BaseModel):
    pass


class DescribeChannelRequest(BaseModel):
    pass


class DescribeHarvestJobRequest(BaseModel):
    pass


class DescribeOriginEndpointRequest(BaseModel):
    pass


class PresetSpeke20Audio(Enum):
    PRESET_AUDIO_1 = 'PRESET-AUDIO-1'


class PresetSpeke20Video(Enum):
    PRESET_VIDEO_1 = 'PRESET-VIDEO-1'


class EncryptionContractConfiguration(BaseModel):
    """
        Use encryptionContractConfiguration to configure one or more content encryption keys for your endpoints that use SPEKE 2.0.
    The encryption contract defines which content keys are used to encrypt the audio and video tracks in your stream.
    To configure the encryption contract, specify which audio and video encryption presets to use.
    Note the following considerations when using encryptionContractConfiguration:
    encryptionContractConfiguration can be used for DASH or CMAF endpoints that use SPEKE 2.0. SPEKE 2.0 relies on the CPIX 2.3 specification.
    You must disable key rotation for this endpoint by setting keyRotationIntervalSeconds to 0.

    """

    PresetSpeke20Audio: PresetSpeke20Audio
    PresetSpeke20Video: PresetSpeke20Video


class EncryptionMethod(Enum):
    AES_128 = 'AES_128'
    SAMPLE_AES = 'SAMPLE_AES'


class HarvestJob(BaseModel):
    """
    A HarvestJob resource configuration
    """

    Arn: Optional[_String] = None
    ChannelId: Optional[_String] = None
    CreatedAt: Optional[_String] = None
    EndTime: Optional[_String] = None
    Id: Optional[_String] = None
    OriginEndpointId: Optional[_String] = None
    S3Destination: Optional[S3Destination] = None
    StartTime: Optional[_String] = None
    Status: Optional[Status] = None


class HlsManifest(BaseModel):
    """
    A HTTP Live Streaming (HLS) manifest configuration.
    """

    AdMarkers: Optional[AdMarkers] = None
    Id: _String
    IncludeIframeOnlyStream: Optional[_Boolean] = None
    ManifestName: Optional[_String] = None
    PlaylistType: Optional[PlaylistType] = None
    PlaylistWindowSeconds: Optional[_Integer] = None
    ProgramDateTimeIntervalSeconds: Optional[_Integer] = None
    Url: Optional[_String] = None


class IngestEndpoint(BaseModel):
    """
    An endpoint for ingesting source content for a Channel.
    """

    Id: Optional[_String] = None
    Password: Optional[_String] = None
    Url: Optional[_String] = None
    Username: Optional[_String] = None


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class ListChannelsRequest(BaseModel):
    pass


class ListHarvestJobsRequest(BaseModel):
    pass


class _ListOfHarvestJob(BaseModel):
    __root__: List[HarvestJob]


class ListOriginEndpointsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class _MapOfString(Tags):
    pass


class RotateChannelCredentialsRequest(BaseModel):
    pass


class RotateIngestEndpointCredentialsRequest(BaseModel):
    pass


class StreamOrder(Enum):
    ORIGINAL = 'ORIGINAL'
    VIDEO_BITRATE_ASCENDING = 'VIDEO_BITRATE_ASCENDING'
    VIDEO_BITRATE_DESCENDING = 'VIDEO_BITRATE_DESCENDING'


class TagResourceRequest(BaseModel):
    Tags: _MapOfString


class UntagResourceRequest(BaseModel):
    pass


class UpdateChannelRequest(BaseModel):
    """
    Configuration parameters used to update the Channel.
    """

    Description: Optional[_String] = None


class _PeriodTriggersElement(Enum):
    ADS = 'ADS'


class CreateHarvestJobResponse(HarvestJob):
    pass


class StreamSelection(BaseModel):
    """
    A StreamSelection configuration.
    """

    MaxVideoBitsPerSecond: Optional[_Integer] = None
    MinVideoBitsPerSecond: Optional[_Integer] = None
    StreamOrder: Optional[StreamOrder] = None


class AdTriggers(BaseModel):
    """
        A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no
    ad markers are output.  Specify multiple items to create ad markers for all of the included
    message types.

    """

    __root__: Annotated[
        List[_AdTriggersElement],
        Field(
            description='A list of SCTE-35 message types that are treated as ad markers in the output.  If empty, no\nad markers are output.  Specify multiple items to create ad markers for all of the included\nmessage types.\n'
        ),
    ]


class _ListOfPeriodTriggersElement(BaseModel):
    __root__: List[_PeriodTriggersElement]


class DescribeHarvestJobResponse(HarvestJob):
    pass


class ListHarvestJobsResponse(BaseModel):
    HarvestJobs: Optional[_ListOfHarvestJob] = None
    NextToken: Optional[_String] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[_MapOfString] = None


class SpekeKeyProvider(BaseModel):
    """
    A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
    """

    CertificateArn: Optional[_String] = None
    EncryptionContractConfiguration: Optional[EncryptionContractConfiguration] = None
    ResourceId: _String
    RoleArn: _String
    SystemIds: _ListOfString
    Url: _String


class _ListOfHlsManifest(BaseModel):
    __root__: List[HlsManifest]


class _ListOfIngestEndpoint(BaseModel):
    __root__: List[IngestEndpoint]


class HlsManifestCreateOrUpdateParameters(BaseModel):
    """
    A HTTP Live Streaming (HLS) manifest configuration.
    """

    AdMarkers: Optional[AdMarkers] = None
    AdTriggers: Optional[AdTriggers] = None
    AdsOnDeliveryRestrictions: Optional[AdsOnDeliveryRestrictions] = None
    Id: _String
    IncludeIframeOnlyStream: Optional[_Boolean] = None
    ManifestName: Optional[_String] = None
    PlaylistType: Optional[PlaylistType] = None
    PlaylistWindowSeconds: Optional[_Integer] = None
    ProgramDateTimeIntervalSeconds: Optional[_Integer] = None


class CmafEncryption(BaseModel):
    """
    A Common Media Application Format (CMAF) encryption configuration.
    """

    ConstantInitializationVector: Optional[_String] = None
    KeyRotationIntervalSeconds: Optional[_Integer] = None
    SpekeKeyProvider: SpekeKeyProvider


class _ListOfHlsManifestCreateOrUpdateParameters(BaseModel):
    __root__: List[HlsManifestCreateOrUpdateParameters]


class DashEncryption(BaseModel):
    """
    A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
    """

    KeyRotationIntervalSeconds: Optional[_Integer] = None
    SpekeKeyProvider: SpekeKeyProvider


class HlsEncryption(BaseModel):
    """
    An HTTP Live Streaming (HLS) encryption configuration.
    """

    ConstantInitializationVector: Optional[_String] = None
    EncryptionMethod: Optional[EncryptionMethod] = None
    KeyRotationIntervalSeconds: Optional[_Integer] = None
    RepeatExtXKey: Optional[_Boolean] = None
    SpekeKeyProvider: SpekeKeyProvider


class MssEncryption(BaseModel):
    """
    A Microsoft Smooth Streaming (MSS) encryption configuration.
    """

    SpekeKeyProvider: SpekeKeyProvider


class HlsIngest(BaseModel):
    """
    An HTTP Live Streaming (HLS) ingest resource configuration.
    """

    IngestEndpoints: Optional[_ListOfIngestEndpoint] = None


class Channel(BaseModel):
    """
    A Channel resource configuration.
    """

    Arn: Optional[_String] = None
    Description: Optional[_String] = None
    EgressAccessLogs: Optional[EgressAccessLogs] = None
    HlsIngest: Optional[HlsIngest] = None
    Id: Optional[_String] = None
    IngressAccessLogs: Optional[IngressAccessLogs] = None
    Tags: Optional[Tags] = None


class CmafPackage(BaseModel):
    """
    A Common Media Application Format (CMAF) packaging configuration.
    """

    Encryption: Optional[CmafEncryption] = None
    HlsManifests: Optional[_ListOfHlsManifest] = None
    SegmentDurationSeconds: Optional[_Integer] = None
    SegmentPrefix: Optional[_String] = None
    StreamSelection: Optional[StreamSelection] = None


class CmafPackageCreateOrUpdateParameters(BaseModel):
    """
    A Common Media Application Format (CMAF) packaging configuration.
    """

    Encryption: Optional[CmafEncryption] = None
    HlsManifests: Optional[_ListOfHlsManifestCreateOrUpdateParameters] = None
    SegmentDurationSeconds: Optional[_Integer] = None
    SegmentPrefix: Optional[_String] = None
    StreamSelection: Optional[StreamSelection] = None


class DashPackage(BaseModel):
    """
    A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    """

    AdTriggers: Optional[AdTriggers] = None
    AdsOnDeliveryRestrictions: Optional[AdsOnDeliveryRestrictions] = None
    Encryption: Optional[DashEncryption] = None
    ManifestLayout: Optional[ManifestLayout] = None
    ManifestWindowSeconds: Optional[_Integer] = None
    MinBufferTimeSeconds: Optional[_Integer] = None
    MinUpdatePeriodSeconds: Optional[_Integer] = None
    PeriodTriggers: Optional[_ListOfPeriodTriggersElement] = None
    Profile: Optional[Profile] = None
    SegmentDurationSeconds: Optional[_Integer] = None
    SegmentTemplateFormat: Optional[SegmentTemplateFormat] = None
    StreamSelection: Optional[StreamSelection] = None
    SuggestedPresentationDelaySeconds: Optional[_Integer] = None
    UtcTiming: Optional[UtcTiming] = None
    UtcTimingUri: Optional[_String] = None


class HlsPackage(BaseModel):
    """
    An HTTP Live Streaming (HLS) packaging configuration.
    """

    AdMarkers: Optional[AdMarkers] = None
    AdTriggers: Optional[AdTriggers] = None
    AdsOnDeliveryRestrictions: Optional[AdsOnDeliveryRestrictions] = None
    Encryption: Optional[HlsEncryption] = None
    IncludeIframeOnlyStream: Optional[_Boolean] = None
    PlaylistType: Optional[PlaylistType] = None
    PlaylistWindowSeconds: Optional[_Integer] = None
    ProgramDateTimeIntervalSeconds: Optional[_Integer] = None
    SegmentDurationSeconds: Optional[_Integer] = None
    StreamSelection: Optional[StreamSelection] = None
    UseAudioRenditionGroup: Optional[_Boolean] = None


class MssPackage(BaseModel):
    """
    A Microsoft Smooth Streaming (MSS) packaging configuration.
    """

    Encryption: Optional[MssEncryption] = None
    ManifestWindowSeconds: Optional[_Integer] = None
    SegmentDurationSeconds: Optional[_Integer] = None
    StreamSelection: Optional[StreamSelection] = None


class CreateOriginEndpointRequest(BaseModel):
    """
    Configuration parameters used to create a new OriginEndpoint.
    """

    Authorization: Optional[Authorization] = None
    ChannelId: _String
    CmafPackage: Optional[CmafPackageCreateOrUpdateParameters] = None
    DashPackage: Optional[DashPackage] = None
    Description: Optional[_String] = None
    HlsPackage: Optional[HlsPackage] = None
    Id: _String
    ManifestName: Optional[_String] = None
    MssPackage: Optional[MssPackage] = None
    Origination: Optional[Origination] = None
    StartoverWindowSeconds: Optional[_Integer] = None
    Tags: Optional[Tags] = None
    TimeDelaySeconds: Optional[_Integer] = None
    Whitelist: Optional[_ListOfString] = None


class _ListOfChannel(BaseModel):
    __root__: List[Channel]


class OriginEndpoint(BaseModel):
    """
    An OriginEndpoint resource configuration.
    """

    Arn: Optional[_String] = None
    Authorization: Optional[Authorization] = None
    ChannelId: Optional[_String] = None
    CmafPackage: Optional[CmafPackage] = None
    DashPackage: Optional[DashPackage] = None
    Description: Optional[_String] = None
    HlsPackage: Optional[HlsPackage] = None
    Id: Optional[_String] = None
    ManifestName: Optional[_String] = None
    MssPackage: Optional[MssPackage] = None
    Origination: Optional[Origination] = None
    StartoverWindowSeconds: Optional[_Integer] = None
    Tags: Optional[Tags] = None
    TimeDelaySeconds: Optional[_Integer] = None
    Url: Optional[_String] = None
    Whitelist: Optional[_ListOfString] = None


class UpdateOriginEndpointRequest(BaseModel):
    """
    Configuration parameters used to update an existing OriginEndpoint.
    """

    Authorization: Optional[Authorization] = None
    CmafPackage: Optional[CmafPackageCreateOrUpdateParameters] = None
    DashPackage: Optional[DashPackage] = None
    Description: Optional[_String] = None
    HlsPackage: Optional[HlsPackage] = None
    ManifestName: Optional[_String] = None
    MssPackage: Optional[MssPackage] = None
    Origination: Optional[Origination] = None
    StartoverWindowSeconds: Optional[_Integer] = None
    TimeDelaySeconds: Optional[_Integer] = None
    Whitelist: Optional[_ListOfString] = None


class ConfigureLogsResponse(Channel):
    pass


class CreateChannelResponse(Channel):
    pass


class CreateOriginEndpointResponse(OriginEndpoint):
    pass


class DescribeChannelResponse(Channel):
    pass


class DescribeOriginEndpointResponse(OriginEndpoint):
    pass


class ListChannelsResponse(BaseModel):
    Channels: Optional[_ListOfChannel] = None
    NextToken: Optional[_String] = None


class RotateChannelCredentialsResponse(Channel):
    pass


class RotateIngestEndpointCredentialsResponse(Channel):
    pass


class UpdateChannelResponse(Channel):
    pass


class UpdateOriginEndpointResponse(OriginEndpoint):
    pass


class _ListOfOriginEndpoint(BaseModel):
    __root__: List[OriginEndpoint]


class ListOriginEndpointsResponse(BaseModel):
    NextToken: Optional[_String] = None
    OriginEndpoints: Optional[_ListOfOriginEndpoint] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:53:49+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidArgumentException(BaseModel):
    __root__: Any


class InternalServiceError(InvalidArgumentException):
    pass


class NotAuthorizedException(InvalidArgumentException):
    pass


class ISOTimestamp(BaseModel):
    __root__: datetime


class Double(BaseModel):
    __root__: float


class DataPoint(BaseModel):
    """
    A timestamp, and a single numerical value, which together represent a measurement at a particular point in time.
    """

    Timestamp: ISOTimestamp
    Value: Double


class DataPointsList(BaseModel):
    __root__: List[DataPoint]


class ServiceType(Enum):
    RDS = 'RDS'


class RequestString(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0, regex='.*\\S.*')]


class Integer(BaseModel):
    __root__: int


class MetricQueryFilterMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=20.0)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=1, regex='[\\s\\S]*')]


class DetailStatus(Enum):
    AVAILABLE = 'AVAILABLE'
    PROCESSING = 'PROCESSING'
    UNAVAILABLE = 'UNAVAILABLE'


class RequestStringList(BaseModel):
    __root__: Annotated[List[RequestString], Field(max_items=10, min_items=1)]


class Limit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10.0)]


class DimensionMap(MetricQueryFilterMap):
    pass


class MetricValuesList(BaseModel):
    __root__: List[Double]


class DimensionKeyDescription(BaseModel):
    """
    An array of descriptions and aggregated values for each dimension within a dimension group.
    """

    Dimensions: Optional[DimensionMap] = None
    Total: Optional[Double] = None
    Partitions: Optional[MetricValuesList] = None


class String(RequestString):
    pass


class DimensionKeyDetail(BaseModel):
    """
    An object that describes the details for a specified dimension.
    """

    Value: Optional[String] = None
    Dimension: Optional[String] = None
    Status: Optional[DetailStatus] = None


class DimensionKeyDetailList(BaseModel):
    __root__: List[DimensionKeyDetail]


class IdentifierString(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=0, regex='^db-[a-zA-Z0-9-]*$')
    ]


class RequestedDimensionList(RequestStringList):
    pass


class ResponseResourceMetricKey(BaseModel):
    """
    An object describing a Performance Insights metric and one or more dimensions for that metric.
    """

    Metric: String
    Dimensions: Optional[DimensionMap] = None


class MetricKeyDataPoints(BaseModel):
    """
    A time-ordered series of data points, corresponding to a dimension of a Performance Insights metric.
    """

    Key: Optional[ResponseResourceMetricKey] = None
    DataPoints: Optional[DataPointsList] = None


class ResponsePartitionKey(BaseModel):
    """
    If <code>PartitionBy</code> was specified in a <code>DescribeDimensionKeys</code> request, the dimensions are returned in an array. Each element in the array specifies one dimension.
    """

    Dimensions: DimensionMap


class GetDimensionKeyDetailsResponse(BaseModel):
    Dimensions: Optional[DimensionKeyDetailList] = None


class GetDimensionKeyDetailsRequest(BaseModel):
    ServiceType: ServiceType
    Identifier: IdentifierString
    Group: RequestString
    GroupIdentifier: RequestString
    RequestedDimensions: Optional[RequestedDimensionList] = None


class DimensionGroup(BaseModel):
    """
    <p>A logical grouping of Performance Insights metrics for a related subject area. For example, the <code>db.sql</code> dimension group consists of the following dimensions: <code>db.sql.id</code>, <code>db.sql.db_id</code>, <code>db.sql.statement</code>, and <code>db.sql.tokenized_id</code>.</p> <note> <p>Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.</p> </note>
    """

    Group: RequestString
    Dimensions: Optional[RequestStringList] = None
    Limit: Optional[Limit] = None


class ResponsePartitionKeyList(BaseModel):
    __root__: List[ResponsePartitionKey]


class DimensionKeyDescriptionList(BaseModel):
    __root__: List[DimensionKeyDescription]


class MetricKeyDataPointsList(BaseModel):
    __root__: List[MetricKeyDataPoints]


class MetricQuery(BaseModel):
    """
    A single query to be processed. You must provide the metric to query. If no other parameters are specified, Performance Insights returns all of the data points for that metric. You can optionally request that the data points be aggregated by dimension group ( <code>GroupBy</code>), and return only those data points that match your criteria (<code>Filter</code>).
    """

    Metric: RequestString
    GroupBy: Optional[DimensionGroup] = None
    Filter: Optional[MetricQueryFilterMap] = None


class DescribeDimensionKeysResponse(BaseModel):
    AlignedStartTime: Optional[ISOTimestamp] = None
    AlignedEndTime: Optional[ISOTimestamp] = None
    PartitionKeys: Optional[ResponsePartitionKeyList] = None
    Keys: Optional[DimensionKeyDescriptionList] = None
    NextToken: Optional[NextToken] = None


class DescribeDimensionKeysRequest(BaseModel):
    ServiceType: ServiceType
    Identifier: RequestString
    StartTime: ISOTimestamp
    EndTime: ISOTimestamp
    Metric: RequestString
    PeriodInSeconds: Optional[Integer] = None
    GroupBy: DimensionGroup
    PartitionBy: Optional[DimensionGroup] = None
    Filter: Optional[MetricQueryFilterMap] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class GetResourceMetricsResponse(BaseModel):
    AlignedStartTime: Optional[ISOTimestamp] = None
    AlignedEndTime: Optional[ISOTimestamp] = None
    Identifier: Optional[String] = None
    MetricList: Optional[MetricKeyDataPointsList] = None
    NextToken: Optional[NextToken] = None


class MetricQueryList(BaseModel):
    __root__: Annotated[List[MetricQuery], Field(max_items=15, min_items=1)]


class GetResourceMetricsRequest(BaseModel):
    ServiceType: ServiceType
    Identifier: RequestString
    MetricQueries: MetricQueryList
    StartTime: ISOTimestamp
    EndTime: ISOTimestamp
    PeriodInSeconds: Optional[Integer] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None

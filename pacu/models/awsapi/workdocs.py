# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:59:36+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class EntityNotExistsException(BaseModel):
    __root__: Any


class ProhibitedStateException(EntityNotExistsException):
    pass


class UnauthorizedOperationException(EntityNotExistsException):
    pass


class UnauthorizedResourceAccessException(EntityNotExistsException):
    pass


class FailedDependencyException(EntityNotExistsException):
    pass


class ServiceUnavailableException(EntityNotExistsException):
    pass


class BooleanType(BaseModel):
    __root__: bool


class MessageType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048, min_length=0)]


class DocumentLockedForCommentsException(EntityNotExistsException):
    pass


class InvalidCommentOperationException(EntityNotExistsException):
    pass


class CreateCustomMetadataResponse(BaseModel):
    pass


class CustomMetadataValueType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256, min_length=1, regex='[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*'
        ),
    ]


class CustomMetadataLimitExceededException(EntityNotExistsException):
    pass


class EntityAlreadyExistsException(EntityNotExistsException):
    pass


class ConflictingOperationException(EntityNotExistsException):
    pass


class LimitExceededException(EntityNotExistsException):
    pass


class CreateLabelsResponse(CreateCustomMetadataResponse):
    pass


class SharedLabel(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=32, min_length=1, regex='[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*'
        ),
    ]


class TooManyLabelsException(EntityNotExistsException):
    pass


class TooManySubscriptionsException(EntityNotExistsException):
    pass


class PositiveSizeType(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class StorageType(Enum):
    UNLIMITED = 'UNLIMITED'
    QUOTA = 'QUOTA'


class DeleteCustomMetadataResponse(CreateCustomMetadataResponse):
    pass


class CustomMetadataKeyType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=56, min_length=1, regex='[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*'
        ),
    ]


class ConcurrentModificationException(EntityNotExistsException):
    pass


class DeleteLabelsResponse(CreateCustomMetadataResponse):
    pass


class InvalidArgumentException(EntityNotExistsException):
    pass


class RequestedEntityTooLargeException(EntityNotExistsException):
    pass


class InvalidPasswordException(EntityNotExistsException):
    pass


class StorageLimitExceededException(EntityNotExistsException):
    pass


class StorageLimitWillExceedException(EntityNotExistsException):
    pass


class DraftUploadOutOfSyncException(EntityNotExistsException):
    pass


class ResourceAlreadyCheckedOutException(EntityNotExistsException):
    pass


class InvalidOperationException(EntityNotExistsException):
    pass


class IllegalUserStateException(EntityNotExistsException):
    pass


class DeactivatingLastSystemUserException(EntityNotExistsException):
    pass


class AuthenticationHeaderType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=8199, min_length=1)]


class ResourceIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w+-.@]+')]


class DocumentVersionIdType(ResourceIdType):
    pass


class AbortDocumentVersionUploadRequest(BaseModel):
    pass


class IdType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='[&\\w+-.@]+')]


class ActivateUserRequest(BaseModel):
    pass


class ActivityType(Enum):
    DOCUMENT_CHECKED_IN = 'DOCUMENT_CHECKED_IN'
    DOCUMENT_CHECKED_OUT = 'DOCUMENT_CHECKED_OUT'
    DOCUMENT_RENAMED = 'DOCUMENT_RENAMED'
    DOCUMENT_VERSION_UPLOADED = 'DOCUMENT_VERSION_UPLOADED'
    DOCUMENT_VERSION_DELETED = 'DOCUMENT_VERSION_DELETED'
    DOCUMENT_VERSION_VIEWED = 'DOCUMENT_VERSION_VIEWED'
    DOCUMENT_VERSION_DOWNLOADED = 'DOCUMENT_VERSION_DOWNLOADED'
    DOCUMENT_RECYCLED = 'DOCUMENT_RECYCLED'
    DOCUMENT_RESTORED = 'DOCUMENT_RESTORED'
    DOCUMENT_REVERTED = 'DOCUMENT_REVERTED'
    DOCUMENT_SHARED = 'DOCUMENT_SHARED'
    DOCUMENT_UNSHARED = 'DOCUMENT_UNSHARED'
    DOCUMENT_SHARE_PERMISSION_CHANGED = 'DOCUMENT_SHARE_PERMISSION_CHANGED'
    DOCUMENT_SHAREABLE_LINK_CREATED = 'DOCUMENT_SHAREABLE_LINK_CREATED'
    DOCUMENT_SHAREABLE_LINK_REMOVED = 'DOCUMENT_SHAREABLE_LINK_REMOVED'
    DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED = (
        'DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED'
    )
    DOCUMENT_MOVED = 'DOCUMENT_MOVED'
    DOCUMENT_COMMENT_ADDED = 'DOCUMENT_COMMENT_ADDED'
    DOCUMENT_COMMENT_DELETED = 'DOCUMENT_COMMENT_DELETED'
    DOCUMENT_ANNOTATION_ADDED = 'DOCUMENT_ANNOTATION_ADDED'
    DOCUMENT_ANNOTATION_DELETED = 'DOCUMENT_ANNOTATION_DELETED'
    FOLDER_CREATED = 'FOLDER_CREATED'
    FOLDER_DELETED = 'FOLDER_DELETED'
    FOLDER_RENAMED = 'FOLDER_RENAMED'
    FOLDER_RECYCLED = 'FOLDER_RECYCLED'
    FOLDER_RESTORED = 'FOLDER_RESTORED'
    FOLDER_SHARED = 'FOLDER_SHARED'
    FOLDER_UNSHARED = 'FOLDER_UNSHARED'
    FOLDER_SHARE_PERMISSION_CHANGED = 'FOLDER_SHARE_PERMISSION_CHANGED'
    FOLDER_SHAREABLE_LINK_CREATED = 'FOLDER_SHAREABLE_LINK_CREATED'
    FOLDER_SHAREABLE_LINK_REMOVED = 'FOLDER_SHAREABLE_LINK_REMOVED'
    FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED = (
        'FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED'
    )
    FOLDER_MOVED = 'FOLDER_MOVED'


class TimestampType(BaseModel):
    __root__: datetime


class ActivityNamesFilterType(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='[\\w,]+')]


class NotificationOptions(BaseModel):
    """
    Set of options which defines notification preferences of given action.
    """

    SendEmail: Optional[BooleanType] = None
    EmailMessage: Optional[MessageType] = None


class BooleanEnumType(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'


class CommentIdType(ResourceIdType):
    pass


class CommentTextType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=2048, min_length=1)]


class CommentStatusType(Enum):
    DRAFT = 'DRAFT'
    PUBLISHED = 'PUBLISHED'
    DELETED = 'DELETED'


class CommentVisibilityType(Enum):
    PUBLIC = 'PUBLIC'
    PRIVATE = 'PRIVATE'


class CreateCommentRequest(BaseModel):
    ParentId: Optional[CommentIdType] = None
    ThreadId: Optional[CommentIdType] = None
    Text: CommentTextType
    Visibility: Optional[CommentVisibilityType] = None
    NotifyCollaborators: Optional[BooleanType] = None


class CustomMetadataMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class CreateCustomMetadataRequest(BaseModel):
    CustomMetadata: CustomMetadataMap


class ResourceNameType(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=255, min_length=1, regex='[\\u0020-\\u202D\\u202F-\\uFFFF]+'),
    ]


class CreateFolderRequest(BaseModel):
    Name: Optional[ResourceNameType] = None
    ParentFolderId: ResourceIdType


class SharedLabels(BaseModel):
    __root__: Annotated[List[SharedLabel], Field(max_items=20)]


class CreateLabelsRequest(BaseModel):
    Labels: SharedLabels


class SubscriptionEndPointType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class SubscriptionProtocolType(Enum):
    HTTPS = 'HTTPS'


class SubscriptionType(Enum):
    ALL = 'ALL'


class CreateNotificationSubscriptionRequest(BaseModel):
    Endpoint: SubscriptionEndPointType
    Protocol: SubscriptionProtocolType
    SubscriptionType: SubscriptionType


class Subscription(BaseModel):
    """
    Describes a subscription.
    """

    SubscriptionId: Optional[IdType] = None
    EndPoint: Optional[SubscriptionEndPointType] = None
    Protocol: Optional[SubscriptionProtocolType] = None


class UsernameType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[\\w\\-+.]+(@[a-zA-Z0-9.\\-]+\\.[a-zA-Z]+)?',
        ),
    ]


class EmailAddressType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}',
        ),
    ]


class UserAttributeValueType(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class PasswordType(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=32, min_length=4, regex='[\\u0020-\\u00FF]+')
    ]


class TimeZoneIdType(SubscriptionEndPointType):
    pass


class StorageRuleType(BaseModel):
    """
    Describes the storage for a user.
    """

    StorageAllocatedInBytes: Optional[PositiveSizeType] = None
    StorageType: Optional[StorageType] = None


class CreateUserRequest(BaseModel):
    OrganizationId: Optional[IdType] = None
    Username: UsernameType
    EmailAddress: Optional[EmailAddressType] = None
    GivenName: UserAttributeValueType
    Surname: UserAttributeValueType
    Password: PasswordType
    TimeZoneId: Optional[TimeZoneIdType] = None
    StorageRule: Optional[StorageRuleType] = None


class CustomMetadataKeyList(BaseModel):
    __root__: Annotated[List[CustomMetadataKeyType], Field(max_items=8)]


class DeactivateUserRequest(BaseModel):
    pass


class DeleteCommentRequest(BaseModel):
    pass


class DeleteCustomMetadataRequest(BaseModel):
    pass


class DeleteDocumentRequest(BaseModel):
    pass


class DeleteFolderContentsRequest(BaseModel):
    pass


class DeleteFolderRequest(BaseModel):
    pass


class DeleteLabelsRequest(BaseModel):
    pass


class DeleteNotificationSubscriptionRequest(BaseModel):
    pass


class DeleteUserRequest(BaseModel):
    pass


class LimitType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=999.0)]


class MarkerType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=1, regex='[\\u0000-\\u00FF]+')
    ]


class DescribeActivitiesRequest(BaseModel):
    pass


class DescribeCommentsRequest(BaseModel):
    pass


class PageMarkerType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class FieldNamesType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='[\\w,]+')]


class DescribeDocumentVersionsRequest(BaseModel):
    pass


class ResourceSortType(Enum):
    DATE = 'DATE'
    NAME = 'NAME'


class OrderType(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class FolderContentType(Enum):
    ALL = 'ALL'
    DOCUMENT = 'DOCUMENT'
    FOLDER = 'FOLDER'


class DescribeFolderContentsRequest(BaseModel):
    pass


class SearchQueryType(BaseModel):
    __root__: Annotated[
        SecretStr, Field(max_length=512, min_length=1, regex='[\\u0020-\\uFFFF]+')
    ]


class PositiveIntegerType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class DescribeGroupsRequest(BaseModel):
    pass


class DescribeNotificationSubscriptionsRequest(BaseModel):
    pass


class SubscriptionList(BaseModel):
    __root__: Annotated[List[Subscription], Field(max_items=256)]


class DescribeResourcePermissionsRequest(BaseModel):
    pass


class DescribeRootFoldersRequest(BaseModel):
    pass


class UserIdsType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2000, min_length=1, regex='[&\\w+-.@, ]+')
    ]


class UserFilterType(Enum):
    ALL = 'ALL'
    ACTIVE_PENDING = 'ACTIVE_PENDING'


class UserSortType(Enum):
    USER_NAME = 'USER_NAME'
    FULL_NAME = 'FULL_NAME'
    STORAGE_LIMIT = 'STORAGE_LIMIT'
    USER_STATUS = 'USER_STATUS'
    STORAGE_USED = 'STORAGE_USED'


class DescribeUsersRequest(BaseModel):
    pass


class SizeType(BaseModel):
    __root__: int


class DocumentContentType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class ResourceStateType(Enum):
    ACTIVE = 'ACTIVE'
    RESTORING = 'RESTORING'
    RECYCLING = 'RECYCLING'
    RECYCLED = 'RECYCLED'


class DocumentSourceType(Enum):
    ORIGINAL = 'ORIGINAL'
    WITH_COMMENTS = 'WITH_COMMENTS'


class UrlType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1024, min_length=1)]


class DocumentSourceUrlMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class DocumentStatusType(Enum):
    INITIALIZED = 'INITIALIZED'
    ACTIVE = 'ACTIVE'


class DocumentThumbnailType(Enum):
    SMALL = 'SMALL'
    SMALL_HQ = 'SMALL_HQ'
    LARGE = 'LARGE'


class DocumentThumbnailUrlMap(DocumentSourceUrlMap):
    pass


class HashType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=0, regex='[&\\w+-.@]+')]


class DocumentVersionStatus(Enum):
    ACTIVE = 'ACTIVE'


class GetCurrentUserRequest(BaseModel):
    pass


class GetDocumentPathRequest(BaseModel):
    pass


class GetDocumentRequest(BaseModel):
    pass


class GetDocumentVersionRequest(BaseModel):
    pass


class GetFolderPathRequest(BaseModel):
    pass


class GetFolderRequest(BaseModel):
    pass


class ResourceCollectionType(Enum):
    SHARED_WITH_ME = 'SHARED_WITH_ME'


class GetResourcesRequest(BaseModel):
    pass


class GroupNameType(BaseModel):
    __root__: str


class GroupMetadata(BaseModel):
    """
    Describes the metadata of a user group.
    """

    Id: Optional[IdType] = None
    Name: Optional[GroupNameType] = None


class HeaderNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='[\\w-]+')]


class HeaderValueType(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class InitiateDocumentVersionUploadRequest(BaseModel):
    Id: Optional[ResourceIdType] = None
    Name: Optional[ResourceNameType] = None
    ContentCreatedTimestamp: Optional[TimestampType] = None
    ContentModifiedTimestamp: Optional[TimestampType] = None
    ContentType: Optional[DocumentContentType] = None
    DocumentSizeInBytes: Optional[SizeType] = None
    ParentFolderId: ResourceIdType


class LocaleType(Enum):
    en = 'en'
    fr = 'fr'
    ko = 'ko'
    de = 'de'
    es = 'es'
    ja = 'ja'
    ru = 'ru'
    zh_CN = 'zh_CN'
    zh_TW = 'zh_TW'
    pt_BR = 'pt_BR'
    default = 'default'


class RoleType(Enum):
    VIEWER = 'VIEWER'
    CONTRIBUTOR = 'CONTRIBUTOR'
    OWNER = 'OWNER'
    COOWNER = 'COOWNER'


class RolePermissionType(Enum):
    DIRECT = 'DIRECT'
    INHERITED = 'INHERITED'


class PermissionInfo(BaseModel):
    """
    Describes the permissions.
    """

    Role: Optional[RoleType] = None
    Type: Optional[RolePermissionType] = None


class PermissionInfoList(BaseModel):
    __root__: List[PermissionInfo]


class PrincipalType(Enum):
    USER = 'USER'
    GROUP = 'GROUP'
    INVITE = 'INVITE'
    ANONYMOUS = 'ANONYMOUS'
    ORGANIZATION = 'ORGANIZATION'


class Principal(BaseModel):
    """
    Describes a resource.
    """

    Id: Optional[IdType] = None
    Type: Optional[PrincipalType] = None
    Roles: Optional[PermissionInfoList] = None


class RemoveAllResourcePermissionsRequest(BaseModel):
    pass


class RemoveResourcePermissionRequest(BaseModel):
    pass


class ResourceType(Enum):
    FOLDER = 'FOLDER'
    DOCUMENT = 'DOCUMENT'


class ResourcePathComponent(BaseModel):
    """
    Describes the resource path.
    """

    Id: Optional[IdType] = None
    Name: Optional[ResourceNameType] = None


class ShareStatusType(Enum):
    SUCCESS = 'SUCCESS'
    FAILURE = 'FAILURE'


class ShareResult(BaseModel):
    """
    Describes the share results of a resource.
    """

    PrincipalId: Optional[IdType] = None
    InviteePrincipalId: Optional[IdType] = None
    Role: Optional[RoleType] = None
    Status: Optional[ShareStatusType] = None
    ShareId: Optional[ResourceIdType] = None
    StatusMessage: Optional[MessageType] = None


class SignedHeaderMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class UpdateDocumentRequest(BaseModel):
    Name: Optional[ResourceNameType] = None
    ParentFolderId: Optional[ResourceIdType] = None
    ResourceState: Optional[ResourceStateType] = None


class UpdateDocumentVersionRequest(BaseModel):
    VersionStatus: Optional[DocumentVersionStatus] = None


class UpdateFolderRequest(BaseModel):
    Name: Optional[ResourceNameType] = None
    ParentFolderId: Optional[ResourceIdType] = None
    ResourceState: Optional[ResourceStateType] = None


class UserType(Enum):
    USER = 'USER'
    ADMIN = 'ADMIN'
    POWERUSER = 'POWERUSER'
    MINIMALUSER = 'MINIMALUSER'
    WORKSPACESUSER = 'WORKSPACESUSER'


class UpdateUserRequest(BaseModel):
    GivenName: Optional[UserAttributeValueType] = None
    Surname: Optional[UserAttributeValueType] = None
    Type: Optional[UserType] = None
    StorageRule: Optional[StorageRuleType] = None
    TimeZoneId: Optional[TimeZoneIdType] = None
    Locale: Optional[LocaleType] = None
    GrantPoweruserPrivileges: Optional[BooleanEnumType] = None


class UserStatusType(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    PENDING = 'PENDING'


class UserStorageMetadata(BaseModel):
    """
    Describes the storage for a user.
    """

    StorageUtilizedInBytes: Optional[SizeType] = None
    StorageRule: Optional[StorageRuleType] = None


class SharePrincipal(BaseModel):
    """
    Describes the recipient type and ID, if available.
    """

    Id: IdType
    Type: PrincipalType
    Role: RoleType


class CreateNotificationSubscriptionResponse(BaseModel):
    Subscription: Optional[Subscription] = None


class DescribeNotificationSubscriptionsResponse(BaseModel):
    Subscriptions: Optional[SubscriptionList] = None
    Marker: Optional[PageMarkerType] = None


class User(BaseModel):
    """
    Describes a user.
    """

    Id: Optional[IdType] = None
    Username: Optional[UsernameType] = None
    EmailAddress: Optional[EmailAddressType] = None
    GivenName: Optional[UserAttributeValueType] = None
    Surname: Optional[UserAttributeValueType] = None
    OrganizationId: Optional[IdType] = None
    RootFolderId: Optional[ResourceIdType] = None
    RecycleBinFolderId: Optional[ResourceIdType] = None
    Status: Optional[UserStatusType] = None
    Type: Optional[UserType] = None
    CreatedTimestamp: Optional[TimestampType] = None
    ModifiedTimestamp: Optional[TimestampType] = None
    TimeZoneId: Optional[TimeZoneIdType] = None
    Locale: Optional[LocaleType] = None
    Storage: Optional[UserStorageMetadata] = None


class UserMetadata(BaseModel):
    """
    Describes the metadata of the user.
    """

    Id: Optional[IdType] = None
    Username: Optional[UsernameType] = None
    GivenName: Optional[UserAttributeValueType] = None
    Surname: Optional[UserAttributeValueType] = None
    EmailAddress: Optional[EmailAddressType] = None


class ResourceMetadata(BaseModel):
    """
    Describes the metadata of a resource.
    """

    Type: Optional[ResourceType] = None
    Name: Optional[ResourceNameType] = None
    OriginalName: Optional[ResourceNameType] = None
    Id: Optional[ResourceIdType] = None
    VersionId: Optional[DocumentVersionIdType] = None
    Owner: Optional[UserMetadata] = None
    ParentId: Optional[ResourceIdType] = None


class CommentMetadata(BaseModel):
    """
    Describes the metadata of a comment.
    """

    CommentId: Optional[CommentIdType] = None
    Contributor: Optional[User] = None
    CreatedTimestamp: Optional[TimestampType] = None
    CommentStatus: Optional[CommentStatusType] = None
    RecipientId: Optional[IdType] = None


class SharePrincipalList(BaseModel):
    __root__: List[SharePrincipal]


class AddResourcePermissionsRequest(BaseModel):
    Principals: SharePrincipalList
    NotificationOptions: Optional[NotificationOptions] = None


class ShareResultsList(BaseModel):
    __root__: List[ShareResult]


class Comment(BaseModel):
    """
    Describes a comment.
    """

    CommentId: CommentIdType
    ParentId: Optional[CommentIdType] = None
    ThreadId: Optional[CommentIdType] = None
    Text: Optional[CommentTextType] = None
    Contributor: Optional[User] = None
    CreatedTimestamp: Optional[TimestampType] = None
    Status: Optional[CommentStatusType] = None
    Visibility: Optional[CommentVisibilityType] = None
    RecipientId: Optional[IdType] = None


class CommentList(BaseModel):
    __root__: List[Comment]


class FolderMetadata(BaseModel):
    """
    Describes a folder.
    """

    Id: Optional[ResourceIdType] = None
    Name: Optional[ResourceNameType] = None
    CreatorId: Optional[IdType] = None
    ParentFolderId: Optional[ResourceIdType] = None
    CreatedTimestamp: Optional[TimestampType] = None
    ModifiedTimestamp: Optional[TimestampType] = None
    ResourceState: Optional[ResourceStateType] = None
    Signature: Optional[HashType] = None
    Labels: Optional[SharedLabels] = None
    Size: Optional[SizeType] = None
    LatestVersionSize: Optional[SizeType] = None


class FolderMetadataList(BaseModel):
    __root__: List[FolderMetadata]


class GroupMetadataList(BaseModel):
    __root__: List[GroupMetadata]


class PrincipalList(BaseModel):
    __root__: List[Principal]


class OrganizationUserList(BaseModel):
    __root__: List[User]


class DocumentVersionMetadata(BaseModel):
    """
    Describes a version of a document.
    """

    Id: Optional[DocumentVersionIdType] = None
    Name: Optional[ResourceNameType] = None
    ContentType: Optional[DocumentContentType] = None
    Size: Optional[SizeType] = None
    Signature: Optional[HashType] = None
    Status: Optional[DocumentStatusType] = None
    CreatedTimestamp: Optional[TimestampType] = None
    ModifiedTimestamp: Optional[TimestampType] = None
    ContentCreatedTimestamp: Optional[TimestampType] = None
    ContentModifiedTimestamp: Optional[TimestampType] = None
    CreatorId: Optional[IdType] = None
    Thumbnail: Optional[DocumentThumbnailUrlMap] = None
    Source: Optional[DocumentSourceUrlMap] = None


class DocumentMetadata(BaseModel):
    """
    Describes the document.
    """

    Id: Optional[ResourceIdType] = None
    CreatorId: Optional[IdType] = None
    ParentFolderId: Optional[ResourceIdType] = None
    CreatedTimestamp: Optional[TimestampType] = None
    ModifiedTimestamp: Optional[TimestampType] = None
    LatestVersionMetadata: Optional[DocumentVersionMetadata] = None
    ResourceState: Optional[ResourceStateType] = None
    Labels: Optional[SharedLabels] = None


class UploadMetadata(BaseModel):
    """
    Describes the upload.
    """

    UploadUrl: Optional[UrlType] = None
    SignedHeaders: Optional[SignedHeaderMap] = None


class UserMetadataList(BaseModel):
    __root__: List[UserMetadata]


class ResourcePathComponentList(BaseModel):
    __root__: List[ResourcePathComponent]


class ActivateUserResponse(BaseModel):
    User: Optional[User] = None


class AddResourcePermissionsResponse(BaseModel):
    ShareResults: Optional[ShareResultsList] = None


class CreateCommentResponse(BaseModel):
    Comment: Optional[Comment] = None


class CreateFolderResponse(BaseModel):
    Metadata: Optional[FolderMetadata] = None


class CreateUserResponse(ActivateUserResponse):
    pass


class DescribeCommentsResponse(BaseModel):
    Comments: Optional[CommentList] = None
    Marker: Optional[MarkerType] = None


class DescribeGroupsResponse(BaseModel):
    Groups: Optional[GroupMetadataList] = None
    Marker: Optional[MarkerType] = None


class DescribeResourcePermissionsResponse(BaseModel):
    Principals: Optional[PrincipalList] = None
    Marker: Optional[PageMarkerType] = None


class DescribeRootFoldersResponse(BaseModel):
    Folders: Optional[FolderMetadataList] = None
    Marker: Optional[PageMarkerType] = None


class DescribeUsersResponse(BaseModel):
    Users: Optional[OrganizationUserList] = None
    TotalNumberOfUsers: Optional[SizeType] = None
    Marker: Optional[PageMarkerType] = None


class GetCurrentUserResponse(ActivateUserResponse):
    pass


class GetDocumentResponse(BaseModel):
    Metadata: Optional[DocumentMetadata] = None
    CustomMetadata: Optional[CustomMetadataMap] = None


class GetDocumentVersionResponse(BaseModel):
    Metadata: Optional[DocumentVersionMetadata] = None
    CustomMetadata: Optional[CustomMetadataMap] = None


class GetFolderResponse(BaseModel):
    Metadata: Optional[FolderMetadata] = None
    CustomMetadata: Optional[CustomMetadataMap] = None


class InitiateDocumentVersionUploadResponse(BaseModel):
    Metadata: Optional[DocumentMetadata] = None
    UploadMetadata: Optional[UploadMetadata] = None


class UpdateUserResponse(ActivateUserResponse):
    pass


class Participants(BaseModel):
    """
    Describes the users or user groups.
    """

    Users: Optional[UserMetadataList] = None
    Groups: Optional[GroupMetadataList] = None


class Activity(BaseModel):
    """
    Describes the activity information.
    """

    Type: Optional[ActivityType] = None
    TimeStamp: Optional[TimestampType] = None
    IsIndirectActivity: Optional[BooleanType] = None
    OrganizationId: Optional[IdType] = None
    Initiator: Optional[UserMetadata] = None
    Participants: Optional[Participants] = None
    ResourceMetadata: Optional[ResourceMetadata] = None
    OriginalParent: Optional[ResourceMetadata] = None
    CommentMetadata: Optional[CommentMetadata] = None


class UserActivities(BaseModel):
    __root__: List[Activity]


class DocumentVersionMetadataList(BaseModel):
    __root__: List[DocumentVersionMetadata]


class DocumentMetadataList(BaseModel):
    __root__: List[DocumentMetadata]


class ResourcePath(BaseModel):
    """
    Describes the path information of a resource.
    """

    Components: Optional[ResourcePathComponentList] = None


class DescribeActivitiesResponse(BaseModel):
    UserActivities: Optional[UserActivities] = None
    Marker: Optional[MarkerType] = None


class DescribeDocumentVersionsResponse(BaseModel):
    DocumentVersions: Optional[DocumentVersionMetadataList] = None
    Marker: Optional[PageMarkerType] = None


class DescribeFolderContentsResponse(BaseModel):
    Folders: Optional[FolderMetadataList] = None
    Documents: Optional[DocumentMetadataList] = None
    Marker: Optional[PageMarkerType] = None


class GetDocumentPathResponse(BaseModel):
    Path: Optional[ResourcePath] = None


class GetFolderPathResponse(GetDocumentPathResponse):
    pass


class GetResourcesResponse(DescribeFolderContentsResponse):
    pass

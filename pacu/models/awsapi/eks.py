# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:48:47+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidParameterException(BaseModel):
    __root__: Any


class ClientException(InvalidParameterException):
    pass


class ServerException(InvalidParameterException):
    pass


class ResourceInUseException(InvalidParameterException):
    pass


class ResourceNotFoundException(InvalidParameterException):
    pass


class InvalidRequestException(InvalidParameterException):
    pass


class String(BaseModel):
    __root__: str


class RequiredClaimsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class StringList(BaseModel):
    __root__: List[String]


class BoxedBoolean(BaseModel):
    __root__: bool


class ResourceLimitExceededException(InvalidParameterException):
    pass


class ServiceUnavailableException(InvalidParameterException):
    pass


class UnsupportedAvailabilityZoneException(InvalidParameterException):
    pass


class ZeroCapacity(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class Capacity(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class LabelValue(BaseModel):
    __root__: Annotated[str, Field(max_length=63, min_length=1)]


class NonZeroInteger(Capacity):
    pass


class PercentCapacity(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ListAddonsResponse(BaseModel):
    addons: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListClustersResponse(BaseModel):
    clusters: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListFargateProfilesResponse(BaseModel):
    fargateProfileNames: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListNodegroupsResponse(BaseModel):
    nodegroups: Optional[StringList] = None
    nextToken: Optional[String] = None


class BadRequestException(InvalidParameterException):
    pass


class NotFoundException(InvalidParameterException):
    pass


class ListUpdatesResponse(BaseModel):
    updateIds: Optional[StringList] = None
    nextToken: Optional[String] = None


class ConnectorConfigProvider(Enum):
    EKS_ANYWHERE = 'EKS_ANYWHERE'
    ANTHOS = 'ANTHOS'
    GKE = 'GKE'
    AKS = 'AKS'
    OPENSHIFT = 'OPENSHIFT'
    TANZU = 'TANZU'
    RANCHER = 'RANCHER'
    EC2 = 'EC2'
    OTHER = 'OTHER'


class TagResourceResponse(BaseModel):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class LabelsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class LabelsKeyList(StringList):
    pass


class AMITypes(Enum):
    AL2_x86_64 = 'AL2_x86_64'
    AL2_x86_64_GPU = 'AL2_x86_64_GPU'
    AL2_ARM_64 = 'AL2_ARM_64'
    CUSTOM = 'CUSTOM'


class ClusterName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=1, regex='^[0-9A-Za-z][A-Za-z0-9\\-_]*')
    ]


class AddonStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    CREATE_FAILED = 'CREATE_FAILED'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    DELETE_FAILED = 'DELETE_FAILED'
    DEGRADED = 'DEGRADED'


class Timestamp(BaseModel):
    __root__: datetime


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AddonIssueCode(Enum):
    AccessDenied = 'AccessDenied'
    InternalFailure = 'InternalFailure'
    ClusterUnreachable = 'ClusterUnreachable'
    InsufficientNumberOfReplicas = 'InsufficientNumberOfReplicas'
    ConfigurationConflict = 'ConfigurationConflict'
    AdmissionRequestDenied = 'AdmissionRequestDenied'
    UnsupportedAddonModification = 'UnsupportedAddonModification'
    K8sResourceNotFound = 'K8sResourceNotFound'


class AddonIssue(BaseModel):
    """
    An issue related to an add-on.
    """

    code: Optional[AddonIssueCode] = None
    message: Optional[String] = None
    resourceIds: Optional[StringList] = None


class OidcIdentityProviderConfigRequest(BaseModel):
    """
    An object representing an OpenID Connect (OIDC) configuration. Before associating an OIDC identity provider to your cluster, review the considerations in <a href="https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html">Authenticating users for your cluster from an OpenID Connect identity provider</a> in the <i>Amazon EKS User Guide</i>.
    """

    identityProviderConfigName: String
    issuerUrl: String
    clientId: String
    usernameClaim: Optional[String] = None
    usernamePrefix: Optional[String] = None
    groupsClaim: Optional[String] = None
    groupsPrefix: Optional[String] = None
    requiredClaims: Optional[RequiredClaimsMap] = None


class AssociateIdentityProviderConfigRequest(BaseModel):
    oidc: OidcIdentityProviderConfigRequest
    tags: Optional[TagMap] = None
    clientRequestToken: Optional[String] = None


class AutoScalingGroup(BaseModel):
    """
    An Auto Scaling group that is associated with an Amazon EKS managed node group.
    """

    name: Optional[String] = None


class AutoScalingGroupList(BaseModel):
    __root__: List[AutoScalingGroup]


class Boolean(BoxedBoolean):
    pass


class BoxedInteger(BaseModel):
    __root__: int


class CapacityTypes(Enum):
    ON_DEMAND = 'ON_DEMAND'
    SPOT = 'SPOT'


class Certificate(BaseModel):
    """
    An object representing the <code>certificate-authority-data</code> for your cluster.
    """

    data: Optional[String] = None


class VpcConfigResponse(BaseModel):
    """
    An object representing an Amazon EKS cluster VPC configuration response.
    """

    subnetIds: Optional[StringList] = None
    securityGroupIds: Optional[StringList] = None
    clusterSecurityGroupId: Optional[String] = None
    vpcId: Optional[String] = None
    endpointPublicAccess: Optional[Boolean] = None
    endpointPrivateAccess: Optional[Boolean] = None
    publicAccessCidrs: Optional[StringList] = None


class KubernetesNetworkConfigResponse(BaseModel):
    """
    The Kubernetes network configuration for the cluster.
    """

    serviceIpv4Cidr: Optional[String] = None


class ClusterStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    UPDATING = 'UPDATING'
    PENDING = 'PENDING'


class ConnectorConfigResponse(BaseModel):
    """
    The full description of your connected cluster.
    """

    activationId: Optional[String] = None
    activationCode: Optional[String] = None
    activationExpiry: Optional[Timestamp] = None
    provider: Optional[String] = None
    roleArn: Optional[String] = None


class Compatibility(BaseModel):
    """
    Compatibility information.
    """

    clusterVersion: Optional[String] = None
    platformVersions: Optional[StringList] = None
    defaultVersion: Optional[Boolean] = None


class ConnectorConfigRequest(BaseModel):
    """
    The configuration sent to a cluster for configuration.
    """

    roleArn: String
    provider: ConnectorConfigProvider


class RoleArn3(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class ResolveConflicts(Enum):
    OVERWRITE = 'OVERWRITE'
    NONE = 'NONE'


class CreateAddonRequest(BaseModel):
    addonName: String
    addonVersion: Optional[String] = None
    serviceAccountRoleArn: Optional[RoleArn3] = None
    resolveConflicts: Optional[ResolveConflicts] = None
    clientRequestToken: Optional[String] = None
    tags: Optional[TagMap] = None


class VpcConfigRequest(BaseModel):
    """
    An object representing the VPC configuration to use for an Amazon EKS cluster.
    """

    subnetIds: Optional[StringList] = None
    securityGroupIds: Optional[StringList] = None
    endpointPublicAccess: Optional[BoxedBoolean] = None
    endpointPrivateAccess: Optional[BoxedBoolean] = None
    publicAccessCidrs: Optional[StringList] = None


class KubernetesNetworkConfigRequest(KubernetesNetworkConfigResponse):
    """
    The Kubernetes network configuration for the cluster.
    """

    pass


class NodegroupScalingConfig(BaseModel):
    """
    An object representing the scaling configuration details for the Auto Scaling group that is associated with your node group. When creating a node group, you must specify all or none of the properties. When updating a node group, you can specify any or none of the properties.
    """

    minSize: Optional[ZeroCapacity] = None
    maxSize: Optional[Capacity] = None
    desiredSize: Optional[ZeroCapacity] = None


class RemoteAccessConfig(BaseModel):
    """
    An object representing the remote access configuration for the managed node group.
    """

    ec2SshKey: Optional[String] = None
    sourceSecurityGroups: Optional[StringList] = None


class LaunchTemplateSpecification(BaseModel):
    """
    <p>An object representing a node group launch template specification. The launch template cannot include <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html"> <code>SubnetId</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html"> <code>IamInstanceProfile</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html"> <code>RequestSpotInstances</code> </a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_HibernationOptionsRequest.html"> <code>HibernationOptions</code> </a>, or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TerminateInstances.html"> <code>TerminateInstances</code> </a>, or the node group deployment or update will fail. For more information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateLaunchTemplate.html"> <code>CreateLaunchTemplate</code> </a> in the Amazon EC2 API Reference. For more information about using launch templates with Amazon EKS, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html">Launch template support</a> in the Amazon EKS User Guide.</p> <p>Specify either <code>name</code> or <code>id</code>, but not both.</p>
    """

    name: Optional[String] = None
    version: Optional[String] = None
    id: Optional[String] = None


class NodegroupUpdateConfig(BaseModel):
    """
    The node group update configuration.
    """

    maxUnavailable: Optional[NonZeroInteger] = None
    maxUnavailablePercentage: Optional[PercentCapacity] = None


class DeleteAddonRequest(BaseModel):
    pass


class DeleteClusterRequest(BaseModel):
    pass


class DeleteFargateProfileRequest(BaseModel):
    pass


class DeleteNodegroupRequest(BaseModel):
    pass


class DeregisterClusterRequest(BaseModel):
    pass


class DescribeAddonRequest(BaseModel):
    pass


class DescribeAddonVersionsRequestMaxResults(PercentCapacity):
    pass


class DescribeAddonVersionsRequest(BaseModel):
    pass


class DescribeClusterRequest(BaseModel):
    pass


class DescribeFargateProfileRequest(BaseModel):
    pass


class IdentityProviderConfig1(BaseModel):
    """
    An object representing an identity provider configuration.
    """

    type: String
    name: String


class DescribeIdentityProviderConfigRequest(BaseModel):
    identityProviderConfig: IdentityProviderConfig1


class DescribeNodegroupRequest(BaseModel):
    pass


class DescribeUpdateRequest(BaseModel):
    pass


class DisassociateIdentityProviderConfigRequest(BaseModel):
    identityProviderConfig: IdentityProviderConfig1
    clientRequestToken: Optional[String] = None


class Provider(BaseModel):
    """
    Identifies the Key Management Service (KMS) key used to encrypt the secrets.
    """

    keyArn: Optional[String] = None


class ErrorCode(Enum):
    SubnetNotFound = 'SubnetNotFound'
    SecurityGroupNotFound = 'SecurityGroupNotFound'
    EniLimitReached = 'EniLimitReached'
    IpNotAvailable = 'IpNotAvailable'
    AccessDenied = 'AccessDenied'
    OperationNotPermitted = 'OperationNotPermitted'
    VpcIdNotFound = 'VpcIdNotFound'
    Unknown = 'Unknown'
    NodeCreationFailure = 'NodeCreationFailure'
    PodEvictionFailure = 'PodEvictionFailure'
    InsufficientFreeAddresses = 'InsufficientFreeAddresses'
    ClusterUnreachable = 'ClusterUnreachable'
    InsufficientNumberOfReplicas = 'InsufficientNumberOfReplicas'
    ConfigurationConflict = 'ConfigurationConflict'
    AdmissionRequestDenied = 'AdmissionRequestDenied'
    UnsupportedAddonModification = 'UnsupportedAddonModification'
    K8sResourceNotFound = 'K8sResourceNotFound'


class ErrorDetail(BaseModel):
    """
    An object representing an error when an asynchronous operation fails.
    """

    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[String] = None
    resourceIds: Optional[StringList] = None


class ErrorDetails(BaseModel):
    __root__: List[ErrorDetail]


class FargateProfileStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    CREATE_FAILED = 'CREATE_FAILED'
    DELETE_FAILED = 'DELETE_FAILED'


class FargateProfileLabel(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class FargateProfilesRequestMaxResults(PercentCapacity):
    pass


class OIDC(BaseModel):
    """
    An object representing the <a href="https://openid.net/connect/">OpenID Connect</a> (OIDC) identity provider information for the cluster.
    """

    issuer: Optional[String] = None


class IdentityProviderConfigs(BaseModel):
    __root__: List[IdentityProviderConfig1]


class IncludeClustersList(StringList):
    pass


class NodegroupIssueCode(Enum):
    AutoScalingGroupNotFound = 'AutoScalingGroupNotFound'
    AutoScalingGroupInvalidConfiguration = 'AutoScalingGroupInvalidConfiguration'
    Ec2SecurityGroupNotFound = 'Ec2SecurityGroupNotFound'
    Ec2SecurityGroupDeletionFailure = 'Ec2SecurityGroupDeletionFailure'
    Ec2LaunchTemplateNotFound = 'Ec2LaunchTemplateNotFound'
    Ec2LaunchTemplateVersionMismatch = 'Ec2LaunchTemplateVersionMismatch'
    Ec2SubnetNotFound = 'Ec2SubnetNotFound'
    Ec2SubnetInvalidConfiguration = 'Ec2SubnetInvalidConfiguration'
    IamInstanceProfileNotFound = 'IamInstanceProfileNotFound'
    IamLimitExceeded = 'IamLimitExceeded'
    IamNodeRoleNotFound = 'IamNodeRoleNotFound'
    NodeCreationFailure = 'NodeCreationFailure'
    AsgInstanceLaunchFailures = 'AsgInstanceLaunchFailures'
    InstanceLimitExceeded = 'InstanceLimitExceeded'
    InsufficientFreeAddresses = 'InsufficientFreeAddresses'
    AccessDenied = 'AccessDenied'
    InternalFailure = 'InternalFailure'
    ClusterUnreachable = 'ClusterUnreachable'


class Issue(BaseModel):
    """
    An object representing an issue with an Amazon EKS resource.
    """

    code: Optional[NodegroupIssueCode] = None
    message: Optional[String] = None
    resourceIds: Optional[StringList] = None


class IssueList(BaseModel):
    __root__: List[Issue]


class ListAddonsRequestMaxResults(PercentCapacity):
    pass


class ListAddonsRequest(BaseModel):
    pass


class ListClustersRequestMaxResults(PercentCapacity):
    pass


class ListClustersRequest(BaseModel):
    pass


class ListFargateProfilesRequest(BaseModel):
    pass


class ListIdentityProviderConfigsRequestMaxResults(PercentCapacity):
    pass


class ListIdentityProviderConfigsRequest(BaseModel):
    pass


class ListNodegroupsRequestMaxResults(PercentCapacity):
    pass


class ListNodegroupsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class ListUpdatesRequestMaxResults(PercentCapacity):
    pass


class ListUpdatesRequest(BaseModel):
    pass


class LogType(Enum):
    api = 'api'
    audit = 'audit'
    authenticator = 'authenticator'
    controllerManager = 'controllerManager'
    scheduler = 'scheduler'


class NodegroupStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    CREATE_FAILED = 'CREATE_FAILED'
    DELETE_FAILED = 'DELETE_FAILED'
    DEGRADED = 'DEGRADED'


class NodegroupResources(BaseModel):
    """
    An object representing the resources associated with the node group, such as Auto Scaling groups and security groups for remote access.
    """

    autoScalingGroups: Optional[AutoScalingGroupList] = None
    remoteAccessSecurityGroup: Optional[String] = None


class NodegroupHealth(BaseModel):
    """
    An object representing the health status of the node group.
    """

    issues: Optional[IssueList] = None


class ConfigStatus(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    ACTIVE = 'ACTIVE'


class RegisterClusterRequest(BaseModel):
    name: ClusterName
    connectorConfig: ConnectorConfigRequest
    clientRequestToken: Optional[String] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagResourceRequest(BaseModel):
    tags: TagMap


class TaintKey(LabelValue):
    pass


class TaintValue(BaseModel):
    __root__: Annotated[str, Field(max_length=63, min_length=0)]


class TaintEffect(Enum):
    NO_SCHEDULE = 'NO_SCHEDULE'
    NO_EXECUTE = 'NO_EXECUTE'
    PREFER_NO_SCHEDULE = 'PREFER_NO_SCHEDULE'


class UntagResourceRequest(BaseModel):
    pass


class UpdateStatus(Enum):
    InProgress = 'InProgress'
    Failed = 'Failed'
    Cancelled = 'Cancelled'
    Successful = 'Successful'


class UpdateType(Enum):
    VersionUpdate = 'VersionUpdate'
    EndpointAccessUpdate = 'EndpointAccessUpdate'
    LoggingUpdate = 'LoggingUpdate'
    ConfigUpdate = 'ConfigUpdate'
    AssociateIdentityProviderConfig = 'AssociateIdentityProviderConfig'
    DisassociateIdentityProviderConfig = 'DisassociateIdentityProviderConfig'
    AssociateEncryptionConfig = 'AssociateEncryptionConfig'
    AddonUpdate = 'AddonUpdate'


class UpdateAddonRequest(BaseModel):
    addonVersion: Optional[String] = None
    serviceAccountRoleArn: Optional[RoleArn3] = None
    resolveConflicts: Optional[ResolveConflicts] = None
    clientRequestToken: Optional[String] = None


class UpdateClusterVersionRequest(BaseModel):
    version: String
    clientRequestToken: Optional[String] = None


class UpdateLabelsPayload(BaseModel):
    """
    An object representing a Kubernetes label change for a managed node group.
    """

    addOrUpdateLabels: Optional[LabelsMap] = None
    removeLabels: Optional[LabelsKeyList] = None


class UpdateNodegroupVersionRequest(BaseModel):
    version: Optional[String] = None
    releaseVersion: Optional[String] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    force: Optional[Boolean] = None
    clientRequestToken: Optional[String] = None


class UpdateParamType(Enum):
    Version = 'Version'
    PlatformVersion = 'PlatformVersion'
    EndpointPrivateAccess = 'EndpointPrivateAccess'
    EndpointPublicAccess = 'EndpointPublicAccess'
    ClusterLogging = 'ClusterLogging'
    DesiredSize = 'DesiredSize'
    LabelsToAdd = 'LabelsToAdd'
    LabelsToRemove = 'LabelsToRemove'
    TaintsToAdd = 'TaintsToAdd'
    TaintsToRemove = 'TaintsToRemove'
    MaxSize = 'MaxSize'
    MinSize = 'MinSize'
    ReleaseVersion = 'ReleaseVersion'
    PublicAccessCidrs = 'PublicAccessCidrs'
    LaunchTemplateName = 'LaunchTemplateName'
    LaunchTemplateVersion = 'LaunchTemplateVersion'
    IdentityProviderConfig = 'IdentityProviderConfig'
    EncryptionConfig = 'EncryptionConfig'
    AddonVersion = 'AddonVersion'
    ServiceAccountRoleArn = 'ServiceAccountRoleArn'
    ResolveConflicts = 'ResolveConflicts'
    MaxUnavailable = 'MaxUnavailable'
    MaxUnavailablePercentage = 'MaxUnavailablePercentage'


class UpdateParam(BaseModel):
    """
    An object representing the details of an update request.
    """

    type: Optional[UpdateParamType] = None
    value: Optional[String] = None


class LabelKey(LabelValue):
    pass


class RequiredClaimsKey(LabelValue):
    pass


class RequiredClaimsValue(BaseModel):
    __root__: Annotated[str, Field(max_length=253, min_length=1)]


class EncryptionConfig(BaseModel):
    """
    The encryption configuration for the cluster.
    """

    resources: Optional[StringList] = None
    provider: Optional[Provider] = None


class FargateProfileSelector(BaseModel):
    """
    An object representing an Fargate profile selector.
    """

    namespace: Optional[String] = None
    labels: Optional[FargateProfileLabel] = None


class Taint(BaseModel):
    """
    A property that allows a node to repel a set of pods.
    """

    key: Optional[TaintKey] = None
    value: Optional[TaintValue] = None
    effect: Optional[TaintEffect] = None


class ListIdentityProviderConfigsResponse(BaseModel):
    identityProviderConfigs: Optional[IdentityProviderConfigs] = None
    nextToken: Optional[String] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[TagMap] = None


class TaintsList(BaseModel):
    __root__: List[Taint]


class AddonIssueList(BaseModel):
    __root__: List[AddonIssue]


class Compatibilities(BaseModel):
    __root__: List[Compatibility]


class AddonVersionInfo(BaseModel):
    """
    Information about an add-on version.
    """

    addonVersion: Optional[String] = None
    architecture: Optional[StringList] = None
    compatibilities: Optional[Compatibilities] = None


class EncryptionConfigList(BaseModel):
    __root__: Annotated[List[EncryptionConfig], Field(max_items=1)]


class AssociateEncryptionConfigRequest(BaseModel):
    encryptionConfig: EncryptionConfigList
    clientRequestToken: Optional[String] = None


class Identity(BaseModel):
    """
    An object representing an identity provider.
    """

    oidc: Optional[OIDC] = None


class FargateProfileSelectors(BaseModel):
    __root__: List[FargateProfileSelector]


class CreateFargateProfileRequest(BaseModel):
    fargateProfileName: String
    podExecutionRoleArn: String
    subnets: Optional[StringList] = None
    selectors: Optional[FargateProfileSelectors] = None
    clientRequestToken: Optional[String] = None
    tags: Optional[TagMap] = None


class FargateProfile(BaseModel):
    """
    An object representing an Fargate profile.
    """

    fargateProfileName: Optional[String] = None
    fargateProfileArn: Optional[String] = None
    clusterName: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    podExecutionRoleArn: Optional[String] = None
    subnets: Optional[StringList] = None
    selectors: Optional[FargateProfileSelectors] = None
    status: Optional[FargateProfileStatus] = None
    tags: Optional[TagMap] = None


class CreateNodegroupRequest(BaseModel):
    nodegroupName: String
    scalingConfig: Optional[NodegroupScalingConfig] = None
    diskSize: Optional[BoxedInteger] = None
    subnets: StringList
    instanceTypes: Optional[StringList] = None
    amiType: Optional[AMITypes] = None
    remoteAccess: Optional[RemoteAccessConfig] = None
    nodeRole: String
    labels: Optional[LabelsMap] = None
    taints: Optional[TaintsList] = None
    tags: Optional[TagMap] = None
    clientRequestToken: Optional[String] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    updateConfig: Optional[NodegroupUpdateConfig] = None
    capacityType: Optional[CapacityTypes] = None
    version: Optional[String] = None
    releaseVersion: Optional[String] = None


class Nodegroup(BaseModel):
    """
    An object representing an Amazon EKS managed node group.
    """

    nodegroupName: Optional[String] = None
    nodegroupArn: Optional[String] = None
    clusterName: Optional[String] = None
    version: Optional[String] = None
    releaseVersion: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    modifiedAt: Optional[Timestamp] = None
    status: Optional[NodegroupStatus] = None
    capacityType: Optional[CapacityTypes] = None
    scalingConfig: Optional[NodegroupScalingConfig] = None
    instanceTypes: Optional[StringList] = None
    subnets: Optional[StringList] = None
    remoteAccess: Optional[RemoteAccessConfig] = None
    amiType: Optional[AMITypes] = None
    nodeRole: Optional[String] = None
    labels: Optional[LabelsMap] = None
    taints: Optional[TaintsList] = None
    resources: Optional[NodegroupResources] = None
    diskSize: Optional[BoxedInteger] = None
    health: Optional[NodegroupHealth] = None
    updateConfig: Optional[NodegroupUpdateConfig] = None
    launchTemplate: Optional[LaunchTemplateSpecification] = None
    tags: Optional[TagMap] = None


class OidcIdentityProviderConfig(BaseModel):
    """
    An object that represents the configuration for an OpenID Connect (OIDC) identity provider.
    """

    identityProviderConfigName: Optional[String] = None
    identityProviderConfigArn: Optional[String] = None
    clusterName: Optional[String] = None
    issuerUrl: Optional[String] = None
    clientId: Optional[String] = None
    usernameClaim: Optional[String] = None
    usernamePrefix: Optional[String] = None
    groupsClaim: Optional[String] = None
    groupsPrefix: Optional[String] = None
    requiredClaims: Optional[RequiredClaimsMap] = None
    tags: Optional[TagMap] = None
    status: Optional[ConfigStatus] = None


class LogTypes(BaseModel):
    __root__: List[LogType]


class LogSetup(BaseModel):
    """
    An object representing the enabled or disabled Kubernetes control plane logs for your cluster.
    """

    types: Optional[LogTypes] = None
    enabled: Optional[BoxedBoolean] = None


class UpdateParams(BaseModel):
    __root__: List[UpdateParam]


class UpdateTaintsPayload(BaseModel):
    """
    An object representing the details of an update to a taints payload.
    """

    addOrUpdateTaints: Optional[TaintsList] = None
    removeTaints: Optional[TaintsList] = None


class UpdateNodegroupConfigRequest(BaseModel):
    labels: Optional[UpdateLabelsPayload] = None
    taints: Optional[UpdateTaintsPayload] = None
    scalingConfig: Optional[NodegroupScalingConfig] = None
    updateConfig: Optional[NodegroupUpdateConfig] = None
    clientRequestToken: Optional[String] = None


class LogSetups(BaseModel):
    __root__: List[LogSetup]


class CreateFargateProfileResponse(BaseModel):
    fargateProfile: Optional[FargateProfile] = None


class CreateNodegroupResponse(BaseModel):
    nodegroup: Optional[Nodegroup] = None


class DeleteFargateProfileResponse(CreateFargateProfileResponse):
    pass


class DeleteNodegroupResponse(CreateNodegroupResponse):
    pass


class DescribeFargateProfileResponse(CreateFargateProfileResponse):
    pass


class DescribeNodegroupResponse(CreateNodegroupResponse):
    pass


class AddonHealth(BaseModel):
    """
    The health of the add-on.
    """

    issues: Optional[AddonIssueList] = None


class Addon(BaseModel):
    """
    An Amazon EKS add-on.
    """

    addonName: Optional[String] = None
    clusterName: Optional[ClusterName] = None
    status: Optional[AddonStatus] = None
    addonVersion: Optional[String] = None
    health: Optional[AddonHealth] = None
    addonArn: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    modifiedAt: Optional[Timestamp] = None
    serviceAccountRoleArn: Optional[String] = None
    tags: Optional[TagMap] = None


class AddonVersionInfoList(BaseModel):
    __root__: List[AddonVersionInfo]


class AddonInfo(BaseModel):
    """
    Information about an add-on.
    """

    addonName: Optional[String] = None
    type: Optional[String] = None
    addonVersions: Optional[AddonVersionInfoList] = None


class Addons(BaseModel):
    __root__: List[AddonInfo]


class Update(BaseModel):
    """
    An object representing an asynchronous update.
    """

    id: Optional[String] = None
    status: Optional[UpdateStatus] = None
    type: Optional[UpdateType] = None
    params: Optional[UpdateParams] = None
    createdAt: Optional[Timestamp] = None
    errors: Optional[ErrorDetails] = None


class Logging(BaseModel):
    """
    An object representing the logging configuration for resources in your cluster.
    """

    clusterLogging: Optional[LogSetups] = None


class Cluster(BaseModel):
    """
    An object representing an Amazon EKS cluster.
    """

    name: Optional[String] = None
    arn: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    version: Optional[String] = None
    endpoint: Optional[String] = None
    roleArn: Optional[String] = None
    resourcesVpcConfig: Optional[VpcConfigResponse] = None
    kubernetesNetworkConfig: Optional[KubernetesNetworkConfigResponse] = None
    logging: Optional[Logging] = None
    identity: Optional[Identity] = None
    status: Optional[ClusterStatus] = None
    certificateAuthority: Optional[Certificate] = None
    clientRequestToken: Optional[String] = None
    platformVersion: Optional[String] = None
    tags: Optional[TagMap] = None
    encryptionConfig: Optional[EncryptionConfigList] = None
    connectorConfig: Optional[ConnectorConfigResponse] = None


class CreateClusterRequest(BaseModel):
    name: ClusterName
    version: Optional[String] = None
    roleArn: String
    resourcesVpcConfig: VpcConfigRequest
    kubernetesNetworkConfig: Optional[KubernetesNetworkConfigRequest] = None
    logging: Optional[Logging] = None
    clientRequestToken: Optional[String] = None
    tags: Optional[TagMap] = None
    encryptionConfig: Optional[EncryptionConfigList] = None


class IdentityProviderConfigResponse(BaseModel):
    """
    The full description of your identity configuration.
    """

    oidc: Optional[OidcIdentityProviderConfig] = None


class UpdateClusterConfigRequest(BaseModel):
    resourcesVpcConfig: Optional[VpcConfigRequest] = None
    logging: Optional[Logging] = None
    clientRequestToken: Optional[String] = None


class AssociateEncryptionConfigResponse(BaseModel):
    update: Optional[Update] = None


class AssociateIdentityProviderConfigResponse(BaseModel):
    update: Optional[Update] = None
    tags: Optional[TagMap] = None


class CreateAddonResponse(BaseModel):
    addon: Optional[Addon] = None


class CreateClusterResponse(BaseModel):
    cluster: Optional[Cluster] = None


class DeleteAddonResponse(CreateAddonResponse):
    pass


class DeleteClusterResponse(CreateClusterResponse):
    pass


class DeregisterClusterResponse(CreateClusterResponse):
    pass


class DescribeAddonResponse(CreateAddonResponse):
    pass


class DescribeAddonVersionsResponse(BaseModel):
    addons: Optional[Addons] = None
    nextToken: Optional[String] = None


class DescribeClusterResponse(CreateClusterResponse):
    pass


class DescribeIdentityProviderConfigResponse(BaseModel):
    identityProviderConfig: Optional[IdentityProviderConfigResponse] = None


class DescribeUpdateResponse(AssociateEncryptionConfigResponse):
    pass


class DisassociateIdentityProviderConfigResponse(AssociateEncryptionConfigResponse):
    pass


class RegisterClusterResponse(CreateClusterResponse):
    pass


class UpdateAddonResponse(AssociateEncryptionConfigResponse):
    pass


class UpdateClusterConfigResponse(AssociateEncryptionConfigResponse):
    pass


class UpdateClusterVersionResponse(AssociateEncryptionConfigResponse):
    pass


class UpdateNodegroupConfigResponse(AssociateEncryptionConfigResponse):
    pass


class UpdateNodegroupVersionResponse(AssociateEncryptionConfigResponse):
    pass

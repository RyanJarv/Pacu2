# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:46+00:00

from __future__ import annotations

from datetime import datetime
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class InvalidRequestException(BaseModel):
    __root__: Any


class InternalFailureException(InvalidRequestException):
    pass


class ForbiddenException(InvalidRequestException):
    pass


class ResourceNotFoundException(InvalidRequestException):
    pass


class _String(BaseModel):
    __root__: str


class PreconditionFailedException(InvalidRequestException):
    pass


class ResourceConflictException(InvalidRequestException):
    pass


class InitiateDeviceClaimResponse(BaseModel):
    State: Optional[_String] = None


class InvokeDeviceMethodResponse(BaseModel):
    DeviceMethodResponse: Optional[_String] = None


class RangeNotSatisfiableException(InvalidRequestException):
    pass


class UnclaimDeviceResponse(InitiateDeviceClaimResponse):
    pass


class UpdateDeviceStateResponse(BaseModel):
    pass


class Attributes(UpdateDeviceStateResponse):
    pass


class ClaimDevicesByClaimCodeRequest(BaseModel):
    pass


class _StringMin12Max40(BaseModel):
    __root__: Annotated[str, Field(max_length=40, min_length=12)]


class _Integer(BaseModel):
    __root__: int


class DescribeDeviceRequest(BaseModel):
    pass


class Device(BaseModel):
    Attributes: Optional[Attributes] = None
    DeviceId: Optional[_String] = None
    Type: Optional[_String] = None


class DeviceAttributes(BaseModel):
    """

    DeviceAttributes is a string-to-string map specified by the user.
    """

    pass

    class Config:
        extra = Extra.allow


class _Boolean(BaseModel):
    __root__: bool


class _DoubleMin0Max100(BaseModel):
    __root__: float


class _MapOfString(DeviceAttributes):
    pass


class DeviceEvent(BaseModel):
    Device: Optional[Device] = None
    StdEvent: Optional[_String] = None


class DeviceMethod(BaseModel):
    DeviceType: Optional[_String] = None
    MethodName: Optional[_String] = None


class FinalizeDeviceClaimRequest(BaseModel):
    Tags: Optional[_MapOfString] = None


class GetDeviceMethodsRequest(BaseModel):
    pass


class _ListOfDeviceMethod(BaseModel):
    __root__: List[DeviceMethod]


class InitiateDeviceClaimRequest(BaseModel):
    pass


class InvokeDeviceMethodRequest(BaseModel):
    DeviceMethod: Optional[DeviceMethod] = None
    DeviceMethodParameters: Optional[_String] = None


class _TimestampIso8601(BaseModel):
    __root__: datetime


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=250.0)]


class ListDeviceEventsRequest(BaseModel):
    pass


class _ListOfDeviceEvent(BaseModel):
    __root__: List[DeviceEvent]


class ListDevicesRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class TagResourceRequest(BaseModel):
    Tags: _MapOfString


class UnclaimDeviceRequest(BaseModel):
    pass


class _ListOfString(BaseModel):
    __root__: List[_String]


class UntagResourceRequest(BaseModel):
    pass


class UpdateDeviceStateRequest(BaseModel):
    Enabled: Optional[_Boolean] = None


class ClaimDevicesByClaimCodeResponse(BaseModel):
    ClaimCode: Optional[_StringMin12Max40] = None
    Total: Optional[_Integer] = None


class FinalizeDeviceClaimResponse(InitiateDeviceClaimResponse):
    pass


class GetDeviceMethodsResponse(BaseModel):
    DeviceMethods: Optional[_ListOfDeviceMethod] = None


class ListDeviceEventsResponse(BaseModel):
    Events: Optional[_ListOfDeviceEvent] = None
    NextToken: Optional[_String] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[_MapOfString] = None


class DeviceDescription(BaseModel):
    Arn: Optional[_String] = None
    Attributes: Optional[DeviceAttributes] = None
    DeviceId: Optional[_String] = None
    Enabled: Optional[_Boolean] = None
    RemainingLife: Optional[_DoubleMin0Max100] = None
    Type: Optional[_String] = None
    Tags: Optional[_MapOfString] = None


class _ListOfDeviceDescription(BaseModel):
    __root__: List[DeviceDescription]


class DescribeDeviceResponse(BaseModel):
    DeviceDescription: Optional[DeviceDescription] = None


class ListDevicesResponse(BaseModel):
    Devices: Optional[_ListOfDeviceDescription] = None
    NextToken: Optional[_String] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:50:57+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class InvalidRequestException(BaseModel):
    __root__: Any


class InternalFailureException(InvalidRequestException):
    pass


class ServiceUnavailableException(InvalidRequestException):
    pass


class ThrottlingException(InvalidRequestException):
    pass


class ResourceNotFoundException(InvalidRequestException):
    pass


class Note(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class AcknowledgeActionConfiguration(BaseModel):
    """
    Contains the configuration information of an acknowledge action.
    """

    note: Optional[Note] = None


class RequestId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='^[a-zA-Z0-9_-]+$')
    ]


class AlarmModelName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9_-]+$')
    ]


class KeyValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9\\-_:]+$')
    ]


class AlarmModelVersion(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class Severity(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=2147483647.0)]


class Timestamp1(BaseModel):
    __root__: datetime


class AlarmStateName(Enum):
    DISABLED = 'DISABLED'
    NORMAL = 'NORMAL'
    ACTIVE = 'ACTIVE'
    ACKNOWLEDGED = 'ACKNOWLEDGED'
    SNOOZE_DISABLED = 'SNOOZE_DISABLED'
    LATCHED = 'LATCHED'


class AlarmSummary(BaseModel):
    """
    Contains a summary of an alarm.
    """

    alarmModelName: Optional[AlarmModelName] = None
    alarmModelVersion: Optional[AlarmModelVersion] = None
    keyValue: Optional[KeyValue] = None
    stateName: Optional[AlarmStateName] = None
    creationTime: Optional[Timestamp1] = None
    lastUpdateTime: Optional[Timestamp1] = None


class AlarmSummaries(BaseModel):
    __root__: List[AlarmSummary]


class ErrorCode(Enum):
    ResourceNotFoundException = 'ResourceNotFoundException'
    InvalidRequestException = 'InvalidRequestException'
    InternalFailureException = 'InternalFailureException'
    ServiceUnavailableException = 'ServiceUnavailableException'
    ThrottlingException = 'ThrottlingException'


class ErrorMessage(BaseModel):
    __root__: str


class MessageId(RequestId):
    pass


class BatchUpdateDetectorErrorEntry(BaseModel):
    """
    Information about the error that occurred when attempting to update a detector.
    """

    messageId: Optional[MessageId] = None
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None


class BatchUpdateDetectorErrorEntries(BaseModel):
    __root__: List[BatchUpdateDetectorErrorEntry]


class ComparisonOperator(Enum):
    GREATER = 'GREATER'
    GREATER_OR_EQUAL = 'GREATER_OR_EQUAL'
    LESS = 'LESS'
    LESS_OR_EQUAL = 'LESS_OR_EQUAL'
    EQUAL = 'EQUAL'
    NOT_EQUAL = 'NOT_EQUAL'


class CustomerActionName(Enum):
    SNOOZE = 'SNOOZE'
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'
    ACKNOWLEDGE = 'ACKNOWLEDGE'
    RESET = 'RESET'


class EnableActionConfiguration(AcknowledgeActionConfiguration):
    """
    Contains the configuration information of an enable action.
    """

    pass


class DisableActionConfiguration(AcknowledgeActionConfiguration):
    """
    Contains the configuration information of a disable action.
    """

    pass


class ResetActionConfiguration(AcknowledgeActionConfiguration):
    """
    Contains the configuration information of a reset action.
    """

    pass


class DescribeAlarmRequest(BaseModel):
    pass


class DetectorModelName(AlarmModelName):
    pass


class DescribeDetectorRequest(BaseModel):
    pass


class DetectorModelVersion(AlarmModelVersion):
    pass


class StateName(AlarmModelVersion):
    pass


class DetectorStateSummary(BaseModel):
    """
    Information about the detector state.
    """

    stateName: Optional[StateName] = None


class DetectorSummary(BaseModel):
    """
    Information about the detector (instance).
    """

    detectorModelName: Optional[DetectorModelName] = None
    keyValue: Optional[KeyValue] = None
    detectorModelVersion: Optional[DetectorModelVersion] = None
    state: Optional[DetectorStateSummary] = None
    creationTime: Optional[Timestamp1] = None
    lastUpdateTime: Optional[Timestamp1] = None


class DetectorSummaries(BaseModel):
    __root__: List[DetectorSummary]


class EphemeralInputName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z0-9][a-zA-Z0-9_.-]*$')
    ]


class EpochMilliTimestamp(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=9.223372036854776e18)]


class EventType(Enum):
    STATE_CHANGE = 'STATE_CHANGE'


class InputPropertyValue(ErrorMessage):
    pass


class NextToken(ErrorMessage):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=250.0)]


class ListAlarmsRequest(BaseModel):
    pass


class ListDetectorsRequest(BaseModel):
    pass


class Payload(ErrorMessage):
    pass


class TimestampValue(BaseModel):
    """
    Contains information about a timestamp.
    """

    timeInMillis: Optional[EpochMilliTimestamp] = None


class Seconds(BaseModel):
    __root__: int


class ThresholdValue(ErrorMessage):
    pass


class SnoozeDuration(Seconds):
    pass


class TriggerType(Enum):
    SNOOZE_TIMEOUT = 'SNOOZE_TIMEOUT'


class StateChangeConfiguration(BaseModel):
    """
    Contains the configuration information of alarm state changes.
    """

    triggerType: Optional[TriggerType] = None


class TimerName(AlarmModelVersion):
    pass


class Timer(BaseModel):
    """
    The current state of a timer.
    """

    name: TimerName
    timestamp: Timestamp1


class TimerDefinition(BaseModel):
    """
    The new setting of a timer.
    """

    name: TimerName
    seconds: Seconds


class VariableName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='^[a-zA-Z][a-zA-Z0-9_]*$')
    ]


class VariableValue(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class Variable(BaseModel):
    """
    The current state of the variable.
    """

    name: VariableName
    value: VariableValue


class VariableDefinition(Variable):
    """
    The new value of the variable.
    """

    pass


class AcknowledgeAlarmActionRequest(BaseModel):
    """
    Information needed to acknowledge the alarm.
    """

    requestId: RequestId
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None


class DisableAlarmActionRequest(AcknowledgeAlarmActionRequest):
    """
    Information used to disable the alarm.
    """

    pass


class EnableAlarmActionRequest(AcknowledgeAlarmActionRequest):
    """
    Information needed to enable the alarm.
    """

    pass


class Message(BaseModel):
    """
    Information about a message.
    """

    messageId: MessageId
    inputName: EphemeralInputName
    payload: Payload
    timestamp: Optional[TimestampValue] = None


class ResetAlarmActionRequest(AcknowledgeAlarmActionRequest):
    """
    Information needed to reset the alarm.
    """

    pass


class SnoozeAlarmActionRequest(BaseModel):
    """
    Information needed to snooze the alarm.
    """

    requestId: RequestId
    alarmModelName: AlarmModelName
    keyValue: Optional[KeyValue] = None
    note: Optional[Note] = None
    snoozeDuration: SnoozeDuration


class BatchUpdateDetectorResponse(BaseModel):
    batchUpdateDetectorErrorEntries: Optional[BatchUpdateDetectorErrorEntries] = None


class ListAlarmsResponse(BaseModel):
    alarmSummaries: Optional[AlarmSummaries] = None
    nextToken: Optional[NextToken] = None


class ListDetectorsResponse(BaseModel):
    detectorSummaries: Optional[DetectorSummaries] = None
    nextToken: Optional[NextToken] = None


class AcknowledgeAlarmActionRequests(BaseModel):
    __root__: Annotated[List[AcknowledgeAlarmActionRequest], Field(min_items=1)]


class SystemEvent(BaseModel):
    """
    Contains information about alarm state changes.
    """

    eventType: Optional[EventType] = None
    stateChangeConfiguration: Optional[StateChangeConfiguration] = None


class BatchAcknowledgeAlarmRequest(BaseModel):
    acknowledgeActionRequests: AcknowledgeAlarmActionRequests


class BatchAlarmActionErrorEntry(BaseModel):
    """
    <p>Contains error messages associated with one of the following requests:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchAcknowledgeAlarm.html">BatchAcknowledgeAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchDisableAlarm.html">BatchDisableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchEnableAlarm.html">BatchEnableAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchResetAlarm.html">BatchResetAlarm</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchSnoozeAlarm.html">BatchSnoozeAlarm</a> </p> </li> </ul>
    """

    requestId: Optional[RequestId] = None
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ErrorMessage] = None


class DisableAlarmActionRequests(BaseModel):
    __root__: Annotated[List[DisableAlarmActionRequest], Field(min_items=1)]


class BatchDisableAlarmRequest(BaseModel):
    disableActionRequests: DisableAlarmActionRequests


class EnableAlarmActionRequests(BaseModel):
    __root__: Annotated[List[EnableAlarmActionRequest], Field(min_items=1)]


class BatchEnableAlarmRequest(BaseModel):
    enableActionRequests: EnableAlarmActionRequests


class BatchPutMessageErrorEntry(BatchUpdateDetectorErrorEntry):
    """
    Contains information about the errors encountered.
    """

    pass


class BatchPutMessageErrorEntries(BaseModel):
    __root__: List[BatchPutMessageErrorEntry]


class Messages(BaseModel):
    __root__: Annotated[List[Message], Field(min_items=1)]


class BatchPutMessageRequest(BaseModel):
    messages: Messages


class ResetAlarmActionRequests(BaseModel):
    __root__: Annotated[List[ResetAlarmActionRequest], Field(min_items=1)]


class BatchResetAlarmRequest(BaseModel):
    resetActionRequests: ResetAlarmActionRequests


class SnoozeAlarmActionRequests(BaseModel):
    __root__: Annotated[List[SnoozeAlarmActionRequest], Field(min_items=1)]


class BatchSnoozeAlarmRequest(BaseModel):
    snoozeActionRequests: SnoozeAlarmActionRequests


class SnoozeActionConfiguration(BaseModel):
    """
    Contains the configuration information of a snooze action.
    """

    snoozeDuration: Optional[SnoozeDuration] = None
    note: Optional[Note] = None


class Variables(BaseModel):
    __root__: List[Variable]


class Timers(BaseModel):
    __root__: List[Timer]


class VariableDefinitions(BaseModel):
    __root__: List[VariableDefinition]


class TimerDefinitions(BaseModel):
    __root__: List[TimerDefinition]


class DetectorStateDefinition(BaseModel):
    """
    The new state, variable values, and timer settings of the detector (instance).
    """

    stateName: StateName
    variables: VariableDefinitions
    timers: TimerDefinitions


class SimpleRuleEvaluation(BaseModel):
    """
    Information needed to compare two values with a comparison operator.
    """

    inputPropertyValue: Optional[InputPropertyValue] = None
    operator: Optional[ComparisonOperator] = None
    thresholdValue: Optional[ThresholdValue] = None


class BatchPutMessageResponse(BaseModel):
    BatchPutMessageErrorEntries: Optional[BatchPutMessageErrorEntries] = None


class UpdateDetectorRequest(BaseModel):
    """
    Information used to update the detector (instance).
    """

    messageId: MessageId
    detectorModelName: DetectorModelName
    keyValue: Optional[KeyValue] = None
    state: DetectorStateDefinition


class RuleEvaluation(BaseModel):
    """
    Information needed to evaluate data.
    """

    simpleRuleEvaluation: Optional[SimpleRuleEvaluation] = None


class CustomerAction(BaseModel):
    """
    Contains information about the action that you can take to respond to the alarm.
    """

    actionName: Optional[CustomerActionName] = None
    snoozeActionConfiguration: Optional[SnoozeActionConfiguration] = None
    enableActionConfiguration: Optional[EnableActionConfiguration] = None
    disableActionConfiguration: Optional[DisableActionConfiguration] = None
    acknowledgeActionConfiguration: Optional[AcknowledgeActionConfiguration] = None
    resetActionConfiguration: Optional[ResetActionConfiguration] = None


class BatchAlarmActionErrorEntries(BaseModel):
    __root__: List[BatchAlarmActionErrorEntry]


class UpdateDetectorRequests(BaseModel):
    __root__: Annotated[List[UpdateDetectorRequest], Field(min_items=1)]


class BatchUpdateDetectorRequest(BaseModel):
    detectors: UpdateDetectorRequests


class DetectorState(BaseModel):
    """
    Information about the current state of the detector instance.
    """

    stateName: StateName
    variables: Variables
    timers: Timers


class BatchAcknowledgeAlarmResponse(BaseModel):
    errorEntries: Optional[BatchAlarmActionErrorEntries] = None


class BatchDisableAlarmResponse(BatchAcknowledgeAlarmResponse):
    pass


class BatchEnableAlarmResponse(BatchAcknowledgeAlarmResponse):
    pass


class BatchResetAlarmResponse(BatchAcknowledgeAlarmResponse):
    pass


class BatchSnoozeAlarmResponse(BatchAcknowledgeAlarmResponse):
    pass


class AlarmState(BaseModel):
    """
    Contains information about the current state of the alarm.
    """

    stateName: Optional[AlarmStateName] = None
    ruleEvaluation: Optional[RuleEvaluation] = None
    customerAction: Optional[CustomerAction] = None
    systemEvent: Optional[SystemEvent] = None


class Alarm(BaseModel):
    """
    Contains information about an alarm.
    """

    alarmModelName: Optional[AlarmModelName] = None
    alarmModelVersion: Optional[AlarmModelVersion] = None
    keyValue: Optional[KeyValue] = None
    alarmState: Optional[AlarmState] = None
    severity: Optional[Severity] = None
    creationTime: Optional[Timestamp1] = None
    lastUpdateTime: Optional[Timestamp1] = None


class Detector(BaseModel):
    """
    Information about the detector (instance).
    """

    detectorModelName: Optional[DetectorModelName] = None
    keyValue: Optional[KeyValue] = None
    detectorModelVersion: Optional[DetectorModelVersion] = None
    state: Optional[DetectorState] = None
    creationTime: Optional[Timestamp1] = None
    lastUpdateTime: Optional[Timestamp1] = None


class DescribeAlarmResponse(BaseModel):
    alarm: Optional[Alarm] = None


class DescribeDetectorResponse(BaseModel):
    detector: Optional[Detector] = None

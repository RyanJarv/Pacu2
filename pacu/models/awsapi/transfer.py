# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:59:17+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field, SecretStr


class ServiceUnavailableException(BaseModel):
    __root__: Any


class InternalServiceError(ServiceUnavailableException):
    pass


class InvalidRequestException(ServiceUnavailableException):
    pass


class ResourceExistsException(ServiceUnavailableException):
    pass


class ResourceNotFoundException(ServiceUnavailableException):
    pass


class AccessDeniedException(ServiceUnavailableException):
    pass


class ThrottlingException(ServiceUnavailableException):
    pass


class InvalidNextTokenException(ServiceUnavailableException):
    pass


class SendWorkflowStepStateResponse(BaseModel):
    pass


class ConflictException(ServiceUnavailableException):
    pass


class AddressAllocationId(BaseModel):
    __root__: str


class AddressAllocationIds(BaseModel):
    __root__: List[AddressAllocationId]


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=20, regex='arn:.*')]


class CallbackToken(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='\\w+')]


class Certificate(BaseModel):
    __root__: Annotated[str, Field(max_length=1600)]


class WorkflowStepName(BaseModel):
    __root__: Annotated[str, Field(max_length=30, regex='^[\\w-]*$')]


class OverwriteExisting(Enum):
    TRUE = 'TRUE'
    FALSE = 'FALSE'


class HomeDirectory(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='^$|/.*')]


class HomeDirectoryType(Enum):
    PATH = 'PATH'
    LOGICAL = 'LOGICAL'


class Policy(BaseModel):
    __root__: Annotated[str, Field(max_length=2048)]


class Role(BaseModel):
    __root__: Annotated[
        str, Field(max_length=2048, min_length=20, regex='arn:.*role/.*')
    ]


class ServerId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=19, min_length=19, regex='^s-([0-9a-f]{17})$')
    ]


class ExternalId(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1, regex='^S-1-[\\d-]+$')]


class Domain(Enum):
    S3 = 'S3'
    EFS = 'EFS'


class EndpointType(Enum):
    PUBLIC = 'PUBLIC'
    VPC = 'VPC'
    VPC_ENDPOINT = 'VPC_ENDPOINT'


class HostKey(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=4096)]


class IdentityProviderType(Enum):
    """
    Returns information related to the type of user authentication that is in use for a file transfer protocol-enabled server's users. For <code>AWS_DIRECTORY_SERVICE</code> or <code>SERVICE_MANAGED</code> authentication, the Secure Shell (SSH) public keys are stored with a user on the server instance. For <code>API_GATEWAY</code> authentication, your custom authentication method is implemented by using an API call. The server can have only one method of authentication.
    """

    SERVICE_MANAGED = 'SERVICE_MANAGED'
    API_GATEWAY = 'API_GATEWAY'
    AWS_DIRECTORY_SERVICE = 'AWS_DIRECTORY_SERVICE'


class SecurityPolicyName(BaseModel):
    __root__: Annotated[str, Field(max_length=100, regex='TransferSecurityPolicy-.+')]


class SshPublicKeyBody(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048, regex='^ssh-rsa\\s+[A-Za-z0-9+/]+[=]{0,3}(\\s+.+)?\\s*$'
        ),
    ]


class UserName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=100, min_length=3, regex='^[\\w][\\w@.-]{2,99}$')
    ]


class WorkflowDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=256, regex='^[\\w- ]*$')]


class WorkflowId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=19, min_length=19, regex='^w-([a-z0-9]{17})$')
    ]


class CustomStepTarget(BaseModel):
    __root__: Annotated[str, Field(max_length=170, regex='arn:[a-z-]+:lambda:.*$')]


class CustomStepTimeoutSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1800.0)]


class CustomStepDetails(BaseModel):
    """
    Each step type has its own <code>StepDetails</code> structure.
    """

    Name: Optional[WorkflowStepName] = None
    Target: Optional[CustomStepTarget] = None
    TimeoutSeconds: Optional[CustomStepTimeoutSeconds] = None


class CustomStepStatus(Enum):
    SUCCESS = 'SUCCESS'
    FAILURE = 'FAILURE'


class DateImported(BaseModel):
    __root__: datetime


class SshPublicKeyId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=21, min_length=21, regex='^key-[0-9a-f]{17}$')
    ]


class DeleteStepDetails(BaseModel):
    """
    The name of the step, used to identify the step that is being deleted.
    """

    Name: Optional[WorkflowStepName] = None


class ExecutionId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=36,
            min_length=36,
            regex='^[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}$',
        ),
    ]


class ExecutionStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    COMPLETED = 'COMPLETED'
    EXCEPTION = 'EXCEPTION'
    HANDLING_EXCEPTION = 'HANDLING_EXCEPTION'


class Fips(BaseModel):
    __root__: bool


class HostKeyFingerprint(AddressAllocationId):
    pass


class State(Enum):
    """
    <p>Describes the condition of a file transfer protocol-enabled server with respect to its ability to perform file operations. There are six possible states: <code>OFFLINE</code>, <code>ONLINE</code>, <code>STARTING</code>, <code>STOPPING</code>, <code>START_FAILED</code>, and <code>STOP_FAILED</code>.</p> <p> <code>OFFLINE</code> indicates that the server exists, but that it is not available for file operations. <code>ONLINE</code> indicates that the server is available to perform file operations. <code>STARTING</code> indicates that the server's was instantiated, but the server is not yet available to perform file operations. Under normal conditions, it can take a couple of minutes for the server to be completely operational. Both <code>START_FAILED</code> and <code>STOP_FAILED</code> are error conditions.</p>
    """

    OFFLINE = 'OFFLINE'
    ONLINE = 'ONLINE'
    STARTING = 'STARTING'
    STOPPING = 'STOPPING'
    START_FAILED = 'START_FAILED'
    STOP_FAILED = 'STOP_FAILED'


class UserCount(BaseModel):
    __root__: int


class DirectoryId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=12, min_length=12, regex='^d-[0-9a-f]{10}$')
    ]


class EfsFileSystemId(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128,
            regex='^(arn:aws[-a-z]*:elasticfilesystem:[0-9a-z-:]+:(access-point/fsap|file-system/fs)-[0-9a-f]{8,40}|fs(ap)?-[0-9a-f]{8,40})$',
        ),
    ]


class EfsPath(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=100,
            min_length=1,
            regex='^(\\/|(\\/(?!\\.)+[^$#<>;`|&?{}^*/\\n]+){1,4})$',
        ),
    ]


class EfsFileLocation(BaseModel):
    """
    <p>Specifies the details for the file location for the file being used in the workflow. Only applicable if you are using Amazon EFS for storage.</p> <p> You need to provide the file system ID and the pathname. The pathname can represent either a path or a file. This is determined by whether or not you end the path value with the forward slash (/) character. If the final character is "/", then your file is copied to the folder, and its name does not change. If, rather, the final character is alphanumeric, your uploaded file is renamed to the path value. In this case, if a file with that name already exists, it is overwritten. </p> <p>For example, if your path is <code>shared-files/bob/</code>, your uploaded files are copied to the <code>shared-files/bob/</code>, folder. If your path is <code>shared-files/today</code>, each uploaded file is copied to the <code>shared-files</code> folder and named <code>today</code>: each upload overwrites the previous version of the <code>bob</code> file.</p>
    """

    FileSystemId: Optional[EfsFileSystemId] = None
    Path: Optional[EfsPath] = None


class VpcEndpointId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=22, min_length=22, regex='^vpce-[0-9a-f]{17}$')
    ]


class VpcId(AddressAllocationId):
    pass


class ExecutionErrorType(Enum):
    PERMISSION_DENIED = 'PERMISSION_DENIED'


class ExecutionErrorMessage(AddressAllocationId):
    pass


class ExecutionError(BaseModel):
    """
    Specifies the error message and type, for an error that occurs during the execution of the workflow.
    """

    Type: ExecutionErrorType
    Message: ExecutionErrorMessage


class WorkflowStepType(Enum):
    COPY = 'COPY'
    CUSTOM = 'CUSTOM'
    TAG = 'TAG'
    DELETE = 'DELETE'


class StepResultOutputsJson(BaseModel):
    __root__: Annotated[str, Field(max_length=65536)]


class ExecutionStepResult(BaseModel):
    """
    Specifies the following details for the step: error (if any), outputs (if any), and the step type.
    """

    StepType: Optional[WorkflowStepType] = None
    Outputs: Optional[StepResultOutputsJson] = None
    Error: Optional[ExecutionError] = None


class MapEntry(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='^/.*')]


class MapTarget(MapEntry):
    pass


class HomeDirectoryMapEntry(BaseModel):
    """
    <p>Represents an object that contains entries and targets for <code>HomeDirectoryMappings</code>.</p> <p>The following is an <code>Entry</code> and <code>Target</code> pair example for <code>chroot</code>.</p> <p> <code>[ { "Entry:": "/", "Target": "/bucket_name/home/mydirectory" } ]</code> </p> <note> <p>If the target of a logical directory entry does not exist in Amazon S3 or EFS, the entry is ignored. As a workaround, you can use the Amazon S3 API or EFS API to create 0 byte objects as place holders for your directory. If using the CLI, use the <code>s3api</code> or <code>efsapi</code> call instead of <code>s3</code> or <code>efs</code> so you can use the put-object operation. For example, you use the following: <code>aws s3api put-object --bucket bucketname --key path/to/folder/</code>. Make sure that the end of the key name ends in a <code>/</code> for it to be considered a folder.</p> </note>
    """

    Entry: MapEntry
    Target: MapTarget


class Url(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=6144, min_length=1)]


class SecurityPolicyNames(BaseModel):
    __root__: List[SecurityPolicyName]


class ListedAccess(BaseModel):
    """
    Lists the properties for one or more specified associated accesses.
    """

    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    Role: Optional[Role] = None
    ExternalId: Optional[ExternalId] = None


class ListedServer(BaseModel):
    """
    Returns properties of a file transfer protocol-enabled server that was specified.
    """

    Arn: Arn
    Domain: Optional[Domain] = None
    IdentityProviderType: Optional[IdentityProviderType] = None
    EndpointType: Optional[EndpointType] = None
    LoggingRole: Optional[Role] = None
    ServerId: Optional[ServerId] = None
    State: Optional[State] = None
    UserCount: Optional[UserCount] = None


class SshPublicKeyCount(UserCount):
    pass


class ListedUser(BaseModel):
    """
    Returns properties of the user that you specify.
    """

    Arn: Arn
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    Role: Optional[Role] = None
    SshPublicKeyCount: Optional[SshPublicKeyCount] = None
    UserName: Optional[UserName] = None


class ListedWorkflow(BaseModel):
    """
    Contains the ID, text description, and Amazon Resource Name (ARN) for the workflow.
    """

    WorkflowId: Optional[WorkflowId] = None
    Description: Optional[WorkflowDescription] = None
    Arn: Optional[Arn] = None


class LogGroupName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, min_length=1, regex='[\\.\\-_/#A-Za-z0-9]*')
    ]


class Message(AddressAllocationId):
    pass


class NullableRole(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, regex='^$|arn:.*role/.*')]


class WorkflowDetail(BaseModel):
    """
    Specifies the workflow ID for the workflow to assign and the execution role used for executing the workflow.
    """

    WorkflowId: WorkflowId
    ExecutionRole: Role


class OnUploadWorkflowDetails(BaseModel):
    __root__: Annotated[List[WorkflowDetail], Field(max_items=1)]


class PassiveIp(BaseModel):
    __root__: Annotated[str, Field(max_length=15)]


class PosixId(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=4294967295.0)]


class SecondaryGids(BaseModel):
    __root__: Annotated[List[PosixId], Field(max_items=16, min_items=0)]


class Protocol(Enum):
    SFTP = 'SFTP'
    FTP = 'FTP'
    FTPS = 'FTPS'


class Response(AddressAllocationId):
    pass


class S3Bucket(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63, min_length=3, regex='^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$'
        ),
    ]


class S3Etag(BaseModel):
    __root__: Annotated[str, Field(max_length=65536, min_length=1, regex='^.+$')]


class S3Key(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, regex='[\\P{M}\\p{M}]*')]


class S3VersionId(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1, regex='^.+$')]


class S3TagKey(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=128, min_length=1, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$'
        ),
    ]


class S3TagValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, regex='^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$')
    ]


class S3Tag(BaseModel):
    """
    Specifies the key-value pair that are assigned to a file during the execution of a Tagging step.
    """

    Key: S3TagKey
    Value: S3TagValue


class S3Tags(BaseModel):
    __root__: Annotated[List[S3Tag], Field(max_items=10, min_items=1)]


class SecurityGroupId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=20, min_length=11, regex='^sg-[0-9a-f]{8,17}$')
    ]


class SecurityPolicyOption(BaseModel):
    __root__: Annotated[str, Field(max_length=50)]


class SessionId(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=3, regex='^[\\w-]*$')]


class SourceIp(BaseModel):
    __root__: Annotated[
        str, Field(max_length=32, regex='^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$')
    ]


class SshPublicKey(BaseModel):
    """
    Provides information about the public Secure Shell (SSH) key that is associated with a user account for the specific file transfer protocol-enabled server (as identified by <code>ServerId</code>). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific server.
    """

    DateImported: DateImported
    SshPublicKeyBody: SshPublicKeyBody
    SshPublicKeyId: SshPublicKeyId


class StatusCode(UserCount):
    pass


class SubnetId(AddressAllocationId):
    pass


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class Tag(BaseModel):
    """
    Creates a key-value pair for a specific resource. Tags are metadata that you can use to search for and group a resource for various purposes. You can apply tags to servers, users, and roles. A tag key can take more than one value. For example, to group servers for accounting purposes, you might create a tag called <code>Group</code> and assign the values <code>Research</code> and <code>Accounting</code> to that group.
    """

    Key: TagKey
    Value: TagValue


class TagKeys(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class TagStepDetails(BaseModel):
    """
    <p>Each step type has its own <code>StepDetails</code> structure.</p> <p>The key/value pairs used to tag a file during the execution of a workflow step.</p>
    """

    Name: Optional[WorkflowStepName] = None
    Tags: Optional[S3Tags] = None


class UserPassword(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=1024)]


class CreateAccessResponse(BaseModel):
    ServerId: ServerId
    ExternalId: ExternalId


class CreateServerResponse(BaseModel):
    ServerId: ServerId


class CreateUserResponse(BaseModel):
    ServerId: ServerId
    UserName: UserName


class CreateWorkflowResponse(BaseModel):
    WorkflowId: WorkflowId


class DeleteAccessRequest(BaseModel):
    ServerId: ServerId
    ExternalId: ExternalId


class DeleteServerRequest(BaseModel):
    ServerId: ServerId


class DeleteSshPublicKeyRequest(BaseModel):
    ServerId: ServerId
    SshPublicKeyId: SshPublicKeyId
    UserName: UserName


class DeleteUserRequest(BaseModel):
    ServerId: ServerId
    UserName: UserName


class DeleteWorkflowRequest(BaseModel):
    WorkflowId: WorkflowId


class DescribeAccessRequest(BaseModel):
    ServerId: ServerId
    ExternalId: ExternalId


class DescribeExecutionRequest(BaseModel):
    ExecutionId: ExecutionId
    WorkflowId: WorkflowId


class DescribeSecurityPolicyRequest(BaseModel):
    SecurityPolicyName: SecurityPolicyName


class DescribeServerRequest(BaseModel):
    ServerId: ServerId


class DescribeUserRequest(BaseModel):
    ServerId: ServerId
    UserName: UserName


class DescribeWorkflowRequest(BaseModel):
    WorkflowId: WorkflowId


class ImportSshPublicKeyResponse(BaseModel):
    """
    Identifies the user, the server they belong to, and the identifier of the SSH public key associated with that user. A user can have more than one key on each server that they are associated with.
    """

    ServerId: ServerId
    SshPublicKeyId: SshPublicKeyId
    UserName: UserName


class ImportSshPublicKeyRequest(BaseModel):
    ServerId: ServerId
    SshPublicKeyBody: SshPublicKeyBody
    UserName: UserName


class ListAccessesRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    ServerId: ServerId


class ListExecutionsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    WorkflowId: WorkflowId


class ListSecurityPoliciesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    SecurityPolicyNames: SecurityPolicyNames


class ListSecurityPoliciesRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListServersRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceRequest(BaseModel):
    Arn: Arn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListUsersRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    ServerId: ServerId


class ListWorkflowsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class SendWorkflowStepStateRequest(BaseModel):
    WorkflowId: WorkflowId
    ExecutionId: ExecutionId
    Token: CallbackToken
    Status: CustomStepStatus


class StartServerRequest(BaseModel):
    ServerId: ServerId


class StopServerRequest(BaseModel):
    ServerId: ServerId


class TestIdentityProviderResponse(BaseModel):
    Response: Optional[Response] = None
    StatusCode: StatusCode
    Message: Optional[Message] = None
    Url: Url


class TestIdentityProviderRequest(BaseModel):
    ServerId: ServerId
    ServerProtocol: Optional[Protocol] = None
    SourceIp: Optional[SourceIp] = None
    UserName: UserName
    UserPassword: Optional[UserPassword] = None


class UntagResourceRequest(BaseModel):
    Arn: Arn
    TagKeys: TagKeys


class UpdateAccessResponse(CreateAccessResponse):
    pass


class UpdateServerResponse(CreateServerResponse):
    pass


class UpdateUserResponse(CreateUserResponse):
    """
    <code>UpdateUserResponse</code> returns the user name and identifier for the request to update a user's properties.
    """

    pass


class HomeDirectoryMappings(BaseModel):
    __root__: Annotated[List[HomeDirectoryMapEntry], Field(max_items=50, min_items=1)]


class PosixProfile(BaseModel):
    """
    The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.
    """

    Uid: PosixId
    Gid: PosixId
    SecondaryGids: Optional[SecondaryGids] = None


class IdentityProviderDetails(BaseModel):
    """
    Returns information related to the type of user authentication that is in use for a file transfer protocol-enabled server's users. A server can have only one method of authentication.
    """

    Url: Optional[Url] = None
    InvocationRole: Optional[Role] = None
    DirectoryId: Optional[DirectoryId] = None


class Protocols(BaseModel):
    __root__: Annotated[List[Protocol], Field(max_items=3, min_items=1)]


class Tags(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=50, min_items=1)]


class WorkflowDetails(BaseModel):
    """
    Container for the <code>WorkflowDetail</code> data type. It is used by actions that trigger a workflow to begin execution.
    """

    OnUpload: OnUploadWorkflowDetails


class DescribedAccess(BaseModel):
    """
    Describes the properties of the access that was specified.
    """

    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Optional[Role] = None
    ExternalId: Optional[ExternalId] = None


class LoggingConfiguration(BaseModel):
    """
    Consists of the logging role and the log group name.
    """

    LoggingRole: Optional[Role] = None
    LogGroupName: Optional[LogGroupName] = None


class SecurityPolicyOptions(BaseModel):
    __root__: List[SecurityPolicyOption]


class ProtocolDetails(BaseModel):
    """
    <p> The protocol settings that are configured for your server. </p> <note> <p> This type is only valid in the <code>UpdateServer</code> API. </p> </note>
    """

    PassiveIp: Optional[PassiveIp] = None


class SshPublicKeys(BaseModel):
    __root__: Annotated[List[SshPublicKey], Field(max_items=5)]


class SubnetIds(BaseModel):
    __root__: List[SubnetId]


class SecurityGroupIds(BaseModel):
    __root__: List[SecurityGroupId]


class ExecutionStepResults(BaseModel):
    __root__: Annotated[List[ExecutionStepResult], Field(max_items=50, min_items=1)]


class S3FileLocation(BaseModel):
    """
    <p>Specifies the details for the file location for the file being used in the workflow. Only applicable if you are using S3 storage.</p> <p> You need to provide the bucket and key. The key can represent either a path or a file. This is determined by whether or not you end the key value with the forward slash (/) character. If the final character is "/", then your file is copied to the folder, and its name does not change. If, rather, the final character is alphanumeric, your uploaded file is renamed to the path value. In this case, if a file with that name already exists, it is overwritten. </p> <p>For example, if your path is <code>shared-files/bob/</code>, your uploaded files are copied to the <code>shared-files/bob/</code>, folder. If your path is <code>shared-files/today</code>, each uploaded file is copied to the <code>shared-files</code> folder and named <code>today</code>: each upload overwrites the previous version of the <i>bob</i> file.</p>
    """

    Bucket: Optional[S3Bucket] = None
    Key: Optional[S3Key] = None
    VersionId: Optional[S3VersionId] = None
    Etag: Optional[S3Etag] = None


class S3InputFileLocation(BaseModel):
    """
    Specifies the details for the S3 file being copied.
    """

    Bucket: Optional[S3Bucket] = None
    Key: Optional[S3Key] = None


class ListedAccesses(BaseModel):
    __root__: List[ListedAccess]


class ListedServers(BaseModel):
    __root__: List[ListedServer]


class ListedUsers(BaseModel):
    __root__: List[ListedUser]


class ListedWorkflows(BaseModel):
    __root__: List[ListedWorkflow]


class UserDetails(BaseModel):
    """
    Specifies the user name, server ID, and session ID for a workflow.
    """

    UserName: UserName
    ServerId: ServerId
    SessionId: Optional[SessionId] = None


class CreateAccessRequest(BaseModel):
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Role
    ServerId: ServerId
    ExternalId: ExternalId


class CreateUserRequest(BaseModel):
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Role
    ServerId: ServerId
    SshPublicKeyBody: Optional[SshPublicKeyBody] = None
    Tags: Optional[Tags] = None
    UserName: UserName


class DescribeAccessResponse(BaseModel):
    ServerId: ServerId
    Access: DescribedAccess


class ListAccessesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    ServerId: ServerId
    Accesses: ListedAccesses


class ListServersResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    Servers: ListedServers


class ListTagsForResourceResponse(BaseModel):
    Arn: Optional[Arn] = None
    NextToken: Optional[NextToken] = None
    Tags: Optional[Tags] = None


class ListUsersResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    ServerId: ServerId
    Users: ListedUsers


class ListWorkflowsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    Workflows: ListedWorkflows


class TagResourceRequest(BaseModel):
    Arn: Arn
    Tags: Tags


class UpdateAccessRequest(BaseModel):
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Optional[Role] = None
    ServerId: ServerId
    ExternalId: ExternalId


class UpdateUserRequest(BaseModel):
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Optional[Role] = None
    ServerId: ServerId
    UserName: UserName


class InputFileLocation(BaseModel):
    """
    Specifies the location for the file being copied. Only applicable for the Copy type of workflow steps.
    """

    S3FileLocation: Optional[S3InputFileLocation] = None
    EfsFileLocation: Optional[EfsFileLocation] = None


class CopyStepDetails(BaseModel):
    """
    Each step type has its own <code>StepDetails</code> structure.
    """

    Name: Optional[WorkflowStepName] = None
    DestinationFileLocation: Optional[InputFileLocation] = None
    OverwriteExisting: Optional[OverwriteExisting] = None


class EndpointDetails(BaseModel):
    """
    <p>The virtual private cloud (VPC) endpoint settings that are configured for your file transfer protocol-enabled server. With a VPC endpoint, you can restrict access to your server and resources only within your VPC. To control incoming internet traffic, invoke the <code>UpdateServer</code> API and attach an Elastic IP address to your server's endpoint.</p> <note> <p> After May 19, 2021, you won't be able to create a server using <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount if your account hasn't already done so before May 19, 2021. If you have already created servers with <code>EndpointType=VPC_ENDPOINT</code> in your Amazon Web Servicesaccount on or before May 19, 2021, you will not be affected. After this date, use <code>EndpointType</code>=<code>VPC</code>.</p> <p>For more information, see https://docs.aws.amazon.com/transfer/latest/userguide/create-server-in-vpc.html#deprecate-vpc-endpoint.</p> </note>
    """

    AddressAllocationIds: Optional[AddressAllocationIds] = None
    SubnetIds: Optional[SubnetIds] = None
    VpcEndpointId: Optional[VpcEndpointId] = None
    VpcId: Optional[VpcId] = None
    SecurityGroupIds: Optional[SecurityGroupIds] = None


class DescribedSecurityPolicy(BaseModel):
    """
    Describes the properties of a security policy that was specified. For more information about security policies, see <a href="https://docs.aws.amazon.com/transfer/latest/userguide/security-policies.html">Working with security policies</a>.
    """

    Fips: Optional[Fips] = None
    SecurityPolicyName: SecurityPolicyName
    SshCiphers: Optional[SecurityPolicyOptions] = None
    SshKexs: Optional[SecurityPolicyOptions] = None
    SshMacs: Optional[SecurityPolicyOptions] = None
    TlsCiphers: Optional[SecurityPolicyOptions] = None


class DescribedServer(BaseModel):
    """
    Describes the properties of a file transfer protocol-enabled server that was specified.
    """

    Arn: Arn
    Certificate: Optional[Certificate] = None
    ProtocolDetails: Optional[ProtocolDetails] = None
    Domain: Optional[Domain] = None
    EndpointDetails: Optional[EndpointDetails] = None
    EndpointType: Optional[EndpointType] = None
    HostKeyFingerprint: Optional[HostKeyFingerprint] = None
    IdentityProviderDetails: Optional[IdentityProviderDetails] = None
    IdentityProviderType: Optional[IdentityProviderType] = None
    LoggingRole: Optional[Role] = None
    Protocols: Optional[Protocols] = None
    SecurityPolicyName: Optional[SecurityPolicyName] = None
    ServerId: Optional[ServerId] = None
    State: Optional[State] = None
    Tags: Optional[Tags] = None
    UserCount: Optional[UserCount] = None
    WorkflowDetails: Optional[WorkflowDetails] = None


class DescribedUser(BaseModel):
    """
    Describes the properties of a user that was specified.
    """

    Arn: Arn
    HomeDirectory: Optional[HomeDirectory] = None
    HomeDirectoryMappings: Optional[HomeDirectoryMappings] = None
    HomeDirectoryType: Optional[HomeDirectoryType] = None
    Policy: Optional[Policy] = None
    PosixProfile: Optional[PosixProfile] = None
    Role: Optional[Role] = None
    SshPublicKeys: Optional[SshPublicKeys] = None
    Tags: Optional[Tags] = None
    UserName: Optional[UserName] = None


class FileLocation(BaseModel):
    """
    Specifies the Amazon S3 or EFS file details to be used in the step.
    """

    S3FileLocation: Optional[S3FileLocation] = None
    EfsFileLocation: Optional[EfsFileLocation] = None


class ServiceMetadata(BaseModel):
    """
    A container object for the session details associated with a workflow.
    """

    UserDetails: UserDetails


class ExecutionResults(BaseModel):
    """
    Specifies the steps in the workflow, as well as the steps to execute in case of any errors during workflow execution.
    """

    Steps: Optional[ExecutionStepResults] = None
    OnExceptionSteps: Optional[ExecutionStepResults] = None


class ListedExecution(BaseModel):
    """
    Returns properties of the execution that is specified.
    """

    ExecutionId: Optional[ExecutionId] = None
    InitialFileLocation: Optional[FileLocation] = None
    ServiceMetadata: Optional[ServiceMetadata] = None
    Status: Optional[ExecutionStatus] = None


class WorkflowStep(BaseModel):
    """
    The basic building block of a workflow.
    """

    Type: Optional[WorkflowStepType] = None
    CopyStepDetails: Optional[CopyStepDetails] = None
    CustomStepDetails: Optional[CustomStepDetails] = None
    DeleteStepDetails: Optional[DeleteStepDetails] = None
    TagStepDetails: Optional[TagStepDetails] = None


class CreateServerRequest(BaseModel):
    Certificate: Optional[Certificate] = None
    Domain: Optional[Domain] = None
    EndpointDetails: Optional[EndpointDetails] = None
    EndpointType: Optional[EndpointType] = None
    HostKey: Optional[HostKey] = None
    IdentityProviderDetails: Optional[IdentityProviderDetails] = None
    IdentityProviderType: Optional[IdentityProviderType] = None
    LoggingRole: Optional[Role] = None
    Protocols: Optional[Protocols] = None
    SecurityPolicyName: Optional[SecurityPolicyName] = None
    Tags: Optional[Tags] = None
    WorkflowDetails: Optional[WorkflowDetails] = None


class DescribeSecurityPolicyResponse(BaseModel):
    SecurityPolicy: DescribedSecurityPolicy


class DescribeServerResponse(BaseModel):
    Server: DescribedServer


class DescribeUserResponse(BaseModel):
    ServerId: ServerId
    User: DescribedUser


class UpdateServerRequest(BaseModel):
    Certificate: Optional[Certificate] = None
    ProtocolDetails: Optional[ProtocolDetails] = None
    EndpointDetails: Optional[EndpointDetails] = None
    EndpointType: Optional[EndpointType] = None
    HostKey: Optional[HostKey] = None
    IdentityProviderDetails: Optional[IdentityProviderDetails] = None
    LoggingRole: Optional[NullableRole] = None
    Protocols: Optional[Protocols] = None
    SecurityPolicyName: Optional[SecurityPolicyName] = None
    ServerId: ServerId
    WorkflowDetails: Optional[WorkflowDetails] = None


class WorkflowSteps(BaseModel):
    __root__: Annotated[List[WorkflowStep], Field(max_items=8)]


class DescribedExecution(BaseModel):
    """
    The details for an execution object.
    """

    ExecutionId: Optional[ExecutionId] = None
    InitialFileLocation: Optional[FileLocation] = None
    ServiceMetadata: Optional[ServiceMetadata] = None
    ExecutionRole: Optional[Role] = None
    LoggingConfiguration: Optional[LoggingConfiguration] = None
    PosixProfile: Optional[PosixProfile] = None
    Status: Optional[ExecutionStatus] = None
    Results: Optional[ExecutionResults] = None


class DescribedWorkflow(BaseModel):
    """
    Describes the properties of the specified workflow
    """

    Arn: Arn
    Description: Optional[WorkflowDescription] = None
    Steps: Optional[WorkflowSteps] = None
    OnExceptionSteps: Optional[WorkflowSteps] = None
    WorkflowId: Optional[WorkflowId] = None
    Tags: Optional[Tags] = None


class ListedExecutions(BaseModel):
    __root__: List[ListedExecution]


class CreateWorkflowRequest(BaseModel):
    Description: Optional[WorkflowDescription] = None
    Steps: WorkflowSteps
    OnExceptionSteps: Optional[WorkflowSteps] = None
    Tags: Optional[Tags] = None


class DescribeExecutionResponse(BaseModel):
    WorkflowId: WorkflowId
    Execution: DescribedExecution


class DescribeWorkflowResponse(BaseModel):
    Workflow: DescribedWorkflow


class ListExecutionsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    WorkflowId: WorkflowId
    Executions: ListedExecutions

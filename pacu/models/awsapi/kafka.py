# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:11+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class _String(BaseModel):
    __root__: str


class BadRequestException(BaseModel):
    __root__: Any


class UnauthorizedException(BadRequestException):
    pass


class InternalServerErrorException(BadRequestException):
    pass


class ForbiddenException(BadRequestException):
    pass


class NotFoundException(BadRequestException):
    pass


class ServiceUnavailableException(BadRequestException):
    pass


class TooManyRequestsException(BadRequestException):
    pass


class BrokerAZDistribution(Enum):
    """

       <p>The distribution of broker nodes across Availability Zones. This is an optional parameter. If you don't specify it, Amazon MSK gives it the value DEFAULT. You can also explicitly set this parameter to the value DEFAULT. No other values are currently allowed.</p>
    <p>Amazon MSK distributes the broker nodes evenly across the Availability Zones that correspond to the subnets you provide when you create the cluster.</p>

    """

    DEFAULT = 'DEFAULT'


class _ListOfString(BaseModel):
    __root__: List[_String]


class _StringMin5Max32(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=5)]


class _Long(BaseModel):
    __root__: int


class EncryptionAtRest(BaseModel):
    """

    <p>The data-volume encryption details.</p>

    """

    DataVolumeKMSKeyId: _String


class ConflictException(BadRequestException):
    pass


class GetBootstrapBrokersResponse(BaseModel):
    BootstrapBrokerString: Optional[_String] = None
    BootstrapBrokerStringTls: Optional[_String] = None
    BootstrapBrokerStringSaslScram: Optional[_String] = None
    BootstrapBrokerStringSaslIam: Optional[_String] = None


class ListScramSecretsResponse(BaseModel):
    NextToken: Optional[_String] = None
    SecretArnList: Optional[_ListOfString] = None


class RebootBrokerResponse(BaseModel):
    ClusterArn: Optional[_String] = None
    ClusterOperationArn: Optional[_String] = None


class UpdateBrokerCountResponse(RebootBrokerResponse):
    pass


class UpdateBrokerTypeResponse(RebootBrokerResponse):
    pass


class UpdateBrokerStorageResponse(RebootBrokerResponse):
    pass


class UpdateClusterConfigurationResponse(RebootBrokerResponse):
    pass


class UpdateClusterKafkaVersionResponse(RebootBrokerResponse):
    pass


class UpdateMonitoringResponse(RebootBrokerResponse):
    pass


class UpdateSecurityResponse(RebootBrokerResponse):
    pass


class BatchAssociateScramSecretRequest(BaseModel):
    """

    <p>Associates sasl scram secrets to cluster.</p>

    """

    SecretArnList: _ListOfString


class _Integer(_Long):
    pass


class _Double(BaseModel):
    __root__: float


class BrokerSoftwareInfo(BaseModel):
    """

    <p>Information about the current software installed on the cluster.</p>

    """

    ConfigurationArn: Optional[_String] = None
    ConfigurationRevision: Optional[_Long] = None
    KafkaVersion: Optional[_String] = None


class BrokerNodeInfo(BaseModel):
    """

    <p>BrokerNodeInfo</p>

    """

    AttachedENIId: Optional[_String] = None
    BrokerId: Optional[_Double] = None
    ClientSubnet: Optional[_String] = None
    ClientVpcIpAddress: Optional[_String] = None
    CurrentBrokerSoftwareInfo: Optional[BrokerSoftwareInfo] = None
    Endpoints: Optional[_ListOfString] = None


class ClientBroker(Enum):
    """

    <p>Client-broker encryption in transit setting.</p>

    """

    TLS = 'TLS'
    TLS_PLAINTEXT = 'TLS_PLAINTEXT'
    PLAINTEXT = 'PLAINTEXT'


class _Boolean(BaseModel):
    __root__: bool


class _TimestampIso8601(BaseModel):
    __root__: datetime


class EnhancedMonitoring(Enum):
    """

    <p>Specifies which metrics are gathered for the MSK cluster. This property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>

    """

    DEFAULT = 'DEFAULT'
    PER_BROKER = 'PER_BROKER'
    PER_TOPIC_PER_BROKER = 'PER_TOPIC_PER_BROKER'
    PER_TOPIC_PER_PARTITION = 'PER_TOPIC_PER_PARTITION'


class ClusterState(Enum):
    """

    <p>The state of a Kafka cluster.</p>

    """

    ACTIVE = 'ACTIVE'
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    HEALING = 'HEALING'
    MAINTENANCE = 'MAINTENANCE'
    REBOOTING_BROKER = 'REBOOTING_BROKER'
    UPDATING = 'UPDATING'


class StateInfo(BaseModel):
    Code: Optional[_String] = None
    Message: Optional[_String] = None


class _MapOfString(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ErrorInfo(BaseModel):
    """

    <p>Returns information about an error state of the cluster.</p>

    """

    ErrorCode: Optional[_String] = None
    ErrorString: Optional[_String] = None


class ClusterOperationStepInfo(BaseModel):
    """

    <p>State information about the operation step.</p>

    """

    StepStatus: Optional[_String] = None


class ClusterOperationStep(BaseModel):
    """

    <p>Step taken during a cluster operation.</p>

    """

    StepInfo: Optional[ClusterOperationStepInfo] = None
    StepName: Optional[_String] = None


class CompatibleKafkaVersion(BaseModel):
    """

    <p>Contains source Kafka versions and compatible target Kafka versions.</p>

    """

    SourceVersion: Optional[_String] = None
    TargetVersions: Optional[_ListOfString] = None


class ConfigurationRevision(BaseModel):
    """

    <p>Describes a configuration revision.</p>

    """

    CreationTime: _TimestampIso8601
    Description: Optional[_String] = None
    Revision: _Long


class ConfigurationState(Enum):
    """

    <p>The state of a configuration.</p>

    """

    ACTIVE = 'ACTIVE'
    DELETING = 'DELETING'
    DELETE_FAILED = 'DELETE_FAILED'


class Configuration(BaseModel):
    """

    <p>Represents an MSK Configuration.</p>

    """

    Arn: _String
    CreationTime: _TimestampIso8601
    Description: _String
    KafkaVersions: _ListOfString
    LatestRevision: ConfigurationRevision
    Name: _String
    State: ConfigurationState


class ConfigurationInfo(BaseModel):
    """

    <p>Specifies the configuration to use for the brokers.</p>

    """

    Arn: _String
    Revision: _Long


class _StringMin1Max64(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class _StringMin1Max128(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class _IntegerMin1Max15(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=15.0)]


class _Blob(_String):
    pass


class CreateConfigurationRequest(BaseModel):
    Description: Optional[_String] = None
    KafkaVersions: Optional[_ListOfString] = None
    Name: _String
    ServerProperties: _Blob


class DeleteClusterRequest(BaseModel):
    pass


class DeleteConfigurationRequest(BaseModel):
    pass


class DescribeClusterOperationRequest(BaseModel):
    pass


class DescribeClusterRequest(BaseModel):
    pass


class DescribeConfigurationRequest(BaseModel):
    pass


class DescribeConfigurationRevisionRequest(BaseModel):
    pass


class BatchDisassociateScramSecretRequest(BaseModel):
    """

    <p>Disassociates sasl scram secrets to cluster.</p>

    """

    SecretArnList: _ListOfString


class _IntegerMin1Max16384(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=16384.0)]


class EBSStorageInfo(BaseModel):
    """

    <p>Contains information about the EBS storage volumes attached to Kafka broker nodes.</p>

    """

    VolumeSize: Optional[_IntegerMin1Max16384] = None


class GetBootstrapBrokersRequest(BaseModel):
    pass


class GetCompatibleKafkaVersionsRequest(BaseModel):
    pass


class _ListOfCompatibleKafkaVersion(BaseModel):
    __root__: List[CompatibleKafkaVersion]


class KafkaVersionStatus(Enum):
    ACTIVE = 'ACTIVE'
    DEPRECATED = 'DEPRECATED'


class KafkaVersion3(BaseModel):
    Version: Optional[_String] = None
    Status: Optional[KafkaVersionStatus] = None


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class ListClusterOperationsRequest(BaseModel):
    pass


class ListClustersRequest(BaseModel):
    pass


class ListConfigurationRevisionsRequest(BaseModel):
    pass


class _ListOfConfigurationRevision(BaseModel):
    __root__: List[ConfigurationRevision]


class ListConfigurationsRequest(BaseModel):
    pass


class _ListOfConfiguration(BaseModel):
    __root__: List[Configuration]


class ListKafkaVersionsRequest(BaseModel):
    pass


class _ListOfKafkaVersion(BaseModel):
    __root__: List[KafkaVersion3]


class ListNodesRequest(BaseModel):
    pass


class ListScramSecretsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    pass


class NodeExporter1(BaseModel):
    """

    <p>Indicates whether you want to enable or disable the Node Exporter.</p>

    """

    EnabledInBroker: _Boolean


class NodeExporterInfo(NodeExporter1):
    """

    <p>Indicates whether you want to enable or disable the Node Exporter.</p>

    """

    pass


class JmxExporter1(NodeExporter1):
    """

    <p>Indicates whether you want to enable or disable the JMX Exporter.</p>

    """

    pass


class JmxExporterInfo(NodeExporter1):
    """

    <p>Indicates whether you want to enable or disable the JMX Exporter.</p>

    """

    pass


class Prometheus(BaseModel):
    """

    <p>Prometheus settings.</p>

    """

    JmxExporter: Optional[JmxExporter1] = None
    NodeExporter: Optional[NodeExporter1] = None


class RebootBrokerRequest(BaseModel):
    """
    Reboots a node.
    """

    BrokerIds: _ListOfString


class Scram(BaseModel):
    """

    <p>Details for SASL/SCRAM client authentication.</p>

    """

    Enabled: Optional[_Boolean] = None


class Iam(Scram):
    """

    <p>Details for IAM access control.</p>

    """

    pass


class NodeType(Enum):
    """

    <p>The broker or Zookeeper node.</p>

    """

    BROKER = 'BROKER'


class ZookeeperNodeInfo(BaseModel):
    """

    <p>Zookeeper node information.</p>

    """

    AttachedENIId: Optional[_String] = None
    ClientVpcIpAddress: Optional[_String] = None
    Endpoints: Optional[_ListOfString] = None
    ZookeeperId: Optional[_Double] = None
    ZookeeperVersion: Optional[_String] = None


class NodeInfo(BaseModel):
    """

    <p>The node information object.</p>

    """

    AddedToClusterTime: Optional[_String] = None
    BrokerNodeInfo: Optional[BrokerNodeInfo] = None
    InstanceType: Optional[_String] = None
    NodeARN: Optional[_String] = None
    NodeType: Optional[NodeType] = None
    ZookeeperNodeInfo: Optional[ZookeeperNodeInfo] = None


class TagResourceRequest(BaseModel):
    Tags: _MapOfString


class UnprocessedScramSecret(BaseModel):
    """

    <p>Error info for scram secret associate/disassociate failure.</p>

    """

    ErrorCode: Optional[_String] = None
    ErrorMessage: Optional[_String] = None
    SecretArn: Optional[_String] = None


class UntagResourceRequest(BaseModel):
    pass


class UpdateBrokerCountRequest(BaseModel):
    CurrentVersion: _String
    TargetNumberOfBrokerNodes: _IntegerMin1Max15


class UpdateBrokerTypeRequest(BaseModel):
    CurrentVersion: _String
    TargetInstanceType: _String


class UpdateClusterConfigurationRequest(BaseModel):
    ConfigurationInfo: ConfigurationInfo
    CurrentVersion: _String


class UpdateClusterKafkaVersionRequest(BaseModel):
    ConfigurationInfo: Optional[ConfigurationInfo] = None
    CurrentVersion: _String
    TargetKafkaVersion: _String


class UpdateConfigurationRequest(BaseModel):
    Description: Optional[_String] = None
    ServerProperties: _Blob


class CreateClusterResponse(BaseModel):
    ClusterArn: Optional[_String] = None
    ClusterName: Optional[_String] = None
    State: Optional[ClusterState] = None


class StorageInfo(BaseModel):
    """

    <p>Contains information about storage volumes attached to MSK broker nodes.</p>

    """

    EbsStorageInfo: Optional[EBSStorageInfo] = None


class Sasl(BaseModel):
    """

    <p>Details for client authentication using SASL.</p>

    """

    Scram: Optional[Scram] = None
    Iam: Optional[Iam] = None


class Tls(BaseModel):
    """

    <p>Details for client authentication using TLS.</p>

    """

    CertificateAuthorityArnList: Optional[_ListOfString] = None
    Enabled: Optional[_Boolean] = None


class Unauthenticated(Scram):
    pass


class EncryptionInTransit(BaseModel):
    """

    <p>The settings for encrypting data in transit.</p>

    """

    ClientBroker: Optional[ClientBroker] = None
    InCluster: Optional[_Boolean] = None


class PrometheusInfo(BaseModel):
    """

    <p>Prometheus settings.</p>

    """

    JmxExporter: Optional[JmxExporterInfo] = None
    NodeExporter: Optional[NodeExporterInfo] = None


class CreateConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTime: Optional[_TimestampIso8601] = None
    LatestRevision: Optional[ConfigurationRevision] = None
    Name: Optional[_String] = None
    State: Optional[ConfigurationState] = None


class DeleteClusterResponse(BaseModel):
    ClusterArn: Optional[_String] = None
    State: Optional[ClusterState] = None


class DeleteConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    State: Optional[ConfigurationState] = None


class DescribeConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTime: Optional[_TimestampIso8601] = None
    Description: Optional[_String] = None
    KafkaVersions: Optional[_ListOfString] = None
    LatestRevision: Optional[ConfigurationRevision] = None
    Name: Optional[_String] = None
    State: Optional[ConfigurationState] = None


class DescribeConfigurationRevisionResponse(BaseModel):
    Arn: Optional[_String] = None
    CreationTime: Optional[_TimestampIso8601] = None
    Description: Optional[_String] = None
    Revision: Optional[_Long] = None
    ServerProperties: Optional[_Blob] = None


class GetCompatibleKafkaVersionsResponse(BaseModel):
    CompatibleKafkaVersions: Optional[_ListOfCompatibleKafkaVersion] = None


class ListConfigurationRevisionsResponse(BaseModel):
    NextToken: Optional[_String] = None
    Revisions: Optional[_ListOfConfigurationRevision] = None


class ListConfigurationsResponse(BaseModel):
    Configurations: Optional[_ListOfConfiguration] = None
    NextToken: Optional[_String] = None


class ListKafkaVersionsResponse(BaseModel):
    KafkaVersions: Optional[_ListOfKafkaVersion] = None
    NextToken: Optional[_String] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[_MapOfString] = None


class BrokerEBSVolumeInfo(BaseModel):
    """

    <p>Specifies the EBS volume upgrade information. The broker identifier must be set to the keyword ALL. This means the changes apply to all the brokers in the cluster.</p>

    """

    KafkaBrokerNodeId: _String
    VolumeSizeGB: _Integer


class UpdateConfigurationResponse(BaseModel):
    Arn: Optional[_String] = None
    LatestRevision: Optional[ConfigurationRevision] = None


class _ListOfUnprocessedScramSecret(BaseModel):
    __root__: List[UnprocessedScramSecret]


class CloudWatchLogs(BaseModel):
    Enabled: _Boolean
    LogGroup: Optional[_String] = None


class Firehose(BaseModel):
    DeliveryStream: Optional[_String] = None
    Enabled: _Boolean


class S3(BaseModel):
    Bucket: Optional[_String] = None
    Enabled: _Boolean
    Prefix: Optional[_String] = None


class BrokerNodeGroupInfo(BaseModel):
    """

    <p>Describes the setup to be used for Kafka broker nodes in the cluster.</p>

    """

    BrokerAZDistribution: Optional[BrokerAZDistribution] = None
    ClientSubnets: _ListOfString
    InstanceType: _StringMin5Max32
    SecurityGroups: Optional[_ListOfString] = None
    StorageInfo: Optional[StorageInfo] = None


class ClientAuthentication(BaseModel):
    """

    <p>Includes all client authentication information.</p>

    """

    Sasl: Optional[Sasl] = None
    Tls: Optional[Tls] = None
    Unauthenticated: Optional[Unauthenticated] = None


class EncryptionInfo(BaseModel):
    """

    <p>Includes encryption-related information, such as the AWS KMS key used for encrypting data at rest and whether you want MSK to encrypt your data in transit.</p>

    """

    EncryptionAtRest: Optional[EncryptionAtRest] = None
    EncryptionInTransit: Optional[EncryptionInTransit] = None


class OpenMonitoring(BaseModel):
    """

    <p>JMX and Node monitoring for the MSK cluster.</p>

    """

    Prometheus: Prometheus


class _ListOfClusterOperationStep(BaseModel):
    __root__: List[ClusterOperationStep]


class OpenMonitoringInfo(BaseModel):
    """

    <p>JMX and Node monitoring for the MSK cluster.</p>

    """

    Prometheus: PrometheusInfo


class _ListOfNodeInfo(BaseModel):
    __root__: List[NodeInfo]


class _ListOfBrokerEBSVolumeInfo(BaseModel):
    __root__: List[BrokerEBSVolumeInfo]


class UpdateBrokerStorageRequest(BaseModel):
    CurrentVersion: _String
    TargetBrokerEBSVolumeInfo: _ListOfBrokerEBSVolumeInfo


class UpdateSecurityRequest(BaseModel):
    ClientAuthentication: Optional[ClientAuthentication] = None
    CurrentVersion: _String
    EncryptionInfo: Optional[EncryptionInfo] = None


class BatchAssociateScramSecretResponse(BaseModel):
    ClusterArn: Optional[_String] = None
    UnprocessedScramSecrets: Optional[_ListOfUnprocessedScramSecret] = None


class BrokerLogs(BaseModel):
    CloudWatchLogs: Optional[CloudWatchLogs] = None
    Firehose: Optional[Firehose] = None
    S3: Optional[S3] = None


class BatchDisassociateScramSecretResponse(BatchAssociateScramSecretResponse):
    pass


class ListNodesResponse(BaseModel):
    NextToken: Optional[_String] = None
    NodeInfoList: Optional[_ListOfNodeInfo] = None


class LoggingInfo(BaseModel):
    BrokerLogs: BrokerLogs


class ClusterInfo(BaseModel):
    """

    <p>Returns information about a cluster.</p>

    """

    ActiveOperationArn: Optional[_String] = None
    BrokerNodeGroupInfo: Optional[BrokerNodeGroupInfo] = None
    ClientAuthentication: Optional[ClientAuthentication] = None
    ClusterArn: Optional[_String] = None
    ClusterName: Optional[_String] = None
    CreationTime: Optional[_TimestampIso8601] = None
    CurrentBrokerSoftwareInfo: Optional[BrokerSoftwareInfo] = None
    CurrentVersion: Optional[_String] = None
    EncryptionInfo: Optional[EncryptionInfo] = None
    EnhancedMonitoring: Optional[EnhancedMonitoring] = None
    OpenMonitoring: Optional[OpenMonitoring] = None
    LoggingInfo: Optional[LoggingInfo] = None
    NumberOfBrokerNodes: Optional[_Integer] = None
    State: Optional[ClusterState] = None
    StateInfo: Optional[StateInfo] = None
    Tags: Optional[_MapOfString] = None
    ZookeeperConnectString: Optional[_String] = None
    ZookeeperConnectStringTls: Optional[_String] = None


class MutableClusterInfo(BaseModel):
    """

    <p>Information about cluster attributes that can be updated via update APIs.</p>

    """

    BrokerEBSVolumeInfo: Optional[_ListOfBrokerEBSVolumeInfo] = None
    ConfigurationInfo: Optional[ConfigurationInfo] = None
    NumberOfBrokerNodes: Optional[_Integer] = None
    EnhancedMonitoring: Optional[EnhancedMonitoring] = None
    OpenMonitoring: Optional[OpenMonitoring] = None
    KafkaVersion: Optional[_String] = None
    LoggingInfo: Optional[LoggingInfo] = None
    InstanceType: Optional[_StringMin5Max32] = None
    ClientAuthentication: Optional[ClientAuthentication] = None
    EncryptionInfo: Optional[EncryptionInfo] = None


class ClusterOperationInfo(BaseModel):
    """

    <p>Returns information about a cluster operation.</p>

    """

    ClientRequestId: Optional[_String] = None
    ClusterArn: Optional[_String] = None
    CreationTime: Optional[_TimestampIso8601] = None
    EndTime: Optional[_TimestampIso8601] = None
    ErrorInfo: Optional[ErrorInfo] = None
    OperationArn: Optional[_String] = None
    OperationState: Optional[_String] = None
    OperationSteps: Optional[_ListOfClusterOperationStep] = None
    OperationType: Optional[_String] = None
    SourceClusterInfo: Optional[MutableClusterInfo] = None
    TargetClusterInfo: Optional[MutableClusterInfo] = None


class CreateClusterRequest(BaseModel):
    BrokerNodeGroupInfo: BrokerNodeGroupInfo
    ClientAuthentication: Optional[ClientAuthentication] = None
    ClusterName: _StringMin1Max64
    ConfigurationInfo: Optional[ConfigurationInfo] = None
    EncryptionInfo: Optional[EncryptionInfo] = None
    EnhancedMonitoring: Optional[EnhancedMonitoring] = None
    OpenMonitoring: Optional[OpenMonitoringInfo] = None
    KafkaVersion: _StringMin1Max128
    LoggingInfo: Optional[LoggingInfo] = None
    NumberOfBrokerNodes: _IntegerMin1Max15
    Tags: Optional[_MapOfString] = None


class _ListOfClusterOperationInfo(BaseModel):
    __root__: List[ClusterOperationInfo]


class _ListOfClusterInfo(BaseModel):
    __root__: List[ClusterInfo]


class UpdateMonitoringRequest(BaseModel):
    """
    Request body for UpdateMonitoring.
    """

    CurrentVersion: _String
    EnhancedMonitoring: Optional[EnhancedMonitoring] = None
    OpenMonitoring: Optional[OpenMonitoringInfo] = None
    LoggingInfo: Optional[LoggingInfo] = None


class DescribeClusterResponse(BaseModel):
    ClusterInfo: Optional[ClusterInfo] = None


class DescribeClusterOperationResponse(BaseModel):
    ClusterOperationInfo: Optional[ClusterOperationInfo] = None


class ListClusterOperationsResponse(BaseModel):
    ClusterOperationInfoList: Optional[_ListOfClusterOperationInfo] = None
    NextToken: Optional[_String] = None


class ListClustersResponse(BaseModel):
    ClusterInfoList: Optional[_ListOfClusterInfo] = None
    NextToken: Optional[_String] = None

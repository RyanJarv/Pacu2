# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:44:36+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ValidationException(ResourceNotFoundException):
    pass


class InternalServerException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class AccessDeniedException(ResourceNotFoundException):
    pass


class CancelPolicyGenerationResponse(BaseModel):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class ServiceQuotaExceededException(ResourceNotFoundException):
    pass


class String(BaseModel):
    __root__: str


class OrderBy(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class RoleArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:[^:]*:iam::[^:]*:role/.{1,576}')]


class Timestamp(BaseModel):
    __root__: datetime


class PrincipalArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:[^:]*:iam::[^:]*:(role|user)/.{1,576}')]


class TagResourceResponse(CancelPolicyGenerationResponse):
    """
    The response to the request.
    """

    pass


class UntagResourceResponse(CancelPolicyGenerationResponse):
    """
    The response to the request.
    """

    pass


class FindingId(String):
    pass


class AccessPointArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:[^:]*:s3:[^:]*:[^:]*:accesspoint/.*')]


class AccessPointPolicy(String):
    pass


class AnalyzerArn(BaseModel):
    __root__: Annotated[
        str, Field(regex='[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:analyzer/.{1,255}')
    ]


class ConfigurationsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AccessPreviewId(BaseModel):
    __root__: Annotated[
        str, Field(regex='[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}')
    ]


class AccessPreviewStatus(Enum):
    COMPLETED = 'COMPLETED'
    CREATING = 'CREATING'
    FAILED = 'FAILED'


class ActionList(BaseModel):
    __root__: List[String]


class FindingChangeType(Enum):
    CHANGED = 'CHANGED'
    NEW = 'NEW'
    UNCHANGED = 'UNCHANGED'


class ConditionKeyMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class FindingStatus(Enum):
    ACTIVE = 'ACTIVE'
    ARCHIVED = 'ARCHIVED'
    RESOLVED = 'RESOLVED'


class AccessPreviewFindingId(String):
    pass


class Boolean(BaseModel):
    __root__: bool


class PrincipalMap(ConditionKeyMap):
    pass


class ResourceType(Enum):
    AWS__S3__Bucket = 'AWS::S3::Bucket'
    AWS__IAM__Role = 'AWS::IAM::Role'
    AWS__SQS__Queue = 'AWS::SQS::Queue'
    AWS__Lambda__Function = 'AWS::Lambda::Function'
    AWS__Lambda__LayerVersion = 'AWS::Lambda::LayerVersion'
    AWS__KMS__Key = 'AWS::KMS::Key'
    AWS__SecretsManager__Secret = 'AWS::SecretsManager::Secret'


class AccessPreviewStatusReasonCode(Enum):
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    INVALID_CONFIGURATION = 'INVALID_CONFIGURATION'


class AclCanonicalId(String):
    pass


class AclUri(String):
    pass


class AclGrantee(BaseModel):
    """
    You specify each grantee as a type-value pair using one of these types. You can specify only one type of grantee. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketAcl.html">PutBucketAcl</a>.
    """

    id: Optional[AclCanonicalId] = None
    uri: Optional[AclUri] = None


class AclPermission(Enum):
    READ = 'READ'
    WRITE = 'WRITE'
    READ_ACP = 'READ_ACP'
    WRITE_ACP = 'WRITE_ACP'
    FULL_CONTROL = 'FULL_CONTROL'


class ResourceArn(BaseModel):
    __root__: Annotated[str, Field(regex='arn:[^:]*:[^:]*:[^:]*:[^:]*:.*')]


class SharedViaList(ActionList):
    pass


class AnalyzedResource(BaseModel):
    """
    Contains details about the analyzed resource.
    """

    actions: Optional[ActionList] = None
    analyzedAt: Timestamp
    createdAt: Timestamp
    error: Optional[String] = None
    isPublic: Boolean
    resourceArn: ResourceArn
    resourceOwnerAccount: String
    resourceType: ResourceType
    sharedVia: Optional[SharedViaList] = None
    status: Optional[FindingStatus] = None
    updatedAt: Timestamp


class AnalyzedResourceSummary(BaseModel):
    """
    Contains the ARN of the analyzed resource.
    """

    resourceArn: ResourceArn
    resourceOwnerAccount: String
    resourceType: ResourceType


class AnalyzedResourcesList(BaseModel):
    __root__: List[AnalyzedResourceSummary]


class AnalyzerStatus(Enum):
    ACTIVE = 'ACTIVE'
    CREATING = 'CREATING'
    DISABLED = 'DISABLED'
    FAILED = 'FAILED'


class Name(BaseModel):
    __root__: Annotated[
        str, Field(max_length=255, min_length=1, regex='[A-Za-z][A-Za-z0-9_.-]*')
    ]


class TagsMap(ConditionKeyMap):
    pass


class Type(Enum):
    ACCOUNT = 'ACCOUNT'
    ORGANIZATION = 'ORGANIZATION'


class ApplyArchiveRuleRequest(BaseModel):
    """
    Retroactively applies an archive rule.
    """

    analyzerArn: AnalyzerArn
    clientToken: Optional[String] = None
    ruleName: Name


class FilterCriteriaMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class ArchiveRuleSummary(BaseModel):
    """
    Contains information about an archive rule.
    """

    createdAt: Timestamp
    filter: FilterCriteriaMap
    ruleName: Name
    updatedAt: Timestamp


class ArchiveRulesList(BaseModel):
    __root__: List[ArchiveRuleSummary]


class JobId(String):
    pass


class CancelPolicyGenerationRequest(BaseModel):
    pass


class CloudTrailArn(BaseModel):
    __root__: Annotated[
        str, Field(regex='arn:[^:]*:cloudtrail:[^:]*:[^:]*:trail/.{1,576}')
    ]


class ConfigurationsMapKey(String):
    pass


class CreateAccessPreviewRequest(BaseModel):
    analyzerArn: AnalyzerArn
    clientToken: Optional[String] = None
    configurations: ConfigurationsMap


class CreateArchiveRuleRequest(BaseModel):
    """
    Creates an archive rule.
    """

    clientToken: Optional[String] = None
    filter: FilterCriteriaMap
    ruleName: Name


class ValueList(BaseModel):
    __root__: Annotated[List[String], Field(max_items=20, min_items=1)]


class DeleteAnalyzerRequest(BaseModel):
    """
    Deletes an analyzer.
    """

    pass


class DeleteArchiveRuleRequest(BaseModel):
    """
    Deletes an archive rule.
    """

    pass


class FindingIdList(BaseModel):
    __root__: List[FindingId]


class FindingSourceDetail(BaseModel):
    """
    Includes details about how the access that generated the finding is granted. This is populated for Amazon S3 bucket findings.
    """

    accessPointArn: Optional[String] = None


class FindingSourceType(Enum):
    POLICY = 'POLICY'
    BUCKET_ACL = 'BUCKET_ACL'
    S3_ACCESS_POINT = 'S3_ACCESS_POINT'


class FindingSource(BaseModel):
    """
    The source of the finding. This indicates how the access that generated the finding is granted. It is populated for Amazon S3 bucket findings.
    """

    detail: Optional[FindingSourceDetail] = None
    type: FindingSourceType


class FindingStatusUpdate(Enum):
    ACTIVE = 'ACTIVE'
    ARCHIVED = 'ARCHIVED'


class GeneratedPolicy(BaseModel):
    """
    Contains the text for the generated policy.
    """

    policy: String


class GeneratedPolicyList(BaseModel):
    __root__: List[GeneratedPolicy]


class GeneratedPolicyResult(BaseModel):
    """
    Contains the text for the generated policy and its details.
    """

    generatedPolicies: Optional[GeneratedPolicyList] = None
    properties: Annotated[
        Any,
        Field(
            description='A <code>GeneratedPolicyProperties</code> object that contains properties of the generated policy.'
        ),
    ]


class GetAccessPreviewRequest(BaseModel):
    pass


class GetAnalyzedResourceRequest(BaseModel):
    """
    Retrieves an analyzed resource.
    """

    pass


class GetAnalyzerRequest(BaseModel):
    """
    Retrieves an analyzer.
    """

    pass


class GetArchiveRuleRequest(BaseModel):
    """
    Retrieves an archive rule.
    """

    pass


class GetFindingRequest(BaseModel):
    """
    Retrieves a finding.
    """

    pass


class GetGeneratedPolicyRequest(BaseModel):
    pass


class GranteePrincipal(String):
    pass


class IamTrustPolicy(String):
    pass


class Integer(BaseModel):
    __root__: int


class InternetConfiguration(CancelPolicyGenerationResponse):
    """
    This configuration sets the network origin for the Amazon S3 access point or multi-region access point to <code>Internet</code>.
    """

    pass


class IssueCode(String):
    pass


class IssuingAccount(String):
    pass


class JobStatus(Enum):
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    CANCELED = 'CANCELED'


class JobErrorCode(Enum):
    AUTHORIZATION_ERROR = 'AUTHORIZATION_ERROR'
    RESOURCE_NOT_FOUND_ERROR = 'RESOURCE_NOT_FOUND_ERROR'
    SERVICE_QUOTA_EXCEEDED_ERROR = 'SERVICE_QUOTA_EXCEEDED_ERROR'
    SERVICE_ERROR = 'SERVICE_ERROR'


class KmsConstraintsKey(String):
    pass


class KmsConstraintsValue(String):
    pass


class KmsConstraintsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class KmsGrantConstraints(BaseModel):
    """
    Use this structure to propose allowing <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic operations</a> in the grant only when the operation request includes the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption context</a>. You can specify only one type of encryption context. An empty map is treated as not specified. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_GrantConstraints.html">GrantConstraints</a>.
    """

    encryptionContextEquals: Optional[KmsConstraintsMap] = None
    encryptionContextSubset: Optional[KmsConstraintsMap] = None


class RetiringPrincipal(String):
    pass


class KmsGrantOperation(Enum):
    CreateGrant = 'CreateGrant'
    Decrypt = 'Decrypt'
    DescribeKey = 'DescribeKey'
    Encrypt = 'Encrypt'
    GenerateDataKey = 'GenerateDataKey'
    GenerateDataKeyPair = 'GenerateDataKeyPair'
    GenerateDataKeyPairWithoutPlaintext = 'GenerateDataKeyPairWithoutPlaintext'
    GenerateDataKeyWithoutPlaintext = 'GenerateDataKeyWithoutPlaintext'
    GetPublicKey = 'GetPublicKey'
    ReEncryptFrom = 'ReEncryptFrom'
    ReEncryptTo = 'ReEncryptTo'
    RetireGrant = 'RetireGrant'
    Sign = 'Sign'
    Verify = 'Verify'


class KmsKeyPoliciesMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class KmsKeyPolicy(String):
    pass


class LearnMoreLink(String):
    pass


class Token(String):
    pass


class ListAccessPreviewFindingsRequest(BaseModel):
    analyzerArn: AnalyzerArn
    filter: Optional[FilterCriteriaMap] = None
    maxResults: Optional[Integer] = None
    nextToken: Optional[Token] = None


class ListAccessPreviewsRequest(BaseModel):
    pass


class ListAnalyzedResourcesRequest(BaseModel):
    """
    Retrieves a list of resources that have been analyzed.
    """

    analyzerArn: AnalyzerArn
    maxResults: Optional[Integer] = None
    nextToken: Optional[Token] = None
    resourceType: Optional[ResourceType] = None


class ListAnalyzersRequest(BaseModel):
    """
    Retrieves a list of analyzers.
    """

    pass


class ListArchiveRulesRequest(BaseModel):
    """
    Retrieves a list of archive rules created for the specified analyzer.
    """

    pass


class SortCriteria(BaseModel):
    """
    The criteria used to sort.
    """

    attributeName: Optional[String] = None
    orderBy: Optional[OrderBy] = None


class ListFindingsRequest(BaseModel):
    """
    Retrieves a list of findings generated by the specified analyzer.
    """

    analyzerArn: AnalyzerArn
    filter: Optional[FilterCriteriaMap] = None
    maxResults: Optional[Integer] = None
    nextToken: Optional[Token] = None
    sort: Optional[SortCriteria] = None


class ListPolicyGenerationsRequestMaxResultsInteger(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class ListPolicyGenerationsRequest(BaseModel):
    pass


class ListTagsForResourceRequest(BaseModel):
    """
    Retrieves a list of tags applied to the specified resource.
    """

    pass


class Locale(Enum):
    DE = 'DE'
    EN = 'EN'
    ES = 'ES'
    FR = 'FR'
    IT = 'IT'
    JA = 'JA'
    KO = 'KO'
    PT_BR = 'PT_BR'
    ZH_CN = 'ZH_CN'
    ZH_TW = 'ZH_TW'


class Substring(BaseModel):
    """
    A reference to a substring of a literal string in a JSON document.
    """

    length: Integer
    start: Integer


class PathElement(BaseModel):
    """
    A single element in a path through the JSON representation of a policy.
    """

    index: Optional[Integer] = None
    key: Optional[String] = None
    substring: Optional[Substring] = None
    value: Optional[String] = None


class PolicyDocument(String):
    pass


class PolicyGeneration(BaseModel):
    """
    Contains details about the policy generation status and properties.
    """

    completedOn: Optional[Timestamp] = None
    jobId: JobId
    principalArn: PrincipalArn
    startedOn: Timestamp
    status: JobStatus


class PolicyGenerationDetails(BaseModel):
    """
    Contains the ARN details about the IAM entity for which the policy is generated.
    """

    principalArn: PrincipalArn


class PolicyName(String):
    pass


class PolicyType(Enum):
    IDENTITY_POLICY = 'IDENTITY_POLICY'
    RESOURCE_POLICY = 'RESOURCE_POLICY'
    SERVICE_CONTROL_POLICY = 'SERVICE_CONTROL_POLICY'


class Position(BaseModel):
    """
    A position in a policy.
    """

    column: Integer
    line: Integer
    offset: Integer


class ReasonCode(Enum):
    AWS_SERVICE_ACCESS_DISABLED = 'AWS_SERVICE_ACCESS_DISABLED'
    DELEGATED_ADMINISTRATOR_DEREGISTERED = 'DELEGATED_ADMINISTRATOR_DEREGISTERED'
    ORGANIZATION_DELETED = 'ORGANIZATION_DELETED'
    SERVICE_LINKED_ROLE_CREATION_FAILED = 'SERVICE_LINKED_ROLE_CREATION_FAILED'


class RegionList(ActionList):
    pass


class S3PublicAccessBlockConfiguration(BaseModel):
    """
    The <code>PublicAccessBlock</code> configuration to apply to this Amazon S3 bucket. If the proposed configuration is for an existing Amazon S3 bucket and the configuration is not specified, the access preview uses the existing setting. If the proposed configuration is for a new bucket and the configuration is not specified, the access preview uses <code>false</code>. If the proposed configuration is for a new access point or multi-region access point and the access point BPA configuration is not specified, the access preview uses <code>true</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-publicaccessblockconfiguration.html">PublicAccessBlockConfiguration</a>.
    """

    ignorePublicAcls: Boolean
    restrictPublicBuckets: Boolean


class S3AccessPointConfigurationsMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class S3BucketAclGrantConfiguration(BaseModel):
    """
    A proposed access control list grant configuration for an Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#setting-acls">How to Specify an ACL</a>.
    """

    grantee: AclGrantee
    permission: AclPermission


class S3BucketAclGrantConfigurationsList(BaseModel):
    __root__: List[S3BucketAclGrantConfiguration]


class S3BucketPolicy(String):
    pass


class SecretsManagerSecretKmsId(String):
    pass


class SecretsManagerSecretPolicy(String):
    pass


class SqsQueuePolicy(String):
    pass


class StartResourceScanRequest(BaseModel):
    """
    Starts a scan of the policies applied to the specified resource.
    """

    analyzerArn: AnalyzerArn
    resourceArn: ResourceArn


class TagKeys(ActionList):
    pass


class TagResourceRequest(BaseModel):
    """
    Adds a tag to the specified resource.
    """

    tags: TagsMap


class Trail(BaseModel):
    """
    Contains details about the CloudTrail trail being analyzed to generate a policy.
    """

    allRegions: Optional[Boolean] = None
    cloudTrailArn: CloudTrailArn
    regions: Optional[RegionList] = None


class TrailProperties(Trail):
    """
    Contains details about the CloudTrail trail being analyzed to generate a policy.
    """

    pass


class UntagResourceRequest(BaseModel):
    """
    Removes a tag from the specified resource.
    """

    pass


class UpdateArchiveRuleRequest(BaseModel):
    """
    Updates the specified archive rule.
    """

    clientToken: Optional[String] = None
    filter: FilterCriteriaMap


class UpdateFindingsRequest(BaseModel):
    """
    Updates findings with the new values provided in the request.
    """

    analyzerArn: AnalyzerArn
    clientToken: Optional[String] = None
    ids: Optional[FindingIdList] = None
    resourceArn: Optional[ResourceArn] = None
    status: FindingStatusUpdate


class ValidatePolicyFindingType(Enum):
    ERROR = 'ERROR'
    SECURITY_WARNING = 'SECURITY_WARNING'
    SUGGESTION = 'SUGGESTION'
    WARNING = 'WARNING'


class ValidatePolicyRequest(BaseModel):
    locale: Optional[Locale] = None
    policyDocument: PolicyDocument
    policyType: PolicyType


class VpcId(BaseModel):
    __root__: Annotated[str, Field(regex='vpc-([0-9a-f]){8}(([0-9a-f]){9})?')]


class CreateAccessPreviewResponse(BaseModel):
    id: AccessPreviewId


class CreateAnalyzerResponse(BaseModel):
    """
    The response to the request to create an analyzer.
    """

    arn: Optional[AnalyzerArn] = None


class InlineArchiveRule(BaseModel):
    """
    An criterion statement in an archive rule. Each archive rule may have multiple criteria.
    """

    filter: FilterCriteriaMap
    ruleName: Name


class Criterion(BaseModel):
    """
    The criteria to use in the filter that defines the archive rule.
    """

    contains: Optional[ValueList] = None
    eq: Optional[ValueList] = None
    exists: Optional[Boolean] = None
    neq: Optional[ValueList] = None


class GetAnalyzedResourceResponse(BaseModel):
    """
    The response to the request.
    """

    resource: Optional[AnalyzedResource] = None


class GetArchiveRuleResponse(BaseModel):
    """
    The response to the request.
    """

    archiveRule: ArchiveRuleSummary


class ListAnalyzedResourcesResponse(BaseModel):
    """
    The response to the request.
    """

    analyzedResources: AnalyzedResourcesList
    nextToken: Optional[Token] = None


class ListArchiveRulesResponse(BaseModel):
    """
    The response to the request.
    """

    archiveRules: ArchiveRulesList
    nextToken: Optional[Token] = None


class ListTagsForResourceResponse(BaseModel):
    """
    The response to the request.
    """

    tags: Optional[TagsMap] = None


class StartPolicyGenerationResponse(BaseModel):
    jobId: JobId


class TrailList(BaseModel):
    __root__: List[Trail]


class AccessPreviewStatusReason(BaseModel):
    """
    Provides more details about the current status of the access preview. For example, if the creation of the access preview fails, a <code>Failed</code> status is returned. This failure can be due to an internal issue with the analysis or due to an invalid proposed resource configuration.
    """

    code: AccessPreviewStatusReasonCode


class AccessPreview(BaseModel):
    """
    Contains information about an access preview.
    """

    analyzerArn: AnalyzerArn
    configurations: ConfigurationsMap
    createdAt: Timestamp
    id: AccessPreviewId
    status: AccessPreviewStatus
    statusReason: Optional[AccessPreviewStatusReason] = None


class FindingSourceList(BaseModel):
    __root__: List[FindingSource]


class AccessPreviewFinding(BaseModel):
    """
    An access preview finding generated by the access preview.
    """

    action: Optional[ActionList] = None
    changeType: FindingChangeType
    condition: Optional[ConditionKeyMap] = None
    createdAt: Timestamp
    error: Optional[String] = None
    existingFindingId: Optional[FindingId] = None
    existingFindingStatus: Optional[FindingStatus] = None
    id: AccessPreviewFindingId
    isPublic: Optional[Boolean] = None
    principal: Optional[PrincipalMap] = None
    resource: Optional[String] = None
    resourceOwnerAccount: String
    resourceType: ResourceType
    sources: Optional[FindingSourceList] = None
    status: FindingStatus


class AccessPreviewFindingsList(BaseModel):
    __root__: List[AccessPreviewFinding]


class AccessPreviewSummary(BaseModel):
    """
    Contains a summary of information about an access preview.
    """

    analyzerArn: AnalyzerArn
    createdAt: Timestamp
    id: AccessPreviewId
    status: AccessPreviewStatus
    statusReason: Optional[AccessPreviewStatusReason] = None


class AccessPreviewsList(BaseModel):
    __root__: List[AccessPreviewSummary]


class StatusReason1(BaseModel):
    """
    Provides more details about the current status of the analyzer. For example, if the creation for the analyzer fails, a <code>Failed</code> status is returned. For an analyzer with organization as the type, this failure can be due to an issue with creating the service-linked roles required in the member accounts of the Amazon Web Services organization.
    """

    code: ReasonCode


class AnalyzerSummary(BaseModel):
    """
    Contains information about the analyzer.
    """

    arn: AnalyzerArn
    createdAt: Timestamp
    lastResourceAnalyzed: Optional[String] = None
    lastResourceAnalyzedAt: Optional[Timestamp] = None
    name: Name
    status: AnalyzerStatus
    statusReason: Optional[StatusReason1] = None
    tags: Optional[TagsMap] = None
    type: Type


class AnalyzersList(BaseModel):
    __root__: List[AnalyzerSummary]


class CloudTrailDetails(BaseModel):
    """
    Contains information about CloudTrail access.
    """

    accessRole: RoleArn
    endTime: Optional[Timestamp] = None
    startTime: Timestamp
    trails: TrailList


class TrailPropertiesList(BaseModel):
    __root__: List[TrailProperties]


class CloudTrailProperties(BaseModel):
    """
    Contains information about CloudTrail access.
    """

    endTime: Timestamp
    startTime: Timestamp
    trailProperties: TrailPropertiesList


class IamRoleConfiguration(BaseModel):
    """
    The proposed access control configuration for an IAM role. You can propose a configuration for a new IAM role or an existing IAM role that you own by specifying the trust policy. If the configuration is for a new IAM role, you must specify the trust policy. If the configuration is for an existing IAM role that you own and you do not propose the trust policy, the access preview uses the existing trust policy for the role. The proposed trust policy cannot be an empty string. For more information about role trust policy limits, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a>.
    """

    trustPolicy: Optional[IamTrustPolicy] = None


class S3BucketConfiguration(BaseModel):
    """
    Proposed access control configuration for an Amazon S3 bucket. You can propose a configuration for a new Amazon S3 bucket or an existing Amazon S3 bucket that you own by specifying the Amazon S3 bucket policy, bucket ACLs, bucket BPA settings, Amazon S3 access points, and multi-region access points attached to the bucket. If the configuration is for an existing Amazon S3 bucket and you do not specify the Amazon S3 bucket policy, the access preview uses the existing policy attached to the bucket. If the access preview is for a new resource and you do not specify the Amazon S3 bucket policy, the access preview assumes a bucket without a policy. To propose deletion of an existing bucket policy, you can specify an empty string. For more information about bucket policy limits, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html">Bucket Policy Examples</a>.
    """

    accessPoints: Optional[S3AccessPointConfigurationsMap] = None
    bucketAclGrants: Optional[S3BucketAclGrantConfigurationsList] = None
    bucketPolicy: Optional[S3BucketPolicy] = None
    bucketPublicAccessBlock: Optional[S3PublicAccessBlockConfiguration] = None


class SecretsManagerSecretConfiguration(BaseModel):
    """
    <p>The configuration for a Secrets Manager secret. For more information, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html">CreateSecret</a>.</p> <p>You can propose a configuration for a new secret or an existing secret that you own by specifying the secret policy and optional KMS encryption key. If the configuration is for an existing secret and you do not specify the secret policy, the access preview uses the existing policy for the secret. If the access preview is for a new resource and you do not specify the policy, the access preview assumes a secret without a policy. To propose deletion of an existing policy, you can specify an empty string. If the proposed configuration is for a new secret and you do not specify the KMS key ID, the access preview uses the default CMK of the Amazon Web Services account. If you specify an empty string for the KMS key ID, the access preview uses the default CMK of the Amazon Web Services account. For more information about secret policy limits, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/reference_limits.html">Quotas for Secrets Manager.</a>.</p>
    """

    kmsKeyId: Optional[SecretsManagerSecretKmsId] = None
    secretPolicy: Optional[SecretsManagerSecretPolicy] = None


class SqsQueueConfiguration(BaseModel):
    """
    The proposed access control configuration for an Amazon SQS queue. You can propose a configuration for a new Amazon SQS queue or an existing Amazon SQS queue that you own by specifying the Amazon SQS policy. If the configuration is for an existing Amazon SQS queue and you do not specify the Amazon SQS policy, the access preview uses the existing Amazon SQS policy for the queue. If the access preview is for a new resource and you do not specify the policy, the access preview assumes an Amazon SQS queue without a policy. To propose deletion of an existing Amazon SQS queue policy, you can specify an empty string for the Amazon SQS policy. For more information about Amazon SQS policy limits, see <a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/quotas-policies.html">Quotas related to policies</a>.
    """

    queuePolicy: Optional[SqsQueuePolicy] = None


class InlineArchiveRulesList(BaseModel):
    __root__: List[InlineArchiveRule]


class CreateAnalyzerRequest(BaseModel):
    """
    Creates an analyzer.
    """

    analyzerName: Name
    archiveRules: Optional[InlineArchiveRulesList] = None
    clientToken: Optional[String] = None
    tags: Optional[TagsMap] = None
    type: Type


class Finding(BaseModel):
    """
    Contains information about a finding.
    """

    action: Optional[ActionList] = None
    analyzedAt: Timestamp
    condition: ConditionKeyMap
    createdAt: Timestamp
    error: Optional[String] = None
    id: FindingId
    isPublic: Optional[Boolean] = None
    principal: Optional[PrincipalMap] = None
    resource: Optional[String] = None
    resourceOwnerAccount: String
    resourceType: ResourceType
    sources: Optional[FindingSourceList] = None
    status: FindingStatus
    updatedAt: Timestamp


class FindingSummary(Finding):
    """
    Contains information about a finding.
    """

    pass


class FindingsList(BaseModel):
    __root__: List[FindingSummary]


class GeneratedPolicyProperties(BaseModel):
    """
    Contains the generated policy details.
    """

    cloudTrailProperties: Optional[CloudTrailProperties] = None
    isComplete: Optional[Boolean] = None
    principalArn: PrincipalArn


class JobError(BaseModel):
    """
    Contains the details about the policy generation error.
    """

    code: JobErrorCode
    message: String


class KmsGrantOperationsList(BaseModel):
    __root__: List[KmsGrantOperation]


class KmsGrantConfiguration(BaseModel):
    """
    A proposed grant configuration for a KMS key. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html">CreateGrant</a>.
    """

    constraints: Optional[KmsGrantConstraints] = None
    granteePrincipal: GranteePrincipal
    issuingAccount: IssuingAccount
    operations: KmsGrantOperationsList
    retiringPrincipal: Optional[RetiringPrincipal] = None


class KmsGrantConfigurationsList(BaseModel):
    __root__: List[KmsGrantConfiguration]


class PolicyGenerationList(BaseModel):
    __root__: List[PolicyGeneration]


class PathElementList(BaseModel):
    __root__: List[PathElement]


class Span(BaseModel):
    """
    A span in a policy. The span consists of a start position (inclusive) and end position (exclusive).
    """

    end: Position
    start: Position


class Location(BaseModel):
    """
    A location in a policy that is represented as a path through the JSON representation and a corresponding span.
    """

    path: PathElementList
    span: Span


class LocationList(BaseModel):
    __root__: List[Location]


class VpcConfiguration(BaseModel):
    """
    The proposed virtual private cloud (VPC) configuration for the Amazon S3 access point. VPC configuration does not apply to multi-region access points. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_VpcConfiguration.html">VpcConfiguration</a>.
    """

    vpcId: VpcId


class NetworkOriginConfiguration(BaseModel):
    """
    The proposed <code>InternetConfiguration</code> or <code>VpcConfiguration</code> to apply to the Amazon S3 access point. <code>VpcConfiguration</code> does not apply to multi-region access points. You can make the access point accessible from the internet, or you can specify that all requests made through that access point must originate from a specific virtual private cloud (VPC). You can specify only one type of network configuration. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html">Creating access points</a>.
    """

    internetConfiguration: Optional[InternetConfiguration] = None
    vpcConfiguration: Optional[VpcConfiguration] = None


class S3AccessPointConfiguration(BaseModel):
    """
    The configuration for an Amazon S3 access point or multi-region access point for the bucket. You can propose up to 10 access points or multi-region access points per bucket. If the proposed Amazon S3 access point configuration is for an existing bucket, the access preview uses the proposed access point configuration in place of the existing access points. To propose an access point without a policy, you can provide an empty string as the access point policy. For more information, see <a href="https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonS3/latest/dev/creating-access-points.html">Creating access points</a>. For more information about access point policy limits, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points-restrictions-limitations.html">Access points restrictions and limitations</a>.
    """

    accessPointPolicy: Optional[AccessPointPolicy] = None
    networkOrigin: Optional[NetworkOriginConfiguration] = None
    publicAccessBlock: Optional[S3PublicAccessBlockConfiguration] = None


class StartPolicyGenerationRequest(BaseModel):
    clientToken: Optional[String] = None
    cloudTrailDetails: Optional[CloudTrailDetails] = None
    policyGenerationDetails: PolicyGenerationDetails


class ValidatePolicyFinding(BaseModel):
    """
    A finding in a policy. Each finding is an actionable recommendation that can be used to improve the policy.
    """

    findingDetails: String
    findingType: ValidatePolicyFindingType
    issueCode: IssueCode
    learnMoreLink: LearnMoreLink
    locations: LocationList


class ValidatePolicyFindingList(BaseModel):
    __root__: List[ValidatePolicyFinding]


class GetAccessPreviewResponse(BaseModel):
    accessPreview: AccessPreview


class GetAnalyzerResponse(BaseModel):
    """
    The response to the request.
    """

    analyzer: AnalyzerSummary


class GetFindingResponse(BaseModel):
    """
    The response to the request.
    """

    finding: Optional[Finding] = None


class ListAccessPreviewFindingsResponse(BaseModel):
    findings: AccessPreviewFindingsList
    nextToken: Optional[Token] = None


class ListAccessPreviewsResponse(BaseModel):
    accessPreviews: AccessPreviewsList
    nextToken: Optional[Token] = None


class ListAnalyzersResponse(BaseModel):
    """
    The response to the request.
    """

    analyzers: AnalyzersList
    nextToken: Optional[Token] = None


class ListFindingsResponse(BaseModel):
    """
    The response to the request.
    """

    findings: FindingsList
    nextToken: Optional[Token] = None


class ListPolicyGenerationsResponse(BaseModel):
    nextToken: Optional[Token] = None
    policyGenerations: PolicyGenerationList


class ValidatePolicyResponse(BaseModel):
    findings: ValidatePolicyFindingList
    nextToken: Optional[Token] = None


class KmsKeyConfiguration(BaseModel):
    """
    <p>Proposed access control configuration for a KMS key. You can propose a configuration for a new KMS key or an existing KMS key that you own by specifying the key policy and KMS grant configuration. If the configuration is for an existing key and you do not specify the key policy, the access preview uses the existing policy for the key. If the access preview is for a new resource and you do not specify the key policy, then the access preview uses the default key policy. The proposed key policy cannot be an empty string. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default">Default key policy</a>. For more information about key policy limits, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/resource-limits.html">Resource quotas</a>.</p> <p/>
    """

    grants: Optional[KmsGrantConfigurationsList] = None
    keyPolicies: Optional[KmsKeyPoliciesMap] = None


class JobDetails(BaseModel):
    """
    Contains details about the policy generation request.
    """

    completedOn: Optional[Timestamp] = None
    jobError: Optional[JobError] = None
    jobId: JobId
    startedOn: Timestamp
    status: JobStatus


class Configuration(BaseModel):
    """
    Access control configuration structures for your resource. You specify the configuration as a type-value pair. You can specify only one type of access control configuration.
    """

    iamRole: Optional[IamRoleConfiguration] = None
    kmsKey: Optional[KmsKeyConfiguration] = None
    s3Bucket: Optional[S3BucketConfiguration] = None
    secretsManagerSecret: Optional[SecretsManagerSecretConfiguration] = None
    sqsQueue: Optional[SqsQueueConfiguration] = None


class GetGeneratedPolicyResponse(BaseModel):
    generatedPolicyResult: GeneratedPolicyResult
    jobDetails: JobDetails

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:58:23+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class AssociateDRTLogBucketResponse(BaseModel):
    pass


class InternalErrorException(BaseModel):
    __root__: Any


class InvalidOperationException(InternalErrorException):
    pass


class NoAssociatedRoleException(InternalErrorException):
    pass


class LimitsExceededException(InternalErrorException):
    pass


class InvalidParameterException(InternalErrorException):
    pass


class AccessDeniedForDependencyException(InternalErrorException):
    pass


class OptimisticLockException(InternalErrorException):
    pass


class ResourceNotFoundException(InternalErrorException):
    pass


class AssociateDRTRoleResponse(AssociateDRTLogBucketResponse):
    pass


class AssociateHealthCheckResponse(AssociateDRTLogBucketResponse):
    pass


class AssociateProactiveEngagementDetailsResponse(AssociateDRTLogBucketResponse):
    pass


class InvalidResourceException(InternalErrorException):
    pass


class ResourceAlreadyExistsException(InternalErrorException):
    pass


class CreateProtectionGroupResponse(AssociateDRTLogBucketResponse):
    pass


class CreateSubscriptionResponse(AssociateDRTLogBucketResponse):
    pass


class CreateSubscriptionRequest(BaseModel):
    pass


class DeleteProtectionResponse(AssociateDRTLogBucketResponse):
    pass


class DeleteProtectionGroupResponse(AssociateDRTLogBucketResponse):
    pass


class DeleteSubscriptionResponse(AssociateDRTLogBucketResponse):
    pass


class DeleteSubscriptionRequest(BaseModel):
    pass


class LockedSubscriptionException(InternalErrorException):
    pass


class AccessDeniedException(InternalErrorException):
    pass


class DescribeAttackStatisticsRequest(BaseModel):
    pass


class DescribeDRTAccessRequest(BaseModel):
    pass


class DescribeEmergencyContactSettingsRequest(BaseModel):
    pass


class DescribeSubscriptionRequest(BaseModel):
    pass


class DisableProactiveEngagementResponse(AssociateDRTLogBucketResponse):
    pass


class DisableProactiveEngagementRequest(BaseModel):
    pass


class DisassociateDRTLogBucketResponse(AssociateDRTLogBucketResponse):
    pass


class DisassociateDRTRoleResponse(AssociateDRTLogBucketResponse):
    pass


class DisassociateDRTRoleRequest(BaseModel):
    pass


class DisassociateHealthCheckResponse(AssociateDRTLogBucketResponse):
    pass


class EnableProactiveEngagementResponse(AssociateDRTLogBucketResponse):
    pass


class EnableProactiveEngagementRequest(BaseModel):
    pass


class GetSubscriptionStateRequest(BaseModel):
    pass


class InvalidPaginationTokenException(InternalErrorException):
    pass


class TagResourceResponse(AssociateDRTLogBucketResponse):
    pass


class UntagResourceResponse(AssociateDRTLogBucketResponse):
    pass


class UpdateEmergencyContactSettingsResponse(AssociateDRTLogBucketResponse):
    pass


class UpdateProtectionGroupResponse(AssociateDRTLogBucketResponse):
    pass


class UpdateSubscriptionResponse(AssociateDRTLogBucketResponse):
    pass


class LogBucket(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=63,
            min_length=3,
            regex='^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d]$',
        ),
    ]


class RoleArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='^arn:aws:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+',
        ),
    ]


class ProtectionId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=36, min_length=1, regex='[a-zA-Z0-9\\\\-]*')
    ]


class HealthCheckArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='^arn:aws:route53:::healthcheck/\\S{36}$',
        ),
    ]


class AttackId(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9\\\\-]*')
    ]


class ResourceArn(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1, regex='^arn:aws.*')]


class AttackTimestamp(BaseModel):
    __root__: datetime


class AttackLayer(Enum):
    NETWORK = 'NETWORK'
    APPLICATION = 'APPLICATION'


class AttackPropertyIdentifier(Enum):
    DESTINATION_URL = 'DESTINATION_URL'
    REFERRER = 'REFERRER'
    SOURCE_ASN = 'SOURCE_ASN'
    SOURCE_COUNTRY = 'SOURCE_COUNTRY'
    SOURCE_IP_ADDRESS = 'SOURCE_IP_ADDRESS'
    SOURCE_USER_AGENT = 'SOURCE_USER_AGENT'
    WORDPRESS_PINGBACK_REFLECTOR = 'WORDPRESS_PINGBACK_REFLECTOR'
    WORDPRESS_PINGBACK_SOURCE = 'WORDPRESS_PINGBACK_SOURCE'


class Unit(Enum):
    BITS = 'BITS'
    BYTES = 'BYTES'
    PACKETS = 'PACKETS'
    REQUESTS = 'REQUESTS'


class Long(BaseModel):
    __root__: int


class String(BaseModel):
    __root__: str


class AttackVectorDescription(BaseModel):
    """
    Describes the attack.
    """

    VectorType: String


class Double(BaseModel):
    __root__: float


class AutoRenew(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class ContactNotes(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='^[\\w\\s\\.\\-,:/()+@]*$')
    ]


class Contributor(BaseModel):
    """
    A contributor to the attack and their contribution.
    """

    Name: Optional[String] = None
    Value: Optional[Long] = None


class ProtectionGroupId(ProtectionId):
    pass


class ProtectionGroupAggregation(Enum):
    SUM = 'SUM'
    MEAN = 'MEAN'
    MAX = 'MAX'


class ProtectionGroupPattern(Enum):
    ALL = 'ALL'
    ARBITRARY = 'ARBITRARY'
    BY_RESOURCE_TYPE = 'BY_RESOURCE_TYPE'


class ProtectedResourceType(Enum):
    CLOUDFRONT_DISTRIBUTION = 'CLOUDFRONT_DISTRIBUTION'
    ROUTE_53_HOSTED_ZONE = 'ROUTE_53_HOSTED_ZONE'
    ELASTIC_IP_ALLOCATION = 'ELASTIC_IP_ALLOCATION'
    CLASSIC_LOAD_BALANCER = 'CLASSIC_LOAD_BALANCER'
    APPLICATION_LOAD_BALANCER = 'APPLICATION_LOAD_BALANCER'
    GLOBAL_ACCELERATOR = 'GLOBAL_ACCELERATOR'


class ProtectionGroupMembers(BaseModel):
    __root__: Annotated[List[ResourceArn], Field(max_items=10000, min_items=0)]


class ProtectionName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[ a-zA-Z0-9_\\\\.\\\\-]*')
    ]


class TimeRange(BaseModel):
    """
    The time range.
    """

    FromInclusive: Optional[AttackTimestamp] = None
    ToExclusive: Optional[AttackTimestamp] = None


class LogBucketList(BaseModel):
    __root__: Annotated[List[LogBucket], Field(max_items=10, min_items=0)]


class ProtectionGroup(BaseModel):
    """
    A grouping of protected resources that you and Shield Advanced can monitor as a collective. This resource grouping improves the accuracy of detection and reduces false positives.
    """

    ProtectionGroupId: ProtectionGroupId
    Aggregation: ProtectionGroupAggregation
    Pattern: ProtectionGroupPattern
    ResourceType: Optional[ProtectedResourceType] = None
    Members: ProtectionGroupMembers
    ProtectionGroupArn: Optional[ResourceArn] = None


class DurationInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class EmailAddress(BaseModel):
    __root__: Annotated[
        str, Field(max_length=150, min_length=1, regex='^\\S+@\\S+\\.\\S+$')
    ]


class PhoneNumber(BaseModel):
    __root__: Annotated[
        str, Field(max_length=16, min_length=1, regex='^\\+[1-9]\\d{1,14}$')
    ]


class EmergencyContact(BaseModel):
    """
    Contact information that the SRT can use to contact you if you have proactive engagement enabled, for escalations to the SRT and to initiate proactive customer support.
    """

    EmailAddress: EmailAddress
    PhoneNumber: Optional[PhoneNumber] = None
    ContactNotes: Optional[ContactNotes] = None


class SubscriptionState(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class HealthCheckId(String):
    pass


class HealthCheckIds(BaseModel):
    __root__: List[HealthCheckId]


class Integer(Long):
    pass


class Limit(BaseModel):
    """
    Specifies how many protections of a given type you can create.
    """

    Type: Optional[String] = None
    Max: Optional[Long] = None


class Limits(BaseModel):
    __root__: List[Limit]


class ResourceArnFilterList(BaseModel):
    __root__: List[ResourceArn]


class Token(BaseModel):
    __root__: Annotated[str, Field(max_length=4096, min_length=1, regex='^.*$')]


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=10000.0)]


class ProtectionGroups(BaseModel):
    __root__: List[ProtectionGroup]


class ResourceArnList(ResourceArnFilterList):
    pass


class Mitigation(BaseModel):
    """
    The mitigation applied to a DDoS attack.
    """

    MitigationName: Optional[String] = None


class ProactiveEngagementStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    PENDING = 'PENDING'


class ProtectionGroupArbitraryPatternLimits(BaseModel):
    """
    Limits settings on protection groups with arbitrary pattern type.
    """

    MaxMembers: Long


class ProtectionGroupPatternTypeLimits(BaseModel):
    """
    Limits settings by pattern type in the protection groups for your subscription.
    """

    ArbitraryPatternLimits: ProtectionGroupArbitraryPatternLimits


class ProtectionGroupLimits(BaseModel):
    """
    Limits settings on protection groups for your subscription.
    """

    MaxProtectionGroups: Long
    PatternTypeLimits: ProtectionGroupPatternTypeLimits


class ProtectionLimits(BaseModel):
    """
    Limits settings on protections for your subscription.
    """

    ProtectedResourceTypeLimits: Limits


class SubResourceType(Enum):
    IP = 'IP'
    URL = 'URL'


class Timestamp(AttackTimestamp):
    pass


class SubscriptionLimits(BaseModel):
    """
    Limits settings for your subscription.
    """

    ProtectionLimits: ProtectionLimits
    ProtectionGroupLimits: ProtectionGroupLimits


class SummarizedCounter(BaseModel):
    """
    The counter that describes a DDoS attack.
    """

    Name: Optional[String] = None
    Max: Optional[Double] = None
    Average: Optional[Double] = None
    Sum: Optional[Double] = None
    N: Optional[Integer] = None
    Unit: Optional[String] = None


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    A tag associated with an Amazon Web Services resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing or other management. Typically, the tag key represents a category, such as "environment", and the tag value represents a specific value within that category, such as "test," "development," or "production". Or you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each Amazon Web Services resource, up to 50 tags for a resource.
    """

    Key: Optional[TagKey] = None
    Value: Optional[TagValue] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200, min_items=0)]


class AssociateDRTLogBucketRequest(BaseModel):
    LogBucket: LogBucket


class AssociateDRTRoleRequest(BaseModel):
    RoleArn: RoleArn


class AssociateHealthCheckRequest(BaseModel):
    ProtectionId: ProtectionId
    HealthCheckArn: HealthCheckArn


class CreateProtectionResponse(BaseModel):
    ProtectionId: Optional[ProtectionId] = None


class DeleteProtectionRequest(BaseModel):
    ProtectionId: ProtectionId


class DeleteProtectionGroupRequest(BaseModel):
    ProtectionGroupId: ProtectionGroupId


class DescribeAttackRequest(BaseModel):
    AttackId: AttackId


class DescribeDRTAccessResponse(BaseModel):
    RoleArn: Optional[RoleArn] = None
    LogBucketList: Optional[LogBucketList] = None


class DescribeProtectionRequest(BaseModel):
    ProtectionId: Optional[ProtectionId] = None
    ResourceArn: Optional[ResourceArn] = None


class DescribeProtectionGroupResponse(BaseModel):
    ProtectionGroup: ProtectionGroup


class DescribeProtectionGroupRequest(BaseModel):
    ProtectionGroupId: ProtectionGroupId


class DisassociateDRTLogBucketRequest(BaseModel):
    LogBucket: LogBucket


class DisassociateHealthCheckRequest(BaseModel):
    ProtectionId: ProtectionId
    HealthCheckArn: HealthCheckArn


class GetSubscriptionStateResponse(BaseModel):
    SubscriptionState: SubscriptionState


class ListAttacksRequest(BaseModel):
    ResourceArns: Optional[ResourceArnFilterList] = None
    StartTime: Optional[TimeRange] = None
    EndTime: Optional[TimeRange] = None
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class ListProtectionGroupsResponse(BaseModel):
    ProtectionGroups: ProtectionGroups
    NextToken: Optional[Token] = None


class ListProtectionGroupsRequest(BaseModel):
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class ListProtectionsRequest(BaseModel):
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class ListResourcesInProtectionGroupResponse(BaseModel):
    ResourceArns: ResourceArnList
    NextToken: Optional[Token] = None


class ListResourcesInProtectionGroupRequest(BaseModel):
    ProtectionGroupId: ProtectionGroupId
    NextToken: Optional[Token] = None
    MaxResults: Optional[MaxResults] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: ResourceArn


class UntagResourceRequest(BaseModel):
    ResourceARN: ResourceArn
    TagKeys: TagKeyList


class UpdateProtectionGroupRequest(BaseModel):
    ProtectionGroupId: ProtectionGroupId
    Aggregation: ProtectionGroupAggregation
    Pattern: ProtectionGroupPattern
    ResourceType: Optional[ProtectedResourceType] = None
    Members: Optional[ProtectionGroupMembers] = None


class UpdateSubscriptionRequest(BaseModel):
    AutoRenew: Optional[AutoRenew] = None


class EmergencyContactList(BaseModel):
    __root__: Annotated[List[EmergencyContact], Field(max_items=10, min_items=0)]


class SummarizedCounterList(BaseModel):
    __root__: List[SummarizedCounter]


class MitigationList(BaseModel):
    __root__: List[Mitigation]


class TopContributors(BaseModel):
    __root__: List[Contributor]


class AttackVectorDescriptionList(BaseModel):
    __root__: List[AttackVectorDescription]


class AttackVolumeStatistics(BaseModel):
    """
    Statistics objects for the various data types in <a>AttackVolume</a>.
    """

    Max: Double


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=0)]


class Protection(BaseModel):
    """
    An object that represents a resource that is under DDoS protection.
    """

    Id: Optional[ProtectionId] = None
    Name: Optional[ProtectionName] = None
    ResourceArn: Optional[ResourceArn] = None
    HealthCheckIds: Optional[HealthCheckIds] = None
    ProtectionArn: Optional[ResourceArn] = None


class Subscription(BaseModel):
    """
    Information about the Shield Advanced subscription for an account.
    """

    StartTime: Optional[Timestamp] = None
    EndTime: Optional[Timestamp] = None
    TimeCommitmentInSeconds: Optional[DurationInSeconds] = None
    AutoRenew: Optional[AutoRenew] = None
    Limits: Optional[Limits] = None
    ProactiveEngagementStatus: Optional[ProactiveEngagementStatus] = None
    SubscriptionLimits: SubscriptionLimits
    SubscriptionArn: Optional[ResourceArn] = None


class Protections(BaseModel):
    __root__: List[Protection]


class SummarizedAttackVector(BaseModel):
    """
    A summary of information about the attack.
    """

    VectorType: String
    VectorCounters: Optional[SummarizedCounterList] = None


class AssociateProactiveEngagementDetailsRequest(BaseModel):
    EmergencyContactList: EmergencyContactList


class CreateProtectionRequest(BaseModel):
    Name: ProtectionName
    ResourceArn: ResourceArn
    Tags: Optional[TagList] = None


class CreateProtectionGroupRequest(BaseModel):
    ProtectionGroupId: ProtectionGroupId
    Aggregation: ProtectionGroupAggregation
    Pattern: ProtectionGroupPattern
    ResourceType: Optional[ProtectedResourceType] = None
    Members: Optional[ProtectionGroupMembers] = None
    Tags: Optional[TagList] = None


class DescribeEmergencyContactSettingsResponse(BaseModel):
    EmergencyContactList: Optional[EmergencyContactList] = None


class DescribeProtectionResponse(BaseModel):
    Protection: Optional[Protection] = None


class DescribeSubscriptionResponse(BaseModel):
    Subscription: Optional[Subscription] = None


class ListProtectionsResponse(BaseModel):
    Protections: Optional[Protections] = None
    NextToken: Optional[Token] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class TagResourceRequest(BaseModel):
    ResourceARN: ResourceArn
    Tags: TagList


class UpdateEmergencyContactSettingsRequest(BaseModel):
    EmergencyContactList: Optional[EmergencyContactList] = None


class AttackProperty(BaseModel):
    """
    Details of a Shield event. This is provided as part of an <a>AttackDetail</a>.
    """

    AttackLayer: Optional[AttackLayer] = None
    AttackPropertyIdentifier: Optional[AttackPropertyIdentifier] = None
    TopContributors: Optional[TopContributors] = None
    Unit: Optional[Unit] = None
    Total: Optional[Long] = None


class AttackVolume(BaseModel):
    """
    Information about the volume of attacks during the time period, included in an <a>AttackStatisticsDataItem</a>. If the accompanying <code>AttackCount</code> in the statistics object is zero, this setting might be empty.
    """

    BitsPerSecond: Optional[AttackVolumeStatistics] = None
    PacketsPerSecond: Optional[AttackVolumeStatistics] = None
    RequestsPerSecond: Optional[AttackVolumeStatistics] = None


class AttackStatisticsDataItem(BaseModel):
    """
    A single attack statistics data record. This is returned by <a>DescribeAttackStatistics</a> along with a time range indicating the time period that the attack statistics apply to.
    """

    AttackVolume: Optional[AttackVolume] = None
    AttackCount: Long


class AttackStatisticsDataList(BaseModel):
    __root__: List[AttackStatisticsDataItem]


class AttackSummary(BaseModel):
    """
    Summarizes all DDoS attacks for a specified time period.
    """

    AttackId: Optional[String] = None
    ResourceArn: Optional[String] = None
    StartTime: Optional[AttackTimestamp] = None
    EndTime: Optional[AttackTimestamp] = None
    AttackVectors: Optional[AttackVectorDescriptionList] = None


class AttackSummaries(BaseModel):
    __root__: List[AttackSummary]


class SummarizedAttackVectorList(BaseModel):
    __root__: List[SummarizedAttackVector]


class SubResourceSummary(BaseModel):
    """
    The attack information for the specified SubResource.
    """

    Type: Optional[SubResourceType] = None
    Id: Optional[String] = None
    AttackVectors: Optional[SummarizedAttackVectorList] = None
    Counters: Optional[SummarizedCounterList] = None


class DescribeAttackStatisticsResponse(BaseModel):
    TimeRange: TimeRange
    DataItems: AttackStatisticsDataList


class ListAttacksResponse(BaseModel):
    AttackSummaries: Optional[AttackSummaries] = None
    NextToken: Optional[Token] = None


class SubResourceSummaryList(BaseModel):
    __root__: List[SubResourceSummary]


class AttackProperties(BaseModel):
    __root__: List[AttackProperty]


class AttackDetail(BaseModel):
    """
    The details of a DDoS attack.
    """

    AttackId: Optional[AttackId] = None
    ResourceArn: Optional[ResourceArn] = None
    SubResources: Optional[SubResourceSummaryList] = None
    StartTime: Optional[AttackTimestamp] = None
    EndTime: Optional[AttackTimestamp] = None
    AttackCounters: Optional[SummarizedCounterList] = None
    AttackProperties: Optional[AttackProperties] = None
    Mitigations: Optional[MitigationList] = None


class DescribeAttackResponse(BaseModel):
    Attack: Optional[AttackDetail] = None

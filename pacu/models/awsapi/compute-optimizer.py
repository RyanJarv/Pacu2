# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:46:56+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class OptInRequiredException(BaseModel):
    __root__: Any


class InternalServerException(OptInRequiredException):
    pass


class ServiceUnavailableException(OptInRequiredException):
    pass


class AccessDeniedException(OptInRequiredException):
    pass


class InvalidParameterValueException(OptInRequiredException):
    pass


class ResourceNotFoundException(OptInRequiredException):
    pass


class MissingAuthenticationToken(OptInRequiredException):
    pass


class ThrottlingException(OptInRequiredException):
    pass


class LimitExceededException(OptInRequiredException):
    pass


class GetEnrollmentStatusRequest(BaseModel):
    pass


class AccountId(BaseModel):
    __root__: str


class Status(Enum):
    Active = 'Active'
    Inactive = 'Inactive'
    Pending = 'Pending'
    Failed = 'Failed'


class StatusReason(AccountId):
    pass


class LastUpdatedTimestamp(BaseModel):
    __root__: datetime


class AccountEnrollmentStatus(BaseModel):
    """
    Describes the enrollment status of an organization's member accounts in Compute Optimizer.
    """

    accountId: Optional[AccountId] = None
    status: Optional[Status] = None
    statusReason: Optional[StatusReason] = None
    lastUpdatedTimestamp: Optional[LastUpdatedTimestamp] = None


class AccountEnrollmentStatuses(BaseModel):
    __root__: List[AccountEnrollmentStatus]


class AccountIds(BaseModel):
    __root__: List[AccountId]


class AutoScalingGroupArn(AccountId):
    pass


class AutoScalingGroupArns(BaseModel):
    __root__: List[AutoScalingGroupArn]


class DesiredCapacity(BaseModel):
    __root__: int


class MinSize(DesiredCapacity):
    pass


class MaxSize(DesiredCapacity):
    pass


class InstanceType(AccountId):
    pass


class AutoScalingGroupConfiguration(BaseModel):
    """
    Describes the configuration of an Auto Scaling group.
    """

    desiredCapacity: Optional[DesiredCapacity] = None
    minSize: Optional[MinSize] = None
    maxSize: Optional[MaxSize] = None
    instanceType: Optional[InstanceType] = None


class AutoScalingGroupName(AccountId):
    pass


class Finding(Enum):
    Underprovisioned = 'Underprovisioned'
    Overprovisioned = 'Overprovisioned'
    Optimized = 'Optimized'
    NotOptimized = 'NotOptimized'


class LookBackPeriodInDays(BaseModel):
    __root__: float


class LastRefreshTimestamp(LastUpdatedTimestamp):
    pass


class PerformanceRisk(BaseModel):
    __root__: Annotated[float, Field(ge=0.0, le=4.0)]


class Rank(DesiredCapacity):
    pass


class Code(AccountId):
    pass


class CpuVendorArchitecture(Enum):
    AWS_ARM64 = 'AWS_ARM64'
    CURRENT = 'CURRENT'


class CpuVendorArchitectures(BaseModel):
    __root__: List[CpuVendorArchitecture]


class CreationTimestamp(LastUpdatedTimestamp):
    pass


class CurrentInstanceType(AccountId):
    pass


class NextToken(AccountId):
    pass


class MaxResults(DesiredCapacity):
    pass


class DestinationBucket(AccountId):
    pass


class DestinationKey(AccountId):
    pass


class DestinationKeyPrefix(AccountId):
    pass


class EBSFilterName(Enum):
    Finding = 'Finding'


class EBSFinding(Enum):
    Optimized = 'Optimized'
    NotOptimized = 'NotOptimized'


class EBSMetricName(Enum):
    VolumeReadOpsPerSecond = 'VolumeReadOpsPerSecond'
    VolumeWriteOpsPerSecond = 'VolumeWriteOpsPerSecond'
    VolumeReadBytesPerSecond = 'VolumeReadBytesPerSecond'
    VolumeWriteBytesPerSecond = 'VolumeWriteBytesPerSecond'


class MetricStatistic(Enum):
    Maximum = 'Maximum'
    Average = 'Average'


class MetricValue(LookBackPeriodInDays):
    pass


class EBSUtilizationMetric(BaseModel):
    """
    <p>Describes a utilization metric of an Amazon Elastic Block Store (Amazon EBS) volume.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p>
    """

    name: Optional[EBSMetricName] = None
    statistic: Optional[MetricStatistic] = None
    value: Optional[MetricValue] = None


class EBSUtilizationMetrics(BaseModel):
    __root__: List[EBSUtilizationMetric]


class EnrollmentFilterName(Enum):
    Status = 'Status'


class S3DestinationConfig(BaseModel):
    """
    <p>Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and key prefix for a recommendations export job.</p> <p>You must create the destination Amazon S3 bucket for your recommendations export before you create the export job. Compute Optimizer does not create the S3 bucket for you. After you create the S3 bucket, ensure that it has the required permission policy to allow Compute Optimizer to write the export file to it. If you plan to specify an object prefix when you create the export job, you must include the object prefix in the policy that you add to the S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/create-s3-bucket-policy-for-compute-optimizer.html">Amazon S3 Bucket Policy for Compute Optimizer</a> in the <i>Compute Optimizer User Guide</i>.</p>
    """

    bucket: Optional[DestinationBucket] = None
    keyPrefix: Optional[DestinationKeyPrefix] = None


class FileFormat(Enum):
    Csv = 'Csv'


class IncludeMemberAccounts(BaseModel):
    __root__: bool


class RecommendationPreferences(BaseModel):
    """
    Describes preferences for recommendations.
    """

    cpuVendorArchitectures: Optional[CpuVendorArchitectures] = None


class JobId(AccountId):
    pass


class ExportableAutoScalingGroupField(Enum):
    AccountId = 'AccountId'
    AutoScalingGroupArn = 'AutoScalingGroupArn'
    AutoScalingGroupName = 'AutoScalingGroupName'
    Finding = 'Finding'
    UtilizationMetricsCpuMaximum = 'UtilizationMetricsCpuMaximum'
    UtilizationMetricsMemoryMaximum = 'UtilizationMetricsMemoryMaximum'
    UtilizationMetricsEbsReadOpsPerSecondMaximum = (
        'UtilizationMetricsEbsReadOpsPerSecondMaximum'
    )
    UtilizationMetricsEbsWriteOpsPerSecondMaximum = (
        'UtilizationMetricsEbsWriteOpsPerSecondMaximum'
    )
    UtilizationMetricsEbsReadBytesPerSecondMaximum = (
        'UtilizationMetricsEbsReadBytesPerSecondMaximum'
    )
    UtilizationMetricsEbsWriteBytesPerSecondMaximum = (
        'UtilizationMetricsEbsWriteBytesPerSecondMaximum'
    )
    UtilizationMetricsDiskReadOpsPerSecondMaximum = (
        'UtilizationMetricsDiskReadOpsPerSecondMaximum'
    )
    UtilizationMetricsDiskWriteOpsPerSecondMaximum = (
        'UtilizationMetricsDiskWriteOpsPerSecondMaximum'
    )
    UtilizationMetricsDiskReadBytesPerSecondMaximum = (
        'UtilizationMetricsDiskReadBytesPerSecondMaximum'
    )
    UtilizationMetricsDiskWriteBytesPerSecondMaximum = (
        'UtilizationMetricsDiskWriteBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkInBytesPerSecondMaximum = (
        'UtilizationMetricsNetworkInBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkOutBytesPerSecondMaximum = (
        'UtilizationMetricsNetworkOutBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkPacketsInPerSecondMaximum = (
        'UtilizationMetricsNetworkPacketsInPerSecondMaximum'
    )
    UtilizationMetricsNetworkPacketsOutPerSecondMaximum = (
        'UtilizationMetricsNetworkPacketsOutPerSecondMaximum'
    )
    LookbackPeriodInDays = 'LookbackPeriodInDays'
    CurrentConfigurationInstanceType = 'CurrentConfigurationInstanceType'
    CurrentConfigurationDesiredCapacity = 'CurrentConfigurationDesiredCapacity'
    CurrentConfigurationMinSize = 'CurrentConfigurationMinSize'
    CurrentConfigurationMaxSize = 'CurrentConfigurationMaxSize'
    CurrentOnDemandPrice = 'CurrentOnDemandPrice'
    CurrentStandardOneYearNoUpfrontReservedPrice = (
        'CurrentStandardOneYearNoUpfrontReservedPrice'
    )
    CurrentStandardThreeYearNoUpfrontReservedPrice = (
        'CurrentStandardThreeYearNoUpfrontReservedPrice'
    )
    CurrentVCpus = 'CurrentVCpus'
    CurrentMemory = 'CurrentMemory'
    CurrentStorage = 'CurrentStorage'
    CurrentNetwork = 'CurrentNetwork'
    RecommendationOptionsConfigurationInstanceType = (
        'RecommendationOptionsConfigurationInstanceType'
    )
    RecommendationOptionsConfigurationDesiredCapacity = (
        'RecommendationOptionsConfigurationDesiredCapacity'
    )
    RecommendationOptionsConfigurationMinSize = (
        'RecommendationOptionsConfigurationMinSize'
    )
    RecommendationOptionsConfigurationMaxSize = (
        'RecommendationOptionsConfigurationMaxSize'
    )
    RecommendationOptionsProjectedUtilizationMetricsCpuMaximum = (
        'RecommendationOptionsProjectedUtilizationMetricsCpuMaximum'
    )
    RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum = (
        'RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum'
    )
    RecommendationOptionsPerformanceRisk = 'RecommendationOptionsPerformanceRisk'
    RecommendationOptionsOnDemandPrice = 'RecommendationOptionsOnDemandPrice'
    RecommendationOptionsStandardOneYearNoUpfrontReservedPrice = (
        'RecommendationOptionsStandardOneYearNoUpfrontReservedPrice'
    )
    RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice = (
        'RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice'
    )
    RecommendationOptionsVcpus = 'RecommendationOptionsVcpus'
    RecommendationOptionsMemory = 'RecommendationOptionsMemory'
    RecommendationOptionsStorage = 'RecommendationOptionsStorage'
    RecommendationOptionsNetwork = 'RecommendationOptionsNetwork'
    LastRefreshTimestamp = 'LastRefreshTimestamp'


class ExportableInstanceField(Enum):
    AccountId = 'AccountId'
    InstanceArn = 'InstanceArn'
    InstanceName = 'InstanceName'
    Finding = 'Finding'
    FindingReasonCodes = 'FindingReasonCodes'
    LookbackPeriodInDays = 'LookbackPeriodInDays'
    CurrentInstanceType = 'CurrentInstanceType'
    UtilizationMetricsCpuMaximum = 'UtilizationMetricsCpuMaximum'
    UtilizationMetricsMemoryMaximum = 'UtilizationMetricsMemoryMaximum'
    UtilizationMetricsEbsReadOpsPerSecondMaximum = (
        'UtilizationMetricsEbsReadOpsPerSecondMaximum'
    )
    UtilizationMetricsEbsWriteOpsPerSecondMaximum = (
        'UtilizationMetricsEbsWriteOpsPerSecondMaximum'
    )
    UtilizationMetricsEbsReadBytesPerSecondMaximum = (
        'UtilizationMetricsEbsReadBytesPerSecondMaximum'
    )
    UtilizationMetricsEbsWriteBytesPerSecondMaximum = (
        'UtilizationMetricsEbsWriteBytesPerSecondMaximum'
    )
    UtilizationMetricsDiskReadOpsPerSecondMaximum = (
        'UtilizationMetricsDiskReadOpsPerSecondMaximum'
    )
    UtilizationMetricsDiskWriteOpsPerSecondMaximum = (
        'UtilizationMetricsDiskWriteOpsPerSecondMaximum'
    )
    UtilizationMetricsDiskReadBytesPerSecondMaximum = (
        'UtilizationMetricsDiskReadBytesPerSecondMaximum'
    )
    UtilizationMetricsDiskWriteBytesPerSecondMaximum = (
        'UtilizationMetricsDiskWriteBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkInBytesPerSecondMaximum = (
        'UtilizationMetricsNetworkInBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkOutBytesPerSecondMaximum = (
        'UtilizationMetricsNetworkOutBytesPerSecondMaximum'
    )
    UtilizationMetricsNetworkPacketsInPerSecondMaximum = (
        'UtilizationMetricsNetworkPacketsInPerSecondMaximum'
    )
    UtilizationMetricsNetworkPacketsOutPerSecondMaximum = (
        'UtilizationMetricsNetworkPacketsOutPerSecondMaximum'
    )
    CurrentOnDemandPrice = 'CurrentOnDemandPrice'
    CurrentStandardOneYearNoUpfrontReservedPrice = (
        'CurrentStandardOneYearNoUpfrontReservedPrice'
    )
    CurrentStandardThreeYearNoUpfrontReservedPrice = (
        'CurrentStandardThreeYearNoUpfrontReservedPrice'
    )
    CurrentVCpus = 'CurrentVCpus'
    CurrentMemory = 'CurrentMemory'
    CurrentStorage = 'CurrentStorage'
    CurrentNetwork = 'CurrentNetwork'
    RecommendationOptionsInstanceType = 'RecommendationOptionsInstanceType'
    RecommendationOptionsProjectedUtilizationMetricsCpuMaximum = (
        'RecommendationOptionsProjectedUtilizationMetricsCpuMaximum'
    )
    RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum = (
        'RecommendationOptionsProjectedUtilizationMetricsMemoryMaximum'
    )
    RecommendationOptionsPlatformDifferences = (
        'RecommendationOptionsPlatformDifferences'
    )
    RecommendationOptionsPerformanceRisk = 'RecommendationOptionsPerformanceRisk'
    RecommendationOptionsVcpus = 'RecommendationOptionsVcpus'
    RecommendationOptionsMemory = 'RecommendationOptionsMemory'
    RecommendationOptionsStorage = 'RecommendationOptionsStorage'
    RecommendationOptionsNetwork = 'RecommendationOptionsNetwork'
    RecommendationOptionsOnDemandPrice = 'RecommendationOptionsOnDemandPrice'
    RecommendationOptionsStandardOneYearNoUpfrontReservedPrice = (
        'RecommendationOptionsStandardOneYearNoUpfrontReservedPrice'
    )
    RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice = (
        'RecommendationOptionsStandardThreeYearNoUpfrontReservedPrice'
    )
    RecommendationsSourcesRecommendationSourceArn = (
        'RecommendationsSourcesRecommendationSourceArn'
    )
    RecommendationsSourcesRecommendationSourceType = (
        'RecommendationsSourcesRecommendationSourceType'
    )
    LastRefreshTimestamp = 'LastRefreshTimestamp'


class ExportableLambdaFunctionField(Enum):
    AccountId = 'AccountId'
    FunctionArn = 'FunctionArn'
    FunctionVersion = 'FunctionVersion'
    Finding = 'Finding'
    FindingReasonCodes = 'FindingReasonCodes'
    NumberOfInvocations = 'NumberOfInvocations'
    UtilizationMetricsDurationMaximum = 'UtilizationMetricsDurationMaximum'
    UtilizationMetricsDurationAverage = 'UtilizationMetricsDurationAverage'
    UtilizationMetricsMemoryMaximum = 'UtilizationMetricsMemoryMaximum'
    UtilizationMetricsMemoryAverage = 'UtilizationMetricsMemoryAverage'
    LookbackPeriodInDays = 'LookbackPeriodInDays'
    CurrentConfigurationMemorySize = 'CurrentConfigurationMemorySize'
    CurrentConfigurationTimeout = 'CurrentConfigurationTimeout'
    CurrentCostTotal = 'CurrentCostTotal'
    CurrentCostAverage = 'CurrentCostAverage'
    RecommendationOptionsConfigurationMemorySize = (
        'RecommendationOptionsConfigurationMemorySize'
    )
    RecommendationOptionsCostLow = 'RecommendationOptionsCostLow'
    RecommendationOptionsCostHigh = 'RecommendationOptionsCostHigh'
    RecommendationOptionsProjectedUtilizationMetricsDurationLowerBound = (
        'RecommendationOptionsProjectedUtilizationMetricsDurationLowerBound'
    )
    RecommendationOptionsProjectedUtilizationMetricsDurationUpperBound = (
        'RecommendationOptionsProjectedUtilizationMetricsDurationUpperBound'
    )
    RecommendationOptionsProjectedUtilizationMetricsDurationExpected = (
        'RecommendationOptionsProjectedUtilizationMetricsDurationExpected'
    )
    LastRefreshTimestamp = 'LastRefreshTimestamp'


class ExportableVolumeField(Enum):
    AccountId = 'AccountId'
    VolumeArn = 'VolumeArn'
    Finding = 'Finding'
    UtilizationMetricsVolumeReadOpsPerSecondMaximum = (
        'UtilizationMetricsVolumeReadOpsPerSecondMaximum'
    )
    UtilizationMetricsVolumeWriteOpsPerSecondMaximum = (
        'UtilizationMetricsVolumeWriteOpsPerSecondMaximum'
    )
    UtilizationMetricsVolumeReadBytesPerSecondMaximum = (
        'UtilizationMetricsVolumeReadBytesPerSecondMaximum'
    )
    UtilizationMetricsVolumeWriteBytesPerSecondMaximum = (
        'UtilizationMetricsVolumeWriteBytesPerSecondMaximum'
    )
    LookbackPeriodInDays = 'LookbackPeriodInDays'
    CurrentConfigurationVolumeType = 'CurrentConfigurationVolumeType'
    CurrentConfigurationVolumeBaselineIOPS = 'CurrentConfigurationVolumeBaselineIOPS'
    CurrentConfigurationVolumeBaselineThroughput = (
        'CurrentConfigurationVolumeBaselineThroughput'
    )
    CurrentConfigurationVolumeBurstIOPS = 'CurrentConfigurationVolumeBurstIOPS'
    CurrentConfigurationVolumeBurstThroughput = (
        'CurrentConfigurationVolumeBurstThroughput'
    )
    CurrentConfigurationVolumeSize = 'CurrentConfigurationVolumeSize'
    CurrentMonthlyPrice = 'CurrentMonthlyPrice'
    RecommendationOptionsConfigurationVolumeType = (
        'RecommendationOptionsConfigurationVolumeType'
    )
    RecommendationOptionsConfigurationVolumeBaselineIOPS = (
        'RecommendationOptionsConfigurationVolumeBaselineIOPS'
    )
    RecommendationOptionsConfigurationVolumeBaselineThroughput = (
        'RecommendationOptionsConfigurationVolumeBaselineThroughput'
    )
    RecommendationOptionsConfigurationVolumeBurstIOPS = (
        'RecommendationOptionsConfigurationVolumeBurstIOPS'
    )
    RecommendationOptionsConfigurationVolumeBurstThroughput = (
        'RecommendationOptionsConfigurationVolumeBurstThroughput'
    )
    RecommendationOptionsConfigurationVolumeSize = (
        'RecommendationOptionsConfigurationVolumeSize'
    )
    RecommendationOptionsMonthlyPrice = 'RecommendationOptionsMonthlyPrice'
    RecommendationOptionsPerformanceRisk = 'RecommendationOptionsPerformanceRisk'
    LastRefreshTimestamp = 'LastRefreshTimestamp'


class FailureReason(AccountId):
    pass


class FilterName(Enum):
    Finding = 'Finding'
    FindingReasonCodes = 'FindingReasonCodes'
    RecommendationSourceType = 'RecommendationSourceType'


class FilterValue(AccountId):
    pass


class FindingReasonCode(Enum):
    MemoryOverprovisioned = 'MemoryOverprovisioned'
    MemoryUnderprovisioned = 'MemoryUnderprovisioned'


class FunctionArn(AccountId):
    pass


class FunctionArns(BaseModel):
    __root__: List[FunctionArn]


class FunctionVersion(AccountId):
    pass


class InstanceArn(AccountId):
    pass


class Period(DesiredCapacity):
    pass


class Timestamp(LastUpdatedTimestamp):
    pass


class MemberAccountsEnrolled(IncludeMemberAccounts):
    pass


class NumberOfMemberAccountsOptedIn(DesiredCapacity):
    pass


class Identifier(AccountId):
    pass


class Message(AccountId):
    pass


class GetRecommendationError(BaseModel):
    """
    <p>Describes an error experienced when getting recommendations.</p> <p>For example, an error is returned if you request recommendations for an unsupported Auto Scaling group, or if you request recommendations for an instance of an unsupported instance family.</p>
    """

    identifier: Optional[Identifier] = None
    code: Optional[Code] = None
    message: Optional[Message] = None


class InstanceName(AccountId):
    pass


class InstanceRecommendationFindingReasonCode(Enum):
    CPUOverprovisioned = 'CPUOverprovisioned'
    CPUUnderprovisioned = 'CPUUnderprovisioned'
    MemoryOverprovisioned = 'MemoryOverprovisioned'
    MemoryUnderprovisioned = 'MemoryUnderprovisioned'
    EBSThroughputOverprovisioned = 'EBSThroughputOverprovisioned'
    EBSThroughputUnderprovisioned = 'EBSThroughputUnderprovisioned'
    EBSIOPSOverprovisioned = 'EBSIOPSOverprovisioned'
    EBSIOPSUnderprovisioned = 'EBSIOPSUnderprovisioned'
    NetworkBandwidthOverprovisioned = 'NetworkBandwidthOverprovisioned'
    NetworkBandwidthUnderprovisioned = 'NetworkBandwidthUnderprovisioned'
    NetworkPPSOverprovisioned = 'NetworkPPSOverprovisioned'
    NetworkPPSUnderprovisioned = 'NetworkPPSUnderprovisioned'
    DiskIOPSOverprovisioned = 'DiskIOPSOverprovisioned'
    DiskIOPSUnderprovisioned = 'DiskIOPSUnderprovisioned'
    DiskThroughputOverprovisioned = 'DiskThroughputOverprovisioned'
    DiskThroughputUnderprovisioned = 'DiskThroughputUnderprovisioned'


class JobFilterName(Enum):
    ResourceType = 'ResourceType'
    JobStatus = 'JobStatus'


class JobStatus(Enum):
    Queued = 'Queued'
    InProgress = 'InProgress'
    Complete = 'Complete'
    Failed = 'Failed'


class LambdaFunctionMemoryMetricName(Enum):
    Duration = 'Duration'


class LambdaFunctionMemoryMetricStatistic(Enum):
    LowerBound = 'LowerBound'
    UpperBound = 'UpperBound'
    Expected = 'Expected'


class LambdaFunctionMemoryProjectedMetric(BaseModel):
    """
    Describes a projected utilization metric of an Lambda function recommendation option.
    """

    name: Optional[LambdaFunctionMemoryMetricName] = None
    statistic: Optional[LambdaFunctionMemoryMetricStatistic] = None
    value: Optional[MetricValue] = None


class LambdaFunctionMemoryProjectedMetrics(BaseModel):
    __root__: List[LambdaFunctionMemoryProjectedMetric]


class MemorySize(DesiredCapacity):
    pass


class LambdaFunctionMemoryRecommendationOption(BaseModel):
    """
    Describes a recommendation option for an Lambda function.
    """

    rank: Optional[Rank] = None
    memorySize: Optional[MemorySize] = None
    projectedUtilizationMetrics: Optional[LambdaFunctionMemoryProjectedMetrics] = None


class LambdaFunctionMemoryRecommendationOptions(BaseModel):
    __root__: List[LambdaFunctionMemoryRecommendationOption]


class LambdaFunctionMetricName(Enum):
    Duration = 'Duration'
    Memory = 'Memory'


class NumberOfInvocations(DesiredCapacity):
    pass


class LambdaFunctionRecommendationFinding(Enum):
    Optimized = 'Optimized'
    NotOptimized = 'NotOptimized'
    Unavailable = 'Unavailable'


class LambdaFunctionRecommendationFilterName(Enum):
    Finding = 'Finding'
    FindingReasonCode = 'FindingReasonCode'


class LambdaFunctionRecommendationFindingReasonCode(Enum):
    MemoryOverprovisioned = 'MemoryOverprovisioned'
    MemoryUnderprovisioned = 'MemoryUnderprovisioned'
    InsufficientData = 'InsufficientData'
    Inconclusive = 'Inconclusive'


class LambdaFunctionUtilizationMetric(BaseModel):
    """
    Describes a utilization metric of an Lambda function.
    """

    name: Optional[LambdaFunctionMetricName] = None
    statistic: Optional[MetricStatistic] = None
    value: Optional[MetricValue] = None


class MetadataKey(AccountId):
    pass


class MetricName(Enum):
    Cpu = 'Cpu'
    Memory = 'Memory'
    EBS_READ_OPS_PER_SECOND = 'EBS_READ_OPS_PER_SECOND'
    EBS_WRITE_OPS_PER_SECOND = 'EBS_WRITE_OPS_PER_SECOND'
    EBS_READ_BYTES_PER_SECOND = 'EBS_READ_BYTES_PER_SECOND'
    EBS_WRITE_BYTES_PER_SECOND = 'EBS_WRITE_BYTES_PER_SECOND'
    DISK_READ_OPS_PER_SECOND = 'DISK_READ_OPS_PER_SECOND'
    DISK_WRITE_OPS_PER_SECOND = 'DISK_WRITE_OPS_PER_SECOND'
    DISK_READ_BYTES_PER_SECOND = 'DISK_READ_BYTES_PER_SECOND'
    DISK_WRITE_BYTES_PER_SECOND = 'DISK_WRITE_BYTES_PER_SECOND'
    NETWORK_IN_BYTES_PER_SECOND = 'NETWORK_IN_BYTES_PER_SECOND'
    NETWORK_OUT_BYTES_PER_SECOND = 'NETWORK_OUT_BYTES_PER_SECOND'
    NETWORK_PACKETS_IN_PER_SECOND = 'NETWORK_PACKETS_IN_PER_SECOND'
    NETWORK_PACKETS_OUT_PER_SECOND = 'NETWORK_PACKETS_OUT_PER_SECOND'


class MetricValues(BaseModel):
    __root__: List[MetricValue]


class PlatformDifference(Enum):
    Hypervisor = 'Hypervisor'
    NetworkInterface = 'NetworkInterface'
    StorageInterface = 'StorageInterface'
    InstanceStoreAvailability = 'InstanceStoreAvailability'
    VirtualizationType = 'VirtualizationType'
    Architecture = 'Architecture'


class Timestamps(BaseModel):
    __root__: List[Timestamp]


class ProjectedMetric(BaseModel):
    """
    <p>Describes a projected utilization metric of a recommendation option, such as an Amazon EC2 instance. This represents the projected utilization of a recommendation option had you used that resource during the analyzed period.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run the <a>GetEC2RecommendationProjectedMetrics</a> action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>
    """

    name: Optional[MetricName] = None
    timestamps: Optional[Timestamps] = None
    values: Optional[MetricValues] = None


class ProjectedMetrics(BaseModel):
    __root__: List[ProjectedMetric]


class UtilizationMetric(BaseModel):
    """
    <p>Describes a utilization metric of a resource, such as an Amazon EC2 instance.</p> <p>Compare the utilization metric data of your resource against its projected utilization metric data to determine the performance difference between your current resource and the recommended option.</p>
    """

    name: Optional[MetricName] = None
    statistic: Optional[MetricStatistic] = None
    value: Optional[MetricValue] = None


class SummaryValue(LookBackPeriodInDays):
    pass


class ResourceType(Enum):
    Ec2Instance = 'Ec2Instance'
    AutoScalingGroup = 'AutoScalingGroup'
    EbsVolume = 'EbsVolume'
    LambdaFunction = 'LambdaFunction'


class RecommendationSourceArn(AccountId):
    pass


class RecommendationSource(BaseModel):
    """
    Describes the source of a recommendation, such as an Amazon EC2 instance or Auto Scaling group.
    """

    recommendationSourceArn: Optional[RecommendationSourceArn] = None
    recommendationSourceType: Optional[ResourceType] = None


class RecommendedInstanceType(AccountId):
    pass


class RecommendedOptionProjectedMetric(BaseModel):
    """
    <p>Describes a projected utilization metric of a recommendation option.</p> <note> <p>The <code>Cpu</code> and <code>Memory</code> metrics are the only projected utilization metrics returned when you run the <a>GetEC2RecommendationProjectedMetrics</a> action. Additionally, the <code>Memory</code> metric is returned only for resources that have the unified CloudWatch agent installed on them. For more information, see <a href="https://docs.aws.amazon.com/compute-optimizer/latest/ug/metrics.html#cw-agent">Enabling Memory Utilization with the CloudWatch Agent</a>.</p> </note>
    """

    recommendedInstanceType: Optional[RecommendedInstanceType] = None
    rank: Optional[Rank] = None
    projectedMetrics: Optional[ProjectedMetrics] = None


class VolumeArn(AccountId):
    pass


class VolumeBaselineIOPS(DesiredCapacity):
    pass


class VolumeBaselineThroughput(DesiredCapacity):
    pass


class VolumeBurstIOPS(DesiredCapacity):
    pass


class VolumeBurstThroughput(DesiredCapacity):
    pass


class VolumeType(AccountId):
    pass


class VolumeSize(DesiredCapacity):
    pass


class VolumeConfiguration(BaseModel):
    """
    Describes the configuration of an Amazon Elastic Block Store (Amazon EBS) volume.
    """

    volumeType: Optional[VolumeType] = None
    volumeSize: Optional[VolumeSize] = None
    volumeBaselineIOPS: Optional[VolumeBaselineIOPS] = None
    volumeBurstIOPS: Optional[VolumeBurstIOPS] = None
    volumeBaselineThroughput: Optional[VolumeBaselineThroughput] = None
    volumeBurstThroughput: Optional[VolumeBurstThroughput] = None


class VolumeRecommendationOption(BaseModel):
    """
    Describes a recommendation option for an Amazon Elastic Block Store (Amazon EBS) instance.
    """

    configuration: Optional[VolumeConfiguration] = None
    performanceRisk: Optional[PerformanceRisk] = None
    rank: Optional[Rank] = None


class GetEC2RecommendationProjectedMetricsRequest(BaseModel):
    instanceArn: InstanceArn
    stat: MetricStatistic
    period: Period
    startTime: Timestamp
    endTime: Timestamp
    recommendationPreferences: Optional[RecommendationPreferences] = None


class GetEnrollmentStatusResponse(BaseModel):
    status: Optional[Status] = None
    statusReason: Optional[StatusReason] = None
    memberAccountsEnrolled: Optional[MemberAccountsEnrolled] = None
    lastUpdatedTimestamp: Optional[LastUpdatedTimestamp] = None
    numberOfMemberAccountsOptedIn: Optional[NumberOfMemberAccountsOptedIn] = None


class GetEnrollmentStatusesForOrganizationResponse(BaseModel):
    accountEnrollmentStatuses: Optional[AccountEnrollmentStatuses] = None
    nextToken: Optional[NextToken] = None


class GetRecommendationSummariesRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class UpdateEnrollmentStatusResponse(BaseModel):
    status: Optional[Status] = None
    statusReason: Optional[StatusReason] = None


class UpdateEnrollmentStatusRequest(BaseModel):
    status: Status
    includeMemberAccounts: Optional[IncludeMemberAccounts] = None


class UtilizationMetrics(BaseModel):
    __root__: List[UtilizationMetric]


class ProjectedUtilizationMetrics(UtilizationMetrics):
    pass


class AutoScalingGroupRecommendationOption(BaseModel):
    """
    Describes a recommendation option for an Auto Scaling group.
    """

    configuration: Optional[AutoScalingGroupConfiguration] = None
    projectedUtilizationMetrics: Optional[ProjectedUtilizationMetrics] = None
    performanceRisk: Optional[PerformanceRisk] = None
    rank: Optional[Rank] = None


class JobIds(BaseModel):
    __root__: List[JobId]


class FilterValues(BaseModel):
    __root__: List[FilterValue]


class EBSFilter(BaseModel):
    """
    <p>Describes a filter that returns a more specific list of Amazon Elastic Block Store (Amazon EBS) volume recommendations. Use this filter with the <a>GetEBSVolumeRecommendations</a> action.</p> <p>You can use <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
    """

    name: Optional[EBSFilterName] = None
    values: Optional[FilterValues] = None


class EBSFilters(BaseModel):
    __root__: List[EBSFilter]


class EnrollmentFilter(BaseModel):
    """
    Describes a filter that returns a more specific list of account enrollment statuses. Use this filter with the <a>GetEnrollmentStatusesForOrganization</a> action.
    """

    name: Optional[EnrollmentFilterName] = None
    values: Optional[FilterValues] = None


class EnrollmentFilters(BaseModel):
    __root__: List[EnrollmentFilter]


class ExportableAutoScalingGroupFields(BaseModel):
    __root__: List[ExportableAutoScalingGroupField]


class S3Destination(BaseModel):
    """
    Describes the destination Amazon Simple Storage Service (Amazon S3) bucket name and object keys of a recommendations export file, and its associated metadata file.
    """

    bucket: Optional[DestinationBucket] = None
    key: Optional[DestinationKey] = None
    metadataKey: Optional[MetadataKey] = None


class ExportDestination(BaseModel):
    """
    Describes the destination of the recommendations export and metadata files.
    """

    s3: Optional[S3Destination] = None


class ExportableVolumeFields(BaseModel):
    __root__: List[ExportableVolumeField]


class ExportableInstanceFields(BaseModel):
    __root__: List[ExportableInstanceField]


class ExportableLambdaFunctionFields(BaseModel):
    __root__: List[ExportableLambdaFunctionField]


class Filter(BaseModel):
    """
    <p>Describes a filter that returns a more specific list of recommendations. Use this filter with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, and <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action.</p>
    """

    name: Optional[FilterName] = None
    values: Optional[FilterValues] = None


class GetRecommendationErrors(BaseModel):
    __root__: List[GetRecommendationError]


class VolumeArns(BaseModel):
    __root__: List[VolumeArn]


class InstanceArns(BaseModel):
    __root__: List[InstanceArn]


class RecommendedOptionProjectedMetrics(BaseModel):
    __root__: List[RecommendedOptionProjectedMetric]


class InstanceRecommendationFindingReasonCodes(BaseModel):
    __root__: List[InstanceRecommendationFindingReasonCode]


class RecommendationSources(BaseModel):
    __root__: List[RecommendationSource]


class PlatformDifferences(BaseModel):
    __root__: List[PlatformDifference]


class InstanceRecommendationOption(BaseModel):
    """
    Describes a recommendation option for an Amazon EC2 instance.
    """

    instanceType: Optional[InstanceType] = None
    projectedUtilizationMetrics: Optional[ProjectedUtilizationMetrics] = None
    platformDifferences: Optional[PlatformDifferences] = None
    performanceRisk: Optional[PerformanceRisk] = None
    rank: Optional[Rank] = None


class JobFilter(BaseModel):
    """
    <p>Describes a filter that returns a more specific list of recommendation export jobs. Use this filter with the <a>DescribeRecommendationExportJobs</a> action.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>LambdaFunctionRecommendationFilter</code> with the <a>GetLambdaFunctionRecommendations</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
    """

    name: Optional[JobFilterName] = None
    values: Optional[FilterValues] = None


class LambdaFunctionUtilizationMetrics(BaseModel):
    __root__: List[LambdaFunctionUtilizationMetric]


class LambdaFunctionRecommendationFindingReasonCodes(BaseModel):
    __root__: List[LambdaFunctionRecommendationFindingReasonCode]


class LambdaFunctionRecommendation(BaseModel):
    """
    Describes an Lambda function recommendation.
    """

    functionArn: Optional[FunctionArn] = None
    functionVersion: Optional[FunctionVersion] = None
    accountId: Optional[AccountId] = None
    currentMemorySize: Optional[MemorySize] = None
    numberOfInvocations: Optional[NumberOfInvocations] = None
    utilizationMetrics: Optional[LambdaFunctionUtilizationMetrics] = None
    lookbackPeriodInDays: Optional[LookBackPeriodInDays] = None
    lastRefreshTimestamp: Optional[LastRefreshTimestamp] = None
    finding: Optional[LambdaFunctionRecommendationFinding] = None
    findingReasonCodes: Optional[LambdaFunctionRecommendationFindingReasonCodes] = None
    memorySizeRecommendationOptions: Optional[
        LambdaFunctionMemoryRecommendationOptions
    ] = None


class LambdaFunctionRecommendationFilter(BaseModel):
    """
    <p>Describes a filter that returns a more specific list of Lambda function recommendations. Use this filter with the <a>GetLambdaFunctionRecommendations</a> action.</p> <p>You can use <code>EBSFilter</code> with the <a>GetEBSVolumeRecommendations</a> action, <code>JobFilter</code> with the <a>DescribeRecommendationExportJobs</a> action, and <code>Filter</code> with the <a>GetAutoScalingGroupRecommendations</a> and <a>GetEC2InstanceRecommendations</a> actions.</p>
    """

    name: Optional[LambdaFunctionRecommendationFilterName] = None
    values: Optional[FilterValues] = None


class ReasonCodeSummary(BaseModel):
    """
    A summary of a finding reason code.
    """

    name: Optional[FindingReasonCode] = None
    value: Optional[SummaryValue] = None


class ReasonCodeSummaries(BaseModel):
    __root__: List[ReasonCodeSummary]


class RecommendationExportJob(BaseModel):
    """
    <p>Describes a recommendation export job.</p> <p>Use the <a>DescribeRecommendationExportJobs</a> action to view your recommendation export jobs.</p> <p>Use the <a>ExportAutoScalingGroupRecommendations</a> or <a>ExportEC2InstanceRecommendations</a> actions to request an export of your recommendations.</p>
    """

    jobId: Optional[JobId] = None
    destination: Optional[ExportDestination] = None
    resourceType: Optional[ResourceType] = None
    status: Optional[JobStatus] = None
    creationTimestamp: Optional[CreationTimestamp] = None
    lastUpdatedTimestamp: Optional[LastUpdatedTimestamp] = None
    failureReason: Optional[FailureReason] = None


class Summary(BaseModel):
    """
    The summary of a recommendation.
    """

    name: Optional[Finding] = None
    value: Optional[SummaryValue] = None
    reasonCodeSummaries: Optional[ReasonCodeSummaries] = None


class VolumeRecommendationOptions(BaseModel):
    __root__: List[VolumeRecommendationOption]


class VolumeRecommendation(BaseModel):
    """
    Describes an Amazon Elastic Block Store (Amazon EBS) volume recommendation.
    """

    volumeArn: Optional[VolumeArn] = None
    accountId: Optional[AccountId] = None
    currentConfiguration: Optional[VolumeConfiguration] = None
    finding: Optional[EBSFinding] = None
    utilizationMetrics: Optional[EBSUtilizationMetrics] = None
    lookBackPeriodInDays: Optional[LookBackPeriodInDays] = None
    volumeRecommendationOptions: Optional[VolumeRecommendationOptions] = None
    lastRefreshTimestamp: Optional[LastRefreshTimestamp] = None


class ExportAutoScalingGroupRecommendationsResponse(BaseModel):
    jobId: Optional[JobId] = None
    s3Destination: Optional[S3Destination] = None


class ExportEBSVolumeRecommendationsResponse(
    ExportAutoScalingGroupRecommendationsResponse
):
    pass


class ExportEBSVolumeRecommendationsRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    filters: Optional[EBSFilters] = None
    fieldsToExport: Optional[ExportableVolumeFields] = None
    s3DestinationConfig: S3DestinationConfig
    fileFormat: Optional[FileFormat] = None
    includeMemberAccounts: Optional[IncludeMemberAccounts] = None


class ExportEC2InstanceRecommendationsResponse(
    ExportAutoScalingGroupRecommendationsResponse
):
    pass


class ExportLambdaFunctionRecommendationsResponse(
    ExportAutoScalingGroupRecommendationsResponse
):
    pass


class GetEBSVolumeRecommendationsRequest(BaseModel):
    volumeArns: Optional[VolumeArns] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[EBSFilters] = None
    accountIds: Optional[AccountIds] = None


class GetEC2RecommendationProjectedMetricsResponse(BaseModel):
    recommendedOptionProjectedMetrics: Optional[
        RecommendedOptionProjectedMetrics
    ] = None


class GetEnrollmentStatusesForOrganizationRequest(BaseModel):
    filters: Optional[EnrollmentFilters] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class AutoScalingGroupRecommendationOptions(BaseModel):
    __root__: List[AutoScalingGroupRecommendationOption]


class AutoScalingGroupRecommendation(BaseModel):
    """
    Describes an Auto Scaling group recommendation.
    """

    accountId: Optional[AccountId] = None
    autoScalingGroupArn: Optional[AutoScalingGroupArn] = None
    autoScalingGroupName: Optional[AutoScalingGroupName] = None
    finding: Optional[Finding] = None
    utilizationMetrics: Optional[UtilizationMetrics] = None
    lookBackPeriodInDays: Optional[LookBackPeriodInDays] = None
    currentConfiguration: Optional[AutoScalingGroupConfiguration] = None
    recommendationOptions: Optional[AutoScalingGroupRecommendationOptions] = None
    lastRefreshTimestamp: Optional[LastRefreshTimestamp] = None


class AutoScalingGroupRecommendations(BaseModel):
    __root__: List[AutoScalingGroupRecommendation]


class JobFilters(BaseModel):
    __root__: List[JobFilter]


class RecommendationExportJobs(BaseModel):
    __root__: List[RecommendationExportJob]


class Filters(BaseModel):
    __root__: List[Filter]


class LambdaFunctionRecommendationFilters(BaseModel):
    __root__: List[LambdaFunctionRecommendationFilter]


class VolumeRecommendations(BaseModel):
    __root__: List[VolumeRecommendation]


class LambdaFunctionRecommendations(BaseModel):
    __root__: List[LambdaFunctionRecommendation]


class RecommendationOptions1(BaseModel):
    __root__: List[InstanceRecommendationOption]


class InstanceRecommendation(BaseModel):
    """
    Describes an Amazon EC2 instance recommendation.
    """

    instanceArn: Optional[InstanceArn] = None
    accountId: Optional[AccountId] = None
    instanceName: Optional[InstanceName] = None
    currentInstanceType: Optional[CurrentInstanceType] = None
    finding: Optional[Finding] = None
    findingReasonCodes: Optional[InstanceRecommendationFindingReasonCodes] = None
    utilizationMetrics: Optional[UtilizationMetrics] = None
    lookBackPeriodInDays: Optional[LookBackPeriodInDays] = None
    recommendationOptions: Optional[RecommendationOptions1] = None
    recommendationSources: Optional[RecommendationSources] = None
    lastRefreshTimestamp: Optional[LastRefreshTimestamp] = None


class Summaries(BaseModel):
    __root__: List[Summary]


class DescribeRecommendationExportJobsResponse(BaseModel):
    recommendationExportJobs: Optional[RecommendationExportJobs] = None
    nextToken: Optional[NextToken] = None


class DescribeRecommendationExportJobsRequest(BaseModel):
    jobIds: Optional[JobIds] = None
    filters: Optional[JobFilters] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class ExportAutoScalingGroupRecommendationsRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    filters: Optional[Filters] = None
    fieldsToExport: Optional[ExportableAutoScalingGroupFields] = None
    s3DestinationConfig: S3DestinationConfig
    fileFormat: Optional[FileFormat] = None
    includeMemberAccounts: Optional[IncludeMemberAccounts] = None
    recommendationPreferences: Optional[RecommendationPreferences] = None


class ExportEC2InstanceRecommendationsRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    filters: Optional[Filters] = None
    fieldsToExport: Optional[ExportableInstanceFields] = None
    s3DestinationConfig: S3DestinationConfig
    fileFormat: Optional[FileFormat] = None
    includeMemberAccounts: Optional[IncludeMemberAccounts] = None
    recommendationPreferences: Optional[RecommendationPreferences] = None


class ExportLambdaFunctionRecommendationsRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    filters: Optional[LambdaFunctionRecommendationFilters] = None
    fieldsToExport: Optional[ExportableLambdaFunctionFields] = None
    s3DestinationConfig: S3DestinationConfig
    fileFormat: Optional[FileFormat] = None
    includeMemberAccounts: Optional[IncludeMemberAccounts] = None


class GetAutoScalingGroupRecommendationsResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    autoScalingGroupRecommendations: Optional[AutoScalingGroupRecommendations] = None
    errors: Optional[GetRecommendationErrors] = None


class GetAutoScalingGroupRecommendationsRequest(BaseModel):
    accountIds: Optional[AccountIds] = None
    autoScalingGroupArns: Optional[AutoScalingGroupArns] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None
    recommendationPreferences: Optional[RecommendationPreferences] = None


class GetEBSVolumeRecommendationsResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    volumeRecommendations: Optional[VolumeRecommendations] = None
    errors: Optional[GetRecommendationErrors] = None


class GetEC2InstanceRecommendationsRequest(BaseModel):
    instanceArns: Optional[InstanceArns] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None
    filters: Optional[Filters] = None
    accountIds: Optional[AccountIds] = None
    recommendationPreferences: Optional[RecommendationPreferences] = None


class GetLambdaFunctionRecommendationsResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    lambdaFunctionRecommendations: Optional[LambdaFunctionRecommendations] = None


class GetLambdaFunctionRecommendationsRequest(BaseModel):
    functionArns: Optional[FunctionArns] = None
    accountIds: Optional[AccountIds] = None
    filters: Optional[LambdaFunctionRecommendationFilters] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class InstanceRecommendations(BaseModel):
    __root__: List[InstanceRecommendation]


class RecommendationSummary(BaseModel):
    """
    A summary of a recommendation.
    """

    summaries: Optional[Summaries] = None
    recommendationResourceType: Optional[ResourceType] = None
    accountId: Optional[AccountId] = None


class GetEC2InstanceRecommendationsResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    instanceRecommendations: Optional[InstanceRecommendations] = None
    errors: Optional[GetRecommendationErrors] = None


class RecommendationSummaries(BaseModel):
    __root__: List[RecommendationSummary]


class GetRecommendationSummariesResponse(BaseModel):
    nextToken: Optional[NextToken] = None
    recommendationSummaries: Optional[RecommendationSummaries] = None

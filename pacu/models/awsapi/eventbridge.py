# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:23+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ConcurrentModificationException(ResourceNotFoundException):
    pass


class InvalidStateException(ResourceNotFoundException):
    pass


class InternalException(ResourceNotFoundException):
    pass


class OperationDisabledException(ResourceNotFoundException):
    pass


class IllegalStatusException(ResourceNotFoundException):
    pass


class ResourceAlreadyExistsException(ResourceNotFoundException):
    pass


class LimitExceededException(ResourceNotFoundException):
    pass


class InvalidEventPatternException(ResourceNotFoundException):
    pass


class DeleteApiDestinationResponse(BaseModel):
    pass


class DeleteArchiveResponse(DeleteApiDestinationResponse):
    pass


class ManagedRuleException(ResourceNotFoundException):
    pass


class PolicyLengthExceededException(ResourceNotFoundException):
    pass


class TagResourceResponse(DeleteApiDestinationResponse):
    pass


class UntagResourceResponse(DeleteApiDestinationResponse):
    pass


class AccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=12, regex='\\d{12}')]


class Action(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='events:[a-zA-Z]+')
    ]


class EventSourceName(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}',
        ),
    ]


class ApiDestinationArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:api-destination\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$',
        ),
    ]


class ApiDestinationName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, min_length=1, regex='[\\.\\-_A-Za-z0-9]+')
    ]


class ApiDestinationState(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class ConnectionArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:connection\\/[\\.\\-_A-Za-z0-9]+\\/[\\-A-Za-z0-9]+$',
        ),
    ]


class HttpsEndpoint(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex="^((%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@\\x26=+$,A-Za-z0-9])+)([).!';/?:,])?$",
        ),
    ]


class ApiDestinationHttpMethod(Enum):
    POST = 'POST'
    GET = 'GET'
    HEAD = 'HEAD'
    OPTIONS = 'OPTIONS'
    PUT = 'PUT'
    PATCH = 'PATCH'
    DELETE = 'DELETE'


class ApiDestinationInvocationRateLimitPerSecond(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class Timestamp(BaseModel):
    __root__: datetime


class ApiDestination(BaseModel):
    """
    Contains details about an API destination.
    """

    ApiDestinationArn: Optional[ApiDestinationArn] = None
    Name: Optional[ApiDestinationName] = None
    ApiDestinationState: Optional[ApiDestinationState] = None
    ConnectionArn: Optional[ConnectionArn] = None
    InvocationEndpoint: Optional[HttpsEndpoint] = None
    HttpMethod: Optional[ApiDestinationHttpMethod] = None
    InvocationRateLimitPerSecond: Optional[
        ApiDestinationInvocationRateLimitPerSecond
    ] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None


class ApiDestinationDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=512, regex='.*')]


class ApiDestinationResponseList(BaseModel):
    __root__: List[ApiDestination]


class ArchiveName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=48, min_length=1, regex='[\\.\\-_A-Za-z0-9]+')
    ]


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=1600, min_length=1)]


class ArchiveState(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    CREATE_FAILED = 'CREATE_FAILED'
    UPDATE_FAILED = 'UPDATE_FAILED'


class ArchiveStateReason(ApiDestinationDescription):
    pass


class RetentionDays(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class Long(BaseModel):
    __root__: int


class Archive(BaseModel):
    """
    An <code>Archive</code> object that contains details about an archive.
    """

    ArchiveName: Optional[ArchiveName] = None
    EventSourceArn: Optional[Arn] = None
    State: Optional[ArchiveState] = None
    StateReason: Optional[ArchiveStateReason] = None
    RetentionDays: Optional[RetentionDays] = None
    SizeBytes: Optional[Long] = None
    EventCount: Optional[Long] = None
    CreationTime: Optional[Timestamp] = None


class ArchiveArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/.+$',
        ),
    ]


class ArchiveDescription(ApiDestinationDescription):
    pass


class ArchiveResponseList(BaseModel):
    __root__: List[Archive]


class AssignPublicIp(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AuthHeaderParameters(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=512,
            min_length=1,
            regex='^[ \\t]*[^\\x00-\\x1F:\\x7F]+([ \\t]+[^\\x00-\\x1F:\\x7F]+)*[ \\t]*$',
        ),
    ]


class Integer(Long):
    pass


class BatchArrayProperties(BaseModel):
    """
    The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. This parameter is used only if the target is an Batch job.
    """

    Size: Optional[Integer] = None


class String(BaseModel):
    __root__: str


class BatchRetryStrategy(BaseModel):
    """
    The retry strategy to use for failed jobs, if the target is an Batch job. If you specify a retry strategy here, it overrides the retry strategy defined in the job definition.
    """

    Attempts: Optional[Integer] = None


class BatchParameters(BaseModel):
    """
    The custom parameters to be used when the target is an Batch job.
    """

    JobDefinition: String
    JobName: String
    ArrayProperties: Optional[BatchArrayProperties] = None
    RetryStrategy: Optional[BatchRetryStrategy] = None


class Boolean(BaseModel):
    __root__: bool


class ReplayName(ApiDestinationName):
    pass


class ReplayArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='^arn:aws([a-z]|\\-)*:events:([a-z]|\\d|\\-)*:([0-9]{12})?:.+\\/[\\.\\-_A-Za-z0-9]+$',
        ),
    ]


class ReplayState(Enum):
    STARTING = 'STARTING'
    RUNNING = 'RUNNING'
    CANCELLING = 'CANCELLING'
    COMPLETED = 'COMPLETED'
    CANCELLED = 'CANCELLED'
    FAILED = 'FAILED'


class ReplayStateReason(ApiDestinationDescription):
    pass


class CapacityProvider(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class CapacityProviderStrategyItemWeight(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000.0)]


class CapacityProviderStrategyItemBase(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100000.0)]


class Condition(BaseModel):
    """
    <p>A JSON string which you can use to limit the event bus permissions you are granting to only accounts that fulfill the condition. Currently, the only supported condition is membership in a certain Amazon Web Services organization. The string must contain <code>Type</code>, <code>Key</code>, and <code>Value</code> fields. The <code>Value</code> field specifies the ID of the Amazon Web Services organization. Following is an example value for <code>Condition</code>:</p> <p> <code>'{"Type" : "StringEquals", "Key": "aws:PrincipalOrgID", "Value": "o-1234567890"}'</code> </p>
    """

    Type: String
    Key: String
    Value: String


class ConnectionName(ApiDestinationName):
    pass


class ConnectionState(Enum):
    CREATING = 'CREATING'
    UPDATING = 'UPDATING'
    DELETING = 'DELETING'
    AUTHORIZED = 'AUTHORIZED'
    DEAUTHORIZED = 'DEAUTHORIZED'
    AUTHORIZING = 'AUTHORIZING'
    DEAUTHORIZING = 'DEAUTHORIZING'


class ConnectionStateReason(ApiDestinationDescription):
    pass


class ConnectionAuthorizationType(Enum):
    BASIC = 'BASIC'
    OAUTH_CLIENT_CREDENTIALS = 'OAUTH_CLIENT_CREDENTIALS'
    API_KEY = 'API_KEY'


class Connection(BaseModel):
    """
    Contains information about a connection.
    """

    ConnectionArn: Optional[ConnectionArn] = None
    Name: Optional[ConnectionName] = None
    ConnectionState: Optional[ConnectionState] = None
    StateReason: Optional[ConnectionStateReason] = None
    AuthorizationType: Optional[ConnectionAuthorizationType] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None
    LastAuthorizedTime: Optional[Timestamp] = None


class ConnectionApiKeyAuthResponseParameters(BaseModel):
    """
    Contains the authorization parameters for the connection if API Key is specified as the authorization type.
    """

    ApiKeyName: Optional[AuthHeaderParameters] = None


class ConnectionBasicAuthResponseParameters(BaseModel):
    """
    Contains the authorization parameters for the connection if Basic is specified as the authorization type.
    """

    Username: Optional[AuthHeaderParameters] = None


class ConnectionBodyParameter(BaseModel):
    """
    Additional parameter included in the body. You can include up to 100 additional body parameters per request. An event payload cannot exceed 64 KB.
    """

    Key: Optional[String] = None
    Value: Optional[String] = None
    IsValueSecret: Optional[Boolean] = None


class ConnectionBodyParametersList(BaseModel):
    __root__: Annotated[
        List[ConnectionBodyParameter], Field(max_items=100, min_items=0)
    ]


class ConnectionDescription(ApiDestinationDescription):
    pass


class HeaderKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, regex="^[!#$%&'*+-.^_`|~0-9a-zA-Z]+$")
    ]


class HeaderValue(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=512,
            regex='^[ \\t]*[\\x20-\\x7E]+([ \\t]+[\\x20-\\x7E]+)*[ \\t]*$',
        ),
    ]


class ConnectionHeaderParameter(BaseModel):
    """
    Additional parameter included in the header. You can include up to 100 additional header parameters per request. An event payload cannot exceed 64 KB.
    """

    Key: Optional[HeaderKey] = None
    Value: Optional[HeaderValue] = None
    IsValueSecret: Optional[Boolean] = None


class ConnectionHeaderParametersList(BaseModel):
    __root__: Annotated[
        List[ConnectionHeaderParameter], Field(max_items=100, min_items=0)
    ]


class ConnectionOAuthClientResponseParameters(BaseModel):
    """
    Contains the client response parameters for the connection when OAuth is specified as the authorization type.
    """

    ClientID: Optional[AuthHeaderParameters] = None


class ConnectionOAuthHttpMethod(Enum):
    GET = 'GET'
    POST = 'POST'
    PUT = 'PUT'


class QueryStringKey(BaseModel):
    __root__: Annotated[str, Field(max_length=512, regex='[^\\x00-\\x1F\\x7F]+')]


class QueryStringValue(BaseModel):
    __root__: Annotated[
        str, Field(max_length=512, regex='[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F]+')
    ]


class ConnectionQueryStringParameter(BaseModel):
    """
    Additional query string parameter for the connection. You can include up to 100 additional query string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB.
    """

    Key: Optional[QueryStringKey] = None
    Value: Optional[QueryStringValue] = None
    IsValueSecret: Optional[Boolean] = None


class ConnectionResponseList(BaseModel):
    __root__: List[Connection]


class EventPattern(String):
    pass


class CreateConnectionApiKeyAuthRequestParameters(BaseModel):
    """
    Contains the API key authorization parameters for the connection.
    """

    ApiKeyName: AuthHeaderParameters
    ApiKeyValue: AuthHeaderParameters


class CreateConnectionBasicAuthRequestParameters(BaseModel):
    """
    Contains the Basic authorization parameters to use for the connection.
    """

    Username: AuthHeaderParameters
    Password: AuthHeaderParameters


class CreateConnectionOAuthClientRequestParameters(BaseModel):
    """
    Contains the Basic authorization parameters to use for the connection.
    """

    ClientID: AuthHeaderParameters
    ClientSecret: AuthHeaderParameters


class EventBusName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[/\\.\\-_A-Za-z0-9]+')
    ]


class CreatedBy(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class Database(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class DbUser(CreatedBy):
    pass


class ResourceArn(Arn):
    pass


class DeadLetterConfig(BaseModel):
    """
    A <code>DeadLetterConfig</code> object that contains information about a dead-letter queue configuration.
    """

    Arn: Optional[ResourceArn] = None


class RuleName(ApiDestinationName):
    pass


class EventBusNameOrArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='(arn:aws[\\w-]*:events:[a-z]{2}-[a-z]+-[\\w-]+:[0-9]{12}:event-bus\\/)?[/\\.\\-_A-Za-z0-9]+',
        ),
    ]


class SecretsManagerSecretArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=20,
            regex='^arn:aws([a-z]|\\-)*:secretsmanager:([a-z]|\\d|\\-)*:([0-9]{12})?:secret:[\\/_+=\\.@\\-A-Za-z0-9]+$',
        ),
    ]


class EventSourceState(Enum):
    PENDING = 'PENDING'
    ACTIVE = 'ACTIVE'
    DELETED = 'DELETED'


class ReplayDescription(ApiDestinationDescription):
    pass


class RuleArn(Arn):
    pass


class ScheduleExpression(BaseModel):
    __root__: Annotated[str, Field(max_length=256)]


class RuleDescription(BaseModel):
    __root__: Annotated[str, Field(max_length=512)]


class RoleArn(Arn):
    pass


class ManagedBy(CreatedBy):
    pass


class LimitMin1(ApiDestinationInvocationRateLimitPerSecond):
    pass


class LaunchType(Enum):
    EC2 = 'EC2'
    FARGATE = 'FARGATE'
    EXTERNAL = 'EXTERNAL'


class PropagateTags(Enum):
    TASK_DEFINITION = 'TASK_DEFINITION'


class ReferenceId(BaseModel):
    __root__: Annotated[str, Field(max_length=1024)]


class ErrorCode(String):
    pass


class ErrorMessage(String):
    pass


class EventBus(BaseModel):
    """
    An event bus receives events from a source and routes them to rules associated with that event bus. Your account's default event bus receives events from Amazon Web Services services. A custom event bus can receive events from your custom applications and services. A partner event bus receives events from an event source created by an SaaS partner. These events come from the partners services or applications.
    """

    Name: Optional[String] = None
    Arn: Optional[String] = None
    Policy: Optional[String] = None


class EventBusList(BaseModel):
    __root__: List[EventBus]


class EventId(String):
    pass


class EventResource(String):
    pass


class EventResourceList(BaseModel):
    __root__: List[EventResource]


class EventSource(BaseModel):
    """
    A partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that Amazon Web Services account can receive events from the partner's applications or services.
    """

    Arn: Optional[String] = None
    CreatedBy: Optional[String] = None
    CreationTime: Optional[Timestamp] = None
    ExpirationTime: Optional[Timestamp] = None
    Name: Optional[String] = None
    State: Optional[EventSourceState] = None


class EventSourceList(BaseModel):
    __root__: List[EventSource]


class EventSourceNamePrefix(EventBusName):
    pass


class EventTime(Timestamp):
    pass


class HeaderParametersMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class QueryStringParametersMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TransformerPaths(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class TransformerInput(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=1)]


class InputTransformer(BaseModel):
    """
    Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.
    """

    InputPathsMap: Optional[TransformerPaths] = None
    InputTemplate: TransformerInput


class InputTransformerPathKey(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[A-Za-z0-9\\_\\-]+')
    ]


class TargetPartitionKeyPath(ScheduleExpression):
    pass


class KinesisParameters(BaseModel):
    """
    This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis data stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.
    """

    PartitionKeyPath: TargetPartitionKeyPath


class LimitMax100(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class PartnerEventSourceNamePrefix(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=256,
            min_length=1,
            regex='aws\\.partner/[\\.\\-_A-Za-z0-9]+/[/\\.\\-_A-Za-z0-9]*',
        ),
    ]


class TargetArn(Arn):
    pass


class RuleNameList(BaseModel):
    __root__: List[RuleName]


class MaximumEventAgeInSeconds(BaseModel):
    __root__: Annotated[int, Field(ge=60.0, le=86400.0)]


class MaximumRetryAttempts(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=185.0)]


class MessageGroupId(String):
    pass


class NonPartnerEventBusName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='[\\.\\-_A-Za-z0-9]+')
    ]


class NonPartnerEventBusNameOrArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='(arn:aws[\\w-]*:events:[a-z]{2}-[a-z]+-[\\w-]+:[0-9]{12}:event-bus\\/)?[\\.\\-_A-Za-z0-9]+',
        ),
    ]


class PartnerEventSource(BaseModel):
    """
    A partner event source is created by an SaaS partner. If a customer creates a partner event bus that matches this event source, that Amazon Web Services account can receive events from the partner's applications or services.
    """

    Arn: Optional[String] = None
    Name: Optional[String] = None


class PartnerEventSourceAccount(BaseModel):
    """
    The Amazon Web Services account that a partner event source has been offered to.
    """

    Account: Optional[AccountId] = None
    CreationTime: Optional[Timestamp] = None
    ExpirationTime: Optional[Timestamp] = None
    State: Optional[EventSourceState] = None


class PathParameter(BaseModel):
    __root__: Annotated[str, Field(regex='^(?!\\s*$).+')]


class PlacementConstraintType(Enum):
    distinctInstance = 'distinctInstance'
    memberOf = 'memberOf'


class PlacementConstraintExpression(BaseModel):
    __root__: Annotated[str, Field(max_length=2000)]


class PlacementConstraint(BaseModel):
    """
    An object representing a constraint on task placement. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html">Task Placement Constraints</a> in the Amazon Elastic Container Service Developer Guide.
    """

    type: Optional[PlacementConstraintType] = None
    expression: Optional[PlacementConstraintExpression] = None


class PlacementStrategyType(Enum):
    random = 'random'
    spread = 'spread'
    binpack = 'binpack'


class PlacementStrategyField(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class Principal(BaseModel):
    __root__: Annotated[str, Field(max_length=12, min_length=1, regex='(\\d{12}|\\*)')]


class TraceHeader(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=1)]


class PutEventsRequestEntry(BaseModel):
    """
    Represents an event to be submitted.
    """

    Time: Optional[EventTime] = None
    Source: Optional[String] = None
    Resources: Optional[EventResourceList] = None
    DetailType: Optional[String] = None
    Detail: Optional[String] = None
    EventBusName: Optional[NonPartnerEventBusNameOrArn] = None
    TraceHeader: Optional[TraceHeader] = None


class PutEventsResultEntry(BaseModel):
    """
    Represents an event that failed to be submitted.
    """

    EventId: Optional[EventId] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[ErrorMessage] = None


class PutPartnerEventsRequestEntry(BaseModel):
    """
    The details about an event generated by an SaaS partner.
    """

    Time: Optional[EventTime] = None
    Source: Optional[EventSourceName] = None
    Resources: Optional[EventResourceList] = None
    DetailType: Optional[String] = None
    Detail: Optional[String] = None


class PutPartnerEventsResultEntry(PutEventsResultEntry):
    """
    Represents an event that a partner tried to generate, but failed.
    """

    pass


class StatementId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1, regex='[a-zA-Z0-9-_]+')]


class TargetId(ApiDestinationName):
    pass


class PutTargetsResultEntry(BaseModel):
    """
    Represents a target that failed to be added to a rule.
    """

    TargetId: Optional[TargetId] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[ErrorMessage] = None


class RedshiftSecretManagerArn(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=1600,
            min_length=1,
            regex='(^arn:aws([a-z]|\\-)*:secretsmanager:[a-z0-9-.]+:.*)|(\\$(\\.[\\w_-]+(\\[(\\d+|\\*)\\])*)*)',
        ),
    ]


class Sql(BaseModel):
    __root__: Annotated[str, Field(max_length=100000, min_length=1)]


class StatementName(TraceHeader):
    pass


class RedshiftDataParameters(BaseModel):
    """
    These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API ExecuteStatement based on EventBridge events.
    """

    SecretManagerArn: Optional[RedshiftSecretManagerArn] = None
    Database: Database
    DbUser: Optional[DbUser] = None
    Sql: Sql
    StatementName: Optional[StatementName] = None
    WithEvent: Optional[Boolean] = None


class TargetIdList(BaseModel):
    __root__: Annotated[List[TargetId], Field(max_items=100, min_items=1)]


class RemoveTargetsResultEntry(PutTargetsResultEntry):
    """
    Represents a target that failed to be removed from a rule.
    """

    pass


class Replay(BaseModel):
    """
    A <code>Replay</code> object that contains details about a replay.
    """

    ReplayName: Optional[ReplayName] = None
    EventSourceArn: Optional[Arn] = None
    State: Optional[ReplayState] = None
    StateReason: Optional[ReplayStateReason] = None
    EventStartTime: Optional[Timestamp] = None
    EventEndTime: Optional[Timestamp] = None
    EventLastReplayedTime: Optional[Timestamp] = None
    ReplayStartTime: Optional[Timestamp] = None
    ReplayEndTime: Optional[Timestamp] = None


class ReplayDestinationFilters(BaseModel):
    __root__: List[Arn]


class RetryPolicy(BaseModel):
    """
    A <code>RetryPolicy</code> object that includes information about the retry policy settings.
    """

    MaximumRetryAttempts: Optional[MaximumRetryAttempts] = None
    MaximumEventAgeInSeconds: Optional[MaximumEventAgeInSeconds] = None


class Rule(BaseModel):
    """
    Contains information about a rule in Amazon EventBridge.
    """

    Name: Optional[RuleName] = None
    Arn: Optional[RuleArn] = None
    EventPattern: Optional[EventPattern] = None
    State: Optional[AssignPublicIp] = None
    Description: Optional[RuleDescription] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    RoleArn: Optional[RoleArn] = None
    ManagedBy: Optional[ManagedBy] = None
    EventBusName: Optional[EventBusName] = None


class RunCommandTargetKey(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=128, min_length=1, regex='^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$'),
    ]


class RunCommandTargetValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class SageMakerPipelineParameterName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^[a-zA-Z0-9](-*[a-zA-Z0-9])*$')
    ]


class SageMakerPipelineParameterValue(ReferenceId):
    pass


class SageMakerPipelineParameter(BaseModel):
    """
    Name/Value pair of a parameter to start execution of a SageMaker Model Building Pipeline.
    """

    Name: SageMakerPipelineParameterName
    Value: SageMakerPipelineParameterValue


class SageMakerPipelineParameterList(BaseModel):
    __root__: Annotated[
        List[SageMakerPipelineParameter], Field(max_items=200, min_items=0)
    ]


class SageMakerPipelineParameters(BaseModel):
    """
    These are custom parameters to use when the target is a SageMaker Model Building Pipeline that starts based on EventBridge events.
    """

    PipelineParameterList: Optional[SageMakerPipelineParameterList] = None


class SqsParameters(BaseModel):
    """
    This structure includes the custom parameter to be used when the target is an SQS FIFO queue.
    """

    MessageGroupId: Optional[MessageGroupId] = None


class TagKey(CreatedBy):
    pass


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    A key-value pair associated with an Amazon Web Services resource. In EventBridge, rules and event buses support tagging.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: List[TagKey]


class TargetInput(BaseModel):
    __root__: Annotated[str, Field(max_length=8192)]


class TargetInputPath(ScheduleExpression):
    pass


class UpdateConnectionApiKeyAuthRequestParameters(BaseModel):
    """
    Contains the API key authorization parameters to use to update the connection.
    """

    ApiKeyName: Optional[AuthHeaderParameters] = None
    ApiKeyValue: Optional[AuthHeaderParameters] = None


class UpdateConnectionBasicAuthRequestParameters(BaseModel):
    """
    Contains the Basic authorization parameters for the connection.
    """

    Username: Optional[AuthHeaderParameters] = None
    Password: Optional[AuthHeaderParameters] = None


class UpdateConnectionOAuthClientRequestParameters(BaseModel):
    """
    Contains the OAuth authorization parameters to use for the connection.
    """

    ClientID: Optional[AuthHeaderParameters] = None
    ClientSecret: Optional[AuthHeaderParameters] = None


class ActivateEventSourceRequest(BaseModel):
    Name: EventSourceName


class CancelReplayResponse(BaseModel):
    ReplayArn: Optional[ReplayArn] = None
    State: Optional[ReplayState] = None
    StateReason: Optional[ReplayStateReason] = None


class CancelReplayRequest(BaseModel):
    ReplayName: ReplayName


class CreateApiDestinationResponse(BaseModel):
    ApiDestinationArn: Optional[ApiDestinationArn] = None
    ApiDestinationState: Optional[ApiDestinationState] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None


class CreateApiDestinationRequest(BaseModel):
    Name: ApiDestinationName
    Description: Optional[ApiDestinationDescription] = None
    ConnectionArn: ConnectionArn
    InvocationEndpoint: HttpsEndpoint
    HttpMethod: ApiDestinationHttpMethod
    InvocationRateLimitPerSecond: Optional[
        ApiDestinationInvocationRateLimitPerSecond
    ] = None


class CreateArchiveResponse(BaseModel):
    ArchiveArn: Optional[ArchiveArn] = None
    State: Optional[ArchiveState] = None
    StateReason: Optional[ArchiveStateReason] = None
    CreationTime: Optional[Timestamp] = None


class CreateArchiveRequest(BaseModel):
    ArchiveName: ArchiveName
    EventSourceArn: Arn
    Description: Optional[ArchiveDescription] = None
    EventPattern: Optional[EventPattern] = None
    RetentionDays: Optional[RetentionDays] = None


class CreateConnectionResponse(BaseModel):
    ConnectionArn: Optional[ConnectionArn] = None
    ConnectionState: Optional[ConnectionState] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None


class CreateEventBusResponse(BaseModel):
    EventBusArn: Optional[String] = None


class CreatePartnerEventSourceResponse(BaseModel):
    EventSourceArn: Optional[String] = None


class CreatePartnerEventSourceRequest(BaseModel):
    Name: EventSourceName
    Account: AccountId


class DeactivateEventSourceRequest(BaseModel):
    Name: EventSourceName


class DeauthorizeConnectionResponse(BaseModel):
    ConnectionArn: Optional[ConnectionArn] = None
    ConnectionState: Optional[ConnectionState] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None
    LastAuthorizedTime: Optional[Timestamp] = None


class DeauthorizeConnectionRequest(BaseModel):
    Name: ConnectionName


class DeleteApiDestinationRequest(BaseModel):
    Name: ApiDestinationName


class DeleteArchiveRequest(BaseModel):
    ArchiveName: ArchiveName


class DeleteConnectionResponse(DeauthorizeConnectionResponse):
    pass


class DeleteConnectionRequest(BaseModel):
    Name: ConnectionName


class DeleteEventBusRequest(BaseModel):
    Name: EventBusName


class DeletePartnerEventSourceRequest(BaseModel):
    Name: EventSourceName
    Account: AccountId


class DeleteRuleRequest(BaseModel):
    Name: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None
    Force: Optional[Boolean] = None


class DescribeApiDestinationResponse(BaseModel):
    ApiDestinationArn: Optional[ApiDestinationArn] = None
    Name: Optional[ApiDestinationName] = None
    Description: Optional[ApiDestinationDescription] = None
    ApiDestinationState: Optional[ApiDestinationState] = None
    ConnectionArn: Optional[ConnectionArn] = None
    InvocationEndpoint: Optional[HttpsEndpoint] = None
    HttpMethod: Optional[ApiDestinationHttpMethod] = None
    InvocationRateLimitPerSecond: Optional[
        ApiDestinationInvocationRateLimitPerSecond
    ] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None


class DescribeApiDestinationRequest(BaseModel):
    Name: ApiDestinationName


class DescribeArchiveResponse(BaseModel):
    ArchiveArn: Optional[ArchiveArn] = None
    ArchiveName: Optional[ArchiveName] = None
    EventSourceArn: Optional[Arn] = None
    Description: Optional[ArchiveDescription] = None
    EventPattern: Optional[EventPattern] = None
    State: Optional[ArchiveState] = None
    StateReason: Optional[ArchiveStateReason] = None
    RetentionDays: Optional[RetentionDays] = None
    SizeBytes: Optional[Long] = None
    EventCount: Optional[Long] = None
    CreationTime: Optional[Timestamp] = None


class DescribeArchiveRequest(BaseModel):
    ArchiveName: ArchiveName


class DescribeConnectionRequest(BaseModel):
    Name: ConnectionName


class DescribeEventBusResponse(EventBus):
    pass


class DescribeEventBusRequest(BaseModel):
    Name: Optional[EventBusNameOrArn] = None


class DescribeEventSourceResponse(EventSource):
    pass


class DescribeEventSourceRequest(BaseModel):
    Name: EventSourceName


class DescribePartnerEventSourceResponse(PartnerEventSource):
    pass


class DescribePartnerEventSourceRequest(BaseModel):
    Name: EventSourceName


class DescribeReplayRequest(BaseModel):
    ReplayName: ReplayName


class DescribeRuleResponse(BaseModel):
    Name: Optional[RuleName] = None
    Arn: Optional[RuleArn] = None
    EventPattern: Optional[EventPattern] = None
    ScheduleExpression: Optional[ScheduleExpression] = None
    State: Optional[AssignPublicIp] = None
    Description: Optional[RuleDescription] = None
    RoleArn: Optional[RoleArn] = None
    ManagedBy: Optional[ManagedBy] = None
    EventBusName: Optional[EventBusName] = None
    CreatedBy: Optional[CreatedBy] = None


class DescribeRuleRequest(BaseModel):
    Name: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None


class DisableRuleRequest(BaseModel):
    Name: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None


class EnableRuleRequest(BaseModel):
    Name: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None


class ListApiDestinationsResponse(BaseModel):
    ApiDestinations: Optional[ApiDestinationResponseList] = None
    NextToken: Optional[NextToken] = None


class ListApiDestinationsRequest(BaseModel):
    NamePrefix: Optional[ApiDestinationName] = None
    ConnectionArn: Optional[ConnectionArn] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListArchivesResponse(BaseModel):
    Archives: Optional[ArchiveResponseList] = None
    NextToken: Optional[NextToken] = None


class ListArchivesRequest(BaseModel):
    NamePrefix: Optional[ArchiveName] = None
    EventSourceArn: Optional[Arn] = None
    State: Optional[ArchiveState] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListConnectionsResponse(BaseModel):
    Connections: Optional[ConnectionResponseList] = None
    NextToken: Optional[NextToken] = None


class ListConnectionsRequest(BaseModel):
    NamePrefix: Optional[ConnectionName] = None
    ConnectionState: Optional[ConnectionState] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListEventBusesResponse(BaseModel):
    EventBuses: Optional[EventBusList] = None
    NextToken: Optional[NextToken] = None


class ListEventBusesRequest(BaseModel):
    NamePrefix: Optional[EventBusName] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListEventSourcesResponse(BaseModel):
    EventSources: Optional[EventSourceList] = None
    NextToken: Optional[NextToken] = None


class ListEventSourcesRequest(BaseModel):
    NamePrefix: Optional[EventSourceNamePrefix] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListPartnerEventSourceAccountsRequest(BaseModel):
    EventSourceName: EventSourceName
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListPartnerEventSourcesRequest(BaseModel):
    NamePrefix: PartnerEventSourceNamePrefix
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListReplaysRequest(BaseModel):
    NamePrefix: Optional[ReplayName] = None
    State: Optional[ReplayState] = None
    EventSourceArn: Optional[Arn] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListRuleNamesByTargetResponse(BaseModel):
    RuleNames: Optional[RuleNameList] = None
    NextToken: Optional[NextToken] = None


class ListRuleNamesByTargetRequest(BaseModel):
    TargetArn: TargetArn
    EventBusName: Optional[EventBusNameOrArn] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListRulesRequest(BaseModel):
    NamePrefix: Optional[RuleName] = None
    EventBusName: Optional[EventBusNameOrArn] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: Arn


class ListTargetsByRuleRequest(BaseModel):
    Rule: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None
    NextToken: Optional[NextToken] = None
    Limit: Optional[LimitMax100] = None


class PutPermissionRequest(BaseModel):
    EventBusName: Optional[NonPartnerEventBusName] = None
    Action: Optional[Action] = None
    Principal: Optional[Principal] = None
    StatementId: Optional[StatementId] = None
    Condition: Optional[Condition] = None
    Policy: Optional[String] = None


class PutRuleResponse(BaseModel):
    RuleArn: Optional[RuleArn] = None


class RemovePermissionRequest(BaseModel):
    StatementId: Optional[StatementId] = None
    RemoveAllPermissions: Optional[Boolean] = None
    EventBusName: Optional[NonPartnerEventBusName] = None


class RemoveTargetsRequest(BaseModel):
    Rule: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None
    Ids: TargetIdList
    Force: Optional[Boolean] = None


class StartReplayResponse(BaseModel):
    ReplayArn: Optional[ReplayArn] = None
    State: Optional[ReplayState] = None
    StateReason: Optional[ReplayStateReason] = None
    ReplayStartTime: Optional[Timestamp] = None


class TestEventPatternResponse(BaseModel):
    Result: Optional[Boolean] = None


class TestEventPatternRequest(BaseModel):
    EventPattern: EventPattern
    Event: String


class UntagResourceRequest(BaseModel):
    ResourceARN: Arn
    TagKeys: TagKeyList


class UpdateApiDestinationResponse(CreateApiDestinationResponse):
    pass


class UpdateApiDestinationRequest(BaseModel):
    Name: ApiDestinationName
    Description: Optional[ApiDestinationDescription] = None
    ConnectionArn: Optional[ConnectionArn] = None
    InvocationEndpoint: Optional[HttpsEndpoint] = None
    HttpMethod: Optional[ApiDestinationHttpMethod] = None
    InvocationRateLimitPerSecond: Optional[
        ApiDestinationInvocationRateLimitPerSecond
    ] = None


class UpdateArchiveResponse(CreateArchiveResponse):
    pass


class UpdateArchiveRequest(BaseModel):
    ArchiveName: ArchiveName
    Description: Optional[ArchiveDescription] = None
    EventPattern: Optional[EventPattern] = None
    RetentionDays: Optional[RetentionDays] = None


class UpdateConnectionResponse(DeauthorizeConnectionResponse):
    pass


class StringList(BaseModel):
    __root__: List[String]


class AwsVpcConfiguration(BaseModel):
    """
    This structure specifies the VPC subnets and security groups for the task, and whether a public IP address is to be used. This structure is relevant only for ECS tasks that use the <code>awsvpc</code> network mode.
    """

    Subnets: StringList
    SecurityGroups: Optional[StringList] = None
    AssignPublicIp: Optional[AssignPublicIp] = None


class CapacityProviderStrategyItem(BaseModel):
    """
    The details of a capacity provider strategy. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html">CapacityProviderStrategyItem</a> in the Amazon ECS API Reference.
    """

    capacityProvider: CapacityProvider
    weight: Optional[CapacityProviderStrategyItemWeight] = None
    base: Optional[CapacityProviderStrategyItemBase] = None


class CapacityProviderStrategy(BaseModel):
    __root__: Annotated[List[CapacityProviderStrategyItem], Field(max_items=6)]


class ConnectionQueryStringParametersList(BaseModel):
    __root__: Annotated[
        List[ConnectionQueryStringParameter], Field(max_items=100, min_items=0)
    ]


class TagList(BaseModel):
    __root__: List[Tag]


class ReplayDestination(BaseModel):
    """
    A <code>ReplayDestination</code> object that contains details about a replay.
    """

    Arn: Arn
    FilterArns: Optional[ReplayDestinationFilters] = None


class NetworkConfiguration(BaseModel):
    """
    This structure specifies the network configuration for an ECS task.
    """

    awsvpcConfiguration: Optional[AwsVpcConfiguration] = None


class PlacementConstraints(BaseModel):
    __root__: Annotated[List[PlacementConstraint], Field(max_items=10)]


class PathParameterList(BaseModel):
    __root__: List[PathParameter]


class HttpParameters(BaseModel):
    """
    These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. In the latter case, these are merged with any InvocationParameters specified on the Connection, with any values from the Connection taking precedence.
    """

    PathParameterValues: Optional[PathParameterList] = None
    HeaderParameters: Optional[HeaderParametersMap] = None
    QueryStringParameters: Optional[QueryStringParametersMap] = None


class PartnerEventSourceAccountList(BaseModel):
    __root__: List[PartnerEventSourceAccount]


class PartnerEventSourceList(BaseModel):
    __root__: List[PartnerEventSource]


class ReplayList(BaseModel):
    __root__: List[Replay]


class RuleResponseList(BaseModel):
    __root__: List[Rule]


class PlacementStrategy(BaseModel):
    """
    The task placement strategy for a task or service. To learn more, see <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html">Task Placement Strategies</a> in the Amazon Elastic Container Service Service Developer Guide.
    """

    type: Optional[PlacementStrategyType] = None
    field: Optional[PlacementStrategyField] = None


class PutEventsRequestEntryList(BaseModel):
    __root__: Annotated[List[PutEventsRequestEntry], Field(max_items=10, min_items=1)]


class PutEventsResultEntryList(BaseModel):
    __root__: List[PutEventsResultEntry]


class PutPartnerEventsRequestEntryList(BaseModel):
    __root__: Annotated[
        List[PutPartnerEventsRequestEntry], Field(max_items=20, min_items=1)
    ]


class PutPartnerEventsResultEntryList(BaseModel):
    __root__: List[PutPartnerEventsResultEntry]


class PutTargetsResultEntryList(BaseModel):
    __root__: List[PutTargetsResultEntry]


class RemoveTargetsResultEntryList(BaseModel):
    __root__: List[RemoveTargetsResultEntry]


class RunCommandTargetValues(BaseModel):
    __root__: Annotated[List[RunCommandTargetValue], Field(max_items=50, min_items=1)]


class RunCommandTarget(BaseModel):
    """
    Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.
    """

    Key: RunCommandTargetKey
    Values: RunCommandTargetValues


class CreateEventBusRequest(BaseModel):
    Name: EventBusName
    EventSourceName: Optional[EventSourceName] = None
    Tags: Optional[TagList] = None


class DescribeReplayResponse(BaseModel):
    ReplayName: Optional[ReplayName] = None
    ReplayArn: Optional[ReplayArn] = None
    Description: Optional[ReplayDescription] = None
    State: Optional[ReplayState] = None
    StateReason: Optional[ReplayStateReason] = None
    EventSourceArn: Optional[Arn] = None
    Destination: Optional[ReplayDestination] = None
    EventStartTime: Optional[Timestamp] = None
    EventEndTime: Optional[Timestamp] = None
    EventLastReplayedTime: Optional[Timestamp] = None
    ReplayStartTime: Optional[Timestamp] = None
    ReplayEndTime: Optional[Timestamp] = None


class ListPartnerEventSourceAccountsResponse(BaseModel):
    PartnerEventSourceAccounts: Optional[PartnerEventSourceAccountList] = None
    NextToken: Optional[NextToken] = None


class ListPartnerEventSourcesResponse(BaseModel):
    PartnerEventSources: Optional[PartnerEventSourceList] = None
    NextToken: Optional[NextToken] = None


class ListReplaysResponse(BaseModel):
    Replays: Optional[ReplayList] = None
    NextToken: Optional[NextToken] = None


class ListRulesResponse(BaseModel):
    Rules: Optional[RuleResponseList] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None


class PutEventsResponse(BaseModel):
    FailedEntryCount: Optional[Integer] = None
    Entries: Optional[PutEventsResultEntryList] = None


class PutEventsRequest(BaseModel):
    Entries: PutEventsRequestEntryList


class PutPartnerEventsResponse(BaseModel):
    FailedEntryCount: Optional[Integer] = None
    Entries: Optional[PutPartnerEventsResultEntryList] = None


class PutPartnerEventsRequest(BaseModel):
    Entries: PutPartnerEventsRequestEntryList


class PutRuleRequest(BaseModel):
    Name: RuleName
    ScheduleExpression: Optional[ScheduleExpression] = None
    EventPattern: Optional[EventPattern] = None
    State: Optional[AssignPublicIp] = None
    Description: Optional[RuleDescription] = None
    RoleArn: Optional[RoleArn] = None
    Tags: Optional[TagList] = None
    EventBusName: Optional[EventBusNameOrArn] = None


class PutTargetsResponse(BaseModel):
    FailedEntryCount: Optional[Integer] = None
    FailedEntries: Optional[PutTargetsResultEntryList] = None


class RemoveTargetsResponse(BaseModel):
    FailedEntryCount: Optional[Integer] = None
    FailedEntries: Optional[RemoveTargetsResultEntryList] = None


class StartReplayRequest(BaseModel):
    ReplayName: ReplayName
    Description: Optional[ReplayDescription] = None
    EventSourceArn: Arn
    EventStartTime: Timestamp
    EventEndTime: Timestamp
    Destination: ReplayDestination


class TagResourceRequest(BaseModel):
    ResourceARN: Arn
    Tags: TagList


class ConnectionHttpParameters(BaseModel):
    """
    Contains additional parameters for the connection.
    """

    HeaderParameters: Optional[ConnectionHeaderParametersList] = None
    QueryStringParameters: Optional[ConnectionQueryStringParametersList] = None
    BodyParameters: Optional[ConnectionBodyParametersList] = None


class CreateConnectionOAuthRequestParameters(BaseModel):
    """
    Contains the OAuth authorization parameters to use for the connection.
    """

    ClientParameters: CreateConnectionOAuthClientRequestParameters
    AuthorizationEndpoint: HttpsEndpoint
    HttpMethod: ConnectionOAuthHttpMethod
    OAuthHttpParameters: Optional[ConnectionHttpParameters] = None


class CreateConnectionAuthRequestParameters(BaseModel):
    """
    Contains the authorization parameters for the connection.
    """

    BasicAuthParameters: Optional[CreateConnectionBasicAuthRequestParameters] = None
    OAuthParameters: Optional[CreateConnectionOAuthRequestParameters] = None
    ApiKeyAuthParameters: Optional[CreateConnectionApiKeyAuthRequestParameters] = None
    InvocationHttpParameters: Optional[ConnectionHttpParameters] = None


class PlacementStrategies(BaseModel):
    __root__: Annotated[List[PlacementStrategy], Field(max_items=5)]


class EcsParameters(BaseModel):
    """
    The custom parameters to be used when the target is an Amazon ECS task.
    """

    TaskDefinitionArn: Arn
    TaskCount: Optional[LimitMin1] = None
    LaunchType: Optional[LaunchType] = None
    NetworkConfiguration: Optional[NetworkConfiguration] = None
    PlatformVersion: Optional[String] = None
    Group: Optional[String] = None
    CapacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    EnableECSManagedTags: Optional[Boolean] = None
    EnableExecuteCommand: Optional[Boolean] = None
    PlacementConstraints: Optional[PlacementConstraints] = None
    PlacementStrategy: Optional[PlacementStrategies] = None
    PropagateTags: Optional[PropagateTags] = None
    ReferenceId: Optional[ReferenceId] = None
    Tags: Optional[TagList] = None


class RunCommandTargets(BaseModel):
    __root__: Annotated[List[RunCommandTarget], Field(max_items=5, min_items=1)]


class RunCommandParameters(BaseModel):
    """
    This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command.
    """

    RunCommandTargets: RunCommandTargets


class Target(BaseModel):
    """
    <p>Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html">PutTargets</a>.</p> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p>
    """

    Id: TargetId
    Arn: TargetArn
    RoleArn: Optional[RoleArn] = None
    Input: Optional[TargetInput] = None
    InputPath: Optional[TargetInputPath] = None
    InputTransformer: Optional[InputTransformer] = None
    KinesisParameters: Optional[KinesisParameters] = None
    RunCommandParameters: Optional[RunCommandParameters] = None
    EcsParameters: Optional[EcsParameters] = None
    BatchParameters: Optional[BatchParameters] = None
    SqsParameters: Optional[SqsParameters] = None
    HttpParameters: Optional[HttpParameters] = None
    RedshiftDataParameters: Optional[RedshiftDataParameters] = None
    SageMakerPipelineParameters: Optional[SageMakerPipelineParameters] = None
    DeadLetterConfig: Optional[DeadLetterConfig] = None
    RetryPolicy: Optional[RetryPolicy] = None


class UpdateConnectionOAuthRequestParameters(BaseModel):
    """
    Contains the OAuth request parameters to use for the connection.
    """

    ClientParameters: Optional[UpdateConnectionOAuthClientRequestParameters] = None
    AuthorizationEndpoint: Optional[HttpsEndpoint] = None
    HttpMethod: Optional[ConnectionOAuthHttpMethod] = None
    OAuthHttpParameters: Optional[ConnectionHttpParameters] = None


class UpdateConnectionAuthRequestParameters(BaseModel):
    """
    Contains the additional parameters to use for the connection.
    """

    BasicAuthParameters: Optional[UpdateConnectionBasicAuthRequestParameters] = None
    OAuthParameters: Optional[UpdateConnectionOAuthRequestParameters] = None
    ApiKeyAuthParameters: Optional[UpdateConnectionApiKeyAuthRequestParameters] = None
    InvocationHttpParameters: Optional[ConnectionHttpParameters] = None


class CreateConnectionRequest(BaseModel):
    Name: ConnectionName
    Description: Optional[ConnectionDescription] = None
    AuthorizationType: ConnectionAuthorizationType
    AuthParameters: CreateConnectionAuthRequestParameters


class UpdateConnectionRequest(BaseModel):
    Name: ConnectionName
    Description: Optional[ConnectionDescription] = None
    AuthorizationType: Optional[ConnectionAuthorizationType] = None
    AuthParameters: Optional[UpdateConnectionAuthRequestParameters] = None


class ConnectionOAuthResponseParameters(BaseModel):
    """
    Contains the response parameters when OAuth is specified as the authorization type.
    """

    ClientParameters: Optional[ConnectionOAuthClientResponseParameters] = None
    AuthorizationEndpoint: Optional[HttpsEndpoint] = None
    HttpMethod: Optional[ConnectionOAuthHttpMethod] = None
    OAuthHttpParameters: Optional[ConnectionHttpParameters] = None


class ConnectionAuthResponseParameters(BaseModel):
    """
    Contains the authorization parameters to use for the connection.
    """

    BasicAuthParameters: Optional[ConnectionBasicAuthResponseParameters] = None
    OAuthParameters: Optional[ConnectionOAuthResponseParameters] = None
    ApiKeyAuthParameters: Optional[ConnectionApiKeyAuthResponseParameters] = None
    InvocationHttpParameters: Optional[ConnectionHttpParameters] = None


class TargetList(BaseModel):
    __root__: Annotated[List[Target], Field(max_items=100, min_items=1)]


class DescribeConnectionResponse(BaseModel):
    ConnectionArn: Optional[ConnectionArn] = None
    Name: Optional[ConnectionName] = None
    Description: Optional[ConnectionDescription] = None
    ConnectionState: Optional[ConnectionState] = None
    StateReason: Optional[ConnectionStateReason] = None
    AuthorizationType: Optional[ConnectionAuthorizationType] = None
    SecretArn: Optional[SecretsManagerSecretArn] = None
    AuthParameters: Optional[ConnectionAuthResponseParameters] = None
    CreationTime: Optional[Timestamp] = None
    LastModifiedTime: Optional[Timestamp] = None
    LastAuthorizedTime: Optional[Timestamp] = None


class ListTargetsByRuleResponse(BaseModel):
    Targets: Optional[TargetList] = None
    NextToken: Optional[NextToken] = None


class PutTargetsRequest(BaseModel):
    Rule: RuleName
    EventBusName: Optional[EventBusNameOrArn] = None
    Targets: TargetList

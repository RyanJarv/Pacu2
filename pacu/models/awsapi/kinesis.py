# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:19+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ResourceInUseException(ResourceNotFoundException):
    pass


class InvalidArgumentException(ResourceNotFoundException):
    pass


class LimitExceededException(ResourceNotFoundException):
    pass


class DescribeLimitsInput(BaseModel):
    pass


class ProvisionedThroughputExceededException(ResourceNotFoundException):
    pass


class ExpiredIteratorException(ResourceNotFoundException):
    pass


class KMSDisabledException(ResourceNotFoundException):
    pass


class KMSInvalidStateException(ResourceNotFoundException):
    pass


class KMSAccessDeniedException(ResourceNotFoundException):
    pass


class KMSNotFoundException(ResourceNotFoundException):
    pass


class KMSOptInRequired(ResourceNotFoundException):
    pass


class KMSThrottlingException(ResourceNotFoundException):
    pass


class ExpiredNextTokenException(ResourceNotFoundException):
    pass


class StreamName(BaseModel):
    __root__: Annotated[
        str, Field(max_length=128, min_length=1, regex='[a-zA-Z0-9_.-]+')
    ]


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class BooleanObject(BaseModel):
    __root__: bool


class ShardId(StreamName):
    pass


class ShardIdList(BaseModel):
    __root__: List[ShardId]


class ConsumerName(StreamName):
    pass


class ConsumerARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='^(arn):aws.*:kinesis:.*:\\d{12}:.*stream\\/[a-zA-Z0-9_.-]+\\/consumer\\/[a-zA-Z0-9_.-]+:[0-9]+',
        ),
    ]


class ConsumerStatus(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    ACTIVE = 'ACTIVE'


class Timestamp(BaseModel):
    __root__: datetime


class Consumer(BaseModel):
    """
    An object that represents the details of the consumer you registered. This type of object is returned by <a>RegisterStreamConsumer</a>.
    """

    ConsumerName: ConsumerName
    ConsumerARN: ConsumerARN
    ConsumerStatus: ConsumerStatus
    ConsumerCreationTimestamp: Timestamp


class ConsumerCountObject(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000000.0)]


class StreamARN(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=2048,
            min_length=1,
            regex='arn:aws.*:kinesis:.*:\\d{12}:stream/.+',
        ),
    ]


class ConsumerDescription(BaseModel):
    """
    An object that represents the details of a registered consumer. This type of object is returned by <a>DescribeStreamConsumer</a>.
    """

    ConsumerName: ConsumerName
    ConsumerARN: ConsumerARN
    ConsumerStatus: ConsumerStatus
    ConsumerCreationTimestamp: Timestamp
    StreamARN: StreamARN


class ConsumerList(BaseModel):
    __root__: List[Consumer]


class PositiveIntegerObject(BaseModel):
    __root__: Annotated[int, Field(ge=1.0)]


class Data(BaseModel):
    __root__: Annotated[str, Field(max_length=1048576, min_length=0)]


class RetentionPeriodHours(BaseModel):
    __root__: int


class ShardCountObject(ConsumerCountObject):
    pass


class DescribeStreamInputLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=10000.0)]


class EncryptionType(Enum):
    NONE = 'NONE'
    KMS = 'KMS'


class ErrorCode(BaseModel):
    __root__: str


class ErrorMessage(ErrorCode):
    pass


class ShardIterator(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class GetRecordsInputLimit(DescribeStreamInputLimit):
    pass


class MillisBehindLatest(BaseModel):
    __root__: Annotated[int, Field(ge=0.0)]


class ShardIteratorType(Enum):
    AT_SEQUENCE_NUMBER = 'AT_SEQUENCE_NUMBER'
    AFTER_SEQUENCE_NUMBER = 'AFTER_SEQUENCE_NUMBER'
    TRIM_HORIZON = 'TRIM_HORIZON'
    LATEST = 'LATEST'
    AT_TIMESTAMP = 'AT_TIMESTAMP'


class SequenceNumber(BaseModel):
    __root__: Annotated[str, Field(regex='0|([1-9]\\d{0,128})')]


class HashKey(BaseModel):
    __root__: Annotated[str, Field(regex='0|([1-9]\\d{0,38})')]


class KeyId(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class NextToken(BaseModel):
    __root__: Annotated[str, Field(max_length=1048576, min_length=1)]


class ListShardsInputLimit(DescribeStreamInputLimit):
    pass


class ListStreamConsumersInputLimit(DescribeStreamInputLimit):
    pass


class ListStreamsInputLimit(DescribeStreamInputLimit):
    pass


class StreamNameList(BaseModel):
    __root__: List[StreamName]


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class ListTagsForStreamInputLimit(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=50.0)]


class MetricsName(Enum):
    IncomingBytes = 'IncomingBytes'
    IncomingRecords = 'IncomingRecords'
    OutgoingBytes = 'OutgoingBytes'
    OutgoingRecords = 'OutgoingRecords'
    WriteProvisionedThroughputExceeded = 'WriteProvisionedThroughputExceeded'
    ReadProvisionedThroughputExceeded = 'ReadProvisionedThroughputExceeded'
    IteratorAgeMilliseconds = 'IteratorAgeMilliseconds'
    ALL = 'ALL'


class PartitionKey(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class PutRecordsRequestEntry(BaseModel):
    """
    Represents the output for <code>PutRecords</code>.
    """

    Data: Data
    ExplicitHashKey: Optional[HashKey] = None
    PartitionKey: PartitionKey


class PutRecordsResultEntry(BaseModel):
    """
    Represents the result of an individual record from a <code>PutRecords</code> request. A record that is successfully added to a stream includes <code>SequenceNumber</code> and <code>ShardId</code> in the result. A record that fails to be added to the stream includes <code>ErrorCode</code> and <code>ErrorMessage</code> in the result.
    """

    SequenceNumber: Optional[SequenceNumber] = None
    ShardId: Optional[ShardId] = None
    ErrorCode: Optional[ErrorCode] = None
    ErrorMessage: Optional[ErrorMessage] = None


class Record(BaseModel):
    """
    The unit of data of the Kinesis data stream, which is composed of a sequence number, a partition key, and a data blob.
    """

    SequenceNumber: SequenceNumber
    ApproximateArrivalTimestamp: Optional[Timestamp] = None
    Data: Data
    PartitionKey: PartitionKey
    EncryptionType: Optional[EncryptionType] = None


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=50, min_items=1)]


class ScalingType(Enum):
    UNIFORM_SCALING = 'UNIFORM_SCALING'


class SequenceNumberRange(BaseModel):
    """
    The range of possible sequence numbers for the shard.
    """

    StartingSequenceNumber: SequenceNumber
    EndingSequenceNumber: Optional[SequenceNumber] = None


class ShardFilterType(Enum):
    AFTER_SHARD_ID = 'AFTER_SHARD_ID'
    AT_TRIM_HORIZON = 'AT_TRIM_HORIZON'
    FROM_TRIM_HORIZON = 'FROM_TRIM_HORIZON'
    AT_LATEST = 'AT_LATEST'
    AT_TIMESTAMP = 'AT_TIMESTAMP'
    FROM_TIMESTAMP = 'FROM_TIMESTAMP'


class StreamStatus(Enum):
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    ACTIVE = 'ACTIVE'
    UPDATING = 'UPDATING'


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    Metadata assigned to the stream, consisting of a key-value pair.
    """

    Key: TagKey
    Value: Optional[TagValue] = None


class AddTagsToStreamInput(BaseModel):
    """
    Represents the input for <code>AddTagsToStream</code>.
    """

    StreamName: StreamName
    Tags: TagMap


class CreateStreamInput(BaseModel):
    """
    Represents the input for <code>CreateStream</code>.
    """

    StreamName: StreamName
    ShardCount: PositiveIntegerObject


class DecreaseStreamRetentionPeriodInput(BaseModel):
    """
    Represents the input for <a>DecreaseStreamRetentionPeriod</a>.
    """

    StreamName: StreamName
    RetentionPeriodHours: RetentionPeriodHours


class DeleteStreamInput(BaseModel):
    """
    Represents the input for <a>DeleteStream</a>.
    """

    StreamName: StreamName
    EnforceConsumerDeletion: Optional[BooleanObject] = None


class DeregisterStreamConsumerInput(BaseModel):
    StreamARN: Optional[StreamARN] = None
    ConsumerName: Optional[ConsumerName] = None
    ConsumerARN: Optional[ConsumerARN] = None


class DescribeLimitsOutput(BaseModel):
    ShardLimit: ShardCountObject
    OpenShardCount: ShardCountObject


class DescribeStreamInput(BaseModel):
    """
    Represents the input for <code>DescribeStream</code>.
    """

    StreamName: StreamName
    Limit: Optional[DescribeStreamInputLimit] = None
    ExclusiveStartShardId: Optional[ShardId] = None


class DescribeStreamConsumerOutput(BaseModel):
    ConsumerDescription: ConsumerDescription


class DescribeStreamConsumerInput(BaseModel):
    StreamARN: Optional[StreamARN] = None
    ConsumerName: Optional[ConsumerName] = None
    ConsumerARN: Optional[ConsumerARN] = None


class DescribeStreamSummaryInput(BaseModel):
    StreamName: StreamName


class GetRecordsInput(BaseModel):
    """
    Represents the input for <a>GetRecords</a>.
    """

    ShardIterator: ShardIterator
    Limit: Optional[GetRecordsInputLimit] = None


class GetShardIteratorOutput(BaseModel):
    """
    Represents the output for <code>GetShardIterator</code>.
    """

    ShardIterator: Optional[ShardIterator] = None


class GetShardIteratorInput(BaseModel):
    """
    Represents the input for <code>GetShardIterator</code>.
    """

    StreamName: StreamName
    ShardId: ShardId
    ShardIteratorType: ShardIteratorType
    StartingSequenceNumber: Optional[SequenceNumber] = None
    Timestamp: Optional[Timestamp] = None


class IncreaseStreamRetentionPeriodInput(BaseModel):
    """
    Represents the input for <a>IncreaseStreamRetentionPeriod</a>.
    """

    StreamName: StreamName
    RetentionPeriodHours: RetentionPeriodHours


class ListStreamConsumersOutput(BaseModel):
    Consumers: Optional[ConsumerList] = None
    NextToken: Optional[NextToken] = None


class ListStreamConsumersInput(BaseModel):
    StreamARN: StreamARN
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[ListStreamConsumersInputLimit] = None
    StreamCreationTimestamp: Optional[Timestamp] = None


class ListStreamsOutput(BaseModel):
    """
    Represents the output for <code>ListStreams</code>.
    """

    StreamNames: StreamNameList
    HasMoreStreams: BooleanObject


class ListStreamsInput(BaseModel):
    """
    Represents the input for <code>ListStreams</code>.
    """

    Limit: Optional[ListStreamsInputLimit] = None
    ExclusiveStartStreamName: Optional[StreamName] = None


class ListTagsForStreamInput(BaseModel):
    """
    Represents the input for <code>ListTagsForStream</code>.
    """

    StreamName: StreamName
    ExclusiveStartTagKey: Optional[TagKey] = None
    Limit: Optional[ListTagsForStreamInputLimit] = None


class MergeShardsInput(BaseModel):
    """
    Represents the input for <code>MergeShards</code>.
    """

    StreamName: StreamName
    ShardToMerge: ShardId
    AdjacentShardToMerge: ShardId


class PutRecordOutput(BaseModel):
    """
    Represents the output for <code>PutRecord</code>.
    """

    ShardId: ShardId
    SequenceNumber: SequenceNumber
    EncryptionType: Optional[EncryptionType] = None


class PutRecordInput(BaseModel):
    """
    Represents the input for <code>PutRecord</code>.
    """

    StreamName: StreamName
    Data: Data
    PartitionKey: PartitionKey
    ExplicitHashKey: Optional[HashKey] = None
    SequenceNumberForOrdering: Optional[SequenceNumber] = None


class RegisterStreamConsumerOutput(BaseModel):
    Consumer: Consumer


class RegisterStreamConsumerInput(BaseModel):
    StreamARN: StreamARN
    ConsumerName: ConsumerName


class RemoveTagsFromStreamInput(BaseModel):
    """
    Represents the input for <code>RemoveTagsFromStream</code>.
    """

    StreamName: StreamName
    TagKeys: TagKeyList


class SplitShardInput(BaseModel):
    """
    Represents the input for <code>SplitShard</code>.
    """

    StreamName: StreamName
    ShardToSplit: ShardId
    NewStartingHashKey: HashKey


class StartStreamEncryptionInput(BaseModel):
    StreamName: StreamName
    EncryptionType: EncryptionType
    KeyId: KeyId


class StopStreamEncryptionInput(BaseModel):
    StreamName: StreamName
    EncryptionType: EncryptionType
    KeyId: KeyId


class UpdateShardCountOutput(BaseModel):
    StreamName: Optional[StreamName] = None
    CurrentShardCount: Optional[PositiveIntegerObject] = None
    TargetShardCount: Optional[PositiveIntegerObject] = None


class UpdateShardCountInput(BaseModel):
    StreamName: StreamName
    TargetShardCount: PositiveIntegerObject
    ScalingType: ScalingType


class HashKeyRange(BaseModel):
    """
    The range of possible hash key values for the shard, which is a set of ordered contiguous positive integers.
    """

    StartingHashKey: HashKey
    EndingHashKey: HashKey


class ChildShard(BaseModel):
    ShardId: ShardId
    ParentShards: ShardIdList
    HashKeyRange: HashKeyRange


class ChildShardList(BaseModel):
    __root__: List[ChildShard]


class MetricsNameList(BaseModel):
    __root__: Annotated[List[MetricsName], Field(max_items=7, min_items=1)]


class EnhancedMetrics(BaseModel):
    """
    Represents enhanced metrics types.
    """

    ShardLevelMetrics: Optional[MetricsNameList] = None


class EnhancedMonitoringList(BaseModel):
    __root__: List[EnhancedMetrics]


class RecordList(BaseModel):
    __root__: List[Record]


class ShardFilter(BaseModel):
    Type: ShardFilterType
    ShardId: Optional[ShardId] = None
    Timestamp: Optional[Timestamp] = None


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200, min_items=0)]


class PutRecordsRequestEntryList(BaseModel):
    __root__: Annotated[List[PutRecordsRequestEntry], Field(max_items=500, min_items=1)]


class PutRecordsResultEntryList(BaseModel):
    __root__: Annotated[List[PutRecordsResultEntry], Field(max_items=500, min_items=1)]


class Shard(BaseModel):
    """
    A uniquely identified group of data records in a Kinesis data stream.
    """

    ShardId: ShardId
    ParentShardId: Optional[ShardId] = None
    AdjacentParentShardId: Optional[ShardId] = None
    HashKeyRange: HashKeyRange
    SequenceNumberRange: SequenceNumberRange


class EnhancedMonitoringOutput(BaseModel):
    """
    Represents the output for <a>EnableEnhancedMonitoring</a> and <a>DisableEnhancedMonitoring</a>.
    """

    StreamName: Optional[StreamName] = None
    CurrentShardLevelMetrics: Optional[MetricsNameList] = None
    DesiredShardLevelMetrics: Optional[MetricsNameList] = None


class DisableEnhancedMonitoringInput(BaseModel):
    """
    Represents the input for <a>DisableEnhancedMonitoring</a>.
    """

    StreamName: StreamName
    ShardLevelMetrics: MetricsNameList


class EnableEnhancedMonitoringInput(BaseModel):
    """
    Represents the input for <a>EnableEnhancedMonitoring</a>.
    """

    StreamName: StreamName
    ShardLevelMetrics: MetricsNameList


class GetRecordsOutput(BaseModel):
    """
    Represents the output for <a>GetRecords</a>.
    """

    Records: RecordList
    NextShardIterator: Optional[ShardIterator] = None
    MillisBehindLatest: Optional[MillisBehindLatest] = None
    ChildShards: Optional[ChildShardList] = None


class ListShardsInput(BaseModel):
    StreamName: Optional[StreamName] = None
    NextToken: Optional[NextToken] = None
    ExclusiveStartShardId: Optional[ShardId] = None
    MaxResults: Optional[ListShardsInputLimit] = None
    StreamCreationTimestamp: Optional[Timestamp] = None
    ShardFilter: Optional[ShardFilter] = None


class ListTagsForStreamOutput(BaseModel):
    """
    Represents the output for <code>ListTagsForStream</code>.
    """

    Tags: TagList
    HasMoreTags: BooleanObject


class PutRecordsOutput(BaseModel):
    """
    <code>PutRecords</code> results.
    """

    FailedRecordCount: Optional[PositiveIntegerObject] = None
    Records: PutRecordsResultEntryList
    EncryptionType: Optional[EncryptionType] = None


class PutRecordsInput(BaseModel):
    """
    A <code>PutRecords</code> request.
    """

    Records: PutRecordsRequestEntryList
    StreamName: StreamName


class StreamDescriptionSummary(BaseModel):
    """
    Represents the output for <a>DescribeStreamSummary</a>
    """

    StreamName: StreamName
    StreamARN: StreamARN
    StreamStatus: StreamStatus
    RetentionPeriodHours: RetentionPeriodHours
    StreamCreationTimestamp: Timestamp
    EnhancedMonitoring: EnhancedMonitoringList
    EncryptionType: Optional[EncryptionType] = None
    KeyId: Optional[KeyId] = None
    OpenShardCount: ShardCountObject
    ConsumerCount: Optional[ConsumerCountObject] = None


class ShardList(BaseModel):
    __root__: List[Shard]


class DescribeStreamSummaryOutput(BaseModel):
    StreamDescriptionSummary: StreamDescriptionSummary


class ListShardsOutput(BaseModel):
    Shards: Optional[ShardList] = None
    NextToken: Optional[NextToken] = None


class StreamDescription(BaseModel):
    """
    Represents the output for <a>DescribeStream</a>.
    """

    StreamName: StreamName
    StreamARN: StreamARN
    StreamStatus: StreamStatus
    Shards: ShardList
    HasMoreShards: BooleanObject
    RetentionPeriodHours: RetentionPeriodHours
    StreamCreationTimestamp: Timestamp
    EnhancedMonitoring: EnhancedMonitoringList
    EncryptionType: Optional[EncryptionType] = None
    KeyId: Optional[KeyId] = None


class DescribeStreamOutput(BaseModel):
    """
    Represents the output for <code>DescribeStream</code>.
    """

    StreamDescription: StreamDescription

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:51:31+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra, Field, SecretStr


class NotFoundException(BaseModel):
    __root__: Any


class InvalidArnException(NotFoundException):
    pass


class DependencyTimeoutException(NotFoundException):
    pass


class KMSInternalException(NotFoundException):
    pass


class KMSInvalidStateException(NotFoundException):
    pass


class ConnectCustomKeyStoreResponse(BaseModel):
    pass


class CloudHsmClusterNotActiveException(NotFoundException):
    pass


class CustomKeyStoreInvalidStateException(NotFoundException):
    pass


class CustomKeyStoreNotFoundException(NotFoundException):
    pass


class CloudHsmClusterInvalidConfigurationException(NotFoundException):
    pass


class AlreadyExistsException(NotFoundException):
    pass


class InvalidAliasNameException(NotFoundException):
    pass


class LimitExceededException(NotFoundException):
    pass


class CloudHsmClusterInUseException(NotFoundException):
    pass


class CustomKeyStoreNameInUseException(NotFoundException):
    pass


class CloudHsmClusterNotFoundException(NotFoundException):
    pass


class IncorrectTrustAnchorException(NotFoundException):
    pass


class DisabledException(NotFoundException):
    pass


class InvalidGrantTokenException(NotFoundException):
    pass


class MalformedPolicyDocumentException(NotFoundException):
    pass


class UnsupportedOperationException(NotFoundException):
    pass


class TagException(NotFoundException):
    pass


class InvalidCiphertextException(NotFoundException):
    pass


class KeyUnavailableException(NotFoundException):
    pass


class IncorrectKeyException(NotFoundException):
    pass


class InvalidKeyUsageException(NotFoundException):
    pass


class DeleteCustomKeyStoreResponse(ConnectCustomKeyStoreResponse):
    pass


class CustomKeyStoreHasCMKsException(NotFoundException):
    pass


class InvalidMarkerException(NotFoundException):
    pass


class DisconnectCustomKeyStoreResponse(ConnectCustomKeyStoreResponse):
    pass


class ImportKeyMaterialResponse(ConnectCustomKeyStoreResponse):
    pass


class IncorrectKeyMaterialException(NotFoundException):
    pass


class ExpiredImportTokenException(NotFoundException):
    pass


class InvalidImportTokenException(NotFoundException):
    pass


class InvalidGrantIdException(NotFoundException):
    pass


class UpdateCustomKeyStoreResponse(ConnectCustomKeyStoreResponse):
    pass


class CloudHsmClusterNotRelatedException(NotFoundException):
    pass


class KMSInvalidSignatureException(NotFoundException):
    pass


class AWSAccountIdType(BaseModel):
    __root__: str


class AlgorithmSpec(Enum):
    RSAES_PKCS1_V1_5 = 'RSAES_PKCS1_V1_5'
    RSAES_OAEP_SHA_1 = 'RSAES_OAEP_SHA_1'
    RSAES_OAEP_SHA_256 = 'RSAES_OAEP_SHA_256'


class AliasNameType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^[a-zA-Z0-9:/_-]+$')
    ]


class ArnType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=20)]


class KeyIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=2048, min_length=1)]


class DateType(BaseModel):
    __root__: datetime


class BooleanType(BaseModel):
    __root__: bool


class CiphertextType(BaseModel):
    __root__: Annotated[str, Field(max_length=6144, min_length=1)]


class CloudHsmClusterIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=24, min_length=19)]


class CustomKeyStoreIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class ConnectionErrorCodeType(Enum):
    INVALID_CREDENTIALS = 'INVALID_CREDENTIALS'
    CLUSTER_NOT_FOUND = 'CLUSTER_NOT_FOUND'
    NETWORK_ERRORS = 'NETWORK_ERRORS'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    INSUFFICIENT_CLOUDHSM_HSMS = 'INSUFFICIENT_CLOUDHSM_HSMS'
    USER_LOCKED_OUT = 'USER_LOCKED_OUT'
    USER_NOT_FOUND = 'USER_NOT_FOUND'
    USER_LOGGED_IN = 'USER_LOGGED_IN'
    SUBNET_NOT_FOUND = 'SUBNET_NOT_FOUND'


class ConnectionStateType(Enum):
    CONNECTED = 'CONNECTED'
    CONNECTING = 'CONNECTING'
    FAILED = 'FAILED'
    DISCONNECTED = 'DISCONNECTED'
    DISCONNECTING = 'DISCONNECTING'


class CustomKeyStoreNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class TrustAnchorCertificateType(BaseModel):
    __root__: Annotated[str, Field(max_length=5000, min_length=1)]


class KeyStorePasswordType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=32, min_length=7)]


class PrincipalIdType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=256, min_length=1, regex='^[\\w+=,.@:/-]+$')
    ]


class GrantNameType(AliasNameType):
    pass


class GrantTokenType(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=1)]


class GrantIdType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class PolicyType(BaseModel):
    __root__: Annotated[
        str,
        Field(
            max_length=131072,
            min_length=1,
            regex='[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+',
        ),
    ]


class DescriptionType(BaseModel):
    __root__: Annotated[str, Field(max_length=8192, min_length=0)]


class KeyUsageType(Enum):
    SIGN_VERIFY = 'SIGN_VERIFY'
    ENCRYPT_DECRYPT = 'ENCRYPT_DECRYPT'


class CustomerMasterKeySpec(Enum):
    """
    This enum has been deprecated. Instead, use the KeySpec enum.
    """

    RSA_2048 = 'RSA_2048'
    RSA_3072 = 'RSA_3072'
    RSA_4096 = 'RSA_4096'
    ECC_NIST_P256 = 'ECC_NIST_P256'
    ECC_NIST_P384 = 'ECC_NIST_P384'
    ECC_NIST_P521 = 'ECC_NIST_P521'
    ECC_SECG_P256K1 = 'ECC_SECG_P256K1'
    SYMMETRIC_DEFAULT = 'SYMMETRIC_DEFAULT'


class OriginType(Enum):
    AWS_KMS = 'AWS_KMS'
    EXTERNAL = 'EXTERNAL'
    AWS_CLOUDHSM = 'AWS_CLOUDHSM'


class NullableBooleanType(BooleanType):
    pass


class CustomKeyStoresListEntry(BaseModel):
    """
    Contains information about each custom key store in the custom key store list.
    """

    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None
    CustomKeyStoreName: Optional[CustomKeyStoreNameType] = None
    CloudHsmClusterId: Optional[CloudHsmClusterIdType] = None
    TrustAnchorCertificate: Optional[TrustAnchorCertificateType] = None
    ConnectionState: Optional[ConnectionStateType] = None
    ConnectionErrorCode: Optional[ConnectionErrorCodeType] = None
    CreationDate: Optional[DateType] = None


class CustomKeyStoresList(BaseModel):
    __root__: List[CustomKeyStoresListEntry]


class DataKeyPairSpec(Enum):
    RSA_2048 = 'RSA_2048'
    RSA_3072 = 'RSA_3072'
    RSA_4096 = 'RSA_4096'
    ECC_NIST_P256 = 'ECC_NIST_P256'
    ECC_NIST_P384 = 'ECC_NIST_P384'
    ECC_NIST_P521 = 'ECC_NIST_P521'
    ECC_SECG_P256K1 = 'ECC_SECG_P256K1'


class DataKeySpec(Enum):
    AES_256 = 'AES_256'
    AES_128 = 'AES_128'


class EncryptionContextType(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class EncryptionAlgorithmSpec(Enum):
    SYMMETRIC_DEFAULT = 'SYMMETRIC_DEFAULT'
    RSAES_OAEP_SHA_1 = 'RSAES_OAEP_SHA_1'
    RSAES_OAEP_SHA_256 = 'RSAES_OAEP_SHA_256'


class PlaintextType(BaseModel):
    __root__: Annotated[SecretStr, Field(max_length=4096, min_length=1)]


class LimitType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1000.0)]


class MarkerType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=1024, min_length=1, regex='[\\u0020-\\u00FF]*')
    ]


class EncryptionAlgorithmSpecList(BaseModel):
    __root__: List[EncryptionAlgorithmSpec]


class EncryptionContextKey(AWSAccountIdType):
    pass


class EncryptionContextValue(AWSAccountIdType):
    pass


class ExpirationModelType(Enum):
    KEY_MATERIAL_EXPIRES = 'KEY_MATERIAL_EXPIRES'
    KEY_MATERIAL_DOES_NOT_EXPIRE = 'KEY_MATERIAL_DOES_NOT_EXPIRE'


class PublicKeyType(GrantTokenType):
    pass


class NumberOfBytesType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=1024.0)]


class PolicyNameType(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1, regex='[\\w]+')]


class WrappingKeySpec(Enum):
    RSA_2048 = 'RSA_2048'


class GrantOperation(Enum):
    Decrypt = 'Decrypt'
    Encrypt = 'Encrypt'
    GenerateDataKey = 'GenerateDataKey'
    GenerateDataKeyWithoutPlaintext = 'GenerateDataKeyWithoutPlaintext'
    ReEncryptFrom = 'ReEncryptFrom'
    ReEncryptTo = 'ReEncryptTo'
    Sign = 'Sign'
    Verify = 'Verify'
    GetPublicKey = 'GetPublicKey'
    CreateGrant = 'CreateGrant'
    RetireGrant = 'RetireGrant'
    DescribeKey = 'DescribeKey'
    GenerateDataKeyPair = 'GenerateDataKeyPair'
    GenerateDataKeyPairWithoutPlaintext = 'GenerateDataKeyPairWithoutPlaintext'


class KeyListEntry(BaseModel):
    """
    Contains information about each entry in the key list.
    """

    KeyId: Optional[KeyIdType] = None
    KeyArn: Optional[ArnType] = None


class KeyList(BaseModel):
    __root__: List[KeyListEntry]


class KeyManagerType(Enum):
    AWS = 'AWS'
    CUSTOMER = 'CUSTOMER'


class KeyState(Enum):
    Creating = 'Creating'
    Enabled = 'Enabled'
    Disabled = 'Disabled'
    PendingDeletion = 'PendingDeletion'
    PendingImport = 'PendingImport'
    PendingReplicaDeletion = 'PendingReplicaDeletion'
    Unavailable = 'Unavailable'
    Updating = 'Updating'


class PendingWindowInDaysType(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=365.0)]


class PolicyNameList(BaseModel):
    __root__: List[PolicyNameType]


class MessageType(Enum):
    RAW = 'RAW'
    DIGEST = 'DIGEST'


class MultiRegionKeyType(Enum):
    PRIMARY = 'PRIMARY'
    REPLICA = 'REPLICA'


class RegionType(BaseModel):
    __root__: Annotated[
        str, Field(max_length=32, min_length=1, regex='^([a-z]+-){2,3}\\d+$')
    ]


class SigningAlgorithmSpec(Enum):
    RSASSA_PSS_SHA_256 = 'RSASSA_PSS_SHA_256'
    RSASSA_PSS_SHA_384 = 'RSASSA_PSS_SHA_384'
    RSASSA_PSS_SHA_512 = 'RSASSA_PSS_SHA_512'
    RSASSA_PKCS1_V1_5_SHA_256 = 'RSASSA_PKCS1_V1_5_SHA_256'
    RSASSA_PKCS1_V1_5_SHA_384 = 'RSASSA_PKCS1_V1_5_SHA_384'
    RSASSA_PKCS1_V1_5_SHA_512 = 'RSASSA_PKCS1_V1_5_SHA_512'
    ECDSA_SHA_256 = 'ECDSA_SHA_256'
    ECDSA_SHA_384 = 'ECDSA_SHA_384'
    ECDSA_SHA_512 = 'ECDSA_SHA_512'


class TagKeyType(GrantIdType):
    pass


class TagValueType(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    <p>A key-value pair. A tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty (null) strings.</p> <p>For information about the rules that apply to tag keys and tag values, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html">User-Defined Tag Restrictions</a> in the <i>Amazon Web Services Billing and Cost Management User Guide</i>.</p>
    """

    TagKey: TagKeyType
    TagValue: TagValueType


class TagKeyList(BaseModel):
    __root__: List[TagKeyType]


class CancelKeyDeletionResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None


class CancelKeyDeletionRequest(BaseModel):
    KeyId: KeyIdType


class ConnectCustomKeyStoreRequest(BaseModel):
    CustomKeyStoreId: CustomKeyStoreIdType


class CreateAliasRequest(BaseModel):
    AliasName: AliasNameType
    TargetKeyId: KeyIdType


class CreateCustomKeyStoreResponse(BaseModel):
    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None


class CreateCustomKeyStoreRequest(BaseModel):
    CustomKeyStoreName: CustomKeyStoreNameType
    CloudHsmClusterId: CloudHsmClusterIdType
    TrustAnchorCertificate: TrustAnchorCertificateType
    KeyStorePassword: KeyStorePasswordType


class CreateGrantResponse(BaseModel):
    GrantToken: Optional[GrantTokenType] = None
    GrantId: Optional[GrantIdType] = None


class DecryptResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    Plaintext: Optional[PlaintextType] = None
    EncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None


class DeleteAliasRequest(BaseModel):
    AliasName: AliasNameType


class DeleteCustomKeyStoreRequest(BaseModel):
    CustomKeyStoreId: CustomKeyStoreIdType


class DeleteImportedKeyMaterialRequest(BaseModel):
    KeyId: KeyIdType


class DescribeCustomKeyStoresResponse(BaseModel):
    CustomKeyStores: Optional[CustomKeyStoresList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class DescribeCustomKeyStoresRequest(BaseModel):
    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None
    CustomKeyStoreName: Optional[CustomKeyStoreNameType] = None
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None


class DisableKeyRequest(BaseModel):
    KeyId: KeyIdType


class DisableKeyRotationRequest(BaseModel):
    KeyId: KeyIdType


class DisconnectCustomKeyStoreRequest(BaseModel):
    CustomKeyStoreId: CustomKeyStoreIdType


class EnableKeyRequest(BaseModel):
    KeyId: KeyIdType


class EnableKeyRotationRequest(BaseModel):
    KeyId: KeyIdType


class EncryptResponse(BaseModel):
    CiphertextBlob: Optional[CiphertextType] = None
    KeyId: Optional[KeyIdType] = None
    EncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None


class GenerateDataKeyResponse(BaseModel):
    CiphertextBlob: Optional[CiphertextType] = None
    Plaintext: Optional[PlaintextType] = None
    KeyId: Optional[KeyIdType] = None


class GenerateDataKeyPairResponse(BaseModel):
    PrivateKeyCiphertextBlob: Optional[CiphertextType] = None
    PrivateKeyPlaintext: Optional[PlaintextType] = None
    PublicKey: Optional[PublicKeyType] = None
    KeyId: Optional[KeyIdType] = None
    KeyPairSpec: Optional[DataKeyPairSpec] = None


class GenerateDataKeyPairWithoutPlaintextResponse(BaseModel):
    PrivateKeyCiphertextBlob: Optional[CiphertextType] = None
    PublicKey: Optional[PublicKeyType] = None
    KeyId: Optional[KeyIdType] = None
    KeyPairSpec: Optional[DataKeyPairSpec] = None


class GenerateDataKeyWithoutPlaintextResponse(BaseModel):
    CiphertextBlob: Optional[CiphertextType] = None
    KeyId: Optional[KeyIdType] = None


class GenerateRandomResponse(BaseModel):
    Plaintext: Optional[PlaintextType] = None


class GenerateRandomRequest(BaseModel):
    NumberOfBytes: Optional[NumberOfBytesType] = None
    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None


class GetKeyPolicyResponse(BaseModel):
    Policy: Optional[PolicyType] = None


class GetKeyPolicyRequest(BaseModel):
    KeyId: KeyIdType
    PolicyName: PolicyNameType


class GetKeyRotationStatusResponse(BaseModel):
    KeyRotationEnabled: Optional[BooleanType] = None


class GetKeyRotationStatusRequest(BaseModel):
    KeyId: KeyIdType


class GetParametersForImportResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    ImportToken: Optional[CiphertextType] = None
    PublicKey: Optional[PlaintextType] = None
    ParametersValidTo: Optional[DateType] = None


class GetParametersForImportRequest(BaseModel):
    KeyId: KeyIdType
    WrappingAlgorithm: AlgorithmSpec
    WrappingKeySpec: WrappingKeySpec


class ImportKeyMaterialRequest(BaseModel):
    KeyId: KeyIdType
    ImportToken: CiphertextType
    EncryptedKeyMaterial: CiphertextType
    ValidTo: Optional[DateType] = None
    ExpirationModel: Optional[ExpirationModelType] = None


class ListAliasesRequest(BaseModel):
    KeyId: Optional[KeyIdType] = None
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None


class ListGrantsRequest(BaseModel):
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None
    KeyId: KeyIdType
    GrantId: Optional[GrantIdType] = None
    GranteePrincipal: Optional[PrincipalIdType] = None


class ListKeyPoliciesResponse(BaseModel):
    PolicyNames: Optional[PolicyNameList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class ListKeyPoliciesRequest(BaseModel):
    KeyId: KeyIdType
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None


class ListKeysResponse(BaseModel):
    Keys: Optional[KeyList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class ListKeysRequest(BaseModel):
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None


class ListResourceTagsRequest(BaseModel):
    KeyId: KeyIdType
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None


class ListRetirableGrantsRequest(BaseModel):
    Limit: Optional[LimitType] = None
    Marker: Optional[MarkerType] = None
    RetiringPrincipal: PrincipalIdType


class PutKeyPolicyRequest(BaseModel):
    KeyId: KeyIdType
    PolicyName: PolicyNameType
    Policy: PolicyType
    BypassPolicyLockoutSafetyCheck: Optional[BooleanType] = None


class ReEncryptResponse(BaseModel):
    CiphertextBlob: Optional[CiphertextType] = None
    SourceKeyId: Optional[KeyIdType] = None
    KeyId: Optional[KeyIdType] = None
    SourceEncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None
    DestinationEncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None


class RetireGrantRequest(BaseModel):
    GrantToken: Optional[GrantTokenType] = None
    KeyId: Optional[KeyIdType] = None
    GrantId: Optional[GrantIdType] = None


class RevokeGrantRequest(BaseModel):
    KeyId: KeyIdType
    GrantId: GrantIdType


class ScheduleKeyDeletionResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    DeletionDate: Optional[DateType] = None
    KeyState: Optional[KeyState] = None
    PendingWindowInDays: Optional[PendingWindowInDaysType] = None


class ScheduleKeyDeletionRequest(BaseModel):
    KeyId: KeyIdType
    PendingWindowInDays: Optional[PendingWindowInDaysType] = None


class SignResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    Signature: Optional[CiphertextType] = None
    SigningAlgorithm: Optional[SigningAlgorithmSpec] = None


class UntagResourceRequest(BaseModel):
    KeyId: KeyIdType
    TagKeys: TagKeyList


class UpdateAliasRequest(BaseModel):
    AliasName: AliasNameType
    TargetKeyId: KeyIdType


class UpdateCustomKeyStoreRequest(BaseModel):
    CustomKeyStoreId: CustomKeyStoreIdType
    NewCustomKeyStoreName: Optional[CustomKeyStoreNameType] = None
    KeyStorePassword: Optional[KeyStorePasswordType] = None
    CloudHsmClusterId: Optional[CloudHsmClusterIdType] = None


class UpdateKeyDescriptionRequest(BaseModel):
    KeyId: KeyIdType
    Description: DescriptionType


class UpdatePrimaryRegionRequest(BaseModel):
    KeyId: KeyIdType
    PrimaryRegion: RegionType


class VerifyResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    SignatureValid: Optional[BooleanType] = None
    SigningAlgorithm: Optional[SigningAlgorithmSpec] = None


class AliasListEntry(BaseModel):
    """
    Contains information about an alias.
    """

    AliasName: Optional[AliasNameType] = None
    AliasArn: Optional[ArnType] = None
    TargetKeyId: Optional[KeyIdType] = None
    CreationDate: Optional[DateType] = None
    LastUpdatedDate: Optional[DateType] = None


class AliasList(BaseModel):
    __root__: List[AliasListEntry]


class GrantOperationList(BaseModel):
    __root__: List[GrantOperation]


class GrantConstraints(BaseModel):
    """
    <p>Use this structure to allow <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations">cryptographic operations</a> in the grant only when the operation request includes the specified <a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context">encryption context</a>. </p> <p>KMS applies the grant constraints only to cryptographic operations that support an encryption context, that is, all cryptographic operations with a <a href="https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html#symmetric-cmks">symmetric KMS key</a>. Grant constraints are not applied to operations that do not support an encryption context, such as cryptographic operations with asymmetric KMS keys and management operations, such as <a>DescribeKey</a> or <a>RetireGrant</a>.</p> <important> <p>In a cryptographic operation, the encryption context in the decryption operation must be an exact, case-sensitive match for the keys and values in the encryption context of the encryption operation. Only the order of the pairs can vary.</p> <p>However, in a grant constraint, the key in each key-value pair is not case sensitive, but the value is case sensitive.</p> <p>To avoid confusion, do not use multiple encryption context pairs that differ only by case. To require a fully case-sensitive encryption context, use the <code>kms:EncryptionContext:</code> and <code>kms:EncryptionContextKeys</code> conditions in an IAM or key policy. For details, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/policy-conditions.html#conditions-kms-encryption-context">kms:EncryptionContext:</a> in the <i> <i>Key Management Service Developer Guide</i> </i>.</p> </important>
    """

    EncryptionContextSubset: Optional[EncryptionContextType] = None
    EncryptionContextEquals: Optional[EncryptionContextType] = None


class GrantTokenList(BaseModel):
    __root__: Annotated[List[GrantTokenType], Field(max_items=10, min_items=0)]


class TagList(BaseModel):
    __root__: List[Tag]


class SigningAlgorithmSpecList(BaseModel):
    __root__: List[SigningAlgorithmSpec]


class GrantListEntry(BaseModel):
    """
    Contains information about a grant.
    """

    KeyId: Optional[KeyIdType] = None
    GrantId: Optional[GrantIdType] = None
    Name: Optional[GrantNameType] = None
    CreationDate: Optional[DateType] = None
    GranteePrincipal: Optional[PrincipalIdType] = None
    RetiringPrincipal: Optional[PrincipalIdType] = None
    IssuingAccount: Optional[PrincipalIdType] = None
    Operations: Optional[GrantOperationList] = None
    Constraints: Optional[GrantConstraints] = None


class GrantList(BaseModel):
    __root__: List[GrantListEntry]


class MultiRegionKey(BaseModel):
    """
    Describes the primary or replica key in a multi-Region key.
    """

    Arn: Optional[ArnType] = None
    Region: Optional[RegionType] = None


class MultiRegionKeyList(BaseModel):
    __root__: List[MultiRegionKey]


class CreateGrantRequest(BaseModel):
    KeyId: KeyIdType
    GranteePrincipal: PrincipalIdType
    RetiringPrincipal: Optional[PrincipalIdType] = None
    Operations: GrantOperationList
    Constraints: Optional[GrantConstraints] = None
    GrantTokens: Optional[GrantTokenList] = None
    Name: Optional[GrantNameType] = None


class CreateKeyRequest(BaseModel):
    Policy: Optional[PolicyType] = None
    Description: Optional[DescriptionType] = None
    KeyUsage: Optional[KeyUsageType] = None
    CustomerMasterKeySpec: Optional[CustomerMasterKeySpec] = None
    KeySpec: Optional[CustomerMasterKeySpec] = None
    Origin: Optional[OriginType] = None
    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None
    BypassPolicyLockoutSafetyCheck: Optional[BooleanType] = None
    Tags: Optional[TagList] = None
    MultiRegion: Optional[NullableBooleanType] = None


class DecryptRequest(BaseModel):
    CiphertextBlob: CiphertextType
    EncryptionContext: Optional[EncryptionContextType] = None
    GrantTokens: Optional[GrantTokenList] = None
    KeyId: Optional[KeyIdType] = None
    EncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None


class DescribeKeyRequest(BaseModel):
    KeyId: KeyIdType
    GrantTokens: Optional[GrantTokenList] = None


class EncryptRequest(BaseModel):
    KeyId: KeyIdType
    Plaintext: PlaintextType
    EncryptionContext: Optional[EncryptionContextType] = None
    GrantTokens: Optional[GrantTokenList] = None
    EncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None


class GenerateDataKeyRequest(BaseModel):
    KeyId: KeyIdType
    EncryptionContext: Optional[EncryptionContextType] = None
    NumberOfBytes: Optional[NumberOfBytesType] = None
    KeySpec: Optional[DataKeySpec] = None
    GrantTokens: Optional[GrantTokenList] = None


class GenerateDataKeyPairRequest(BaseModel):
    EncryptionContext: Optional[EncryptionContextType] = None
    KeyId: KeyIdType
    KeyPairSpec: DataKeyPairSpec
    GrantTokens: Optional[GrantTokenList] = None


class GenerateDataKeyPairWithoutPlaintextRequest(BaseModel):
    EncryptionContext: Optional[EncryptionContextType] = None
    KeyId: KeyIdType
    KeyPairSpec: DataKeyPairSpec
    GrantTokens: Optional[GrantTokenList] = None


class GenerateDataKeyWithoutPlaintextRequest(BaseModel):
    KeyId: KeyIdType
    EncryptionContext: Optional[EncryptionContextType] = None
    KeySpec: Optional[DataKeySpec] = None
    NumberOfBytes: Optional[NumberOfBytesType] = None
    GrantTokens: Optional[GrantTokenList] = None


class GetPublicKeyResponse(BaseModel):
    KeyId: Optional[KeyIdType] = None
    PublicKey: Optional[PublicKeyType] = None
    CustomerMasterKeySpec: Optional[CustomerMasterKeySpec] = None
    KeySpec: Optional[CustomerMasterKeySpec] = None
    KeyUsage: Optional[KeyUsageType] = None
    EncryptionAlgorithms: Optional[EncryptionAlgorithmSpecList] = None
    SigningAlgorithms: Optional[SigningAlgorithmSpecList] = None


class GetPublicKeyRequest(BaseModel):
    KeyId: KeyIdType
    GrantTokens: Optional[GrantTokenList] = None


class ListAliasesResponse(BaseModel):
    Aliases: Optional[AliasList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class ListGrantsResponse(BaseModel):
    Grants: Optional[GrantList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class ListResourceTagsResponse(BaseModel):
    Tags: Optional[TagList] = None
    NextMarker: Optional[MarkerType] = None
    Truncated: Optional[BooleanType] = None


class ReEncryptRequest(BaseModel):
    CiphertextBlob: CiphertextType
    SourceEncryptionContext: Optional[EncryptionContextType] = None
    SourceKeyId: Optional[KeyIdType] = None
    DestinationKeyId: KeyIdType
    DestinationEncryptionContext: Optional[EncryptionContextType] = None
    SourceEncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None
    DestinationEncryptionAlgorithm: Optional[EncryptionAlgorithmSpec] = None
    GrantTokens: Optional[GrantTokenList] = None


class ReplicateKeyRequest(BaseModel):
    KeyId: KeyIdType
    ReplicaRegion: RegionType
    Policy: Optional[PolicyType] = None
    BypassPolicyLockoutSafetyCheck: Optional[BooleanType] = None
    Description: Optional[DescriptionType] = None
    Tags: Optional[TagList] = None


class SignRequest(BaseModel):
    KeyId: KeyIdType
    Message: PlaintextType
    MessageType: Optional[MessageType] = None
    GrantTokens: Optional[GrantTokenList] = None
    SigningAlgorithm: SigningAlgorithmSpec


class TagResourceRequest(BaseModel):
    KeyId: KeyIdType
    Tags: TagList


class VerifyRequest(BaseModel):
    KeyId: KeyIdType
    Message: PlaintextType
    MessageType: Optional[MessageType] = None
    Signature: CiphertextType
    SigningAlgorithm: SigningAlgorithmSpec
    GrantTokens: Optional[GrantTokenList] = None


class MultiRegionConfiguration(BaseModel):
    """
    <p>Describes the configuration of this multi-Region key. This field appears only when the KMS key is a primary or replica of a multi-Region key.</p> <p>For more information about any listed KMS key, use the <a>DescribeKey</a> operation.</p>
    """

    MultiRegionKeyType: Optional[MultiRegionKeyType] = None
    PrimaryKey: Optional[MultiRegionKey] = None
    ReplicaKeys: Optional[MultiRegionKeyList] = None


class KeyMetadata(BaseModel):
    """
    <p>Contains metadata about a KMS key.</p> <p>This data type is used as a response element for the <a>CreateKey</a> and <a>DescribeKey</a> operations.</p>
    """

    AWSAccountId: Optional[AWSAccountIdType] = None
    KeyId: KeyIdType
    Arn: Optional[ArnType] = None
    CreationDate: Optional[DateType] = None
    Enabled: Optional[BooleanType] = None
    Description: Optional[DescriptionType] = None
    KeyUsage: Optional[KeyUsageType] = None
    KeyState: Optional[KeyState] = None
    DeletionDate: Optional[DateType] = None
    ValidTo: Optional[DateType] = None
    Origin: Optional[OriginType] = None
    CustomKeyStoreId: Optional[CustomKeyStoreIdType] = None
    CloudHsmClusterId: Optional[CloudHsmClusterIdType] = None
    ExpirationModel: Optional[ExpirationModelType] = None
    KeyManager: Optional[KeyManagerType] = None
    CustomerMasterKeySpec: Optional[CustomerMasterKeySpec] = None
    KeySpec: Optional[CustomerMasterKeySpec] = None
    EncryptionAlgorithms: Optional[EncryptionAlgorithmSpecList] = None
    SigningAlgorithms: Optional[SigningAlgorithmSpecList] = None
    MultiRegion: Optional[NullableBooleanType] = None
    MultiRegionConfiguration: Optional[MultiRegionConfiguration] = None
    PendingDeletionWindowInDays: Optional[PendingWindowInDaysType] = None


class CreateKeyResponse(BaseModel):
    KeyMetadata: Optional[KeyMetadata] = None


class DescribeKeyResponse(CreateKeyResponse):
    pass


class ReplicateKeyResponse(BaseModel):
    ReplicaKeyMetadata: Optional[KeyMetadata] = None
    ReplicaPolicy: Optional[PolicyType] = None
    ReplicaTags: Optional[TagList] = None

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:49:52+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Extra


class ResourceNotFoundException(BaseModel):
    __root__: Any


class InvalidParameterValueException(ResourceNotFoundException):
    pass


class MissingParameterValueException(ResourceNotFoundException):
    pass


class ServiceUnavailableException(ResourceNotFoundException):
    pass


class TagValue(BaseModel):
    __root__: str


class LimitExceededException(ResourceNotFoundException):
    pass


class ArchiveCreationOutput(BaseModel):
    """
    <p>Contains the Amazon S3 Glacier response to your request.</p> <p>For information about the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">Upload Archive</a>. For conceptual information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in Amazon S3 Glacier</a>.</p>
    """

    pass


class CreateVaultOutput(ArchiveCreationOutput):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    pass


class InitiateJobOutput(ArchiveCreationOutput):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    pass


class String(TagValue):
    pass


class InventoryRetrievalJobInput(BaseModel):
    """
    Provides options for specifying a range inventory retrieval job.
    """

    StartDate: Optional[String] = None
    EndDate: Optional[String] = None
    Limit: Optional[String] = None
    Marker: Optional[String] = None


class PolicyEnforcedException(ResourceNotFoundException):
    pass


class InsufficientCapacityException(ResourceNotFoundException):
    pass


class InitiateMultipartUploadOutput(ArchiveCreationOutput):
    """
    The Amazon S3 Glacier response to your request.
    """

    pass


class InitiateVaultLockOutput(ArchiveCreationOutput):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    pass


class PurchaseProvisionedCapacityOutput(ArchiveCreationOutput):
    pass


class NotificationEventList(BaseModel):
    __root__: List[String]


class RequestTimeoutException(ResourceNotFoundException):
    pass


class UploadMultipartPartOutput(ArchiveCreationOutput):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    pass


class AbortMultipartUploadInput(BaseModel):
    """
    <p>Provides options to abort a multipart upload identified by the upload ID.</p> <p>For information about the underlying REST API, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-abort-upload.html">Abort Multipart Upload</a>. For conceptual information, see <a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html">Working with Archives in Amazon S3 Glacier</a>.</p>
    """

    pass


class AbortVaultLockInput(BaseModel):
    """
    The input values for <code>AbortVaultLock</code>.
    """

    pass


class ActionCode(Enum):
    ArchiveRetrieval = 'ArchiveRetrieval'
    InventoryRetrieval = 'InventoryRetrieval'
    Select = 'Select'


class TagMap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class AddTagsToVaultInput(BaseModel):
    """
    The input values for <code>AddTagsToVault</code>.
    """

    Tags: Optional[TagMap] = None


class FileHeaderInfo(Enum):
    USE = 'USE'
    IGNORE = 'IGNORE'
    NONE = 'NONE'


class CSVInput(BaseModel):
    """
    Contains information about the comma-separated value (CSV) file to select from.
    """

    FileHeaderInfo: Optional[FileHeaderInfo] = None
    Comments: Optional[String] = None
    QuoteEscapeCharacter: Optional[String] = None
    RecordDelimiter: Optional[String] = None
    FieldDelimiter: Optional[String] = None
    QuoteCharacter: Optional[String] = None


class QuoteFields(Enum):
    ALWAYS = 'ALWAYS'
    ASNEEDED = 'ASNEEDED'


class CSVOutput(BaseModel):
    """
    Contains information about the comma-separated value (CSV) file that the job results are stored in.
    """

    QuoteFields: Optional[QuoteFields] = None
    QuoteEscapeCharacter: Optional[String] = None
    RecordDelimiter: Optional[String] = None
    FieldDelimiter: Optional[String] = None
    QuoteCharacter: Optional[String] = None


class CannedACL(Enum):
    private = 'private'
    public_read = 'public-read'
    public_read_write = 'public-read-write'
    aws_exec_read = 'aws-exec-read'
    authenticated_read = 'authenticated-read'
    bucket_owner_read = 'bucket-owner-read'
    bucket_owner_full_control = 'bucket-owner-full-control'


class CompleteMultipartUploadInput(BaseModel):
    """
    Provides options to complete a multipart upload operation. This informs Amazon Glacier that all the archive parts have been uploaded and Amazon S3 Glacier (Glacier) can now assemble the archive from the uploaded parts. After assembling and saving the archive to the vault, Glacier returns the URI path of the newly created archive resource.
    """

    pass


class CompleteVaultLockInput(BaseModel):
    """
    The input values for <code>CompleteVaultLock</code>.
    """

    pass


class CreateVaultInput(BaseModel):
    """
    Provides options to create a vault.
    """

    pass


class NullableLong(BaseModel):
    __root__: int


class DataRetrievalRule(BaseModel):
    """
    Data retrieval policy rule.
    """

    Strategy: Optional[String] = None
    BytesPerHour: Optional[NullableLong] = None


class DateTime(TagValue):
    pass


class DeleteArchiveInput(BaseModel):
    """
    Provides options for deleting an archive from an Amazon S3 Glacier vault.
    """

    pass


class DeleteVaultAccessPolicyInput(BaseModel):
    """
    DeleteVaultAccessPolicy input.
    """

    pass


class DeleteVaultInput(BaseModel):
    """
    Provides options for deleting a vault from Amazon S3 Glacier.
    """

    pass


class DeleteVaultNotificationsInput(BaseModel):
    """
    Provides options for deleting a vault notification configuration from an Amazon Glacier vault.
    """

    pass


class DescribeJobInput(BaseModel):
    """
    Provides options for retrieving a job description.
    """

    pass


class DescribeVaultInput(BaseModel):
    """
    Provides options for retrieving metadata for a specific vault in Amazon Glacier.
    """

    pass


class Long(NullableLong):
    pass


class EncryptionType(Enum):
    aws_kms = 'aws:kms'
    AES256 = 'AES256'


class Encryption(BaseModel):
    """
    Contains information about the encryption used to store the job results in Amazon S3.
    """

    EncryptionType: Optional[EncryptionType] = None
    KMSKeyId: Optional[String] = None
    KMSContext: Optional[String] = None


class ExpressionType(Enum):
    SQL = 'SQL'


class GetDataRetrievalPolicyInput(BaseModel):
    """
    Input for GetDataRetrievalPolicy.
    """

    pass


class GetJobOutputInput(BaseModel):
    """
    Provides options for downloading output of an Amazon S3 Glacier job.
    """

    pass


class Stream(TagValue):
    pass


class Httpstatus(NullableLong):
    pass


class GetVaultAccessPolicyInput(BaseModel):
    """
    Input for GetVaultAccessPolicy.
    """

    pass


class VaultAccessPolicy(BaseModel):
    """
    Contains the vault access policy.
    """

    Policy: Optional[String] = None


class GetVaultLockInput(BaseModel):
    """
    The input values for <code>GetVaultLock</code>.
    """

    pass


class GetVaultNotificationsInput(BaseModel):
    """
    Provides options for retrieving the notification configuration set on an Amazon Glacier vault.
    """

    pass


class VaultNotificationConfig(BaseModel):
    """
    Represents a vault's notification configuration.
    """

    SNSTopic: Optional[String] = None
    Events: Optional[NotificationEventList] = None


class Boolean(BaseModel):
    __root__: bool


class StatusCode(Enum):
    InProgress = 'InProgress'
    Succeeded = 'Succeeded'
    Failed = 'Failed'


class Size(NullableLong):
    pass


class InventoryRetrievalJobDescription(BaseModel):
    """
    Describes the options for a range inventory retrieval job.
    """

    Format: Optional[String] = None
    StartDate: Optional[DateTime] = None
    EndDate: Optional[DateTime] = None
    Limit: Optional[String] = None
    Marker: Optional[String] = None


class Permission(Enum):
    FULL_CONTROL = 'FULL_CONTROL'
    WRITE = 'WRITE'
    WRITE_ACP = 'WRITE_ACP'
    READ = 'READ'
    READ_ACP = 'READ_ACP'


class Type(Enum):
    AmazonCustomerByEmail = 'AmazonCustomerByEmail'
    CanonicalUser = 'CanonicalUser'
    Group = 'Group'


class InitiateMultipartUploadInput(BaseModel):
    """
    Provides options for initiating a multipart upload to an Amazon S3 Glacier vault.
    """

    pass


class VaultLockPolicy(VaultAccessPolicy):
    """
    Contains the vault lock policy.
    """

    pass


class InitiateVaultLockInput(BaseModel):
    """
    The input values for <code>InitiateVaultLock</code>.
    """

    policy: Optional[VaultLockPolicy] = None


class InputSerialization(BaseModel):
    """
    Describes how the archive is serialized.
    """

    csv: Optional[CSVInput] = None


class ListJobsInput(BaseModel):
    """
    Provides options for retrieving a job list for an Amazon S3 Glacier vault.
    """

    pass


class ListMultipartUploadsInput(BaseModel):
    """
    Provides options for retrieving list of in-progress multipart uploads for an Amazon Glacier vault.
    """

    pass


class ListPartsInput(BaseModel):
    """
    Provides options for retrieving a list of parts of an archive that have been uploaded in a specific multipart upload.
    """

    pass


class ListProvisionedCapacityInput(BaseModel):
    pass


class ListTagsForVaultInput(BaseModel):
    """
    The input value for <code>ListTagsForVaultInput</code>.
    """

    pass


class ListVaultsInput(BaseModel):
    """
    Provides options to retrieve the vault list owned by the calling user's account. The list provides metadata information for each vault.
    """

    pass


class OutputSerialization(BaseModel):
    """
    Describes how the select output is serialized.
    """

    csv: Optional[CSVOutput] = None


class PartListElement(BaseModel):
    """
    A list of the part sizes of the multipart upload.
    """

    RangeInBytes: Optional[String] = None
    SHA256TreeHash: Optional[String] = None


class ProvisionedCapacityDescription(BaseModel):
    """
    The definition for a provisioned capacity unit.
    """

    CapacityId: Optional[String] = None
    StartDate: Optional[String] = None
    ExpirationDate: Optional[String] = None


class PurchaseProvisionedCapacityInput(BaseModel):
    pass


class TagKeyList(NotificationEventList):
    pass


class RemoveTagsFromVaultInput(BaseModel):
    """
    The input value for <code>RemoveTagsFromVaultInput</code>.
    """

    TagKeys: Optional[TagKeyList] = None


class Hashmap(BaseModel):
    pass

    class Config:
        extra = Extra.allow


class StorageClass(Enum):
    STANDARD = 'STANDARD'
    REDUCED_REDUNDANCY = 'REDUCED_REDUNDANCY'
    STANDARD_IA = 'STANDARD_IA'


class SetVaultAccessPolicyInput(BaseModel):
    """
    SetVaultAccessPolicy input.
    """

    policy: Optional[VaultAccessPolicy] = None


class SetVaultNotificationsInput(BaseModel):
    """
    Provides options to configure notifications that will be sent when specific events happen to a vault.
    """

    vaultNotificationConfig: Optional[VaultNotificationConfig] = None


class TagKey(TagValue):
    pass


class UploadArchiveInput(BaseModel):
    """
    Provides options to add an archive to a vault.
    """

    body: Optional[Stream] = None


class UploadListElement(BaseModel):
    """
    A list of in-progress multipart uploads for a vault.
    """

    MultipartUploadId: Optional[String] = None
    VaultARN: Optional[String] = None
    ArchiveDescription: Optional[String] = None
    PartSizeInBytes: Optional[Long] = None
    CreationDate: Optional[String] = None


class UploadMultipartPartInput(BaseModel):
    """
    Provides options to upload a part of an archive in a multipart upload operation.
    """

    body: Optional[Stream] = None


class DescribeVaultOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    VaultARN: Optional[String] = None
    VaultName: Optional[String] = None
    CreationDate: Optional[String] = None
    LastInventoryDate: Optional[String] = None
    NumberOfArchives: Optional[Long] = None
    SizeInBytes: Optional[Long] = None


class GetJobOutputOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    body: Optional[Stream] = None
    status: Optional[Httpstatus] = None


class GetVaultAccessPolicyOutput(BaseModel):
    """
    Output for GetVaultAccessPolicy.
    """

    policy: Optional[VaultAccessPolicy] = None


class GetVaultLockOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    Policy: Optional[String] = None
    State: Optional[String] = None
    ExpirationDate: Optional[String] = None
    CreationDate: Optional[String] = None


class GetVaultNotificationsOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    vaultNotificationConfig: Optional[VaultNotificationConfig] = None


class SelectParameters(BaseModel):
    """
    Contains information about the parameters used for a select.
    """

    InputSerialization: Optional[InputSerialization] = None
    ExpressionType: Optional[ExpressionType] = None
    Expression: Optional[String] = None
    OutputSerialization: Optional[OutputSerialization] = None


class ListTagsForVaultOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    Tags: Optional[TagMap] = None


class DataRetrievalRulesList(BaseModel):
    __root__: List[DataRetrievalRule]


class DataRetrievalPolicy(BaseModel):
    """
    Data retrieval policy.
    """

    Rules: Optional[DataRetrievalRulesList] = None


class Grantee(BaseModel):
    """
    Contains information about the grantee.
    """

    Type: Type
    DisplayName: Optional[String] = None
    URI: Optional[String] = None
    ID: Optional[String] = None
    EmailAddress: Optional[String] = None


class UploadsList(BaseModel):
    __root__: List[UploadListElement]


class PartList(BaseModel):
    __root__: List[PartListElement]


class ProvisionedCapacityList(BaseModel):
    __root__: List[ProvisionedCapacityDescription]


class VaultList(BaseModel):
    __root__: List[DescribeVaultOutput]


class SetDataRetrievalPolicyInput(BaseModel):
    """
    SetDataRetrievalPolicy input.
    """

    Policy: Optional[DataRetrievalPolicy] = None


class GetDataRetrievalPolicyOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to the <code>GetDataRetrievalPolicy</code> request.
    """

    Policy: Optional[DataRetrievalPolicy] = None


class ListMultipartUploadsOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    UploadsList: Optional[UploadsList] = None
    Marker: Optional[String] = None


class ListPartsOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    MultipartUploadId: Optional[String] = None
    VaultARN: Optional[String] = None
    ArchiveDescription: Optional[String] = None
    PartSizeInBytes: Optional[Long] = None
    CreationDate: Optional[String] = None
    Parts: Optional[PartList] = None
    Marker: Optional[String] = None


class ListProvisionedCapacityOutput(BaseModel):
    ProvisionedCapacityList: Optional[ProvisionedCapacityList] = None


class ListVaultsOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    VaultList: Optional[VaultList] = None
    Marker: Optional[String] = None


class Grant(BaseModel):
    """
    Contains information about a grant.
    """

    Grantee: Optional[Grantee] = None
    Permission: Optional[Permission] = None


class AccessControlPolicyList(BaseModel):
    __root__: List[Grant]


class S3Location(BaseModel):
    """
    Contains information about the location in Amazon S3 where the select job results are stored.
    """

    BucketName: Optional[String] = None
    Prefix: Optional[String] = None
    Encryption: Optional[Encryption] = None
    CannedACL: Optional[CannedACL] = None
    AccessControlList: Optional[AccessControlPolicyList] = None
    Tagging: Optional[Hashmap] = None
    UserMetadata: Optional[Hashmap] = None
    StorageClass: Optional[StorageClass] = None


class OutputLocation(BaseModel):
    """
    Contains information about the location where the select job results are stored.
    """

    S3: Optional[S3Location] = None


class JobParameters(BaseModel):
    """
    Provides options for defining a job.
    """

    Format: Optional[String] = None
    Type: Optional[String] = None
    ArchiveId: Optional[String] = None
    Description: Optional[String] = None
    SNSTopic: Optional[String] = None
    RetrievalByteRange: Optional[String] = None
    Tier: Optional[String] = None
    InventoryRetrievalParameters: Optional[InventoryRetrievalJobInput] = None
    SelectParameters: Optional[SelectParameters] = None
    OutputLocation: Optional[OutputLocation] = None


class InitiateJobInput(BaseModel):
    """
    Provides options for initiating an Amazon S3 Glacier job.
    """

    jobParameters: Optional[JobParameters] = None


class GlacierJobDescription(BaseModel):
    """
    Contains the description of an Amazon S3 Glacier job.
    """

    JobId: Optional[String] = None
    JobDescription: Optional[String] = None
    Action: Optional[ActionCode] = None
    ArchiveId: Optional[String] = None
    VaultARN: Optional[String] = None
    CreationDate: Optional[String] = None
    Completed: Optional[Boolean] = None
    StatusCode: Optional[StatusCode] = None
    StatusMessage: Optional[String] = None
    ArchiveSizeInBytes: Optional[Size] = None
    InventorySizeInBytes: Optional[Size] = None
    SNSTopic: Optional[String] = None
    CompletionDate: Optional[String] = None
    SHA256TreeHash: Optional[String] = None
    ArchiveSHA256TreeHash: Optional[String] = None
    RetrievalByteRange: Optional[String] = None
    Tier: Optional[String] = None
    InventoryRetrievalParameters: Optional[InventoryRetrievalJobDescription] = None
    JobOutputPath: Optional[String] = None
    SelectParameters: Optional[SelectParameters] = None
    OutputLocation: Optional[OutputLocation] = None


class JobList(BaseModel):
    __root__: List[GlacierJobDescription]


class ListJobsOutput(BaseModel):
    """
    Contains the Amazon S3 Glacier response to your request.
    """

    JobList: Optional[JobList] = None
    Marker: Optional[String] = None

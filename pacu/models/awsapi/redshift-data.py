# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:54:42+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class ValidationException(BaseModel):
    __root__: Any


class ActiveStatementsExceededException(ValidationException):
    pass


class BatchExecuteStatementException(ValidationException):
    pass


class ResourceNotFoundException(ValidationException):
    pass


class InternalServerException(ValidationException):
    pass


class ExecuteStatementException(ValidationException):
    pass


class Location(BaseModel):
    __root__: str


class String(Location):
    pass


class SecretArn(Location):
    pass


class StatementNameString(BaseModel):
    __root__: Annotated[str, Field(max_length=500, min_length=0)]


class Boolean(BaseModel):
    __root__: bool


class Timestamp(BaseModel):
    __root__: datetime


class StatementId(BaseModel):
    __root__: Annotated[
        str, Field(regex='^[a-z0-9]{8}(-[a-z0-9]{4}){3}-[a-z0-9]{12}(:\\d+)?$')
    ]


class Blob(Location):
    pass


class BoxedBoolean(Boolean):
    pass


class BoxedDouble(BaseModel):
    __root__: float


class BoxedLong(BaseModel):
    __root__: int


class Bool(Boolean):
    pass


class Integer(BoxedLong):
    pass


class DatabaseList(BaseModel):
    __root__: List[String]


class Long(BoxedLong):
    pass


class StatementString(Location):
    pass


class StatusString(Enum):
    SUBMITTED = 'SUBMITTED'
    PICKED = 'PICKED'
    STARTED = 'STARTED'
    FINISHED = 'FINISHED'
    ABORTED = 'ABORTED'
    FAILED = 'FAILED'
    ALL = 'ALL'


class PageSize(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=1000.0)]


class FieldModel(BaseModel):
    """
    A data value in a column.
    """

    blobValue: Optional[Blob] = None
    booleanValue: Optional[BoxedBoolean] = None
    doubleValue: Optional[BoxedDouble] = None
    isNull: Optional[BoxedBoolean] = None
    longValue: Optional[BoxedLong] = None
    stringValue: Optional[String] = None


class FieldList(BaseModel):
    __root__: List[FieldModel]


class SqlRecords(BaseModel):
    __root__: List[FieldList]


class SchemaList(DatabaseList):
    pass


class ListStatementsLimit(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=100.0)]


class ParameterName(BaseModel):
    __root__: Annotated[str, Field(regex='^[0-9a-zA-Z_]+$')]


class ParameterValue(BaseModel):
    __root__: Annotated[str, Field(min_length=1)]


class SqlParameter(BaseModel):
    """
    A parameter used in a SQL statement.
    """

    name: ParameterName
    value: ParameterValue


class StatementStringList(BaseModel):
    __root__: List[StatementString]


class StatementStatusString(Enum):
    SUBMITTED = 'SUBMITTED'
    PICKED = 'PICKED'
    STARTED = 'STARTED'
    FINISHED = 'FINISHED'
    ABORTED = 'ABORTED'
    FAILED = 'FAILED'


class SubStatementData(BaseModel):
    """
    Information about an SQL statement.
    """

    CreatedAt: Optional[Timestamp] = None
    Duration: Optional[Long] = None
    Error: Optional[String] = None
    HasResultSet: Optional[Boolean] = None
    Id: StatementId
    QueryString: Optional[StatementString] = None
    RedshiftQueryId: Optional[Long] = None
    ResultRows: Optional[Long] = None
    ResultSize: Optional[Long] = None
    Status: Optional[StatementStatusString] = None
    UpdatedAt: Optional[Timestamp] = None


class TableMember(BaseModel):
    """
    The properties of a table.
    """

    name: Optional[String] = None
    schema_: Annotated[Optional[String], Field(alias='schema')] = None
    type: Optional[String] = None


class BatchExecuteStatementOutput(BaseModel):
    ClusterIdentifier: Optional[Location] = None
    CreatedAt: Optional[Timestamp] = None
    Database: Optional[String] = None
    DbUser: Optional[String] = None
    Id: Optional[StatementId] = None
    SecretArn: Optional[SecretArn] = None


class CancelStatementResponse(BaseModel):
    Status: Optional[Boolean] = None


class CancelStatementRequest(BaseModel):
    Id: StatementId


class DescribeStatementRequest(BaseModel):
    Id: StatementId


class DescribeTableRequest(BaseModel):
    ClusterIdentifier: Location
    ConnectedDatabase: Optional[String] = None
    Database: String
    DbUser: Optional[String] = None
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[String] = None
    Schema: Optional[String] = None
    SecretArn: Optional[SecretArn] = None
    Table: Optional[String] = None


class ExecuteStatementOutput(BatchExecuteStatementOutput):
    pass


class GetStatementResultRequest(BaseModel):
    Id: StatementId
    NextToken: Optional[String] = None


class ListDatabasesResponse(BaseModel):
    Databases: Optional[DatabaseList] = None
    NextToken: Optional[String] = None


class ListDatabasesRequest(BaseModel):
    ClusterIdentifier: Location
    Database: String
    DbUser: Optional[String] = None
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[String] = None
    SecretArn: Optional[SecretArn] = None


class ListSchemasResponse(BaseModel):
    NextToken: Optional[String] = None
    Schemas: Optional[SchemaList] = None


class ListSchemasRequest(BaseModel):
    ClusterIdentifier: Location
    ConnectedDatabase: Optional[String] = None
    Database: String
    DbUser: Optional[String] = None
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[String] = None
    SchemaPattern: Optional[String] = None
    SecretArn: Optional[SecretArn] = None


class ListStatementsRequest(BaseModel):
    MaxResults: Optional[ListStatementsLimit] = None
    NextToken: Optional[String] = None
    RoleLevel: Optional[Boolean] = None
    StatementName: Optional[StatementNameString] = None
    Status: Optional[StatusString] = None


class ListTablesRequest(BaseModel):
    ClusterIdentifier: Location
    ConnectedDatabase: Optional[String] = None
    Database: String
    DbUser: Optional[String] = None
    MaxResults: Optional[PageSize] = None
    NextToken: Optional[String] = None
    SchemaPattern: Optional[String] = None
    SecretArn: Optional[SecretArn] = None
    TablePattern: Optional[String] = None


class SqlList(BaseModel):
    __root__: Annotated[List[StatementString], Field(max_items=40, min_items=1)]


class ColumnMetadata1(BaseModel):
    """
    The properties (metadata) of a column.
    """

    columnDefault: Optional[String] = None
    isCaseSensitive: Optional[Bool] = None
    isCurrency: Optional[Bool] = None
    isSigned: Optional[Bool] = None
    label: Optional[String] = None
    length: Optional[Integer] = None
    name: Optional[String] = None
    nullable: Optional[Integer] = None
    precision: Optional[Integer] = None
    scale: Optional[Integer] = None
    schemaName: Optional[String] = None
    tableName: Optional[String] = None
    typeName: Optional[String] = None


class ColumnList(BaseModel):
    __root__: List[ColumnMetadata1]


class ColumnMetadataList(ColumnList):
    pass


class SqlParametersList(BaseModel):
    __root__: Annotated[List[SqlParameter], Field(min_items=1)]


class SubStatementList(BaseModel):
    __root__: List[SubStatementData]


class TableList(BaseModel):
    __root__: List[TableMember]


class StatementData(BaseModel):
    """
    The SQL statement to run.
    """

    CreatedAt: Optional[Timestamp] = None
    Id: StatementId
    IsBatchStatement: Optional[Boolean] = None
    QueryParameters: Optional[SqlParametersList] = None
    QueryString: Optional[StatementString] = None
    QueryStrings: Optional[StatementStringList] = None
    SecretArn: Optional[SecretArn] = None
    StatementName: Optional[StatementNameString] = None
    Status: Optional[StatusString] = None
    UpdatedAt: Optional[Timestamp] = None


class BatchExecuteStatementInput(BaseModel):
    ClusterIdentifier: Location
    Database: String
    DbUser: Optional[String] = None
    SecretArn: Optional[SecretArn] = None
    Sqls: SqlList
    StatementName: Optional[StatementNameString] = None
    WithEvent: Optional[Boolean] = None


class DescribeStatementResponse(BaseModel):
    ClusterIdentifier: Optional[String] = None
    CreatedAt: Optional[Timestamp] = None
    Database: Optional[String] = None
    DbUser: Optional[String] = None
    Duration: Optional[Long] = None
    Error: Optional[String] = None
    HasResultSet: Optional[Boolean] = None
    Id: StatementId
    QueryParameters: Optional[SqlParametersList] = None
    QueryString: Optional[StatementString] = None
    RedshiftPid: Optional[Long] = None
    RedshiftQueryId: Optional[Long] = None
    ResultRows: Optional[Long] = None
    ResultSize: Optional[Long] = None
    SecretArn: Optional[SecretArn] = None
    Status: Optional[StatusString] = None
    SubStatements: Optional[SubStatementList] = None
    UpdatedAt: Optional[Timestamp] = None


class DescribeTableResponse(BaseModel):
    ColumnList: Optional[ColumnList] = None
    NextToken: Optional[String] = None
    TableName: Optional[String] = None


class ExecuteStatementInput(BaseModel):
    ClusterIdentifier: Location
    Database: String
    DbUser: Optional[String] = None
    Parameters: Optional[SqlParametersList] = None
    SecretArn: Optional[SecretArn] = None
    Sql: StatementString
    StatementName: Optional[StatementNameString] = None
    WithEvent: Optional[Boolean] = None


class GetStatementResultResponse(BaseModel):
    ColumnMetadata: Optional[ColumnMetadataList] = None
    NextToken: Optional[String] = None
    Records: SqlRecords
    TotalNumRows: Optional[Long] = None


class ListTablesResponse(BaseModel):
    NextToken: Optional[String] = None
    Tables: Optional[TableList] = None


class StatementList(BaseModel):
    __root__: List[StatementData]


class ListStatementsResponse(BaseModel):
    NextToken: Optional[String] = None
    Statements: StatementList

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:55:05+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class ResourceNotFoundException(BaseModel):
    __root__: Any


class ValidationException(ResourceNotFoundException):
    pass


class LimitExceededException(ResourceNotFoundException):
    pass


class ConflictException(ResourceNotFoundException):
    pass


class AccessDeniedException(ResourceNotFoundException):
    pass


class InternalServiceErrorException(ResourceNotFoundException):
    pass


class ThrottlingException(ResourceNotFoundException):
    pass


class InvalidParameterException(ResourceNotFoundException):
    pass


class InvalidRequestException(ResourceNotFoundException):
    pass


class ResourceExistsException(ResourceNotFoundException):
    pass


class ResourceUnavailableException(ResourceNotFoundException):
    pass


class ResourceInUseException(ResourceNotFoundException):
    pass


class UnknownResourceException(ResourceNotFoundException):
    pass


class InvalidNextTokenException(ResourceNotFoundException):
    pass


class InvalidPolicyDocument(ResourceNotFoundException):
    pass


class TagResourceResponse(BaseModel):
    pass


class InvalidTagException(ResourceNotFoundException):
    pass


class UntagResourceResponse(TagResourceResponse):
    pass


class AccountId(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=12)]


class Action(Enum):
    ALLOW = 'ALLOW'
    BLOCK = 'BLOCK'
    ALERT = 'ALERT'


class Arn(BaseModel):
    __root__: Annotated[str, Field(max_length=255, min_length=1)]


class CreatorRequestId(Arn):
    pass


class ResourceId(BaseModel):
    __root__: Annotated[str, Field(max_length=64, min_length=1)]


class Priority(BaseModel):
    __root__: int


class Name(BaseModel):
    __root__: Annotated[
        str, Field(max_length=64, regex="(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)")
    ]


class MutationProtectionStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class BlockOverrideDnsType(Enum):
    CNAME = 'CNAME'


class BlockOverrideDomain(Arn):
    pass


class BlockOverrideTtl(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=604800.0)]


class BlockResponse(Enum):
    NODATA = 'NODATA'
    NXDOMAIN = 'NXDOMAIN'
    OVERRIDE = 'OVERRIDE'


class Boolean(BaseModel):
    __root__: bool


class Count(Priority):
    pass


class SecurityGroupIds(BaseModel):
    __root__: List[ResourceId]


class ResolverEndpointDirection(Enum):
    INBOUND = 'INBOUND'
    OUTBOUND = 'OUTBOUND'


class ResolverQueryLogConfigName(BaseModel):
    __root__: Annotated[
        str,
        Field(max_length=64, min_length=1, regex="(?!^[0-9]+$)([a-zA-Z0-9\\-_' ']+)"),
    ]


class DestinationArn(BaseModel):
    __root__: Annotated[str, Field(max_length=600, min_length=1)]


class RuleTypeOption(Enum):
    FORWARD = 'FORWARD'
    SYSTEM = 'SYSTEM'
    RECURSIVE = 'RECURSIVE'


class DomainName(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=1)]


class DomainListFileUrl(BaseModel):
    __root__: Annotated[str, Field(max_length=1024, min_length=1)]


class FilterName(ResourceId):
    pass


class FilterValue(DestinationArn):
    pass


class FirewallConfig(BaseModel):
    """
    Configuration of the firewall behavior provided by DNS Firewall for a single VPC from Amazon Virtual Private Cloud (Amazon VPC).
    """

    Id: Optional[ResourceId] = None
    ResourceId: Optional[ResourceId] = None
    OwnerId: Optional[AccountId] = None
    FirewallFailOpen: Optional[MutationProtectionStatus] = None


class FirewallConfigList(BaseModel):
    __root__: List[FirewallConfig]


class FirewallDomainImportOperation(Enum):
    REPLACE = 'REPLACE'


class Unsigned(Priority):
    pass


class FirewallDomainListStatus(Enum):
    COMPLETE = 'COMPLETE'
    COMPLETE_IMPORT_FAILED = 'COMPLETE_IMPORT_FAILED'
    IMPORTING = 'IMPORTING'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'


class StatusMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=255)]


class ServicePrinciple(BaseModel):
    __root__: Annotated[str, Field(max_length=512, min_length=1)]


class Rfc3339TimeString(BaseModel):
    __root__: Annotated[str, Field(max_length=40, min_length=20)]


class FirewallDomainListMetadata(BaseModel):
    """
    <p>Minimal high-level information for a firewall domain list. The action <a>ListFirewallDomainLists</a> returns an array of these objects. </p> <p>To retrieve full information for a firewall domain list, call <a>GetFirewallDomainList</a> and <a>ListFirewallDomains</a>.</p>
    """

    Id: Optional[ResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[Name] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    ManagedOwnerName: Optional[ServicePrinciple] = None


class FirewallDomainListMetadataList(BaseModel):
    __root__: List[FirewallDomainListMetadata]


class FirewallDomainName(Arn):
    pass


class FirewallDomainUpdateOperation(Enum):
    ADD = 'ADD'
    REMOVE = 'REMOVE'
    REPLACE = 'REPLACE'


class FirewallDomains(BaseModel):
    __root__: List[FirewallDomainName]


class FirewallRuleGroupStatus(Enum):
    COMPLETE = 'COMPLETE'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'


class ShareStatus(Enum):
    NOT_SHARED = 'NOT_SHARED'
    SHARED_WITH_ME = 'SHARED_WITH_ME'
    SHARED_BY_ME = 'SHARED_BY_ME'


class FirewallRuleGroupMetadata(BaseModel):
    """
    <p>Minimal high-level information for a firewall rule group. The action <a>ListFirewallRuleGroups</a> returns an array of these objects. </p> <p>To retrieve full information for a firewall rule group, call <a>GetFirewallRuleGroup</a> and <a>ListFirewallRules</a>.</p>
    """

    Id: Optional[ResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[Name] = None
    OwnerId: Optional[AccountId] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    ShareStatus: Optional[ShareStatus] = None


class FirewallRuleGroupMetadataList(BaseModel):
    __root__: List[FirewallRuleGroupMetadata]


class FirewallRuleGroupPolicy(BaseModel):
    __root__: Annotated[str, Field(max_length=5000)]


class ResolverQueryLogConfigPolicy(FirewallRuleGroupPolicy):
    pass


class ResolverRulePolicy(FirewallRuleGroupPolicy):
    pass


class Ip(BaseModel):
    __root__: Annotated[str, Field(max_length=36, min_length=7)]


class IpAddressCount(Priority):
    pass


class SubnetId(BaseModel):
    __root__: Annotated[str, Field(max_length=32, min_length=1)]


class IpAddressRequest(BaseModel):
    """
    In a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a> request, the IP address that DNS queries originate from (for outbound endpoints) or that you forward DNS queries to (for inbound endpoints). <code>IpAddressRequest</code> also includes the ID of the subnet that contains the IP address.
    """

    SubnetId: SubnetId
    Ip: Optional[Ip] = None


class IpAddressStatus(Enum):
    CREATING = 'CREATING'
    FAILED_CREATION = 'FAILED_CREATION'
    ATTACHING = 'ATTACHING'
    ATTACHED = 'ATTACHED'
    REMAP_DETACHING = 'REMAP_DETACHING'
    REMAP_ATTACHING = 'REMAP_ATTACHING'
    DETACHING = 'DETACHING'
    FAILED_RESOURCE_GONE = 'FAILED_RESOURCE_GONE'
    DELETING = 'DELETING'
    DELETE_FAILED_FAS_EXPIRED = 'DELETE_FAILED_FAS_EXPIRED'


class IpAddressResponse(BaseModel):
    """
    In the response to a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a> request, information about the IP addresses that the Resolver endpoint uses for DNS queries.
    """

    IpId: Optional[ResourceId] = None
    SubnetId: Optional[SubnetId] = None
    Ip: Optional[Ip] = None
    Status: Optional[IpAddressStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class IpAddressesResponse(BaseModel):
    __root__: List[IpAddressResponse]


class ListDomainMaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=5000.0)]


class ListFirewallConfigsMaxResult(BaseModel):
    __root__: Annotated[int, Field(ge=5.0, le=10.0)]


class NextToken(BaseModel):
    __root__: str


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(ge=1.0, le=100.0)]


class SortByKey(ResourceId):
    pass


class SortOrder(Enum):
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


class Port(BaseModel):
    __root__: Annotated[int, Field(ge=0.0, le=65535.0)]


class ResolverDNSSECValidationStatus(Enum):
    ENABLING = 'ENABLING'
    ENABLED = 'ENABLED'
    DISABLING = 'DISABLING'
    DISABLED = 'DISABLED'


class ResolverEndpointStatus(Enum):
    CREATING = 'CREATING'
    OPERATIONAL = 'OPERATIONAL'
    UPDATING = 'UPDATING'
    AUTO_RECOVERING = 'AUTO_RECOVERING'
    ACTION_NEEDED = 'ACTION_NEEDED'
    DELETING = 'DELETING'


class ResolverQueryLogConfigStatus(Enum):
    CREATING = 'CREATING'
    CREATED = 'CREATED'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class ResolverQueryLogConfigAssociationStatus(Enum):
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'
    ACTION_NEEDED = 'ACTION_NEEDED'
    DELETING = 'DELETING'
    FAILED = 'FAILED'


class ResolverQueryLogConfigAssociationError(Enum):
    NONE = 'NONE'
    DESTINATION_NOT_FOUND = 'DESTINATION_NOT_FOUND'
    ACCESS_DENIED = 'ACCESS_DENIED'
    INTERNAL_SERVICE_ERROR = 'INTERNAL_SERVICE_ERROR'


class ResolverQueryLogConfigAssociationErrorMessage(NextToken):
    pass


class ResolverRuleStatus(Enum):
    COMPLETE = 'COMPLETE'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    FAILED = 'FAILED'


class ResolverRuleAssociationStatus(Enum):
    CREATING = 'CREATING'
    COMPLETE = 'COMPLETE'
    DELETING = 'DELETING'
    FAILED = 'FAILED'
    OVERRIDDEN = 'OVERRIDDEN'


class TagKey(BaseModel):
    __root__: Annotated[str, Field(max_length=128, min_length=1)]


class TagValue(BaseModel):
    __root__: Annotated[str, Field(max_length=256, min_length=0)]


class Tag(BaseModel):
    """
    One tag that you want to add to the specified resource. A tag consists of a <code>Key</code> (a name for the tag) and a <code>Value</code>.
    """

    Key: TagKey
    Value: TagValue


class TagKeyList(BaseModel):
    __root__: Annotated[List[TagKey], Field(max_items=200)]


class TargetAddress(BaseModel):
    """
    In a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a> request, an array of the IPs that you want to forward DNS queries to.
    """

    Ip: Ip
    Port: Optional[Port] = None


class Validation(Enum):
    ENABLE = 'ENABLE'
    DISABLE = 'DISABLE'


class AssociateResolverQueryLogConfigRequest(BaseModel):
    ResolverQueryLogConfigId: ResourceId
    ResourceId: ResourceId


class AssociateResolverRuleRequest(BaseModel):
    ResolverRuleId: ResourceId
    Name: Optional[Name] = None
    VPCId: ResourceId


class CreateFirewallRuleRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    FirewallRuleGroupId: ResourceId
    FirewallDomainListId: ResourceId
    Priority: Priority
    Action: Action
    BlockResponse: Optional[BlockResponse] = None
    BlockOverrideDomain: Optional[BlockOverrideDomain] = None
    BlockOverrideDnsType: Optional[BlockOverrideDnsType] = None
    BlockOverrideTtl: Optional[BlockOverrideTtl] = None
    Name: Name


class DeleteFirewallDomainListRequest(BaseModel):
    FirewallDomainListId: ResourceId


class DeleteFirewallRuleRequest(BaseModel):
    FirewallRuleGroupId: ResourceId
    FirewallDomainListId: ResourceId


class DeleteFirewallRuleGroupRequest(BaseModel):
    FirewallRuleGroupId: ResourceId


class DeleteResolverEndpointRequest(BaseModel):
    ResolverEndpointId: ResourceId


class DeleteResolverQueryLogConfigRequest(BaseModel):
    ResolverQueryLogConfigId: ResourceId


class DeleteResolverRuleRequest(BaseModel):
    ResolverRuleId: ResourceId


class DisassociateFirewallRuleGroupRequest(BaseModel):
    FirewallRuleGroupAssociationId: ResourceId


class DisassociateResolverQueryLogConfigRequest(BaseModel):
    ResolverQueryLogConfigId: ResourceId
    ResourceId: ResourceId


class DisassociateResolverRuleRequest(BaseModel):
    VPCId: ResourceId
    ResolverRuleId: ResourceId


class GetFirewallConfigResponse(BaseModel):
    FirewallConfig: Optional[FirewallConfig] = None


class GetFirewallConfigRequest(BaseModel):
    ResourceId: ResourceId


class GetFirewallDomainListRequest(BaseModel):
    FirewallDomainListId: ResourceId


class GetFirewallRuleGroupRequest(BaseModel):
    FirewallRuleGroupId: ResourceId


class GetFirewallRuleGroupAssociationRequest(BaseModel):
    FirewallRuleGroupAssociationId: ResourceId


class GetFirewallRuleGroupPolicyResponse(BaseModel):
    FirewallRuleGroupPolicy: Optional[FirewallRuleGroupPolicy] = None


class GetFirewallRuleGroupPolicyRequest(BaseModel):
    Arn: Arn


class GetResolverDnssecConfigRequest(BaseModel):
    ResourceId: ResourceId


class GetResolverEndpointRequest(BaseModel):
    ResolverEndpointId: ResourceId


class GetResolverQueryLogConfigRequest(BaseModel):
    ResolverQueryLogConfigId: ResourceId


class GetResolverQueryLogConfigAssociationRequest(BaseModel):
    ResolverQueryLogConfigAssociationId: ResourceId


class GetResolverQueryLogConfigPolicyResponse(BaseModel):
    ResolverQueryLogConfigPolicy: Optional[ResolverQueryLogConfigPolicy] = None


class GetResolverQueryLogConfigPolicyRequest(BaseModel):
    Arn: Arn


class GetResolverRuleRequest(BaseModel):
    ResolverRuleId: ResourceId


class GetResolverRuleAssociationRequest(BaseModel):
    ResolverRuleAssociationId: ResourceId


class GetResolverRulePolicyResponse(BaseModel):
    ResolverRulePolicy: Optional[ResolverRulePolicy] = None


class GetResolverRulePolicyRequest(BaseModel):
    Arn: Arn


class ImportFirewallDomainsResponse(BaseModel):
    Id: Optional[ResourceId] = None
    Name: Optional[Name] = None
    Status: Optional[FirewallDomainListStatus] = None
    StatusMessage: Optional[StatusMessage] = None


class ImportFirewallDomainsRequest(BaseModel):
    FirewallDomainListId: ResourceId
    Operation: FirewallDomainImportOperation
    DomainFileUrl: DomainListFileUrl


class ListFirewallConfigsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FirewallConfigs: Optional[FirewallConfigList] = None


class ListFirewallConfigsRequest(BaseModel):
    MaxResults: Optional[ListFirewallConfigsMaxResult] = None
    NextToken: Optional[NextToken] = None


class ListFirewallDomainListsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FirewallDomainLists: Optional[FirewallDomainListMetadataList] = None


class ListFirewallDomainListsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListFirewallDomainsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    Domains: Optional[FirewallDomains] = None


class ListFirewallDomainsRequest(BaseModel):
    FirewallDomainListId: ResourceId
    MaxResults: Optional[ListDomainMaxResults] = None
    NextToken: Optional[NextToken] = None


class ListFirewallRuleGroupAssociationsRequest(BaseModel):
    FirewallRuleGroupId: Optional[ResourceId] = None
    VpcId: Optional[ResourceId] = None
    Priority: Optional[Priority] = None
    Status: Optional[FirewallRuleGroupStatus] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListFirewallRuleGroupsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FirewallRuleGroups: Optional[FirewallRuleGroupMetadataList] = None


class ListFirewallRuleGroupsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListFirewallRulesRequest(BaseModel):
    FirewallRuleGroupId: ResourceId
    Priority: Optional[Priority] = None
    Action: Optional[Action] = None
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListResolverEndpointIpAddressesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    IpAddresses: Optional[IpAddressesResponse] = None


class ListResolverEndpointIpAddressesRequest(BaseModel):
    ResolverEndpointId: ResourceId
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceArn: Arn
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None


class PutFirewallRuleGroupPolicyResponse(BaseModel):
    ReturnValue: Optional[Boolean] = None


class PutFirewallRuleGroupPolicyRequest(BaseModel):
    Arn: Arn
    FirewallRuleGroupPolicy: FirewallRuleGroupPolicy


class PutResolverQueryLogConfigPolicyResponse(PutFirewallRuleGroupPolicyResponse):
    """
    The response to a <code>PutResolverQueryLogConfigPolicy</code> request.
    """

    pass


class PutResolverQueryLogConfigPolicyRequest(BaseModel):
    Arn: Arn
    ResolverQueryLogConfigPolicy: ResolverQueryLogConfigPolicy


class PutResolverRulePolicyResponse(PutFirewallRuleGroupPolicyResponse):
    """
    The response to a <code>PutResolverRulePolicy</code> request.
    """

    pass


class PutResolverRulePolicyRequest(BaseModel):
    Arn: Arn
    ResolverRulePolicy: ResolverRulePolicy


class UntagResourceRequest(BaseModel):
    ResourceArn: Arn
    TagKeys: TagKeyList


class UpdateFirewallConfigResponse(GetFirewallConfigResponse):
    pass


class UpdateFirewallConfigRequest(BaseModel):
    ResourceId: ResourceId
    FirewallFailOpen: MutationProtectionStatus


class UpdateFirewallDomainsResponse(ImportFirewallDomainsResponse):
    pass


class UpdateFirewallDomainsRequest(BaseModel):
    FirewallDomainListId: ResourceId
    Operation: FirewallDomainUpdateOperation
    Domains: FirewallDomains


class UpdateFirewallRuleRequest(BaseModel):
    FirewallRuleGroupId: ResourceId
    FirewallDomainListId: ResourceId
    Priority: Optional[Priority] = None
    Action: Optional[Action] = None
    BlockResponse: Optional[BlockResponse] = None
    BlockOverrideDomain: Optional[BlockOverrideDomain] = None
    BlockOverrideDnsType: Optional[BlockOverrideDnsType] = None
    BlockOverrideTtl: Optional[BlockOverrideTtl] = None
    Name: Optional[Name] = None


class UpdateFirewallRuleGroupAssociationRequest(BaseModel):
    FirewallRuleGroupAssociationId: ResourceId
    Priority: Optional[Priority] = None
    MutationProtection: Optional[MutationProtectionStatus] = None
    Name: Optional[Name] = None


class UpdateResolverDnssecConfigRequest(BaseModel):
    ResourceId: ResourceId
    Validation: Validation


class UpdateResolverEndpointRequest(BaseModel):
    ResolverEndpointId: ResourceId
    Name: Optional[Name] = None


class TagList(BaseModel):
    __root__: Annotated[List[Tag], Field(max_items=200)]


class FirewallRuleGroupAssociation(BaseModel):
    """
    An association between a firewall rule group and a VPC, which enables DNS filtering for the VPC.
    """

    Id: Optional[ResourceId] = None
    Arn: Optional[Arn] = None
    FirewallRuleGroupId: Optional[ResourceId] = None
    VpcId: Optional[ResourceId] = None
    Name: Optional[Name] = None
    Priority: Optional[Priority] = None
    MutationProtection: Optional[MutationProtectionStatus] = None
    ManagedOwnerName: Optional[ServicePrinciple] = None
    Status: Optional[FirewallRuleGroupStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class IpAddressUpdate(BaseModel):
    """
    In an <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html">UpdateResolverEndpoint</a> request, information about an IP address to update.
    """

    IpId: Optional[ResourceId] = None
    SubnetId: Optional[SubnetId] = None
    Ip: Optional[Ip] = None


class ResolverEndpoint(BaseModel):
    """
    In the response to a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverEndpoint.html">CreateResolverEndpoint</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverEndpoint.html">DeleteResolverEndpoint</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverEndpoint.html">GetResolverEndpoint</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>, or <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverEndpoint.html">UpdateResolverEndpoint</a> request, a complex type that contains settings for an existing inbound or outbound Resolver endpoint.
    """

    Id: Optional[ResourceId] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    Arn: Optional[Arn] = None
    Name: Optional[Name] = None
    SecurityGroupIds: Optional[SecurityGroupIds] = None
    Direction: Optional[ResolverEndpointDirection] = None
    IpAddressCount: Optional[IpAddressCount] = None
    HostVPCId: Optional[ResourceId] = None
    Status: Optional[ResolverEndpointStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class ResolverQueryLogConfigAssociation(BaseModel):
    """
    In the response to an <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverQueryLogConfig.html">AssociateResolverQueryLogConfig</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverQueryLogConfig.html">DisassociateResolverQueryLogConfig</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfigAssociation.html">GetResolverQueryLogConfigAssociation</a>, or <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>, request, a complex type that contains settings for a specified association between an Amazon VPC and a query logging configuration.
    """

    Id: Optional[ResourceId] = None
    ResolverQueryLogConfigId: Optional[ResourceId] = None
    ResourceId: Optional[ResourceId] = None
    Status: Optional[ResolverQueryLogConfigAssociationStatus] = None
    Error: Optional[ResolverQueryLogConfigAssociationError] = None
    ErrorMessage: Optional[ResolverQueryLogConfigAssociationErrorMessage] = None
    CreationTime: Optional[Rfc3339TimeString] = None


class ResolverRuleAssociation(BaseModel):
    """
    In the response to an <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_AssociateResolverRule.html">AssociateResolverRule</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DisassociateResolverRule.html">DisassociateResolverRule</a>, or <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a> request, provides information about an association between a Resolver rule and a VPC. The association determines which DNS queries that originate in the VPC are forwarded to your network.
    """

    Id: Optional[ResourceId] = None
    ResolverRuleId: Optional[ResourceId] = None
    Name: Optional[Name] = None
    VPCId: Optional[ResourceId] = None
    Status: Optional[ResolverRuleAssociationStatus] = None
    StatusMessage: Optional[StatusMessage] = None


class FirewallDomainList(BaseModel):
    """
    <p>High-level information about a list of firewall domains for use in a <a>FirewallRule</a>. This is returned by <a>GetFirewallDomainList</a>.</p> <p>To retrieve the domains that are defined for this domain list, call <a>ListFirewallDomains</a>.</p>
    """

    Id: Optional[ResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[Name] = None
    DomainCount: Optional[Unsigned] = None
    Status: Optional[FirewallDomainListStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    ManagedOwnerName: Optional[ServicePrinciple] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class FirewallRuleGroup(BaseModel):
    """
    High-level information for a firewall rule group. A firewall rule group is a collection of rules that DNS Firewall uses to filter DNS network traffic for a VPC. To retrieve the rules for the rule group, call <a>ListFirewallRules</a>.
    """

    Id: Optional[ResourceId] = None
    Arn: Optional[Arn] = None
    Name: Optional[Name] = None
    RuleCount: Optional[Unsigned] = None
    Status: Optional[FirewallRuleGroupStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    OwnerId: Optional[AccountId] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    ShareStatus: Optional[ShareStatus] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class FirewallRule(BaseModel):
    """
    A single firewall rule in a rule group.
    """

    FirewallRuleGroupId: Optional[ResourceId] = None
    FirewallDomainListId: Optional[ResourceId] = None
    Name: Optional[Name] = None
    Priority: Optional[Priority] = None
    Action: Optional[Action] = None
    BlockResponse: Optional[BlockResponse] = None
    BlockOverrideDomain: Optional[BlockOverrideDomain] = None
    BlockOverrideDnsType: Optional[BlockOverrideDnsType] = None
    BlockOverrideTtl: Optional[Unsigned] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class IpAddressesRequest(BaseModel):
    __root__: Annotated[List[IpAddressRequest], Field(max_items=10, min_items=1)]


class ResolverQueryLogConfig(BaseModel):
    """
    In the response to a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverQueryLogConfig.html">CreateResolverQueryLogConfig</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverQueryLogConfig.html">DeleteResolverQueryLogConfig</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverQueryLogConfig.html">GetResolverQueryLogConfig</a>, or <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a> request, a complex type that contains settings for one query logging configuration.
    """

    Id: Optional[ResourceId] = None
    OwnerId: Optional[AccountId] = None
    Status: Optional[ResolverQueryLogConfigStatus] = None
    ShareStatus: Optional[ShareStatus] = None
    AssociationCount: Optional[Count] = None
    Arn: Optional[Arn] = None
    Name: Optional[ResolverQueryLogConfigName] = None
    DestinationArn: Optional[DestinationArn] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    CreationTime: Optional[Rfc3339TimeString] = None


class TargetList(BaseModel):
    __root__: Annotated[List[TargetAddress], Field(min_items=1)]


class ResolverRule(BaseModel):
    """
    For queries that originate in your VPC, detailed information about a Resolver rule, which specifies how to route DNS queries out of the VPC. The <code>ResolverRule</code> parameter appears in the response to a <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_CreateResolverRule.html">CreateResolverRule</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_DeleteResolverRule.html">DeleteResolverRule</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_GetResolverRule.html">GetResolverRule</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>, or <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html">UpdateResolverRule</a> request.
    """

    Id: Optional[ResourceId] = None
    CreatorRequestId: Optional[CreatorRequestId] = None
    Arn: Optional[Arn] = None
    DomainName: Optional[DomainName] = None
    Status: Optional[ResolverRuleStatus] = None
    StatusMessage: Optional[StatusMessage] = None
    RuleType: Optional[RuleTypeOption] = None
    Name: Optional[Name] = None
    TargetIps: Optional[TargetList] = None
    ResolverEndpointId: Optional[ResourceId] = None
    OwnerId: Optional[AccountId] = None
    ShareStatus: Optional[ShareStatus] = None
    CreationTime: Optional[Rfc3339TimeString] = None
    ModificationTime: Optional[Rfc3339TimeString] = None


class FilterValues(BaseModel):
    __root__: List[FilterValue]


class Filter(BaseModel):
    """
    <p>For Resolver list operations (<a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverEndpoints.html">ListResolverEndpoints</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRules.html">ListResolverRules</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverRuleAssociations.html">ListResolverRuleAssociations</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigs.html">ListResolverQueryLogConfigs</a>, <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverQueryLogConfigAssociations.html">ListResolverQueryLogConfigAssociations</a>), and <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_ListResolverDnssecConfigs.html">ListResolverDnssecConfigs</a>), an optional specification to return a subset of objects.</p> <p>To filter objects, such as Resolver endpoints or Resolver rules, you specify <code>Name</code> and <code>Values</code>. For example, to list only inbound Resolver endpoints, specify <code>Direction</code> for <code>Name</code> and specify <code>INBOUND</code> for <code>Values</code>. </p>
    """

    Name: Optional[FilterName] = None
    Values: Optional[FilterValues] = None


class Filters(BaseModel):
    __root__: List[Filter]


class FirewallRuleGroupAssociations(BaseModel):
    __root__: List[FirewallRuleGroupAssociation]


class FirewallRules(BaseModel):
    __root__: List[FirewallRule]


class ResolverDnssecConfig(BaseModel):
    """
    A complex type that contains information about a configuration for DNSSEC validation.
    """

    Id: Optional[ResourceId] = None
    OwnerId: Optional[AccountId] = None
    ResourceId: Optional[ResourceId] = None
    ValidationStatus: Optional[ResolverDNSSECValidationStatus] = None


class ResolverDnssecConfigList(BaseModel):
    __root__: List[ResolverDnssecConfig]


class ResolverEndpoints(BaseModel):
    __root__: List[ResolverEndpoint]


class ResolverQueryLogConfigAssociationList(BaseModel):
    __root__: List[ResolverQueryLogConfigAssociation]


class ResolverQueryLogConfigList(BaseModel):
    __root__: List[ResolverQueryLogConfig]


class ResolverRuleAssociations(BaseModel):
    __root__: List[ResolverRuleAssociation]


class ResolverRules(BaseModel):
    __root__: List[ResolverRule]


class ResolverRuleConfig(BaseModel):
    """
    In an <a href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_UpdateResolverRule.html">UpdateResolverRule</a> request, information about the changes that you want to make.
    """

    Name: Optional[Name] = None
    TargetIps: Optional[TargetList] = None
    ResolverEndpointId: Optional[ResourceId] = None


class AssociateFirewallRuleGroupResponse(BaseModel):
    FirewallRuleGroupAssociation: Optional[FirewallRuleGroupAssociation] = None


class AssociateFirewallRuleGroupRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    FirewallRuleGroupId: ResourceId
    VpcId: ResourceId
    Priority: Priority
    Name: Name
    MutationProtection: Optional[MutationProtectionStatus] = None
    Tags: Optional[TagList] = None


class AssociateResolverEndpointIpAddressResponse(BaseModel):
    ResolverEndpoint: Optional[ResolverEndpoint] = None


class AssociateResolverEndpointIpAddressRequest(BaseModel):
    ResolverEndpointId: ResourceId
    IpAddress: IpAddressUpdate


class AssociateResolverQueryLogConfigResponse(BaseModel):
    ResolverQueryLogConfigAssociation: Optional[
        ResolverQueryLogConfigAssociation
    ] = None


class AssociateResolverRuleResponse(BaseModel):
    ResolverRuleAssociation: Optional[ResolverRuleAssociation] = None


class CreateFirewallDomainListResponse(BaseModel):
    FirewallDomainList: Optional[FirewallDomainList] = None


class CreateFirewallDomainListRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    Name: Name
    Tags: Optional[TagList] = None


class CreateFirewallRuleResponse(BaseModel):
    FirewallRule: Optional[FirewallRule] = None


class CreateFirewallRuleGroupResponse(BaseModel):
    FirewallRuleGroup: Optional[FirewallRuleGroup] = None


class CreateFirewallRuleGroupRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    Name: Name
    Tags: Optional[TagList] = None


class CreateResolverEndpointResponse(AssociateResolverEndpointIpAddressResponse):
    pass


class CreateResolverEndpointRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    Name: Optional[Name] = None
    SecurityGroupIds: SecurityGroupIds
    Direction: ResolverEndpointDirection
    IpAddresses: IpAddressesRequest
    Tags: Optional[TagList] = None


class CreateResolverQueryLogConfigResponse(BaseModel):
    ResolverQueryLogConfig: Optional[ResolverQueryLogConfig] = None


class CreateResolverQueryLogConfigRequest(BaseModel):
    Name: ResolverQueryLogConfigName
    DestinationArn: DestinationArn
    CreatorRequestId: CreatorRequestId
    Tags: Optional[TagList] = None


class CreateResolverRuleResponse(BaseModel):
    ResolverRule: Optional[ResolverRule] = None


class CreateResolverRuleRequest(BaseModel):
    CreatorRequestId: CreatorRequestId
    Name: Optional[Name] = None
    RuleType: RuleTypeOption
    DomainName: DomainName
    TargetIps: Optional[TargetList] = None
    ResolverEndpointId: Optional[ResourceId] = None
    Tags: Optional[TagList] = None


class DeleteFirewallDomainListResponse(CreateFirewallDomainListResponse):
    pass


class DeleteFirewallRuleResponse(CreateFirewallRuleResponse):
    pass


class DeleteFirewallRuleGroupResponse(CreateFirewallRuleGroupResponse):
    pass


class DeleteResolverEndpointResponse(AssociateResolverEndpointIpAddressResponse):
    pass


class DeleteResolverQueryLogConfigResponse(CreateResolverQueryLogConfigResponse):
    pass


class DeleteResolverRuleResponse(CreateResolverRuleResponse):
    pass


class DisassociateFirewallRuleGroupResponse(AssociateFirewallRuleGroupResponse):
    pass


class DisassociateResolverEndpointIpAddressResponse(
    AssociateResolverEndpointIpAddressResponse
):
    pass


class DisassociateResolverEndpointIpAddressRequest(BaseModel):
    ResolverEndpointId: ResourceId
    IpAddress: IpAddressUpdate


class DisassociateResolverQueryLogConfigResponse(
    AssociateResolverQueryLogConfigResponse
):
    pass


class DisassociateResolverRuleResponse(AssociateResolverRuleResponse):
    pass


class GetFirewallDomainListResponse(CreateFirewallDomainListResponse):
    pass


class GetFirewallRuleGroupResponse(CreateFirewallRuleGroupResponse):
    pass


class GetFirewallRuleGroupAssociationResponse(AssociateFirewallRuleGroupResponse):
    pass


class GetResolverDnssecConfigResponse(BaseModel):
    ResolverDNSSECConfig: Optional[ResolverDnssecConfig] = None


class GetResolverEndpointResponse(AssociateResolverEndpointIpAddressResponse):
    pass


class GetResolverQueryLogConfigResponse(CreateResolverQueryLogConfigResponse):
    pass


class GetResolverQueryLogConfigAssociationResponse(
    AssociateResolverQueryLogConfigResponse
):
    pass


class GetResolverRuleResponse(CreateResolverRuleResponse):
    pass


class GetResolverRuleAssociationResponse(AssociateResolverRuleResponse):
    pass


class ListFirewallRuleGroupAssociationsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FirewallRuleGroupAssociations: Optional[FirewallRuleGroupAssociations] = None


class ListFirewallRulesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    FirewallRules: Optional[FirewallRules] = None


class ListResolverDnssecConfigsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    ResolverDnssecConfigs: Optional[ResolverDnssecConfigList] = None


class ListResolverDnssecConfigsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None


class ListResolverEndpointsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    ResolverEndpoints: Optional[ResolverEndpoints] = None


class ListResolverEndpointsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None


class ListResolverQueryLogConfigAssociationsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[Count] = None
    TotalFilteredCount: Optional[Count] = None
    ResolverQueryLogConfigAssociations: Optional[
        ResolverQueryLogConfigAssociationList
    ] = None


class ListResolverQueryLogConfigAssociationsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None
    SortBy: Optional[SortByKey] = None
    SortOrder: Optional[SortOrder] = None


class ListResolverQueryLogConfigsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    TotalCount: Optional[Count] = None
    TotalFilteredCount: Optional[Count] = None
    ResolverQueryLogConfigs: Optional[ResolverQueryLogConfigList] = None


class ListResolverQueryLogConfigsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None
    SortBy: Optional[SortByKey] = None
    SortOrder: Optional[SortOrder] = None


class ListResolverRuleAssociationsResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    ResolverRuleAssociations: Optional[ResolverRuleAssociations] = None


class ListResolverRuleAssociationsRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None


class ListResolverRulesResponse(BaseModel):
    NextToken: Optional[NextToken] = None
    MaxResults: Optional[MaxResults] = None
    ResolverRules: Optional[ResolverRules] = None


class ListResolverRulesRequest(BaseModel):
    MaxResults: Optional[MaxResults] = None
    NextToken: Optional[NextToken] = None
    Filters: Optional[Filters] = None


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[TagList] = None
    NextToken: Optional[NextToken] = None


class TagResourceRequest(BaseModel):
    ResourceArn: Arn
    Tags: TagList


class UpdateFirewallRuleResponse(CreateFirewallRuleResponse):
    pass


class UpdateFirewallRuleGroupAssociationResponse(AssociateFirewallRuleGroupResponse):
    pass


class UpdateResolverDnssecConfigResponse(GetResolverDnssecConfigResponse):
    pass


class UpdateResolverEndpointResponse(AssociateResolverEndpointIpAddressResponse):
    pass


class UpdateResolverRuleResponse(CreateResolverRuleResponse):
    pass


class UpdateResolverRuleRequest(BaseModel):
    ResolverRuleId: ResourceId
    Config_: Annotated[ResolverRuleConfig, Field(alias='Config')]

# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2021-12-31T02:52:03+00:00

from __future__ import annotations

from enum import Enum
from typing import Annotated, Any, List, Optional

from pydantic import BaseModel, Field


class InvalidInputException(BaseModel):
    __root__: Any


class LimitExceededException(InvalidInputException):
    pass


class InternalException(InvalidInputException):
    pass


class AccessDeniedException(InvalidInputException):
    pass


class AWSAccountId(BaseModel):
    __root__: Annotated[str, Field(regex='[0-9]{12}')]


class BucketName(BaseModel):
    __root__: Annotated[str, Field(max_length=500)]


class S3OneTimeClassificationType(Enum):
    FULL = 'FULL'
    NONE = 'NONE'


class S3ContinuousClassificationType(Enum):
    FULL = 'FULL'


class ClassificationType(BaseModel):
    """
    The classification type that Amazon Macie Classic applies to the associated S3 resources.
    """

    oneTime: S3OneTimeClassificationType
    continuous: S3ContinuousClassificationType


class ClassificationTypeUpdate(BaseModel):
    """
    The classification type that Amazon Macie Classic applies to the associated S3 resources. At least one of the classification types (oneTime or continuous) must be specified.
    """

    oneTime: Optional[S3OneTimeClassificationType] = None
    continuous: Optional[S3ContinuousClassificationType] = None


class ErrorCode(BaseModel):
    __root__: Annotated[
        str, Field(description='Error code for the exception', max_length=10)
    ]


class ExceptionMessage(BaseModel):
    __root__: Annotated[str, Field(max_length=10000)]


class NextToken(BucketName):
    pass


class MaxResults(BaseModel):
    __root__: Annotated[int, Field(le=250.0)]


class MemberAccount(BaseModel):
    """
    Contains information about the Amazon Macie Classic member account.
    """

    accountId: Optional[AWSAccountId] = None


class Prefix(ExceptionMessage):
    pass


class S3ResourceClassification(BaseModel):
    """
    The S3 resources that you want to associate with Amazon Macie Classic for monitoring and data classification. This data type is used as a request parameter in the AssociateS3Resources action and a response parameter in the ListS3Resources action.
    """

    bucketName: BucketName
    prefix: Optional[Prefix] = None
    classificationType: ClassificationType


class S3ResourceClassificationUpdate(BaseModel):
    """
    The S3 resources whose classification types you want to update. This data type is used as a request parameter in the UpdateS3Resources action.
    """

    bucketName: BucketName
    prefix: Optional[Prefix] = None
    classificationTypeUpdate: ClassificationTypeUpdate


class S3ResourcesClassificationUpdate(BaseModel):
    __root__: List[S3ResourceClassificationUpdate]


class AssociateMemberAccountRequest(BaseModel):
    memberAccountId: AWSAccountId


class DisassociateMemberAccountRequest(BaseModel):
    memberAccountId: AWSAccountId


class ListMemberAccountsRequest(BaseModel):
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class ListS3ResourcesRequest(BaseModel):
    memberAccountId: Optional[AWSAccountId] = None
    nextToken: Optional[NextToken] = None
    maxResults: Optional[MaxResults] = None


class UpdateS3ResourcesRequest(BaseModel):
    memberAccountId: Optional[AWSAccountId] = None
    s3ResourcesUpdate: S3ResourcesClassificationUpdate


class S3ResourcesClassification(BaseModel):
    __root__: List[S3ResourceClassification]


class S3Resource(BaseModel):
    """
    Contains information about the S3 resource. This data type is used as a request parameter in the DisassociateS3Resources action and can be used as a response parameter in the AssociateS3Resources and UpdateS3Resources actions.
    """

    bucketName: BucketName
    prefix: Optional[Prefix] = None


class FailedS3Resource(BaseModel):
    """
    Includes details about the failed S3 resources.
    """

    failedItem: Optional[S3Resource] = None
    errorCode: Optional[ErrorCode] = None
    errorMessage: Optional[ExceptionMessage] = None


class MemberAccounts(BaseModel):
    __root__: List[MemberAccount]


class AssociateS3ResourcesRequest(BaseModel):
    memberAccountId: Optional[AWSAccountId] = None
    s3Resources: S3ResourcesClassification


class ListMemberAccountsResult(BaseModel):
    memberAccounts: Optional[MemberAccounts] = None
    nextToken: Optional[NextToken] = None


class ListS3ResourcesResult(BaseModel):
    s3Resources: Optional[S3ResourcesClassification] = None
    nextToken: Optional[NextToken] = None


class FailedS3Resources(BaseModel):
    __root__: List[FailedS3Resource]


class S3Resources(BaseModel):
    __root__: List[S3Resource]


class AssociateS3ResourcesResult(BaseModel):
    failedS3Resources: Optional[FailedS3Resources] = None


class DisassociateS3ResourcesResult(AssociateS3ResourcesResult):
    pass


class DisassociateS3ResourcesRequest(BaseModel):
    memberAccountId: Optional[AWSAccountId] = None
    associatedS3Resources: S3Resources


class UpdateS3ResourcesResult(AssociateS3ResourcesResult):
    pass
